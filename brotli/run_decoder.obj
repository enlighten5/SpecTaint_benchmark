
run_decoder:     file format elf32-i386


Disassembly of section .init:

08049648 <_init>:
 8049648:	53                   	push   %ebx
 8049649:	83 ec 08             	sub    $0x8,%esp
 804964c:	e8 9f 04 00 00       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049651:	81 c3 af 69 06 00    	add    $0x669af,%ebx
 8049657:	8b 83 e0 ff ff ff    	mov    -0x20(%ebx),%eax
 804965d:	85 c0                	test   %eax,%eax
 804965f:	74 05                	je     8049666 <_init+0x1e>
 8049661:	e8 ba 01 00 00       	call   8049820 <__gmon_start__@plt>
 8049666:	83 c4 08             	add    $0x8,%esp
 8049669:	5b                   	pop    %ebx
 804966a:	c3                   	ret    

Disassembly of section .plt:

08049670 <pthread_attr_getstack@plt-0x10>:
 8049670:	ff 35 04 00 0b 08    	pushl  0x80b0004
 8049676:	ff 25 08 00 0b 08    	jmp    *0x80b0008
 804967c:	00 00                	add    %al,(%eax)
	...

08049680 <pthread_attr_getstack@plt>:
 8049680:	ff 25 0c 00 0b 08    	jmp    *0x80b000c
 8049686:	68 00 00 00 00       	push   $0x0
 804968b:	e9 e0 ff ff ff       	jmp    8049670 <_init+0x28>

08049690 <_Unwind_Backtrace@plt>:
 8049690:	ff 25 10 00 0b 08    	jmp    *0x80b0010
 8049696:	68 08 00 00 00       	push   $0x8
 804969b:	e9 d0 ff ff ff       	jmp    8049670 <_init+0x28>

080496a0 <pthread_getattr_np@plt>:
 80496a0:	ff 25 14 00 0b 08    	jmp    *0x80b0014
 80496a6:	68 10 00 00 00       	push   $0x10
 80496ab:	e9 c0 ff ff ff       	jmp    8049670 <_init+0x28>

080496b0 <pthread_attr_destroy@plt>:
 80496b0:	ff 25 18 00 0b 08    	jmp    *0x80b0018
 80496b6:	68 18 00 00 00       	push   $0x18
 80496bb:	e9 b0 ff ff ff       	jmp    8049670 <_init+0x28>

080496c0 <__libc_free@plt>:
 80496c0:	ff 25 1c 00 0b 08    	jmp    *0x80b001c
 80496c6:	68 20 00 00 00       	push   $0x20
 80496cb:	e9 a0 ff ff ff       	jmp    8049670 <_init+0x28>

080496d0 <pthread_self@plt>:
 80496d0:	ff 25 20 00 0b 08    	jmp    *0x80b0020
 80496d6:	68 28 00 00 00       	push   $0x28
 80496db:	e9 90 ff ff ff       	jmp    8049670 <_init+0x28>

080496e0 <ferror@plt>:
 80496e0:	ff 25 24 00 0b 08    	jmp    *0x80b0024
 80496e6:	68 30 00 00 00       	push   $0x30
 80496eb:	e9 80 ff ff ff       	jmp    8049670 <_init+0x28>

080496f0 <fclose@plt>:
 80496f0:	ff 25 28 00 0b 08    	jmp    *0x80b0028
 80496f6:	68 38 00 00 00       	push   $0x38
 80496fb:	e9 70 ff ff ff       	jmp    8049670 <_init+0x28>

08049700 <__asan_default_options@plt>:
 8049700:	ff 25 2c 00 0b 08    	jmp    *0x80b002c
 8049706:	68 40 00 00 00       	push   $0x40
 804970b:	e9 60 ff ff ff       	jmp    8049670 <_init+0x28>

08049710 <sleep@plt>:
 8049710:	ff 25 30 00 0b 08    	jmp    *0x80b0030
 8049716:	68 48 00 00 00       	push   $0x48
 804971b:	e9 50 ff ff ff       	jmp    8049670 <_init+0x28>

08049720 <pthread_key_create@plt>:
 8049720:	ff 25 34 00 0b 08    	jmp    *0x80b0034
 8049726:	68 50 00 00 00       	push   $0x50
 804972b:	e9 40 ff ff ff       	jmp    8049670 <_init+0x28>

08049730 <__stack_chk_fail@plt>:
 8049730:	ff 25 38 00 0b 08    	jmp    *0x80b0038
 8049736:	68 58 00 00 00       	push   $0x58
 804973b:	e9 30 ff ff ff       	jmp    8049670 <_init+0x28>

08049740 <sysconf@plt>:
 8049740:	ff 25 3c 00 0b 08    	jmp    *0x80b003c
 8049746:	68 60 00 00 00       	push   $0x60
 804974b:	e9 20 ff ff ff       	jmp    8049670 <_init+0x28>

08049750 <getuid@plt>:
 8049750:	ff 25 40 00 0b 08    	jmp    *0x80b0040
 8049756:	68 68 00 00 00       	push   $0x68
 804975b:	e9 10 ff ff ff       	jmp    8049670 <_init+0x28>

08049760 <__asan_on_error@plt>:
 8049760:	ff 25 44 00 0b 08    	jmp    *0x80b0044
 8049766:	68 70 00 00 00       	push   $0x70
 804976b:	e9 00 ff ff ff       	jmp    8049670 <_init+0x28>

08049770 <getrlimit@plt>:
 8049770:	ff 25 48 00 0b 08    	jmp    *0x80b0048
 8049776:	68 78 00 00 00       	push   $0x78
 804977b:	e9 f0 fe ff ff       	jmp    8049670 <_init+0x28>

08049780 <fwrite@plt>:
 8049780:	ff 25 4c 00 0b 08    	jmp    *0x80b004c
 8049786:	68 80 00 00 00       	push   $0x80
 804978b:	e9 e0 fe ff ff       	jmp    8049670 <_init+0x28>

08049790 <waitpid@plt>:
 8049790:	ff 25 50 00 0b 08    	jmp    *0x80b0050
 8049796:	68 88 00 00 00       	push   $0x88
 804979b:	e9 d0 fe ff ff       	jmp    8049670 <_init+0x28>

080497a0 <usleep@plt>:
 80497a0:	ff 25 54 00 0b 08    	jmp    *0x80b0054
 80497a6:	68 90 00 00 00       	push   $0x90
 80497ab:	e9 c0 fe ff ff       	jmp    8049670 <_init+0x28>

080497b0 <fread@plt>:
 80497b0:	ff 25 58 00 0b 08    	jmp    *0x80b0058
 80497b6:	68 98 00 00 00       	push   $0x98
 80497bb:	e9 b0 fe ff ff       	jmp    8049670 <_init+0x28>

080497c0 <getpid@plt>:
 80497c0:	ff 25 5c 00 0b 08    	jmp    *0x80b005c
 80497c6:	68 a0 00 00 00       	push   $0xa0
 80497cb:	e9 a0 fe ff ff       	jmp    8049670 <_init+0x28>

080497d0 <__cxa_atexit@plt>:
 80497d0:	ff 25 60 00 0b 08    	jmp    *0x80b0060
 80497d6:	68 a8 00 00 00       	push   $0xa8
 80497db:	e9 90 fe ff ff       	jmp    8049670 <_init+0x28>

080497e0 <setrlimit@plt>:
 80497e0:	ff 25 64 00 0b 08    	jmp    *0x80b0064
 80497e6:	68 b0 00 00 00       	push   $0xb0
 80497eb:	e9 80 fe ff ff       	jmp    8049670 <_init+0x28>

080497f0 <__asan_free_hook@plt>:
 80497f0:	ff 25 68 00 0b 08    	jmp    *0x80b0068
 80497f6:	68 b8 00 00 00       	push   $0xb8
 80497fb:	e9 70 fe ff ff       	jmp    8049670 <_init+0x28>

08049800 <strerror@plt>:
 8049800:	ff 25 6c 00 0b 08    	jmp    *0x80b006c
 8049806:	68 c0 00 00 00       	push   $0xc0
 804980b:	e9 60 fe ff ff       	jmp    8049670 <_init+0x28>

08049810 <getdtablesize@plt>:
 8049810:	ff 25 70 00 0b 08    	jmp    *0x80b0070
 8049816:	68 c8 00 00 00       	push   $0xc8
 804981b:	e9 50 fe ff ff       	jmp    8049670 <_init+0x28>

08049820 <__gmon_start__@plt>:
 8049820:	ff 25 74 00 0b 08    	jmp    *0x80b0074
 8049826:	68 d0 00 00 00       	push   $0xd0
 804982b:	e9 40 fe ff ff       	jmp    8049670 <_init+0x28>

08049830 <__sanitizer_symbolize_code@plt>:
 8049830:	ff 25 78 00 0b 08    	jmp    *0x80b0078
 8049836:	68 d8 00 00 00       	push   $0xd8
 804983b:	e9 30 fe ff ff       	jmp    8049670 <_init+0x28>

08049840 <exit@plt>:
 8049840:	ff 25 7c 00 0b 08    	jmp    *0x80b007c
 8049846:	68 e0 00 00 00       	push   $0xe0
 804984b:	e9 20 fe ff ff       	jmp    8049670 <_init+0x28>

08049850 <dl_iterate_phdr@plt>:
 8049850:	ff 25 80 00 0b 08    	jmp    *0x80b0080
 8049856:	68 e8 00 00 00       	push   $0xe8
 804985b:	e9 10 fe ff ff       	jmp    8049670 <_init+0x28>

08049860 <__libc_malloc@plt>:
 8049860:	ff 25 84 00 0b 08    	jmp    *0x80b0084
 8049866:	68 f0 00 00 00       	push   $0xf0
 804986b:	e9 00 fe ff ff       	jmp    8049670 <_init+0x28>

08049870 <_Unwind_GetIP@plt>:
 8049870:	ff 25 88 00 0b 08    	jmp    *0x80b0088
 8049876:	68 f8 00 00 00       	push   $0xf8
 804987b:	e9 f0 fd ff ff       	jmp    8049670 <_init+0x28>

08049880 <__libc_start_main@plt>:
 8049880:	ff 25 8c 00 0b 08    	jmp    *0x80b008c
 8049886:	68 00 01 00 00       	push   $0x100
 804988b:	e9 e0 fd ff ff       	jmp    8049670 <_init+0x28>

08049890 <execve@plt>:
 8049890:	ff 25 90 00 0b 08    	jmp    *0x80b0090
 8049896:	68 08 01 00 00       	push   $0x108
 804989b:	e9 d0 fd ff ff       	jmp    8049670 <_init+0x28>

080498a0 <__asan_malloc_hook@plt>:
 80498a0:	ff 25 94 00 0b 08    	jmp    *0x80b0094
 80498a6:	68 10 01 00 00       	push   $0x110
 80498ab:	e9 c0 fd ff ff       	jmp    8049670 <_init+0x28>

080498b0 <dlsym@plt>:
 80498b0:	ff 25 98 00 0b 08    	jmp    *0x80b0098
 80498b6:	68 18 01 00 00       	push   $0x118
 80498bb:	e9 b0 fd ff ff       	jmp    8049670 <_init+0x28>

080498c0 <fopen@plt>:
 80498c0:	ff 25 9c 00 0b 08    	jmp    *0x80b009c
 80498c6:	68 20 01 00 00       	push   $0x120
 80498cb:	e9 a0 fd ff ff       	jmp    8049670 <_init+0x28>

080498d0 <__errno_location@plt>:
 80498d0:	ff 25 a0 00 0b 08    	jmp    *0x80b00a0
 80498d6:	68 28 01 00 00       	push   $0x128
 80498db:	e9 90 fd ff ff       	jmp    8049670 <_init+0x28>

080498e0 <syscall@plt>:
 80498e0:	ff 25 a4 00 0b 08    	jmp    *0x80b00a4
 80498e6:	68 30 01 00 00       	push   $0x130
 80498eb:	e9 80 fd ff ff       	jmp    8049670 <_init+0x28>

080498f0 <execl@plt>:
 80498f0:	ff 25 a8 00 0b 08    	jmp    *0x80b00a8
 80498f6:	68 38 01 00 00       	push   $0x138
 80498fb:	e9 70 fd ff ff       	jmp    8049670 <_init+0x28>

08049900 <pipe@plt>:
 8049900:	ff 25 ac 00 0b 08    	jmp    *0x80b00ac
 8049906:	68 40 01 00 00       	push   $0x140
 804990b:	e9 60 fd ff ff       	jmp    8049670 <_init+0x28>

08049910 <fork@plt>:
 8049910:	ff 25 b0 00 0b 08    	jmp    *0x80b00b0
 8049916:	68 48 01 00 00       	push   $0x148
 804991b:	e9 50 fd ff ff       	jmp    8049670 <_init+0x28>

08049920 <pthread_setspecific@plt>:
 8049920:	ff 25 b4 00 0b 08    	jmp    *0x80b00b4
 8049926:	68 50 01 00 00       	push   $0x150
 804992b:	e9 40 fd ff ff       	jmp    8049670 <_init+0x28>

08049930 <__sanitizer_symbolize_data@plt>:
 8049930:	ff 25 b8 00 0b 08    	jmp    *0x80b00b8
 8049936:	68 58 01 00 00       	push   $0x158
 804993b:	e9 30 fd ff ff       	jmp    8049670 <_init+0x28>

08049940 <__cxa_demangle@plt>:
 8049940:	ff 25 bc 00 0b 08    	jmp    *0x80b00bc
 8049946:	68 60 01 00 00       	push   $0x160
 804994b:	e9 20 fd ff ff       	jmp    8049670 <_init+0x28>

08049950 <isatty@plt>:
 8049950:	ff 25 c0 00 0b 08    	jmp    *0x80b00c0
 8049956:	68 68 01 00 00       	push   $0x168
 804995b:	e9 10 fd ff ff       	jmp    8049670 <_init+0x28>

08049960 <abort@plt>:
 8049960:	ff 25 c4 00 0b 08    	jmp    *0x80b00c4
 8049966:	68 70 01 00 00       	push   $0x170
 804996b:	e9 00 fd ff ff       	jmp    8049670 <_init+0x28>

08049970 <madvise@plt>:
 8049970:	ff 25 c8 00 0b 08    	jmp    *0x80b00c8
 8049976:	68 78 01 00 00       	push   $0x178
 804997b:	e9 f0 fc ff ff       	jmp    8049670 <_init+0x28>

08049980 <pthread_getspecific@plt>:
 8049980:	ff 25 cc 00 0b 08    	jmp    *0x80b00cc
 8049986:	68 80 01 00 00       	push   $0x180
 804998b:	e9 e0 fc ff ff       	jmp    8049670 <_init+0x28>

08049990 <__asan_symbolize@plt>:
 8049990:	ff 25 d0 00 0b 08    	jmp    *0x80b00d0
 8049996:	68 88 01 00 00       	push   $0x188
 804999b:	e9 d0 fc ff ff       	jmp    8049670 <_init+0x28>

080499a0 <sigaltstack@plt>:
 80499a0:	ff 25 d4 00 0b 08    	jmp    *0x80b00d4
 80499a6:	68 90 01 00 00       	push   $0x190
 80499ab:	e9 c0 fc ff ff       	jmp    8049670 <_init+0x28>

Disassembly of section .text:

080499b0 <_ZL19scanf_get_char_sizeP14ScanfDirective.isra.1>:
 80499b0:	57                   	push   %edi
 80499b1:	89 c7                	mov    %eax,%edi
 80499b3:	56                   	push   %esi
 80499b4:	89 d6                	mov    %edx,%esi
 80499b6:	53                   	push   %ebx
 80499b7:	e8 34 01 00 00       	call   8049af0 <__x86.get_pc_thunk.bx>
 80499bc:	81 c3 44 66 06 00    	add    $0x66644,%ebx
 80499c2:	83 ec 10             	sub    $0x10,%esp
 80499c5:	0f be 02             	movsbl (%edx),%eax
 80499c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80499cc:	8d 83 48 3e fd ff    	lea    -0x2c1b8(%ebx),%eax
 80499d2:	89 04 24             	mov    %eax,(%esp)
 80499d5:	e8 06 81 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 80499da:	85 c0                	test   %eax,%eax
 80499dc:	74 04                	je     80499e2 <_ZL19scanf_get_char_sizeP14ScanfDirective.isra.1+0x32>
 80499de:	31 c0                	xor    %eax,%eax
 80499e0:	eb 21                	jmp    8049a03 <_ZL19scanf_get_char_sizeP14ScanfDirective.isra.1+0x53>
 80499e2:	0f be 06             	movsbl (%esi),%eax
 80499e5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80499e9:	8d 83 4b 3e fd ff    	lea    -0x2c1b5(%ebx),%eax
 80499ef:	89 04 24             	mov    %eax,(%esp)
 80499f2:	e8 e9 80 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 80499f7:	85 c0                	test   %eax,%eax
 80499f9:	74 e3                	je     80499de <_ZL19scanf_get_char_sizeP14ScanfDirective.isra.1+0x2e>
 80499fb:	31 c0                	xor    %eax,%eax
 80499fd:	80 3f 00             	cmpb   $0x0,(%edi)
 8049a00:	0f 94 c0             	sete   %al
 8049a03:	83 c4 10             	add    $0x10,%esp
 8049a06:	5b                   	pop    %ebx
 8049a07:	5e                   	pop    %esi
 8049a08:	5f                   	pop    %edi
 8049a09:	c3                   	ret    
 8049a0a:	66 90                	xchg   %ax,%ax
 8049a0c:	66 90                	xchg   %ax,%ax
 8049a0e:	66 90                	xchg   %ax,%ax

08049a10 <_GLOBAL__sub_I_asan_allocator2.cc>:
 8049a10:	e8 80 65 00 00       	call   804ff95 <__x86.get_pc_thunk.cx>
 8049a15:	81 c1 eb 65 06 00    	add    $0x665eb,%ecx
 8049a1b:	c6 81 bc ba 02 00 00 	movb   $0x0,0x2babc(%ecx)
 8049a22:	c6 81 e8 ba 02 00 00 	movb   $0x0,0x2bae8(%ecx)
 8049a29:	c6 81 4c b9 00 00 00 	movb   $0x0,0xb94c(%ecx)
 8049a30:	c6 81 4d b9 00 00 00 	movb   $0x0,0xb94d(%ecx)
 8049a37:	c6 81 a0 03 00 00 00 	movb   $0x0,0x3a0(%ecx)
 8049a3e:	c3                   	ret    
 8049a3f:	90                   	nop

08049a40 <_GLOBAL__sub_I_asan_stats.cc>:
 8049a40:	53                   	push   %ebx
 8049a41:	e8 aa 00 00 00       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049a46:	81 c3 ba 65 06 00    	add    $0x665ba,%ebx
 8049a4c:	83 ec 18             	sub    $0x18,%esp
 8049a4f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8049a56:	00 
 8049a57:	8d 83 00 c0 02 00    	lea    0x2c000(%ebx),%eax
 8049a5d:	89 04 24             	mov    %eax,(%esp)
 8049a60:	e8 6b c8 01 00       	call   80662d0 <_ZN11__sanitizer13BlockingMutexC1E17LinkerInitialized>
 8049a65:	83 c4 18             	add    $0x18,%esp
 8049a68:	5b                   	pop    %ebx
 8049a69:	c3                   	ret    
 8049a6a:	66 90                	xchg   %ax,%ax
 8049a6c:	66 90                	xchg   %ax,%ax
 8049a6e:	66 90                	xchg   %ax,%ax

08049a70 <_GLOBAL__sub_I_asan_thread_registry.cc>:
 8049a70:	53                   	push   %ebx
 8049a71:	e8 7a 00 00 00       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049a76:	81 c3 8a 65 06 00    	add    $0x6658a,%ebx
 8049a7c:	83 ec 18             	sub    $0x18,%esp
 8049a7f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8049a86:	00 
 8049a87:	8d 83 40 c0 02 00    	lea    0x2c040(%ebx),%eax
 8049a8d:	89 04 24             	mov    %eax,(%esp)
 8049a90:	e8 fb fe 00 00       	call   8059990 <_ZN6__asan18AsanThreadRegistryC1E17LinkerInitialized>
 8049a95:	83 c4 18             	add    $0x18,%esp
 8049a98:	5b                   	pop    %ebx
 8049a99:	c3                   	ret    
 8049a9a:	66 90                	xchg   %ax,%ax
 8049a9c:	66 90                	xchg   %ax,%ax
 8049a9e:	66 90                	xchg   %ax,%ax

08049aa0 <_GLOBAL__sub_I_asan_globals.cc>:
 8049aa0:	53                   	push   %ebx
 8049aa1:	e8 4a 00 00 00       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049aa6:	81 c3 5a 65 06 00    	add    $0x6655a,%ebx
 8049aac:	83 ec 18             	sub    $0x18,%esp
 8049aaf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8049ab6:	00 
 8049ab7:	8d 83 60 fe 1a 01    	lea    0x11afe60(%ebx),%eax
 8049abd:	89 04 24             	mov    %eax,(%esp)
 8049ac0:	e8 0b c8 01 00       	call   80662d0 <_ZN11__sanitizer13BlockingMutexC1E17LinkerInitialized>
 8049ac5:	83 c4 18             	add    $0x18,%esp
 8049ac8:	5b                   	pop    %ebx
 8049ac9:	c3                   	ret    

08049aca <_start>:
 8049aca:	31 ed                	xor    %ebp,%ebp
 8049acc:	5e                   	pop    %esi
 8049acd:	89 e1                	mov    %esp,%ecx
 8049acf:	83 e4 f0             	and    $0xfffffff0,%esp
 8049ad2:	50                   	push   %eax
 8049ad3:	54                   	push   %esp
 8049ad4:	52                   	push   %edx
 8049ad5:	68 70 2b 08 08       	push   $0x8082b70
 8049ada:	68 00 2b 08 08       	push   $0x8082b00
 8049adf:	51                   	push   %ecx
 8049ae0:	56                   	push   %esi
 8049ae1:	68 6e 6d 06 08       	push   $0x8066d6e
 8049ae6:	e8 95 fd ff ff       	call   8049880 <__libc_start_main@plt>
 8049aeb:	f4                   	hlt    
 8049aec:	66 90                	xchg   %ax,%ax
 8049aee:	66 90                	xchg   %ax,%ax

08049af0 <__x86.get_pc_thunk.bx>:
 8049af0:	8b 1c 24             	mov    (%esp),%ebx
 8049af3:	c3                   	ret    
 8049af4:	66 90                	xchg   %ax,%ax
 8049af6:	66 90                	xchg   %ax,%ax
 8049af8:	66 90                	xchg   %ax,%ax
 8049afa:	66 90                	xchg   %ax,%ax
 8049afc:	66 90                	xchg   %ax,%ax
 8049afe:	66 90                	xchg   %ax,%ax

08049b00 <deregister_tm_clones>:
 8049b00:	b8 6f 03 0b 08       	mov    $0x80b036f,%eax
 8049b05:	2d 6c 03 0b 08       	sub    $0x80b036c,%eax
 8049b0a:	83 f8 06             	cmp    $0x6,%eax
 8049b0d:	77 01                	ja     8049b10 <deregister_tm_clones+0x10>
 8049b0f:	c3                   	ret    
 8049b10:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b15:	85 c0                	test   %eax,%eax
 8049b17:	74 f6                	je     8049b0f <deregister_tm_clones+0xf>
 8049b19:	55                   	push   %ebp
 8049b1a:	89 e5                	mov    %esp,%ebp
 8049b1c:	83 ec 18             	sub    $0x18,%esp
 8049b1f:	c7 04 24 6c 03 0b 08 	movl   $0x80b036c,(%esp)
 8049b26:	ff d0                	call   *%eax
 8049b28:	c9                   	leave  
 8049b29:	c3                   	ret    
 8049b2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08049b30 <register_tm_clones>:
 8049b30:	b8 6c 03 0b 08       	mov    $0x80b036c,%eax
 8049b35:	2d 6c 03 0b 08       	sub    $0x80b036c,%eax
 8049b3a:	c1 f8 02             	sar    $0x2,%eax
 8049b3d:	89 c2                	mov    %eax,%edx
 8049b3f:	c1 ea 1f             	shr    $0x1f,%edx
 8049b42:	01 d0                	add    %edx,%eax
 8049b44:	d1 f8                	sar    %eax
 8049b46:	75 01                	jne    8049b49 <register_tm_clones+0x19>
 8049b48:	c3                   	ret    
 8049b49:	ba 00 00 00 00       	mov    $0x0,%edx
 8049b4e:	85 d2                	test   %edx,%edx
 8049b50:	74 f6                	je     8049b48 <register_tm_clones+0x18>
 8049b52:	55                   	push   %ebp
 8049b53:	89 e5                	mov    %esp,%ebp
 8049b55:	83 ec 18             	sub    $0x18,%esp
 8049b58:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049b5c:	c7 04 24 6c 03 0b 08 	movl   $0x80b036c,(%esp)
 8049b63:	ff d2                	call   *%edx
 8049b65:	c9                   	leave  
 8049b66:	c3                   	ret    
 8049b67:	89 f6                	mov    %esi,%esi
 8049b69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049b70 <__do_global_dtors_aux>:
 8049b70:	80 3d 84 03 0b 08 00 	cmpb   $0x0,0x80b0384
 8049b77:	75 13                	jne    8049b8c <__do_global_dtors_aux+0x1c>
 8049b79:	55                   	push   %ebp
 8049b7a:	89 e5                	mov    %esp,%ebp
 8049b7c:	83 ec 08             	sub    $0x8,%esp
 8049b7f:	e8 7c ff ff ff       	call   8049b00 <deregister_tm_clones>
 8049b84:	c6 05 84 03 0b 08 01 	movb   $0x1,0x80b0384
 8049b8b:	c9                   	leave  
 8049b8c:	f3 c3                	repz ret 
 8049b8e:	66 90                	xchg   %ax,%ax

08049b90 <frame_dummy>:
 8049b90:	a1 98 fe 0a 08       	mov    0x80afe98,%eax
 8049b95:	85 c0                	test   %eax,%eax
 8049b97:	74 1f                	je     8049bb8 <frame_dummy+0x28>
 8049b99:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b9e:	85 c0                	test   %eax,%eax
 8049ba0:	74 16                	je     8049bb8 <frame_dummy+0x28>
 8049ba2:	55                   	push   %ebp
 8049ba3:	89 e5                	mov    %esp,%ebp
 8049ba5:	83 ec 18             	sub    $0x18,%esp
 8049ba8:	c7 04 24 98 fe 0a 08 	movl   $0x80afe98,(%esp)
 8049baf:	ff d0                	call   *%eax
 8049bb1:	c9                   	leave  
 8049bb2:	e9 79 ff ff ff       	jmp    8049b30 <register_tm_clones>
 8049bb7:	90                   	nop
 8049bb8:	e9 73 ff ff ff       	jmp    8049b30 <register_tm_clones>
 8049bbd:	66 90                	xchg   %ax,%ax
 8049bbf:	90                   	nop

08049bc0 <_ZN6__asanL10RZLog2SizeEj>:
 8049bc0:	57                   	push   %edi
 8049bc1:	31 ff                	xor    %edi,%edi
 8049bc3:	56                   	push   %esi
 8049bc4:	89 c1                	mov    %eax,%ecx
 8049bc6:	53                   	push   %ebx
 8049bc7:	83 ec 20             	sub    $0x20,%esp
 8049bca:	e8 21 ff ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049bcf:	81 c3 31 64 06 00    	add    $0x66431,%ebx
 8049bd5:	83 f8 07             	cmp    $0x7,%eax
 8049bd8:	76 3e                	jbe    8049c18 <_ZN6__asanL10RZLog2SizeEj+0x58>
 8049bda:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049bde:	8d 83 08 2c fd ff    	lea    -0x2d3f8(%ebx),%eax
 8049be4:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049be8:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049bee:	c7 44 24 14 08 00 00 	movl   $0x8,0x14(%esp)
 8049bf5:	00 
 8049bf6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049bfd:	00 
 8049bfe:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8049c02:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)
 8049c09:	00 
 8049c0a:	89 04 24             	mov    %eax,(%esp)
 8049c0d:	e8 9e 87 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049c12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8049c18:	83 c4 20             	add    $0x20,%esp
 8049c1b:	b8 10 00 00 00       	mov    $0x10,%eax
 8049c20:	5b                   	pop    %ebx
 8049c21:	d3 e0                	shl    %cl,%eax
 8049c23:	5e                   	pop    %esi
 8049c24:	5f                   	pop    %edi
 8049c25:	c3                   	ret    
 8049c26:	8d 76 00             	lea    0x0(%esi),%esi
 8049c29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049c30 <_ZN6__asanL19GetStackTraceFromIdEjPN11__sanitizer10StackTraceE>:
 8049c30:	55                   	push   %ebp
 8049c31:	57                   	push   %edi
 8049c32:	56                   	push   %esi
 8049c33:	53                   	push   %ebx
 8049c34:	83 ec 3c             	sub    $0x3c,%esp
 8049c37:	e8 b4 fe ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049c3c:	81 c3 c4 63 06 00    	add    $0x663c4,%ebx
 8049c42:	85 c0                	test   %eax,%eax
 8049c44:	0f 84 85 00 00 00    	je     8049ccf <_ZN6__asanL19GetStackTraceFromIdEjPN11__sanitizer10StackTraceE+0x9f>
 8049c4a:	89 d5                	mov    %edx,%ebp
 8049c4c:	31 ff                	xor    %edi,%edi
 8049c4e:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 8049c52:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049c56:	89 04 24             	mov    %eax,(%esp)
 8049c59:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8049c60:	00 
 8049c61:	e8 ba 72 01 00       	call   8060f20 <_ZN11__sanitizer13StackDepotGetEjPm>
 8049c66:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8049c6a:	81 fa ff 00 00 00    	cmp    $0xff,%edx
 8049c70:	77 25                	ja     8049c97 <_ZN6__asanL19GetStackTraceFromIdEjPN11__sanitizer10StackTraceE+0x67>
 8049c72:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049c76:	c1 e2 02             	shl    $0x2,%edx
 8049c79:	8d 45 08             	lea    0x8(%ebp),%eax
 8049c7c:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049c80:	89 04 24             	mov    %eax,(%esp)
 8049c83:	e8 28 7c 01 00       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8049c88:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049c8c:	89 45 00             	mov    %eax,0x0(%ebp)
 8049c8f:	83 c4 3c             	add    $0x3c,%esp
 8049c92:	5b                   	pop    %ebx
 8049c93:	5e                   	pop    %esi
 8049c94:	5f                   	pop    %edi
 8049c95:	5d                   	pop    %ebp
 8049c96:	c3                   	ret    
 8049c97:	8d 83 29 2c fd ff    	lea    -0x2d3d7(%ebx),%eax
 8049c9d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049ca1:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049ca7:	c7 44 24 14 00 01 00 	movl   $0x100,0x14(%esp)
 8049cae:	00 
 8049caf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049cb6:	00 
 8049cb7:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049cbb:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8049cbf:	c7 44 24 04 db 00 00 	movl   $0xdb,0x4(%esp)
 8049cc6:	00 
 8049cc7:	89 04 24             	mov    %eax,(%esp)
 8049cca:	e8 e1 86 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049ccf:	8d 83 1b 2c fd ff    	lea    -0x2d3e5(%ebx),%eax
 8049cd5:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049cd9:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049cdf:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049ce6:	00 
 8049ce7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049cee:	00 
 8049cef:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049cf6:	00 
 8049cf7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049cfe:	00 
 8049cff:	c7 44 24 04 d8 00 00 	movl   $0xd8,0x4(%esp)
 8049d06:	00 
 8049d07:	89 04 24             	mov    %eax,(%esp)
 8049d0a:	e8 a1 86 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049d0f:	90                   	nop

08049d10 <_ZN6__asanL12ComputeRZLogEm>:
 8049d10:	55                   	push   %ebp
 8049d11:	31 ed                	xor    %ebp,%ebp
 8049d13:	57                   	push   %edi
 8049d14:	56                   	push   %esi
 8049d15:	53                   	push   %ebx
 8049d16:	83 ec 3c             	sub    $0x3c,%esp
 8049d19:	e8 d2 fd ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049d1e:	81 c3 e2 62 06 00    	add    $0x662e2,%ebx
 8049d24:	83 f8 30             	cmp    $0x30,%eax
 8049d27:	76 09                	jbe    8049d32 <_ZN6__asanL12ComputeRZLogEm+0x22>
 8049d29:	83 f8 60             	cmp    $0x60,%eax
 8049d2c:	66 bd 01 00          	mov    $0x1,%bp
 8049d30:	77 5e                	ja     8049d90 <_ZN6__asanL12ComputeRZLogEm+0x80>
 8049d32:	e8 e9 e7 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8049d37:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8049d3e:	00 
 8049d3f:	8b 78 0c             	mov    0xc(%eax),%edi
 8049d42:	83 ff 0f             	cmp    $0xf,%edi
 8049d45:	89 7c 24 28          	mov    %edi,0x28(%esp)
 8049d49:	0f 87 81 00 00 00    	ja     8049dd0 <_ZN6__asanL12ComputeRZLogEm+0xc0>
 8049d4f:	8b 44 24 28          	mov    0x28(%esp),%eax
 8049d53:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8049d57:	c7 44 24 14 10 00 00 	movl   $0x10,0x14(%esp)
 8049d5e:	00 
 8049d5f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049d66:	00 
 8049d67:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049d6b:	8d 83 47 2c fd ff    	lea    -0x2d3b9(%ebx),%eax
 8049d71:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049d75:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049d7b:	89 54 24 10          	mov    %edx,0x10(%esp)
 8049d7f:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)
 8049d86:	00 
 8049d87:	89 04 24             	mov    %eax,(%esp)
 8049d8a:	e8 21 86 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049d8f:	90                   	nop
 8049d90:	3d c0 01 00 00       	cmp    $0x1c0,%eax
 8049d95:	66 bd 02 00          	mov    $0x2,%bp
 8049d99:	76 97                	jbe    8049d32 <_ZN6__asanL12ComputeRZLogEm+0x22>
 8049d9b:	3d 80 0f 00 00       	cmp    $0xf80,%eax
 8049da0:	66 bd 03 00          	mov    $0x3,%bp
 8049da4:	76 8c                	jbe    8049d32 <_ZN6__asanL12ComputeRZLogEm+0x22>
 8049da6:	3d 00 3f 00 00       	cmp    $0x3f00,%eax
 8049dab:	66 bd 04 00          	mov    $0x4,%bp
 8049daf:	76 81                	jbe    8049d32 <_ZN6__asanL12ComputeRZLogEm+0x22>
 8049db1:	3d 00 7e 00 00       	cmp    $0x7e00,%eax
 8049db6:	66 bd 05 00          	mov    $0x5,%bp
 8049dba:	0f 86 72 ff ff ff    	jbe    8049d32 <_ZN6__asanL12ComputeRZLogEm+0x22>
 8049dc0:	3d 01 fc 00 00       	cmp    $0xfc01,%eax
 8049dc5:	19 ed                	sbb    %ebp,%ebp
 8049dc7:	83 c5 07             	add    $0x7,%ebp
 8049dca:	e9 63 ff ff ff       	jmp    8049d32 <_ZN6__asanL12ComputeRZLogEm+0x22>
 8049dcf:	90                   	nop
 8049dd0:	81 ff 00 08 00 00    	cmp    $0x800,%edi
 8049dd6:	77 2e                	ja     8049e06 <_ZN6__asanL12ComputeRZLogEm+0xf6>
 8049dd8:	8d 47 ff             	lea    -0x1(%edi),%eax
 8049ddb:	85 f8                	test   %edi,%eax
 8049ddd:	75 67                	jne    8049e46 <_ZN6__asanL12ComputeRZLogEm+0x136>
 8049ddf:	f3 0f bc cf          	tzcnt  %edi,%ecx
 8049de3:	8d 71 fc             	lea    -0x4(%ecx),%esi
 8049de6:	89 f0                	mov    %esi,%eax
 8049de8:	e8 d3 fd ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 8049ded:	31 c9                	xor    %ecx,%ecx
 8049def:	39 c7                	cmp    %eax,%edi
 8049df1:	0f 85 8f 00 00 00    	jne    8049e86 <_ZN6__asanL12ComputeRZLogEm+0x176>
 8049df7:	39 ee                	cmp    %ebp,%esi
 8049df9:	89 e8                	mov    %ebp,%eax
 8049dfb:	0f 43 c6             	cmovae %esi,%eax
 8049dfe:	83 c4 3c             	add    $0x3c,%esp
 8049e01:	5b                   	pop    %ebx
 8049e02:	5e                   	pop    %esi
 8049e03:	5f                   	pop    %edi
 8049e04:	5d                   	pop    %ebp
 8049e05:	c3                   	ret    
 8049e06:	8b 44 24 28          	mov    0x28(%esp),%eax
 8049e0a:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8049e0e:	c7 44 24 14 00 08 00 	movl   $0x800,0x14(%esp)
 8049e15:	00 
 8049e16:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049e1d:	00 
 8049e1e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049e22:	8d 83 5d 2c fd ff    	lea    -0x2d3a3(%ebx),%eax
 8049e28:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049e2c:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049e32:	89 54 24 10          	mov    %edx,0x10(%esp)
 8049e36:	c7 44 24 04 72 00 00 	movl   $0x72,0x4(%esp)
 8049e3d:	00 
 8049e3e:	89 04 24             	mov    %eax,(%esp)
 8049e41:	e8 6a 85 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049e46:	8d 83 48 2e fd ff    	lea    -0x2d1b8(%ebx),%eax
 8049e4c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049e50:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049e56:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8049e5d:	00 
 8049e5e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049e65:	00 
 8049e66:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8049e6d:	00 
 8049e6e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8049e75:	00 
 8049e76:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)
 8049e7d:	00 
 8049e7e:	89 04 24             	mov    %eax,(%esp)
 8049e81:	e8 2a 85 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049e86:	89 44 24 14          	mov    %eax,0x14(%esp)
 8049e8a:	8b 44 24 28          	mov    0x28(%esp),%eax
 8049e8e:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8049e92:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8049e96:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)
 8049e9d:	00 
 8049e9e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049ea2:	8d 83 6c 2e fd ff    	lea    -0x2d194(%ebx),%eax
 8049ea8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049eac:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 8049eb2:	89 54 24 10          	mov    %edx,0x10(%esp)
 8049eb6:	89 04 24             	mov    %eax,(%esp)
 8049eb9:	e8 f2 84 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049ebe:	66 90                	xchg   %ax,%ax

08049ec0 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.24>:
 8049ec0:	55                   	push   %ebp
 8049ec1:	57                   	push   %edi
 8049ec2:	31 ff                	xor    %edi,%edi
 8049ec4:	56                   	push   %esi
 8049ec5:	53                   	push   %ebx
 8049ec6:	83 ec 2c             	sub    $0x2c,%esp
 8049ec9:	e8 22 fc ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049ece:	81 c3 32 61 06 00    	add    $0x66132,%ebx
 8049ed4:	83 fa 58             	cmp    $0x58,%edx
 8049ed7:	8b 6c 24 40          	mov    0x40(%esp),%ebp
 8049edb:	76 3b                	jbe    8049f18 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.24+0x58>
 8049edd:	8d 83 90 2e fd ff    	lea    -0x2d170(%ebx),%eax
 8049ee3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049ee7:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 8049eed:	c7 44 24 14 59 00 00 	movl   $0x59,0x14(%esp)
 8049ef4:	00 
 8049ef5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8049efc:	00 
 8049efd:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049f01:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8049f05:	c7 44 24 04 69 02 00 	movl   $0x269,0x4(%esp)
 8049f0c:	00 
 8049f0d:	89 04 24             	mov    %eax,(%esp)
 8049f10:	e8 9b 84 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8049f15:	8d 76 00             	lea    0x0(%esi),%esi
 8049f18:	8d 72 40             	lea    0x40(%edx),%esi
 8049f1b:	c1 e6 06             	shl    $0x6,%esi
 8049f1e:	03 30                	add    (%eax),%esi
 8049f20:	b8 01 00 00 00       	mov    $0x1,%eax
 8049f25:	86 06                	xchg   %al,(%esi)
 8049f27:	84 c0                	test   %al,%al
 8049f29:	74 08                	je     8049f33 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.24+0x73>
 8049f2b:	89 34 24             	mov    %esi,(%esp)
 8049f2e:	e8 fd 54 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 8049f33:	8b 46 04             	mov    0x4(%esi),%eax
 8049f36:	85 c0                	test   %eax,%eax
 8049f38:	74 1e                	je     8049f58 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.24+0x98>
 8049f3a:	8b 56 08             	mov    0x8(%esi),%edx
 8049f3d:	83 c0 01             	add    $0x1,%eax
 8049f40:	89 55 00             	mov    %edx,0x0(%ebp)
 8049f43:	89 6e 08             	mov    %ebp,0x8(%esi)
 8049f46:	89 46 04             	mov    %eax,0x4(%esi)
 8049f49:	c6 06 00             	movb   $0x0,(%esi)
 8049f4c:	83 c4 2c             	add    $0x2c,%esp
 8049f4f:	5b                   	pop    %ebx
 8049f50:	5e                   	pop    %esi
 8049f51:	5f                   	pop    %edi
 8049f52:	5d                   	pop    %ebp
 8049f53:	c3                   	ret    
 8049f54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049f58:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%ebp)
 8049f5f:	89 6e 0c             	mov    %ebp,0xc(%esi)
 8049f62:	89 6e 08             	mov    %ebp,0x8(%esi)
 8049f65:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
 8049f6c:	c6 06 00             	movb   $0x0,(%esi)
 8049f6f:	83 c4 2c             	add    $0x2c,%esp
 8049f72:	5b                   	pop    %ebx
 8049f73:	5e                   	pop    %esi
 8049f74:	5f                   	pop    %edi
 8049f75:	5d                   	pop    %ebp
 8049f76:	c3                   	ret    
 8049f77:	89 f6                	mov    %esi,%esi
 8049f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08049f80 <_ZN6__asanL18GetAsanChunkByAddrEm>:
 8049f80:	55                   	push   %ebp
 8049f81:	57                   	push   %edi
 8049f82:	56                   	push   %esi
 8049f83:	89 c6                	mov    %eax,%esi
 8049f85:	53                   	push   %ebx
 8049f86:	e8 65 fb ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8049f8b:	81 c3 75 60 06 00    	add    $0x66075,%ebx
 8049f91:	83 ec 3c             	sub    $0x3c,%esp
 8049f94:	c1 ee 14             	shr    $0x14,%esi
 8049f97:	89 74 24 2c          	mov    %esi,0x2c(%esp)
 8049f9b:	8b 93 a0 b9 00 00    	mov    0xb9a0(%ebx),%edx
 8049fa1:	0f b6 14 32          	movzbl (%edx,%esi,1),%edx
 8049fa5:	84 d2                	test   %dl,%dl
 8049fa7:	0f 85 26 01 00 00    	jne    804a0d3 <_ZN6__asanL18GetAsanChunkByAddrEm+0x153>
 8049fad:	ba 01 00 00 00       	mov    $0x1,%edx
 8049fb2:	86 93 bc ba 02 00    	xchg   %dl,0x2babc(%ebx)
 8049fb8:	84 d2                	test   %dl,%dl
 8049fba:	0f 85 f8 00 00 00    	jne    804a0b8 <_ZN6__asanL18GetAsanChunkByAddrEm+0x138>
 8049fc0:	8b 8b a8 b9 02 00    	mov    0x2b9a8(%ebx),%ecx
 8049fc6:	85 c9                	test   %ecx,%ecx
 8049fc8:	0f 84 3a 03 00 00    	je     804a308 <_ZN6__asanL18GetAsanChunkByAddrEm+0x388>
 8049fce:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 8049fd4:	31 ed                	xor    %ebp,%ebp
 8049fd6:	8d 34 8a             	lea    (%edx,%ecx,4),%esi
 8049fd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8049fe0:	8b 0a                	mov    (%edx),%ecx
 8049fe2:	39 c8                	cmp    %ecx,%eax
 8049fe4:	72 13                	jb     8049ff9 <_ZN6__asanL18GetAsanChunkByAddrEm+0x79>
 8049fe6:	89 c7                	mov    %eax,%edi
 8049fe8:	29 cf                	sub    %ecx,%edi
 8049fea:	89 7c 24 20          	mov    %edi,0x20(%esp)
 8049fee:	89 c7                	mov    %eax,%edi
 8049ff0:	29 ef                	sub    %ebp,%edi
 8049ff2:	39 7c 24 20          	cmp    %edi,0x20(%esp)
 8049ff6:	0f 42 e9             	cmovb  %ecx,%ebp
 8049ff9:	83 c2 04             	add    $0x4,%edx
 8049ffc:	39 f2                	cmp    %esi,%edx
 8049ffe:	75 e0                	jne    8049fe0 <_ZN6__asanL18GetAsanChunkByAddrEm+0x60>
 804a000:	85 ed                	test   %ebp,%ebp
 804a002:	0f 84 00 03 00 00    	je     804a308 <_ZN6__asanL18GetAsanChunkByAddrEm+0x388>
 804a008:	8b 55 00             	mov    0x0(%ebp),%edx
 804a00b:	31 ff                	xor    %edi,%edi
 804a00d:	89 ee                	mov    %ebp,%esi
 804a00f:	83 ff 00             	cmp    $0x0,%edi
 804a012:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804a019:	00 
 804a01a:	89 54 24 20          	mov    %edx,0x20(%esp)
 804a01e:	76 58                	jbe    804a078 <_ZN6__asanL18GetAsanChunkByAddrEm+0xf8>
 804a020:	03 55 04             	add    0x4(%ebp),%edx
 804a023:	83 ff 00             	cmp    $0x0,%edi
 804a026:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804a02d:	00 
 804a02e:	89 54 24 20          	mov    %edx,0x20(%esp)
 804a032:	77 08                	ja     804a03c <_ZN6__asanL18GetAsanChunkByAddrEm+0xbc>
 804a034:	39 d6                	cmp    %edx,%esi
 804a036:	0f 82 7e 02 00 00    	jb     804a2ba <_ZN6__asanL18GetAsanChunkByAddrEm+0x33a>
 804a03c:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a040:	8b 54 24 24          	mov    0x24(%esp),%edx
 804a044:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804a048:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804a04c:	89 44 24 14          	mov    %eax,0x14(%esp)
 804a050:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804a056:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a05a:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a060:	89 54 24 18          	mov    %edx,0x18(%esp)
 804a064:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804a06b:	00 
 804a06c:	89 04 24             	mov    %eax,(%esp)
 804a06f:	e8 3c 83 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a074:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a078:	72 04                	jb     804a07e <_ZN6__asanL18GetAsanChunkByAddrEm+0xfe>
 804a07a:	39 d5                	cmp    %edx,%ebp
 804a07c:	73 a2                	jae    804a020 <_ZN6__asanL18GetAsanChunkByAddrEm+0xa0>
 804a07e:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a082:	8b 54 24 24          	mov    0x24(%esp),%edx
 804a086:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804a08a:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804a08e:	89 44 24 14          	mov    %eax,0x14(%esp)
 804a092:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804a098:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a09c:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a0a2:	89 54 24 18          	mov    %edx,0x18(%esp)
 804a0a6:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804a0ad:	00 
 804a0ae:	89 04 24             	mov    %eax,(%esp)
 804a0b1:	e8 fa 82 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a0b6:	66 90                	xchg   %ax,%ax
 804a0b8:	8d 93 bc ba 02 00    	lea    0x2babc(%ebx),%edx
 804a0be:	89 14 24             	mov    %edx,(%esp)
 804a0c1:	89 44 24 20          	mov    %eax,0x20(%esp)
 804a0c5:	e8 66 53 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804a0ca:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a0ce:	e9 ed fe ff ff       	jmp    8049fc0 <_ZN6__asanL18GetAsanChunkByAddrEm+0x40>
 804a0d3:	89 c6                	mov    %eax,%esi
 804a0d5:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
 804a0db:	83 fa 10             	cmp    $0x10,%edx
 804a0de:	0f 86 34 02 00 00    	jbe    804a318 <_ZN6__asanL18GetAsanChunkByAddrEm+0x398>
 804a0e4:	83 ea 10             	sub    $0x10,%edx
 804a0e7:	bf 00 01 00 00       	mov    $0x100,%edi
 804a0ec:	89 d1                	mov    %edx,%ecx
 804a0ee:	83 e2 07             	and    $0x7,%edx
 804a0f1:	c1 e9 03             	shr    $0x3,%ecx
 804a0f4:	d3 e7                	shl    %cl,%edi
 804a0f6:	89 f9                	mov    %edi,%ecx
 804a0f8:	c1 e9 03             	shr    $0x3,%ecx
 804a0fb:	0f af ca             	imul   %edx,%ecx
 804a0fe:	01 cf                	add    %ecx,%edi
 804a100:	29 f0                	sub    %esi,%eax
 804a102:	31 d2                	xor    %edx,%edx
 804a104:	f7 f7                	div    %edi
 804a106:	0f af c7             	imul   %edi,%eax
 804a109:	8d 0c 30             	lea    (%eax,%esi,1),%ecx
 804a10c:	89 ce                	mov    %ecx,%esi
 804a10e:	85 f6                	test   %esi,%esi
 804a110:	0f 84 bc 00 00 00    	je     804a1d2 <_ZN6__asanL18GetAsanChunkByAddrEm+0x252>
 804a116:	81 39 b9 96 6e cc    	cmpl   $0xcc6e96b9,(%ecx)
 804a11c:	0f 84 fa 00 00 00    	je     804a21c <_ZN6__asanL18GetAsanChunkByAddrEm+0x29c>
 804a122:	8b 83 a0 b9 00 00    	mov    0xb9a0(%ebx),%eax
 804a128:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 804a12c:	0f b6 14 08          	movzbl (%eax,%ecx,1),%edx
 804a130:	84 d2                	test   %dl,%dl
 804a132:	0f 84 a4 00 00 00    	je     804a1dc <_ZN6__asanL18GetAsanChunkByAddrEm+0x25c>
 804a138:	83 fa 10             	cmp    $0x10,%edx
 804a13b:	0f 86 6f 01 00 00    	jbe    804a2b0 <_ZN6__asanL18GetAsanChunkByAddrEm+0x330>
 804a141:	83 ea 10             	sub    $0x10,%edx
 804a144:	b8 00 01 00 00       	mov    $0x100,%eax
 804a149:	89 d1                	mov    %edx,%ecx
 804a14b:	83 e2 07             	and    $0x7,%edx
 804a14e:	c1 e9 03             	shr    $0x3,%ecx
 804a151:	d3 e0                	shl    %cl,%eax
 804a153:	89 c7                	mov    %eax,%edi
 804a155:	c1 ef 03             	shr    $0x3,%edi
 804a158:	0f af fa             	imul   %edx,%edi
 804a15b:	01 f8                	add    %edi,%eax
 804a15d:	89 c1                	mov    %eax,%ecx
 804a15f:	31 d2                	xor    %edx,%edx
 804a161:	81 f9 00 00 02 00    	cmp    $0x20000,%ecx
 804a167:	76 3f                	jbe    804a1a8 <_ZN6__asanL18GetAsanChunkByAddrEm+0x228>
 804a169:	8d 83 ac 2f fd ff    	lea    -0x2d054(%ebx),%eax
 804a16f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a173:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804a179:	c7 44 24 14 00 00 02 	movl   $0x20000,0x14(%esp)
 804a180:	00 
 804a181:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a188:	00 
 804a189:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804a18d:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a191:	c7 44 24 04 fe 01 00 	movl   $0x1fe,0x4(%esp)
 804a198:	00 
 804a199:	89 04 24             	mov    %eax,(%esp)
 804a19c:	e8 0f 82 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a1a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a1a8:	89 74 24 20          	mov    %esi,0x20(%esp)
 804a1ac:	31 ff                	xor    %edi,%edi
 804a1ae:	89 ce                	mov    %ecx,%esi
 804a1b0:	89 f8                	mov    %edi,%eax
 804a1b2:	e8 09 fa ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804a1b7:	89 c5                	mov    %eax,%ebp
 804a1b9:	89 f0                	mov    %esi,%eax
 804a1bb:	29 e8                	sub    %ebp,%eax
 804a1bd:	e8 4e fb ff ff       	call   8049d10 <_ZN6__asanL12ComputeRZLogEm>
 804a1c2:	39 c7                	cmp    %eax,%edi
 804a1c4:	0f 84 7e 01 00 00    	je     804a348 <_ZN6__asanL18GetAsanChunkByAddrEm+0x3c8>
 804a1ca:	83 c7 01             	add    $0x1,%edi
 804a1cd:	83 ff 08             	cmp    $0x8,%edi
 804a1d0:	75 de                	jne    804a1b0 <_ZN6__asanL18GetAsanChunkByAddrEm+0x230>
 804a1d2:	31 c0                	xor    %eax,%eax
 804a1d4:	83 c4 3c             	add    $0x3c,%esp
 804a1d7:	5b                   	pop    %ebx
 804a1d8:	5e                   	pop    %esi
 804a1d9:	5f                   	pop    %edi
 804a1da:	5d                   	pop    %ebp
 804a1db:	c3                   	ret    
 804a1dc:	89 f2                	mov    %esi,%edx
 804a1de:	c1 ea 14             	shr    $0x14,%edx
 804a1e1:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax
 804a1e5:	84 c0                	test   %al,%al
 804a1e7:	75 7f                	jne    804a268 <_ZN6__asanL18GetAsanChunkByAddrEm+0x2e8>
 804a1e9:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804a1ef:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804a1f2:	85 c6                	test   %eax,%esi
 804a1f4:	0f 85 a0 01 00 00    	jne    804a39a <_ZN6__asanL18GetAsanChunkByAddrEm+0x41a>
 804a1fa:	31 d2                	xor    %edx,%edx
 804a1fc:	89 f0                	mov    %esi,%eax
 804a1fe:	f7 f1                	div    %ecx
 804a200:	89 d7                	mov    %edx,%edi
 804a202:	31 d2                	xor    %edx,%edx
 804a204:	85 ff                	test   %edi,%edi
 804a206:	0f 85 56 01 00 00    	jne    804a362 <_ZN6__asanL18GetAsanChunkByAddrEm+0x3e2>
 804a20c:	29 ce                	sub    %ecx,%esi
 804a20e:	8d 4e 10             	lea    0x10(%esi),%ecx
 804a211:	8b 41 04             	mov    0x4(%ecx),%eax
 804a214:	83 c4 3c             	add    $0x3c,%esp
 804a217:	5b                   	pop    %ebx
 804a218:	5e                   	pop    %esi
 804a219:	5f                   	pop    %edi
 804a21a:	5d                   	pop    %ebp
 804a21b:	c3                   	ret    
 804a21c:	8b 41 04             	mov    0x4(%ecx),%eax
 804a21f:	f6 40 07 01          	testb  $0x1,0x7(%eax)
 804a223:	75 af                	jne    804a1d4 <_ZN6__asanL18GetAsanChunkByAddrEm+0x254>
 804a225:	8d 83 90 2c fd ff    	lea    -0x2d370(%ebx),%eax
 804a22b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a22f:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804a235:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a23c:	00 
 804a23d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a244:	00 
 804a245:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a24c:	00 
 804a24d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a254:	00 
 804a255:	c7 44 24 04 f4 01 00 	movl   $0x1f4,0x4(%esp)
 804a25c:	00 
 804a25d:	89 04 24             	mov    %eax,(%esp)
 804a260:	e8 4b 81 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a265:	8d 76 00             	lea    0x0(%esi),%esi
 804a268:	89 f2                	mov    %esi,%edx
 804a26a:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804a270:	83 f8 10             	cmp    $0x10,%eax
 804a273:	0f 86 df 00 00 00    	jbe    804a358 <_ZN6__asanL18GetAsanChunkByAddrEm+0x3d8>
 804a279:	8d 68 f0             	lea    -0x10(%eax),%ebp
 804a27c:	b8 00 01 00 00       	mov    $0x100,%eax
 804a281:	89 e9                	mov    %ebp,%ecx
 804a283:	83 e5 07             	and    $0x7,%ebp
 804a286:	c1 e9 03             	shr    $0x3,%ecx
 804a289:	d3 e0                	shl    %cl,%eax
 804a28b:	89 c7                	mov    %eax,%edi
 804a28d:	c1 ef 03             	shr    $0x3,%edi
 804a290:	0f af fd             	imul   %ebp,%edi
 804a293:	01 c7                	add    %eax,%edi
 804a295:	89 f0                	mov    %esi,%eax
 804a297:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804a29d:	29 d0                	sub    %edx,%eax
 804a29f:	31 d2                	xor    %edx,%edx
 804a2a1:	f7 f7                	div    %edi
 804a2a3:	83 c0 01             	add    $0x1,%eax
 804a2a6:	c1 e0 04             	shl    $0x4,%eax
 804a2a9:	29 c1                	sub    %eax,%ecx
 804a2ab:	e9 61 ff ff ff       	jmp    804a211 <_ZN6__asanL18GetAsanChunkByAddrEm+0x291>
 804a2b0:	c1 e2 04             	shl    $0x4,%edx
 804a2b3:	89 d1                	mov    %edx,%ecx
 804a2b5:	e9 a5 fe ff ff       	jmp    804a15f <_ZN6__asanL18GetAsanChunkByAddrEm+0x1df>
 804a2ba:	83 ff 00             	cmp    $0x0,%edi
 804a2bd:	89 44 24 20          	mov    %eax,0x20(%esp)
 804a2c1:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804a2c8:	00 
 804a2c9:	76 57                	jbe    804a322 <_ZN6__asanL18GetAsanChunkByAddrEm+0x3a2>
 804a2cb:	8b 44 24 20          	mov    0x20(%esp),%eax
 804a2cf:	8b 54 24 24          	mov    0x24(%esp),%edx
 804a2d3:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804a2d7:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804a2db:	89 44 24 14          	mov    %eax,0x14(%esp)
 804a2df:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804a2e5:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a2e9:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a2ef:	89 54 24 18          	mov    %edx,0x18(%esp)
 804a2f3:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804a2fa:	00 
 804a2fb:	89 04 24             	mov    %eax,(%esp)
 804a2fe:	e8 ad 80 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a303:	90                   	nop
 804a304:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a308:	31 f6                	xor    %esi,%esi
 804a30a:	31 c9                	xor    %ecx,%ecx
 804a30c:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804a313:	e9 f6 fd ff ff       	jmp    804a10e <_ZN6__asanL18GetAsanChunkByAddrEm+0x18e>
 804a318:	c1 e2 04             	shl    $0x4,%edx
 804a31b:	89 d7                	mov    %edx,%edi
 804a31d:	e9 de fd ff ff       	jmp    804a100 <_ZN6__asanL18GetAsanChunkByAddrEm+0x180>
 804a322:	39 c6                	cmp    %eax,%esi
 804a324:	77 a5                	ja     804a2cb <_ZN6__asanL18GetAsanChunkByAddrEm+0x34b>
 804a326:	39 d0                	cmp    %edx,%eax
 804a328:	77 de                	ja     804a308 <_ZN6__asanL18GetAsanChunkByAddrEm+0x388>
 804a32a:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804a330:	31 d2                	xor    %edx,%edx
 804a332:	89 e8                	mov    %ebp,%eax
 804a334:	f7 f1                	div    %ecx
 804a336:	89 d6                	mov    %edx,%esi
 804a338:	31 d2                	xor    %edx,%edx
 804a33a:	85 f6                	test   %esi,%esi
 804a33c:	0f 85 98 00 00 00    	jne    804a3da <_ZN6__asanL18GetAsanChunkByAddrEm+0x45a>
 804a342:	01 e9                	add    %ebp,%ecx
 804a344:	89 ce                	mov    %ecx,%esi
 804a346:	eb c4                	jmp    804a30c <_ZN6__asanL18GetAsanChunkByAddrEm+0x38c>
 804a348:	8b 74 24 20          	mov    0x20(%esp),%esi
 804a34c:	83 c4 3c             	add    $0x3c,%esp
 804a34f:	5b                   	pop    %ebx
 804a350:	8d 44 35 f0          	lea    -0x10(%ebp,%esi,1),%eax
 804a354:	5e                   	pop    %esi
 804a355:	5f                   	pop    %edi
 804a356:	5d                   	pop    %ebp
 804a357:	c3                   	ret    
 804a358:	c1 e0 04             	shl    $0x4,%eax
 804a35b:	89 c7                	mov    %eax,%edi
 804a35d:	e9 33 ff ff ff       	jmp    804a295 <_ZN6__asanL18GetAsanChunkByAddrEm+0x315>
 804a362:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804a368:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a36c:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a372:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a379:	00 
 804a37a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a381:	00 
 804a382:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804a386:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a38a:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804a391:	00 
 804a392:	89 04 24             	mov    %eax,(%esp)
 804a395:	e8 16 80 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a39a:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804a3a0:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a3a4:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a3aa:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a3b1:	00 
 804a3b2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a3b9:	00 
 804a3ba:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a3c1:	00 
 804a3c2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a3c9:	00 
 804a3ca:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804a3d1:	00 
 804a3d2:	89 04 24             	mov    %eax,(%esp)
 804a3d5:	e8 d6 7f 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a3da:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804a3e0:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a3e4:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a3ea:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a3f1:	00 
 804a3f2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a3f9:	00 
 804a3fa:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804a3fe:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a402:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804a409:	00 
 804a40a:	89 04 24             	mov    %eax,(%esp)
 804a40d:	e8 9e 7f 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a412:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a420 <_ZN6__asanL14AllocationSizeEm>:
 804a420:	55                   	push   %ebp
 804a421:	57                   	push   %edi
 804a422:	89 c7                	mov    %eax,%edi
 804a424:	56                   	push   %esi
 804a425:	53                   	push   %ebx
 804a426:	e8 c5 f6 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804a42b:	81 c3 d5 5b 06 00    	add    $0x65bd5,%ebx
 804a431:	83 ec 3c             	sub    $0x3c,%esp
 804a434:	e8 47 fb ff ff       	call   8049f80 <_ZN6__asanL18GetAsanChunkByAddrEm>
 804a439:	89 c6                	mov    %eax,%esi
 804a43b:	31 c0                	xor    %eax,%eax
 804a43d:	85 f6                	test   %esi,%esi
 804a43f:	74 05                	je     804a446 <_ZN6__asanL14AllocationSizeEm+0x26>
 804a441:	80 3e 02             	cmpb   $0x2,(%esi)
 804a444:	74 0a                	je     804a450 <_ZN6__asanL14AllocationSizeEm+0x30>
 804a446:	83 c4 3c             	add    $0x3c,%esp
 804a449:	5b                   	pop    %ebx
 804a44a:	5e                   	pop    %esi
 804a44b:	5f                   	pop    %edi
 804a44c:	5d                   	pop    %ebp
 804a44d:	c3                   	ret    
 804a44e:	66 90                	xchg   %ax,%ax
 804a450:	8d 56 10             	lea    0x10(%esi),%edx
 804a453:	39 d7                	cmp    %edx,%edi
 804a455:	75 ef                	jne    804a446 <_ZN6__asanL14AllocationSizeEm+0x26>
 804a457:	8b 46 08             	mov    0x8(%esi),%eax
 804a45a:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804a45f:	75 e5                	jne    804a446 <_ZN6__asanL14AllocationSizeEm+0x26>
 804a461:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804a465:	a8 01                	test   $0x1,%al
 804a467:	0f 85 96 00 00 00    	jne    804a503 <_ZN6__asanL14AllocationSizeEm+0xe3>
 804a46d:	c0 e8 03             	shr    $0x3,%al
 804a470:	83 e0 07             	and    $0x7,%eax
 804a473:	e8 48 f7 ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804a478:	29 c7                	sub    %eax,%edi
 804a47a:	89 fd                	mov    %edi,%ebp
 804a47c:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804a482:	89 e8                	mov    %ebp,%eax
 804a484:	c1 e8 14             	shr    $0x14,%eax
 804a487:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804a48b:	84 c0                	test   %al,%al
 804a48d:	75 2a                	jne    804a4b9 <_ZN6__asanL14AllocationSizeEm+0x99>
 804a48f:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804a495:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804a498:	85 c5                	test   %eax,%ebp
 804a49a:	0f 85 9d 02 00 00    	jne    804a73d <_ZN6__asanL14AllocationSizeEm+0x31d>
 804a4a0:	31 d2                	xor    %edx,%edx
 804a4a2:	89 e8                	mov    %ebp,%eax
 804a4a4:	f7 f1                	div    %ecx
 804a4a6:	31 ff                	xor    %edi,%edi
 804a4a8:	85 d2                	test   %edx,%edx
 804a4aa:	0f 85 55 02 00 00    	jne    804a705 <_ZN6__asanL14AllocationSizeEm+0x2e5>
 804a4b0:	29 cd                	sub    %ecx,%ebp
 804a4b2:	8d 4d 10             	lea    0x10(%ebp),%ecx
 804a4b5:	8b 01                	mov    (%ecx),%eax
 804a4b7:	eb 8d                	jmp    804a446 <_ZN6__asanL14AllocationSizeEm+0x26>
 804a4b9:	89 ea                	mov    %ebp,%edx
 804a4bb:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804a4c1:	83 f8 10             	cmp    $0x10,%eax
 804a4c4:	0f 86 9d 01 00 00    	jbe    804a667 <_ZN6__asanL14AllocationSizeEm+0x247>
 804a4ca:	8d 78 f0             	lea    -0x10(%eax),%edi
 804a4cd:	b8 00 01 00 00       	mov    $0x100,%eax
 804a4d2:	89 f9                	mov    %edi,%ecx
 804a4d4:	83 e7 07             	and    $0x7,%edi
 804a4d7:	c1 e9 03             	shr    $0x3,%ecx
 804a4da:	d3 e0                	shl    %cl,%eax
 804a4dc:	89 c6                	mov    %eax,%esi
 804a4de:	c1 ee 03             	shr    $0x3,%esi
 804a4e1:	0f af f7             	imul   %edi,%esi
 804a4e4:	01 c6                	add    %eax,%esi
 804a4e6:	89 e8                	mov    %ebp,%eax
 804a4e8:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804a4ee:	29 d0                	sub    %edx,%eax
 804a4f0:	31 d2                	xor    %edx,%edx
 804a4f2:	f7 f6                	div    %esi
 804a4f4:	83 c0 01             	add    $0x1,%eax
 804a4f7:	c1 e0 04             	shl    $0x4,%eax
 804a4fa:	29 c1                	sub    %eax,%ecx
 804a4fc:	8b 01                	mov    (%ecx),%eax
 804a4fe:	e9 43 ff ff ff       	jmp    804a446 <_ZN6__asanL14AllocationSizeEm+0x26>
 804a503:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804a509:	89 f0                	mov    %esi,%eax
 804a50b:	c1 e8 14             	shr    $0x14,%eax
 804a50e:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804a512:	84 c0                	test   %al,%al
 804a514:	0f 85 0e 01 00 00    	jne    804a628 <_ZN6__asanL14AllocationSizeEm+0x208>
 804a51a:	b8 01 00 00 00       	mov    $0x1,%eax
 804a51f:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804a525:	84 c0                	test   %al,%al
 804a527:	74 0e                	je     804a537 <_ZN6__asanL14AllocationSizeEm+0x117>
 804a529:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804a52f:	89 04 24             	mov    %eax,(%esp)
 804a532:	e8 f9 4e 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804a537:	8b 93 a8 b9 02 00    	mov    0x2b9a8(%ebx),%edx
 804a53d:	85 d2                	test   %edx,%edx
 804a53f:	0f 84 2c 01 00 00    	je     804a671 <_ZN6__asanL14AllocationSizeEm+0x251>
 804a545:	8d 83 a8 b9 00 00    	lea    0xb9a8(%ebx),%eax
 804a54b:	31 ff                	xor    %edi,%edi
 804a54d:	8d 0c 90             	lea    (%eax,%edx,4),%ecx
 804a550:	8b 10                	mov    (%eax),%edx
 804a552:	39 d6                	cmp    %edx,%esi
 804a554:	72 13                	jb     804a569 <_ZN6__asanL14AllocationSizeEm+0x149>
 804a556:	89 f5                	mov    %esi,%ebp
 804a558:	29 d5                	sub    %edx,%ebp
 804a55a:	89 6c 24 28          	mov    %ebp,0x28(%esp)
 804a55e:	89 f5                	mov    %esi,%ebp
 804a560:	29 fd                	sub    %edi,%ebp
 804a562:	39 6c 24 28          	cmp    %ebp,0x28(%esp)
 804a566:	0f 42 fa             	cmovb  %edx,%edi
 804a569:	83 c0 04             	add    $0x4,%eax
 804a56c:	39 c8                	cmp    %ecx,%eax
 804a56e:	75 e0                	jne    804a550 <_ZN6__asanL14AllocationSizeEm+0x130>
 804a570:	85 ff                	test   %edi,%edi
 804a572:	0f 84 f9 00 00 00    	je     804a671 <_ZN6__asanL14AllocationSizeEm+0x251>
 804a578:	8b 0f                	mov    (%edi),%ecx
 804a57a:	31 d2                	xor    %edx,%edx
 804a57c:	89 f8                	mov    %edi,%eax
 804a57e:	83 fa 00             	cmp    $0x0,%edx
 804a581:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804a588:	00 
 804a589:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804a58d:	77 45                	ja     804a5d4 <_ZN6__asanL14AllocationSizeEm+0x1b4>
 804a58f:	73 3f                	jae    804a5d0 <_ZN6__asanL14AllocationSizeEm+0x1b0>
 804a591:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804a595:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804a599:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a59d:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804a5a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a5a7:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a5ad:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804a5b1:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804a5b5:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a5b9:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804a5c0:	00 
 804a5c1:	89 04 24             	mov    %eax,(%esp)
 804a5c4:	e8 e7 7d 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a5c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804a5d0:	39 cf                	cmp    %ecx,%edi
 804a5d2:	72 bd                	jb     804a591 <_ZN6__asanL14AllocationSizeEm+0x171>
 804a5d4:	03 4f 04             	add    0x4(%edi),%ecx
 804a5d7:	83 fa 00             	cmp    $0x0,%edx
 804a5da:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804a5e1:	00 
 804a5e2:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804a5e6:	0f 86 99 00 00 00    	jbe    804a685 <_ZN6__asanL14AllocationSizeEm+0x265>
 804a5ec:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804a5f0:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804a5f4:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a5f8:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804a5fe:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a602:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a608:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804a60c:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804a610:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a614:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804a61b:	00 
 804a61c:	89 04 24             	mov    %eax,(%esp)
 804a61f:	e8 8c 7d 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a624:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a628:	89 f5                	mov    %esi,%ebp
 804a62a:	81 e5 00 00 f0 ff    	and    $0xfff00000,%ebp
 804a630:	83 f8 10             	cmp    $0x10,%eax
 804a633:	0f 86 9f 00 00 00    	jbe    804a6d8 <_ZN6__asanL14AllocationSizeEm+0x2b8>
 804a639:	83 e8 10             	sub    $0x10,%eax
 804a63c:	ba 00 01 00 00       	mov    $0x100,%edx
 804a641:	89 c1                	mov    %eax,%ecx
 804a643:	83 e0 07             	and    $0x7,%eax
 804a646:	c1 e9 03             	shr    $0x3,%ecx
 804a649:	d3 e2                	shl    %cl,%edx
 804a64b:	89 d1                	mov    %edx,%ecx
 804a64d:	c1 e9 03             	shr    $0x3,%ecx
 804a650:	0f af c8             	imul   %eax,%ecx
 804a653:	01 d1                	add    %edx,%ecx
 804a655:	89 f0                	mov    %esi,%eax
 804a657:	31 d2                	xor    %edx,%edx
 804a659:	29 e8                	sub    %ebp,%eax
 804a65b:	f7 f1                	div    %ecx
 804a65d:	0f af c1             	imul   %ecx,%eax
 804a660:	01 c5                	add    %eax,%ebp
 804a662:	e9 1b fe ff ff       	jmp    804a482 <_ZN6__asanL14AllocationSizeEm+0x62>
 804a667:	c1 e0 04             	shl    $0x4,%eax
 804a66a:	89 c6                	mov    %eax,%esi
 804a66c:	e9 75 fe ff ff       	jmp    804a4e6 <_ZN6__asanL14AllocationSizeEm+0xc6>
 804a671:	31 ed                	xor    %ebp,%ebp
 804a673:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804a67a:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804a680:	e9 fd fd ff ff       	jmp    804a482 <_ZN6__asanL14AllocationSizeEm+0x62>
 804a685:	39 c8                	cmp    %ecx,%eax
 804a687:	0f 83 5f ff ff ff    	jae    804a5ec <_ZN6__asanL14AllocationSizeEm+0x1cc>
 804a68d:	83 fa 00             	cmp    $0x0,%edx
 804a690:	89 74 24 28          	mov    %esi,0x28(%esp)
 804a694:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804a69b:	00 
 804a69c:	76 44                	jbe    804a6e2 <_ZN6__asanL14AllocationSizeEm+0x2c2>
 804a69e:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804a6a2:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804a6a6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a6aa:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804a6b0:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a6b4:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a6ba:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804a6be:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804a6c2:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a6c6:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804a6cd:	00 
 804a6ce:	89 04 24             	mov    %eax,(%esp)
 804a6d1:	e8 da 7c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a6d6:	66 90                	xchg   %ax,%ax
 804a6d8:	c1 e0 04             	shl    $0x4,%eax
 804a6db:	89 c1                	mov    %eax,%ecx
 804a6dd:	e9 73 ff ff ff       	jmp    804a655 <_ZN6__asanL14AllocationSizeEm+0x235>
 804a6e2:	39 f0                	cmp    %esi,%eax
 804a6e4:	77 b8                	ja     804a69e <_ZN6__asanL14AllocationSizeEm+0x27e>
 804a6e6:	39 ce                	cmp    %ecx,%esi
 804a6e8:	77 87                	ja     804a671 <_ZN6__asanL14AllocationSizeEm+0x251>
 804a6ea:	8b ab a4 b9 00 00    	mov    0xb9a4(%ebx),%ebp
 804a6f0:	31 d2                	xor    %edx,%edx
 804a6f2:	89 f8                	mov    %edi,%eax
 804a6f4:	f7 f5                	div    %ebp
 804a6f6:	89 d1                	mov    %edx,%ecx
 804a6f8:	31 d2                	xor    %edx,%edx
 804a6fa:	85 c9                	test   %ecx,%ecx
 804a6fc:	75 7f                	jne    804a77d <_ZN6__asanL14AllocationSizeEm+0x35d>
 804a6fe:	01 fd                	add    %edi,%ebp
 804a700:	e9 6e ff ff ff       	jmp    804a673 <_ZN6__asanL14AllocationSizeEm+0x253>
 804a705:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804a70b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a70f:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a715:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a71c:	00 
 804a71d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a724:	00 
 804a725:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a729:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804a72d:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804a734:	00 
 804a735:	89 04 24             	mov    %eax,(%esp)
 804a738:	e8 73 7c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a73d:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804a743:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a747:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a74d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a754:	00 
 804a755:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a75c:	00 
 804a75d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a764:	00 
 804a765:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a76c:	00 
 804a76d:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804a774:	00 
 804a775:	89 04 24             	mov    %eax,(%esp)
 804a778:	e8 33 7c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a77d:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804a783:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a787:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a78d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a794:	00 
 804a795:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a79c:	00 
 804a79d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804a7a1:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a7a5:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804a7ac:	00 
 804a7ad:	89 04 24             	mov    %eax,(%esp)
 804a7b0:	e8 fb 7b 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a7b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804a7b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804a7c0 <_ZN6__asan17GetAllocatorCacheEPNS_28AsanThreadLocalMallocStorageE>:
 804a7c0:	53                   	push   %ebx
 804a7c1:	83 ec 28             	sub    $0x28,%esp
 804a7c4:	8b 44 24 30          	mov    0x30(%esp),%eax
 804a7c8:	e8 23 f3 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804a7cd:	81 c3 33 58 06 00    	add    $0x65833,%ebx
 804a7d3:	85 c0                	test   %eax,%eax
 804a7d5:	74 08                	je     804a7df <_ZN6__asan17GetAllocatorCacheEPNS_28AsanThreadLocalMallocStorageE+0x1f>
 804a7d7:	83 c4 28             	add    $0x28,%esp
 804a7da:	83 c0 40             	add    $0x40,%eax
 804a7dd:	5b                   	pop    %ebx
 804a7de:	c3                   	ret    
 804a7df:	8d 83 c8 2c fd ff    	lea    -0x2d338(%ebx),%eax
 804a7e5:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a7e9:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804a7ef:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804a7f6:	00 
 804a7f7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804a7fe:	00 
 804a7ff:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804a806:	00 
 804a807:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804a80e:	00 
 804a80f:	c7 44 24 04 52 00 00 	movl   $0x52,0x4(%esp)
 804a816:	00 
 804a817:	89 04 24             	mov    %eax,(%esp)
 804a81a:	e8 91 7b 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a81f:	90                   	nop

0804a820 <_ZN6__asan13AsanChunkView3BegEv>:
 804a820:	8b 44 24 04          	mov    0x4(%esp),%eax
 804a824:	8b 00                	mov    (%eax),%eax
 804a826:	83 c0 10             	add    $0x10,%eax
 804a829:	c3                   	ret    
 804a82a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804a830 <_ZN6__asan13AsanChunkView3EndEv>:
 804a830:	55                   	push   %ebp
 804a831:	57                   	push   %edi
 804a832:	56                   	push   %esi
 804a833:	53                   	push   %ebx
 804a834:	83 ec 3c             	sub    $0x3c,%esp
 804a837:	8b 44 24 50          	mov    0x50(%esp),%eax
 804a83b:	e8 b0 f2 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804a840:	81 c3 c0 57 06 00    	add    $0x657c0,%ebx
 804a846:	8b 30                	mov    (%eax),%esi
 804a848:	8d 46 10             	lea    0x10(%esi),%eax
 804a84b:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 804a84f:	8b 46 08             	mov    0x8(%esi),%eax
 804a852:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804a857:	74 0f                	je     804a868 <_ZN6__asan13AsanChunkView3EndEv+0x38>
 804a859:	03 44 24 2c          	add    0x2c(%esp),%eax
 804a85d:	83 c4 3c             	add    $0x3c,%esp
 804a860:	5b                   	pop    %ebx
 804a861:	5e                   	pop    %esi
 804a862:	5f                   	pop    %edi
 804a863:	5d                   	pop    %ebp
 804a864:	c3                   	ret    
 804a865:	8d 76 00             	lea    0x0(%esi),%esi
 804a868:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804a86c:	a8 01                	test   $0x1,%al
 804a86e:	0f 85 a4 00 00 00    	jne    804a918 <_ZN6__asan13AsanChunkView3EndEv+0xe8>
 804a874:	c0 e8 03             	shr    $0x3,%al
 804a877:	83 e0 07             	and    $0x7,%eax
 804a87a:	e8 41 f3 ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804a87f:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 804a883:	8b ab a0 b9 00 00    	mov    0xb9a0(%ebx),%ebp
 804a889:	29 c7                	sub    %eax,%edi
 804a88b:	89 fa                	mov    %edi,%edx
 804a88d:	c1 ea 14             	shr    $0x14,%edx
 804a890:	0f b6 44 15 00       	movzbl 0x0(%ebp,%edx,1),%eax
 804a895:	84 c0                	test   %al,%al
 804a897:	75 37                	jne    804a8d0 <_ZN6__asan13AsanChunkView3EndEv+0xa0>
 804a899:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804a89f:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804a8a2:	85 c7                	test   %eax,%edi
 804a8a4:	0f 85 fd 02 00 00    	jne    804aba7 <_ZN6__asan13AsanChunkView3EndEv+0x377>
 804a8aa:	31 d2                	xor    %edx,%edx
 804a8ac:	89 f8                	mov    %edi,%eax
 804a8ae:	f7 f1                	div    %ecx
 804a8b0:	89 d6                	mov    %edx,%esi
 804a8b2:	31 d2                	xor    %edx,%edx
 804a8b4:	85 f6                	test   %esi,%esi
 804a8b6:	0f 85 b3 02 00 00    	jne    804ab6f <_ZN6__asan13AsanChunkView3EndEv+0x33f>
 804a8bc:	29 cf                	sub    %ecx,%edi
 804a8be:	8d 4f 10             	lea    0x10(%edi),%ecx
 804a8c1:	8b 01                	mov    (%ecx),%eax
 804a8c3:	03 44 24 2c          	add    0x2c(%esp),%eax
 804a8c7:	83 c4 3c             	add    $0x3c,%esp
 804a8ca:	5b                   	pop    %ebx
 804a8cb:	5e                   	pop    %esi
 804a8cc:	5f                   	pop    %edi
 804a8cd:	5d                   	pop    %ebp
 804a8ce:	c3                   	ret    
 804a8cf:	90                   	nop
 804a8d0:	89 fa                	mov    %edi,%edx
 804a8d2:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804a8d8:	83 f8 10             	cmp    $0x10,%eax
 804a8db:	0f 86 0f 01 00 00    	jbe    804a9f0 <_ZN6__asan13AsanChunkView3EndEv+0x1c0>
 804a8e1:	8d 68 f0             	lea    -0x10(%eax),%ebp
 804a8e4:	b8 00 01 00 00       	mov    $0x100,%eax
 804a8e9:	89 e9                	mov    %ebp,%ecx
 804a8eb:	83 e5 07             	and    $0x7,%ebp
 804a8ee:	c1 e9 03             	shr    $0x3,%ecx
 804a8f1:	d3 e0                	shl    %cl,%eax
 804a8f3:	89 c6                	mov    %eax,%esi
 804a8f5:	c1 ee 03             	shr    $0x3,%esi
 804a8f8:	0f af f5             	imul   %ebp,%esi
 804a8fb:	01 c6                	add    %eax,%esi
 804a8fd:	89 f8                	mov    %edi,%eax
 804a8ff:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804a905:	29 d0                	sub    %edx,%eax
 804a907:	31 d2                	xor    %edx,%edx
 804a909:	f7 f6                	div    %esi
 804a90b:	83 c0 01             	add    $0x1,%eax
 804a90e:	c1 e0 04             	shl    $0x4,%eax
 804a911:	29 c1                	sub    %eax,%ecx
 804a913:	8b 01                	mov    (%ecx),%eax
 804a915:	eb ac                	jmp    804a8c3 <_ZN6__asan13AsanChunkView3EndEv+0x93>
 804a917:	90                   	nop
 804a918:	8b ab a0 b9 00 00    	mov    0xb9a0(%ebx),%ebp
 804a91e:	89 f0                	mov    %esi,%eax
 804a920:	c1 e8 14             	shr    $0x14,%eax
 804a923:	0f b6 44 05 00       	movzbl 0x0(%ebp,%eax,1),%eax
 804a928:	84 c0                	test   %al,%al
 804a92a:	0f 85 ca 00 00 00    	jne    804a9fa <_ZN6__asan13AsanChunkView3EndEv+0x1ca>
 804a930:	b8 01 00 00 00       	mov    $0x1,%eax
 804a935:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804a93b:	84 c0                	test   %al,%al
 804a93d:	74 0e                	je     804a94d <_ZN6__asan13AsanChunkView3EndEv+0x11d>
 804a93f:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804a945:	89 04 24             	mov    %eax,(%esp)
 804a948:	e8 e3 4a 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804a94d:	8b bb a8 b9 02 00    	mov    0x2b9a8(%ebx),%edi
 804a953:	85 ff                	test   %edi,%edi
 804a955:	0f 84 d5 01 00 00    	je     804ab30 <_ZN6__asan13AsanChunkView3EndEv+0x300>
 804a95b:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804a961:	31 ed                	xor    %ebp,%ebp
 804a963:	8d 04 ba             	lea    (%edx,%edi,4),%eax
 804a966:	66 90                	xchg   %ax,%ax
 804a968:	8b 0a                	mov    (%edx),%ecx
 804a96a:	39 ce                	cmp    %ecx,%esi
 804a96c:	72 13                	jb     804a981 <_ZN6__asan13AsanChunkView3EndEv+0x151>
 804a96e:	89 f7                	mov    %esi,%edi
 804a970:	29 cf                	sub    %ecx,%edi
 804a972:	89 7c 24 20          	mov    %edi,0x20(%esp)
 804a976:	89 f7                	mov    %esi,%edi
 804a978:	29 ef                	sub    %ebp,%edi
 804a97a:	39 7c 24 20          	cmp    %edi,0x20(%esp)
 804a97e:	0f 42 e9             	cmovb  %ecx,%ebp
 804a981:	83 c2 04             	add    $0x4,%edx
 804a984:	39 c2                	cmp    %eax,%edx
 804a986:	75 e0                	jne    804a968 <_ZN6__asan13AsanChunkView3EndEv+0x138>
 804a988:	85 ed                	test   %ebp,%ebp
 804a98a:	0f 84 08 01 00 00    	je     804aa98 <_ZN6__asan13AsanChunkView3EndEv+0x268>
 804a990:	8b 4d 00             	mov    0x0(%ebp),%ecx
 804a993:	31 d2                	xor    %edx,%edx
 804a995:	89 e8                	mov    %ebp,%eax
 804a997:	83 fa 00             	cmp    $0x0,%edx
 804a99a:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804a9a1:	00 
 804a9a2:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804a9a6:	0f 87 9a 00 00 00    	ja     804aa46 <_ZN6__asan13AsanChunkView3EndEv+0x216>
 804a9ac:	0f 83 8c 00 00 00    	jae    804aa3e <_ZN6__asan13AsanChunkView3EndEv+0x20e>
 804a9b2:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804a9b6:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804a9ba:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a9be:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804a9c4:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a9c8:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804a9ce:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804a9d2:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804a9d6:	89 54 24 10          	mov    %edx,0x10(%esp)
 804a9da:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804a9e1:	00 
 804a9e2:	89 04 24             	mov    %eax,(%esp)
 804a9e5:	e8 c6 79 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804a9ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a9f0:	c1 e0 04             	shl    $0x4,%eax
 804a9f3:	89 c6                	mov    %eax,%esi
 804a9f5:	e9 03 ff ff ff       	jmp    804a8fd <_ZN6__asan13AsanChunkView3EndEv+0xcd>
 804a9fa:	89 f7                	mov    %esi,%edi
 804a9fc:	81 e7 00 00 f0 ff    	and    $0xfff00000,%edi
 804aa02:	83 f8 10             	cmp    $0x10,%eax
 804aa05:	0f 86 a3 00 00 00    	jbe    804aaae <_ZN6__asan13AsanChunkView3EndEv+0x27e>
 804aa0b:	8d 50 f0             	lea    -0x10(%eax),%edx
 804aa0e:	b8 00 01 00 00       	mov    $0x100,%eax
 804aa13:	89 d1                	mov    %edx,%ecx
 804aa15:	83 e2 07             	and    $0x7,%edx
 804aa18:	c1 e9 03             	shr    $0x3,%ecx
 804aa1b:	d3 e0                	shl    %cl,%eax
 804aa1d:	89 c1                	mov    %eax,%ecx
 804aa1f:	c1 e9 03             	shr    $0x3,%ecx
 804aa22:	0f af ca             	imul   %edx,%ecx
 804aa25:	01 c1                	add    %eax,%ecx
 804aa27:	89 f0                	mov    %esi,%eax
 804aa29:	31 d2                	xor    %edx,%edx
 804aa2b:	29 f8                	sub    %edi,%eax
 804aa2d:	f7 f1                	div    %ecx
 804aa2f:	0f af c1             	imul   %ecx,%eax
 804aa32:	01 c7                	add    %eax,%edi
 804aa34:	89 fa                	mov    %edi,%edx
 804aa36:	c1 ea 14             	shr    $0x14,%edx
 804aa39:	e9 52 fe ff ff       	jmp    804a890 <_ZN6__asan13AsanChunkView3EndEv+0x60>
 804aa3e:	39 cd                	cmp    %ecx,%ebp
 804aa40:	0f 82 6c ff ff ff    	jb     804a9b2 <_ZN6__asan13AsanChunkView3EndEv+0x182>
 804aa46:	03 4d 04             	add    0x4(%ebp),%ecx
 804aa49:	83 fa 00             	cmp    $0x0,%edx
 804aa4c:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804aa53:	00 
 804aa54:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804aa58:	76 5e                	jbe    804aab8 <_ZN6__asan13AsanChunkView3EndEv+0x288>
 804aa5a:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804aa5e:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804aa62:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804aa66:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804aa6c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aa70:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804aa76:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804aa7a:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804aa7e:	89 54 24 10          	mov    %edx,0x10(%esp)
 804aa82:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804aa89:	00 
 804aa8a:	89 04 24             	mov    %eax,(%esp)
 804aa8d:	e8 1e 79 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804aa92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804aa98:	31 d2                	xor    %edx,%edx
 804aa9a:	31 ff                	xor    %edi,%edi
 804aa9c:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804aaa3:	8b ab a0 b9 00 00    	mov    0xb9a0(%ebx),%ebp
 804aaa9:	e9 e2 fd ff ff       	jmp    804a890 <_ZN6__asan13AsanChunkView3EndEv+0x60>
 804aaae:	c1 e0 04             	shl    $0x4,%eax
 804aab1:	89 c1                	mov    %eax,%ecx
 804aab3:	e9 6f ff ff ff       	jmp    804aa27 <_ZN6__asan13AsanChunkView3EndEv+0x1f7>
 804aab8:	39 c8                	cmp    %ecx,%eax
 804aaba:	73 9e                	jae    804aa5a <_ZN6__asan13AsanChunkView3EndEv+0x22a>
 804aabc:	83 fa 00             	cmp    $0x0,%edx
 804aabf:	89 74 24 20          	mov    %esi,0x20(%esp)
 804aac3:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804aaca:	00 
 804aacb:	76 3b                	jbe    804ab08 <_ZN6__asan13AsanChunkView3EndEv+0x2d8>
 804aacd:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804aad1:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804aad5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804aad9:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804aadf:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aae3:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804aae9:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804aaed:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804aaf1:	89 54 24 10          	mov    %edx,0x10(%esp)
 804aaf5:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804aafc:	00 
 804aafd:	89 04 24             	mov    %eax,(%esp)
 804ab00:	e8 ab 78 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ab05:	8d 76 00             	lea    0x0(%esi),%esi
 804ab08:	39 f0                	cmp    %esi,%eax
 804ab0a:	77 c1                	ja     804aacd <_ZN6__asan13AsanChunkView3EndEv+0x29d>
 804ab0c:	39 ce                	cmp    %ecx,%esi
 804ab0e:	77 88                	ja     804aa98 <_ZN6__asan13AsanChunkView3EndEv+0x268>
 804ab10:	8b bb a4 b9 00 00    	mov    0xb9a4(%ebx),%edi
 804ab16:	31 d2                	xor    %edx,%edx
 804ab18:	89 e8                	mov    %ebp,%eax
 804ab1a:	f7 f7                	div    %edi
 804ab1c:	89 d1                	mov    %edx,%ecx
 804ab1e:	31 d2                	xor    %edx,%edx
 804ab20:	85 c9                	test   %ecx,%ecx
 804ab22:	75 13                	jne    804ab37 <_ZN6__asan13AsanChunkView3EndEv+0x307>
 804ab24:	01 ef                	add    %ebp,%edi
 804ab26:	89 fa                	mov    %edi,%edx
 804ab28:	c1 ea 14             	shr    $0x14,%edx
 804ab2b:	e9 6c ff ff ff       	jmp    804aa9c <_ZN6__asan13AsanChunkView3EndEv+0x26c>
 804ab30:	31 d2                	xor    %edx,%edx
 804ab32:	e9 65 ff ff ff       	jmp    804aa9c <_ZN6__asan13AsanChunkView3EndEv+0x26c>
 804ab37:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804ab3d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ab41:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804ab47:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ab4e:	00 
 804ab4f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ab56:	00 
 804ab57:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804ab5b:	89 54 24 10          	mov    %edx,0x10(%esp)
 804ab5f:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804ab66:	00 
 804ab67:	89 04 24             	mov    %eax,(%esp)
 804ab6a:	e8 41 78 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ab6f:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804ab75:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ab79:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804ab7f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ab86:	00 
 804ab87:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ab8e:	00 
 804ab8f:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804ab93:	89 54 24 10          	mov    %edx,0x10(%esp)
 804ab97:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804ab9e:	00 
 804ab9f:	89 04 24             	mov    %eax,(%esp)
 804aba2:	e8 09 78 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804aba7:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804abad:	89 44 24 08          	mov    %eax,0x8(%esp)
 804abb1:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804abb7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804abbe:	00 
 804abbf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804abc6:	00 
 804abc7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804abce:	00 
 804abcf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804abd6:	00 
 804abd7:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804abde:	00 
 804abdf:	89 04 24             	mov    %eax,(%esp)
 804abe2:	e8 c9 77 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804abe7:	90                   	nop
 804abe8:	90                   	nop
 804abe9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0804abf0 <_ZN6__asan13AsanChunkView8UsedSizeEv>:
 804abf0:	55                   	push   %ebp
 804abf1:	57                   	push   %edi
 804abf2:	56                   	push   %esi
 804abf3:	53                   	push   %ebx
 804abf4:	83 ec 3c             	sub    $0x3c,%esp
 804abf7:	8b 44 24 50          	mov    0x50(%esp),%eax
 804abfb:	e8 f0 ee ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ac00:	81 c3 00 54 06 00    	add    $0x65400,%ebx
 804ac06:	8b 30                	mov    (%eax),%esi
 804ac08:	8b 46 08             	mov    0x8(%esi),%eax
 804ac0b:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804ac10:	74 0e                	je     804ac20 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x30>
 804ac12:	83 c4 3c             	add    $0x3c,%esp
 804ac15:	5b                   	pop    %ebx
 804ac16:	5e                   	pop    %esi
 804ac17:	5f                   	pop    %edi
 804ac18:	5d                   	pop    %ebp
 804ac19:	c3                   	ret    
 804ac1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804ac20:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804ac24:	a8 01                	test   $0x1,%al
 804ac26:	0f 85 a4 00 00 00    	jne    804acd0 <_ZN6__asan13AsanChunkView8UsedSizeEv+0xe0>
 804ac2c:	c0 e8 03             	shr    $0x3,%al
 804ac2f:	83 e0 07             	and    $0x7,%eax
 804ac32:	e8 89 ef ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804ac37:	8d 7e 10             	lea    0x10(%esi),%edi
 804ac3a:	8b ab a0 b9 00 00    	mov    0xb9a0(%ebx),%ebp
 804ac40:	29 c7                	sub    %eax,%edi
 804ac42:	89 f8                	mov    %edi,%eax
 804ac44:	c1 e8 14             	shr    $0x14,%eax
 804ac47:	0f b6 44 05 00       	movzbl 0x0(%ebp,%eax,1),%eax
 804ac4c:	84 c0                	test   %al,%al
 804ac4e:	75 38                	jne    804ac88 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x98>
 804ac50:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804ac56:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804ac59:	85 c7                	test   %eax,%edi
 804ac5b:	0f 85 fe 02 00 00    	jne    804af5f <_ZN6__asan13AsanChunkView8UsedSizeEv+0x36f>
 804ac61:	31 d2                	xor    %edx,%edx
 804ac63:	89 f8                	mov    %edi,%eax
 804ac65:	f7 f1                	div    %ecx
 804ac67:	89 d6                	mov    %edx,%esi
 804ac69:	31 d2                	xor    %edx,%edx
 804ac6b:	85 f6                	test   %esi,%esi
 804ac6d:	0f 85 b4 02 00 00    	jne    804af27 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x337>
 804ac73:	29 cf                	sub    %ecx,%edi
 804ac75:	8d 4f 10             	lea    0x10(%edi),%ecx
 804ac78:	8b 01                	mov    (%ecx),%eax
 804ac7a:	83 c4 3c             	add    $0x3c,%esp
 804ac7d:	5b                   	pop    %ebx
 804ac7e:	5e                   	pop    %esi
 804ac7f:	5f                   	pop    %edi
 804ac80:	5d                   	pop    %ebp
 804ac81:	c3                   	ret    
 804ac82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804ac88:	89 fa                	mov    %edi,%edx
 804ac8a:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804ac90:	83 f8 10             	cmp    $0x10,%eax
 804ac93:	0f 86 0f 01 00 00    	jbe    804ada8 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x1b8>
 804ac99:	8d 68 f0             	lea    -0x10(%eax),%ebp
 804ac9c:	b8 00 01 00 00       	mov    $0x100,%eax
 804aca1:	89 e9                	mov    %ebp,%ecx
 804aca3:	83 e5 07             	and    $0x7,%ebp
 804aca6:	c1 e9 03             	shr    $0x3,%ecx
 804aca9:	d3 e0                	shl    %cl,%eax
 804acab:	89 c6                	mov    %eax,%esi
 804acad:	c1 ee 03             	shr    $0x3,%esi
 804acb0:	0f af f5             	imul   %ebp,%esi
 804acb3:	01 c6                	add    %eax,%esi
 804acb5:	89 f8                	mov    %edi,%eax
 804acb7:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804acbd:	29 d0                	sub    %edx,%eax
 804acbf:	31 d2                	xor    %edx,%edx
 804acc1:	f7 f6                	div    %esi
 804acc3:	83 c0 01             	add    $0x1,%eax
 804acc6:	c1 e0 04             	shl    $0x4,%eax
 804acc9:	29 c1                	sub    %eax,%ecx
 804accb:	8b 01                	mov    (%ecx),%eax
 804accd:	eb ab                	jmp    804ac7a <_ZN6__asan13AsanChunkView8UsedSizeEv+0x8a>
 804accf:	90                   	nop
 804acd0:	8b ab a0 b9 00 00    	mov    0xb9a0(%ebx),%ebp
 804acd6:	89 f0                	mov    %esi,%eax
 804acd8:	c1 e8 14             	shr    $0x14,%eax
 804acdb:	0f b6 44 05 00       	movzbl 0x0(%ebp,%eax,1),%eax
 804ace0:	84 c0                	test   %al,%al
 804ace2:	0f 85 ca 00 00 00    	jne    804adb2 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x1c2>
 804ace8:	b8 01 00 00 00       	mov    $0x1,%eax
 804aced:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804acf3:	84 c0                	test   %al,%al
 804acf5:	74 0e                	je     804ad05 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x115>
 804acf7:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804acfd:	89 04 24             	mov    %eax,(%esp)
 804ad00:	e8 2b 47 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804ad05:	8b bb a8 b9 02 00    	mov    0x2b9a8(%ebx),%edi
 804ad0b:	85 ff                	test   %edi,%edi
 804ad0d:	0f 84 d5 01 00 00    	je     804aee8 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x2f8>
 804ad13:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804ad19:	31 ed                	xor    %ebp,%ebp
 804ad1b:	8d 04 ba             	lea    (%edx,%edi,4),%eax
 804ad1e:	66 90                	xchg   %ax,%ax
 804ad20:	8b 0a                	mov    (%edx),%ecx
 804ad22:	39 ce                	cmp    %ecx,%esi
 804ad24:	72 13                	jb     804ad39 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x149>
 804ad26:	89 f7                	mov    %esi,%edi
 804ad28:	29 cf                	sub    %ecx,%edi
 804ad2a:	89 7c 24 28          	mov    %edi,0x28(%esp)
 804ad2e:	89 f7                	mov    %esi,%edi
 804ad30:	29 ef                	sub    %ebp,%edi
 804ad32:	39 7c 24 28          	cmp    %edi,0x28(%esp)
 804ad36:	0f 42 e9             	cmovb  %ecx,%ebp
 804ad39:	83 c2 04             	add    $0x4,%edx
 804ad3c:	39 c2                	cmp    %eax,%edx
 804ad3e:	75 e0                	jne    804ad20 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x130>
 804ad40:	85 ed                	test   %ebp,%ebp
 804ad42:	0f 84 08 01 00 00    	je     804ae50 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x260>
 804ad48:	8b 4d 00             	mov    0x0(%ebp),%ecx
 804ad4b:	31 d2                	xor    %edx,%edx
 804ad4d:	89 e8                	mov    %ebp,%eax
 804ad4f:	83 fa 00             	cmp    $0x0,%edx
 804ad52:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804ad59:	00 
 804ad5a:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804ad5e:	0f 87 9a 00 00 00    	ja     804adfe <_ZN6__asan13AsanChunkView8UsedSizeEv+0x20e>
 804ad64:	0f 83 8c 00 00 00    	jae    804adf6 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x206>
 804ad6a:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804ad6e:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804ad72:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804ad76:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804ad7c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ad80:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804ad86:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804ad8a:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804ad8e:	89 54 24 10          	mov    %edx,0x10(%esp)
 804ad92:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804ad99:	00 
 804ad9a:	89 04 24             	mov    %eax,(%esp)
 804ad9d:	e8 0e 76 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ada2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804ada8:	c1 e0 04             	shl    $0x4,%eax
 804adab:	89 c6                	mov    %eax,%esi
 804adad:	e9 03 ff ff ff       	jmp    804acb5 <_ZN6__asan13AsanChunkView8UsedSizeEv+0xc5>
 804adb2:	89 f7                	mov    %esi,%edi
 804adb4:	81 e7 00 00 f0 ff    	and    $0xfff00000,%edi
 804adba:	83 f8 10             	cmp    $0x10,%eax
 804adbd:	0f 86 a3 00 00 00    	jbe    804ae66 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x276>
 804adc3:	83 e8 10             	sub    $0x10,%eax
 804adc6:	ba 00 01 00 00       	mov    $0x100,%edx
 804adcb:	89 c1                	mov    %eax,%ecx
 804adcd:	83 e0 07             	and    $0x7,%eax
 804add0:	c1 e9 03             	shr    $0x3,%ecx
 804add3:	d3 e2                	shl    %cl,%edx
 804add5:	89 d1                	mov    %edx,%ecx
 804add7:	c1 e9 03             	shr    $0x3,%ecx
 804adda:	0f af c8             	imul   %eax,%ecx
 804addd:	01 d1                	add    %edx,%ecx
 804addf:	89 f0                	mov    %esi,%eax
 804ade1:	31 d2                	xor    %edx,%edx
 804ade3:	29 f8                	sub    %edi,%eax
 804ade5:	f7 f1                	div    %ecx
 804ade7:	0f af c1             	imul   %ecx,%eax
 804adea:	01 c7                	add    %eax,%edi
 804adec:	89 f8                	mov    %edi,%eax
 804adee:	c1 e8 14             	shr    $0x14,%eax
 804adf1:	e9 51 fe ff ff       	jmp    804ac47 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x57>
 804adf6:	39 cd                	cmp    %ecx,%ebp
 804adf8:	0f 82 6c ff ff ff    	jb     804ad6a <_ZN6__asan13AsanChunkView8UsedSizeEv+0x17a>
 804adfe:	03 4d 04             	add    0x4(%ebp),%ecx
 804ae01:	83 fa 00             	cmp    $0x0,%edx
 804ae04:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804ae0b:	00 
 804ae0c:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804ae10:	76 5e                	jbe    804ae70 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x280>
 804ae12:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804ae16:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804ae1a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804ae1e:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804ae24:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ae28:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804ae2e:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804ae32:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804ae36:	89 54 24 10          	mov    %edx,0x10(%esp)
 804ae3a:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804ae41:	00 
 804ae42:	89 04 24             	mov    %eax,(%esp)
 804ae45:	e8 66 75 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ae4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804ae50:	31 c0                	xor    %eax,%eax
 804ae52:	31 ff                	xor    %edi,%edi
 804ae54:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804ae5b:	8b ab a0 b9 00 00    	mov    0xb9a0(%ebx),%ebp
 804ae61:	e9 e1 fd ff ff       	jmp    804ac47 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x57>
 804ae66:	c1 e0 04             	shl    $0x4,%eax
 804ae69:	89 c1                	mov    %eax,%ecx
 804ae6b:	e9 6f ff ff ff       	jmp    804addf <_ZN6__asan13AsanChunkView8UsedSizeEv+0x1ef>
 804ae70:	39 c8                	cmp    %ecx,%eax
 804ae72:	73 9e                	jae    804ae12 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x222>
 804ae74:	83 fa 00             	cmp    $0x0,%edx
 804ae77:	89 74 24 28          	mov    %esi,0x28(%esp)
 804ae7b:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804ae82:	00 
 804ae83:	76 3b                	jbe    804aec0 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x2d0>
 804ae85:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804ae89:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804ae8d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804ae91:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804ae97:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ae9b:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804aea1:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804aea5:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804aea9:	89 54 24 10          	mov    %edx,0x10(%esp)
 804aead:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804aeb4:	00 
 804aeb5:	89 04 24             	mov    %eax,(%esp)
 804aeb8:	e8 f3 74 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804aebd:	8d 76 00             	lea    0x0(%esi),%esi
 804aec0:	39 f0                	cmp    %esi,%eax
 804aec2:	77 c1                	ja     804ae85 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x295>
 804aec4:	39 ce                	cmp    %ecx,%esi
 804aec6:	77 88                	ja     804ae50 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x260>
 804aec8:	8b bb a4 b9 00 00    	mov    0xb9a4(%ebx),%edi
 804aece:	31 d2                	xor    %edx,%edx
 804aed0:	89 e8                	mov    %ebp,%eax
 804aed2:	f7 f7                	div    %edi
 804aed4:	89 d1                	mov    %edx,%ecx
 804aed6:	31 d2                	xor    %edx,%edx
 804aed8:	85 c9                	test   %ecx,%ecx
 804aeda:	75 13                	jne    804aeef <_ZN6__asan13AsanChunkView8UsedSizeEv+0x2ff>
 804aedc:	01 ef                	add    %ebp,%edi
 804aede:	89 f8                	mov    %edi,%eax
 804aee0:	c1 e8 14             	shr    $0x14,%eax
 804aee3:	e9 6c ff ff ff       	jmp    804ae54 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x264>
 804aee8:	31 c0                	xor    %eax,%eax
 804aeea:	e9 65 ff ff ff       	jmp    804ae54 <_ZN6__asan13AsanChunkView8UsedSizeEv+0x264>
 804aeef:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804aef5:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aef9:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804aeff:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804af06:	00 
 804af07:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804af0e:	00 
 804af0f:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804af13:	89 54 24 10          	mov    %edx,0x10(%esp)
 804af17:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804af1e:	00 
 804af1f:	89 04 24             	mov    %eax,(%esp)
 804af22:	e8 89 74 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804af27:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804af2d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804af31:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804af37:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804af3e:	00 
 804af3f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804af46:	00 
 804af47:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804af4b:	89 54 24 10          	mov    %edx,0x10(%esp)
 804af4f:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804af56:	00 
 804af57:	89 04 24             	mov    %eax,(%esp)
 804af5a:	e8 51 74 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804af5f:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804af65:	89 44 24 08          	mov    %eax,0x8(%esp)
 804af69:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804af6f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804af76:	00 
 804af77:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804af7e:	00 
 804af7f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804af86:	00 
 804af87:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804af8e:	00 
 804af8f:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804af96:	00 
 804af97:	89 04 24             	mov    %eax,(%esp)
 804af9a:	e8 11 74 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804af9f:	90                   	nop

0804afa0 <_ZN6__asan13AsanChunkView8AllocTidEv>:
 804afa0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804afa4:	8b 00                	mov    (%eax),%eax
 804afa6:	8b 00                	mov    (%eax),%eax
 804afa8:	c1 e8 08             	shr    $0x8,%eax
 804afab:	c3                   	ret    
 804afac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0804afb0 <_ZN6__asan13AsanChunkView7FreeTidEv>:
 804afb0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804afb4:	8b 00                	mov    (%eax),%eax
 804afb6:	8b 40 04             	mov    0x4(%eax),%eax
 804afb9:	25 ff ff ff 00       	and    $0xffffff,%eax
 804afbe:	c3                   	ret    
 804afbf:	90                   	nop

0804afc0 <_ZN6__asan13AsanChunkView13GetAllocStackEPN11__sanitizer10StackTraceE>:
 804afc0:	55                   	push   %ebp
 804afc1:	56                   	push   %esi
 804afc2:	53                   	push   %ebx
 804afc3:	e8 28 eb ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804afc8:	81 c3 38 50 06 00    	add    $0x65038,%ebx
 804afce:	83 ec 20             	sub    $0x20,%esp
 804afd1:	8b 74 24 30          	mov    0x30(%esp),%esi
 804afd5:	8b 6c 24 34          	mov    0x34(%esp),%ebp
 804afd9:	e8 42 d5 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804afde:	80 78 50 00          	cmpb   $0x0,0x50(%eax)
 804afe2:	75 3c                	jne    804b020 <_ZN6__asan13AsanChunkView13GetAllocStackEPN11__sanitizer10StackTraceE+0x60>
 804afe4:	8b 36                	mov    (%esi),%esi
 804afe6:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804afea:	c0 e8 03             	shr    $0x3,%al
 804afed:	83 e0 07             	and    $0x7,%eax
 804aff0:	e8 cb eb ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804aff5:	31 c9                	xor    %ecx,%ecx
 804aff7:	83 f8 10             	cmp    $0x10,%eax
 804affa:	77 36                	ja     804b032 <_ZN6__asan13AsanChunkView13GetAllocStackEPN11__sanitizer10StackTraceE+0x72>
 804affc:	8d 48 f0             	lea    -0x10(%eax),%ecx
 804afff:	8d 56 10             	lea    0x10(%esi),%edx
 804b002:	c1 e9 02             	shr    $0x2,%ecx
 804b005:	29 c2                	sub    %eax,%edx
 804b007:	89 2c 24             	mov    %ebp,(%esp)
 804b00a:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804b00e:	89 54 24 04          	mov    %edx,0x4(%esp)
 804b012:	e8 39 9b 01 00       	call   8064b50 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm>
 804b017:	83 c4 20             	add    $0x20,%esp
 804b01a:	5b                   	pop    %ebx
 804b01b:	5e                   	pop    %esi
 804b01c:	5d                   	pop    %ebp
 804b01d:	c3                   	ret    
 804b01e:	66 90                	xchg   %ax,%ax
 804b020:	8b 06                	mov    (%esi),%eax
 804b022:	89 ea                	mov    %ebp,%edx
 804b024:	8b 40 0c             	mov    0xc(%eax),%eax
 804b027:	83 c4 20             	add    $0x20,%esp
 804b02a:	5b                   	pop    %ebx
 804b02b:	5e                   	pop    %esi
 804b02c:	5d                   	pop    %ebp
 804b02d:	e9 fe eb ff ff       	jmp    8049c30 <_ZN6__asanL19GetStackTraceFromIdEjPN11__sanitizer10StackTraceE>
 804b032:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804b036:	8d 83 dc 2f fd ff    	lea    -0x2d024(%ebx),%eax
 804b03c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b040:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804b046:	c7 44 24 14 10 00 00 	movl   $0x10,0x14(%esp)
 804b04d:	00 
 804b04e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804b055:	00 
 804b056:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804b05a:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)
 804b061:	00 
 804b062:	89 04 24             	mov    %eax,(%esp)
 804b065:	e8 46 73 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b06a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804b070 <_ZN6__asan13AsanChunkView12GetFreeStackEPN11__sanitizer10StackTraceE>:
 804b070:	57                   	push   %edi
 804b071:	56                   	push   %esi
 804b072:	53                   	push   %ebx
 804b073:	e8 78 ea ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b078:	81 c3 88 4f 06 00    	add    $0x64f88,%ebx
 804b07e:	83 ec 10             	sub    $0x10,%esp
 804b081:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804b085:	8b 74 24 24          	mov    0x24(%esp),%esi
 804b089:	e8 92 d4 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804b08e:	80 78 50 00          	cmpb   $0x0,0x50(%eax)
 804b092:	8b 07                	mov    (%edi),%eax
 804b094:	75 3a                	jne    804b0d0 <_ZN6__asan13AsanChunkView12GetFreeStackEPN11__sanitizer10StackTraceE+0x60>
 804b096:	8b 50 08             	mov    0x8(%eax),%edx
 804b099:	31 c9                	xor    %ecx,%ecx
 804b09b:	83 fa 07             	cmp    $0x7,%edx
 804b09e:	77 20                	ja     804b0c0 <_ZN6__asan13AsanChunkView12GetFreeStackEPN11__sanitizer10StackTraceE+0x50>
 804b0a0:	83 c0 18             	add    $0x18,%eax
 804b0a3:	89 34 24             	mov    %esi,(%esp)
 804b0a6:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804b0aa:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b0ae:	e8 9d 9a 01 00       	call   8064b50 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm>
 804b0b3:	83 c4 10             	add    $0x10,%esp
 804b0b6:	5b                   	pop    %ebx
 804b0b7:	5e                   	pop    %esi
 804b0b8:	5f                   	pop    %edi
 804b0b9:	c3                   	ret    
 804b0ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804b0c0:	8d 4a 07             	lea    0x7(%edx),%ecx
 804b0c3:	83 e1 f8             	and    $0xfffffff8,%ecx
 804b0c6:	83 e9 08             	sub    $0x8,%ecx
 804b0c9:	c1 e9 02             	shr    $0x2,%ecx
 804b0cc:	eb d2                	jmp    804b0a0 <_ZN6__asan13AsanChunkView12GetFreeStackEPN11__sanitizer10StackTraceE+0x30>
 804b0ce:	66 90                	xchg   %ax,%ax
 804b0d0:	8b 40 14             	mov    0x14(%eax),%eax
 804b0d3:	83 c4 10             	add    $0x10,%esp
 804b0d6:	89 f2                	mov    %esi,%edx
 804b0d8:	5b                   	pop    %ebx
 804b0d9:	5e                   	pop    %esi
 804b0da:	5f                   	pop    %edi
 804b0db:	e9 50 eb ff ff       	jmp    8049c30 <_ZN6__asanL19GetStackTraceFromIdEjPN11__sanitizer10StackTraceE>

0804b0e0 <_ZN6__asan18GetQuarantineCacheEPNS_28AsanThreadLocalMallocStorageE>:
 804b0e0:	53                   	push   %ebx
 804b0e1:	83 ec 28             	sub    $0x28,%esp
 804b0e4:	8b 44 24 30          	mov    0x30(%esp),%eax
 804b0e8:	e8 03 ea ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b0ed:	81 c3 13 4f 06 00    	add    $0x64f13,%ebx
 804b0f3:	85 c0                	test   %eax,%eax
 804b0f5:	74 05                	je     804b0fc <_ZN6__asan18GetQuarantineCacheEPNS_28AsanThreadLocalMallocStorageE+0x1c>
 804b0f7:	83 c4 28             	add    $0x28,%esp
 804b0fa:	5b                   	pop    %ebx
 804b0fb:	c3                   	ret    
 804b0fc:	8d 83 c8 2c fd ff    	lea    -0x2d338(%ebx),%eax
 804b102:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b106:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804b10c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804b113:	00 
 804b114:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804b11b:	00 
 804b11c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804b123:	00 
 804b124:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804b12b:	00 
 804b12c:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)
 804b133:	00 
 804b134:	89 04 24             	mov    %eax,(%esp)
 804b137:	e8 74 72 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b13c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0804b140 <_ZN6__asan19InitializeAllocatorEv>:
 804b140:	57                   	push   %edi
 804b141:	56                   	push   %esi
 804b142:	53                   	push   %ebx
 804b143:	e8 a8 e9 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b148:	81 c3 b8 4e 06 00    	add    $0x64eb8,%ebx
 804b14e:	83 ec 20             	sub    $0x20,%esp
 804b151:	e8 ba 70 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804b156:	8d 50 ff             	lea    -0x1(%eax),%edx
 804b159:	85 c2                	test   %eax,%edx
 804b15b:	0f 85 d1 00 00 00    	jne    804b232 <_ZN6__asan19InitializeAllocatorEv+0xf2>
 804b161:	89 c6                	mov    %eax,%esi
 804b163:	05 3f 26 00 00       	add    $0x263f,%eax
 804b168:	f7 de                	neg    %esi
 804b16a:	21 c6                	and    %eax,%esi
 804b16c:	8d 83 d6 2c fd ff    	lea    -0x2d32a(%ebx),%eax
 804b172:	89 34 24             	mov    %esi,(%esp)
 804b175:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b179:	e8 62 80 01 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 804b17e:	89 74 24 04          	mov    %esi,0x4(%esp)
 804b182:	c7 44 24 08 fa 00 00 	movl   $0xfa,0x8(%esp)
 804b189:	00 
 804b18a:	89 04 24             	mov    %eax,(%esp)
 804b18d:	89 c7                	mov    %eax,%edi
 804b18f:	e8 1c 19 01 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804b194:	e8 d7 e7 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804b199:	89 04 24             	mov    %eax,(%esp)
 804b19c:	e8 af eb 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804b1a1:	89 bb a0 b9 00 00    	mov    %edi,0xb9a0(%ebx)
 804b1a7:	01 70 2c             	add    %esi,0x2c(%eax)
 804b1aa:	83 40 28 01          	addl   $0x1,0x28(%eax)
 804b1ae:	8d b3 a4 b9 00 00    	lea    0xb9a4(%ebx),%esi
 804b1b4:	89 34 24             	mov    %esi,(%esp)
 804b1b7:	81 c6 1c 01 02 00    	add    $0x2011c,%esi
 804b1bd:	c7 44 24 08 1c 01 02 	movl   $0x2011c,0x8(%esp)
 804b1c4:	00 
 804b1c5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804b1cc:	00 
 804b1cd:	e8 6e 67 01 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 804b1d2:	e8 39 70 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804b1d7:	89 34 24             	mov    %esi,(%esp)
 804b1da:	c7 44 24 08 2c 00 00 	movl   $0x2c,0x8(%esp)
 804b1e1:	00 
 804b1e2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804b1e9:	00 
 804b1ea:	89 83 a4 b9 00 00    	mov    %eax,0xb9a4(%ebx)
 804b1f0:	e8 4b 67 01 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 804b1f5:	89 b3 c0 ba 02 00    	mov    %esi,0x2bac0(%ebx)
 804b1fb:	89 b3 c4 ba 02 00    	mov    %esi,0x2bac4(%ebx)
 804b201:	e8 1a d3 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804b206:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
 804b20b:	8b 00                	mov    (%eax),%eax
 804b20d:	c7 83 08 b9 00 00 00 	movl   $0x40000,0xb908(%ebx)
 804b214:	00 04 00 
 804b217:	89 83 00 b9 00 00    	mov    %eax,0xb900(%ebx)
 804b21d:	f7 e2                	mul    %edx
 804b21f:	c1 ea 03             	shr    $0x3,%edx
 804b222:	8d 04 d2             	lea    (%edx,%edx,8),%eax
 804b225:	89 83 04 b9 00 00    	mov    %eax,0xb904(%ebx)
 804b22b:	83 c4 20             	add    $0x20,%esp
 804b22e:	5b                   	pop    %ebx
 804b22f:	5e                   	pop    %esi
 804b230:	5f                   	pop    %edi
 804b231:	c3                   	ret    
 804b232:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 804b238:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b23c:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 804b242:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804b249:	00 
 804b24a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804b251:	00 
 804b252:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804b259:	00 
 804b25a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804b261:	00 
 804b262:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 804b269:	00 
 804b26a:	89 04 24             	mov    %eax,(%esp)
 804b26d:	e8 3e 71 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b272:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804b279:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804b280 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_>:
 804b280:	55                   	push   %ebp
 804b281:	57                   	push   %edi
 804b282:	56                   	push   %esi
 804b283:	53                   	push   %ebx
 804b284:	83 ec 3c             	sub    $0x3c,%esp
 804b287:	8b 74 24 54          	mov    0x54(%esp),%esi
 804b28b:	8b 7c 24 58          	mov    0x58(%esp),%edi
 804b28f:	e8 5c e8 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b294:	81 c3 6c 4d 06 00    	add    $0x64d6c,%ebx
 804b29a:	0f b6 16             	movzbl (%esi),%edx
 804b29d:	0f b6 07             	movzbl (%edi),%eax
 804b2a0:	38 c2                	cmp    %al,%dl
 804b2a2:	74 22                	je     804b2c6 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0x46>
 804b2a4:	80 fa 02             	cmp    $0x2,%dl
 804b2a7:	0f 84 9a 00 00 00    	je     804b347 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xc7>
 804b2ad:	3c 02                	cmp    $0x2,%al
 804b2af:	0f 84 a3 00 00 00    	je     804b358 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xd8>
 804b2b5:	80 fa 03             	cmp    $0x3,%dl
 804b2b8:	0f 84 89 00 00 00    	je     804b347 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xc7>
 804b2be:	3c 03                	cmp    $0x3,%al
 804b2c0:	0f 84 92 00 00 00    	je     804b358 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xd8>
 804b2c6:	8d 6c 24 2c          	lea    0x2c(%esp),%ebp
 804b2ca:	89 2c 24             	mov    %ebp,(%esp)
 804b2cd:	89 74 24 2c          	mov    %esi,0x2c(%esp)
 804b2d1:	e8 5a f5 ff ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 804b2d6:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 804b2da:	8d 51 01             	lea    0x1(%ecx),%edx
 804b2dd:	39 c2                	cmp    %eax,%edx
 804b2df:	77 47                	ja     804b328 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xa8>
 804b2e1:	8d 83 74 30 fd ff    	lea    -0x2cf8c(%ebx),%eax
 804b2e7:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b2eb:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804b2f1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804b2f8:	00 
 804b2f9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804b300:	00 
 804b301:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804b308:	00 
 804b309:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804b310:	00 
 804b311:	c7 44 24 04 25 02 00 	movl   $0x225,0x4(%esp)
 804b318:	00 
 804b319:	89 04 24             	mov    %eax,(%esp)
 804b31c:	e8 8f 70 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b321:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804b328:	89 2c 24             	mov    %ebp,(%esp)
 804b32b:	e8 00 f5 ff ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 804b330:	8b 54 24 50          	mov    0x50(%esp),%edx
 804b334:	29 c2                	sub    %eax,%edx
 804b336:	8d 47 10             	lea    0x10(%edi),%eax
 804b339:	39 44 24 50          	cmp    %eax,0x50(%esp)
 804b33d:	73 29                	jae    804b368 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xe8>
 804b33f:	2b 44 24 50          	sub    0x50(%esp),%eax
 804b343:	39 d0                	cmp    %edx,%eax
 804b345:	7e 11                	jle    804b358 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_+0xd8>
 804b347:	83 c4 3c             	add    $0x3c,%esp
 804b34a:	89 f0                	mov    %esi,%eax
 804b34c:	5b                   	pop    %ebx
 804b34d:	5e                   	pop    %esi
 804b34e:	5f                   	pop    %edi
 804b34f:	5d                   	pop    %ebp
 804b350:	c3                   	ret    
 804b351:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804b358:	83 c4 3c             	add    $0x3c,%esp
 804b35b:	89 f8                	mov    %edi,%eax
 804b35d:	5b                   	pop    %ebx
 804b35e:	5e                   	pop    %esi
 804b35f:	5f                   	pop    %edi
 804b360:	5d                   	pop    %ebp
 804b361:	c3                   	ret    
 804b362:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804b368:	8d 83 bc 30 fd ff    	lea    -0x2cf44(%ebx),%eax
 804b36e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b372:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804b378:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804b37f:	00 
 804b380:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804b387:	00 
 804b388:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804b38f:	00 
 804b390:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804b397:	00 
 804b398:	c7 44 24 04 26 02 00 	movl   $0x226,0x4(%esp)
 804b39f:	00 
 804b3a0:	89 04 24             	mov    %eax,(%esp)
 804b3a3:	e8 08 70 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b3a8:	90                   	nop
 804b3a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0804b3b0 <_ZN6__asan22FindHeapChunkByAddressEm>:
 804b3b0:	55                   	push   %ebp
 804b3b1:	57                   	push   %edi
 804b3b2:	56                   	push   %esi
 804b3b3:	53                   	push   %ebx
 804b3b4:	e8 37 e7 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b3b9:	81 c3 47 4c 06 00    	add    $0x64c47,%ebx
 804b3bf:	83 ec 2c             	sub    $0x2c,%esp
 804b3c2:	8b 44 24 44          	mov    0x44(%esp),%eax
 804b3c6:	e8 b5 eb ff ff       	call   8049f80 <_ZN6__asanL18GetAsanChunkByAddrEm>
 804b3cb:	85 c0                	test   %eax,%eax
 804b3cd:	89 c5                	mov    %eax,%ebp
 804b3cf:	0f 84 83 00 00 00    	je     804b458 <_ZN6__asan22FindHeapChunkByAddressEm+0xa8>
 804b3d5:	8d 40 10             	lea    0x10(%eax),%eax
 804b3d8:	39 44 24 44          	cmp    %eax,0x44(%esp)
 804b3dc:	73 46                	jae    804b424 <_ZN6__asan22FindHeapChunkByAddressEm+0x74>
 804b3de:	be 01 00 00 00       	mov    $0x1,%esi
 804b3e3:	31 ff                	xor    %edi,%edi
 804b3e5:	eb 15                	jmp    804b3fc <_ZN6__asan22FindHeapChunkByAddressEm+0x4c>
 804b3e7:	90                   	nop
 804b3e8:	8b 44 24 44          	mov    0x44(%esp),%eax
 804b3ec:	29 f0                	sub    %esi,%eax
 804b3ee:	e8 8d eb ff ff       	call   8049f80 <_ZN6__asanL18GetAsanChunkByAddrEm>
 804b3f3:	39 e8                	cmp    %ebp,%eax
 804b3f5:	89 c7                	mov    %eax,%edi
 804b3f7:	75 0c                	jne    804b405 <_ZN6__asan22FindHeapChunkByAddressEm+0x55>
 804b3f9:	83 c6 01             	add    $0x1,%esi
 804b3fc:	e8 0f 6e 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804b401:	39 c6                	cmp    %eax,%esi
 804b403:	72 e3                	jb     804b3e8 <_ZN6__asan22FindHeapChunkByAddressEm+0x38>
 804b405:	85 ff                	test   %edi,%edi
 804b407:	74 1b                	je     804b424 <_ZN6__asan22FindHeapChunkByAddressEm+0x74>
 804b409:	8d 74 24 1c          	lea    0x1c(%esp),%esi
 804b40d:	89 34 24             	mov    %esi,(%esp)
 804b410:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
 804b414:	e8 17 f4 ff ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 804b419:	8b 4c 24 44          	mov    0x44(%esp),%ecx
 804b41d:	8d 51 01             	lea    0x1(%ecx),%edx
 804b420:	39 c2                	cmp    %eax,%edx
 804b422:	77 14                	ja     804b438 <_ZN6__asan22FindHeapChunkByAddressEm+0x88>
 804b424:	8b 44 24 40          	mov    0x40(%esp),%eax
 804b428:	89 28                	mov    %ebp,(%eax)
 804b42a:	8b 44 24 40          	mov    0x40(%esp),%eax
 804b42e:	83 c4 2c             	add    $0x2c,%esp
 804b431:	5b                   	pop    %ebx
 804b432:	5e                   	pop    %esi
 804b433:	5f                   	pop    %edi
 804b434:	5d                   	pop    %ebp
 804b435:	c2 04 00             	ret    $0x4
 804b438:	89 34 24             	mov    %esi,(%esp)
 804b43b:	e8 f0 f3 ff ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 804b440:	8b 44 24 44          	mov    0x44(%esp),%eax
 804b444:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 804b448:	89 7c 24 04          	mov    %edi,0x4(%esp)
 804b44c:	89 04 24             	mov    %eax,(%esp)
 804b44f:	e8 2c fe ff ff       	call   804b280 <_ZN6__asan11ChooseChunkEmPNS_9AsanChunkES1_>
 804b454:	89 c5                	mov    %eax,%ebp
 804b456:	eb cc                	jmp    804b424 <_ZN6__asan22FindHeapChunkByAddressEm+0x74>
 804b458:	8b 44 24 40          	mov    0x40(%esp),%eax
 804b45c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804b462:	8b 44 24 40          	mov    0x40(%esp),%eax
 804b466:	83 c4 2c             	add    $0x2c,%esp
 804b469:	5b                   	pop    %ebx
 804b46a:	5e                   	pop    %esi
 804b46b:	5f                   	pop    %edi
 804b46c:	5d                   	pop    %ebp
 804b46d:	c2 04 00             	ret    $0x4

0804b470 <_ZN6__asan27PrintInternalAllocatorStatsEv>:
 804b470:	57                   	push   %edi
 804b471:	56                   	push   %esi
 804b472:	31 f6                	xor    %esi,%esi
 804b474:	53                   	push   %ebx
 804b475:	e8 76 e6 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b47a:	81 c3 86 4b 06 00    	add    $0x64b86,%ebx
 804b480:	83 ec 20             	sub    $0x20,%esp
 804b483:	8b 83 b8 b9 02 00    	mov    0x2b9b8(%ebx),%eax
 804b489:	8d bb eb 2c fd ff    	lea    -0x2d315(%ebx),%edi
 804b48f:	8b 93 ac b9 02 00    	mov    0x2b9ac(%ebx),%edx
 804b495:	c1 e8 14             	shr    $0x14,%eax
 804b498:	89 44 24 10          	mov    %eax,0x10(%esp)
 804b49c:	8b 83 b4 b9 02 00    	mov    0x2b9b4(%ebx),%eax
 804b4a2:	89 54 24 04          	mov    %edx,0x4(%esp)
 804b4a6:	c1 e8 0a             	shr    $0xa,%eax
 804b4a9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804b4ad:	89 d0                	mov    %edx,%eax
 804b4af:	2b 83 b0 b9 02 00    	sub    0x2b9b0(%ebx),%eax
 804b4b5:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b4b9:	8d 83 04 31 fd ff    	lea    -0x2cefc(%ebx),%eax
 804b4bf:	89 04 24             	mov    %eax,(%esp)
 804b4c2:	e8 b9 61 01 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 804b4c7:	eb 0f                	jmp    804b4d8 <_ZN6__asan27PrintInternalAllocatorStatsEv+0x68>
 804b4c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804b4d0:	83 c6 01             	add    $0x1,%esi
 804b4d3:	83 fe 40             	cmp    $0x40,%esi
 804b4d6:	74 23                	je     804b4fb <_ZN6__asan27PrintInternalAllocatorStatsEv+0x8b>
 804b4d8:	8b 84 b3 bc b9 02 00 	mov    0x2b9bc(%ebx,%esi,4),%eax
 804b4df:	85 c0                	test   %eax,%eax
 804b4e1:	74 ed                	je     804b4d0 <_ZN6__asan27PrintInternalAllocatorStatsEv+0x60>
 804b4e3:	89 74 24 04          	mov    %esi,0x4(%esp)
 804b4e7:	83 c6 01             	add    $0x1,%esi
 804b4ea:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b4ee:	89 3c 24             	mov    %edi,(%esp)
 804b4f1:	e8 8a 61 01 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 804b4f6:	83 fe 40             	cmp    $0x40,%esi
 804b4f9:	75 dd                	jne    804b4d8 <_ZN6__asan27PrintInternalAllocatorStatsEv+0x68>
 804b4fb:	8d 83 b6 61 fd ff    	lea    -0x29e4a(%ebx),%eax
 804b501:	89 04 24             	mov    %eax,(%esp)
 804b504:	e8 77 61 01 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 804b509:	83 c4 20             	add    $0x20,%esp
 804b50c:	5b                   	pop    %ebx
 804b50d:	5e                   	pop    %esi
 804b50e:	5f                   	pop    %edi
 804b50f:	c3                   	ret    

0804b510 <_ZN6__asan23asan_malloc_usable_sizeEPvPN11__sanitizer10StackTraceE>:
 804b510:	55                   	push   %ebp
 804b511:	57                   	push   %edi
 804b512:	56                   	push   %esi
 804b513:	53                   	push   %ebx
 804b514:	83 ec 2c             	sub    $0x2c,%esp
 804b517:	8b 7c 24 44          	mov    0x44(%esp),%edi
 804b51b:	e8 d0 e5 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b520:	81 c3 e0 4a 06 00    	add    $0x64ae0,%ebx
 804b526:	8b 74 24 40          	mov    0x40(%esp),%esi
 804b52a:	85 ff                	test   %edi,%edi
 804b52c:	74 3c                	je     804b56a <_ZN6__asan23asan_malloc_usable_sizeEPvPN11__sanitizer10StackTraceE+0x5a>
 804b52e:	85 f6                	test   %esi,%esi
 804b530:	74 2e                	je     804b560 <_ZN6__asan23asan_malloc_usable_sizeEPvPN11__sanitizer10StackTraceE+0x50>
 804b532:	89 f0                	mov    %esi,%eax
 804b534:	e8 e7 ee ff ff       	call   804a420 <_ZN6__asanL14AllocationSizeEm>
 804b539:	89 c5                	mov    %eax,%ebp
 804b53b:	e8 e0 cf 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804b540:	80 78 36 00          	cmpb   $0x0,0x36(%eax)
 804b544:	75 0a                	jne    804b550 <_ZN6__asan23asan_malloc_usable_sizeEPvPN11__sanitizer10StackTraceE+0x40>
 804b546:	83 c4 2c             	add    $0x2c,%esp
 804b549:	89 e8                	mov    %ebp,%eax
 804b54b:	5b                   	pop    %ebx
 804b54c:	5e                   	pop    %esi
 804b54d:	5f                   	pop    %edi
 804b54e:	5d                   	pop    %ebp
 804b54f:	c3                   	ret    
 804b550:	85 ed                	test   %ebp,%ebp
 804b552:	75 f2                	jne    804b546 <_ZN6__asan23asan_malloc_usable_sizeEPvPN11__sanitizer10StackTraceE+0x36>
 804b554:	89 7c 24 04          	mov    %edi,0x4(%esp)
 804b558:	89 34 24             	mov    %esi,(%esp)
 804b55b:	e8 90 3c 01 00       	call   805f1f0 <_ZN6__asan30ReportMallocUsableSizeNotOwnedEmPN11__sanitizer10StackTraceE>
 804b560:	83 c4 2c             	add    $0x2c,%esp
 804b563:	31 c0                	xor    %eax,%eax
 804b565:	5b                   	pop    %ebx
 804b566:	5e                   	pop    %esi
 804b567:	5f                   	pop    %edi
 804b568:	5d                   	pop    %ebp
 804b569:	c3                   	ret    
 804b56a:	8d 83 f5 2c fd ff    	lea    -0x2d30b(%ebx),%eax
 804b570:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b574:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804b57a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804b581:	00 
 804b582:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804b589:	00 
 804b58a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804b591:	00 
 804b592:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804b599:	00 
 804b59a:	c7 44 24 04 83 02 00 	movl   $0x283,0x4(%esp)
 804b5a1:	00 
 804b5a2:	89 04 24             	mov    %eax,(%esp)
 804b5a5:	e8 06 6e 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b5aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804b5b0 <_ZN6__asan12asan_mz_sizeEPKv>:
 804b5b0:	8b 44 24 04          	mov    0x4(%esp),%eax
 804b5b4:	e9 67 ee ff ff       	jmp    804a420 <_ZN6__asanL14AllocationSizeEm>
 804b5b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0804b5c0 <_ZN6__asan18asan_mz_force_lockEv>:
 804b5c0:	55                   	push   %ebp
 804b5c1:	57                   	push   %edi
 804b5c2:	bf 01 00 00 00       	mov    $0x1,%edi
 804b5c7:	56                   	push   %esi
 804b5c8:	31 f6                	xor    %esi,%esi
 804b5ca:	53                   	push   %ebx
 804b5cb:	e8 20 e5 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b5d0:	81 c3 30 4a 06 00    	add    $0x64a30,%ebx
 804b5d6:	83 ec 1c             	sub    $0x1c,%esp
 804b5d9:	8d 2d a0 b9 00 00    	lea    0xb9a0,%ebp
 804b5df:	90                   	nop
 804b5e0:	8d 46 40             	lea    0x40(%esi),%eax
 804b5e3:	89 fa                	mov    %edi,%edx
 804b5e5:	c1 e0 06             	shl    $0x6,%eax
 804b5e8:	03 44 1d 00          	add    0x0(%ebp,%ebx,1),%eax
 804b5ec:	86 10                	xchg   %dl,(%eax)
 804b5ee:	84 d2                	test   %dl,%dl
 804b5f0:	74 08                	je     804b5fa <_ZN6__asan18asan_mz_force_lockEv+0x3a>
 804b5f2:	89 04 24             	mov    %eax,(%esp)
 804b5f5:	e8 36 3e 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804b5fa:	83 c6 01             	add    $0x1,%esi
 804b5fd:	83 fe 59             	cmp    $0x59,%esi
 804b600:	75 de                	jne    804b5e0 <_ZN6__asan18asan_mz_force_lockEv+0x20>
 804b602:	b8 01 00 00 00       	mov    $0x1,%eax
 804b607:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804b60d:	84 c0                	test   %al,%al
 804b60f:	74 0e                	je     804b61f <_ZN6__asan18asan_mz_force_lockEv+0x5f>
 804b611:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804b617:	89 04 24             	mov    %eax,(%esp)
 804b61a:	e8 11 3e 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804b61f:	b8 01 00 00 00       	mov    $0x1,%eax
 804b624:	86 83 a0 03 00 00    	xchg   %al,0x3a0(%ebx)
 804b62a:	84 c0                	test   %al,%al
 804b62c:	74 0e                	je     804b63c <_ZN6__asan18asan_mz_force_lockEv+0x7c>
 804b62e:	8d 83 a0 03 00 00    	lea    0x3a0(%ebx),%eax
 804b634:	89 04 24             	mov    %eax,(%esp)
 804b637:	e8 f4 3d 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804b63c:	83 c4 1c             	add    $0x1c,%esp
 804b63f:	5b                   	pop    %ebx
 804b640:	5e                   	pop    %esi
 804b641:	5f                   	pop    %edi
 804b642:	5d                   	pop    %ebp
 804b643:	c3                   	ret    
 804b644:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804b64a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0804b650 <_ZN6__asan20asan_mz_force_unlockEv>:
 804b650:	53                   	push   %ebx
 804b651:	e8 9a e4 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b656:	81 c3 aa 49 06 00    	add    $0x649aa,%ebx
 804b65c:	c6 83 a0 03 00 00 00 	movb   $0x0,0x3a0(%ebx)
 804b663:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804b66a:	ba 58 00 00 00       	mov    $0x58,%edx
 804b66f:	8d 0d a0 b9 00 00    	lea    0xb9a0,%ecx
 804b675:	8d 76 00             	lea    0x0(%esi),%esi
 804b678:	8d 42 40             	lea    0x40(%edx),%eax
 804b67b:	c1 e0 06             	shl    $0x6,%eax
 804b67e:	03 04 19             	add    (%ecx,%ebx,1),%eax
 804b681:	c6 00 00             	movb   $0x0,(%eax)
 804b684:	83 ea 01             	sub    $0x1,%edx
 804b687:	83 fa ff             	cmp    $0xffffffff,%edx
 804b68a:	75 ec                	jne    804b678 <_ZN6__asan20asan_mz_force_unlockEv+0x28>
 804b68c:	5b                   	pop    %ebx
 804b68d:	c3                   	ret    
 804b68e:	66 90                	xchg   %ax,%ax

0804b690 <__asan_get_estimated_allocated_size>:
 804b690:	8b 44 24 04          	mov    0x4(%esp),%eax
 804b694:	c3                   	ret    
 804b695:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804b699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804b6a0 <__asan_get_ownership>:
 804b6a0:	83 ec 0c             	sub    $0xc,%esp
 804b6a3:	8b 44 24 10          	mov    0x10(%esp),%eax
 804b6a7:	e8 74 ed ff ff       	call   804a420 <_ZN6__asanL14AllocationSizeEm>
 804b6ac:	85 c0                	test   %eax,%eax
 804b6ae:	0f 95 c0             	setne  %al
 804b6b1:	83 c4 0c             	add    $0xc,%esp
 804b6b4:	c3                   	ret    
 804b6b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804b6b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804b6c0 <__asan_get_allocated_size>:
 804b6c0:	55                   	push   %ebp
 804b6c1:	89 e5                	mov    %esp,%ebp
 804b6c3:	57                   	push   %edi
 804b6c4:	56                   	push   %esi
 804b6c5:	53                   	push   %ebx
 804b6c6:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 804b6cc:	8b 75 08             	mov    0x8(%ebp),%esi
 804b6cf:	e8 1c e4 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b6d4:	81 c3 2c 49 06 00    	add    $0x6492c,%ebx
 804b6da:	85 f6                	test   %esi,%esi
 804b6dc:	74 1a                	je     804b6f8 <__asan_get_allocated_size+0x38>
 804b6de:	89 f0                	mov    %esi,%eax
 804b6e0:	e8 3b ed ff ff       	call   804a420 <_ZN6__asanL14AllocationSizeEm>
 804b6e5:	85 c0                	test   %eax,%eax
 804b6e7:	74 1c                	je     804b705 <__asan_get_allocated_size+0x45>
 804b6e9:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 804b6ef:	5b                   	pop    %ebx
 804b6f0:	5e                   	pop    %esi
 804b6f1:	5f                   	pop    %edi
 804b6f2:	5d                   	pop    %ebp
 804b6f3:	c3                   	ret    
 804b6f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804b6f8:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 804b6fe:	31 c0                	xor    %eax,%eax
 804b700:	5b                   	pop    %ebx
 804b701:	5e                   	pop    %esi
 804b702:	5f                   	pop    %edi
 804b703:	5d                   	pop    %ebp
 804b704:	c3                   	ret    
 804b705:	e8 16 ce 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804b70a:	0f b6 78 4c          	movzbl 0x4c(%eax),%edi
 804b70e:	e8 6d 92 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 804b713:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 804b717:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 804b71e:	00 
 804b71f:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804b723:	8d bd e0 fb ff ff    	lea    -0x420(%ebp),%edi
 804b729:	89 3c 24             	mov    %edi,(%esp)
 804b72c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b730:	e8 3b 0d 01 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 804b735:	89 7c 24 04          	mov    %edi,0x4(%esp)
 804b739:	89 34 24             	mov    %esi,(%esp)
 804b73c:	e8 8f 3b 01 00       	call   805f2d0 <_ZN6__asan34ReportAsanGetAllocatedSizeNotOwnedEmPN11__sanitizer10StackTraceE>
 804b741:	90                   	nop
 804b742:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804b749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804b750 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26>:
 804b750:	55                   	push   %ebp
 804b751:	57                   	push   %edi
 804b752:	56                   	push   %esi
 804b753:	53                   	push   %ebx
 804b754:	e8 97 e3 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804b759:	81 c3 a7 48 06 00    	add    $0x648a7,%ebx
 804b75f:	83 ec 5c             	sub    $0x5c,%esp
 804b762:	89 44 24 4c          	mov    %eax,0x4c(%esp)
 804b766:	89 54 24 48          	mov    %edx,0x48(%esp)
 804b76a:	8b 74 24 4c          	mov    0x4c(%esp),%esi
 804b76e:	8b 06                	mov    (%esi),%eax
 804b770:	85 c0                	test   %eax,%eax
 804b772:	0f 84 d0 0d 00 00    	je     804c548 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xdf8>
 804b778:	8b 4e 04             	mov    0x4(%esi),%ecx
 804b77b:	8b 11                	mov    (%ecx),%edx
 804b77d:	89 4c 24 3c          	mov    %ecx,0x3c(%esp)
 804b781:	85 d2                	test   %edx,%edx
 804b783:	89 56 04             	mov    %edx,0x4(%esi)
 804b786:	0f 84 63 10 00 00    	je     804c7ef <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x109f>
 804b78c:	8b 74 24 4c          	mov    0x4c(%esp),%esi
 804b790:	83 e8 01             	sub    $0x1,%eax
 804b793:	8b 4c 24 3c          	mov    0x3c(%esp),%ecx
 804b797:	89 06                	mov    %eax,(%esi)
 804b799:	8b 46 0c             	mov    0xc(%esi),%eax
 804b79c:	2b 41 04             	sub    0x4(%ecx),%eax
 804b79f:	89 46 0c             	mov    %eax,0xc(%esi)
 804b7a2:	31 c0                	xor    %eax,%eax
 804b7a4:	8b 54 81 0c          	mov    0xc(%ecx,%eax,4),%edx
 804b7a8:	0f 18 02             	prefetchnta (%edx)
 804b7ab:	83 c0 01             	add    $0x1,%eax
 804b7ae:	83 f8 10             	cmp    $0x10,%eax
 804b7b1:	75 f1                	jne    804b7a4 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x54>
 804b7b3:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804b7b7:	8b 40 08             	mov    0x8(%eax),%eax
 804b7ba:	85 c0                	test   %eax,%eax
 804b7bc:	0f 84 84 0c 00 00    	je     804c446 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xcf6>
 804b7c2:	8b 74 24 3c          	mov    0x3c(%esp),%esi
 804b7c6:	8b 46 4c             	mov    0x4c(%esi),%eax
 804b7c9:	0f 18 00             	prefetchnta (%eax)
 804b7cc:	8b 6e 0c             	mov    0xc(%esi),%ebp
 804b7cf:	80 7d 00 03          	cmpb   $0x3,0x0(%ebp)
 804b7d3:	0f 85 40 10 00 00    	jne    804c819 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x10c9>
 804b7d9:	c6 45 00 00          	movb   $0x0,0x0(%ebp)
 804b7dd:	8b 45 00             	mov    0x0(%ebp),%eax
 804b7e0:	c1 e8 08             	shr    $0x8,%eax
 804b7e3:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 804b7e8:	0f 84 5b 12 00 00    	je     804ca49 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x12f9>
 804b7ee:	8b 45 04             	mov    0x4(%ebp),%eax
 804b7f1:	25 ff ff ff 00       	and    $0xffffff,%eax
 804b7f6:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 804b7fb:	0f 84 25 03 00 00    	je     804bb26 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x3d6>
 804b801:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804b805:	89 ef                	mov    %ebp,%edi
 804b807:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804b80e:	00 
 804b80f:	83 c0 50             	add    $0x50,%eax
 804b812:	89 44 24 38          	mov    %eax,0x38(%esp)
 804b816:	66 90                	xchg   %ax,%ax
 804b818:	8b 47 08             	mov    0x8(%edi),%eax
 804b81b:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804b820:	0f 84 da 06 00 00    	je     804bf00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x7b0>
 804b826:	83 c0 07             	add    $0x7,%eax
 804b829:	83 e0 f8             	and    $0xfffffff8,%eax
 804b82c:	8d 4f 10             	lea    0x10(%edi),%ecx
 804b82f:	89 44 24 04          	mov    %eax,0x4(%esp)
 804b833:	c7 44 24 08 fa 00 00 	movl   $0xfa,0x8(%esp)
 804b83a:	00 
 804b83b:	89 0c 24             	mov    %ecx,(%esp)
 804b83e:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804b842:	e8 69 12 01 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804b847:	0f b6 47 07          	movzbl 0x7(%edi),%eax
 804b84b:	a8 01                	test   $0x1,%al
 804b84d:	0f 85 15 03 00 00    	jne    804bb68 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x418>
 804b853:	c0 e8 03             	shr    $0x3,%al
 804b856:	83 e0 07             	and    $0x7,%eax
 804b859:	e8 62 e3 ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804b85e:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 804b862:	29 c1                	sub    %eax,%ecx
 804b864:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804b868:	e8 03 e1 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804b86d:	89 04 24             	mov    %eax,(%esp)
 804b870:	e8 db e4 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804b875:	83 40 14 01          	addl   $0x1,0x14(%eax)
 804b879:	89 c6                	mov    %eax,%esi
 804b87b:	8b 47 08             	mov    0x8(%edi),%eax
 804b87e:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804b883:	0f 84 37 05 00 00    	je     804bdc0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x670>
 804b889:	01 46 18             	add    %eax,0x18(%esi)
 804b88c:	8b 44 24 20          	mov    0x20(%esp),%eax
 804b890:	85 c0                	test   %eax,%eax
 804b892:	0f 84 38 02 00 00    	je     804bad0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x380>
 804b898:	8b 93 a0 b9 00 00    	mov    0xb9a0(%ebx),%edx
 804b89e:	c1 e8 14             	shr    $0x14,%eax
 804b8a1:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 804b8a5:	84 c0                	test   %al,%al
 804b8a7:	0f 85 93 03 00 00    	jne    804bc40 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x4f0>
 804b8ad:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804b8b3:	31 d2                	xor    %edx,%edx
 804b8b5:	8b 44 24 20          	mov    0x20(%esp),%eax
 804b8b9:	f7 f1                	div    %ecx
 804b8bb:	89 d6                	mov    %edx,%esi
 804b8bd:	31 d2                	xor    %edx,%edx
 804b8bf:	85 f6                	test   %esi,%esi
 804b8c1:	0f 85 65 11 00 00    	jne    804ca2c <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x12dc>
 804b8c7:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 804b8cb:	b8 01 00 00 00       	mov    $0x1,%eax
 804b8d0:	29 cd                	sub    %ecx,%ebp
 804b8d2:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804b8d8:	84 c0                	test   %al,%al
 804b8da:	74 0e                	je     804b8ea <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x19a>
 804b8dc:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804b8e2:	89 04 24             	mov    %eax,(%esp)
 804b8e5:	e8 46 3b 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804b8ea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804b8ed:	8b b4 8b a8 b9 00 00 	mov    0xb9a8(%ebx,%ecx,4),%esi
 804b8f4:	89 f0                	mov    %esi,%eax
 804b8f6:	c1 f8 1f             	sar    $0x1f,%eax
 804b8f9:	89 44 24 24          	mov    %eax,0x24(%esp)
 804b8fd:	8b 7c 24 24          	mov    0x24(%esp),%edi
 804b901:	89 e8                	mov    %ebp,%eax
 804b903:	99                   	cltd   
 804b904:	89 74 24 20          	mov    %esi,0x20(%esp)
 804b908:	31 ee                	xor    %ebp,%esi
 804b90a:	31 d7                	xor    %edx,%edi
 804b90c:	09 f7                	or     %esi,%edi
 804b90e:	0f 85 fb 10 00 00    	jne    804ca0f <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x12bf>
 804b914:	8b b3 a8 b9 02 00    	mov    0x2b9a8(%ebx),%esi
 804b91a:	31 d2                	xor    %edx,%edx
 804b91c:	89 c8                	mov    %ecx,%eax
 804b91e:	83 fa 00             	cmp    $0x0,%edx
 804b921:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804b928:	00 
 804b929:	89 74 24 20          	mov    %esi,0x20(%esp)
 804b92d:	72 45                	jb     804b974 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x224>
 804b92f:	76 3f                	jbe    804b970 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x220>
 804b931:	8b 74 24 20          	mov    0x20(%esp),%esi
 804b935:	8b 7c 24 24          	mov    0x24(%esp),%edi
 804b939:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804b93d:	89 54 24 10          	mov    %edx,0x10(%esp)
 804b941:	89 74 24 14          	mov    %esi,0x14(%esp)
 804b945:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804b949:	8d 83 35 2d fd ff    	lea    -0x2d2cb(%ebx),%eax
 804b94f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804b953:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804b959:	c7 44 24 04 8f 03 00 	movl   $0x38f,0x4(%esp)
 804b960:	00 
 804b961:	89 04 24             	mov    %eax,(%esp)
 804b964:	e8 47 6a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804b969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804b970:	39 f1                	cmp    %esi,%ecx
 804b972:	73 bd                	jae    804b931 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1e1>
 804b974:	83 ee 01             	sub    $0x1,%esi
 804b977:	31 ff                	xor    %edi,%edi
 804b979:	8b 84 b3 a8 b9 00 00 	mov    0xb9a8(%ebx,%esi,4),%eax
 804b980:	89 84 8b a8 b9 00 00 	mov    %eax,0xb9a8(%ebx,%ecx,4)
 804b987:	89 48 0c             	mov    %ecx,0xc(%eax)
 804b98a:	8b 83 b4 b9 02 00    	mov    0x2b9b4(%ebx),%eax
 804b990:	83 83 b0 b9 02 00 01 	addl   $0x1,0x2b9b0(%ebx)
 804b997:	89 b3 a8 b9 02 00    	mov    %esi,0x2b9a8(%ebx)
 804b99d:	2b 45 04             	sub    0x4(%ebp),%eax
 804b9a0:	89 83 b4 b9 02 00    	mov    %eax,0x2b9b4(%ebx)
 804b9a6:	8b 83 d0 ba 02 00    	mov    0x2bad0(%ebx),%eax
 804b9ac:	8b 75 04             	mov    0x4(%ebp),%esi
 804b9af:	8b 93 d4 ba 02 00    	mov    0x2bad4(%ebx),%edx
 804b9b5:	01 f0                	add    %esi,%eax
 804b9b7:	11 fa                	adc    %edi,%edx
 804b9b9:	89 83 d0 ba 02 00    	mov    %eax,0x2bad0(%ebx)
 804b9bf:	89 93 d4 ba 02 00    	mov    %edx,0x2bad4(%ebx)
 804b9c5:	8b 83 e0 ba 02 00    	mov    0x2bae0(%ebx),%eax
 804b9cb:	8b 93 e4 ba 02 00    	mov    0x2bae4(%ebx),%edx
 804b9d1:	01 f0                	add    %esi,%eax
 804b9d3:	11 fa                	adc    %edi,%edx
 804b9d5:	89 83 e0 ba 02 00    	mov    %eax,0x2bae0(%ebx)
 804b9db:	89 93 e4 ba 02 00    	mov    %edx,0x2bae4(%ebx)
 804b9e1:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804b9e8:	8b 7d 00             	mov    0x0(%ebp),%edi
 804b9eb:	8b 75 04             	mov    0x4(%ebp),%esi
 804b9ee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 804b9f5:	00 
 804b9f6:	89 3c 24             	mov    %edi,(%esp)
 804b9f9:	89 74 24 04          	mov    %esi,0x4(%esp)
 804b9fd:	e8 ae 10 01 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804ba02:	e8 09 68 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804ba07:	81 ff fe ff ff 1f    	cmp    $0x1ffffffe,%edi
 804ba0d:	76 29                	jbe    804ba38 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x2e8>
 804ba0f:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 804ba15:	8b 12                	mov    (%edx),%edx
 804ba17:	85 d2                	test   %edx,%edx
 804ba19:	0f 84 c1 02 00 00    	je     804bce0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x590>
 804ba1f:	39 d7                	cmp    %edx,%edi
 804ba21:	0f 82 b9 02 00 00    	jb     804bce0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x590>
 804ba27:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 804ba2d:	3b 3a                	cmp    (%edx),%edi
 804ba2f:	0f 87 ab 02 00 00    	ja     804bce0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x590>
 804ba35:	8d 76 00             	lea    0x0(%esi),%esi
 804ba38:	89 f9                	mov    %edi,%ecx
 804ba3a:	8d 50 ff             	lea    -0x1(%eax),%edx
 804ba3d:	c1 e9 03             	shr    $0x3,%ecx
 804ba40:	85 c2                	test   %eax,%edx
 804ba42:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804ba46:	0f 85 fe 0c 00 00    	jne    804c74a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xffa>
 804ba4c:	8d 14 37             	lea    (%edi,%esi,1),%edx
 804ba4f:	81 fa fe ff ff 1f    	cmp    $0x1ffffffe,%edx
 804ba55:	76 29                	jbe    804ba80 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x330>
 804ba57:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 804ba5d:	8b 09                	mov    (%ecx),%ecx
 804ba5f:	85 c9                	test   %ecx,%ecx
 804ba61:	0f 84 d9 02 00 00    	je     804bd40 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5f0>
 804ba67:	39 ca                	cmp    %ecx,%edx
 804ba69:	0f 82 d1 02 00 00    	jb     804bd40 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5f0>
 804ba6f:	8d 8b 00 bc 02 00    	lea    0x2bc00(%ebx),%ecx
 804ba75:	3b 11                	cmp    (%ecx),%edx
 804ba77:	0f 87 c3 02 00 00    	ja     804bd40 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5f0>
 804ba7d:	8d 76 00             	lea    0x0(%esi),%esi
 804ba80:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804ba84:	89 c1                	mov    %eax,%ecx
 804ba86:	c1 ea 03             	shr    $0x3,%edx
 804ba89:	f7 d9                	neg    %ecx
 804ba8b:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 804ba91:	21 ca                	and    %ecx,%edx
 804ba93:	8d 84 38 ff ff ff 1f 	lea    0x1fffffff(%eax,%edi,1),%eax
 804ba9a:	21 c8                	and    %ecx,%eax
 804ba9c:	29 c2                	sub    %eax,%edx
 804ba9e:	89 54 24 04          	mov    %edx,0x4(%esp)
 804baa2:	89 04 24             	mov    %eax,(%esp)
 804baa5:	e8 36 73 01 00       	call   8062de0 <_ZN11__sanitizer25FlushUnneededShadowMemoryEmm>
 804baaa:	e8 c1 de 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804baaf:	89 04 24             	mov    %eax,(%esp)
 804bab2:	e8 99 e2 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804bab7:	83 40 30 01          	addl   $0x1,0x30(%eax)
 804babb:	01 70 34             	add    %esi,0x34(%eax)
 804babe:	8b 45 04             	mov    0x4(%ebp),%eax
 804bac1:	89 44 24 04          	mov    %eax,0x4(%esp)
 804bac5:	8b 45 00             	mov    0x0(%ebp),%eax
 804bac8:	89 04 24             	mov    %eax,(%esp)
 804bacb:	e8 e0 6f 01 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 804bad0:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804bad4:	83 44 24 34 01       	addl   $0x1,0x34(%esp)
 804bad9:	8b 4c 24 34          	mov    0x34(%esp),%ecx
 804badd:	3b 48 08             	cmp    0x8(%eax),%ecx
 804bae0:	0f 83 60 09 00 00    	jae    804c446 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xcf6>
 804bae6:	8b 4c 24 38          	mov    0x38(%esp),%ecx
 804baea:	8b 01                	mov    (%ecx),%eax
 804baec:	0f 18 00             	prefetchnta (%eax)
 804baef:	8b 79 c0             	mov    -0x40(%ecx),%edi
 804baf2:	80 3f 03             	cmpb   $0x3,(%edi)
 804baf5:	0f 85 1e 0d 00 00    	jne    804c819 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x10c9>
 804bafb:	c6 07 00             	movb   $0x0,(%edi)
 804bafe:	8b 07                	mov    (%edi),%eax
 804bb00:	c1 e8 08             	shr    $0x8,%eax
 804bb03:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 804bb08:	0f 84 3b 0f 00 00    	je     804ca49 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x12f9>
 804bb0e:	8b 47 04             	mov    0x4(%edi),%eax
 804bb11:	83 44 24 38 04       	addl   $0x4,0x38(%esp)
 804bb16:	25 ff ff ff 00       	and    $0xffffff,%eax
 804bb1b:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 804bb20:	0f 85 f2 fc ff ff    	jne    804b818 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc8>
 804bb26:	8d 83 44 32 fd ff    	lea    -0x2cdbc(%ebx),%eax
 804bb2c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bb30:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804bb36:	c7 44 24 14 ff ff ff 	movl   $0xffffff,0x14(%esp)
 804bb3d:	00 
 804bb3e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804bb45:	00 
 804bb46:	c7 44 24 0c ff ff ff 	movl   $0xffffff,0xc(%esp)
 804bb4d:	00 
 804bb4e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804bb55:	00 
 804bb56:	c7 44 24 04 07 01 00 	movl   $0x107,0x4(%esp)
 804bb5d:	00 
 804bb5e:	89 04 24             	mov    %eax,(%esp)
 804bb61:	e8 4a 68 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804bb66:	66 90                	xchg   %ax,%ax
 804bb68:	8b 93 a0 b9 00 00    	mov    0xb9a0(%ebx),%edx
 804bb6e:	89 f8                	mov    %edi,%eax
 804bb70:	c1 e8 14             	shr    $0x14,%eax
 804bb73:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 804bb77:	84 c0                	test   %al,%al
 804bb79:	0f 85 d5 02 00 00    	jne    804be54 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x704>
 804bb7f:	b8 01 00 00 00       	mov    $0x1,%eax
 804bb84:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804bb8a:	84 c0                	test   %al,%al
 804bb8c:	74 0e                	je     804bb9c <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x44c>
 804bb8e:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804bb94:	89 04 24             	mov    %eax,(%esp)
 804bb97:	e8 94 38 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804bb9c:	8b 83 a8 b9 02 00    	mov    0x2b9a8(%ebx),%eax
 804bba2:	85 c0                	test   %eax,%eax
 804bba4:	0f 84 d6 04 00 00    	je     804c080 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x930>
 804bbaa:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804bbb0:	31 f6                	xor    %esi,%esi
 804bbb2:	8d 04 82             	lea    (%edx,%eax,4),%eax
 804bbb5:	89 c1                	mov    %eax,%ecx
 804bbb7:	90                   	nop
 804bbb8:	8b 02                	mov    (%edx),%eax
 804bbba:	39 c7                	cmp    %eax,%edi
 804bbbc:	72 13                	jb     804bbd1 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x481>
 804bbbe:	89 fd                	mov    %edi,%ebp
 804bbc0:	29 c5                	sub    %eax,%ebp
 804bbc2:	89 6c 24 20          	mov    %ebp,0x20(%esp)
 804bbc6:	89 fd                	mov    %edi,%ebp
 804bbc8:	29 f5                	sub    %esi,%ebp
 804bbca:	39 6c 24 20          	cmp    %ebp,0x20(%esp)
 804bbce:	0f 42 f0             	cmovb  %eax,%esi
 804bbd1:	83 c2 04             	add    $0x4,%edx
 804bbd4:	39 ca                	cmp    %ecx,%edx
 804bbd6:	75 e0                	jne    804bbb8 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x468>
 804bbd8:	85 f6                	test   %esi,%esi
 804bbda:	0f 84 a0 04 00 00    	je     804c080 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x930>
 804bbe0:	8b 0e                	mov    (%esi),%ecx
 804bbe2:	31 d2                	xor    %edx,%edx
 804bbe4:	89 f0                	mov    %esi,%eax
 804bbe6:	83 fa 00             	cmp    $0x0,%edx
 804bbe9:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804bbf0:	00 
 804bbf1:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804bbf5:	0f 87 6e 01 00 00    	ja     804bd69 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x619>
 804bbfb:	0f 83 60 01 00 00    	jae    804bd61 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x611>
 804bc01:	8b 74 24 20          	mov    0x20(%esp),%esi
 804bc05:	89 d1                	mov    %edx,%ecx
 804bc07:	8b 7c 24 24          	mov    0x24(%esp),%edi
 804bc0b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804bc0f:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804bc13:	89 74 24 14          	mov    %esi,0x14(%esp)
 804bc17:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804bc1b:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804bc21:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bc25:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804bc2b:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804bc32:	00 
 804bc33:	89 04 24             	mov    %eax,(%esp)
 804bc36:	e8 75 67 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804bc3b:	90                   	nop
 804bc3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804bc40:	0f b6 e8             	movzbl %al,%ebp
 804bc43:	31 d2                	xor    %edx,%edx
 804bc45:	83 fd 58             	cmp    $0x58,%ebp
 804bc48:	89 e8                	mov    %ebp,%eax
 804bc4a:	76 3c                	jbe    804bc88 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x538>
 804bc4c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804bc50:	8d 83 90 2e fd ff    	lea    -0x2d170(%ebx),%eax
 804bc56:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bc5a:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804bc60:	c7 44 24 14 59 00 00 	movl   $0x59,0x14(%esp)
 804bc67:	00 
 804bc68:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804bc6f:	00 
 804bc70:	89 54 24 10          	mov    %edx,0x10(%esp)
 804bc74:	c7 44 24 04 16 03 00 	movl   $0x316,0x4(%esp)
 804bc7b:	00 
 804bc7c:	89 04 24             	mov    %eax,(%esp)
 804bc7f:	e8 2c 67 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804bc84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804bc88:	83 fd 10             	cmp    $0x10,%ebp
 804bc8b:	0f 87 a2 01 00 00    	ja     804be33 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x6e3>
 804bc91:	89 e8                	mov    %ebp,%eax
 804bc93:	c1 e0 04             	shl    $0x4,%eax
 804bc96:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 804bc9a:	31 d2                	xor    %edx,%edx
 804bc9c:	8b b1 d8 b4 00 00    	mov    0xb4d8(%ecx),%esi
 804bca2:	8b b9 dc b4 00 00    	mov    0xb4dc(%ecx),%edi
 804bca8:	01 f0                	add    %esi,%eax
 804bcaa:	89 81 d8 b4 00 00    	mov    %eax,0xb4d8(%ecx)
 804bcb0:	89 e8                	mov    %ebp,%eax
 804bcb2:	11 fa                	adc    %edi,%edx
 804bcb4:	c1 e0 09             	shl    $0x9,%eax
 804bcb7:	8d 34 e8             	lea    (%eax,%ebp,8),%esi
 804bcba:	01 ce                	add    %ecx,%esi
 804bcbc:	8b 06                	mov    (%esi),%eax
 804bcbe:	3b 46 04             	cmp    0x4(%esi),%eax
 804bcc1:	89 91 dc b4 00 00    	mov    %edx,0xb4dc(%ecx)
 804bcc7:	0f 84 25 0d 00 00    	je     804c9f2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x12a2>
 804bccd:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 804bcd1:	8d 50 01             	lea    0x1(%eax),%edx
 804bcd4:	89 16                	mov    %edx,(%esi)
 804bcd6:	89 4c 86 08          	mov    %ecx,0x8(%esi,%eax,4)
 804bcda:	e9 f1 fd ff ff       	jmp    804bad0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x380>
 804bcdf:	90                   	nop
 804bce0:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 804bce6:	8b 12                	mov    (%edx),%edx
 804bce8:	89 d1                	mov    %edx,%ecx
 804bcea:	c1 e9 03             	shr    $0x3,%ecx
 804bced:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 804bcf3:	39 cf                	cmp    %ecx,%edi
 804bcf5:	72 09                	jb     804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804bcf7:	39 d7                	cmp    %edx,%edi
 804bcf9:	0f 86 39 fd ff ff    	jbe    804ba38 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x2e8>
 804bcff:	90                   	nop
 804bd00:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 804bd06:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bd0a:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 804bd10:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804bd17:	00 
 804bd18:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804bd1f:	00 
 804bd20:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804bd27:	00 
 804bd28:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804bd2f:	00 
 804bd30:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 804bd37:	00 
 804bd38:	89 04 24             	mov    %eax,(%esp)
 804bd3b:	e8 70 66 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804bd40:	8d 8b 08 bc 02 00    	lea    0x2bc08(%ebx),%ecx
 804bd46:	8b 09                	mov    (%ecx),%ecx
 804bd48:	89 cf                	mov    %ecx,%edi
 804bd4a:	c1 ef 03             	shr    $0x3,%edi
 804bd4d:	81 c7 01 00 00 20    	add    $0x20000001,%edi
 804bd53:	39 fa                	cmp    %edi,%edx
 804bd55:	72 a9                	jb     804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804bd57:	39 ca                	cmp    %ecx,%edx
 804bd59:	0f 86 21 fd ff ff    	jbe    804ba80 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x330>
 804bd5f:	eb 9f                	jmp    804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804bd61:	39 ce                	cmp    %ecx,%esi
 804bd63:	0f 82 98 fe ff ff    	jb     804bc01 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x4b1>
 804bd69:	03 4e 04             	add    0x4(%esi),%ecx
 804bd6c:	83 fa 00             	cmp    $0x0,%edx
 804bd6f:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804bd76:	00 
 804bd77:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804bd7b:	0f 86 71 03 00 00    	jbe    804c0f2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x9a2>
 804bd81:	8b 74 24 20          	mov    0x20(%esp),%esi
 804bd85:	89 d1                	mov    %edx,%ecx
 804bd87:	8b 7c 24 24          	mov    0x24(%esp),%edi
 804bd8b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804bd8f:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804bd93:	89 74 24 14          	mov    %esi,0x14(%esp)
 804bd97:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804bd9b:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804bda1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bda5:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804bdab:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804bdb2:	00 
 804bdb3:	89 04 24             	mov    %eax,(%esp)
 804bdb6:	e8 f5 65 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804bdbb:	90                   	nop
 804bdbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804bdc0:	0f b6 47 07          	movzbl 0x7(%edi),%eax
 804bdc4:	a8 01                	test   $0x1,%al
 804bdc6:	0f 85 ee 01 00 00    	jne    804bfba <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x86a>
 804bdcc:	c0 e8 03             	shr    $0x3,%al
 804bdcf:	83 e0 07             	and    $0x7,%eax
 804bdd2:	e8 e9 dd ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804bdd7:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 804bddb:	8b 8b a0 b9 00 00    	mov    0xb9a0(%ebx),%ecx
 804bde1:	89 4c 24 40          	mov    %ecx,0x40(%esp)
 804bde5:	29 c5                	sub    %eax,%ebp
 804bde7:	89 e8                	mov    %ebp,%eax
 804bde9:	c1 e8 14             	shr    $0x14,%eax
 804bdec:	8b 4c 24 40          	mov    0x40(%esp),%ecx
 804bdf0:	0f b6 04 01          	movzbl (%ecx,%eax,1),%eax
 804bdf4:	84 c0                	test   %al,%al
 804bdf6:	0f 85 6e 01 00 00    	jne    804bf6a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x81a>
 804bdfc:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804be02:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804be05:	85 c5                	test   %eax,%ebp
 804be07:	0f 85 a5 0b 00 00    	jne    804c9b2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1262>
 804be0d:	31 d2                	xor    %edx,%edx
 804be0f:	89 e8                	mov    %ebp,%eax
 804be11:	f7 f1                	div    %ecx
 804be13:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804be1a:	00 
 804be1b:	85 d2                	test   %edx,%edx
 804be1d:	89 54 24 28          	mov    %edx,0x28(%esp)
 804be21:	0f 85 66 0b 00 00    	jne    804c98d <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x123d>
 804be27:	29 cd                	sub    %ecx,%ebp
 804be29:	8d 4d 10             	lea    0x10(%ebp),%ecx
 804be2c:	8b 01                	mov    (%ecx),%eax
 804be2e:	e9 56 fa ff ff       	jmp    804b889 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x139>
 804be33:	8d 55 f0             	lea    -0x10(%ebp),%edx
 804be36:	b8 00 01 00 00       	mov    $0x100,%eax
 804be3b:	89 d1                	mov    %edx,%ecx
 804be3d:	83 e2 07             	and    $0x7,%edx
 804be40:	c1 e9 03             	shr    $0x3,%ecx
 804be43:	d3 e0                	shl    %cl,%eax
 804be45:	89 c1                	mov    %eax,%ecx
 804be47:	c1 e9 03             	shr    $0x3,%ecx
 804be4a:	0f af ca             	imul   %edx,%ecx
 804be4d:	01 c8                	add    %ecx,%eax
 804be4f:	e9 42 fe ff ff       	jmp    804bc96 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x546>
 804be54:	89 fe                	mov    %edi,%esi
 804be56:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
 804be5c:	83 f8 10             	cmp    $0x10,%eax
 804be5f:	0f 86 83 02 00 00    	jbe    804c0e8 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x998>
 804be65:	83 e8 10             	sub    $0x10,%eax
 804be68:	ba 00 01 00 00       	mov    $0x100,%edx
 804be6d:	89 c1                	mov    %eax,%ecx
 804be6f:	83 e0 07             	and    $0x7,%eax
 804be72:	c1 e9 03             	shr    $0x3,%ecx
 804be75:	d3 e2                	shl    %cl,%edx
 804be77:	89 d1                	mov    %edx,%ecx
 804be79:	c1 e9 03             	shr    $0x3,%ecx
 804be7c:	0f af c8             	imul   %eax,%ecx
 804be7f:	01 d1                	add    %edx,%ecx
 804be81:	89 f8                	mov    %edi,%eax
 804be83:	31 d2                	xor    %edx,%edx
 804be85:	29 f0                	sub    %esi,%eax
 804be87:	f7 f1                	div    %ecx
 804be89:	31 d2                	xor    %edx,%edx
 804be8b:	0f af c1             	imul   %ecx,%eax
 804be8e:	01 f0                	add    %esi,%eax
 804be90:	89 44 24 20          	mov    %eax,0x20(%esp)
 804be94:	8b 44 24 20          	mov    0x20(%esp),%eax
 804be98:	8b 00                	mov    (%eax),%eax
 804be9a:	3d b9 96 6e cc       	cmp    $0xcc6e96b9,%eax
 804be9f:	0f 85 07 02 00 00    	jne    804c0ac <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x95c>
 804bea5:	8b 44 24 20          	mov    0x20(%esp),%eax
 804bea9:	31 d2                	xor    %edx,%edx
 804beab:	89 7c 24 40          	mov    %edi,0x40(%esp)
 804beaf:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 804beb6:	00 
 804beb7:	8b 40 04             	mov    0x4(%eax),%eax
 804beba:	39 c7                	cmp    %eax,%edi
 804bebc:	0f 84 a6 f9 ff ff    	je     804b868 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x118>
 804bec2:	8b 74 24 40          	mov    0x40(%esp),%esi
 804bec6:	8b 7c 24 44          	mov    0x44(%esp),%edi
 804beca:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804bece:	8d 83 94 32 fd ff    	lea    -0x2cd6c(%ebx),%eax
 804bed4:	89 44 24 08          	mov    %eax,0x8(%esp)
 804bed8:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804bede:	89 74 24 14          	mov    %esi,0x14(%esp)
 804bee2:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804bee6:	89 54 24 10          	mov    %edx,0x10(%esp)
 804beea:	c7 44 24 04 0f 01 00 	movl   $0x10f,0x4(%esp)
 804bef1:	00 
 804bef2:	89 04 24             	mov    %eax,(%esp)
 804bef5:	e8 b6 64 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804befa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804bf00:	0f b6 47 07          	movzbl 0x7(%edi),%eax
 804bf04:	a8 01                	test   $0x1,%al
 804bf06:	0f 85 74 02 00 00    	jne    804c180 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xa30>
 804bf0c:	c0 e8 03             	shr    $0x3,%al
 804bf0f:	83 e0 07             	and    $0x7,%eax
 804bf12:	e8 a9 dc ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804bf17:	8d 6f 10             	lea    0x10(%edi),%ebp
 804bf1a:	8b b3 a0 b9 00 00    	mov    0xb9a0(%ebx),%esi
 804bf20:	29 c5                	sub    %eax,%ebp
 804bf22:	89 e8                	mov    %ebp,%eax
 804bf24:	c1 e8 14             	shr    $0x14,%eax
 804bf27:	0f b6 14 06          	movzbl (%esi,%eax,1),%edx
 804bf2b:	84 d2                	test   %dl,%dl
 804bf2d:	0f 85 0d 03 00 00    	jne    804c240 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xaf0>
 804bf33:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804bf39:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804bf3c:	85 c5                	test   %eax,%ebp
 804bf3e:	0f 85 6e 0a 00 00    	jne    804c9b2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1262>
 804bf44:	31 d2                	xor    %edx,%edx
 804bf46:	89 e8                	mov    %ebp,%eax
 804bf48:	f7 f1                	div    %ecx
 804bf4a:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804bf51:	00 
 804bf52:	85 d2                	test   %edx,%edx
 804bf54:	89 54 24 20          	mov    %edx,0x20(%esp)
 804bf58:	0f 85 0a 0a 00 00    	jne    804c968 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1218>
 804bf5e:	29 cd                	sub    %ecx,%ebp
 804bf60:	8d 4d 10             	lea    0x10(%ebp),%ecx
 804bf63:	8b 01                	mov    (%ecx),%eax
 804bf65:	e9 bc f8 ff ff       	jmp    804b826 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xd6>
 804bf6a:	89 ef                	mov    %ebp,%edi
 804bf6c:	81 e7 00 00 f0 ff    	and    $0xfff00000,%edi
 804bf72:	83 f8 10             	cmp    $0x10,%eax
 804bf75:	0f 86 9c 03 00 00    	jbe    804c317 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xbc7>
 804bf7b:	8d 50 f0             	lea    -0x10(%eax),%edx
 804bf7e:	b8 00 01 00 00       	mov    $0x100,%eax
 804bf83:	89 d1                	mov    %edx,%ecx
 804bf85:	83 e2 07             	and    $0x7,%edx
 804bf88:	c1 e9 03             	shr    $0x3,%ecx
 804bf8b:	d3 e0                	shl    %cl,%eax
 804bf8d:	89 c1                	mov    %eax,%ecx
 804bf8f:	c1 e9 03             	shr    $0x3,%ecx
 804bf92:	0f af ca             	imul   %edx,%ecx
 804bf95:	01 c8                	add    %ecx,%eax
 804bf97:	89 44 24 28          	mov    %eax,0x28(%esp)
 804bf9b:	89 e8                	mov    %ebp,%eax
 804bf9d:	31 d2                	xor    %edx,%edx
 804bf9f:	29 f8                	sub    %edi,%eax
 804bfa1:	f7 74 24 28          	divl   0x28(%esp)
 804bfa5:	8d 8f 00 00 10 00    	lea    0x100000(%edi),%ecx
 804bfab:	83 c0 01             	add    $0x1,%eax
 804bfae:	c1 e0 04             	shl    $0x4,%eax
 804bfb1:	29 c1                	sub    %eax,%ecx
 804bfb3:	8b 01                	mov    (%ecx),%eax
 804bfb5:	e9 cf f8 ff ff       	jmp    804b889 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x139>
 804bfba:	8b 8b a0 b9 00 00    	mov    0xb9a0(%ebx),%ecx
 804bfc0:	89 f8                	mov    %edi,%eax
 804bfc2:	c1 e8 14             	shr    $0x14,%eax
 804bfc5:	0f b6 04 01          	movzbl (%ecx,%eax,1),%eax
 804bfc9:	89 4c 24 40          	mov    %ecx,0x40(%esp)
 804bfcd:	84 c0                	test   %al,%al
 804bfcf:	0f 85 fb 02 00 00    	jne    804c2d0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xb80>
 804bfd5:	b8 01 00 00 00       	mov    $0x1,%eax
 804bfda:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804bfe0:	84 c0                	test   %al,%al
 804bfe2:	74 0e                	je     804bff2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x8a2>
 804bfe4:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804bfea:	89 04 24             	mov    %eax,(%esp)
 804bfed:	e8 3e 34 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804bff2:	8b ab a8 b9 02 00    	mov    0x2b9a8(%ebx),%ebp
 804bff8:	85 ed                	test   %ebp,%ebp
 804bffa:	0f 84 61 09 00 00    	je     804c961 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1211>
 804c000:	8d 83 a8 b9 00 00    	lea    0xb9a8(%ebx),%eax
 804c006:	8d 0c a8             	lea    (%eax,%ebp,4),%ecx
 804c009:	31 ed                	xor    %ebp,%ebp
 804c00b:	89 74 24 40          	mov    %esi,0x40(%esp)
 804c00f:	90                   	nop
 804c010:	8b 10                	mov    (%eax),%edx
 804c012:	39 d7                	cmp    %edx,%edi
 804c014:	72 13                	jb     804c029 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x8d9>
 804c016:	89 fe                	mov    %edi,%esi
 804c018:	29 d6                	sub    %edx,%esi
 804c01a:	89 74 24 28          	mov    %esi,0x28(%esp)
 804c01e:	89 fe                	mov    %edi,%esi
 804c020:	29 ee                	sub    %ebp,%esi
 804c022:	39 74 24 28          	cmp    %esi,0x28(%esp)
 804c026:	0f 42 ea             	cmovb  %edx,%ebp
 804c029:	83 c0 04             	add    $0x4,%eax
 804c02c:	39 c8                	cmp    %ecx,%eax
 804c02e:	75 e0                	jne    804c010 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x8c0>
 804c030:	85 ed                	test   %ebp,%ebp
 804c032:	8b 74 24 40          	mov    0x40(%esp),%esi
 804c036:	0f 84 6b 03 00 00    	je     804c3a7 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc57>
 804c03c:	8b 4d 00             	mov    0x0(%ebp),%ecx
 804c03f:	31 d2                	xor    %edx,%edx
 804c041:	89 e8                	mov    %ebp,%eax
 804c043:	83 fa 00             	cmp    $0x0,%edx
 804c046:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804c04d:	00 
 804c04e:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804c052:	0f 87 42 02 00 00    	ja     804c29a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xb4a>
 804c058:	0f 83 34 02 00 00    	jae    804c292 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xb42>
 804c05e:	8b 74 24 28          	mov    0x28(%esp),%esi
 804c062:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 804c066:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c06a:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c06e:	89 74 24 14          	mov    %esi,0x14(%esp)
 804c072:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804c076:	e9 a0 fb ff ff       	jmp    804bc1b <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x4cb>
 804c07b:	90                   	nop
 804c07c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804c080:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
 804c087:	00 
 804c088:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804c08f:	f6 47 07 01          	testb  $0x1,0x7(%edi)
 804c093:	0f 84 cf f7 ff ff    	je     804b868 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x118>
 804c099:	8b 44 24 20          	mov    0x20(%esp),%eax
 804c09d:	31 d2                	xor    %edx,%edx
 804c09f:	8b 00                	mov    (%eax),%eax
 804c0a1:	3d b9 96 6e cc       	cmp    $0xcc6e96b9,%eax
 804c0a6:	0f 84 f9 fd ff ff    	je     804bea5 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x755>
 804c0ac:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c0b0:	8d 83 68 32 fd ff    	lea    -0x2cd98(%ebx),%eax
 804c0b6:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c0ba:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804c0c0:	c7 44 24 14 b9 96 6e 	movl   $0xcc6e96b9,0x14(%esp)
 804c0c7:	cc 
 804c0c8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c0cf:	00 
 804c0d0:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c0d4:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)
 804c0db:	00 
 804c0dc:	89 04 24             	mov    %eax,(%esp)
 804c0df:	e8 cc 62 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c0e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804c0e8:	c1 e0 04             	shl    $0x4,%eax
 804c0eb:	89 c1                	mov    %eax,%ecx
 804c0ed:	e9 8f fd ff ff       	jmp    804be81 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x731>
 804c0f2:	39 c8                	cmp    %ecx,%eax
 804c0f4:	0f 83 87 fc ff ff    	jae    804bd81 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x631>
 804c0fa:	83 fa 00             	cmp    $0x0,%edx
 804c0fd:	89 7c 24 20          	mov    %edi,0x20(%esp)
 804c101:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804c108:	00 
 804c109:	76 3d                	jbe    804c148 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x9f8>
 804c10b:	8b 74 24 20          	mov    0x20(%esp),%esi
 804c10f:	89 d1                	mov    %edx,%ecx
 804c111:	8b 7c 24 24          	mov    0x24(%esp),%edi
 804c115:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c119:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804c11d:	89 74 24 14          	mov    %esi,0x14(%esp)
 804c121:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804c125:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804c12b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c12f:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804c135:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804c13c:	00 
 804c13d:	89 04 24             	mov    %eax,(%esp)
 804c140:	e8 6b 62 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c145:	8d 76 00             	lea    0x0(%esi),%esi
 804c148:	39 f8                	cmp    %edi,%eax
 804c14a:	77 bf                	ja     804c10b <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x9bb>
 804c14c:	39 cf                	cmp    %ecx,%edi
 804c14e:	0f 87 2c ff ff ff    	ja     804c080 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x930>
 804c154:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804c15a:	31 d2                	xor    %edx,%edx
 804c15c:	89 f0                	mov    %esi,%eax
 804c15e:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804c165:	00 
 804c166:	f7 f1                	div    %ecx
 804c168:	85 d2                	test   %edx,%edx
 804c16a:	89 54 24 20          	mov    %edx,0x20(%esp)
 804c16e:	0f 85 d0 07 00 00    	jne    804c944 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11f4>
 804c174:	8d 04 0e             	lea    (%esi,%ecx,1),%eax
 804c177:	89 44 24 20          	mov    %eax,0x20(%esp)
 804c17b:	e9 08 ff ff ff       	jmp    804c088 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x938>
 804c180:	8b b3 a0 b9 00 00    	mov    0xb9a0(%ebx),%esi
 804c186:	89 f8                	mov    %edi,%eax
 804c188:	c1 e8 14             	shr    $0x14,%eax
 804c18b:	0f b6 04 06          	movzbl (%esi,%eax,1),%eax
 804c18f:	84 c0                	test   %al,%al
 804c191:	0f 85 c9 01 00 00    	jne    804c360 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc10>
 804c197:	b8 01 00 00 00       	mov    $0x1,%eax
 804c19c:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804c1a2:	84 c0                	test   %al,%al
 804c1a4:	74 0e                	je     804c1b4 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xa64>
 804c1a6:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804c1ac:	89 04 24             	mov    %eax,(%esp)
 804c1af:	e8 7c 32 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804c1b4:	8b ab a8 b9 02 00    	mov    0x2b9a8(%ebx),%ebp
 804c1ba:	85 ed                	test   %ebp,%ebp
 804c1bc:	0f 84 7b 07 00 00    	je     804c93d <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11ed>
 804c1c2:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804c1c8:	8d 0c aa             	lea    (%edx,%ebp,4),%ecx
 804c1cb:	31 ed                	xor    %ebp,%ebp
 804c1cd:	8d 76 00             	lea    0x0(%esi),%esi
 804c1d0:	8b 02                	mov    (%edx),%eax
 804c1d2:	39 c7                	cmp    %eax,%edi
 804c1d4:	72 13                	jb     804c1e9 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xa99>
 804c1d6:	89 fe                	mov    %edi,%esi
 804c1d8:	29 c6                	sub    %eax,%esi
 804c1da:	89 74 24 20          	mov    %esi,0x20(%esp)
 804c1de:	89 fe                	mov    %edi,%esi
 804c1e0:	29 ee                	sub    %ebp,%esi
 804c1e2:	39 74 24 20          	cmp    %esi,0x20(%esp)
 804c1e6:	0f 42 e8             	cmovb  %eax,%ebp
 804c1e9:	83 c2 04             	add    $0x4,%edx
 804c1ec:	39 ca                	cmp    %ecx,%edx
 804c1ee:	75 e0                	jne    804c1d0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xa80>
 804c1f0:	85 ed                	test   %ebp,%ebp
 804c1f2:	0f 84 38 02 00 00    	je     804c430 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xce0>
 804c1f8:	8b 45 00             	mov    0x0(%ebp),%eax
 804c1fb:	31 c9                	xor    %ecx,%ecx
 804c1fd:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804c204:	00 
 804c205:	83 7c 24 24 00       	cmpl   $0x0,0x24(%esp)
 804c20a:	89 6c 24 20          	mov    %ebp,0x20(%esp)
 804c20e:	89 c2                	mov    %eax,%edx
 804c210:	0f 87 17 01 00 00    	ja     804c32d <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xbdd>
 804c216:	0f 83 07 01 00 00    	jae    804c323 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xbd3>
 804c21c:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804c220:	89 d0                	mov    %edx,%eax
 804c222:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804c226:	89 44 24 14          	mov    %eax,0x14(%esp)
 804c22a:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804c22e:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804c232:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 804c236:	e9 e0 f9 ff ff       	jmp    804bc1b <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x4cb>
 804c23b:	90                   	nop
 804c23c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804c240:	89 e8                	mov    %ebp,%eax
 804c242:	89 d6                	mov    %edx,%esi
 804c244:	25 00 00 f0 ff       	and    $0xfff00000,%eax
 804c249:	c1 e6 04             	shl    $0x4,%esi
 804c24c:	83 fa 10             	cmp    $0x10,%edx
 804c24f:	76 24                	jbe    804c275 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xb25>
 804c251:	8d 72 f0             	lea    -0x10(%edx),%esi
 804c254:	89 f1                	mov    %esi,%ecx
 804c256:	89 74 24 20          	mov    %esi,0x20(%esp)
 804c25a:	c1 e9 03             	shr    $0x3,%ecx
 804c25d:	be 00 01 00 00       	mov    $0x100,%esi
 804c262:	d3 e6                	shl    %cl,%esi
 804c264:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 804c268:	89 f2                	mov    %esi,%edx
 804c26a:	c1 ea 03             	shr    $0x3,%edx
 804c26d:	83 e1 07             	and    $0x7,%ecx
 804c270:	0f af d1             	imul   %ecx,%edx
 804c273:	01 d6                	add    %edx,%esi
 804c275:	29 c5                	sub    %eax,%ebp
 804c277:	31 d2                	xor    %edx,%edx
 804c279:	8d 88 00 00 10 00    	lea    0x100000(%eax),%ecx
 804c27f:	89 e8                	mov    %ebp,%eax
 804c281:	f7 f6                	div    %esi
 804c283:	83 c0 01             	add    $0x1,%eax
 804c286:	c1 e0 04             	shl    $0x4,%eax
 804c289:	29 c1                	sub    %eax,%ecx
 804c28b:	8b 01                	mov    (%ecx),%eax
 804c28d:	e9 94 f5 ff ff       	jmp    804b826 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xd6>
 804c292:	39 cd                	cmp    %ecx,%ebp
 804c294:	0f 82 c4 fd ff ff    	jb     804c05e <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x90e>
 804c29a:	03 4d 04             	add    0x4(%ebp),%ecx
 804c29d:	83 fa 00             	cmp    $0x0,%edx
 804c2a0:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804c2a7:	00 
 804c2a8:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804c2ac:	0f 86 0f 01 00 00    	jbe    804c3c1 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc71>
 804c2b2:	8b 74 24 28          	mov    0x28(%esp),%esi
 804c2b6:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 804c2ba:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c2be:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c2c2:	89 74 24 14          	mov    %esi,0x14(%esp)
 804c2c6:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804c2ca:	e9 cc fa ff ff       	jmp    804bd9b <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x64b>
 804c2cf:	90                   	nop
 804c2d0:	89 fd                	mov    %edi,%ebp
 804c2d2:	81 e5 00 00 f0 ff    	and    $0xfff00000,%ebp
 804c2d8:	83 f8 10             	cmp    $0x10,%eax
 804c2db:	0f 86 17 01 00 00    	jbe    804c3f8 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xca8>
 804c2e1:	8d 50 f0             	lea    -0x10(%eax),%edx
 804c2e4:	b8 00 01 00 00       	mov    $0x100,%eax
 804c2e9:	89 d1                	mov    %edx,%ecx
 804c2eb:	83 e2 07             	and    $0x7,%edx
 804c2ee:	c1 e9 03             	shr    $0x3,%ecx
 804c2f1:	d3 e0                	shl    %cl,%eax
 804c2f3:	89 c1                	mov    %eax,%ecx
 804c2f5:	c1 e9 03             	shr    $0x3,%ecx
 804c2f8:	0f af ca             	imul   %edx,%ecx
 804c2fb:	01 c1                	add    %eax,%ecx
 804c2fd:	89 f8                	mov    %edi,%eax
 804c2ff:	31 d2                	xor    %edx,%edx
 804c301:	29 e8                	sub    %ebp,%eax
 804c303:	f7 f1                	div    %ecx
 804c305:	0f af c1             	imul   %ecx,%eax
 804c308:	8d 3c 28             	lea    (%eax,%ebp,1),%edi
 804c30b:	89 f8                	mov    %edi,%eax
 804c30d:	89 fd                	mov    %edi,%ebp
 804c30f:	c1 e8 14             	shr    $0x14,%eax
 804c312:	e9 d5 fa ff ff       	jmp    804bdec <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x69c>
 804c317:	c1 e0 04             	shl    $0x4,%eax
 804c31a:	89 44 24 28          	mov    %eax,0x28(%esp)
 804c31e:	e9 78 fc ff ff       	jmp    804bf9b <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x84b>
 804c323:	39 44 24 20          	cmp    %eax,0x20(%esp)
 804c327:	0f 82 ef fe ff ff    	jb     804c21c <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xacc>
 804c32d:	03 45 04             	add    0x4(%ebp),%eax
 804c330:	31 c9                	xor    %ecx,%ecx
 804c332:	83 7c 24 24 00       	cmpl   $0x0,0x24(%esp)
 804c337:	89 c2                	mov    %eax,%edx
 804c339:	0f 86 d1 01 00 00    	jbe    804c510 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xdc0>
 804c33f:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804c343:	89 d0                	mov    %edx,%eax
 804c345:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804c349:	89 44 24 14          	mov    %eax,0x14(%esp)
 804c34d:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804c351:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804c355:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 804c359:	e9 3d fa ff ff       	jmp    804bd9b <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x64b>
 804c35e:	66 90                	xchg   %ax,%ax
 804c360:	89 fd                	mov    %edi,%ebp
 804c362:	81 e5 00 00 f0 ff    	and    $0xfff00000,%ebp
 804c368:	83 f8 10             	cmp    $0x10,%eax
 804c36b:	0f 86 df 01 00 00    	jbe    804c550 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xe00>
 804c371:	8d 50 f0             	lea    -0x10(%eax),%edx
 804c374:	b8 00 01 00 00       	mov    $0x100,%eax
 804c379:	89 d1                	mov    %edx,%ecx
 804c37b:	83 e2 07             	and    $0x7,%edx
 804c37e:	c1 e9 03             	shr    $0x3,%ecx
 804c381:	d3 e0                	shl    %cl,%eax
 804c383:	89 c1                	mov    %eax,%ecx
 804c385:	c1 e9 03             	shr    $0x3,%ecx
 804c388:	0f af ca             	imul   %edx,%ecx
 804c38b:	01 c1                	add    %eax,%ecx
 804c38d:	89 f8                	mov    %edi,%eax
 804c38f:	31 d2                	xor    %edx,%edx
 804c391:	29 e8                	sub    %ebp,%eax
 804c393:	f7 f1                	div    %ecx
 804c395:	0f af c1             	imul   %ecx,%eax
 804c398:	8d 14 28             	lea    (%eax,%ebp,1),%edx
 804c39b:	89 d0                	mov    %edx,%eax
 804c39d:	89 d5                	mov    %edx,%ebp
 804c39f:	c1 e8 14             	shr    $0x14,%eax
 804c3a2:	e9 80 fb ff ff       	jmp    804bf27 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x7d7>
 804c3a7:	31 c0                	xor    %eax,%eax
 804c3a9:	31 ed                	xor    %ebp,%ebp
 804c3ab:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804c3b2:	8b 8b a0 b9 00 00    	mov    0xb9a0(%ebx),%ecx
 804c3b8:	89 4c 24 40          	mov    %ecx,0x40(%esp)
 804c3bc:	e9 2b fa ff ff       	jmp    804bdec <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x69c>
 804c3c1:	39 c8                	cmp    %ecx,%eax
 804c3c3:	0f 83 e9 fe ff ff    	jae    804c2b2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xb62>
 804c3c9:	83 fa 00             	cmp    $0x0,%edx
 804c3cc:	89 7c 24 28          	mov    %edi,0x28(%esp)
 804c3d0:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804c3d7:	00 
 804c3d8:	76 28                	jbe    804c402 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xcb2>
 804c3da:	8b 74 24 28          	mov    0x28(%esp),%esi
 804c3de:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 804c3e2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c3e6:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c3ea:	89 74 24 14          	mov    %esi,0x14(%esp)
 804c3ee:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804c3f2:	e9 2e fd ff ff       	jmp    804c125 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x9d5>
 804c3f7:	90                   	nop
 804c3f8:	c1 e0 04             	shl    $0x4,%eax
 804c3fb:	89 c1                	mov    %eax,%ecx
 804c3fd:	e9 fb fe ff ff       	jmp    804c2fd <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xbad>
 804c402:	39 f8                	cmp    %edi,%eax
 804c404:	77 d4                	ja     804c3da <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc8a>
 804c406:	39 cf                	cmp    %ecx,%edi
 804c408:	77 9d                	ja     804c3a7 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc57>
 804c40a:	8b bb a4 b9 00 00    	mov    0xb9a4(%ebx),%edi
 804c410:	31 d2                	xor    %edx,%edx
 804c412:	89 e8                	mov    %ebp,%eax
 804c414:	f7 f7                	div    %edi
 804c416:	89 d1                	mov    %edx,%ecx
 804c418:	89 d0                	mov    %edx,%eax
 804c41a:	31 d2                	xor    %edx,%edx
 804c41c:	85 c9                	test   %ecx,%ecx
 804c41e:	0f 85 04 05 00 00    	jne    804c928 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11d8>
 804c424:	01 fd                	add    %edi,%ebp
 804c426:	89 e8                	mov    %ebp,%eax
 804c428:	c1 e8 14             	shr    $0x14,%eax
 804c42b:	e9 7b ff ff ff       	jmp    804c3ab <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc5b>
 804c430:	31 c0                	xor    %eax,%eax
 804c432:	31 ed                	xor    %ebp,%ebp
 804c434:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804c43b:	8b b3 a0 b9 00 00    	mov    0xb9a0(%ebx),%esi
 804c441:	e9 e1 fa ff ff       	jmp    804bf27 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x7d7>
 804c446:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804c44a:	8b 93 a0 b9 00 00    	mov    0xb9a0(%ebx),%edx
 804c450:	c1 e8 14             	shr    $0x14,%eax
 804c453:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 804c457:	84 c0                	test   %al,%al
 804c459:	0f 85 31 03 00 00    	jne    804c790 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1040>
 804c45f:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804c465:	31 d2                	xor    %edx,%edx
 804c467:	31 ff                	xor    %edi,%edi
 804c469:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804c46d:	f7 f1                	div    %ecx
 804c46f:	85 d2                	test   %edx,%edx
 804c471:	0f 85 79 04 00 00    	jne    804c8f0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11a0>
 804c477:	8b 74 24 3c          	mov    0x3c(%esp),%esi
 804c47b:	b8 01 00 00 00       	mov    $0x1,%eax
 804c480:	29 ce                	sub    %ecx,%esi
 804c482:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804c488:	84 c0                	test   %al,%al
 804c48a:	74 0e                	je     804c49a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xd4a>
 804c48c:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804c492:	89 04 24             	mov    %eax,(%esp)
 804c495:	e8 96 2f 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804c49a:	8b 4e 0c             	mov    0xc(%esi),%ecx
 804c49d:	8b 84 8b a8 b9 00 00 	mov    0xb9a8(%ebx,%ecx,4),%eax
 804c4a4:	89 cf                	mov    %ecx,%edi
 804c4a6:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804c4aa:	99                   	cltd   
 804c4ab:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 804c4af:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 804c4b3:	89 44 24 28          	mov    %eax,0x28(%esp)
 804c4b7:	89 f0                	mov    %esi,%eax
 804c4b9:	99                   	cltd   
 804c4ba:	31 d1                	xor    %edx,%ecx
 804c4bc:	89 cd                	mov    %ecx,%ebp
 804c4be:	8b 8c bb a8 b9 00 00 	mov    0xb9a8(%ebx,%edi,4),%ecx
 804c4c5:	31 f1                	xor    %esi,%ecx
 804c4c7:	89 cf                	mov    %ecx,%edi
 804c4c9:	89 e9                	mov    %ebp,%ecx
 804c4cb:	09 f9                	or     %edi,%ecx
 804c4cd:	0f 85 e3 03 00 00    	jne    804c8b6 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1166>
 804c4d3:	8b 83 a8 b9 02 00    	mov    0x2b9a8(%ebx),%eax
 804c4d9:	31 ed                	xor    %ebp,%ebp
 804c4db:	31 c9                	xor    %ecx,%ecx
 804c4dd:	83 fd 00             	cmp    $0x0,%ebp
 804c4e0:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804c4e4:	89 c2                	mov    %eax,%edx
 804c4e6:	0f 82 b2 00 00 00    	jb     804c59e <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xe4e>
 804c4ec:	0f 86 a2 00 00 00    	jbe    804c594 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xe44>
 804c4f2:	89 d0                	mov    %edx,%eax
 804c4f4:	89 44 24 14          	mov    %eax,0x14(%esp)
 804c4f8:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804c4fc:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804c500:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 804c504:	e9 40 f4 ff ff       	jmp    804b949 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1f9>
 804c509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804c510:	39 44 24 20          	cmp    %eax,0x20(%esp)
 804c514:	0f 83 25 fe ff ff    	jae    804c33f <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xbef>
 804c51a:	31 c9                	xor    %ecx,%ecx
 804c51c:	89 fa                	mov    %edi,%edx
 804c51e:	83 7c 24 24 00       	cmpl   $0x0,0x24(%esp)
 804c523:	76 35                	jbe    804c55a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xe0a>
 804c525:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804c529:	89 d0                	mov    %edx,%eax
 804c52b:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804c52f:	89 44 24 14          	mov    %eax,0x14(%esp)
 804c533:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804c537:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 804c53b:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 804c53f:	e9 e1 fb ff ff       	jmp    804c125 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x9d5>
 804c544:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804c548:	83 c4 5c             	add    $0x5c,%esp
 804c54b:	5b                   	pop    %ebx
 804c54c:	5e                   	pop    %esi
 804c54d:	5f                   	pop    %edi
 804c54e:	5d                   	pop    %ebp
 804c54f:	c3                   	ret    
 804c550:	c1 e0 04             	shl    $0x4,%eax
 804c553:	89 c1                	mov    %eax,%ecx
 804c555:	e9 33 fe ff ff       	jmp    804c38d <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc3d>
 804c55a:	39 7c 24 20          	cmp    %edi,0x20(%esp)
 804c55e:	77 c5                	ja     804c525 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xdd5>
 804c560:	39 c7                	cmp    %eax,%edi
 804c562:	0f 87 c8 fe ff ff    	ja     804c430 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xce0>
 804c568:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804c56e:	31 d2                	xor    %edx,%edx
 804c570:	89 e8                	mov    %ebp,%eax
 804c572:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804c579:	00 
 804c57a:	f7 f1                	div    %ecx
 804c57c:	85 d2                	test   %edx,%edx
 804c57e:	89 54 24 20          	mov    %edx,0x20(%esp)
 804c582:	0f 85 ee 02 00 00    	jne    804c876 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1126>
 804c588:	01 cd                	add    %ecx,%ebp
 804c58a:	89 e8                	mov    %ebp,%eax
 804c58c:	c1 e8 14             	shr    $0x14,%eax
 804c58f:	e9 a0 fe ff ff       	jmp    804c434 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xce4>
 804c594:	39 44 24 20          	cmp    %eax,0x20(%esp)
 804c598:	0f 83 54 ff ff ff    	jae    804c4f2 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xda2>
 804c59e:	83 e8 01             	sub    $0x1,%eax
 804c5a1:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 804c5a5:	31 ed                	xor    %ebp,%ebp
 804c5a7:	8b 94 83 a8 b9 00 00 	mov    0xb9a8(%ebx,%eax,4),%edx
 804c5ae:	89 94 8b a8 b9 00 00 	mov    %edx,0xb9a8(%ebx,%ecx,4)
 804c5b5:	89 4a 0c             	mov    %ecx,0xc(%edx)
 804c5b8:	89 83 a8 b9 02 00    	mov    %eax,0x2b9a8(%ebx)
 804c5be:	8b 83 b4 b9 02 00    	mov    0x2b9b4(%ebx),%eax
 804c5c4:	83 83 b0 b9 02 00 01 	addl   $0x1,0x2b9b0(%ebx)
 804c5cb:	2b 46 04             	sub    0x4(%esi),%eax
 804c5ce:	89 83 b4 b9 02 00    	mov    %eax,0x2b9b4(%ebx)
 804c5d4:	8b 83 d0 ba 02 00    	mov    0x2bad0(%ebx),%eax
 804c5da:	8b 7e 04             	mov    0x4(%esi),%edi
 804c5dd:	8b 93 d4 ba 02 00    	mov    0x2bad4(%ebx),%edx
 804c5e3:	01 f8                	add    %edi,%eax
 804c5e5:	11 ea                	adc    %ebp,%edx
 804c5e7:	89 83 d0 ba 02 00    	mov    %eax,0x2bad0(%ebx)
 804c5ed:	89 93 d4 ba 02 00    	mov    %edx,0x2bad4(%ebx)
 804c5f3:	8b 83 e0 ba 02 00    	mov    0x2bae0(%ebx),%eax
 804c5f9:	8b 93 e4 ba 02 00    	mov    0x2bae4(%ebx),%edx
 804c5ff:	01 f8                	add    %edi,%eax
 804c601:	11 ea                	adc    %ebp,%edx
 804c603:	89 83 e0 ba 02 00    	mov    %eax,0x2bae0(%ebx)
 804c609:	89 93 e4 ba 02 00    	mov    %edx,0x2bae4(%ebx)
 804c60f:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804c616:	8b 2e                	mov    (%esi),%ebp
 804c618:	8b 7e 04             	mov    0x4(%esi),%edi
 804c61b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 804c622:	00 
 804c623:	89 2c 24             	mov    %ebp,(%esp)
 804c626:	89 7c 24 04          	mov    %edi,0x4(%esp)
 804c62a:	e8 81 04 01 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804c62f:	e8 dc 5b 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804c634:	81 fd fe ff ff 1f    	cmp    $0x1ffffffe,%ebp
 804c63a:	76 26                	jbe    804c662 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xf12>
 804c63c:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 804c642:	8b 12                	mov    (%edx),%edx
 804c644:	85 d2                	test   %edx,%edx
 804c646:	0f 84 c7 00 00 00    	je     804c713 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xfc3>
 804c64c:	39 d5                	cmp    %edx,%ebp
 804c64e:	0f 82 bf 00 00 00    	jb     804c713 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xfc3>
 804c654:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 804c65a:	3b 2a                	cmp    (%edx),%ebp
 804c65c:	0f 87 b1 00 00 00    	ja     804c713 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xfc3>
 804c662:	89 e9                	mov    %ebp,%ecx
 804c664:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c667:	c1 e9 03             	shr    $0x3,%ecx
 804c66a:	85 c2                	test   %eax,%edx
 804c66c:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804c670:	0f 85 d4 00 00 00    	jne    804c74a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xffa>
 804c676:	01 fd                	add    %edi,%ebp
 804c678:	81 fd fe ff ff 1f    	cmp    $0x1ffffffe,%ebp
 804c67e:	76 3d                	jbe    804c6bd <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xf6d>
 804c680:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 804c686:	8b 12                	mov    (%edx),%edx
 804c688:	85 d2                	test   %edx,%edx
 804c68a:	74 0e                	je     804c69a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xf4a>
 804c68c:	39 d5                	cmp    %edx,%ebp
 804c68e:	72 0a                	jb     804c69a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xf4a>
 804c690:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 804c696:	3b 2a                	cmp    (%edx),%ebp
 804c698:	76 23                	jbe    804c6bd <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xf6d>
 804c69a:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 804c6a0:	8b 0a                	mov    (%edx),%ecx
 804c6a2:	89 ca                	mov    %ecx,%edx
 804c6a4:	c1 ea 03             	shr    $0x3,%edx
 804c6a7:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 804c6ad:	39 d5                	cmp    %edx,%ebp
 804c6af:	0f 82 4b f6 ff ff    	jb     804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804c6b5:	39 cd                	cmp    %ecx,%ebp
 804c6b7:	0f 87 43 f6 ff ff    	ja     804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804c6bd:	8b 54 24 20          	mov    0x20(%esp),%edx
 804c6c1:	89 c1                	mov    %eax,%ecx
 804c6c3:	f7 d9                	neg    %ecx
 804c6c5:	8d 84 10 ff ff ff 1f 	lea    0x1fffffff(%eax,%edx,1),%eax
 804c6cc:	89 ea                	mov    %ebp,%edx
 804c6ce:	c1 ea 03             	shr    $0x3,%edx
 804c6d1:	21 c8                	and    %ecx,%eax
 804c6d3:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 804c6d9:	21 ca                	and    %ecx,%edx
 804c6db:	29 c2                	sub    %eax,%edx
 804c6dd:	89 54 24 04          	mov    %edx,0x4(%esp)
 804c6e1:	89 04 24             	mov    %eax,(%esp)
 804c6e4:	e8 f7 66 01 00       	call   8062de0 <_ZN11__sanitizer25FlushUnneededShadowMemoryEmm>
 804c6e9:	e8 82 d2 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804c6ee:	89 04 24             	mov    %eax,(%esp)
 804c6f1:	e8 5a d6 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804c6f6:	83 40 30 01          	addl   $0x1,0x30(%eax)
 804c6fa:	01 78 34             	add    %edi,0x34(%eax)
 804c6fd:	8b 46 04             	mov    0x4(%esi),%eax
 804c700:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c704:	8b 06                	mov    (%esi),%eax
 804c706:	89 04 24             	mov    %eax,(%esp)
 804c709:	e8 a2 63 01 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 804c70e:	e9 57 f0 ff ff       	jmp    804b76a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1a>
 804c713:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 804c719:	8b 0a                	mov    (%edx),%ecx
 804c71b:	89 ca                	mov    %ecx,%edx
 804c71d:	c1 ea 03             	shr    $0x3,%edx
 804c720:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 804c726:	39 d5                	cmp    %edx,%ebp
 804c728:	0f 82 d2 f5 ff ff    	jb     804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804c72e:	39 cd                	cmp    %ecx,%ebp
 804c730:	0f 87 ca f5 ff ff    	ja     804bd00 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x5b0>
 804c736:	89 e9                	mov    %ebp,%ecx
 804c738:	8d 50 ff             	lea    -0x1(%eax),%edx
 804c73b:	c1 e9 03             	shr    $0x3,%ecx
 804c73e:	85 c2                	test   %eax,%edx
 804c740:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804c744:	0f 84 2c ff ff ff    	je     804c676 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xf26>
 804c74a:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 804c750:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c754:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 804c75a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c761:	00 
 804c762:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c769:	00 
 804c76a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804c771:	00 
 804c772:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804c779:	00 
 804c77a:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 804c781:	00 
 804c782:	89 04 24             	mov    %eax,(%esp)
 804c785:	e8 26 5c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c78a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804c790:	0f b6 f0             	movzbl %al,%esi
 804c793:	31 d2                	xor    %edx,%edx
 804c795:	83 fe 58             	cmp    $0x58,%esi
 804c798:	89 f0                	mov    %esi,%eax
 804c79a:	0f 87 ac f4 ff ff    	ja     804bc4c <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x4fc>
 804c7a0:	83 fe 10             	cmp    $0x10,%esi
 804c7a3:	77 56                	ja     804c7fb <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x10ab>
 804c7a5:	89 f0                	mov    %esi,%eax
 804c7a7:	c1 e0 04             	shl    $0x4,%eax
 804c7aa:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 804c7ae:	31 d2                	xor    %edx,%edx
 804c7b0:	8b b9 d8 b4 00 00    	mov    0xb4d8(%ecx),%edi
 804c7b6:	8b a9 dc b4 00 00    	mov    0xb4dc(%ecx),%ebp
 804c7bc:	01 f8                	add    %edi,%eax
 804c7be:	89 81 d8 b4 00 00    	mov    %eax,0xb4d8(%ecx)
 804c7c4:	89 f0                	mov    %esi,%eax
 804c7c6:	11 ea                	adc    %ebp,%edx
 804c7c8:	c1 e0 09             	shl    $0x9,%eax
 804c7cb:	8d 3c f0             	lea    (%eax,%esi,8),%edi
 804c7ce:	01 cf                	add    %ecx,%edi
 804c7d0:	8b 07                	mov    (%edi),%eax
 804c7d2:	3b 47 04             	cmp    0x4(%edi),%eax
 804c7d5:	89 91 dc b4 00 00    	mov    %edx,0xb4dc(%ecx)
 804c7db:	74 7c                	je     804c859 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1109>
 804c7dd:	8b 74 24 3c          	mov    0x3c(%esp),%esi
 804c7e1:	8d 50 01             	lea    0x1(%eax),%edx
 804c7e4:	89 17                	mov    %edx,(%edi)
 804c7e6:	89 74 87 08          	mov    %esi,0x8(%edi,%eax,4)
 804c7ea:	e9 7b ef ff ff       	jmp    804b76a <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1a>
 804c7ef:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)
 804c7f6:	e9 91 ef ff ff       	jmp    804b78c <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x3c>
 804c7fb:	8d 56 f0             	lea    -0x10(%esi),%edx
 804c7fe:	b8 00 01 00 00       	mov    $0x100,%eax
 804c803:	89 d1                	mov    %edx,%ecx
 804c805:	83 e2 07             	and    $0x7,%edx
 804c808:	c1 e9 03             	shr    $0x3,%ecx
 804c80b:	d3 e0                	shl    %cl,%eax
 804c80d:	89 c1                	mov    %eax,%ecx
 804c80f:	c1 e9 03             	shr    $0x3,%ecx
 804c812:	0f af ca             	imul   %edx,%ecx
 804c815:	01 c8                	add    %ecx,%eax
 804c817:	eb 91                	jmp    804c7aa <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x105a>
 804c819:	8d 83 f0 31 fd ff    	lea    -0x2ce10(%ebx),%eax
 804c81f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c823:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804c829:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c830:	00 
 804c831:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c838:	00 
 804c839:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804c840:	00 
 804c841:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804c848:	00 
 804c849:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)
 804c850:	00 
 804c851:	89 04 24             	mov    %eax,(%esp)
 804c854:	e8 57 5b 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c859:	8d 83 a0 b9 00 00    	lea    0xb9a0(%ebx),%eax
 804c85f:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c863:	89 74 24 08          	mov    %esi,0x8(%esp)
 804c867:	89 0c 24             	mov    %ecx,(%esp)
 804c86a:	e8 51 32 00 00       	call   804fac0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m>
 804c86f:	8b 07                	mov    (%edi),%eax
 804c871:	e9 67 ff ff ff       	jmp    804c7dd <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x108d>
 804c876:	8b 44 24 20          	mov    0x20(%esp),%eax
 804c87a:	8b 54 24 24          	mov    0x24(%esp),%edx
 804c87e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c885:	00 
 804c886:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c88d:	00 
 804c88e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c892:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804c898:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c89c:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804c8a2:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c8a6:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804c8ad:	00 
 804c8ae:	89 04 24             	mov    %eax,(%esp)
 804c8b1:	e8 fa 5a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c8b6:	89 d5                	mov    %edx,%ebp
 804c8b8:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 804c8bc:	8b 54 24 28          	mov    0x28(%esp),%edx
 804c8c0:	89 74 24 14          	mov    %esi,0x14(%esp)
 804c8c4:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804c8c8:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804c8cc:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804c8d0:	8d 83 1b 2d fd ff    	lea    -0x2d2e5(%ebx),%eax
 804c8d6:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c8da:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804c8e0:	c7 44 24 04 8e 03 00 	movl   $0x38e,0x4(%esp)
 804c8e7:	00 
 804c8e8:	89 04 24             	mov    %eax,(%esp)
 804c8eb:	e8 c0 5a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c8f0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c8f7:	00 
 804c8f8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c8ff:	00 
 804c900:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804c904:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804c908:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804c90e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c912:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804c918:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804c91f:	00 
 804c920:	89 04 24             	mov    %eax,(%esp)
 804c923:	e8 88 5a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c928:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c92f:	00 
 804c930:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c937:	00 
 804c938:	e9 51 ff ff ff       	jmp    804c88e <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x113e>
 804c93d:	31 c0                	xor    %eax,%eax
 804c93f:	e9 f0 fa ff ff       	jmp    804c434 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xce4>
 804c944:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c94b:	00 
 804c94c:	8b 44 24 20          	mov    0x20(%esp),%eax
 804c950:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c957:	00 
 804c958:	8b 54 24 24          	mov    0x24(%esp),%edx
 804c95c:	e9 2d ff ff ff       	jmp    804c88e <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x113e>
 804c961:	31 c0                	xor    %eax,%eax
 804c963:	e9 43 fa ff ff       	jmp    804c3ab <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0xc5b>
 804c968:	8b 44 24 20          	mov    0x20(%esp),%eax
 804c96c:	8b 54 24 24          	mov    0x24(%esp),%edx
 804c970:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c977:	00 
 804c978:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c97f:	00 
 804c980:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c984:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c988:	e9 7b ff ff ff       	jmp    804c908 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11b8>
 804c98d:	8b 44 24 28          	mov    0x28(%esp),%eax
 804c991:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804c995:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c99c:	00 
 804c99d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c9a4:	00 
 804c9a5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804c9a9:	89 54 24 10          	mov    %edx,0x10(%esp)
 804c9ad:	e9 56 ff ff ff       	jmp    804c908 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11b8>
 804c9b2:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804c9b8:	89 44 24 08          	mov    %eax,0x8(%esp)
 804c9bc:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804c9c2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804c9c9:	00 
 804c9ca:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804c9d1:	00 
 804c9d2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804c9d9:	00 
 804c9da:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804c9e1:	00 
 804c9e2:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804c9e9:	00 
 804c9ea:	89 04 24             	mov    %eax,(%esp)
 804c9ed:	e8 be 59 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804c9f2:	8d 83 a0 b9 00 00    	lea    0xb9a0(%ebx),%eax
 804c9f8:	89 44 24 04          	mov    %eax,0x4(%esp)
 804c9fc:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 804ca00:	89 0c 24             	mov    %ecx,(%esp)
 804ca03:	e8 b8 30 00 00       	call   804fac0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m>
 804ca08:	8b 06                	mov    (%esi),%eax
 804ca0a:	e9 be f2 ff ff       	jmp    804bccd <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x57d>
 804ca0f:	89 54 24 18          	mov    %edx,0x18(%esp)
 804ca13:	8b 44 24 20          	mov    0x20(%esp),%eax
 804ca17:	8b 54 24 24          	mov    0x24(%esp),%edx
 804ca1b:	89 6c 24 14          	mov    %ebp,0x14(%esp)
 804ca1f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804ca23:	89 54 24 10          	mov    %edx,0x10(%esp)
 804ca27:	e9 a4 fe ff ff       	jmp    804c8d0 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x1180>
 804ca2c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ca33:	00 
 804ca34:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ca3b:	00 
 804ca3c:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804ca40:	89 54 24 10          	mov    %edx,0x10(%esp)
 804ca44:	e9 bf fe ff ff       	jmp    804c908 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26+0x11b8>
 804ca49:	8d 83 20 32 fd ff    	lea    -0x2cde0(%ebx),%eax
 804ca4f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ca53:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804ca59:	c7 44 24 14 ff ff ff 	movl   $0xffffff,0x14(%esp)
 804ca60:	00 
 804ca61:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ca68:	00 
 804ca69:	c7 44 24 0c ff ff ff 	movl   $0xffffff,0xc(%esp)
 804ca70:	00 
 804ca71:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ca78:	00 
 804ca79:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)
 804ca80:	00 
 804ca81:	89 04 24             	mov    %eax,(%esp)
 804ca84:	e8 27 59 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ca89:	90                   	nop
 804ca8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0804ca90 <_ZN6__asan28AsanThreadLocalMallocStorage10CommitBackEv>:
 804ca90:	55                   	push   %ebp
 804ca91:	57                   	push   %edi
 804ca92:	56                   	push   %esi
 804ca93:	53                   	push   %ebx
 804ca94:	83 ec 1c             	sub    $0x1c,%esp
 804ca97:	e8 54 d0 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ca9c:	81 c3 64 35 06 00    	add    $0x63564,%ebx
 804caa2:	8b 74 24 30          	mov    0x30(%esp),%esi
 804caa6:	89 34 24             	mov    %esi,(%esp)
 804caa9:	e8 12 dd ff ff       	call   804a7c0 <_ZN6__asan17GetAllocatorCacheEPNS_28AsanThreadLocalMallocStorageE>
 804caae:	89 34 24             	mov    %esi,(%esp)
 804cab1:	89 c7                	mov    %eax,%edi
 804cab3:	e8 28 e6 ff ff       	call   804b0e0 <_ZN6__asan18GetQuarantineCacheEPNS_28AsanThreadLocalMallocStorageE>
 804cab8:	89 7c 24 08          	mov    %edi,0x8(%esp)
 804cabc:	89 44 24 04          	mov    %eax,0x4(%esp)
 804cac0:	8d 83 c0 b8 00 00    	lea    0xb8c0(%ebx),%eax
 804cac6:	89 04 24             	mov    %eax,(%esp)
 804cac9:	e8 b2 32 00 00       	call   804fd80 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_>
 804cace:	89 34 24             	mov    %esi,(%esp)
 804cad1:	31 f6                	xor    %esi,%esi
 804cad3:	e8 e8 dc ff ff       	call   804a7c0 <_ZN6__asan17GetAllocatorCacheEPNS_28AsanThreadLocalMallocStorageE>
 804cad8:	89 c5                	mov    %eax,%ebp
 804cada:	89 c7                	mov    %eax,%edi
 804cadc:	8d 83 a0 b9 00 00    	lea    0xb9a0(%ebx),%eax
 804cae2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804cae6:	eb 14                	jmp    804cafc <_ZN6__asan28AsanThreadLocalMallocStorage10CommitBackEv+0x6c>
 804cae8:	8b 44 24 0c          	mov    0xc(%esp),%eax
 804caec:	89 74 24 08          	mov    %esi,0x8(%esp)
 804caf0:	89 2c 24             	mov    %ebp,(%esp)
 804caf3:	89 44 24 04          	mov    %eax,0x4(%esp)
 804caf7:	e8 c4 2f 00 00       	call   804fac0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m>
 804cafc:	8b 07                	mov    (%edi),%eax
 804cafe:	85 c0                	test   %eax,%eax
 804cb00:	75 e6                	jne    804cae8 <_ZN6__asan28AsanThreadLocalMallocStorage10CommitBackEv+0x58>
 804cb02:	83 c6 01             	add    $0x1,%esi
 804cb05:	81 c7 08 02 00 00    	add    $0x208,%edi
 804cb0b:	83 fe 59             	cmp    $0x59,%esi
 804cb0e:	75 ec                	jne    804cafc <_ZN6__asan28AsanThreadLocalMallocStorage10CommitBackEv+0x6c>
 804cb10:	83 c4 1c             	add    $0x1c,%esp
 804cb13:	5b                   	pop    %ebx
 804cb14:	5e                   	pop    %esi
 804cb15:	5f                   	pop    %edi
 804cb16:	5d                   	pop    %ebp
 804cb17:	c3                   	ret    
 804cb18:	90                   	nop
 804cb19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0804cb20 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>:
 804cb20:	55                   	push   %ebp
 804cb21:	57                   	push   %edi
 804cb22:	56                   	push   %esi
 804cb23:	53                   	push   %ebx
 804cb24:	83 ec 4c             	sub    $0x4c,%esp
 804cb27:	e8 c4 cf ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804cb2c:	81 c3 d4 34 06 00    	add    $0x634d4,%ebx
 804cb32:	85 c0                	test   %eax,%eax
 804cb34:	89 44 24 20          	mov    %eax,0x20(%esp)
 804cb38:	0f 84 a6 01 00 00    	je     804cce4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1c4>
 804cb3e:	8b 8b dc ff ff ff    	mov    -0x24(%ebx),%ecx
 804cb44:	89 d6                	mov    %edx,%esi
 804cb46:	85 c9                	test   %ecx,%ecx
 804cb48:	74 08                	je     804cb52 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x32>
 804cb4a:	89 04 24             	mov    %eax,(%esp)
 804cb4d:	e8 9e cc ff ff       	call   80497f0 <__asan_free_hook@plt>
 804cb52:	8b 44 24 20          	mov    0x20(%esp),%eax
 804cb56:	8d 68 f0             	lea    -0x10(%eax),%ebp
 804cb59:	b8 03 00 00 00       	mov    $0x3,%eax
 804cb5e:	86 45 00             	xchg   %al,0x0(%ebp)
 804cb61:	3c 03                	cmp    $0x3,%al
 804cb63:	0f 84 43 0d 00 00    	je     804d8ac <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd8c>
 804cb69:	3c 02                	cmp    $0x2,%al
 804cb6b:	0f 85 8b 0d 00 00    	jne    804d8fc <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xddc>
 804cb71:	0f b6 45 07          	movzbl 0x7(%ebp),%eax
 804cb75:	d0 e8                	shr    %al
 804cb77:	83 e0 03             	and    $0x3,%eax
 804cb7a:	3b 44 24 60          	cmp    0x60(%esp),%eax
 804cb7e:	74 0f                	je     804cb8f <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x6f>
 804cb80:	e8 9b b9 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804cb85:	80 78 4f 00          	cmpb   $0x0,0x4f(%eax)
 804cb89:	0f 85 79 01 00 00    	jne    804cd08 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1e8>
 804cb8f:	e8 dc cd 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804cb94:	89 04 24             	mov    %eax,(%esp)
 804cb97:	e8 e4 cf 00 00       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 804cb9c:	31 d2                	xor    %edx,%edx
 804cb9e:	85 c0                	test   %eax,%eax
 804cba0:	89 44 24 34          	mov    %eax,0x34(%esp)
 804cba4:	74 0e                	je     804cbb4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x94>
 804cba6:	8b 44 24 34          	mov    0x34(%esp),%eax
 804cbaa:	8b 00                	mov    (%eax),%eax
 804cbac:	8b 10                	mov    (%eax),%edx
 804cbae:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
 804cbb4:	8b 45 04             	mov    0x4(%ebp),%eax
 804cbb7:	25 00 00 00 ff       	and    $0xff000000,%eax
 804cbbc:	09 d0                	or     %edx,%eax
 804cbbe:	89 45 04             	mov    %eax,0x4(%ebp)
 804cbc1:	e8 5a b9 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804cbc6:	80 78 50 00          	cmpb   $0x0,0x50(%eax)
 804cbca:	0f 85 60 01 00 00    	jne    804cd30 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x210>
 804cbd0:	8b 55 08             	mov    0x8(%ebp),%edx
 804cbd3:	31 c0                	xor    %eax,%eax
 804cbd5:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
 804cbdc:	83 fa 07             	cmp    $0x7,%edx
 804cbdf:	0f 87 6b 01 00 00    	ja     804cd50 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x230>
 804cbe5:	89 44 24 08          	mov    %eax,0x8(%esp)
 804cbe9:	8b 44 24 20          	mov    0x20(%esp),%eax
 804cbed:	89 34 24             	mov    %esi,(%esp)
 804cbf0:	83 c0 08             	add    $0x8,%eax
 804cbf3:	89 44 24 04          	mov    %eax,0x4(%esp)
 804cbf7:	e8 04 7f 01 00       	call   8064b00 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm>
 804cbfc:	8b 44 24 20          	mov    0x20(%esp),%eax
 804cc00:	80 78 f0 03          	cmpb   $0x3,-0x10(%eax)
 804cc04:	0f 85 b2 0c 00 00    	jne    804d8bc <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd9c>
 804cc0a:	8b 45 08             	mov    0x8(%ebp),%eax
 804cc0d:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804cc12:	0f 84 e8 02 00 00    	je     804cf00 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x3e0>
 804cc18:	83 c0 07             	add    $0x7,%eax
 804cc1b:	83 e0 f8             	and    $0xfffffff8,%eax
 804cc1e:	89 44 24 04          	mov    %eax,0x4(%esp)
 804cc22:	8b 44 24 20          	mov    0x20(%esp),%eax
 804cc26:	c7 44 24 08 fd 00 00 	movl   $0xfd,0x8(%esp)
 804cc2d:	00 
 804cc2e:	89 04 24             	mov    %eax,(%esp)
 804cc31:	e8 7a fe 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804cc36:	e8 35 cd 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804cc3b:	89 04 24             	mov    %eax,(%esp)
 804cc3e:	e8 0d d1 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804cc43:	83 40 0c 01          	addl   $0x1,0xc(%eax)
 804cc47:	89 c7                	mov    %eax,%edi
 804cc49:	8b 45 08             	mov    0x8(%ebp),%eax
 804cc4c:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804cc51:	0f 84 31 02 00 00    	je     804ce88 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x368>
 804cc57:	01 47 10             	add    %eax,0x10(%edi)
 804cc5a:	8b 44 24 34          	mov    0x34(%esp),%eax
 804cc5e:	85 c0                	test   %eax,%eax
 804cc60:	0f 84 72 01 00 00    	je     804cdd8 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2b8>
 804cc66:	83 e8 80             	sub    $0xffffff80,%eax
 804cc69:	89 04 24             	mov    %eax,(%esp)
 804cc6c:	89 44 24 34          	mov    %eax,0x34(%esp)
 804cc70:	e8 4b db ff ff       	call   804a7c0 <_ZN6__asan17GetAllocatorCacheEPNS_28AsanThreadLocalMallocStorageE>
 804cc75:	8b 7d 08             	mov    0x8(%ebp),%edi
 804cc78:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
 804cc7e:	89 44 24 28          	mov    %eax,0x28(%esp)
 804cc82:	0f 84 e0 00 00 00    	je     804cd68 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x248>
 804cc88:	8b 44 24 34          	mov    0x34(%esp),%eax
 804cc8c:	89 04 24             	mov    %eax,(%esp)
 804cc8f:	e8 4c e4 ff ff       	call   804b0e0 <_ZN6__asan18GetQuarantineCacheEPNS_28AsanThreadLocalMallocStorageE>
 804cc94:	8b 10                	mov    (%eax),%edx
 804cc96:	89 c6                	mov    %eax,%esi
 804cc98:	85 d2                	test   %edx,%edx
 804cc9a:	74 54                	je     804ccf0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1d0>
 804cc9c:	8b 40 08             	mov    0x8(%eax),%eax
 804cc9f:	8b 50 08             	mov    0x8(%eax),%edx
 804cca2:	81 fa 00 04 00 00    	cmp    $0x400,%edx
 804cca8:	74 46                	je     804ccf0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1d0>
 804ccaa:	8d 4a 01             	lea    0x1(%edx),%ecx
 804ccad:	89 48 08             	mov    %ecx,0x8(%eax)
 804ccb0:	89 6c 90 0c          	mov    %ebp,0xc(%eax,%edx,4)
 804ccb4:	01 78 04             	add    %edi,0x4(%eax)
 804ccb7:	8b 46 0c             	mov    0xc(%esi),%eax
 804ccba:	01 c7                	add    %eax,%edi
 804ccbc:	89 7e 0c             	mov    %edi,0xc(%esi)
 804ccbf:	8b 46 0c             	mov    0xc(%esi),%eax
 804ccc2:	3b 83 08 b9 00 00    	cmp    0xb908(%ebx),%eax
 804ccc8:	76 1a                	jbe    804cce4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1c4>
 804ccca:	8b 44 24 28          	mov    0x28(%esp),%eax
 804ccce:	89 74 24 04          	mov    %esi,0x4(%esp)
 804ccd2:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ccd6:	8d 83 c0 b8 00 00    	lea    0xb8c0(%ebx),%eax
 804ccdc:	89 04 24             	mov    %eax,(%esp)
 804ccdf:	e8 9c 30 00 00       	call   804fd80 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_>
 804cce4:	83 c4 4c             	add    $0x4c,%esp
 804cce7:	5b                   	pop    %ebx
 804cce8:	5e                   	pop    %esi
 804cce9:	5f                   	pop    %edi
 804ccea:	5d                   	pop    %ebp
 804cceb:	c3                   	ret    
 804ccec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804ccf0:	8b 44 24 28          	mov    0x28(%esp),%eax
 804ccf4:	89 34 24             	mov    %esi,(%esp)
 804ccf7:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ccfb:	e8 d0 31 00 00       	call   804fed0 <_ZN11__sanitizer15QuarantineCacheIN6__asan18QuarantineCallbackEE10AllocBatchES2_>
 804cd00:	8b 46 08             	mov    0x8(%esi),%eax
 804cd03:	8b 50 08             	mov    0x8(%eax),%edx
 804cd06:	eb a2                	jmp    804ccaa <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x18a>
 804cd08:	8b 44 24 60          	mov    0x60(%esp),%eax
 804cd0c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804cd10:	0f b6 45 07          	movzbl 0x7(%ebp),%eax
 804cd14:	89 74 24 04          	mov    %esi,0x4(%esp)
 804cd18:	d0 e8                	shr    %al
 804cd1a:	83 e0 03             	and    $0x3,%eax
 804cd1d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804cd21:	8b 44 24 20          	mov    0x20(%esp),%eax
 804cd25:	89 04 24             	mov    %eax,(%esp)
 804cd28:	e8 53 23 01 00       	call   805f080 <_ZN6__asan23ReportAllocTypeMismatchEmPN11__sanitizer10StackTraceENS_9AllocTypeES3_>
 804cd2d:	8d 76 00             	lea    0x0(%esi),%esi
 804cd30:	8b 06                	mov    (%esi),%eax
 804cd32:	83 c6 08             	add    $0x8,%esi
 804cd35:	89 34 24             	mov    %esi,(%esp)
 804cd38:	89 44 24 04          	mov    %eax,0x4(%esp)
 804cd3c:	e8 8f 3e 01 00       	call   8060bd0 <_ZN11__sanitizer13StackDepotPutEPKmm>
 804cd41:	89 45 14             	mov    %eax,0x14(%ebp)
 804cd44:	e9 b3 fe ff ff       	jmp    804cbfc <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xdc>
 804cd49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804cd50:	8d 42 07             	lea    0x7(%edx),%eax
 804cd53:	83 e0 f8             	and    $0xfffffff8,%eax
 804cd56:	83 e8 08             	sub    $0x8,%eax
 804cd59:	c1 e8 02             	shr    $0x2,%eax
 804cd5c:	e9 84 fe ff ff       	jmp    804cbe5 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc5>
 804cd61:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804cd68:	0f b6 45 07          	movzbl 0x7(%ebp),%eax
 804cd6c:	a8 01                	test   $0x1,%al
 804cd6e:	0f 85 74 02 00 00    	jne    804cfe8 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4c8>
 804cd74:	c0 e8 03             	shr    $0x3,%al
 804cd77:	83 e0 07             	and    $0x7,%eax
 804cd7a:	e8 41 ce ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804cd7f:	8b 74 24 20          	mov    0x20(%esp),%esi
 804cd83:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804cd89:	29 c6                	sub    %eax,%esi
 804cd8b:	89 f0                	mov    %esi,%eax
 804cd8d:	c1 e8 14             	shr    $0x14,%eax
 804cd90:	0f b6 14 07          	movzbl (%edi,%eax,1),%edx
 804cd94:	84 d2                	test   %dl,%dl
 804cd96:	0f 85 f4 01 00 00    	jne    804cf90 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x470>
 804cd9c:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804cda2:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804cda5:	85 c6                	test   %eax,%esi
 804cda7:	0f 85 df 0b 00 00    	jne    804d98c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe6c>
 804cdad:	31 d2                	xor    %edx,%edx
 804cdaf:	89 f0                	mov    %esi,%eax
 804cdb1:	f7 f1                	div    %ecx
 804cdb3:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804cdba:	00 
 804cdbb:	85 d2                	test   %edx,%edx
 804cdbd:	89 54 24 20          	mov    %edx,0x20(%esp)
 804cdc1:	0f 85 85 0b 00 00    	jne    804d94c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe2c>
 804cdc7:	29 ce                	sub    %ecx,%esi
 804cdc9:	8d 4e 10             	lea    0x10(%esi),%ecx
 804cdcc:	8b 39                	mov    (%ecx),%edi
 804cdce:	e9 b5 fe ff ff       	jmp    804cc88 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x168>
 804cdd3:	90                   	nop
 804cdd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804cdd8:	b8 01 00 00 00       	mov    $0x1,%eax
 804cddd:	86 83 a0 03 00 00    	xchg   %al,0x3a0(%ebx)
 804cde3:	84 c0                	test   %al,%al
 804cde5:	74 0e                	je     804cdf5 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2d5>
 804cde7:	8d 83 a0 03 00 00    	lea    0x3a0(%ebx),%eax
 804cded:	89 04 24             	mov    %eax,(%esp)
 804cdf0:	e8 3b 26 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804cdf5:	8b 75 08             	mov    0x8(%ebp),%esi
 804cdf8:	81 fe 00 00 02 00    	cmp    $0x20000,%esi
 804cdfe:	0f 84 8a 06 00 00    	je     804d48e <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x96e>
 804ce04:	8b 83 b0 b8 00 00    	mov    0xb8b0(%ebx),%eax
 804ce0a:	8d bb c0 03 00 00    	lea    0x3c0(%ebx),%edi
 804ce10:	89 f9                	mov    %edi,%ecx
 804ce12:	85 c0                	test   %eax,%eax
 804ce14:	0f 85 56 01 00 00    	jne    804cf70 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x450>
 804ce1a:	8d 83 b0 b8 00 00    	lea    0xb8b0(%ebx),%eax
 804ce20:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804ce24:	89 04 24             	mov    %eax,(%esp)
 804ce27:	e8 a4 30 00 00       	call   804fed0 <_ZN11__sanitizer15QuarantineCacheIN6__asan18QuarantineCallbackEE10AllocBatchES2_>
 804ce2c:	8b 83 b8 b8 00 00    	mov    0xb8b8(%ebx),%eax
 804ce32:	8b 50 08             	mov    0x8(%eax),%edx
 804ce35:	8d 4a 01             	lea    0x1(%edx),%ecx
 804ce38:	89 48 08             	mov    %ecx,0x8(%eax)
 804ce3b:	89 6c 90 0c          	mov    %ebp,0xc(%eax,%edx,4)
 804ce3f:	01 70 04             	add    %esi,0x4(%eax)
 804ce42:	8b 83 bc b8 00 00    	mov    0xb8bc(%ebx),%eax
 804ce48:	01 c6                	add    %eax,%esi
 804ce4a:	89 b3 bc b8 00 00    	mov    %esi,0xb8bc(%ebx)
 804ce50:	8b 83 bc b8 00 00    	mov    0xb8bc(%ebx),%eax
 804ce56:	3b 83 08 b9 00 00    	cmp    0xb908(%ebx),%eax
 804ce5c:	76 1c                	jbe    804ce7a <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x35a>
 804ce5e:	8d 83 b0 b8 00 00    	lea    0xb8b0(%ebx),%eax
 804ce64:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ce68:	8d 83 c0 b8 00 00    	lea    0xb8c0(%ebx),%eax
 804ce6e:	89 7c 24 08          	mov    %edi,0x8(%esp)
 804ce72:	89 04 24             	mov    %eax,(%esp)
 804ce75:	e8 06 2f 00 00       	call   804fd80 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_>
 804ce7a:	c6 83 a0 03 00 00 00 	movb   $0x0,0x3a0(%ebx)
 804ce81:	e9 5e fe ff ff       	jmp    804cce4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1c4>
 804ce86:	66 90                	xchg   %ax,%ax
 804ce88:	0f b6 45 07          	movzbl 0x7(%ebp),%eax
 804ce8c:	a8 01                	test   $0x1,%al
 804ce8e:	0f 85 94 03 00 00    	jne    804d228 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x708>
 804ce94:	c0 e8 03             	shr    $0x3,%al
 804ce97:	83 e0 07             	and    $0x7,%eax
 804ce9a:	e8 21 cd ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804ce9f:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 804cea3:	8b b3 a0 b9 00 00    	mov    0xb9a0(%ebx),%esi
 804cea9:	29 c1                	sub    %eax,%ecx
 804ceab:	89 c8                	mov    %ecx,%eax
 804cead:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804ceb1:	c1 e8 14             	shr    $0x14,%eax
 804ceb4:	0f b6 04 06          	movzbl (%esi,%eax,1),%eax
 804ceb8:	84 c0                	test   %al,%al
 804ceba:	0f 85 10 03 00 00    	jne    804d1d0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x6b0>
 804cec0:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804cec6:	8b 74 24 28          	mov    0x28(%esp),%esi
 804ceca:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804cecd:	85 c6                	test   %eax,%esi
 804cecf:	0f 85 b7 0a 00 00    	jne    804d98c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe6c>
 804ced5:	31 d2                	xor    %edx,%edx
 804ced7:	89 f0                	mov    %esi,%eax
 804ced9:	f7 f1                	div    %ecx
 804cedb:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804cee2:	00 
 804cee3:	85 d2                	test   %edx,%edx
 804cee5:	89 54 24 38          	mov    %edx,0x38(%esp)
 804cee9:	0f 85 2c 0b 00 00    	jne    804da1b <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xefb>
 804ceef:	8b 44 24 28          	mov    0x28(%esp),%eax
 804cef3:	29 c8                	sub    %ecx,%eax
 804cef5:	8d 48 10             	lea    0x10(%eax),%ecx
 804cef8:	8b 01                	mov    (%ecx),%eax
 804cefa:	e9 58 fd ff ff       	jmp    804cc57 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x137>
 804ceff:	90                   	nop
 804cf00:	0f b6 45 07          	movzbl 0x7(%ebp),%eax
 804cf04:	a8 01                	test   $0x1,%al
 804cf06:	0f 85 0c 02 00 00    	jne    804d118 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x5f8>
 804cf0c:	c0 e8 03             	shr    $0x3,%al
 804cf0f:	83 e0 07             	and    $0x7,%eax
 804cf12:	e8 a9 cc ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804cf17:	8b 74 24 20          	mov    0x20(%esp),%esi
 804cf1b:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804cf21:	29 c6                	sub    %eax,%esi
 804cf23:	89 f0                	mov    %esi,%eax
 804cf25:	c1 e8 14             	shr    $0x14,%eax
 804cf28:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804cf2c:	84 c0                	test   %al,%al
 804cf2e:	0f 85 8c 01 00 00    	jne    804d0c0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x5a0>
 804cf34:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804cf3a:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804cf3d:	85 c6                	test   %eax,%esi
 804cf3f:	0f 85 47 0a 00 00    	jne    804d98c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe6c>
 804cf45:	31 d2                	xor    %edx,%edx
 804cf47:	89 f0                	mov    %esi,%eax
 804cf49:	f7 f1                	div    %ecx
 804cf4b:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804cf52:	00 
 804cf53:	85 d2                	test   %edx,%edx
 804cf55:	89 54 24 28          	mov    %edx,0x28(%esp)
 804cf59:	0f 85 9f 0a 00 00    	jne    804d9fe <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xede>
 804cf5f:	29 ce                	sub    %ecx,%esi
 804cf61:	8d 4e 10             	lea    0x10(%esi),%ecx
 804cf64:	8b 01                	mov    (%ecx),%eax
 804cf66:	e9 ad fc ff ff       	jmp    804cc18 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xf8>
 804cf6b:	90                   	nop
 804cf6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804cf70:	8b 83 b8 b8 00 00    	mov    0xb8b8(%ebx),%eax
 804cf76:	8b 50 08             	mov    0x8(%eax),%edx
 804cf79:	81 fa 00 04 00 00    	cmp    $0x400,%edx
 804cf7f:	0f 85 b0 fe ff ff    	jne    804ce35 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x315>
 804cf85:	e9 90 fe ff ff       	jmp    804ce1a <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2fa>
 804cf8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804cf90:	89 f0                	mov    %esi,%eax
 804cf92:	89 d7                	mov    %edx,%edi
 804cf94:	25 00 00 f0 ff       	and    $0xfff00000,%eax
 804cf99:	c1 e7 04             	shl    $0x4,%edi
 804cf9c:	83 fa 10             	cmp    $0x10,%edx
 804cf9f:	89 44 24 20          	mov    %eax,0x20(%esp)
 804cfa3:	76 1c                	jbe    804cfc1 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4a1>
 804cfa5:	83 ea 10             	sub    $0x10,%edx
 804cfa8:	b8 00 01 00 00       	mov    $0x100,%eax
 804cfad:	89 d1                	mov    %edx,%ecx
 804cfaf:	83 e2 07             	and    $0x7,%edx
 804cfb2:	c1 e9 03             	shr    $0x3,%ecx
 804cfb5:	d3 e0                	shl    %cl,%eax
 804cfb7:	89 c7                	mov    %eax,%edi
 804cfb9:	c1 ef 03             	shr    $0x3,%edi
 804cfbc:	0f af fa             	imul   %edx,%edi
 804cfbf:	01 c7                	add    %eax,%edi
 804cfc1:	8b 54 24 20          	mov    0x20(%esp),%edx
 804cfc5:	89 f0                	mov    %esi,%eax
 804cfc7:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804cfcd:	29 d0                	sub    %edx,%eax
 804cfcf:	31 d2                	xor    %edx,%edx
 804cfd1:	f7 f7                	div    %edi
 804cfd3:	83 c0 01             	add    $0x1,%eax
 804cfd6:	c1 e0 04             	shl    $0x4,%eax
 804cfd9:	29 c1                	sub    %eax,%ecx
 804cfdb:	8b 39                	mov    (%ecx),%edi
 804cfdd:	e9 a6 fc ff ff       	jmp    804cc88 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x168>
 804cfe2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804cfe8:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804cfee:	89 e8                	mov    %ebp,%eax
 804cff0:	c1 e8 14             	shr    $0x14,%eax
 804cff3:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804cff7:	84 c0                	test   %al,%al
 804cff9:	0f 85 a1 03 00 00    	jne    804d3a0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x880>
 804cfff:	b8 01 00 00 00       	mov    $0x1,%eax
 804d004:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804d00a:	84 c0                	test   %al,%al
 804d00c:	74 0e                	je     804d01c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4fc>
 804d00e:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804d014:	89 04 24             	mov    %eax,(%esp)
 804d017:	e8 14 24 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804d01c:	8b b3 a8 b9 02 00    	mov    0x2b9a8(%ebx),%esi
 804d022:	85 f6                	test   %esi,%esi
 804d024:	0f 84 6a 08 00 00    	je     804d894 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd74>
 804d02a:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804d030:	8d 04 b2             	lea    (%edx,%esi,4),%eax
 804d033:	31 f6                	xor    %esi,%esi
 804d035:	89 c1                	mov    %eax,%ecx
 804d037:	90                   	nop
 804d038:	8b 02                	mov    (%edx),%eax
 804d03a:	39 c5                	cmp    %eax,%ebp
 804d03c:	72 13                	jb     804d051 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x531>
 804d03e:	89 ef                	mov    %ebp,%edi
 804d040:	29 c7                	sub    %eax,%edi
 804d042:	89 7c 24 20          	mov    %edi,0x20(%esp)
 804d046:	89 ef                	mov    %ebp,%edi
 804d048:	29 f7                	sub    %esi,%edi
 804d04a:	39 7c 24 20          	cmp    %edi,0x20(%esp)
 804d04e:	0f 42 f0             	cmovb  %eax,%esi
 804d051:	83 c2 04             	add    $0x4,%edx
 804d054:	39 ca                	cmp    %ecx,%edx
 804d056:	75 e0                	jne    804d038 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x518>
 804d058:	85 f6                	test   %esi,%esi
 804d05a:	0f 84 99 04 00 00    	je     804d4f9 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9d9>
 804d060:	8b 06                	mov    (%esi),%eax
 804d062:	31 c9                	xor    %ecx,%ecx
 804d064:	89 f2                	mov    %esi,%edx
 804d066:	83 f9 00             	cmp    $0x0,%ecx
 804d069:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804d070:	00 
 804d071:	89 44 24 20          	mov    %eax,0x20(%esp)
 804d075:	0f 87 6d 02 00 00    	ja     804d2e8 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7c8>
 804d07b:	0f 83 5f 02 00 00    	jae    804d2e0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7c0>
 804d081:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804d085:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804d089:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804d08d:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804d091:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804d095:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804d099:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804d09f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d0a3:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804d0a9:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804d0b0:	00 
 804d0b1:	89 04 24             	mov    %eax,(%esp)
 804d0b4:	e8 f7 52 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d0b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804d0c0:	89 f2                	mov    %esi,%edx
 804d0c2:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804d0c8:	83 f8 10             	cmp    $0x10,%eax
 804d0cb:	0f 86 a9 03 00 00    	jbe    804d47a <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x95a>
 804d0d1:	83 e8 10             	sub    $0x10,%eax
 804d0d4:	89 c1                	mov    %eax,%ecx
 804d0d6:	89 44 24 28          	mov    %eax,0x28(%esp)
 804d0da:	c1 e9 03             	shr    $0x3,%ecx
 804d0dd:	b8 00 01 00 00       	mov    $0x100,%eax
 804d0e2:	d3 e0                	shl    %cl,%eax
 804d0e4:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 804d0e8:	89 c7                	mov    %eax,%edi
 804d0ea:	c1 ef 03             	shr    $0x3,%edi
 804d0ed:	83 e1 07             	and    $0x7,%ecx
 804d0f0:	0f af f9             	imul   %ecx,%edi
 804d0f3:	01 c7                	add    %eax,%edi
 804d0f5:	89 f0                	mov    %esi,%eax
 804d0f7:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804d0fd:	29 d0                	sub    %edx,%eax
 804d0ff:	31 d2                	xor    %edx,%edx
 804d101:	f7 f7                	div    %edi
 804d103:	83 c0 01             	add    $0x1,%eax
 804d106:	c1 e0 04             	shl    $0x4,%eax
 804d109:	29 c1                	sub    %eax,%ecx
 804d10b:	8b 01                	mov    (%ecx),%eax
 804d10d:	e9 06 fb ff ff       	jmp    804cc18 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xf8>
 804d112:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804d118:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804d11e:	89 e8                	mov    %ebp,%eax
 804d120:	c1 e8 14             	shr    $0x14,%eax
 804d123:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804d127:	84 c0                	test   %al,%al
 804d129:	0f 85 b5 02 00 00    	jne    804d3e4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x8c4>
 804d12f:	b8 01 00 00 00       	mov    $0x1,%eax
 804d134:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804d13a:	84 c0                	test   %al,%al
 804d13c:	74 0e                	je     804d14c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x62c>
 804d13e:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804d144:	89 04 24             	mov    %eax,(%esp)
 804d147:	e8 e4 22 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804d14c:	8b b3 a8 b9 02 00    	mov    0x2b9a8(%ebx),%esi
 804d152:	85 f6                	test   %esi,%esi
 804d154:	0f 84 41 07 00 00    	je     804d89b <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd7b>
 804d15a:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804d160:	8d 04 b2             	lea    (%edx,%esi,4),%eax
 804d163:	31 f6                	xor    %esi,%esi
 804d165:	89 c1                	mov    %eax,%ecx
 804d167:	90                   	nop
 804d168:	8b 02                	mov    (%edx),%eax
 804d16a:	39 c5                	cmp    %eax,%ebp
 804d16c:	72 13                	jb     804d181 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x661>
 804d16e:	89 ef                	mov    %ebp,%edi
 804d170:	29 c7                	sub    %eax,%edi
 804d172:	89 7c 24 28          	mov    %edi,0x28(%esp)
 804d176:	89 ef                	mov    %ebp,%edi
 804d178:	29 f7                	sub    %esi,%edi
 804d17a:	39 7c 24 28          	cmp    %edi,0x28(%esp)
 804d17e:	0f 42 f0             	cmovb  %eax,%esi
 804d181:	83 c2 04             	add    $0x4,%edx
 804d184:	39 ca                	cmp    %ecx,%edx
 804d186:	75 e0                	jne    804d168 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x648>
 804d188:	85 f6                	test   %esi,%esi
 804d18a:	0f 84 a5 03 00 00    	je     804d535 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa15>
 804d190:	8b 06                	mov    (%esi),%eax
 804d192:	31 c9                	xor    %ecx,%ecx
 804d194:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804d19b:	00 
 804d19c:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
 804d1a1:	89 74 24 28          	mov    %esi,0x28(%esp)
 804d1a5:	89 c2                	mov    %eax,%edx
 804d1a7:	0f 87 95 01 00 00    	ja     804d342 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x822>
 804d1ad:	0f 83 85 01 00 00    	jae    804d338 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x818>
 804d1b3:	89 54 24 14          	mov    %edx,0x14(%esp)
 804d1b7:	8b 44 24 28          	mov    0x28(%esp),%eax
 804d1bb:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804d1bf:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804d1c3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d1c7:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d1cb:	e9 c9 fe ff ff       	jmp    804d099 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x579>
 804d1d0:	8b 54 24 28          	mov    0x28(%esp),%edx
 804d1d4:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804d1da:	83 f8 10             	cmp    $0x10,%eax
 804d1dd:	0f 86 a1 02 00 00    	jbe    804d484 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x964>
 804d1e3:	83 e8 10             	sub    $0x10,%eax
 804d1e6:	89 c1                	mov    %eax,%ecx
 804d1e8:	89 44 24 38          	mov    %eax,0x38(%esp)
 804d1ec:	c1 e9 03             	shr    $0x3,%ecx
 804d1ef:	b8 00 01 00 00       	mov    $0x100,%eax
 804d1f4:	d3 e0                	shl    %cl,%eax
 804d1f6:	8b 4c 24 38          	mov    0x38(%esp),%ecx
 804d1fa:	89 c6                	mov    %eax,%esi
 804d1fc:	c1 ee 03             	shr    $0x3,%esi
 804d1ff:	83 e1 07             	and    $0x7,%ecx
 804d202:	0f af f1             	imul   %ecx,%esi
 804d205:	01 c6                	add    %eax,%esi
 804d207:	8b 44 24 28          	mov    0x28(%esp),%eax
 804d20b:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804d211:	29 d0                	sub    %edx,%eax
 804d213:	31 d2                	xor    %edx,%edx
 804d215:	f7 f6                	div    %esi
 804d217:	83 c0 01             	add    $0x1,%eax
 804d21a:	c1 e0 04             	shl    $0x4,%eax
 804d21d:	29 c1                	sub    %eax,%ecx
 804d21f:	8b 01                	mov    (%ecx),%eax
 804d221:	e9 31 fa ff ff       	jmp    804cc57 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x137>
 804d226:	66 90                	xchg   %ax,%ax
 804d228:	8b b3 a0 b9 00 00    	mov    0xb9a0(%ebx),%esi
 804d22e:	89 e8                	mov    %ebp,%eax
 804d230:	c1 e8 14             	shr    $0x14,%eax
 804d233:	0f b6 04 06          	movzbl (%esi,%eax,1),%eax
 804d237:	84 c0                	test   %al,%al
 804d239:	0f 85 e9 01 00 00    	jne    804d428 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x908>
 804d23f:	b8 01 00 00 00       	mov    $0x1,%eax
 804d244:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804d24a:	84 c0                	test   %al,%al
 804d24c:	74 0e                	je     804d25c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x73c>
 804d24e:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804d254:	89 04 24             	mov    %eax,(%esp)
 804d257:	e8 d4 21 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804d25c:	8b 8b a8 b9 02 00    	mov    0x2b9a8(%ebx),%ecx
 804d262:	85 c9                	test   %ecx,%ecx
 804d264:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804d268:	0f 84 37 06 00 00    	je     804d8a5 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd85>
 804d26e:	8d 83 a8 b9 00 00    	lea    0xb9a8(%ebx),%eax
 804d274:	31 f6                	xor    %esi,%esi
 804d276:	8d 0c 88             	lea    (%eax,%ecx,4),%ecx
 804d279:	89 7c 24 38          	mov    %edi,0x38(%esp)
 804d27d:	8d 76 00             	lea    0x0(%esi),%esi
 804d280:	8b 10                	mov    (%eax),%edx
 804d282:	39 d5                	cmp    %edx,%ebp
 804d284:	72 13                	jb     804d299 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x779>
 804d286:	89 ef                	mov    %ebp,%edi
 804d288:	29 d7                	sub    %edx,%edi
 804d28a:	89 7c 24 28          	mov    %edi,0x28(%esp)
 804d28e:	89 ef                	mov    %ebp,%edi
 804d290:	29 f7                	sub    %esi,%edi
 804d292:	39 7c 24 28          	cmp    %edi,0x28(%esp)
 804d296:	0f 42 f2             	cmovb  %edx,%esi
 804d299:	83 c0 04             	add    $0x4,%eax
 804d29c:	39 c8                	cmp    %ecx,%eax
 804d29e:	75 e0                	jne    804d280 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x760>
 804d2a0:	85 f6                	test   %esi,%esi
 804d2a2:	8b 7c 24 38          	mov    0x38(%esp),%edi
 804d2a6:	0f 84 6d 02 00 00    	je     804d519 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9f9>
 804d2ac:	8b 06                	mov    (%esi),%eax
 804d2ae:	31 c9                	xor    %ecx,%ecx
 804d2b0:	89 f2                	mov    %esi,%edx
 804d2b2:	83 f9 00             	cmp    $0x0,%ecx
 804d2b5:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804d2bc:	00 
 804d2bd:	89 44 24 28          	mov    %eax,0x28(%esp)
 804d2c1:	0f 87 b1 00 00 00    	ja     804d378 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x858>
 804d2c7:	0f 83 a3 00 00 00    	jae    804d370 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x850>
 804d2cd:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804d2d1:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804d2d5:	e9 af fd ff ff       	jmp    804d089 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x569>
 804d2da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804d2e0:	39 c6                	cmp    %eax,%esi
 804d2e2:	0f 82 99 fd ff ff    	jb     804d081 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x561>
 804d2e8:	03 46 04             	add    0x4(%esi),%eax
 804d2eb:	83 f9 00             	cmp    $0x0,%ecx
 804d2ee:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804d2f5:	00 
 804d2f6:	89 44 24 20          	mov    %eax,0x20(%esp)
 804d2fa:	0f 86 4b 02 00 00    	jbe    804d54b <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa2b>
 804d300:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804d304:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804d308:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804d30c:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804d310:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804d314:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804d318:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804d31e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d322:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804d328:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804d32f:	00 
 804d330:	89 04 24             	mov    %eax,(%esp)
 804d333:	e8 78 50 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d338:	39 44 24 28          	cmp    %eax,0x28(%esp)
 804d33c:	0f 82 71 fe ff ff    	jb     804d1b3 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x693>
 804d342:	03 46 04             	add    0x4(%esi),%eax
 804d345:	31 c9                	xor    %ecx,%ecx
 804d347:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
 804d34c:	89 c2                	mov    %eax,%edx
 804d34e:	0f 86 90 03 00 00    	jbe    804d6e4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbc4>
 804d354:	89 54 24 14          	mov    %edx,0x14(%esp)
 804d358:	8b 44 24 28          	mov    0x28(%esp),%eax
 804d35c:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804d360:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804d364:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d368:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d36c:	eb aa                	jmp    804d318 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7f8>
 804d36e:	66 90                	xchg   %ax,%ax
 804d370:	39 c6                	cmp    %eax,%esi
 804d372:	0f 82 55 ff ff ff    	jb     804d2cd <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7ad>
 804d378:	03 46 04             	add    0x4(%esi),%eax
 804d37b:	83 f9 00             	cmp    $0x0,%ecx
 804d37e:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804d385:	00 
 804d386:	89 44 24 28          	mov    %eax,0x28(%esp)
 804d38a:	0f 86 88 03 00 00    	jbe    804d718 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbf8>
 804d390:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804d394:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804d398:	e9 6b ff ff ff       	jmp    804d308 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7e8>
 804d39d:	8d 76 00             	lea    0x0(%esi),%esi
 804d3a0:	89 ee                	mov    %ebp,%esi
 804d3a2:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
 804d3a8:	83 f8 10             	cmp    $0x10,%eax
 804d3ab:	0f 86 5e 01 00 00    	jbe    804d50f <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9ef>
 804d3b1:	83 e8 10             	sub    $0x10,%eax
 804d3b4:	ba 00 01 00 00       	mov    $0x100,%edx
 804d3b9:	89 c1                	mov    %eax,%ecx
 804d3bb:	83 e0 07             	and    $0x7,%eax
 804d3be:	c1 e9 03             	shr    $0x3,%ecx
 804d3c1:	d3 e2                	shl    %cl,%edx
 804d3c3:	89 d1                	mov    %edx,%ecx
 804d3c5:	c1 e9 03             	shr    $0x3,%ecx
 804d3c8:	0f af c8             	imul   %eax,%ecx
 804d3cb:	01 d1                	add    %edx,%ecx
 804d3cd:	89 e8                	mov    %ebp,%eax
 804d3cf:	31 d2                	xor    %edx,%edx
 804d3d1:	29 f0                	sub    %esi,%eax
 804d3d3:	f7 f1                	div    %ecx
 804d3d5:	0f af c1             	imul   %ecx,%eax
 804d3d8:	01 c6                	add    %eax,%esi
 804d3da:	89 f0                	mov    %esi,%eax
 804d3dc:	c1 e8 14             	shr    $0x14,%eax
 804d3df:	e9 ac f9 ff ff       	jmp    804cd90 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x270>
 804d3e4:	89 ee                	mov    %ebp,%esi
 804d3e6:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
 804d3ec:	83 f8 10             	cmp    $0x10,%eax
 804d3ef:	0f 86 db 02 00 00    	jbe    804d6d0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbb0>
 804d3f5:	8d 50 f0             	lea    -0x10(%eax),%edx
 804d3f8:	b8 00 01 00 00       	mov    $0x100,%eax
 804d3fd:	89 d1                	mov    %edx,%ecx
 804d3ff:	83 e2 07             	and    $0x7,%edx
 804d402:	c1 e9 03             	shr    $0x3,%ecx
 804d405:	d3 e0                	shl    %cl,%eax
 804d407:	89 c1                	mov    %eax,%ecx
 804d409:	c1 e9 03             	shr    $0x3,%ecx
 804d40c:	0f af ca             	imul   %edx,%ecx
 804d40f:	01 c1                	add    %eax,%ecx
 804d411:	89 e8                	mov    %ebp,%eax
 804d413:	31 d2                	xor    %edx,%edx
 804d415:	29 f0                	sub    %esi,%eax
 804d417:	f7 f1                	div    %ecx
 804d419:	0f af c1             	imul   %ecx,%eax
 804d41c:	01 c6                	add    %eax,%esi
 804d41e:	89 f0                	mov    %esi,%eax
 804d420:	c1 e8 14             	shr    $0x14,%eax
 804d423:	e9 00 fb ff ff       	jmp    804cf28 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x408>
 804d428:	89 e9                	mov    %ebp,%ecx
 804d42a:	81 e1 00 00 f0 ff    	and    $0xfff00000,%ecx
 804d430:	83 f8 10             	cmp    $0x10,%eax
 804d433:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804d437:	0f 86 9d 02 00 00    	jbe    804d6da <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbba>
 804d43d:	8d 50 f0             	lea    -0x10(%eax),%edx
 804d440:	b8 00 01 00 00       	mov    $0x100,%eax
 804d445:	89 d1                	mov    %edx,%ecx
 804d447:	83 e2 07             	and    $0x7,%edx
 804d44a:	c1 e9 03             	shr    $0x3,%ecx
 804d44d:	d3 e0                	shl    %cl,%eax
 804d44f:	89 c1                	mov    %eax,%ecx
 804d451:	c1 e9 03             	shr    $0x3,%ecx
 804d454:	0f af ca             	imul   %edx,%ecx
 804d457:	01 c1                	add    %eax,%ecx
 804d459:	89 e8                	mov    %ebp,%eax
 804d45b:	31 d2                	xor    %edx,%edx
 804d45d:	2b 44 24 28          	sub    0x28(%esp),%eax
 804d461:	f7 f1                	div    %ecx
 804d463:	8b 54 24 28          	mov    0x28(%esp),%edx
 804d467:	0f af c1             	imul   %ecx,%eax
 804d46a:	01 c2                	add    %eax,%edx
 804d46c:	89 d0                	mov    %edx,%eax
 804d46e:	c1 e8 14             	shr    $0x14,%eax
 804d471:	89 54 24 28          	mov    %edx,0x28(%esp)
 804d475:	e9 3a fa ff ff       	jmp    804ceb4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x394>
 804d47a:	c1 e0 04             	shl    $0x4,%eax
 804d47d:	89 c7                	mov    %eax,%edi
 804d47f:	e9 71 fc ff ff       	jmp    804d0f5 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x5d5>
 804d484:	c1 e0 04             	shl    $0x4,%eax
 804d487:	89 c6                	mov    %eax,%esi
 804d489:	e9 79 fd ff ff       	jmp    804d207 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x6e7>
 804d48e:	0f b6 45 07          	movzbl 0x7(%ebp),%eax
 804d492:	a8 01                	test   $0x1,%al
 804d494:	0f 85 88 01 00 00    	jne    804d622 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb02>
 804d49a:	c0 e8 03             	shr    $0x3,%al
 804d49d:	83 e0 07             	and    $0x7,%eax
 804d4a0:	e8 1b c7 ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804d4a5:	8b 74 24 20          	mov    0x20(%esp),%esi
 804d4a9:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804d4af:	29 c6                	sub    %eax,%esi
 804d4b1:	89 f0                	mov    %esi,%eax
 804d4b3:	c1 e8 14             	shr    $0x14,%eax
 804d4b6:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804d4ba:	84 c0                	test   %al,%al
 804d4bc:	0f 85 16 01 00 00    	jne    804d5d8 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xab8>
 804d4c2:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804d4c8:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804d4cb:	85 c6                	test   %eax,%esi
 804d4cd:	0f 85 b9 04 00 00    	jne    804d98c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe6c>
 804d4d3:	31 d2                	xor    %edx,%edx
 804d4d5:	89 f0                	mov    %esi,%eax
 804d4d7:	f7 f1                	div    %ecx
 804d4d9:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804d4e0:	00 
 804d4e1:	85 d2                	test   %edx,%edx
 804d4e3:	89 54 24 20          	mov    %edx,0x20(%esp)
 804d4e7:	0f 85 5f 04 00 00    	jne    804d94c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe2c>
 804d4ed:	29 ce                	sub    %ecx,%esi
 804d4ef:	8d 4e 10             	lea    0x10(%esi),%ecx
 804d4f2:	8b 31                	mov    (%ecx),%esi
 804d4f4:	e9 0b f9 ff ff       	jmp    804ce04 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2e4>
 804d4f9:	31 c0                	xor    %eax,%eax
 804d4fb:	31 f6                	xor    %esi,%esi
 804d4fd:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804d504:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804d50a:	e9 81 f8 ff ff       	jmp    804cd90 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x270>
 804d50f:	c1 e0 04             	shl    $0x4,%eax
 804d512:	89 c1                	mov    %eax,%ecx
 804d514:	e9 b4 fe ff ff       	jmp    804d3cd <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x8ad>
 804d519:	31 c0                	xor    %eax,%eax
 804d51b:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 804d522:	00 
 804d523:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804d52a:	8b b3 a0 b9 00 00    	mov    0xb9a0(%ebx),%esi
 804d530:	e9 7f f9 ff ff       	jmp    804ceb4 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x394>
 804d535:	31 c0                	xor    %eax,%eax
 804d537:	31 f6                	xor    %esi,%esi
 804d539:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804d540:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804d546:	e9 dd f9 ff ff       	jmp    804cf28 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x408>
 804d54b:	39 c2                	cmp    %eax,%edx
 804d54d:	0f 83 ad fd ff ff    	jae    804d300 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7e0>
 804d553:	83 f9 00             	cmp    $0x0,%ecx
 804d556:	89 6c 24 20          	mov    %ebp,0x20(%esp)
 804d55a:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804d561:	00 
 804d562:	76 3c                	jbe    804d5a0 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa80>
 804d564:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804d568:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804d56c:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804d570:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804d574:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804d578:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804d57c:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804d582:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d586:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804d58c:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804d593:	00 
 804d594:	89 04 24             	mov    %eax,(%esp)
 804d597:	e8 14 4e 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d59c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804d5a0:	39 ea                	cmp    %ebp,%edx
 804d5a2:	77 c0                	ja     804d564 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa44>
 804d5a4:	39 c5                	cmp    %eax,%ebp
 804d5a6:	0f 87 4d ff ff ff    	ja     804d4f9 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9d9>
 804d5ac:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804d5b2:	31 d2                	xor    %edx,%edx
 804d5b4:	89 f0                	mov    %esi,%eax
 804d5b6:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804d5bd:	00 
 804d5be:	f7 f1                	div    %ecx
 804d5c0:	85 d2                	test   %edx,%edx
 804d5c2:	89 54 24 20          	mov    %edx,0x20(%esp)
 804d5c6:	0f 85 00 04 00 00    	jne    804d9cc <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xeac>
 804d5cc:	01 ce                	add    %ecx,%esi
 804d5ce:	89 f0                	mov    %esi,%eax
 804d5d0:	c1 e8 14             	shr    $0x14,%eax
 804d5d3:	e9 25 ff ff ff       	jmp    804d4fd <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9dd>
 804d5d8:	89 f2                	mov    %esi,%edx
 804d5da:	81 e2 00 00 f0 ff    	and    $0xfff00000,%edx
 804d5e0:	83 f8 10             	cmp    $0x10,%eax
 804d5e3:	0f 86 3a 02 00 00    	jbe    804d823 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd03>
 804d5e9:	83 e8 10             	sub    $0x10,%eax
 804d5ec:	bf 00 01 00 00       	mov    $0x100,%edi
 804d5f1:	89 c1                	mov    %eax,%ecx
 804d5f3:	83 e0 07             	and    $0x7,%eax
 804d5f6:	c1 e9 03             	shr    $0x3,%ecx
 804d5f9:	d3 e7                	shl    %cl,%edi
 804d5fb:	89 f9                	mov    %edi,%ecx
 804d5fd:	c1 e9 03             	shr    $0x3,%ecx
 804d600:	0f af c8             	imul   %eax,%ecx
 804d603:	01 cf                	add    %ecx,%edi
 804d605:	89 f0                	mov    %esi,%eax
 804d607:	8d 8a 00 00 10 00    	lea    0x100000(%edx),%ecx
 804d60d:	29 d0                	sub    %edx,%eax
 804d60f:	31 d2                	xor    %edx,%edx
 804d611:	f7 f7                	div    %edi
 804d613:	83 c0 01             	add    $0x1,%eax
 804d616:	c1 e0 04             	shl    $0x4,%eax
 804d619:	29 c1                	sub    %eax,%ecx
 804d61b:	8b 31                	mov    (%ecx),%esi
 804d61d:	e9 e2 f7 ff ff       	jmp    804ce04 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2e4>
 804d622:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804d628:	89 e8                	mov    %ebp,%eax
 804d62a:	c1 e8 14             	shr    $0x14,%eax
 804d62d:	0f b6 04 07          	movzbl (%edi,%eax,1),%eax
 804d631:	84 c0                	test   %al,%al
 804d633:	0f 85 af 01 00 00    	jne    804d7e8 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xcc8>
 804d639:	b8 01 00 00 00       	mov    $0x1,%eax
 804d63e:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804d644:	84 c0                	test   %al,%al
 804d646:	74 0e                	je     804d656 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb36>
 804d648:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804d64e:	89 04 24             	mov    %eax,(%esp)
 804d651:	e8 da 1d 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804d656:	8b 93 a8 b9 02 00    	mov    0x2b9a8(%ebx),%edx
 804d65c:	85 d2                	test   %edx,%edx
 804d65e:	0f 84 c9 01 00 00    	je     804d82d <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd0d>
 804d664:	8d 83 a8 b9 00 00    	lea    0xb9a8(%ebx),%eax
 804d66a:	31 c9                	xor    %ecx,%ecx
 804d66c:	8d 34 90             	lea    (%eax,%edx,4),%esi
 804d66f:	90                   	nop
 804d670:	8b 10                	mov    (%eax),%edx
 804d672:	39 d5                	cmp    %edx,%ebp
 804d674:	72 13                	jb     804d689 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb69>
 804d676:	89 ef                	mov    %ebp,%edi
 804d678:	29 d7                	sub    %edx,%edi
 804d67a:	89 7c 24 20          	mov    %edi,0x20(%esp)
 804d67e:	89 ef                	mov    %ebp,%edi
 804d680:	29 cf                	sub    %ecx,%edi
 804d682:	39 7c 24 20          	cmp    %edi,0x20(%esp)
 804d686:	0f 42 ca             	cmovb  %edx,%ecx
 804d689:	83 c0 04             	add    $0x4,%eax
 804d68c:	39 f0                	cmp    %esi,%eax
 804d68e:	75 e0                	jne    804d670 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb50>
 804d690:	85 c9                	test   %ecx,%ecx
 804d692:	0f 84 95 01 00 00    	je     804d82d <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd0d>
 804d698:	8b 39                	mov    (%ecx),%edi
 804d69a:	31 d2                	xor    %edx,%edx
 804d69c:	89 c8                	mov    %ecx,%eax
 804d69e:	89 7c 24 20          	mov    %edi,0x20(%esp)
 804d6a2:	89 fe                	mov    %edi,%esi
 804d6a4:	31 ff                	xor    %edi,%edi
 804d6a6:	83 fa 00             	cmp    $0x0,%edx
 804d6a9:	0f 87 10 01 00 00    	ja     804d7bf <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc9f>
 804d6af:	0f 83 00 01 00 00    	jae    804d7b5 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc95>
 804d6b5:	89 74 24 14          	mov    %esi,0x14(%esp)
 804d6b9:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804d6bd:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d6c1:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d6c5:	e9 cf f9 ff ff       	jmp    804d099 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x579>
 804d6ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804d6d0:	c1 e0 04             	shl    $0x4,%eax
 804d6d3:	89 c1                	mov    %eax,%ecx
 804d6d5:	e9 37 fd ff ff       	jmp    804d411 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x8f1>
 804d6da:	c1 e0 04             	shl    $0x4,%eax
 804d6dd:	89 c1                	mov    %eax,%ecx
 804d6df:	e9 75 fd ff ff       	jmp    804d459 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x939>
 804d6e4:	39 44 24 28          	cmp    %eax,0x28(%esp)
 804d6e8:	0f 83 66 fc ff ff    	jae    804d354 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x834>
 804d6ee:	31 c9                	xor    %ecx,%ecx
 804d6f0:	89 ea                	mov    %ebp,%edx
 804d6f2:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
 804d6f7:	76 47                	jbe    804d740 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc20>
 804d6f9:	89 54 24 14          	mov    %edx,0x14(%esp)
 804d6fd:	8b 44 24 28          	mov    0x28(%esp),%eax
 804d701:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804d705:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804d709:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d70d:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d711:	e9 66 fe ff ff       	jmp    804d57c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa5c>
 804d716:	66 90                	xchg   %ax,%ax
 804d718:	39 c2                	cmp    %eax,%edx
 804d71a:	0f 83 70 fc ff ff    	jae    804d390 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x870>
 804d720:	83 f9 00             	cmp    $0x0,%ecx
 804d723:	89 6c 24 28          	mov    %ebp,0x28(%esp)
 804d727:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804d72e:	00 
 804d72f:	76 49                	jbe    804d77a <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc5a>
 804d731:	8b 7c 24 28          	mov    0x28(%esp),%edi
 804d735:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 804d739:	e9 2e fe ff ff       	jmp    804d56c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa4c>
 804d73e:	66 90                	xchg   %ax,%ax
 804d740:	39 6c 24 28          	cmp    %ebp,0x28(%esp)
 804d744:	77 b3                	ja     804d6f9 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbd9>
 804d746:	39 c5                	cmp    %eax,%ebp
 804d748:	0f 87 e7 fd ff ff    	ja     804d535 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa15>
 804d74e:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804d754:	31 d2                	xor    %edx,%edx
 804d756:	89 f0                	mov    %esi,%eax
 804d758:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804d75f:	00 
 804d760:	f7 f1                	div    %ecx
 804d762:	85 d2                	test   %edx,%edx
 804d764:	89 54 24 28          	mov    %edx,0x28(%esp)
 804d768:	0f 85 9e 01 00 00    	jne    804d90c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xdec>
 804d76e:	01 ce                	add    %ecx,%esi
 804d770:	89 f0                	mov    %esi,%eax
 804d772:	c1 e8 14             	shr    $0x14,%eax
 804d775:	e9 bf fd ff ff       	jmp    804d539 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa19>
 804d77a:	39 ea                	cmp    %ebp,%edx
 804d77c:	77 b3                	ja     804d731 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc11>
 804d77e:	39 c5                	cmp    %eax,%ebp
 804d780:	0f 87 93 fd ff ff    	ja     804d519 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9f9>
 804d786:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804d78c:	31 d2                	xor    %edx,%edx
 804d78e:	89 f0                	mov    %esi,%eax
 804d790:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804d797:	00 
 804d798:	f7 f1                	div    %ecx
 804d79a:	85 d2                	test   %edx,%edx
 804d79c:	89 54 24 28          	mov    %edx,0x28(%esp)
 804d7a0:	0f 85 66 01 00 00    	jne    804d90c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xdec>
 804d7a6:	8d 04 0e             	lea    (%esi,%ecx,1),%eax
 804d7a9:	89 44 24 28          	mov    %eax,0x28(%esp)
 804d7ad:	c1 e8 14             	shr    $0x14,%eax
 804d7b0:	e9 6e fd ff ff       	jmp    804d523 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa03>
 804d7b5:	3b 4c 24 20          	cmp    0x20(%esp),%ecx
 804d7b9:	0f 82 f6 fe ff ff    	jb     804d6b5 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb95>
 804d7bf:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804d7c3:	03 79 04             	add    0x4(%ecx),%edi
 804d7c6:	89 7c 24 20          	mov    %edi,0x20(%esp)
 804d7ca:	89 fe                	mov    %edi,%esi
 804d7cc:	31 ff                	xor    %edi,%edi
 804d7ce:	83 fa 00             	cmp    $0x0,%edx
 804d7d1:	76 6e                	jbe    804d841 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd21>
 804d7d3:	89 74 24 14          	mov    %esi,0x14(%esp)
 804d7d7:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804d7db:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d7df:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d7e3:	e9 30 fb ff ff       	jmp    804d318 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7f8>
 804d7e8:	89 ee                	mov    %ebp,%esi
 804d7ea:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
 804d7f0:	83 f8 10             	cmp    $0x10,%eax
 804d7f3:	76 70                	jbe    804d865 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd45>
 804d7f5:	8d 50 f0             	lea    -0x10(%eax),%edx
 804d7f8:	b8 00 01 00 00       	mov    $0x100,%eax
 804d7fd:	89 d1                	mov    %edx,%ecx
 804d7ff:	83 e2 07             	and    $0x7,%edx
 804d802:	c1 e9 03             	shr    $0x3,%ecx
 804d805:	d3 e0                	shl    %cl,%eax
 804d807:	89 c1                	mov    %eax,%ecx
 804d809:	c1 e9 03             	shr    $0x3,%ecx
 804d80c:	0f af ca             	imul   %edx,%ecx
 804d80f:	01 c1                	add    %eax,%ecx
 804d811:	89 e8                	mov    %ebp,%eax
 804d813:	31 d2                	xor    %edx,%edx
 804d815:	29 f0                	sub    %esi,%eax
 804d817:	f7 f1                	div    %ecx
 804d819:	0f af c1             	imul   %ecx,%eax
 804d81c:	01 c6                	add    %eax,%esi
 804d81e:	e9 8e fc ff ff       	jmp    804d4b1 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x991>
 804d823:	c1 e0 04             	shl    $0x4,%eax
 804d826:	89 c7                	mov    %eax,%edi
 804d828:	e9 d8 fd ff ff       	jmp    804d605 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xae5>
 804d82d:	31 f6                	xor    %esi,%esi
 804d82f:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804d836:	8b bb a0 b9 00 00    	mov    0xb9a0(%ebx),%edi
 804d83c:	e9 70 fc ff ff       	jmp    804d4b1 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x991>
 804d841:	3b 44 24 20          	cmp    0x20(%esp),%eax
 804d845:	73 8c                	jae    804d7d3 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xcb3>
 804d847:	31 ff                	xor    %edi,%edi
 804d849:	83 fa 00             	cmp    $0x0,%edx
 804d84c:	89 ee                	mov    %ebp,%esi
 804d84e:	76 1c                	jbe    804d86c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd4c>
 804d850:	89 74 24 14          	mov    %esi,0x14(%esp)
 804d854:	89 7c 24 18          	mov    %edi,0x18(%esp)
 804d858:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d85c:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d860:	e9 17 fd ff ff       	jmp    804d57c <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa5c>
 804d865:	c1 e0 04             	shl    $0x4,%eax
 804d868:	89 c1                	mov    %eax,%ecx
 804d86a:	eb a5                	jmp    804d811 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xcf1>
 804d86c:	39 e8                	cmp    %ebp,%eax
 804d86e:	77 e0                	ja     804d850 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd30>
 804d870:	3b 6c 24 20          	cmp    0x20(%esp),%ebp
 804d874:	77 b7                	ja     804d82d <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd0d>
 804d876:	8b b3 a4 b9 00 00    	mov    0xb9a4(%ebx),%esi
 804d87c:	31 d2                	xor    %edx,%edx
 804d87e:	89 c8                	mov    %ecx,%eax
 804d880:	f7 f6                	div    %esi
 804d882:	89 d7                	mov    %edx,%edi
 804d884:	89 d0                	mov    %edx,%eax
 804d886:	31 d2                	xor    %edx,%edx
 804d888:	85 ff                	test   %edi,%edi
 804d88a:	0f 85 59 01 00 00    	jne    804d9e9 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xec9>
 804d890:	01 ce                	add    %ecx,%esi
 804d892:	eb 9b                	jmp    804d82f <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd0f>
 804d894:	31 c0                	xor    %eax,%eax
 804d896:	e9 62 fc ff ff       	jmp    804d4fd <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9dd>
 804d89b:	31 c0                	xor    %eax,%eax
 804d89d:	8d 76 00             	lea    0x0(%esi),%esi
 804d8a0:	e9 94 fc ff ff       	jmp    804d539 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa19>
 804d8a5:	31 c0                	xor    %eax,%eax
 804d8a7:	e9 77 fc ff ff       	jmp    804d523 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa03>
 804d8ac:	8b 44 24 20          	mov    0x20(%esp),%eax
 804d8b0:	89 74 24 04          	mov    %esi,0x4(%esp)
 804d8b4:	89 04 24             	mov    %eax,(%esp)
 804d8b7:	e8 04 16 01 00       	call   805eec0 <_ZN6__asan16ReportDoubleFreeEmPN11__sanitizer10StackTraceE>
 804d8bc:	8d 83 f0 31 fd ff    	lea    -0x2ce10(%ebx),%eax
 804d8c2:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d8c6:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804d8cc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804d8d3:	00 
 804d8d4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804d8db:	00 
 804d8dc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804d8e3:	00 
 804d8e4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804d8eb:	00 
 804d8ec:	c7 44 24 04 bf 01 00 	movl   $0x1bf,0x4(%esp)
 804d8f3:	00 
 804d8f4:	89 04 24             	mov    %eax,(%esp)
 804d8f7:	e8 b4 4a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d8fc:	8b 44 24 20          	mov    0x20(%esp),%eax
 804d900:	89 74 24 04          	mov    %esi,0x4(%esp)
 804d904:	89 04 24             	mov    %eax,(%esp)
 804d907:	e8 94 16 01 00       	call   805efa0 <_ZN6__asan21ReportFreeNotMallocedEmPN11__sanitizer10StackTraceE>
 804d90c:	8b 44 24 28          	mov    0x28(%esp),%eax
 804d910:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804d914:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804d91b:	00 
 804d91c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804d923:	00 
 804d924:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d928:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804d92e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d932:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804d938:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d93c:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804d943:	00 
 804d944:	89 04 24             	mov    %eax,(%esp)
 804d947:	e8 64 4a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d94c:	8b 44 24 20          	mov    0x20(%esp),%eax
 804d950:	8b 54 24 24          	mov    0x24(%esp),%edx
 804d954:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804d95b:	00 
 804d95c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804d963:	00 
 804d964:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804d968:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804d96e:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d972:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804d978:	89 54 24 10          	mov    %edx,0x10(%esp)
 804d97c:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804d983:	00 
 804d984:	89 04 24             	mov    %eax,(%esp)
 804d987:	e8 24 4a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d98c:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804d992:	89 44 24 08          	mov    %eax,0x8(%esp)
 804d996:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804d99c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804d9a3:	00 
 804d9a4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804d9ab:	00 
 804d9ac:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804d9b3:	00 
 804d9b4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804d9bb:	00 
 804d9bc:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804d9c3:	00 
 804d9c4:	89 04 24             	mov    %eax,(%esp)
 804d9c7:	e8 e4 49 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804d9cc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804d9d3:	00 
 804d9d4:	8b 44 24 20          	mov    0x20(%esp),%eax
 804d9d8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804d9df:	00 
 804d9e0:	8b 54 24 24          	mov    0x24(%esp),%edx
 804d9e4:	e9 3b ff ff ff       	jmp    804d924 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe04>
 804d9e9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804d9f0:	00 
 804d9f1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804d9f8:	00 
 804d9f9:	e9 26 ff ff ff       	jmp    804d924 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe04>
 804d9fe:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804da05:	00 
 804da06:	8b 44 24 28          	mov    0x28(%esp),%eax
 804da0a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804da11:	00 
 804da12:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804da16:	e9 49 ff ff ff       	jmp    804d964 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe44>
 804da1b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804da22:	00 
 804da23:	8b 44 24 38          	mov    0x38(%esp),%eax
 804da27:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804da2e:	00 
 804da2f:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804da33:	e9 2c ff ff ff       	jmp    804d964 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe44>
 804da38:	90                   	nop
 804da39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>:
 804da40:	8b 54 24 0c          	mov    0xc(%esp),%edx
 804da44:	8b 44 24 04          	mov    0x4(%esp),%eax
 804da48:	89 54 24 04          	mov    %edx,0x4(%esp)
 804da4c:	8b 54 24 08          	mov    0x8(%esp),%edx
 804da50:	e9 cb f0 ff ff       	jmp    804cb20 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804da55:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804da59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>:
 804da60:	55                   	push   %ebp
 804da61:	57                   	push   %edi
 804da62:	56                   	push   %esi
 804da63:	89 d6                	mov    %edx,%esi
 804da65:	53                   	push   %ebx
 804da66:	e8 85 c0 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804da6b:	81 c3 95 25 06 00    	add    $0x62595,%ebx
 804da71:	83 ec 6c             	sub    $0x6c,%esp
 804da74:	89 44 24 24          	mov    %eax,0x24(%esp)
 804da78:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 804da7e:	8b 08                	mov    (%eax),%ecx
 804da80:	85 c9                	test   %ecx,%ecx
 804da82:	0f 84 50 08 00 00    	je     804e2d8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x878>
 804da88:	8b 94 24 80 00 00 00 	mov    0x80(%esp),%edx
 804da8f:	85 d2                	test   %edx,%edx
 804da91:	0f 84 e8 0e 00 00    	je     804e97f <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xf1f>
 804da97:	83 fe 07             	cmp    $0x7,%esi
 804da9a:	0f 86 78 01 00 00    	jbe    804dc18 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1b8>
 804daa0:	8d 46 ff             	lea    -0x1(%esi),%eax
 804daa3:	89 c2                	mov    %eax,%edx
 804daa5:	89 44 24 30          	mov    %eax,0x30(%esp)
 804daa9:	21 f2                	and    %esi,%edx
 804daab:	8b 7c 24 24          	mov    0x24(%esp),%edi
 804daaf:	b8 01 00 00 00       	mov    $0x1,%eax
 804dab4:	85 ff                	test   %edi,%edi
 804dab6:	0f 45 c7             	cmovne %edi,%eax
 804dab9:	85 d2                	test   %edx,%edx
 804dabb:	89 44 24 24          	mov    %eax,0x24(%esp)
 804dabf:	0f 85 fa 0e 00 00    	jne    804e9bf <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xf5f>
 804dac5:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 804dac9:	89 f7                	mov    %esi,%edi
 804dacb:	f7 df                	neg    %edi
 804dacd:	89 e8                	mov    %ebp,%eax
 804dacf:	e8 3c c2 ff ff       	call   8049d10 <_ZN6__asanL12ComputeRZLogEm>
 804dad4:	89 44 24 40          	mov    %eax,0x40(%esp)
 804dad8:	e8 e3 c0 ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804dadd:	ba 08 00 00 00       	mov    $0x8,%edx
 804dae2:	89 7c 24 54          	mov    %edi,0x54(%esp)
 804dae6:	89 c1                	mov    %eax,%ecx
 804dae8:	89 44 24 48          	mov    %eax,0x48(%esp)
 804daec:	8b 44 24 30          	mov    0x30(%esp),%eax
 804daf0:	01 e8                	add    %ebp,%eax
 804daf2:	21 f8                	and    %edi,%eax
 804daf4:	83 f8 07             	cmp    $0x7,%eax
 804daf7:	0f 46 c2             	cmovbe %edx,%eax
 804dafa:	83 fe 08             	cmp    $0x8,%esi
 804dafd:	8d 3c 08             	lea    (%eax,%ecx,1),%edi
 804db00:	8d 04 37             	lea    (%edi,%esi,1),%eax
 804db03:	0f 45 f8             	cmovne %eax,%edi
 804db06:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
 804db0c:	77 0d                	ja     804db1b <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbb>
 804db0e:	81 fe 00 00 02 00    	cmp    $0x20000,%esi
 804db14:	c6 44 24 4f 01       	movb   $0x1,0x4f(%esp)
 804db19:	76 09                	jbe    804db24 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc4>
 804db1b:	03 7c 24 48          	add    0x48(%esp),%edi
 804db1f:	c6 44 24 4f 00       	movb   $0x0,0x4f(%esp)
 804db24:	f7 c7 07 00 00 00    	test   $0x7,%edi
 804db2a:	0f 85 cf 0e 00 00    	jne    804e9ff <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xf9f>
 804db30:	81 ff 00 00 00 c0    	cmp    $0xc0000000,%edi
 804db36:	0f 87 8c 0a 00 00    	ja     804e5c8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb68>
 804db3c:	81 7c 24 24 00 00 00 	cmpl   $0xc0000000,0x24(%esp)
 804db43:	c0 
 804db44:	0f 87 7e 0a 00 00    	ja     804e5c8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb68>
 804db4a:	e8 21 be 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804db4f:	89 04 24             	mov    %eax,(%esp)
 804db52:	e8 29 c0 00 00       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 804db57:	85 c0                	test   %eax,%eax
 804db59:	89 44 24 50          	mov    %eax,0x50(%esp)
 804db5d:	0f 84 1d 09 00 00    	je     804e480 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa20>
 804db63:	83 e8 80             	sub    $0xffffff80,%eax
 804db66:	89 04 24             	mov    %eax,(%esp)
 804db69:	e8 52 cc ff ff       	call   804a7c0 <_ZN6__asan17GetAllocatorCacheEPNS_28AsanThreadLocalMallocStorageE>
 804db6e:	85 ff                	test   %edi,%edi
 804db70:	89 44 24 28          	mov    %eax,0x28(%esp)
 804db74:	0f 84 b6 00 00 00    	je     804dc30 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1d0>
 804db7a:	83 ff f8             	cmp    $0xfffffff8,%edi
 804db7d:	0f 83 e5 08 00 00    	jae    804e468 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa08>
 804db83:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
 804db89:	0f 87 11 05 00 00    	ja     804e0a0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x640>
 804db8f:	81 ff 00 01 00 00    	cmp    $0x100,%edi
 804db95:	0f 86 15 0a 00 00    	jbe    804e5b0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb50>
 804db9b:	0f bd d7             	bsr    %edi,%edx
 804db9e:	b8 1f 00 00 00       	mov    $0x1f,%eax
 804dba3:	83 f2 1f             	xor    $0x1f,%edx
 804dba6:	29 d0                	sub    %edx,%eax
 804dba8:	89 fa                	mov    %edi,%edx
 804dbaa:	8d 48 fd             	lea    -0x3(%eax),%ecx
 804dbad:	d3 ea                	shr    %cl,%edx
 804dbaf:	83 e2 07             	and    $0x7,%edx
 804dbb2:	8d 54 c2 d0          	lea    -0x30(%edx,%eax,8),%edx
 804dbb6:	b8 01 00 00 00       	mov    $0x1,%eax
 804dbbb:	d3 e0                	shl    %cl,%eax
 804dbbd:	83 e8 01             	sub    $0x1,%eax
 804dbc0:	85 f8                	test   %edi,%eax
 804dbc2:	0f 95 c0             	setne  %al
 804dbc5:	0f b6 c0             	movzbl %al,%eax
 804dbc8:	8d 2c 02             	lea    (%edx,%eax,1),%ebp
 804dbcb:	31 d2                	xor    %edx,%edx
 804dbcd:	85 ed                	test   %ebp,%ebp
 804dbcf:	89 e8                	mov    %ebp,%eax
 804dbd1:	0f 84 ef 0e 00 00    	je     804eac6 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1066>
 804dbd7:	83 fa 00             	cmp    $0x0,%edx
 804dbda:	0f 86 68 07 00 00    	jbe    804e348 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x8e8>
 804dbe0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804dbe4:	8d 83 90 2e fd ff    	lea    -0x2d170(%ebx),%eax
 804dbea:	89 44 24 08          	mov    %eax,0x8(%esp)
 804dbee:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804dbf4:	c7 44 24 14 59 00 00 	movl   $0x59,0x14(%esp)
 804dbfb:	00 
 804dbfc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804dc03:	00 
 804dc04:	89 54 24 10          	mov    %edx,0x10(%esp)
 804dc08:	c7 44 24 04 0a 03 00 	movl   $0x30a,0x4(%esp)
 804dc0f:	00 
 804dc10:	89 04 24             	mov    %eax,(%esp)
 804dc13:	e8 98 47 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804dc18:	c7 44 24 30 07 00 00 	movl   $0x7,0x30(%esp)
 804dc1f:	00 
 804dc20:	31 d2                	xor    %edx,%edx
 804dc22:	be 08 00 00 00       	mov    $0x8,%esi
 804dc27:	e9 7f fe ff ff       	jmp    804daab <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4b>
 804dc2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804dc30:	bd 01 00 00 00       	mov    $0x1,%ebp
 804dc35:	89 e8                	mov    %ebp,%eax
 804dc37:	c1 e0 04             	shl    $0x4,%eax
 804dc3a:	89 c6                	mov    %eax,%esi
 804dc3c:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 804dc40:	8b 81 d0 b4 00 00    	mov    0xb4d0(%ecx),%eax
 804dc46:	8b 91 d4 b4 00 00    	mov    0xb4d4(%ecx),%edx
 804dc4c:	89 44 24 38          	mov    %eax,0x38(%esp)
 804dc50:	89 f0                	mov    %esi,%eax
 804dc52:	89 54 24 3c          	mov    %edx,0x3c(%esp)
 804dc56:	31 d2                	xor    %edx,%edx
 804dc58:	03 44 24 38          	add    0x38(%esp),%eax
 804dc5c:	13 54 24 3c          	adc    0x3c(%esp),%edx
 804dc60:	89 81 d0 b4 00 00    	mov    %eax,0xb4d0(%ecx)
 804dc66:	89 e8                	mov    %ebp,%eax
 804dc68:	c1 e0 09             	shl    $0x9,%eax
 804dc6b:	8d 34 e8             	lea    (%eax,%ebp,8),%esi
 804dc6e:	01 ce                	add    %ecx,%esi
 804dc70:	8b 06                	mov    (%esi),%eax
 804dc72:	89 91 d4 b4 00 00    	mov    %edx,0xb4d4(%ecx)
 804dc78:	85 c0                	test   %eax,%eax
 804dc7a:	0f 84 a3 0f 00 00    	je     804ec23 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x11c3>
 804dc80:	8d 50 ff             	lea    -0x1(%eax),%edx
 804dc83:	8b 04 86             	mov    (%esi,%eax,4),%eax
 804dc86:	8b 4c 96 08          	mov    0x8(%esi,%edx,4),%ecx
 804dc8a:	89 16                	mov    %edx,(%esi)
 804dc8c:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804dc90:	0f 18 00             	prefetchnta (%eax)
 804dc93:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804dc97:	8b 44 24 38          	mov    0x38(%esp),%eax
 804dc9b:	8b 74 24 28          	mov    0x28(%esp),%esi
 804dc9f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804dca5:	8b 44 24 48          	mov    0x48(%esp),%eax
 804dca9:	8d 0c 3e             	lea    (%esi,%edi,1),%ecx
 804dcac:	01 f0                	add    %esi,%eax
 804dcae:	85 44 24 30          	test   %eax,0x30(%esp)
 804dcb2:	89 c5                	mov    %eax,%ebp
 804dcb4:	89 44 24 48          	mov    %eax,0x48(%esp)
 804dcb8:	0f 85 2a 06 00 00    	jne    804e2e8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x888>
 804dcbe:	8b 44 24 24          	mov    0x24(%esp),%eax
 804dcc2:	31 d2                	xor    %edx,%edx
 804dcc4:	83 fa 00             	cmp    $0x0,%edx
 804dcc7:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804dccb:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804dcd2:	00 
 804dcd3:	8d 74 05 00          	lea    0x0(%ebp,%eax,1),%esi
 804dcd7:	89 f0                	mov    %esi,%eax
 804dcd9:	72 41                	jb     804dd1c <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2bc>
 804dcdb:	76 3b                	jbe    804dd18 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x2b8>
 804dcdd:	8b 7c 24 30          	mov    0x30(%esp),%edi
 804dce1:	8b 6c 24 34          	mov    0x34(%esp),%ebp
 804dce5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804dce9:	8d 83 f0 2d fd ff    	lea    -0x2d210(%ebx),%eax
 804dcef:	89 44 24 08          	mov    %eax,0x8(%esp)
 804dcf3:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804dcf9:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804dcfd:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804dd01:	89 54 24 10          	mov    %edx,0x10(%esp)
 804dd05:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)
 804dd0c:	00 
 804dd0d:	89 04 24             	mov    %eax,(%esp)
 804dd10:	e8 9b 46 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804dd15:	8d 76 00             	lea    0x0(%esi),%esi
 804dd18:	39 ce                	cmp    %ecx,%esi
 804dd1a:	77 c1                	ja     804dcdd <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x27d>
 804dd1c:	8d 75 f0             	lea    -0x10(%ebp),%esi
 804dd1f:	0f b6 8c 24 84 00 00 	movzbl 0x84(%esp),%ecx
 804dd26:	00 
 804dd27:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804dd2b:	0f b6 54 24 40       	movzbl 0x40(%esp),%edx
 804dd30:	c6 45 f0 02          	movb   $0x2,-0x10(%ebp)
 804dd34:	83 e1 03             	and    $0x3,%ecx
 804dd37:	01 c9                	add    %ecx,%ecx
 804dd39:	83 e0 c1             	and    $0xffffffc1,%eax
 804dd3c:	83 e2 07             	and    $0x7,%edx
 804dd3f:	09 c8                	or     %ecx,%eax
 804dd41:	c1 e2 03             	shl    $0x3,%edx
 804dd44:	09 d0                	or     %edx,%eax
 804dd46:	88 46 07             	mov    %al,0x7(%esi)
 804dd49:	8b 44 24 50          	mov    0x50(%esp),%eax
 804dd4d:	85 c0                	test   %eax,%eax
 804dd4f:	0f 84 4b 08 00 00    	je     804e5a0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb40>
 804dd55:	8b 00                	mov    (%eax),%eax
 804dd57:	8b 08                	mov    (%eax),%ecx
 804dd59:	89 c8                	mov    %ecx,%eax
 804dd5b:	25 ff ff ff 00       	and    $0xffffff,%eax
 804dd60:	89 44 24 30          	mov    %eax,0x30(%esp)
 804dd64:	89 c2                	mov    %eax,%edx
 804dd66:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
 804dd6a:	c1 e2 08             	shl    $0x8,%edx
 804dd6d:	09 d0                	or     %edx,%eax
 804dd6f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804dd72:	8b 44 24 30          	mov    0x30(%esp),%eax
 804dd76:	89 4c 24 40          	mov    %ecx,0x40(%esp)
 804dd7a:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 804dd81:	00 
 804dd82:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804dd89:	00 
 804dd8a:	39 c1                	cmp    %eax,%ecx
 804dd8c:	89 44 24 30          	mov    %eax,0x30(%esp)
 804dd90:	0f 85 a9 0b 00 00    	jne    804e93f <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xedf>
 804dd96:	8b 46 04             	mov    0x4(%esi),%eax
 804dd99:	0d ff ff ff 00       	or     $0xffffff,%eax
 804dd9e:	89 46 04             	mov    %eax,0x4(%esi)
 804dda1:	3b 6c 24 48          	cmp    0x48(%esp),%ebp
 804dda5:	0f 95 c2             	setne  %dl
 804dda8:	c1 e8 18             	shr    $0x18,%eax
 804ddab:	83 e0 fe             	and    $0xfffffffe,%eax
 804ddae:	09 d0                	or     %edx,%eax
 804ddb0:	a8 01                	test   $0x1,%al
 804ddb2:	88 46 07             	mov    %al,0x7(%esi)
 804ddb5:	74 6e                	je     804de25 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x3c5>
 804ddb7:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 804ddbb:	31 d2                	xor    %edx,%edx
 804ddbd:	89 6c 24 30          	mov    %ebp,0x30(%esp)
 804ddc1:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804ddc8:	00 
 804ddc9:	83 c1 08             	add    $0x8,%ecx
 804ddcc:	83 fa 00             	cmp    $0x0,%edx
 804ddcf:	89 c8                	mov    %ecx,%eax
 804ddd1:	72 45                	jb     804de18 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x3b8>
 804ddd3:	77 06                	ja     804dddb <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x37b>
 804ddd5:	3b 4c 24 30          	cmp    0x30(%esp),%ecx
 804ddd9:	76 3d                	jbe    804de18 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x3b8>
 804dddb:	8b 7c 24 30          	mov    0x30(%esp),%edi
 804dddf:	8b 6c 24 34          	mov    0x34(%esp),%ebp
 804dde3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804dde7:	8d 83 68 34 fd ff    	lea    -0x2cb98(%ebx),%eax
 804dded:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ddf1:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804ddf7:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804ddfb:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804ddff:	89 54 24 10          	mov    %edx,0x10(%esp)
 804de03:	c7 44 24 04 70 01 00 	movl   $0x170,0x4(%esp)
 804de0a:	00 
 804de0b:	89 04 24             	mov    %eax,(%esp)
 804de0e:	e8 9d 45 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804de13:	90                   	nop
 804de14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804de18:	8b 44 24 38          	mov    0x38(%esp),%eax
 804de1c:	c7 00 b9 96 6e cc    	movl   $0xcc6e96b9,(%eax)
 804de22:	89 70 04             	mov    %esi,0x4(%eax)
 804de25:	80 7c 24 4f 00       	cmpb   $0x0,0x4f(%esp)
 804de2a:	0f 84 28 01 00 00    	je     804df58 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4f8>
 804de30:	8b 44 24 24          	mov    0x24(%esp),%eax
 804de34:	8b 93 a0 b9 00 00    	mov    0xb9a0(%ebx),%edx
 804de3a:	89 46 08             	mov    %eax,0x8(%esi)
 804de3d:	8b 44 24 28          	mov    0x28(%esp),%eax
 804de41:	c1 e8 14             	shr    $0x14,%eax
 804de44:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 804de48:	0f 84 38 0c 00 00    	je     804ea86 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1026>
 804de4e:	e8 cd a6 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804de53:	80 78 50 00          	cmpb   $0x0,0x50(%eax)
 804de57:	0f 84 77 01 00 00    	je     804dfd4 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x574>
 804de5d:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 804de64:	8b 00                	mov    (%eax),%eax
 804de66:	89 44 24 04          	mov    %eax,0x4(%esp)
 804de6a:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 804de71:	83 c0 08             	add    $0x8,%eax
 804de74:	89 04 24             	mov    %eax,(%esp)
 804de77:	e8 54 2d 01 00       	call   8060bd0 <_ZN11__sanitizer13StackDepotPutEPKmm>
 804de7c:	89 46 0c             	mov    %eax,0xc(%esi)
 804de7f:	8b 74 24 24          	mov    0x24(%esp),%esi
 804de83:	83 e6 f8             	and    $0xfffffff8,%esi
 804de86:	0f 85 d2 01 00 00    	jne    804e05e <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x5fe>
 804de8c:	e8 8f a6 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804de91:	80 78 4e 00          	cmpb   $0x0,0x4e(%eax)
 804de95:	74 52                	je     804dee9 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x489>
 804de97:	01 ee                	add    %ebp,%esi
 804de99:	81 fe fe ff ff 1f    	cmp    $0x1ffffffe,%esi
 804de9f:	76 37                	jbe    804ded8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x478>
 804dea1:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 804dea7:	8b 00                	mov    (%eax),%eax
 804dea9:	85 c0                	test   %eax,%eax
 804deab:	74 08                	je     804deb5 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x455>
 804dead:	39 c6                	cmp    %eax,%esi
 804deaf:	0f 83 b3 08 00 00    	jae    804e768 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd08>
 804deb5:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 804debb:	8b 00                	mov    (%eax),%eax
 804debd:	89 c2                	mov    %eax,%edx
 804debf:	c1 ea 03             	shr    $0x3,%edx
 804dec2:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 804dec8:	39 d6                	cmp    %edx,%esi
 804deca:	0f 82 f8 04 00 00    	jb     804e3c8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x968>
 804ded0:	39 c6                	cmp    %eax,%esi
 804ded2:	0f 87 f0 04 00 00    	ja     804e3c8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x968>
 804ded8:	0f b6 44 24 24       	movzbl 0x24(%esp),%eax
 804dedd:	c1 ee 03             	shr    $0x3,%esi
 804dee0:	83 e0 07             	and    $0x7,%eax
 804dee3:	88 86 00 00 00 20    	mov    %al,0x20000000(%esi)
 804dee9:	e8 82 ba 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804deee:	89 04 24             	mov    %eax,(%esp)
 804def1:	e8 5a be 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804def6:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 804defa:	89 fa                	mov    %edi,%edx
 804defc:	29 ca                	sub    %ecx,%edx
 804defe:	83 00 01             	addl   $0x1,(%eax)
 804df01:	01 48 04             	add    %ecx,0x4(%eax)
 804df04:	01 50 08             	add    %edx,0x8(%eax)
 804df07:	81 ff 00 01 00 00    	cmp    $0x100,%edi
 804df0d:	0f 86 75 01 00 00    	jbe    804e088 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x628>
 804df13:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
 804df19:	0f 86 d9 03 00 00    	jbe    804e2f8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x898>
 804df1f:	83 80 34 04 00 00 01 	addl   $0x1,0x434(%eax)
 804df26:	83 80 28 10 00 00 01 	addl   $0x1,0x1028(%eax)
 804df2d:	8b 83 ec ff ff ff    	mov    -0x14(%ebx),%eax
 804df33:	85 c0                	test   %eax,%eax
 804df35:	0f 84 04 0b 00 00    	je     804ea3f <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xfdf>
 804df3b:	8b 44 24 24          	mov    0x24(%esp),%eax
 804df3f:	89 2c 24             	mov    %ebp,(%esp)
 804df42:	89 44 24 04          	mov    %eax,0x4(%esp)
 804df46:	e8 55 b9 ff ff       	call   80498a0 <__asan_malloc_hook@plt>
 804df4b:	89 e8                	mov    %ebp,%eax
 804df4d:	83 c4 6c             	add    $0x6c,%esp
 804df50:	5b                   	pop    %ebx
 804df51:	5e                   	pop    %esi
 804df52:	5f                   	pop    %edi
 804df53:	5d                   	pop    %ebp
 804df54:	c3                   	ret    
 804df55:	8d 76 00             	lea    0x0(%esi),%esi
 804df58:	8b 44 24 28          	mov    0x28(%esp),%eax
 804df5c:	8b 93 a0 b9 00 00    	mov    0xb9a0(%ebx),%edx
 804df62:	c1 e8 14             	shr    $0x14,%eax
 804df65:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 804df69:	0f 85 d7 0a 00 00    	jne    804ea46 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xfe6>
 804df6f:	c7 46 08 00 00 02 00 	movl   $0x20000,0x8(%esi)
 804df76:	0f b6 14 02          	movzbl (%edx,%eax,1),%edx
 804df7a:	84 d2                	test   %dl,%dl
 804df7c:	0f 85 86 04 00 00    	jne    804e408 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9a8>
 804df82:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804df88:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804df8b:	85 44 24 28          	test   %eax,0x28(%esp)
 804df8f:	0f 85 4e 0c 00 00    	jne    804ebe3 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1183>
 804df95:	8b 44 24 28          	mov    0x28(%esp),%eax
 804df99:	31 d2                	xor    %edx,%edx
 804df9b:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804dfa2:	00 
 804dfa3:	f7 f1                	div    %ecx
 804dfa5:	85 d2                	test   %edx,%edx
 804dfa7:	89 54 24 30          	mov    %edx,0x30(%esp)
 804dfab:	0f 85 d5 0b 00 00    	jne    804eb86 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1126>
 804dfb1:	8b 44 24 28          	mov    0x28(%esp),%eax
 804dfb5:	29 c8                	sub    %ecx,%eax
 804dfb7:	89 c1                	mov    %eax,%ecx
 804dfb9:	83 c1 10             	add    $0x10,%ecx
 804dfbc:	8b 44 24 24          	mov    0x24(%esp),%eax
 804dfc0:	89 71 04             	mov    %esi,0x4(%ecx)
 804dfc3:	89 01                	mov    %eax,(%ecx)
 804dfc5:	e8 56 a5 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 804dfca:	80 78 50 00          	cmpb   $0x0,0x50(%eax)
 804dfce:	0f 85 89 fe ff ff    	jne    804de5d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x3fd>
 804dfd4:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804dfd8:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
 804dfdf:	c0 e8 03             	shr    $0x3,%al
 804dfe2:	83 e0 07             	and    $0x7,%eax
 804dfe5:	e8 d6 bb ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804dfea:	31 c9                	xor    %ecx,%ecx
 804dfec:	83 f8 10             	cmp    $0x10,%eax
 804dfef:	76 3f                	jbe    804e030 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x5d0>
 804dff1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804dff5:	8d 83 dc 2f fd ff    	lea    -0x2d024(%ebx),%eax
 804dffb:	89 44 24 08          	mov    %eax,0x8(%esp)
 804dfff:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804e005:	c7 44 24 14 10 00 00 	movl   $0x10,0x14(%esp)
 804e00c:	00 
 804e00d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e014:	00 
 804e015:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 804e019:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)
 804e020:	00 
 804e021:	89 04 24             	mov    %eax,(%esp)
 804e024:	e8 87 43 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e029:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804e030:	89 e9                	mov    %ebp,%ecx
 804e032:	29 c1                	sub    %eax,%ecx
 804e034:	8d 50 f0             	lea    -0x10(%eax),%edx
 804e037:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 804e03e:	c1 ea 02             	shr    $0x2,%edx
 804e041:	89 54 24 08          	mov    %edx,0x8(%esp)
 804e045:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804e049:	89 04 24             	mov    %eax,(%esp)
 804e04c:	e8 af 6a 01 00       	call   8064b00 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm>
 804e051:	8b 74 24 24          	mov    0x24(%esp),%esi
 804e055:	83 e6 f8             	and    $0xfffffff8,%esi
 804e058:	0f 84 2e fe ff ff    	je     804de8c <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x42c>
 804e05e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 804e065:	00 
 804e066:	89 74 24 04          	mov    %esi,0x4(%esp)
 804e06a:	89 2c 24             	mov    %ebp,(%esp)
 804e06d:	e8 3e ea 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804e072:	39 74 24 24          	cmp    %esi,0x24(%esp)
 804e076:	0f 84 6d fe ff ff    	je     804dee9 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x489>
 804e07c:	e9 0b fe ff ff       	jmp    804de8c <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x42c>
 804e081:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804e088:	8d 57 0f             	lea    0xf(%edi),%edx
 804e08b:	c1 ea 04             	shr    $0x4,%edx
 804e08e:	83 84 90 34 04 00 00 	addl   $0x1,0x434(%eax,%edx,4)
 804e095:	01 
 804e096:	e9 92 fe ff ff       	jmp    804df2d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4cd>
 804e09b:	90                   	nop
 804e09c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e0a0:	8b 83 a4 b9 00 00    	mov    0xb9a4(%ebx),%eax
 804e0a6:	8d 68 ff             	lea    -0x1(%eax),%ebp
 804e0a9:	85 c5                	test   %eax,%ebp
 804e0ab:	0f 85 f2 0a 00 00    	jne    804eba3 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1143>
 804e0b1:	89 c2                	mov    %eax,%edx
 804e0b3:	01 fd                	add    %edi,%ebp
 804e0b5:	f7 da                	neg    %edx
 804e0b7:	21 d5                	and    %edx,%ebp
 804e0b9:	01 c5                	add    %eax,%ebp
 804e0bb:	83 f8 07             	cmp    $0x7,%eax
 804e0be:	8d 55 08             	lea    0x8(%ebp),%edx
 804e0c1:	0f 46 ea             	cmovbe %edx,%ebp
 804e0c4:	39 ef                	cmp    %ebp,%edi
 804e0c6:	0f 87 9c 03 00 00    	ja     804e468 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa08>
 804e0cc:	8d 83 91 2d fd ff    	lea    -0x2d26f(%ebx),%eax
 804e0d2:	89 44 24 04          	mov    %eax,0x4(%esp)
 804e0d6:	89 2c 24             	mov    %ebp,(%esp)
 804e0d9:	e8 02 51 01 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 804e0de:	c7 44 24 08 fa 00 00 	movl   $0xfa,0x8(%esp)
 804e0e5:	00 
 804e0e6:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 804e0ea:	89 04 24             	mov    %eax,(%esp)
 804e0ed:	89 c6                	mov    %eax,%esi
 804e0ef:	e8 bc e9 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804e0f4:	e8 77 b8 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804e0f9:	89 04 24             	mov    %eax,(%esp)
 804e0fc:	e8 4f bc 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804e101:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804e107:	8d 14 0e             	lea    (%esi,%ecx,1),%edx
 804e10a:	89 54 24 28          	mov    %edx,0x28(%esp)
 804e10e:	83 40 28 01          	addl   $0x1,0x28(%eax)
 804e112:	01 68 2c             	add    %ebp,0x2c(%eax)
 804e115:	83 e2 07             	and    $0x7,%edx
 804e118:	8d 04 2e             	lea    (%esi,%ebp,1),%eax
 804e11b:	74 24                	je     804e141 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x6e1>
 804e11d:	83 44 24 28 08       	addl   $0x8,0x28(%esp)
 804e122:	29 54 24 28          	sub    %edx,0x28(%esp)
 804e126:	8b 54 24 28          	mov    0x28(%esp),%edx
 804e12a:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e131:	00 
 804e132:	83 e2 07             	and    $0x7,%edx
 804e135:	85 d2                	test   %edx,%edx
 804e137:	89 54 24 38          	mov    %edx,0x38(%esp)
 804e13b:	0f 85 64 06 00 00    	jne    804e7a5 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd45>
 804e141:	8b 54 24 28          	mov    0x28(%esp),%edx
 804e145:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e14c:	00 
 804e14d:	89 44 24 58          	mov    %eax,0x58(%esp)
 804e151:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%esp)
 804e158:	00 
 804e159:	01 fa                	add    %edi,%edx
 804e15b:	83 7c 24 3c 00       	cmpl   $0x0,0x3c(%esp)
 804e160:	89 54 24 38          	mov    %edx,0x38(%esp)
 804e164:	0f 83 16 02 00 00    	jae    804e380 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x920>
 804e16a:	8b 44 24 28          	mov    0x28(%esp),%eax
 804e16e:	31 d2                	xor    %edx,%edx
 804e170:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e177:	00 
 804e178:	f7 f1                	div    %ecx
 804e17a:	85 d2                	test   %edx,%edx
 804e17c:	89 54 24 38          	mov    %edx,0x38(%esp)
 804e180:	0f 85 80 09 00 00    	jne    804eb06 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x10a6>
 804e186:	8b 54 24 28          	mov    0x28(%esp),%edx
 804e18a:	29 ca                	sub    %ecx,%edx
 804e18c:	85 ed                	test   %ebp,%ebp
 804e18e:	89 7a 08             	mov    %edi,0x8(%edx)
 804e191:	89 32                	mov    %esi,(%edx)
 804e193:	89 6a 04             	mov    %ebp,0x4(%edx)
 804e196:	0f 84 aa 09 00 00    	je     804eb46 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x10e6>
 804e19c:	0f bd c5             	bsr    %ebp,%eax
 804e19f:	be 1f 00 00 00       	mov    $0x1f,%esi
 804e1a4:	83 f0 1f             	xor    $0x1f,%eax
 804e1a7:	29 c6                	sub    %eax,%esi
 804e1a9:	83 fe 3f             	cmp    $0x3f,%esi
 804e1ac:	89 74 24 38          	mov    %esi,0x38(%esp)
 804e1b0:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e1b7:	00 
 804e1b8:	76 46                	jbe    804e200 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7a0>
 804e1ba:	8b 44 24 38          	mov    0x38(%esp),%eax
 804e1be:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804e1c2:	c7 44 24 14 40 00 00 	movl   $0x40,0x14(%esp)
 804e1c9:	00 
 804e1ca:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e1d1:	00 
 804e1d2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804e1d6:	8d 83 f4 33 fd ff    	lea    -0x2cc0c(%ebx),%eax
 804e1dc:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e1e0:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804e1e6:	89 54 24 10          	mov    %edx,0x10(%esp)
 804e1ea:	c7 44 24 04 78 03 00 	movl   $0x378,0x4(%esp)
 804e1f1:	00 
 804e1f2:	89 04 24             	mov    %eax,(%esp)
 804e1f5:	e8 b6 41 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e1fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804e200:	b8 01 00 00 00       	mov    $0x1,%eax
 804e205:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804e20b:	84 c0                	test   %al,%al
 804e20d:	0f 85 95 01 00 00    	jne    804e3a8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x948>
 804e213:	8b 8b a8 b9 02 00    	mov    0x2b9a8(%ebx),%ecx
 804e219:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e220:	00 
 804e221:	8d 41 01             	lea    0x1(%ecx),%eax
 804e224:	81 f9 ff 7f 00 00    	cmp    $0x7fff,%ecx
 804e22a:	89 83 a8 b9 02 00    	mov    %eax,0x2b9a8(%ebx)
 804e230:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804e234:	0f 87 e9 04 00 00    	ja     804e723 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xcc3>
 804e23a:	89 4a 0c             	mov    %ecx,0xc(%edx)
 804e23d:	8b 83 b4 b9 02 00    	mov    0x2b9b4(%ebx),%eax
 804e243:	89 94 8b a8 b9 00 00 	mov    %edx,0xb9a8(%ebx,%ecx,4)
 804e24a:	8b 93 b8 b9 02 00    	mov    0x2b9b8(%ebx),%edx
 804e250:	83 83 ac b9 02 00 01 	addl   $0x1,0x2b9ac(%ebx)
 804e257:	01 e8                	add    %ebp,%eax
 804e259:	39 d0                	cmp    %edx,%eax
 804e25b:	89 83 b4 b9 02 00    	mov    %eax,0x2b9b4(%ebx)
 804e261:	0f 42 c2             	cmovb  %edx,%eax
 804e264:	89 83 b8 b9 02 00    	mov    %eax,0x2b9b8(%ebx)
 804e26a:	8b 83 c8 ba 02 00    	mov    0x2bac8(%ebx),%eax
 804e270:	8b 93 cc ba 02 00    	mov    0x2bacc(%ebx),%edx
 804e276:	89 6c 24 38          	mov    %ebp,0x38(%esp)
 804e27a:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e281:	00 
 804e282:	83 84 b3 bc b9 02 00 	addl   $0x1,0x2b9bc(%ebx,%esi,4)
 804e289:	01 
 804e28a:	03 44 24 38          	add    0x38(%esp),%eax
 804e28e:	13 54 24 3c          	adc    0x3c(%esp),%edx
 804e292:	89 83 c8 ba 02 00    	mov    %eax,0x2bac8(%ebx)
 804e298:	89 93 cc ba 02 00    	mov    %edx,0x2bacc(%ebx)
 804e29e:	8b 83 d8 ba 02 00    	mov    0x2bad8(%ebx),%eax
 804e2a4:	8b 93 dc ba 02 00    	mov    0x2badc(%ebx),%edx
 804e2aa:	03 44 24 38          	add    0x38(%esp),%eax
 804e2ae:	13 54 24 3c          	adc    0x3c(%esp),%edx
 804e2b2:	89 83 d8 ba 02 00    	mov    %eax,0x2bad8(%ebx)
 804e2b8:	89 93 dc ba 02 00    	mov    %edx,0x2badc(%ebx)
 804e2be:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804e2c5:	8b 44 24 28          	mov    0x28(%esp),%eax
 804e2c9:	89 44 24 38          	mov    %eax,0x38(%esp)
 804e2cd:	e9 c5 f9 ff ff       	jmp    804dc97 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x237>
 804e2d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804e2d8:	e8 e3 ab 00 00       	call   8058ec0 <__asan_init_v1>
 804e2dd:	e9 a6 f7 ff ff       	jmp    804da88 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x28>
 804e2e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804e2e8:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 804e2ec:	01 c5                	add    %eax,%ebp
 804e2ee:	23 6c 24 54          	and    0x54(%esp),%ebp
 804e2f2:	e9 c7 f9 ff ff       	jmp    804dcbe <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x25e>
 804e2f7:	90                   	nop
 804e2f8:	0f bd cf             	bsr    %edi,%ecx
 804e2fb:	ba 1f 00 00 00       	mov    $0x1f,%edx
 804e300:	83 f1 1f             	xor    $0x1f,%ecx
 804e303:	89 fe                	mov    %edi,%esi
 804e305:	29 ca                	sub    %ecx,%edx
 804e307:	8d 4a fd             	lea    -0x3(%edx),%ecx
 804e30a:	d3 ee                	shr    %cl,%esi
 804e30c:	83 e6 07             	and    $0x7,%esi
 804e30f:	8d 74 d6 d0          	lea    -0x30(%esi,%edx,8),%esi
 804e313:	ba 01 00 00 00       	mov    $0x1,%edx
 804e318:	d3 e2                	shl    %cl,%edx
 804e31a:	83 ea 01             	sub    $0x1,%edx
 804e31d:	85 fa                	test   %edi,%edx
 804e31f:	0f 95 c2             	setne  %dl
 804e322:	0f b6 d2             	movzbl %dl,%edx
 804e325:	01 d6                	add    %edx,%esi
 804e327:	ba ff 00 00 00       	mov    $0xff,%edx
 804e32c:	81 fe ff 00 00 00    	cmp    $0xff,%esi
 804e332:	0f 47 f2             	cmova  %edx,%esi
 804e335:	83 84 b0 34 04 00 00 	addl   $0x1,0x434(%eax,%esi,4)
 804e33c:	01 
 804e33d:	e9 eb fb ff ff       	jmp    804df2d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4cd>
 804e342:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804e348:	83 f8 58             	cmp    $0x58,%eax
 804e34b:	0f 87 8f f8 ff ff    	ja     804dbe0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x180>
 804e351:	83 fd 10             	cmp    $0x10,%ebp
 804e354:	0f 86 db f8 ff ff    	jbe    804dc35 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1d5>
 804e35a:	8d 55 f0             	lea    -0x10(%ebp),%edx
 804e35d:	b8 00 01 00 00       	mov    $0x100,%eax
 804e362:	89 d1                	mov    %edx,%ecx
 804e364:	83 e2 07             	and    $0x7,%edx
 804e367:	c1 e9 03             	shr    $0x3,%ecx
 804e36a:	d3 e0                	shl    %cl,%eax
 804e36c:	89 c1                	mov    %eax,%ecx
 804e36e:	c1 e9 03             	shr    $0x3,%ecx
 804e371:	0f af ca             	imul   %edx,%ecx
 804e374:	8d 34 08             	lea    (%eax,%ecx,1),%esi
 804e377:	e9 c0 f8 ff ff       	jmp    804dc3c <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1dc>
 804e37c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e380:	0f 86 72 02 00 00    	jbe    804e5f8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb98>
 804e386:	8b 44 24 58          	mov    0x58(%esp),%eax
 804e38a:	8b 54 24 5c          	mov    0x5c(%esp),%edx
 804e38e:	89 44 24 14          	mov    %eax,0x14(%esp)
 804e392:	8b 44 24 38          	mov    0x38(%esp),%eax
 804e396:	89 54 24 18          	mov    %edx,0x18(%esp)
 804e39a:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804e39e:	e9 58 03 00 00       	jmp    804e6fb <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc9b>
 804e3a3:	90                   	nop
 804e3a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e3a8:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804e3ae:	89 04 24             	mov    %eax,(%esp)
 804e3b1:	89 54 24 38          	mov    %edx,0x38(%esp)
 804e3b5:	e8 76 10 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804e3ba:	8b 54 24 38          	mov    0x38(%esp),%edx
 804e3be:	e9 50 fe ff ff       	jmp    804e213 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x7b3>
 804e3c3:	90                   	nop
 804e3c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e3c8:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 804e3ce:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e3d2:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 804e3d8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804e3df:	00 
 804e3e0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e3e7:	00 
 804e3e8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804e3ef:	00 
 804e3f0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804e3f7:	00 
 804e3f8:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 804e3ff:	00 
 804e400:	89 04 24             	mov    %eax,(%esp)
 804e403:	e8 a8 3f 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e408:	8b 44 24 28          	mov    0x28(%esp),%eax
 804e40c:	25 00 00 f0 ff       	and    $0xfff00000,%eax
 804e411:	83 fa 10             	cmp    $0x10,%edx
 804e414:	0f 86 ce 01 00 00    	jbe    804e5e8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb88>
 804e41a:	8d 4a f0             	lea    -0x10(%edx),%ecx
 804e41d:	c7 44 24 30 00 01 00 	movl   $0x100,0x30(%esp)
 804e424:	00 
 804e425:	89 ca                	mov    %ecx,%edx
 804e427:	c1 e9 03             	shr    $0x3,%ecx
 804e42a:	83 e2 07             	and    $0x7,%edx
 804e42d:	d3 64 24 30          	shll   %cl,0x30(%esp)
 804e431:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 804e435:	c1 e9 03             	shr    $0x3,%ecx
 804e438:	0f af ca             	imul   %edx,%ecx
 804e43b:	03 4c 24 30          	add    0x30(%esp),%ecx
 804e43f:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804e443:	8b 54 24 28          	mov    0x28(%esp),%edx
 804e447:	8d 88 00 00 10 00    	lea    0x100000(%eax),%ecx
 804e44d:	29 c2                	sub    %eax,%edx
 804e44f:	89 d0                	mov    %edx,%eax
 804e451:	31 d2                	xor    %edx,%edx
 804e453:	f7 74 24 30          	divl   0x30(%esp)
 804e457:	83 c0 01             	add    $0x1,%eax
 804e45a:	c1 e0 04             	shl    $0x4,%eax
 804e45d:	29 c1                	sub    %eax,%ecx
 804e45f:	e9 58 fb ff ff       	jmp    804dfbc <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x55c>
 804e464:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e468:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 804e46f:	00 
 804e470:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 804e477:	00 
 804e478:	e9 1a f8 ff ff       	jmp    804dc97 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x237>
 804e47d:	8d 76 00             	lea    0x0(%esi),%esi
 804e480:	b8 01 00 00 00       	mov    $0x1,%eax
 804e485:	86 83 a0 03 00 00    	xchg   %al,0x3a0(%ebx)
 804e48b:	84 c0                	test   %al,%al
 804e48d:	74 0e                	je     804e49d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xa3d>
 804e48f:	8d 83 a0 03 00 00    	lea    0x3a0(%ebx),%eax
 804e495:	89 04 24             	mov    %eax,(%esp)
 804e498:	e8 93 0f 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804e49d:	85 ff                	test   %edi,%edi
 804e49f:	0f 84 63 01 00 00    	je     804e608 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xba8>
 804e4a5:	83 ff f8             	cmp    $0xfffffff8,%edi
 804e4a8:	0f 83 e2 02 00 00    	jae    804e790 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd30>
 804e4ae:	81 ff 00 00 02 00    	cmp    $0x20000,%edi
 804e4b4:	0f 87 5e 01 00 00    	ja     804e618 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbb8>
 804e4ba:	81 ff 00 01 00 00    	cmp    $0x100,%edi
 804e4c0:	0f 86 ba 02 00 00    	jbe    804e780 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd20>
 804e4c6:	0f bd d7             	bsr    %edi,%edx
 804e4c9:	b8 1f 00 00 00       	mov    $0x1f,%eax
 804e4ce:	83 f2 1f             	xor    $0x1f,%edx
 804e4d1:	29 d0                	sub    %edx,%eax
 804e4d3:	89 fa                	mov    %edi,%edx
 804e4d5:	8d 48 fd             	lea    -0x3(%eax),%ecx
 804e4d8:	d3 ea                	shr    %cl,%edx
 804e4da:	83 e2 07             	and    $0x7,%edx
 804e4dd:	8d 54 c2 d0          	lea    -0x30(%edx,%eax,8),%edx
 804e4e1:	b8 01 00 00 00       	mov    $0x1,%eax
 804e4e6:	d3 e0                	shl    %cl,%eax
 804e4e8:	83 e8 01             	sub    $0x1,%eax
 804e4eb:	85 f8                	test   %edi,%eax
 804e4ed:	0f 95 c0             	setne  %al
 804e4f0:	0f b6 c0             	movzbl %al,%eax
 804e4f3:	8d 2c 02             	lea    (%edx,%eax,1),%ebp
 804e4f6:	31 d2                	xor    %edx,%edx
 804e4f8:	85 ed                	test   %ebp,%ebp
 804e4fa:	89 e8                	mov    %ebp,%eax
 804e4fc:	0f 84 c4 05 00 00    	je     804eac6 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1066>
 804e502:	83 fa 00             	cmp    $0x0,%edx
 804e505:	0f 87 d5 f6 ff ff    	ja     804dbe0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x180>
 804e50b:	83 f8 58             	cmp    $0x58,%eax
 804e50e:	0f 87 cc f6 ff ff    	ja     804dbe0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x180>
 804e514:	83 fd 10             	cmp    $0x10,%ebp
 804e517:	0f 86 f0 00 00 00    	jbe    804e60d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xbad>
 804e51d:	8d 55 f0             	lea    -0x10(%ebp),%edx
 804e520:	b8 00 01 00 00       	mov    $0x100,%eax
 804e525:	89 d1                	mov    %edx,%ecx
 804e527:	83 e2 07             	and    $0x7,%edx
 804e52a:	c1 e9 03             	shr    $0x3,%ecx
 804e52d:	d3 e0                	shl    %cl,%eax
 804e52f:	89 c1                	mov    %eax,%ecx
 804e531:	c1 e9 03             	shr    $0x3,%ecx
 804e534:	0f af ca             	imul   %edx,%ecx
 804e537:	01 c8                	add    %ecx,%eax
 804e539:	8b 93 90 b8 00 00    	mov    0xb890(%ebx),%edx
 804e53f:	8b 8b 94 b8 00 00    	mov    0xb894(%ebx),%ecx
 804e545:	89 54 24 28          	mov    %edx,0x28(%esp)
 804e549:	31 d2                	xor    %edx,%edx
 804e54b:	03 44 24 28          	add    0x28(%esp),%eax
 804e54f:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 804e553:	13 54 24 2c          	adc    0x2c(%esp),%edx
 804e557:	89 83 90 b8 00 00    	mov    %eax,0xb890(%ebx)
 804e55d:	89 e8                	mov    %ebp,%eax
 804e55f:	c1 e0 09             	shl    $0x9,%eax
 804e562:	8d 34 e8             	lea    (%eax,%ebp,8),%esi
 804e565:	89 93 94 b8 00 00    	mov    %edx,0xb894(%ebx)
 804e56b:	8d 93 c0 03 00 00    	lea    0x3c0(%ebx),%edx
 804e571:	01 d6                	add    %edx,%esi
 804e573:	8b 06                	mov    (%esi),%eax
 804e575:	85 c0                	test   %eax,%eax
 804e577:	0f 84 e0 06 00 00    	je     804ec5d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x11fd>
 804e57d:	8d 50 ff             	lea    -0x1(%eax),%edx
 804e580:	8b 04 86             	mov    (%esi,%eax,4),%eax
 804e583:	8b 4c 96 08          	mov    0x8(%esi,%edx,4),%ecx
 804e587:	89 16                	mov    %edx,(%esi)
 804e589:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804e58d:	0f 18 00             	prefetchnta (%eax)
 804e590:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804e594:	c6 83 a0 03 00 00 00 	movb   $0x0,0x3a0(%ebx)
 804e59b:	e9 f7 f6 ff ff       	jmp    804dc97 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x237>
 804e5a0:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
 804e5a4:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804e5a7:	e9 ea f7 ff ff       	jmp    804dd96 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x336>
 804e5ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e5b0:	8d 6f 0f             	lea    0xf(%edi),%ebp
 804e5b3:	31 d2                	xor    %edx,%edx
 804e5b5:	c1 ed 04             	shr    $0x4,%ebp
 804e5b8:	83 fa 00             	cmp    $0x0,%edx
 804e5bb:	89 e8                	mov    %ebp,%eax
 804e5bd:	0f 87 1d f6 ff ff    	ja     804dbe0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x180>
 804e5c3:	e9 80 fd ff ff       	jmp    804e348 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x8e8>
 804e5c8:	8b 44 24 24          	mov    0x24(%esp),%eax
 804e5cc:	89 44 24 04          	mov    %eax,0x4(%esp)
 804e5d0:	8d 83 98 33 fd ff    	lea    -0x2cc68(%ebx),%eax
 804e5d6:	89 04 24             	mov    %eax,(%esp)
 804e5d9:	e8 62 31 01 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 804e5de:	31 c0                	xor    %eax,%eax
 804e5e0:	e9 68 f9 ff ff       	jmp    804df4d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4ed>
 804e5e5:	8d 76 00             	lea    0x0(%esi),%esi
 804e5e8:	c1 e2 04             	shl    $0x4,%edx
 804e5eb:	89 54 24 30          	mov    %edx,0x30(%esp)
 804e5ef:	e9 4f fe ff ff       	jmp    804e443 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x9e3>
 804e5f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e5f8:	39 c2                	cmp    %eax,%edx
 804e5fa:	0f 86 6a fb ff ff    	jbe    804e16a <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x70a>
 804e600:	e9 81 fd ff ff       	jmp    804e386 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x926>
 804e605:	8d 76 00             	lea    0x0(%esi),%esi
 804e608:	bd 01 00 00 00       	mov    $0x1,%ebp
 804e60d:	89 e8                	mov    %ebp,%eax
 804e60f:	c1 e0 04             	shl    $0x4,%eax
 804e612:	e9 22 ff ff ff       	jmp    804e539 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xad9>
 804e617:	90                   	nop
 804e618:	8b 83 a4 b9 00 00    	mov    0xb9a4(%ebx),%eax
 804e61e:	8d 68 ff             	lea    -0x1(%eax),%ebp
 804e621:	85 c5                	test   %eax,%ebp
 804e623:	0f 85 7a 05 00 00    	jne    804eba3 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x1143>
 804e629:	89 c2                	mov    %eax,%edx
 804e62b:	01 fd                	add    %edi,%ebp
 804e62d:	f7 da                	neg    %edx
 804e62f:	21 d5                	and    %edx,%ebp
 804e631:	01 c5                	add    %eax,%ebp
 804e633:	83 f8 07             	cmp    $0x7,%eax
 804e636:	8d 55 08             	lea    0x8(%ebp),%edx
 804e639:	0f 46 ea             	cmovbe %edx,%ebp
 804e63c:	39 ef                	cmp    %ebp,%edi
 804e63e:	0f 87 4c 01 00 00    	ja     804e790 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd30>
 804e644:	8d 83 91 2d fd ff    	lea    -0x2d26f(%ebx),%eax
 804e64a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804e64e:	89 2c 24             	mov    %ebp,(%esp)
 804e651:	e8 8a 4b 01 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 804e656:	c7 44 24 08 fa 00 00 	movl   $0xfa,0x8(%esp)
 804e65d:	00 
 804e65e:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 804e662:	89 04 24             	mov    %eax,(%esp)
 804e665:	89 c6                	mov    %eax,%esi
 804e667:	89 44 24 38          	mov    %eax,0x38(%esp)
 804e66b:	e8 40 e4 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804e670:	e8 fb b2 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804e675:	89 04 24             	mov    %eax,(%esp)
 804e678:	e8 d3 b6 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804e67d:	8d 14 2e             	lea    (%esi,%ebp,1),%edx
 804e680:	83 40 28 01          	addl   $0x1,0x28(%eax)
 804e684:	01 68 2c             	add    %ebp,0x2c(%eax)
 804e687:	89 f0                	mov    %esi,%eax
 804e689:	8b b3 a4 b9 00 00    	mov    0xb9a4(%ebx),%esi
 804e68f:	8d 0c 30             	lea    (%eax,%esi,1),%ecx
 804e692:	89 c8                	mov    %ecx,%eax
 804e694:	83 e0 07             	and    $0x7,%eax
 804e697:	74 1e                	je     804e6b7 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc57>
 804e699:	83 c1 08             	add    $0x8,%ecx
 804e69c:	29 c1                	sub    %eax,%ecx
 804e69e:	89 c8                	mov    %ecx,%eax
 804e6a0:	83 e0 07             	and    $0x7,%eax
 804e6a3:	85 c0                	test   %eax,%eax
 804e6a5:	89 44 24 28          	mov    %eax,0x28(%esp)
 804e6a9:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804e6b0:	00 
 804e6b1:	0f 85 c3 05 00 00    	jne    804ec7a <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x121a>
 804e6b7:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804e6be:	00 
 804e6bf:	8d 04 39             	lea    (%ecx,%edi,1),%eax
 804e6c2:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
 804e6c7:	89 44 24 28          	mov    %eax,0x28(%esp)
 804e6cb:	89 54 24 58          	mov    %edx,0x58(%esp)
 804e6cf:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%esp)
 804e6d6:	00 
 804e6d7:	0f 82 13 01 00 00    	jb     804e7f0 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd90>
 804e6dd:	0f 86 05 01 00 00    	jbe    804e7e8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd88>
 804e6e3:	8b 44 24 58          	mov    0x58(%esp),%eax
 804e6e7:	8b 54 24 5c          	mov    0x5c(%esp),%edx
 804e6eb:	89 44 24 14          	mov    %eax,0x14(%esp)
 804e6ef:	8b 44 24 28          	mov    0x28(%esp),%eax
 804e6f3:	89 54 24 18          	mov    %edx,0x18(%esp)
 804e6f7:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804e6fb:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804e6ff:	8d 83 a4 2d fd ff    	lea    -0x2d25c(%ebx),%eax
 804e705:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e709:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804e70f:	89 54 24 10          	mov    %edx,0x10(%esp)
 804e713:	c7 44 24 04 72 03 00 	movl   $0x372,0x4(%esp)
 804e71a:	00 
 804e71b:	89 04 24             	mov    %eax,(%esp)
 804e71e:	e8 8d 3c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e723:	8b 44 24 38          	mov    0x38(%esp),%eax
 804e727:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804e72b:	c7 44 24 14 00 80 00 	movl   $0x8000,0x14(%esp)
 804e732:	00 
 804e733:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e73a:	00 
 804e73b:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804e73f:	8d 83 d4 2d fd ff    	lea    -0x2d22c(%ebx),%eax
 804e745:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e749:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804e74f:	89 54 24 10          	mov    %edx,0x10(%esp)
 804e753:	c7 44 24 04 7c 03 00 	movl   $0x37c,0x4(%esp)
 804e75a:	00 
 804e75b:	89 04 24             	mov    %eax,(%esp)
 804e75e:	e8 4d 3c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e763:	90                   	nop
 804e764:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e768:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 804e76e:	3b 30                	cmp    (%eax),%esi
 804e770:	0f 86 62 f7 ff ff    	jbe    804ded8 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x478>
 804e776:	e9 3a f7 ff ff       	jmp    804deb5 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x455>
 804e77b:	90                   	nop
 804e77c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804e780:	8d 6f 0f             	lea    0xf(%edi),%ebp
 804e783:	31 d2                	xor    %edx,%edx
 804e785:	c1 ed 04             	shr    $0x4,%ebp
 804e788:	89 e8                	mov    %ebp,%eax
 804e78a:	e9 73 fd ff ff       	jmp    804e502 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xaa2>
 804e78f:	90                   	nop
 804e790:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 804e797:	00 
 804e798:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 804e79f:	00 
 804e7a0:	e9 ef fd ff ff       	jmp    804e594 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb34>
 804e7a5:	8b 44 24 38          	mov    0x38(%esp),%eax
 804e7a9:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804e7ad:	89 44 24 14          	mov    %eax,0x14(%esp)
 804e7b1:	8d 83 d0 33 fd ff    	lea    -0x2cc30(%ebx),%eax
 804e7b7:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e7bb:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804e7c1:	89 54 24 18          	mov    %edx,0x18(%esp)
 804e7c5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804e7cc:	00 
 804e7cd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804e7d4:	00 
 804e7d5:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)
 804e7dc:	00 
 804e7dd:	89 04 24             	mov    %eax,(%esp)
 804e7e0:	e8 cb 3b 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e7e5:	8d 76 00             	lea    0x0(%esi),%esi
 804e7e8:	39 d0                	cmp    %edx,%eax
 804e7ea:	0f 87 f3 fe ff ff    	ja     804e6e3 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xc83>
 804e7f0:	31 d2                	xor    %edx,%edx
 804e7f2:	89 c8                	mov    %ecx,%eax
 804e7f4:	f7 f6                	div    %esi
 804e7f6:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804e7fd:	00 
 804e7fe:	85 d2                	test   %edx,%edx
 804e800:	89 54 24 28          	mov    %edx,0x28(%esp)
 804e804:	0f 85 36 04 00 00    	jne    804ec40 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x11e0>
 804e80a:	89 c8                	mov    %ecx,%eax
 804e80c:	29 f0                	sub    %esi,%eax
 804e80e:	85 ed                	test   %ebp,%ebp
 804e810:	89 c6                	mov    %eax,%esi
 804e812:	89 78 08             	mov    %edi,0x8(%eax)
 804e815:	8b 44 24 38          	mov    0x38(%esp),%eax
 804e819:	89 6e 04             	mov    %ebp,0x4(%esi)
 804e81c:	89 06                	mov    %eax,(%esi)
 804e81e:	0f 84 22 03 00 00    	je     804eb46 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x10e6>
 804e824:	0f bd c5             	bsr    %ebp,%eax
 804e827:	31 d2                	xor    %edx,%edx
 804e829:	83 f0 1f             	xor    $0x1f,%eax
 804e82c:	c7 44 24 28 1f 00 00 	movl   $0x1f,0x28(%esp)
 804e833:	00 
 804e834:	29 44 24 28          	sub    %eax,0x28(%esp)
 804e838:	83 7c 24 28 3f       	cmpl   $0x3f,0x28(%esp)
 804e83d:	8b 44 24 28          	mov    0x28(%esp),%eax
 804e841:	76 15                	jbe    804e858 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xdf8>
 804e843:	c7 44 24 14 40 00 00 	movl   $0x40,0x14(%esp)
 804e84a:	00 
 804e84b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e852:	00 
 804e853:	e9 7a f9 ff ff       	jmp    804e1d2 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x772>
 804e858:	b8 01 00 00 00       	mov    $0x1,%eax
 804e85d:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804e863:	84 c0                	test   %al,%al
 804e865:	74 16                	je     804e87d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xe1d>
 804e867:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804e86d:	89 04 24             	mov    %eax,(%esp)
 804e870:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804e874:	e8 b7 0b 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804e879:	8b 4c 24 38          	mov    0x38(%esp),%ecx
 804e87d:	8b 83 a8 b9 02 00    	mov    0x2b9a8(%ebx),%eax
 804e883:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 804e88a:	00 
 804e88b:	8d 50 01             	lea    0x1(%eax),%edx
 804e88e:	3d ff 7f 00 00       	cmp    $0x7fff,%eax
 804e893:	89 93 a8 b9 02 00    	mov    %edx,0x2b9a8(%ebx)
 804e899:	89 44 24 38          	mov    %eax,0x38(%esp)
 804e89d:	0f 87 80 fe ff ff    	ja     804e723 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xcc3>
 804e8a3:	89 46 0c             	mov    %eax,0xc(%esi)
 804e8a6:	89 b4 83 a8 b9 00 00 	mov    %esi,0xb9a8(%ebx,%eax,4)
 804e8ad:	8b 83 b4 b9 02 00    	mov    0x2b9b4(%ebx),%eax
 804e8b3:	8b b3 b8 b9 02 00    	mov    0x2b9b8(%ebx),%esi
 804e8b9:	83 83 ac b9 02 00 01 	addl   $0x1,0x2b9ac(%ebx)
 804e8c0:	01 e8                	add    %ebp,%eax
 804e8c2:	39 f0                	cmp    %esi,%eax
 804e8c4:	89 83 b4 b9 02 00    	mov    %eax,0x2b9b4(%ebx)
 804e8ca:	0f 42 c6             	cmovb  %esi,%eax
 804e8cd:	89 83 b8 b9 02 00    	mov    %eax,0x2b9b8(%ebx)
 804e8d3:	8b 44 24 28          	mov    0x28(%esp),%eax
 804e8d7:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804e8de:	00 
 804e8df:	89 6c 24 28          	mov    %ebp,0x28(%esp)
 804e8e3:	83 84 83 bc b9 02 00 	addl   $0x1,0x2b9bc(%ebx,%eax,4)
 804e8ea:	01 
 804e8eb:	8b 83 c8 ba 02 00    	mov    0x2bac8(%ebx),%eax
 804e8f1:	8b 93 cc ba 02 00    	mov    0x2bacc(%ebx),%edx
 804e8f7:	03 44 24 28          	add    0x28(%esp),%eax
 804e8fb:	13 54 24 2c          	adc    0x2c(%esp),%edx
 804e8ff:	89 83 c8 ba 02 00    	mov    %eax,0x2bac8(%ebx)
 804e905:	89 93 cc ba 02 00    	mov    %edx,0x2bacc(%ebx)
 804e90b:	8b 83 d8 ba 02 00    	mov    0x2bad8(%ebx),%eax
 804e911:	8b 93 dc ba 02 00    	mov    0x2badc(%ebx),%edx
 804e917:	03 44 24 28          	add    0x28(%esp),%eax
 804e91b:	13 54 24 2c          	adc    0x2c(%esp),%edx
 804e91f:	89 83 d8 ba 02 00    	mov    %eax,0x2bad8(%ebx)
 804e925:	89 93 dc ba 02 00    	mov    %edx,0x2badc(%ebx)
 804e92b:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804e932:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804e936:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804e93a:	e9 55 fc ff ff       	jmp    804e594 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb34>
 804e93f:	8b 44 24 40          	mov    0x40(%esp),%eax
 804e943:	8b 7c 24 30          	mov    0x30(%esp),%edi
 804e947:	8b 6c 24 34          	mov    0x34(%esp),%ebp
 804e94b:	8b 54 24 44          	mov    0x44(%esp),%edx
 804e94f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804e953:	8d 83 44 34 fd ff    	lea    -0x2cbbc(%ebx),%eax
 804e959:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e95d:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804e963:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804e967:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804e96b:	89 54 24 10          	mov    %edx,0x10(%esp)
 804e96f:	c7 44 24 04 6c 01 00 	movl   $0x16c,0x4(%esp)
 804e976:	00 
 804e977:	89 04 24             	mov    %eax,(%esp)
 804e97a:	e8 31 3a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e97f:	8d 83 f5 2c fd ff    	lea    -0x2d30b(%ebx),%eax
 804e985:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e989:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804e98f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804e996:	00 
 804e997:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e99e:	00 
 804e99f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804e9a6:	00 
 804e9a7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804e9ae:	00 
 804e9af:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)
 804e9b6:	00 
 804e9b7:	89 04 24             	mov    %eax,(%esp)
 804e9ba:	e8 f1 39 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e9bf:	8d 83 40 33 fd ff    	lea    -0x2ccc0(%ebx),%eax
 804e9c5:	89 44 24 08          	mov    %eax,0x8(%esp)
 804e9c9:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804e9cf:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804e9d6:	00 
 804e9d7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804e9de:	00 
 804e9df:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804e9e6:	00 
 804e9e7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804e9ee:	00 
 804e9ef:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)
 804e9f6:	00 
 804e9f7:	89 04 24             	mov    %eax,(%esp)
 804e9fa:	e8 b1 39 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804e9ff:	8d 83 64 33 fd ff    	lea    -0x2cc9c(%ebx),%eax
 804ea05:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ea09:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804ea0f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ea16:	00 
 804ea17:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ea1e:	00 
 804ea1f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804ea26:	00 
 804ea27:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ea2e:	00 
 804ea2f:	c7 44 24 04 4a 01 00 	movl   $0x14a,0x4(%esp)
 804ea36:	00 
 804ea37:	89 04 24             	mov    %eax,(%esp)
 804ea3a:	e8 71 39 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ea3f:	89 e8                	mov    %ebp,%eax
 804ea41:	e9 07 f5 ff ff       	jmp    804df4d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x4ed>
 804ea46:	8d 83 cc 34 fd ff    	lea    -0x2cb34(%ebx),%eax
 804ea4c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ea50:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804ea56:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ea5d:	00 
 804ea5e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ea65:	00 
 804ea66:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804ea6d:	00 
 804ea6e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ea75:	00 
 804ea76:	c7 44 24 04 7a 01 00 	movl   $0x17a,0x4(%esp)
 804ea7d:	00 
 804ea7e:	89 04 24             	mov    %eax,(%esp)
 804ea81:	e8 2a 39 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ea86:	8d 83 a0 34 fd ff    	lea    -0x2cb60(%ebx),%eax
 804ea8c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ea90:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804ea96:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ea9d:	00 
 804ea9e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804eaa5:	00 
 804eaa6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804eaad:	00 
 804eaae:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804eab5:	00 
 804eab6:	c7 44 24 04 78 01 00 	movl   $0x178,0x4(%esp)
 804eabd:	00 
 804eabe:	89 04 24             	mov    %eax,(%esp)
 804eac1:	e8 ea 38 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804eac6:	8d 83 79 2d fd ff    	lea    -0x2d287(%ebx),%eax
 804eacc:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ead0:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804ead6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804eadd:	00 
 804eade:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804eae5:	00 
 804eae6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804eaed:	00 
 804eaee:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804eaf5:	00 
 804eaf6:	c7 44 24 04 09 03 00 	movl   $0x309,0x4(%esp)
 804eafd:	00 
 804eafe:	89 04 24             	mov    %eax,(%esp)
 804eb01:	e8 aa 38 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804eb06:	8b 44 24 38          	mov    0x38(%esp),%eax
 804eb0a:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804eb0e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804eb15:	00 
 804eb16:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804eb1d:	00 
 804eb1e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804eb22:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804eb28:	89 44 24 08          	mov    %eax,0x8(%esp)
 804eb2c:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804eb32:	89 54 24 10          	mov    %edx,0x10(%esp)
 804eb36:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804eb3d:	00 
 804eb3e:	89 04 24             	mov    %eax,(%esp)
 804eb41:	e8 6a 38 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804eb46:	8d 83 c2 2d fd ff    	lea    -0x2d23e(%ebx),%eax
 804eb4c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804eb50:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 804eb56:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804eb5d:	00 
 804eb5e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804eb65:	00 
 804eb66:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804eb6d:	00 
 804eb6e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804eb75:	00 
 804eb76:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)
 804eb7d:	00 
 804eb7e:	89 04 24             	mov    %eax,(%esp)
 804eb81:	e8 2a 38 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804eb86:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804eb8d:	00 
 804eb8e:	8b 44 24 30          	mov    0x30(%esp),%eax
 804eb92:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804eb99:	00 
 804eb9a:	8b 54 24 34          	mov    0x34(%esp),%edx
 804eb9e:	e9 7b ff ff ff       	jmp    804eb1e <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x10be>
 804eba3:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 804eba9:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ebad:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 804ebb3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ebba:	00 
 804ebbb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ebc2:	00 
 804ebc3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804ebca:	00 
 804ebcb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ebd2:	00 
 804ebd3:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 804ebda:	00 
 804ebdb:	89 04 24             	mov    %eax,(%esp)
 804ebde:	e8 cd 37 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ebe3:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804ebe9:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ebed:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804ebf3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ebfa:	00 
 804ebfb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ec02:	00 
 804ec03:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804ec0a:	00 
 804ec0b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ec12:	00 
 804ec13:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804ec1a:	00 
 804ec1b:	89 04 24             	mov    %eax,(%esp)
 804ec1e:	e8 8d 37 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ec23:	8d 83 a0 b9 00 00    	lea    0xb9a0(%ebx),%eax
 804ec29:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ec2d:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 804ec31:	89 0c 24             	mov    %ecx,(%esp)
 804ec34:	e8 b7 0c 00 00       	call   804f8f0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m>
 804ec39:	8b 06                	mov    (%esi),%eax
 804ec3b:	e9 40 f0 ff ff       	jmp    804dc80 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x220>
 804ec40:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ec47:	00 
 804ec48:	8b 44 24 28          	mov    0x28(%esp),%eax
 804ec4c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ec53:	00 
 804ec54:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804ec58:	e9 c1 fe ff ff       	jmp    804eb1e <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0x10be>
 804ec5d:	8d 83 a0 b9 00 00    	lea    0xb9a0(%ebx),%eax
 804ec63:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ec67:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 804ec6b:	89 14 24             	mov    %edx,(%esp)
 804ec6e:	e8 7d 0c 00 00       	call   804f8f0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m>
 804ec73:	8b 06                	mov    (%esi),%eax
 804ec75:	e9 03 f9 ff ff       	jmp    804e57d <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xb1d>
 804ec7a:	8b 44 24 28          	mov    0x28(%esp),%eax
 804ec7e:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804ec82:	e9 26 fb ff ff       	jmp    804e7ad <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE+0xd4d>
 804ec87:	89 f6                	mov    %esi,%esi
 804ec89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804ec90 <_ZN6__asan13asan_memalignEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>:
 804ec90:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 804ec94:	8b 54 24 04          	mov    0x4(%esp),%edx
 804ec98:	8b 44 24 08          	mov    0x8(%esp),%eax
 804ec9c:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804eca0:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 804eca4:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 804eca8:	e9 b3 ed ff ff       	jmp    804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ecad:	8d 76 00             	lea    0x0(%esi),%esi

0804ecb0 <_ZN6__asan11asan_mallocEmPN11__sanitizer10StackTraceE>:
 804ecb0:	8b 54 24 08          	mov    0x8(%esp),%edx
 804ecb4:	8b 44 24 04          	mov    0x4(%esp),%eax
 804ecb8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 804ecbf:	00 
 804ecc0:	89 54 24 04          	mov    %edx,0x4(%esp)
 804ecc4:	ba 08 00 00 00       	mov    $0x8,%edx
 804ecc9:	e9 92 ed ff ff       	jmp    804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ecce:	66 90                	xchg   %ax,%ax

0804ecd0 <_ZN6__asan11asan_callocEmmPN11__sanitizer10StackTraceE>:
 804ecd0:	55                   	push   %ebp
 804ecd1:	57                   	push   %edi
 804ecd2:	31 ff                	xor    %edi,%edi
 804ecd4:	56                   	push   %esi
 804ecd5:	53                   	push   %ebx
 804ecd6:	83 ec 1c             	sub    $0x1c,%esp
 804ecd9:	e8 12 ae ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ecde:	81 c3 22 13 06 00    	add    $0x61322,%ebx
 804ece4:	8b 74 24 30          	mov    0x30(%esp),%esi
 804ece8:	8b 6c 24 34          	mov    0x34(%esp),%ebp
 804ecec:	89 74 24 04          	mov    %esi,0x4(%esp)
 804ecf0:	89 2c 24             	mov    %ebp,(%esp)
 804ecf3:	e8 f8 34 01 00       	call   80621f0 <_ZN11__sanitizer35CallocShouldReturnNullDueToOverflowEmm>
 804ecf8:	84 c0                	test   %al,%al
 804ecfa:	75 3d                	jne    804ed39 <_ZN6__asan11asan_callocEmmPN11__sanitizer10StackTraceE+0x69>
 804ecfc:	0f af f5             	imul   %ebp,%esi
 804ecff:	8b 44 24 38          	mov    0x38(%esp),%eax
 804ed03:	ba 08 00 00 00       	mov    $0x8,%edx
 804ed08:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804ed0f:	00 
 804ed10:	89 04 24             	mov    %eax,(%esp)
 804ed13:	89 f0                	mov    %esi,%eax
 804ed15:	e8 46 ed ff ff       	call   804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ed1a:	85 c0                	test   %eax,%eax
 804ed1c:	89 c5                	mov    %eax,%ebp
 804ed1e:	74 19                	je     804ed39 <_ZN6__asan11asan_callocEmmPN11__sanitizer10StackTraceE+0x69>
 804ed20:	89 04 24             	mov    %eax,(%esp)
 804ed23:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 804ed29:	89 ef                	mov    %ebp,%edi
 804ed2b:	89 74 24 08          	mov    %esi,0x8(%esp)
 804ed2f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804ed36:	00 
 804ed37:	ff 10                	call   *(%eax)
 804ed39:	83 c4 1c             	add    $0x1c,%esp
 804ed3c:	89 f8                	mov    %edi,%eax
 804ed3e:	5b                   	pop    %ebx
 804ed3f:	5e                   	pop    %esi
 804ed40:	5f                   	pop    %edi
 804ed41:	5d                   	pop    %ebp
 804ed42:	c3                   	ret    
 804ed43:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804ed49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804ed50 <_ZN6__asan11asan_vallocEmPN11__sanitizer10StackTraceE>:
 804ed50:	57                   	push   %edi
 804ed51:	56                   	push   %esi
 804ed52:	53                   	push   %ebx
 804ed53:	8b 74 24 10          	mov    0x10(%esp),%esi
 804ed57:	e8 94 ad ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ed5c:	81 c3 a4 12 06 00    	add    $0x612a4,%ebx
 804ed62:	8b 7c 24 14          	mov    0x14(%esp),%edi
 804ed66:	e8 a5 34 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804ed6b:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
 804ed72:	00 
 804ed73:	89 7c 24 10          	mov    %edi,0x10(%esp)
 804ed77:	5b                   	pop    %ebx
 804ed78:	89 c2                	mov    %eax,%edx
 804ed7a:	89 f0                	mov    %esi,%eax
 804ed7c:	5e                   	pop    %esi
 804ed7d:	5f                   	pop    %edi
 804ed7e:	e9 dd ec ff ff       	jmp    804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ed83:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804ed89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804ed90 <_ZN6__asan12asan_pvallocEmPN11__sanitizer10StackTraceE>:
 804ed90:	57                   	push   %edi
 804ed91:	56                   	push   %esi
 804ed92:	53                   	push   %ebx
 804ed93:	e8 58 ad ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ed98:	81 c3 68 12 06 00    	add    $0x61268,%ebx
 804ed9e:	83 ec 20             	sub    $0x20,%esp
 804eda1:	8b 7c 24 30          	mov    0x30(%esp),%edi
 804eda5:	8b 74 24 34          	mov    0x34(%esp),%esi
 804eda9:	e8 62 34 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 804edae:	89 c2                	mov    %eax,%edx
 804edb0:	8d 40 ff             	lea    -0x1(%eax),%eax
 804edb3:	85 d0                	test   %edx,%eax
 804edb5:	75 24                	jne    804eddb <_ZN6__asan12asan_pvallocEmPN11__sanitizer10StackTraceE+0x4b>
 804edb7:	89 d1                	mov    %edx,%ecx
 804edb9:	8d 44 3a ff          	lea    -0x1(%edx,%edi,1),%eax
 804edbd:	f7 d9                	neg    %ecx
 804edbf:	21 c8                	and    %ecx,%eax
 804edc1:	89 74 24 30          	mov    %esi,0x30(%esp)
 804edc5:	0f 44 c2             	cmove  %edx,%eax
 804edc8:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%esp)
 804edcf:	00 
 804edd0:	83 c4 20             	add    $0x20,%esp
 804edd3:	5b                   	pop    %ebx
 804edd4:	5e                   	pop    %esi
 804edd5:	5f                   	pop    %edi
 804edd6:	e9 85 ec ff ff       	jmp    804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804eddb:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 804ede1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ede5:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 804edeb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804edf2:	00 
 804edf3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804edfa:	00 
 804edfb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804ee02:	00 
 804ee03:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ee0a:	00 
 804ee0b:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 804ee12:	00 
 804ee13:	89 04 24             	mov    %eax,(%esp)
 804ee16:	e8 95 35 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804ee1b:	90                   	nop
 804ee1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0804ee20 <_ZN6__asan19asan_posix_memalignEPPvmmPN11__sanitizer10StackTraceE>:
 804ee20:	56                   	push   %esi
 804ee21:	53                   	push   %ebx
 804ee22:	83 ec 24             	sub    $0x24,%esp
 804ee25:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 804ee29:	e8 c2 ac ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ee2e:	81 c3 d2 11 06 00    	add    $0x611d2,%ebx
 804ee34:	8b 74 24 34          	mov    0x34(%esp),%esi
 804ee38:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804ee3f:	00 
 804ee40:	89 04 24             	mov    %eax,(%esp)
 804ee43:	8b 44 24 38          	mov    0x38(%esp),%eax
 804ee47:	89 f2                	mov    %esi,%edx
 804ee49:	83 ee 01             	sub    $0x1,%esi
 804ee4c:	e8 0f ec ff ff       	call   804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ee51:	85 f0                	test   %esi,%eax
 804ee53:	75 0e                	jne    804ee63 <_ZN6__asan19asan_posix_memalignEPPvmmPN11__sanitizer10StackTraceE+0x43>
 804ee55:	8b 54 24 30          	mov    0x30(%esp),%edx
 804ee59:	89 02                	mov    %eax,(%edx)
 804ee5b:	83 c4 24             	add    $0x24,%esp
 804ee5e:	31 c0                	xor    %eax,%eax
 804ee60:	5b                   	pop    %ebx
 804ee61:	5e                   	pop    %esi
 804ee62:	c3                   	ret    
 804ee63:	8d 83 fc 34 fd ff    	lea    -0x2cb04(%ebx),%eax
 804ee69:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ee6d:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804ee73:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804ee7a:	00 
 804ee7b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804ee82:	00 
 804ee83:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804ee8a:	00 
 804ee8b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804ee92:	00 
 804ee93:	c7 44 24 04 7d 02 00 	movl   $0x27d,0x4(%esp)
 804ee9a:	00 
 804ee9b:	89 04 24             	mov    %eax,(%esp)
 804ee9e:	e8 0d 35 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804eea3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804eea9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0804eeb0 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE>:
 804eeb0:	55                   	push   %ebp
 804eeb1:	57                   	push   %edi
 804eeb2:	56                   	push   %esi
 804eeb3:	53                   	push   %ebx
 804eeb4:	83 ec 4c             	sub    $0x4c,%esp
 804eeb7:	8b 6c 24 60          	mov    0x60(%esp),%ebp
 804eebb:	8b 44 24 68          	mov    0x68(%esp),%eax
 804eebf:	e8 2c ac ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804eec4:	81 c3 3c 11 06 00    	add    $0x6113c,%ebx
 804eeca:	8b 7c 24 64          	mov    0x64(%esp),%edi
 804eece:	85 ed                	test   %ebp,%ebp
 804eed0:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 804eed4:	0f 84 86 02 00 00    	je     804f160 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x2b0>
 804eeda:	85 ff                	test   %edi,%edi
 804eedc:	0f 84 0e 01 00 00    	je     804eff0 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x140>
 804eee2:	e8 89 aa 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804eee7:	8d 75 f0             	lea    -0x10(%ebp),%esi
 804eeea:	89 04 24             	mov    %eax,(%esp)
 804eeed:	e8 5e ae 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804eef2:	83 40 20 01          	addl   $0x1,0x20(%eax)
 804eef6:	01 78 24             	add    %edi,0x24(%eax)
 804eef9:	80 7d f0 02          	cmpb   $0x2,-0x10(%ebp)
 804eefd:	0f 85 e6 03 00 00    	jne    804f2e9 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x439>
 804ef03:	8b 46 08             	mov    0x8(%esi),%eax
 804ef06:	3d 00 00 02 00       	cmp    $0x20000,%eax
 804ef0b:	74 63                	je     804ef70 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0xc0>
 804ef0d:	39 f8                	cmp    %edi,%eax
 804ef0f:	ba 08 00 00 00       	mov    $0x8,%edx
 804ef14:	0f 47 c7             	cmova  %edi,%eax
 804ef17:	89 c6                	mov    %eax,%esi
 804ef19:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 804ef1d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804ef24:	00 
 804ef25:	89 04 24             	mov    %eax,(%esp)
 804ef28:	89 f8                	mov    %edi,%eax
 804ef2a:	e8 31 eb ff ff       	call   804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ef2f:	85 c0                	test   %eax,%eax
 804ef31:	89 c7                	mov    %eax,%edi
 804ef33:	74 2f                	je     804ef64 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0xb4>
 804ef35:	8d 83 3c bb 02 00    	lea    0x2bb3c(%ebx),%eax
 804ef3b:	8b 00                	mov    (%eax),%eax
 804ef3d:	85 c0                	test   %eax,%eax
 804ef3f:	0f 84 e4 03 00 00    	je     804f329 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x479>
 804ef45:	89 74 24 08          	mov    %esi,0x8(%esp)
 804ef49:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 804ef4d:	89 3c 24             	mov    %edi,(%esp)
 804ef50:	ff d0                	call   *%eax
 804ef52:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804ef56:	89 e8                	mov    %ebp,%eax
 804ef58:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804ef5f:	e8 bc db ff ff       	call   804cb20 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804ef64:	89 f8                	mov    %edi,%eax
 804ef66:	83 c4 4c             	add    $0x4c,%esp
 804ef69:	5b                   	pop    %ebx
 804ef6a:	5e                   	pop    %esi
 804ef6b:	5f                   	pop    %edi
 804ef6c:	5d                   	pop    %ebp
 804ef6d:	c3                   	ret    
 804ef6e:	66 90                	xchg   %ax,%ax
 804ef70:	0f b6 46 07          	movzbl 0x7(%esi),%eax
 804ef74:	a8 01                	test   $0x1,%al
 804ef76:	0f 85 94 00 00 00    	jne    804f010 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x160>
 804ef7c:	c0 e8 03             	shr    $0x3,%al
 804ef7f:	83 e0 07             	and    $0x7,%eax
 804ef82:	e8 39 ac ff ff       	call   8049bc0 <_ZN6__asanL10RZLog2SizeEj>
 804ef87:	8b 8b a0 b9 00 00    	mov    0xb9a0(%ebx),%ecx
 804ef8d:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804ef91:	89 e9                	mov    %ebp,%ecx
 804ef93:	29 c1                	sub    %eax,%ecx
 804ef95:	89 c8                	mov    %ecx,%eax
 804ef97:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804ef9b:	c1 e8 14             	shr    $0x14,%eax
 804ef9e:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 804efa2:	0f b6 14 01          	movzbl (%ecx,%eax,1),%edx
 804efa6:	84 d2                	test   %dl,%dl
 804efa8:	0f 85 5a 01 00 00    	jne    804f108 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x258>
 804efae:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804efb4:	8d 41 ff             	lea    -0x1(%ecx),%eax
 804efb7:	85 44 24 20          	test   %eax,0x20(%esp)
 804efbb:	0f 85 28 04 00 00    	jne    804f3e9 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x539>
 804efc1:	8b 44 24 20          	mov    0x20(%esp),%eax
 804efc5:	31 d2                	xor    %edx,%edx
 804efc7:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804efce:	00 
 804efcf:	f7 f1                	div    %ecx
 804efd1:	85 d2                	test   %edx,%edx
 804efd3:	89 54 24 30          	mov    %edx,0x30(%esp)
 804efd7:	0f 85 cc 03 00 00    	jne    804f3a9 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x4f9>
 804efdd:	8b 44 24 20          	mov    0x20(%esp),%eax
 804efe1:	29 c8                	sub    %ecx,%eax
 804efe3:	8d 48 10             	lea    0x10(%eax),%ecx
 804efe6:	8b 01                	mov    (%ecx),%eax
 804efe8:	e9 20 ff ff ff       	jmp    804ef0d <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x5d>
 804efed:	8d 76 00             	lea    0x0(%esi),%esi
 804eff0:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804eff4:	89 e8                	mov    %ebp,%eax
 804eff6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804effd:	e8 1e db ff ff       	call   804cb20 <_ZN6__asanL10DeallocateEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804f002:	31 c0                	xor    %eax,%eax
 804f004:	e9 5d ff ff ff       	jmp    804ef66 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0xb6>
 804f009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804f010:	8b 83 a0 b9 00 00    	mov    0xb9a0(%ebx),%eax
 804f016:	89 c1                	mov    %eax,%ecx
 804f018:	89 44 24 30          	mov    %eax,0x30(%esp)
 804f01c:	89 f0                	mov    %esi,%eax
 804f01e:	c1 e8 14             	shr    $0x14,%eax
 804f021:	0f b6 04 01          	movzbl (%ecx,%eax,1),%eax
 804f025:	84 c0                	test   %al,%al
 804f027:	0f 85 ab 01 00 00    	jne    804f1d8 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x328>
 804f02d:	b8 01 00 00 00       	mov    $0x1,%eax
 804f032:	86 83 bc ba 02 00    	xchg   %al,0x2babc(%ebx)
 804f038:	84 c0                	test   %al,%al
 804f03a:	74 0e                	je     804f04a <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x19a>
 804f03c:	8d 83 bc ba 02 00    	lea    0x2babc(%ebx),%eax
 804f042:	89 04 24             	mov    %eax,(%esp)
 804f045:	e8 e6 03 00 00       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804f04a:	8b 83 a8 b9 02 00    	mov    0x2b9a8(%ebx),%eax
 804f050:	85 c0                	test   %eax,%eax
 804f052:	89 44 24 20          	mov    %eax,0x20(%esp)
 804f056:	0f 84 86 02 00 00    	je     804f2e2 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x432>
 804f05c:	8d 93 a8 b9 00 00    	lea    0xb9a8(%ebx),%edx
 804f062:	31 c9                	xor    %ecx,%ecx
 804f064:	8d 04 82             	lea    (%edx,%eax,4),%eax
 804f067:	89 7c 24 3c          	mov    %edi,0x3c(%esp)
 804f06b:	89 c7                	mov    %eax,%edi
 804f06d:	89 6c 24 38          	mov    %ebp,0x38(%esp)
 804f071:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804f078:	8b 02                	mov    (%edx),%eax
 804f07a:	39 c6                	cmp    %eax,%esi
 804f07c:	72 13                	jb     804f091 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x1e1>
 804f07e:	89 f5                	mov    %esi,%ebp
 804f080:	29 c5                	sub    %eax,%ebp
 804f082:	89 6c 24 20          	mov    %ebp,0x20(%esp)
 804f086:	89 f5                	mov    %esi,%ebp
 804f088:	29 cd                	sub    %ecx,%ebp
 804f08a:	39 6c 24 20          	cmp    %ebp,0x20(%esp)
 804f08e:	0f 42 c8             	cmovb  %eax,%ecx
 804f091:	83 c2 04             	add    $0x4,%edx
 804f094:	39 fa                	cmp    %edi,%edx
 804f096:	75 e0                	jne    804f078 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x1c8>
 804f098:	85 c9                	test   %ecx,%ecx
 804f09a:	8b 6c 24 38          	mov    0x38(%esp),%ebp
 804f09e:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804f0a2:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
 804f0a6:	0f 84 7a 01 00 00    	je     804f226 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x376>
 804f0ac:	8b 01                	mov    (%ecx),%eax
 804f0ae:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804f0b2:	31 c9                	xor    %ecx,%ecx
 804f0b4:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804f0bb:	00 
 804f0bc:	83 7c 24 24 00       	cmpl   $0x0,0x24(%esp)
 804f0c1:	89 c2                	mov    %eax,%edx
 804f0c3:	0f 87 c0 00 00 00    	ja     804f189 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x2d9>
 804f0c9:	0f 83 b0 00 00 00    	jae    804f17f <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x2cf>
 804f0cf:	8b 44 24 20          	mov    0x20(%esp),%eax
 804f0d3:	89 54 24 14          	mov    %edx,0x14(%esp)
 804f0d7:	8b 54 24 24          	mov    0x24(%esp),%edx
 804f0db:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804f0df:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)
 804f0e6:	00 
 804f0e7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f0eb:	8d 83 f4 2e fd ff    	lea    -0x2d10c(%ebx),%eax
 804f0f1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f0f5:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f0fb:	89 54 24 10          	mov    %edx,0x10(%esp)
 804f0ff:	89 04 24             	mov    %eax,(%esp)
 804f102:	e8 a9 32 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f107:	90                   	nop
 804f108:	8b 44 24 20          	mov    0x20(%esp),%eax
 804f10c:	89 d6                	mov    %edx,%esi
 804f10e:	c1 e6 04             	shl    $0x4,%esi
 804f111:	25 00 00 f0 ff       	and    $0xfff00000,%eax
 804f116:	83 fa 10             	cmp    $0x10,%edx
 804f119:	89 44 24 30          	mov    %eax,0x30(%esp)
 804f11d:	76 1c                	jbe    804f13b <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x28b>
 804f11f:	83 ea 10             	sub    $0x10,%edx
 804f122:	b8 00 01 00 00       	mov    $0x100,%eax
 804f127:	89 d1                	mov    %edx,%ecx
 804f129:	83 e2 07             	and    $0x7,%edx
 804f12c:	c1 e9 03             	shr    $0x3,%ecx
 804f12f:	d3 e0                	shl    %cl,%eax
 804f131:	89 c6                	mov    %eax,%esi
 804f133:	c1 ee 03             	shr    $0x3,%esi
 804f136:	0f af f2             	imul   %edx,%esi
 804f139:	01 c6                	add    %eax,%esi
 804f13b:	8b 44 24 30          	mov    0x30(%esp),%eax
 804f13f:	8b 54 24 20          	mov    0x20(%esp),%edx
 804f143:	8d 88 00 00 10 00    	lea    0x100000(%eax),%ecx
 804f149:	29 c2                	sub    %eax,%edx
 804f14b:	89 d0                	mov    %edx,%eax
 804f14d:	31 d2                	xor    %edx,%edx
 804f14f:	f7 f6                	div    %esi
 804f151:	83 c0 01             	add    $0x1,%eax
 804f154:	c1 e0 04             	shl    $0x4,%eax
 804f157:	29 c1                	sub    %eax,%ecx
 804f159:	8b 01                	mov    (%ecx),%eax
 804f15b:	e9 ad fd ff ff       	jmp    804ef0d <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x5d>
 804f160:	89 44 24 60          	mov    %eax,0x60(%esp)
 804f164:	89 f8                	mov    %edi,%eax
 804f166:	ba 08 00 00 00       	mov    $0x8,%edx
 804f16b:	c7 44 24 64 01 00 00 	movl   $0x1,0x64(%esp)
 804f172:	00 
 804f173:	83 c4 4c             	add    $0x4c,%esp
 804f176:	5b                   	pop    %ebx
 804f177:	5e                   	pop    %esi
 804f178:	5f                   	pop    %edi
 804f179:	5d                   	pop    %ebp
 804f17a:	e9 e1 e8 ff ff       	jmp    804da60 <_ZN6__asanL8AllocateEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 804f17f:	39 44 24 20          	cmp    %eax,0x20(%esp)
 804f183:	0f 82 46 ff ff ff    	jb     804f0cf <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x21f>
 804f189:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 804f18d:	03 41 04             	add    0x4(%ecx),%eax
 804f190:	31 c9                	xor    %ecx,%ecx
 804f192:	83 7c 24 24 00       	cmpl   $0x0,0x24(%esp)
 804f197:	89 c2                	mov    %eax,%edx
 804f199:	0f 86 ae 00 00 00    	jbe    804f24d <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x39d>
 804f19f:	8b 44 24 20          	mov    0x20(%esp),%eax
 804f1a3:	89 54 24 14          	mov    %edx,0x14(%esp)
 804f1a7:	8b 54 24 24          	mov    0x24(%esp),%edx
 804f1ab:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804f1af:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)
 804f1b6:	00 
 804f1b7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f1bb:	8d 83 18 2f fd ff    	lea    -0x2d0e8(%ebx),%eax
 804f1c1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f1c5:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f1cb:	89 54 24 10          	mov    %edx,0x10(%esp)
 804f1cf:	89 04 24             	mov    %eax,(%esp)
 804f1d2:	e8 d9 31 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f1d7:	90                   	nop
 804f1d8:	89 f1                	mov    %esi,%ecx
 804f1da:	81 e1 00 00 f0 ff    	and    $0xfff00000,%ecx
 804f1e0:	83 f8 10             	cmp    $0x10,%eax
 804f1e3:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804f1e7:	76 5d                	jbe    804f246 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x396>
 804f1e9:	83 e8 10             	sub    $0x10,%eax
 804f1ec:	ba 00 01 00 00       	mov    $0x100,%edx
 804f1f1:	89 c1                	mov    %eax,%ecx
 804f1f3:	83 e0 07             	and    $0x7,%eax
 804f1f6:	c1 e9 03             	shr    $0x3,%ecx
 804f1f9:	d3 e2                	shl    %cl,%edx
 804f1fb:	89 d1                	mov    %edx,%ecx
 804f1fd:	c1 e9 03             	shr    $0x3,%ecx
 804f200:	0f af c8             	imul   %eax,%ecx
 804f203:	01 d1                	add    %edx,%ecx
 804f205:	89 f0                	mov    %esi,%eax
 804f207:	8b 74 24 20          	mov    0x20(%esp),%esi
 804f20b:	31 d2                	xor    %edx,%edx
 804f20d:	29 f0                	sub    %esi,%eax
 804f20f:	f7 f1                	div    %ecx
 804f211:	89 f2                	mov    %esi,%edx
 804f213:	0f af c1             	imul   %ecx,%eax
 804f216:	01 c2                	add    %eax,%edx
 804f218:	89 d0                	mov    %edx,%eax
 804f21a:	c1 e8 14             	shr    $0x14,%eax
 804f21d:	89 54 24 20          	mov    %edx,0x20(%esp)
 804f221:	e9 78 fd ff ff       	jmp    804ef9e <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0xee>
 804f226:	31 c0                	xor    %eax,%eax
 804f228:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
 804f22f:	00 
 804f230:	c6 83 bc ba 02 00 00 	movb   $0x0,0x2babc(%ebx)
 804f237:	8b 8b a0 b9 00 00    	mov    0xb9a0(%ebx),%ecx
 804f23d:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804f241:	e9 58 fd ff ff       	jmp    804ef9e <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0xee>
 804f246:	c1 e0 04             	shl    $0x4,%eax
 804f249:	89 c1                	mov    %eax,%ecx
 804f24b:	eb b8                	jmp    804f205 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x355>
 804f24d:	39 44 24 20          	cmp    %eax,0x20(%esp)
 804f251:	0f 83 48 ff ff ff    	jae    804f19f <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x2ef>
 804f257:	31 c9                	xor    %ecx,%ecx
 804f259:	89 f2                	mov    %esi,%edx
 804f25b:	83 7c 24 24 00       	cmpl   $0x0,0x24(%esp)
 804f260:	76 3e                	jbe    804f2a0 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x3f0>
 804f262:	8b 44 24 20          	mov    0x20(%esp),%eax
 804f266:	89 54 24 14          	mov    %edx,0x14(%esp)
 804f26a:	8b 54 24 24          	mov    0x24(%esp),%edx
 804f26e:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 804f272:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)
 804f279:	00 
 804f27a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f27e:	8d 83 75 2c fd ff    	lea    -0x2d38b(%ebx),%eax
 804f284:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f288:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f28e:	89 54 24 10          	mov    %edx,0x10(%esp)
 804f292:	89 04 24             	mov    %eax,(%esp)
 804f295:	e8 16 31 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f29a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804f2a0:	39 74 24 20          	cmp    %esi,0x20(%esp)
 804f2a4:	77 bc                	ja     804f262 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x3b2>
 804f2a6:	39 c6                	cmp    %eax,%esi
 804f2a8:	0f 87 78 ff ff ff    	ja     804f226 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x376>
 804f2ae:	8b 8b a4 b9 00 00    	mov    0xb9a4(%ebx),%ecx
 804f2b4:	31 d2                	xor    %edx,%edx
 804f2b6:	8b 44 24 30          	mov    0x30(%esp),%eax
 804f2ba:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 804f2c1:	00 
 804f2c2:	f7 f1                	div    %ecx
 804f2c4:	85 d2                	test   %edx,%edx
 804f2c6:	89 54 24 20          	mov    %edx,0x20(%esp)
 804f2ca:	0f 85 99 00 00 00    	jne    804f369 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x4b9>
 804f2d0:	03 4c 24 30          	add    0x30(%esp),%ecx
 804f2d4:	89 c8                	mov    %ecx,%eax
 804f2d6:	89 4c 24 20          	mov    %ecx,0x20(%esp)
 804f2da:	c1 e8 14             	shr    $0x14,%eax
 804f2dd:	e9 4e ff ff ff       	jmp    804f230 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x380>
 804f2e2:	31 c0                	xor    %eax,%eax
 804f2e4:	e9 47 ff ff ff       	jmp    804f230 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE+0x380>
 804f2e9:	8d 83 28 35 fd ff    	lea    -0x2cad8(%ebx),%eax
 804f2ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f2f3:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804f2f9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804f300:	00 
 804f301:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f308:	00 
 804f309:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804f310:	00 
 804f311:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804f318:	00 
 804f319:	c7 44 24 04 e1 01 00 	movl   $0x1e1,0x4(%esp)
 804f320:	00 
 804f321:	89 04 24             	mov    %eax,(%esp)
 804f324:	e8 87 30 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f329:	8d 83 58 35 fd ff    	lea    -0x2caa8(%ebx),%eax
 804f32f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f333:	8d 83 10 2e fd ff    	lea    -0x2d1f0(%ebx),%eax
 804f339:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804f340:	00 
 804f341:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f348:	00 
 804f349:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804f350:	00 
 804f351:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804f358:	00 
 804f359:	c7 44 24 04 e6 01 00 	movl   $0x1e6,0x4(%esp)
 804f360:	00 
 804f361:	89 04 24             	mov    %eax,(%esp)
 804f364:	e8 47 30 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f369:	8b 44 24 20          	mov    0x20(%esp),%eax
 804f36d:	8b 54 24 24          	mov    0x24(%esp),%edx
 804f371:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804f378:	00 
 804f379:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f380:	00 
 804f381:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f385:	8d 83 4c 2f fd ff    	lea    -0x2d0b4(%ebx),%eax
 804f38b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f38f:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f395:	89 54 24 10          	mov    %edx,0x10(%esp)
 804f399:	c7 44 24 04 f3 03 00 	movl   $0x3f3,0x4(%esp)
 804f3a0:	00 
 804f3a1:	89 04 24             	mov    %eax,(%esp)
 804f3a4:	e8 07 30 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f3a9:	8b 44 24 30          	mov    0x30(%esp),%eax
 804f3ad:	8b 54 24 34          	mov    0x34(%esp),%edx
 804f3b1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804f3b8:	00 
 804f3b9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f3c0:	00 
 804f3c1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f3c5:	8d 83 ac 2c fd ff    	lea    -0x2d354(%ebx),%eax
 804f3cb:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f3cf:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f3d5:	89 54 24 10          	mov    %edx,0x10(%esp)
 804f3d9:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)
 804f3e0:	00 
 804f3e1:	89 04 24             	mov    %eax,(%esp)
 804f3e4:	e8 c7 2f 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f3e9:	8d 83 70 2f fd ff    	lea    -0x2d090(%ebx),%eax
 804f3ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f3f3:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f3f9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804f400:	00 
 804f401:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f408:	00 
 804f409:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804f410:	00 
 804f411:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804f418:	00 
 804f419:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)
 804f420:	00 
 804f421:	89 04 24             	mov    %eax,(%esp)
 804f424:	e8 87 2f 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f429:	66 90                	xchg   %ax,%ax
 804f42b:	66 90                	xchg   %ax,%ax
 804f42d:	66 90                	xchg   %ax,%ax
 804f42f:	90                   	nop

0804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
 804f430:	57                   	push   %edi
 804f431:	ba 01 00 00 00       	mov    $0x1,%edx
 804f436:	56                   	push   %esi
 804f437:	31 f6                	xor    %esi,%esi
 804f439:	53                   	push   %ebx
 804f43a:	e8 b1 a6 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804f43f:	81 c3 c1 0b 06 00    	add    $0x60bc1,%ebx
 804f445:	83 ec 10             	sub    $0x10,%esp
 804f448:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804f44c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f450:	83 fe 09             	cmp    $0x9,%esi
 804f453:	7f 32                	jg     804f487 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x57>
 804f455:	b8 0a 00 00 00       	mov    $0xa,%eax
 804f45a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804f460:	f3 90                	pause  
 804f462:	83 e8 01             	sub    $0x1,%eax
 804f465:	75 f9                	jne    804f460 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x30>
 804f467:	0f b6 07             	movzbl (%edi),%eax
 804f46a:	84 c0                	test   %al,%al
 804f46c:	74 0a                	je     804f478 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x48>
 804f46e:	83 c6 01             	add    $0x1,%esi
 804f471:	eb dd                	jmp    804f450 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>
 804f473:	90                   	nop
 804f474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f478:	89 d0                	mov    %edx,%eax
 804f47a:	86 07                	xchg   %al,(%edi)
 804f47c:	84 c0                	test   %al,%al
 804f47e:	75 ee                	jne    804f46e <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x3e>
 804f480:	83 c4 10             	add    $0x10,%esp
 804f483:	5b                   	pop    %ebx
 804f484:	5e                   	pop    %esi
 804f485:	5f                   	pop    %edi
 804f486:	c3                   	ret    
 804f487:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804f48b:	e8 70 5e 01 00       	call   8065300 <_ZN11__sanitizer20internal_sched_yieldEv>
 804f490:	8b 54 24 0c          	mov    0xc(%esp),%edx
 804f494:	eb d1                	jmp    804f467 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x37>
 804f496:	66 90                	xchg   %ax,%ax
 804f498:	66 90                	xchg   %ax,%ax
 804f49a:	66 90                	xchg   %ax,%ax
 804f49c:	66 90                	xchg   %ax,%ax
 804f49e:	66 90                	xchg   %ax,%ax

0804f4a0 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm>:
 804f4a0:	55                   	push   %ebp
 804f4a1:	31 d2                	xor    %edx,%edx
 804f4a3:	57                   	push   %edi
 804f4a4:	56                   	push   %esi
 804f4a5:	53                   	push   %ebx
 804f4a6:	83 ec 3c             	sub    $0x3c,%esp
 804f4a9:	e8 42 a6 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804f4ae:	81 c3 52 0b 06 00    	add    $0x60b52,%ebx
 804f4b4:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804f4b8:	83 7c 24 5c 58       	cmpl   $0x58,0x5c(%esp)
 804f4bd:	76 39                	jbe    804f4f8 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x58>
 804f4bf:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f4c3:	8d 83 90 2e fd ff    	lea    -0x2d170(%ebx),%eax
 804f4c9:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f4cd:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f4d3:	c7 44 24 14 59 00 00 	movl   $0x59,0x14(%esp)
 804f4da:	00 
 804f4db:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f4e2:	00 
 804f4e3:	89 54 24 10          	mov    %edx,0x10(%esp)
 804f4e7:	c7 44 24 04 5d 02 00 	movl   $0x25d,0x4(%esp)
 804f4ee:	00 
 804f4ef:	89 04 24             	mov    %eax,(%esp)
 804f4f2:	e8 b9 2e 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f4f7:	90                   	nop
 804f4f8:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804f4fc:	8d 70 40             	lea    0x40(%eax),%esi
 804f4ff:	8b 44 24 50          	mov    0x50(%esp),%eax
 804f503:	c1 e6 06             	shl    $0x6,%esi
 804f506:	03 30                	add    (%eax),%esi
 804f508:	b8 01 00 00 00       	mov    $0x1,%eax
 804f50d:	86 06                	xchg   %al,(%esi)
 804f50f:	84 c0                	test   %al,%al
 804f511:	74 08                	je     804f51b <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x7b>
 804f513:	89 34 24             	mov    %esi,(%esp)
 804f516:	e8 15 ff ff ff       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804f51b:	8b 56 04             	mov    0x4(%esi),%edx
 804f51e:	85 d2                	test   %edx,%edx
 804f520:	74 26                	je     804f548 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0xa8>
 804f522:	8b 46 08             	mov    0x8(%esi),%eax
 804f525:	8b 08                	mov    (%eax),%ecx
 804f527:	85 c9                	test   %ecx,%ecx
 804f529:	89 4e 08             	mov    %ecx,0x8(%esi)
 804f52c:	0f 84 16 02 00 00    	je     804f748 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x2a8>
 804f532:	83 ea 01             	sub    $0x1,%edx
 804f535:	89 56 04             	mov    %edx,0x4(%esi)
 804f538:	c6 06 00             	movb   $0x0,(%esi)
 804f53b:	83 c4 3c             	add    $0x3c,%esp
 804f53e:	5b                   	pop    %ebx
 804f53f:	5e                   	pop    %esi
 804f540:	5f                   	pop    %edi
 804f541:	5d                   	pop    %ebp
 804f542:	c3                   	ret    
 804f543:	90                   	nop
 804f544:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f548:	83 7c 24 5c 10       	cmpl   $0x10,0x5c(%esp)
 804f54d:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804f551:	0f 86 01 02 00 00    	jbe    804f758 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x2b8>
 804f557:	8d 50 f0             	lea    -0x10(%eax),%edx
 804f55a:	b8 00 01 00 00       	mov    $0x100,%eax
 804f55f:	89 d1                	mov    %edx,%ecx
 804f561:	83 e2 07             	and    $0x7,%edx
 804f564:	c1 e9 03             	shr    $0x3,%ecx
 804f567:	d3 e0                	shl    %cl,%eax
 804f569:	89 c1                	mov    %eax,%ecx
 804f56b:	c1 e9 03             	shr    $0x3,%ecx
 804f56e:	0f af ca             	imul   %edx,%ecx
 804f571:	01 c8                	add    %ecx,%eax
 804f573:	89 44 24 24          	mov    %eax,0x24(%esp)
 804f577:	8d 83 d6 2c fd ff    	lea    -0x2d32a(%ebx),%eax
 804f57d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f581:	c7 44 24 04 00 00 10 	movl   $0x100000,0x4(%esp)
 804f588:	00 
 804f589:	c7 04 24 00 00 10 00 	movl   $0x100000,(%esp)
 804f590:	e8 5b 31 01 00       	call   80626f0 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc>
 804f595:	c7 44 24 08 fa 00 00 	movl   $0xfa,0x8(%esp)
 804f59c:	00 
 804f59d:	c7 44 24 04 00 00 10 	movl   $0x100000,0x4(%esp)
 804f5a4:	00 
 804f5a5:	89 04 24             	mov    %eax,(%esp)
 804f5a8:	89 c7                	mov    %eax,%edi
 804f5aa:	e8 01 d5 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 804f5af:	e8 bc a3 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804f5b4:	89 04 24             	mov    %eax,(%esp)
 804f5b7:	e8 94 a7 00 00       	call   8059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>
 804f5bc:	8b 4c 24 54          	mov    0x54(%esp),%ecx
 804f5c0:	83 40 28 01          	addl   $0x1,0x28(%eax)
 804f5c4:	81 40 2c 00 00 10 00 	addl   $0x100000,0x2c(%eax)
 804f5cb:	8b 44 24 54          	mov    0x54(%esp),%eax
 804f5cf:	8b 50 1c             	mov    0x1c(%eax),%edx
 804f5d2:	8b 40 18             	mov    0x18(%eax),%eax
 804f5d5:	05 00 00 10 00       	add    $0x100000,%eax
 804f5da:	83 d2 00             	adc    $0x0,%edx
 804f5dd:	89 41 18             	mov    %eax,0x18(%ecx)
 804f5e0:	89 51 1c             	mov    %edx,0x1c(%ecx)
 804f5e3:	89 f9                	mov    %edi,%ecx
 804f5e5:	31 d2                	xor    %edx,%edx
 804f5e7:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
 804f5ed:	85 c9                	test   %ecx,%ecx
 804f5ef:	0f 85 90 02 00 00    	jne    804f885 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x3e5>
 804f5f5:	8b 44 24 50          	mov    0x50(%esp),%eax
 804f5f9:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804f600:	00 
 804f601:	8b 10                	mov    (%eax),%edx
 804f603:	89 f8                	mov    %edi,%eax
 804f605:	c1 e8 14             	shr    $0x14,%eax
 804f608:	0f b6 0c 02          	movzbl (%edx,%eax,1),%ecx
 804f60c:	85 c9                	test   %ecx,%ecx
 804f60e:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804f612:	0f 85 2d 02 00 00    	jne    804f845 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x3a5>
 804f618:	0f b6 4c 24 5c       	movzbl 0x5c(%esp),%ecx
 804f61d:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 804f624:	00 
 804f625:	88 0c 02             	mov    %cl,(%edx,%eax,1)
 804f628:	8b 44 24 24          	mov    0x24(%esp),%eax
 804f62c:	31 d2                	xor    %edx,%edx
 804f62e:	8d 48 10             	lea    0x10(%eax),%ecx
 804f631:	b8 00 00 10 00       	mov    $0x100000,%eax
 804f636:	f7 f1                	div    %ecx
 804f638:	89 c5                	mov    %eax,%ebp
 804f63a:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804f63e:	85 c0                	test   %eax,%eax
 804f640:	74 30                	je     804f672 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1d2>
 804f642:	83 7c 24 5c 10       	cmpl   $0x10,0x5c(%esp)
 804f647:	0f 87 cb 01 00 00    	ja     804f818 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x378>
 804f64d:	8b 4c 24 5c          	mov    0x5c(%esp),%ecx
 804f651:	c1 e1 04             	shl    $0x4,%ecx
 804f654:	31 d2                	xor    %edx,%edx
 804f656:	b8 00 40 00 00       	mov    $0x4000,%eax
 804f65b:	f7 f1                	div    %ecx
 804f65d:	b9 40 00 00 00       	mov    $0x40,%ecx
 804f662:	83 f8 40             	cmp    $0x40,%eax
 804f665:	77 07                	ja     804f66e <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1ce>
 804f667:	b1 01                	mov    $0x1,%cl
 804f669:	85 c0                	test   %eax,%eax
 804f66b:	0f 45 c8             	cmovne %eax,%ecx
 804f66e:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804f672:	0f af 6c 24 24       	imul   0x24(%esp),%ebp
 804f677:	31 c0                	xor    %eax,%eax
 804f679:	01 fd                	add    %edi,%ebp
 804f67b:	39 fd                	cmp    %edi,%ebp
 804f67d:	77 11                	ja     804f690 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1f0>
 804f67f:	e9 b9 01 00 00       	jmp    804f83d <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x39d>
 804f684:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f688:	03 7c 24 24          	add    0x24(%esp),%edi
 804f68c:	39 fd                	cmp    %edi,%ebp
 804f68e:	76 48                	jbe    804f6d8 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x238>
 804f690:	85 c0                	test   %eax,%eax
 804f692:	0f 84 d0 00 00 00    	je     804f768 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x2c8>
 804f698:	8b 48 04             	mov    0x4(%eax),%ecx
 804f69b:	8d 51 01             	lea    0x1(%ecx),%edx
 804f69e:	39 54 24 28          	cmp    %edx,0x28(%esp)
 804f6a2:	89 50 04             	mov    %edx,0x4(%eax)
 804f6a5:	89 7c 88 08          	mov    %edi,0x8(%eax,%ecx,4)
 804f6a9:	75 dd                	jne    804f688 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1e8>
 804f6ab:	8b 56 04             	mov    0x4(%esi),%edx
 804f6ae:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804f6b4:	85 d2                	test   %edx,%edx
 804f6b6:	0f 85 cc 00 00 00    	jne    804f788 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x2e8>
 804f6bc:	03 7c 24 24          	add    0x24(%esp),%edi
 804f6c0:	89 46 0c             	mov    %eax,0xc(%esi)
 804f6c3:	89 46 08             	mov    %eax,0x8(%esi)
 804f6c6:	31 c0                	xor    %eax,%eax
 804f6c8:	39 fd                	cmp    %edi,%ebp
 804f6ca:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
 804f6d1:	77 bd                	ja     804f690 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1f0>
 804f6d3:	90                   	nop
 804f6d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f6d8:	85 c0                	test   %eax,%eax
 804f6da:	8b 56 04             	mov    0x4(%esi),%edx
 804f6dd:	74 1c                	je     804f6fb <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x25b>
 804f6df:	85 d2                	test   %edx,%edx
 804f6e1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804f6e7:	0f 84 13 01 00 00    	je     804f800 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x360>
 804f6ed:	8b 4e 0c             	mov    0xc(%esi),%ecx
 804f6f0:	83 c2 01             	add    $0x1,%edx
 804f6f3:	89 01                	mov    %eax,(%ecx)
 804f6f5:	89 46 0c             	mov    %eax,0xc(%esi)
 804f6f8:	89 56 04             	mov    %edx,0x4(%esi)
 804f6fb:	85 d2                	test   %edx,%edx
 804f6fd:	0f 85 1f fe ff ff    	jne    804f522 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x82>
 804f703:	8d 83 cc 31 fd ff    	lea    -0x2ce34(%ebx),%eax
 804f709:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f70d:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f713:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804f71a:	00 
 804f71b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804f722:	00 
 804f723:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804f72a:	00 
 804f72b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804f732:	00 
 804f733:	c7 44 24 04 62 02 00 	movl   $0x262,0x4(%esp)
 804f73a:	00 
 804f73b:	89 04 24             	mov    %eax,(%esp)
 804f73e:	e8 6d 2c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f743:	90                   	nop
 804f744:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f748:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
 804f74f:	e9 de fd ff ff       	jmp    804f532 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x92>
 804f754:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f758:	c1 e0 04             	shl    $0x4,%eax
 804f75b:	89 44 24 24          	mov    %eax,0x24(%esp)
 804f75f:	e9 13 fe ff ff       	jmp    804f577 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0xd7>
 804f764:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f768:	83 7c 24 5c 10       	cmpl   $0x10,0x5c(%esp)
 804f76d:	89 f8                	mov    %edi,%eax
 804f76f:	76 2f                	jbe    804f7a0 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x300>
 804f771:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804f778:	ba 01 00 00 00       	mov    $0x1,%edx
 804f77d:	31 c9                	xor    %ecx,%ecx
 804f77f:	e9 1a ff ff ff       	jmp    804f69e <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1fe>
 804f784:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f788:	8b 4e 0c             	mov    0xc(%esi),%ecx
 804f78b:	83 c2 01             	add    $0x1,%edx
 804f78e:	89 01                	mov    %eax,(%ecx)
 804f790:	89 46 0c             	mov    %eax,0xc(%esi)
 804f793:	31 c0                	xor    %eax,%eax
 804f795:	89 56 04             	mov    %edx,0x4(%esi)
 804f798:	e9 eb fe ff ff       	jmp    804f688 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1e8>
 804f79d:	8d 76 00             	lea    0x0(%esi),%esi
 804f7a0:	8b 44 24 58          	mov    0x58(%esp),%eax
 804f7a4:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 804f7a8:	8b 90 d4 b4 00 00    	mov    0xb4d4(%eax),%edx
 804f7ae:	8b 80 d0 b4 00 00    	mov    0xb4d0(%eax),%eax
 804f7b4:	05 20 01 00 00       	add    $0x120,%eax
 804f7b9:	83 d2 00             	adc    $0x0,%edx
 804f7bc:	89 81 d0 b4 00 00    	mov    %eax,0xb4d0(%ecx)
 804f7c2:	89 91 d4 b4 00 00    	mov    %edx,0xb4d4(%ecx)
 804f7c8:	8b 91 88 22 00 00    	mov    0x2288(%ecx),%edx
 804f7ce:	85 d2                	test   %edx,%edx
 804f7d0:	0f 84 e7 00 00 00    	je     804f8bd <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x41d>
 804f7d6:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 804f7da:	8d 42 ff             	lea    -0x1(%edx),%eax
 804f7dd:	89 81 88 22 00 00    	mov    %eax,0x2288(%ecx)
 804f7e3:	8b 94 91 88 22 00 00 	mov    0x2288(%ecx,%edx,4),%edx
 804f7ea:	8b 84 81 90 22 00 00 	mov    0x2290(%ecx,%eax,4),%eax
 804f7f1:	0f 18 02             	prefetchnta (%edx)
 804f7f4:	e9 78 ff ff ff       	jmp    804f771 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x2d1>
 804f7f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 804f800:	89 46 0c             	mov    %eax,0xc(%esi)
 804f803:	b2 01                	mov    $0x1,%dl
 804f805:	89 46 08             	mov    %eax,0x8(%esi)
 804f808:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
 804f80f:	e9 0e fd ff ff       	jmp    804f522 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x82>
 804f814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f818:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 804f81c:	8d 50 f0             	lea    -0x10(%eax),%edx
 804f81f:	b8 00 01 00 00       	mov    $0x100,%eax
 804f824:	89 d1                	mov    %edx,%ecx
 804f826:	83 e2 07             	and    $0x7,%edx
 804f829:	c1 e9 03             	shr    $0x3,%ecx
 804f82c:	d3 e0                	shl    %cl,%eax
 804f82e:	89 c1                	mov    %eax,%ecx
 804f830:	c1 e9 03             	shr    $0x3,%ecx
 804f833:	0f af ca             	imul   %edx,%ecx
 804f836:	01 c1                	add    %eax,%ecx
 804f838:	e9 17 fe ff ff       	jmp    804f654 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x1b4>
 804f83d:	8b 56 04             	mov    0x4(%esi),%edx
 804f840:	e9 b6 fe ff ff       	jmp    804f6fb <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x25b>
 804f845:	8b 44 24 28          	mov    0x28(%esp),%eax
 804f849:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804f84d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804f854:	00 
 804f855:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804f85c:	00 
 804f85d:	89 44 24 14          	mov    %eax,0x14(%esp)
 804f861:	8d 83 8c 31 fd ff    	lea    -0x2ce74(%ebx),%eax
 804f867:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f86b:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f871:	89 54 24 18          	mov    %edx,0x18(%esp)
 804f875:	c7 44 24 04 ca 02 00 	movl   $0x2ca,0x4(%esp)
 804f87c:	00 
 804f87d:	89 04 24             	mov    %eax,(%esp)
 804f880:	e8 2b 2b 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f885:	8d 83 64 31 fd ff    	lea    -0x2ce9c(%ebx),%eax
 804f88b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f88f:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804f895:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 804f899:	89 54 24 18          	mov    %edx,0x18(%esp)
 804f89d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804f8a4:	00 
 804f8a5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804f8ac:	00 
 804f8ad:	c7 44 24 04 c9 02 00 	movl   $0x2c9,0x4(%esp)
 804f8b4:	00 
 804f8b5:	89 04 24             	mov    %eax,(%esp)
 804f8b8:	e8 f3 2a 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804f8bd:	8b 44 24 50          	mov    0x50(%esp),%eax
 804f8c1:	c7 44 24 08 11 00 00 	movl   $0x11,0x8(%esp)
 804f8c8:	00 
 804f8c9:	89 0c 24             	mov    %ecx,(%esp)
 804f8cc:	89 44 24 04          	mov    %eax,0x4(%esp)
 804f8d0:	e8 1b 00 00 00       	call   804f8f0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m>
 804f8d5:	8b 44 24 58          	mov    0x58(%esp),%eax
 804f8d9:	8b 90 88 22 00 00    	mov    0x2288(%eax),%edx
 804f8df:	e9 f2 fe ff ff       	jmp    804f7d6 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm+0x336>
 804f8e4:	66 90                	xchg   %ax,%ax
 804f8e6:	66 90                	xchg   %ax,%ax
 804f8e8:	66 90                	xchg   %ax,%ax
 804f8ea:	66 90                	xchg   %ax,%ax
 804f8ec:	66 90                	xchg   %ax,%ax
 804f8ee:	66 90                	xchg   %ax,%ax

0804f8f0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m>:
 804f8f0:	55                   	push   %ebp
 804f8f1:	57                   	push   %edi
 804f8f2:	56                   	push   %esi
 804f8f3:	53                   	push   %ebx
 804f8f4:	83 ec 2c             	sub    $0x2c,%esp
 804f8f7:	8b 44 24 40          	mov    0x40(%esp),%eax
 804f8fb:	e8 f0 a1 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804f900:	81 c3 00 07 06 00    	add    $0x60700,%ebx
 804f906:	8b 40 04             	mov    0x4(%eax),%eax
 804f909:	85 c0                	test   %eax,%eax
 804f90b:	0f 84 be 00 00 00    	je     804f9cf <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0xdf>
 804f911:	8b 44 24 48          	mov    0x48(%esp),%eax
 804f915:	8b 74 24 48          	mov    0x48(%esp),%esi
 804f919:	c1 e0 09             	shl    $0x9,%eax
 804f91c:	8d 34 f0             	lea    (%eax,%esi,8),%esi
 804f91f:	8b 44 24 48          	mov    0x48(%esp),%eax
 804f923:	03 74 24 40          	add    0x40(%esp),%esi
 804f927:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804f92b:	8b 44 24 40          	mov    0x40(%esp),%eax
 804f92f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804f933:	05 c8 b4 00 00       	add    $0xb4c8,%eax
 804f938:	89 44 24 04          	mov    %eax,0x4(%esp)
 804f93c:	8b 44 24 44          	mov    0x44(%esp),%eax
 804f940:	89 04 24             	mov    %eax,(%esp)
 804f943:	e8 58 fb ff ff       	call   804f4a0 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE13AllocateBatchEPNS_14AllocatorStatsEPNS_28SizeClassAllocatorLocalCacheIS5_EEm>
 804f948:	8b 48 04             	mov    0x4(%eax),%ecx
 804f94b:	85 c9                	test   %ecx,%ecx
 804f94d:	0f 84 fb 00 00 00    	je     804fa4e <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x15e>
 804f953:	31 d2                	xor    %edx,%edx
 804f955:	8d 76 00             	lea    0x0(%esi),%esi
 804f958:	8b 7c 90 08          	mov    0x8(%eax,%edx,4),%edi
 804f95c:	89 7c 96 08          	mov    %edi,0x8(%esi,%edx,4)
 804f960:	83 c2 01             	add    $0x1,%edx
 804f963:	39 ca                	cmp    %ecx,%edx
 804f965:	75 f1                	jne    804f958 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x68>
 804f967:	83 7c 24 48 10       	cmpl   $0x10,0x48(%esp)
 804f96c:	89 16                	mov    %edx,(%esi)
 804f96e:	76 08                	jbe    804f978 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x88>
 804f970:	83 c4 2c             	add    $0x2c,%esp
 804f973:	5b                   	pop    %ebx
 804f974:	5e                   	pop    %esi
 804f975:	5f                   	pop    %edi
 804f976:	5d                   	pop    %ebp
 804f977:	c3                   	ret    
 804f978:	8b 74 24 40          	mov    0x40(%esp),%esi
 804f97c:	8b 4c 24 40          	mov    0x40(%esp),%ecx
 804f980:	8b be dc b4 00 00    	mov    0xb4dc(%esi),%edi
 804f986:	8b b6 d8 b4 00 00    	mov    0xb4d8(%esi),%esi
 804f98c:	8b 91 88 22 00 00    	mov    0x2288(%ecx),%edx
 804f992:	81 c6 20 01 00 00    	add    $0x120,%esi
 804f998:	83 d7 00             	adc    $0x0,%edi
 804f99b:	3b 91 8c 22 00 00    	cmp    0x228c(%ecx),%edx
 804f9a1:	89 b1 d8 b4 00 00    	mov    %esi,0xb4d8(%ecx)
 804f9a7:	89 b9 dc b4 00 00    	mov    %edi,0xb4dc(%ecx)
 804f9ad:	0f 84 db 00 00 00    	je     804fa8e <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x19e>
 804f9b3:	8b 74 24 40          	mov    0x40(%esp),%esi
 804f9b7:	8d 4a 01             	lea    0x1(%edx),%ecx
 804f9ba:	89 8e 88 22 00 00    	mov    %ecx,0x2288(%esi)
 804f9c0:	89 84 96 90 22 00 00 	mov    %eax,0x2290(%esi,%edx,4)
 804f9c7:	83 c4 2c             	add    $0x2c,%esp
 804f9ca:	5b                   	pop    %ebx
 804f9cb:	5e                   	pop    %esi
 804f9cc:	5f                   	pop    %edi
 804f9cd:	5d                   	pop    %ebp
 804f9ce:	c3                   	ret    
 804f9cf:	8b 7c 24 40          	mov    0x40(%esp),%edi
 804f9d3:	bd 01 00 00 00       	mov    $0x1,%ebp
 804f9d8:	31 f6                	xor    %esi,%esi
 804f9da:	eb 3d                	jmp    804fa19 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x129>
 804f9dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804f9e0:	89 f1                	mov    %esi,%ecx
 804f9e2:	c1 e1 04             	shl    $0x4,%ecx
 804f9e5:	31 d2                	xor    %edx,%edx
 804f9e7:	b8 00 40 00 00       	mov    $0x4000,%eax
 804f9ec:	f7 f1                	div    %ecx
 804f9ee:	ba 80 00 00 00       	mov    $0x80,%edx
 804f9f3:	83 f8 40             	cmp    $0x40,%eax
 804f9f6:	77 09                	ja     804fa01 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x111>
 804f9f8:	85 c0                	test   %eax,%eax
 804f9fa:	75 4d                	jne    804fa49 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x159>
 804f9fc:	ba 02 00 00 00       	mov    $0x2,%edx
 804fa01:	83 fd 59             	cmp    $0x59,%ebp
 804fa04:	89 57 04             	mov    %edx,0x4(%edi)
 804fa07:	0f 84 04 ff ff ff    	je     804f911 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x21>
 804fa0d:	83 c6 01             	add    $0x1,%esi
 804fa10:	83 c5 01             	add    $0x1,%ebp
 804fa13:	81 c7 08 02 00 00    	add    $0x208,%edi
 804fa19:	85 f6                	test   %esi,%esi
 804fa1b:	74 23                	je     804fa40 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x150>
 804fa1d:	83 fe 10             	cmp    $0x10,%esi
 804fa20:	76 be                	jbe    804f9e0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0xf0>
 804fa22:	8d 56 f0             	lea    -0x10(%esi),%edx
 804fa25:	b8 00 01 00 00       	mov    $0x100,%eax
 804fa2a:	89 d1                	mov    %edx,%ecx
 804fa2c:	83 e2 07             	and    $0x7,%edx
 804fa2f:	c1 e9 03             	shr    $0x3,%ecx
 804fa32:	d3 e0                	shl    %cl,%eax
 804fa34:	89 c1                	mov    %eax,%ecx
 804fa36:	c1 e9 03             	shr    $0x3,%ecx
 804fa39:	0f af ca             	imul   %edx,%ecx
 804fa3c:	01 c1                	add    %eax,%ecx
 804fa3e:	eb a5                	jmp    804f9e5 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0xf5>
 804fa40:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
 804fa47:	eb c4                	jmp    804fa0d <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x11d>
 804fa49:	8d 14 00             	lea    (%eax,%eax,1),%edx
 804fa4c:	eb b3                	jmp    804fa01 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0x111>
 804fa4e:	8d 83 06 2d fd ff    	lea    -0x2d2fa(%ebx),%eax
 804fa54:	89 44 24 08          	mov    %eax,0x8(%esp)
 804fa58:	8d 83 b0 2e fd ff    	lea    -0x2d150(%ebx),%eax
 804fa5e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804fa65:	00 
 804fa66:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804fa6d:	00 
 804fa6e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804fa75:	00 
 804fa76:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804fa7d:	00 
 804fa7e:	c7 44 24 04 3e 03 00 	movl   $0x33e,0x4(%esp)
 804fa85:	00 
 804fa86:	89 04 24             	mov    %eax,(%esp)
 804fa89:	e8 22 29 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804fa8e:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804fa92:	8b 44 24 44          	mov    0x44(%esp),%eax
 804fa96:	c7 44 24 08 11 00 00 	movl   $0x11,0x8(%esp)
 804fa9d:	00 
 804fa9e:	89 0c 24             	mov    %ecx,(%esp)
 804faa1:	89 44 24 04          	mov    %eax,0x4(%esp)
 804faa5:	e8 16 00 00 00       	call   804fac0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m>
 804faaa:	8b 44 24 40          	mov    0x40(%esp),%eax
 804faae:	8b 90 88 22 00 00    	mov    0x2288(%eax),%edx
 804fab4:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804fab8:	e9 f6 fe ff ff       	jmp    804f9b3 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m+0xc3>
 804fabd:	66 90                	xchg   %ax,%ax
 804fabf:	90                   	nop

0804fac0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m>:
 804fac0:	55                   	push   %ebp
 804fac1:	57                   	push   %edi
 804fac2:	56                   	push   %esi
 804fac3:	83 ec 20             	sub    $0x20,%esp
 804fac6:	8b 44 24 30          	mov    0x30(%esp),%eax
 804faca:	8b 7c 24 34          	mov    0x34(%esp),%edi
 804face:	89 44 24 18          	mov    %eax,0x18(%esp)
 804fad2:	8b 40 04             	mov    0x4(%eax),%eax
 804fad5:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
 804fad9:	8b 7c 24 38          	mov    0x38(%esp),%edi
 804fadd:	85 c0                	test   %eax,%eax
 804fadf:	89 7c 24 14          	mov    %edi,0x14(%esp)
 804fae3:	74 74                	je     804fb59 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x99>
 804fae5:	8b 7c 24 14          	mov    0x14(%esp),%edi
 804fae9:	89 f8                	mov    %edi,%eax
 804faeb:	c1 e0 09             	shl    $0x9,%eax
 804faee:	8d 34 f8             	lea    (%eax,%edi,8),%esi
 804faf1:	03 74 24 18          	add    0x18(%esp),%esi
 804faf5:	83 ff 10             	cmp    $0x10,%edi
 804faf8:	0f 86 ce 00 00 00    	jbe    804fbcc <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x10c>
 804fafe:	8b 4e 08             	mov    0x8(%esi),%ecx
 804fb01:	8b 46 04             	mov    0x4(%esi),%eax
 804fb04:	8b 2e                	mov    (%esi),%ebp
 804fb06:	d1 e8                	shr    %eax
 804fb08:	39 e8                	cmp    %ebp,%eax
 804fb0a:	89 ea                	mov    %ebp,%edx
 804fb0c:	0f 46 d0             	cmovbe %eax,%edx
 804fb0f:	85 d2                	test   %edx,%edx
 804fb11:	74 28                	je     804fb3b <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x7b>
 804fb13:	8d 3c 86             	lea    (%esi,%eax,4),%edi
 804fb16:	31 c0                	xor    %eax,%eax
 804fb18:	89 6c 24 18          	mov    %ebp,0x18(%esp)
 804fb1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804fb20:	8b 6c 86 08          	mov    0x8(%esi,%eax,4),%ebp
 804fb24:	89 6c 81 08          	mov    %ebp,0x8(%ecx,%eax,4)
 804fb28:	8b 6c 87 08          	mov    0x8(%edi,%eax,4),%ebp
 804fb2c:	89 6c 86 08          	mov    %ebp,0x8(%esi,%eax,4)
 804fb30:	83 c0 01             	add    $0x1,%eax
 804fb33:	39 d0                	cmp    %edx,%eax
 804fb35:	75 e9                	jne    804fb20 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x60>
 804fb37:	8b 6c 24 18          	mov    0x18(%esp),%ebp
 804fb3b:	29 d5                	sub    %edx,%ebp
 804fb3d:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804fb41:	89 51 04             	mov    %edx,0x4(%ecx)
 804fb44:	8b 54 24 14          	mov    0x14(%esp),%edx
 804fb48:	89 2e                	mov    %ebp,(%esi)
 804fb4a:	89 4c 24 30          	mov    %ecx,0x30(%esp)
 804fb4e:	83 c4 20             	add    $0x20,%esp
 804fb51:	5e                   	pop    %esi
 804fb52:	5f                   	pop    %edi
 804fb53:	5d                   	pop    %ebp
 804fb54:	e9 67 a3 ff ff       	jmp    8049ec0 <_ZN11__sanitizer20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.24>
 804fb59:	8b 7c 24 18          	mov    0x18(%esp),%edi
 804fb5d:	bd 01 00 00 00       	mov    $0x1,%ebp
 804fb62:	31 f6                	xor    %esi,%esi
 804fb64:	eb 3f                	jmp    804fba5 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0xe5>
 804fb66:	66 90                	xchg   %ax,%ax
 804fb68:	89 f1                	mov    %esi,%ecx
 804fb6a:	c1 e1 04             	shl    $0x4,%ecx
 804fb6d:	31 d2                	xor    %edx,%edx
 804fb6f:	b8 00 40 00 00       	mov    $0x4000,%eax
 804fb74:	f7 f1                	div    %ecx
 804fb76:	ba 80 00 00 00       	mov    $0x80,%edx
 804fb7b:	83 f8 40             	cmp    $0x40,%eax
 804fb7e:	77 0d                	ja     804fb8d <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0xcd>
 804fb80:	85 c0                	test   %eax,%eax
 804fb82:	0f 85 a1 00 00 00    	jne    804fc29 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x169>
 804fb88:	ba 02 00 00 00       	mov    $0x2,%edx
 804fb8d:	83 fd 59             	cmp    $0x59,%ebp
 804fb90:	89 57 04             	mov    %edx,0x4(%edi)
 804fb93:	0f 84 4c ff ff ff    	je     804fae5 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x25>
 804fb99:	83 c6 01             	add    $0x1,%esi
 804fb9c:	83 c5 01             	add    $0x1,%ebp
 804fb9f:	81 c7 08 02 00 00    	add    $0x208,%edi
 804fba5:	85 f6                	test   %esi,%esi
 804fba7:	74 74                	je     804fc1d <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x15d>
 804fba9:	83 fe 10             	cmp    $0x10,%esi
 804fbac:	76 ba                	jbe    804fb68 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0xa8>
 804fbae:	8d 56 f0             	lea    -0x10(%esi),%edx
 804fbb1:	b8 00 01 00 00       	mov    $0x100,%eax
 804fbb6:	89 d1                	mov    %edx,%ecx
 804fbb8:	83 e2 07             	and    $0x7,%edx
 804fbbb:	c1 e9 03             	shr    $0x3,%ecx
 804fbbe:	d3 e0                	shl    %cl,%eax
 804fbc0:	89 c1                	mov    %eax,%ecx
 804fbc2:	c1 e9 03             	shr    $0x3,%ecx
 804fbc5:	0f af ca             	imul   %edx,%ecx
 804fbc8:	01 c1                	add    %eax,%ecx
 804fbca:	eb a1                	jmp    804fb6d <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0xad>
 804fbcc:	8b 7c 24 18          	mov    0x18(%esp),%edi
 804fbd0:	8b 97 d4 b4 00 00    	mov    0xb4d4(%edi),%edx
 804fbd6:	8b 87 d0 b4 00 00    	mov    0xb4d0(%edi),%eax
 804fbdc:	05 20 01 00 00       	add    $0x120,%eax
 804fbe1:	89 87 d0 b4 00 00    	mov    %eax,0xb4d0(%edi)
 804fbe7:	8b 87 88 22 00 00    	mov    0x2288(%edi),%eax
 804fbed:	83 d2 00             	adc    $0x0,%edx
 804fbf0:	89 97 d4 b4 00 00    	mov    %edx,0xb4d4(%edi)
 804fbf6:	85 c0                	test   %eax,%eax
 804fbf8:	74 37                	je     804fc31 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x171>
 804fbfa:	8b 7c 24 18          	mov    0x18(%esp),%edi
 804fbfe:	8d 50 ff             	lea    -0x1(%eax),%edx
 804fc01:	89 97 88 22 00 00    	mov    %edx,0x2288(%edi)
 804fc07:	8b 8c 97 90 22 00 00 	mov    0x2290(%edi,%edx,4),%ecx
 804fc0e:	8b 84 87 88 22 00 00 	mov    0x2288(%edi,%eax,4),%eax
 804fc15:	0f 18 00             	prefetchnta (%eax)
 804fc18:	e9 e4 fe ff ff       	jmp    804fb01 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x41>
 804fc1d:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
 804fc24:	e9 70 ff ff ff       	jmp    804fb99 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0xd9>
 804fc29:	8d 14 00             	lea    (%eax,%eax,1),%edx
 804fc2c:	e9 5c ff ff ff       	jmp    804fb8d <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0xcd>
 804fc31:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 804fc35:	c7 44 24 08 11 00 00 	movl   $0x11,0x8(%esp)
 804fc3c:	00 
 804fc3d:	89 3c 24             	mov    %edi,(%esp)
 804fc40:	89 44 24 04          	mov    %eax,0x4(%esp)
 804fc44:	e8 a7 fc ff ff       	call   804f8f0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m>
 804fc49:	8b 87 88 22 00 00    	mov    0x2288(%edi),%eax
 804fc4f:	eb a9                	jmp    804fbfa <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE5DrainEPS6_m+0x13a>
 804fc51:	66 90                	xchg   %ax,%ax
 804fc53:	66 90                	xchg   %ax,%ax
 804fc55:	66 90                	xchg   %ax,%ax
 804fc57:	66 90                	xchg   %ax,%ax
 804fc59:	66 90                	xchg   %ax,%ax
 804fc5b:	66 90                	xchg   %ax,%ax
 804fc5d:	66 90                	xchg   %ax,%ax
 804fc5f:	90                   	nop

0804fc60 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_>:
 804fc60:	55                   	push   %ebp
 804fc61:	ba 01 00 00 00       	mov    $0x1,%edx
 804fc66:	57                   	push   %edi
 804fc67:	56                   	push   %esi
 804fc68:	83 ec 20             	sub    $0x20,%esp
 804fc6b:	8b 74 24 30          	mov    0x30(%esp),%esi
 804fc6f:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 804fc76:	00 
 804fc77:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 804fc7e:	00 
 804fc7f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 804fc86:	00 
 804fc87:	8d 86 8c 00 00 00    	lea    0x8c(%esi),%eax
 804fc8d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 804fc94:	00 
 804fc95:	86 10                	xchg   %dl,(%eax)
 804fc97:	84 d2                	test   %dl,%dl
 804fc99:	74 08                	je     804fca3 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0x43>
 804fc9b:	89 04 24             	mov    %eax,(%esp)
 804fc9e:	e8 8d f7 ff ff       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804fca3:	8b 86 9c 00 00 00    	mov    0x9c(%esi),%eax
 804fca9:	8b 7e 44             	mov    0x44(%esi),%edi
 804fcac:	39 f8                	cmp    %edi,%eax
 804fcae:	0f 86 98 00 00 00    	jbe    804fd4c <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0xec>
 804fcb4:	8b 44 24 14          	mov    0x14(%esp),%eax
 804fcb8:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 804fcbc:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804fcc0:	eb 29                	jmp    804fceb <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0x8b>
 804fcc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804fcc8:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 804fccf:	00 
 804fcd0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804fcd4:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804fcd8:	03 50 04             	add    0x4(%eax),%edx
 804fcdb:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 804fcdf:	8b 96 9c 00 00 00    	mov    0x9c(%esi),%edx
 804fce5:	39 fa                	cmp    %edi,%edx
 804fce7:	76 57                	jbe    804fd40 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0xe0>
 804fce9:	89 c1                	mov    %eax,%ecx
 804fceb:	8b 96 90 00 00 00    	mov    0x90(%esi),%edx
 804fcf1:	31 c0                	xor    %eax,%eax
 804fcf3:	85 d2                	test   %edx,%edx
 804fcf5:	75 19                	jne    804fd10 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0xb0>
 804fcf7:	8b 54 24 10          	mov    0x10(%esp),%edx
 804fcfb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804fd01:	85 d2                	test   %edx,%edx
 804fd03:	74 c3                	je     804fcc8 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0x68>
 804fd05:	83 c2 01             	add    $0x1,%edx
 804fd08:	89 01                	mov    %eax,(%ecx)
 804fd0a:	89 54 24 10          	mov    %edx,0x10(%esp)
 804fd0e:	eb c4                	jmp    804fcd4 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0x74>
 804fd10:	8b 86 94 00 00 00    	mov    0x94(%esi),%eax
 804fd16:	8b 28                	mov    (%eax),%ebp
 804fd18:	85 ed                	test   %ebp,%ebp
 804fd1a:	89 ae 94 00 00 00    	mov    %ebp,0x94(%esi)
 804fd20:	74 4e                	je     804fd70 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0x110>
 804fd22:	83 ea 01             	sub    $0x1,%edx
 804fd25:	89 96 90 00 00 00    	mov    %edx,0x90(%esi)
 804fd2b:	8b 96 9c 00 00 00    	mov    0x9c(%esi),%edx
 804fd31:	2b 50 04             	sub    0x4(%eax),%edx
 804fd34:	89 96 9c 00 00 00    	mov    %edx,0x9c(%esi)
 804fd3a:	eb bb                	jmp    804fcf7 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0x97>
 804fd3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804fd40:	89 44 24 18          	mov    %eax,0x18(%esp)
 804fd44:	8b 44 24 0c          	mov    0xc(%esp),%eax
 804fd48:	89 44 24 14          	mov    %eax,0x14(%esp)
 804fd4c:	c6 86 8c 00 00 00 00 	movb   $0x0,0x8c(%esi)
 804fd53:	c6 86 8d 00 00 00 00 	movb   $0x0,0x8d(%esi)
 804fd5a:	8b 54 24 34          	mov    0x34(%esp),%edx
 804fd5e:	8d 44 24 10          	lea    0x10(%esp),%eax
 804fd62:	e8 e9 b9 ff ff       	call   804b750 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE9DoRecycleEPNS_15QuarantineCacheIS2_EES2_.isra.26>
 804fd67:	83 c4 20             	add    $0x20,%esp
 804fd6a:	5e                   	pop    %esi
 804fd6b:	5f                   	pop    %edi
 804fd6c:	5d                   	pop    %ebp
 804fd6d:	c3                   	ret    
 804fd6e:	66 90                	xchg   %ax,%ax
 804fd70:	c7 86 98 00 00 00 00 	movl   $0x0,0x98(%esi)
 804fd77:	00 00 00 
 804fd7a:	eb a6                	jmp    804fd22 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_+0xc2>
 804fd7c:	66 90                	xchg   %ax,%ax
 804fd7e:	66 90                	xchg   %ax,%ax

0804fd80 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_>:
 804fd80:	55                   	push   %ebp
 804fd81:	ba 01 00 00 00       	mov    $0x1,%edx
 804fd86:	57                   	push   %edi
 804fd87:	56                   	push   %esi
 804fd88:	53                   	push   %ebx
 804fd89:	83 ec 3c             	sub    $0x3c,%esp
 804fd8c:	e8 5f 9d ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804fd91:	81 c3 6f 02 06 00    	add    $0x6026f,%ebx
 804fd97:	8b 74 24 50          	mov    0x50(%esp),%esi
 804fd9b:	8b 7c 24 54          	mov    0x54(%esp),%edi
 804fd9f:	8b 6c 24 58          	mov    0x58(%esp),%ebp
 804fda3:	8d 86 8c 00 00 00    	lea    0x8c(%esi),%eax
 804fda9:	86 10                	xchg   %dl,(%eax)
 804fdab:	84 d2                	test   %dl,%dl
 804fdad:	74 08                	je     804fdb7 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0x37>
 804fdaf:	89 04 24             	mov    %eax,(%esp)
 804fdb2:	e8 79 f6 ff ff       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 804fdb7:	8d 8e 90 00 00 00    	lea    0x90(%esi),%ecx
 804fdbd:	89 c8                	mov    %ecx,%eax
 804fdbf:	c1 f8 1f             	sar    $0x1f,%eax
 804fdc2:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 804fdc6:	89 f8                	mov    %edi,%eax
 804fdc8:	99                   	cltd   
 804fdc9:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 804fdcd:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 804fdd1:	31 f9                	xor    %edi,%ecx
 804fdd3:	31 d0                	xor    %edx,%eax
 804fdd5:	09 c8                	or     %ecx,%eax
 804fdd7:	0f 84 b6 00 00 00    	je     804fe93 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0x113>
 804fddd:	8b 07                	mov    (%edi),%eax
 804fddf:	85 c0                	test   %eax,%eax
 804fde1:	74 3a                	je     804fe1d <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0x9d>
 804fde3:	8b 86 90 00 00 00    	mov    0x90(%esi),%eax
 804fde9:	85 c0                	test   %eax,%eax
 804fdeb:	74 63                	je     804fe50 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0xd0>
 804fded:	8b 96 98 00 00 00    	mov    0x98(%esi),%edx
 804fdf3:	8b 4f 04             	mov    0x4(%edi),%ecx
 804fdf6:	89 0a                	mov    %ecx,(%edx)
 804fdf8:	8b 57 08             	mov    0x8(%edi),%edx
 804fdfb:	89 96 98 00 00 00    	mov    %edx,0x98(%esi)
 804fe01:	03 07                	add    (%edi),%eax
 804fe03:	89 86 90 00 00 00    	mov    %eax,0x90(%esi)
 804fe09:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
 804fe10:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
 804fe17:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
 804fe1d:	8b 47 0c             	mov    0xc(%edi),%eax
 804fe20:	8b 96 9c 00 00 00    	mov    0x9c(%esi),%edx
 804fe26:	01 d0                	add    %edx,%eax
 804fe28:	89 86 9c 00 00 00    	mov    %eax,0x9c(%esi)
 804fe2e:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
 804fe35:	c6 86 8c 00 00 00 00 	movb   $0x0,0x8c(%esi)
 804fe3c:	8b 86 9c 00 00 00    	mov    0x9c(%esi),%eax
 804fe42:	39 46 40             	cmp    %eax,0x40(%esi)
 804fe45:	72 29                	jb     804fe70 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0xf0>
 804fe47:	83 c4 3c             	add    $0x3c,%esp
 804fe4a:	5b                   	pop    %ebx
 804fe4b:	5e                   	pop    %esi
 804fe4c:	5f                   	pop    %edi
 804fe4d:	5d                   	pop    %ebp
 804fe4e:	c3                   	ret    
 804fe4f:	90                   	nop
 804fe50:	8b 07                	mov    (%edi),%eax
 804fe52:	89 86 90 00 00 00    	mov    %eax,0x90(%esi)
 804fe58:	8b 47 04             	mov    0x4(%edi),%eax
 804fe5b:	89 86 94 00 00 00    	mov    %eax,0x94(%esi)
 804fe61:	8b 47 08             	mov    0x8(%edi),%eax
 804fe64:	89 86 98 00 00 00    	mov    %eax,0x98(%esi)
 804fe6a:	eb 9d                	jmp    804fe09 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0x89>
 804fe6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 804fe70:	b8 01 00 00 00       	mov    $0x1,%eax
 804fe75:	86 86 8d 00 00 00    	xchg   %al,0x8d(%esi)
 804fe7b:	84 c0                	test   %al,%al
 804fe7d:	75 c8                	jne    804fe47 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE5DrainEPNS_15QuarantineCacheIS2_EES2_+0xc7>
 804fe7f:	89 6c 24 54          	mov    %ebp,0x54(%esp)
 804fe83:	89 74 24 50          	mov    %esi,0x50(%esp)
 804fe87:	83 c4 3c             	add    $0x3c,%esp
 804fe8a:	5b                   	pop    %ebx
 804fe8b:	5e                   	pop    %esi
 804fe8c:	5f                   	pop    %edi
 804fe8d:	5d                   	pop    %ebp
 804fe8e:	e9 cd fd ff ff       	jmp    804fc60 <_ZN11__sanitizer10QuarantineIN6__asan18QuarantineCallbackENS1_9AsanChunkEE7RecycleES2_>
 804fe93:	8b 44 24 28          	mov    0x28(%esp),%eax
 804fe97:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 804fe9b:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)
 804fea2:	00 
 804fea3:	89 44 24 14          	mov    %eax,0x14(%esp)
 804fea7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804feab:	8d 83 67 2d fd ff    	lea    -0x2d299(%ebx),%eax
 804feb1:	89 44 24 08          	mov    %eax,0x8(%esp)
 804feb5:	8d 83 00 33 fd ff    	lea    -0x2cd00(%ebx),%eax
 804febb:	89 54 24 18          	mov    %edx,0x18(%esp)
 804febf:	89 54 24 10          	mov    %edx,0x10(%esp)
 804fec3:	89 04 24             	mov    %eax,(%esp)
 804fec6:	e8 e5 24 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 804fecb:	66 90                	xchg   %ax,%ax
 804fecd:	66 90                	xchg   %ax,%ax
 804fecf:	90                   	nop

0804fed0 <_ZN11__sanitizer15QuarantineCacheIN6__asan18QuarantineCallbackEE10AllocBatchES2_>:
 804fed0:	57                   	push   %edi
 804fed1:	56                   	push   %esi
 804fed2:	53                   	push   %ebx
 804fed3:	83 ec 10             	sub    $0x10,%esp
 804fed6:	8b 74 24 24          	mov    0x24(%esp),%esi
 804feda:	e8 11 9c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804fedf:	81 c3 21 01 06 00    	add    $0x60121,%ebx
 804fee5:	8b 7c 24 20          	mov    0x20(%esp),%edi
 804fee9:	8b 86 d0 b4 00 00    	mov    0xb4d0(%esi),%eax
 804feef:	8b 96 d4 b4 00 00    	mov    0xb4d4(%esi),%edx
 804fef5:	05 00 12 00 00       	add    $0x1200,%eax
 804fefa:	89 86 d0 b4 00 00    	mov    %eax,0xb4d0(%esi)
 804ff00:	8b 86 88 63 00 00    	mov    0x6388(%esi),%eax
 804ff06:	83 d2 00             	adc    $0x0,%edx
 804ff09:	89 96 d4 b4 00 00    	mov    %edx,0xb4d4(%esi)
 804ff0f:	85 c0                	test   %eax,%eax
 804ff11:	74 60                	je     804ff73 <_ZN11__sanitizer15QuarantineCacheIN6__asan18QuarantineCallbackEE10AllocBatchES2_+0xa3>
 804ff13:	89 c2                	mov    %eax,%edx
 804ff15:	8d 42 ff             	lea    -0x1(%edx),%eax
 804ff18:	8b 94 96 88 63 00 00 	mov    0x6388(%esi,%edx,4),%edx
 804ff1f:	89 86 88 63 00 00    	mov    %eax,0x6388(%esi)
 804ff25:	8b 84 86 90 63 00 00 	mov    0x6390(%esi,%eax,4),%eax
 804ff2c:	0f 18 02             	prefetchnta (%edx)
 804ff2f:	8b 17                	mov    (%edi),%edx
 804ff31:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 804ff38:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 804ff3f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 804ff45:	85 d2                	test   %edx,%edx
 804ff47:	74 17                	je     804ff60 <_ZN11__sanitizer15QuarantineCacheIN6__asan18QuarantineCallbackEE10AllocBatchES2_+0x90>
 804ff49:	8b 4f 08             	mov    0x8(%edi),%ecx
 804ff4c:	83 c2 01             	add    $0x1,%edx
 804ff4f:	89 01                	mov    %eax,(%ecx)
 804ff51:	89 47 08             	mov    %eax,0x8(%edi)
 804ff54:	89 17                	mov    %edx,(%edi)
 804ff56:	83 c4 10             	add    $0x10,%esp
 804ff59:	5b                   	pop    %ebx
 804ff5a:	5e                   	pop    %esi
 804ff5b:	5f                   	pop    %edi
 804ff5c:	c3                   	ret    
 804ff5d:	8d 76 00             	lea    0x0(%esi),%esi
 804ff60:	89 47 08             	mov    %eax,0x8(%edi)
 804ff63:	89 47 04             	mov    %eax,0x4(%edi)
 804ff66:	c7 07 01 00 00 00    	movl   $0x1,(%edi)
 804ff6c:	83 c4 10             	add    $0x10,%esp
 804ff6f:	5b                   	pop    %ebx
 804ff70:	5e                   	pop    %esi
 804ff71:	5f                   	pop    %edi
 804ff72:	c3                   	ret    
 804ff73:	8d 83 a0 b9 00 00    	lea    0xb9a0(%ebx),%eax
 804ff79:	c7 44 24 08 31 00 00 	movl   $0x31,0x8(%esp)
 804ff80:	00 
 804ff81:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ff85:	89 34 24             	mov    %esi,(%esp)
 804ff88:	e8 63 f9 ff ff       	call   804f8f0 <_ZN11__sanitizer28SizeClassAllocatorLocalCacheINS_20SizeClassAllocator32ILm0ELy4294967296ELm16ENS_12SizeClassMapILm17ELm64ELm14ELm17EEEN6__asan20AsanMapUnmapCallbackEEEE6RefillEPS6_m>
 804ff8d:	8b 96 88 63 00 00    	mov    0x6388(%esi),%edx
 804ff93:	eb 80                	jmp    804ff15 <_ZN11__sanitizer15QuarantineCacheIN6__asan18QuarantineCallbackEE10AllocBatchES2_+0x45>

0804ff95 <__x86.get_pc_thunk.cx>:
 804ff95:	8b 0c 24             	mov    (%esp),%ecx
 804ff98:	c3                   	ret    
 804ff99:	66 90                	xchg   %ax,%ax
 804ff9b:	66 90                	xchg   %ax,%ax
 804ff9d:	66 90                	xchg   %ax,%ax
 804ff9f:	90                   	nop

0804ffa0 <__interceptor_pthread_create>:
 804ffa0:	55                   	push   %ebp
 804ffa1:	89 e5                	mov    %esp,%ebp
 804ffa3:	56                   	push   %esi
 804ffa4:	53                   	push   %ebx
 804ffa5:	e8 46 9b ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 804ffaa:	81 c3 56 00 06 00    	add    $0x60056,%ebx
 804ffb0:	81 ec 30 04 00 00    	sub    $0x430,%esp
 804ffb6:	8d b5 f0 fb ff ff    	lea    -0x410(%ebp),%esi
 804ffbc:	e8 bf 49 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 804ffc1:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 804ffc8:	00 
 804ffc9:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 804ffcd:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 804ffd4:	00 
 804ffd5:	89 34 24             	mov    %esi,(%esp)
 804ffd8:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ffdc:	e8 8f c4 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 804ffe1:	e8 8a 99 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 804ffe6:	31 d2                	xor    %edx,%edx
 804ffe8:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 804ffef:	75 5f                	jne    8050050 <__interceptor_pthread_create+0xb0>
 804fff1:	8b 45 14             	mov    0x14(%ebp),%eax
 804fff4:	89 14 24             	mov    %edx,(%esp)
 804fff7:	89 74 24 0c          	mov    %esi,0xc(%esp)
 804fffb:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ffff:	8b 45 10             	mov    0x10(%ebp),%eax
 8050002:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050006:	e8 45 02 01 00       	call   8060250 <_ZN6__asan10AsanThread6CreateEjPFPvS1_ES1_PN11__sanitizer10StackTraceE>
 805000b:	89 c6                	mov    %eax,%esi
 805000d:	e8 5e 99 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8050012:	89 74 24 04          	mov    %esi,0x4(%esp)
 8050016:	89 04 24             	mov    %eax,(%esp)
 8050019:	e8 c2 99 00 00       	call   80599e0 <_ZN6__asan18AsanThreadRegistry14RegisterThreadEPNS_10AsanThreadE>
 805001e:	8d 83 70 00 fa ff    	lea    -0x5ff90(%ebx),%eax
 8050024:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050028:	8b 45 0c             	mov    0xc(%ebp),%eax
 805002b:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805002f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050033:	8b 45 08             	mov    0x8(%ebp),%eax
 8050036:	89 04 24             	mov    %eax,(%esp)
 8050039:	ff 93 70 bb 02 00    	call   *0x2bb70(%ebx)
 805003f:	81 c4 30 04 00 00    	add    $0x430,%esp
 8050045:	5b                   	pop    %ebx
 8050046:	5e                   	pop    %esi
 8050047:	5d                   	pop    %ebp
 8050048:	c3                   	ret    
 8050049:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8050050:	89 04 24             	mov    %eax,(%esp)
 8050053:	e8 28 9b 00 00       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 8050058:	85 c0                	test   %eax,%eax
 805005a:	74 0c                	je     8050068 <__interceptor_pthread_create+0xc8>
 805005c:	8b 00                	mov    (%eax),%eax
 805005e:	8b 10                	mov    (%eax),%edx
 8050060:	eb 8f                	jmp    804fff1 <__interceptor_pthread_create+0x51>
 8050062:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8050068:	ba ff ff ff 00       	mov    $0xffffff,%edx
 805006d:	eb 82                	jmp    804fff1 <__interceptor_pthread_create+0x51>
 805006f:	90                   	nop

08050070 <_ZL17asan_thread_startPv>:
 8050070:	56                   	push   %esi
 8050071:	53                   	push   %ebx
 8050072:	e8 79 9a ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050077:	81 c3 89 ff 05 00    	add    $0x5ff89,%ebx
 805007d:	83 ec 14             	sub    $0x14,%esp
 8050080:	8b 74 24 20          	mov    0x20(%esp),%esi
 8050084:	e8 e7 98 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8050089:	89 74 24 04          	mov    %esi,0x4(%esp)
 805008d:	89 04 24             	mov    %eax,(%esp)
 8050090:	e8 1b 9b 00 00       	call   8059bb0 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE>
 8050095:	89 34 24             	mov    %esi,(%esp)
 8050098:	e8 e3 06 01 00       	call   8060780 <_ZN6__asan10AsanThread11ThreadStartEv>
 805009d:	83 c4 14             	add    $0x14,%esp
 80500a0:	5b                   	pop    %ebx
 80500a1:	5e                   	pop    %esi
 80500a2:	c3                   	ret    
 80500a3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80500a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080500b0 <__interceptor_signal>:
 80500b0:	56                   	push   %esi
 80500b1:	53                   	push   %ebx
 80500b2:	83 ec 14             	sub    $0x14,%esp
 80500b5:	e8 36 9a ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80500ba:	81 c3 46 ff 05 00    	add    $0x5ff46,%ebx
 80500c0:	8b 74 24 20          	mov    0x20(%esp),%esi
 80500c4:	89 34 24             	mov    %esi,(%esp)
 80500c7:	e8 64 c3 00 00       	call   805c430 <_ZN6__asan20AsanInterceptsSignalEi>
 80500cc:	89 c2                	mov    %eax,%edx
 80500ce:	31 c0                	xor    %eax,%eax
 80500d0:	84 d2                	test   %dl,%dl
 80500d2:	75 11                	jne    80500e5 <__interceptor_signal+0x35>
 80500d4:	8b 44 24 24          	mov    0x24(%esp),%eax
 80500d8:	89 34 24             	mov    %esi,(%esp)
 80500db:	89 44 24 04          	mov    %eax,0x4(%esp)
 80500df:	ff 93 6c bb 02 00    	call   *0x2bb6c(%ebx)
 80500e5:	83 c4 14             	add    $0x14,%esp
 80500e8:	5b                   	pop    %ebx
 80500e9:	5e                   	pop    %esi
 80500ea:	c3                   	ret    
 80500eb:	90                   	nop
 80500ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080500f0 <_ZL32ClearShadowMemoryForContextStackmm>:
 80500f0:	55                   	push   %ebp
 80500f1:	89 d5                	mov    %edx,%ebp
 80500f3:	57                   	push   %edi
 80500f4:	56                   	push   %esi
 80500f5:	89 c6                	mov    %eax,%esi
 80500f7:	53                   	push   %ebx
 80500f8:	e8 f3 99 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80500fd:	81 c3 03 ff 05 00    	add    $0x5ff03,%ebx
 8050103:	83 ec 2c             	sub    $0x2c,%esp
 8050106:	e8 05 21 01 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 805010b:	89 c7                	mov    %eax,%edi
 805010d:	89 c1                	mov    %eax,%ecx
 805010f:	f7 df                	neg    %edi
 8050111:	89 fa                	mov    %edi,%edx
 8050113:	8d 40 ff             	lea    -0x1(%eax),%eax
 8050116:	21 f2                	and    %esi,%edx
 8050118:	85 c8                	test   %ecx,%eax
 805011a:	75 31                	jne    805014d <_ZL32ClearShadowMemoryForContextStackmm+0x5d>
 805011c:	8d 44 2e ff          	lea    -0x1(%esi,%ebp,1),%eax
 8050120:	01 c8                	add    %ecx,%eax
 8050122:	29 d0                	sub    %edx,%eax
 8050124:	21 f8                	and    %edi,%eax
 8050126:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8050129:	81 f9 ff ff 3f 00    	cmp    $0x3fffff,%ecx
 805012f:	77 14                	ja     8050145 <_ZL32ClearShadowMemoryForContextStackmm+0x55>
 8050131:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8050138:	00 
 8050139:	89 44 24 04          	mov    %eax,0x4(%esp)
 805013d:	89 14 24             	mov    %edx,(%esp)
 8050140:	e8 6b c9 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 8050145:	83 c4 2c             	add    $0x2c,%esp
 8050148:	5b                   	pop    %ebx
 8050149:	5e                   	pop    %esi
 805014a:	5f                   	pop    %edi
 805014b:	5d                   	pop    %ebp
 805014c:	c3                   	ret    
 805014d:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 8050153:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050157:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805015d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050164:	00 
 8050165:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805016c:	00 
 805016d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050174:	00 
 8050175:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805017c:	00 
 805017d:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 8050184:	00 
 8050185:	89 04 24             	mov    %eax,(%esp)
 8050188:	e8 23 22 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805018d:	8d 76 00             	lea    0x0(%esi),%esi

08050190 <__interceptor_swapcontext>:
 8050190:	56                   	push   %esi
 8050191:	53                   	push   %ebx
 8050192:	e8 59 99 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050197:	81 c3 69 fe 05 00    	add    $0x5fe69,%ebx
 805019d:	83 ec 24             	sub    $0x24,%esp
 80501a0:	8b 74 24 34          	mov    0x34(%esp),%esi
 80501a4:	80 bb e2 bb 02 00 00 	cmpb   $0x0,0x2bbe2(%ebx)
 80501ab:	75 15                	jne    80501c2 <__interceptor_swapcontext+0x32>
 80501ad:	8d 83 84 35 fd ff    	lea    -0x2ca7c(%ebx),%eax
 80501b3:	89 04 24             	mov    %eax,(%esp)
 80501b6:	e8 85 15 01 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80501bb:	c6 83 e2 bb 02 00 01 	movb   $0x1,0x2bbe2(%ebx)
 80501c2:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80501c6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80501ca:	8d 44 24 18          	lea    0x18(%esp),%eax
 80501ce:	89 44 24 04          	mov    %eax,0x4(%esp)
 80501d2:	89 34 24             	mov    %esi,(%esp)
 80501d5:	e8 36 c3 00 00       	call   805c510 <_ZN6__asan16ReadContextStackEPvPmS1_>
 80501da:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80501de:	8b 44 24 18          	mov    0x18(%esp),%eax
 80501e2:	e8 09 ff ff ff       	call   80500f0 <_ZL32ClearShadowMemoryForContextStackmm>
 80501e7:	8b 44 24 30          	mov    0x30(%esp),%eax
 80501eb:	89 74 24 04          	mov    %esi,0x4(%esp)
 80501ef:	89 04 24             	mov    %eax,(%esp)
 80501f2:	ff 93 64 bb 02 00    	call   *0x2bb64(%ebx)
 80501f8:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80501fc:	89 c6                	mov    %eax,%esi
 80501fe:	8b 44 24 18          	mov    0x18(%esp),%eax
 8050202:	e8 e9 fe ff ff       	call   80500f0 <_ZL32ClearShadowMemoryForContextStackmm>
 8050207:	83 c4 24             	add    $0x24,%esp
 805020a:	89 f0                	mov    %esi,%eax
 805020c:	5b                   	pop    %ebx
 805020d:	5e                   	pop    %esi
 805020e:	c3                   	ret    
 805020f:	90                   	nop

08050210 <__interceptor_longjmp>:
 8050210:	53                   	push   %ebx
 8050211:	e8 da 98 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050216:	81 c3 ea fd 05 00    	add    $0x5fdea,%ebx
 805021c:	83 ec 18             	sub    $0x18,%esp
 805021f:	e8 6c 88 00 00       	call   8058a90 <__asan_handle_no_return>
 8050224:	8b 44 24 24          	mov    0x24(%esp),%eax
 8050228:	89 44 24 04          	mov    %eax,0x4(%esp)
 805022c:	8b 44 24 20          	mov    0x20(%esp),%eax
 8050230:	89 04 24             	mov    %eax,(%esp)
 8050233:	ff 93 60 bb 02 00    	call   *0x2bb60(%ebx)
 8050239:	83 c4 18             	add    $0x18,%esp
 805023c:	5b                   	pop    %ebx
 805023d:	c3                   	ret    
 805023e:	66 90                	xchg   %ax,%ax

08050240 <__interceptor__longjmp>:
 8050240:	53                   	push   %ebx
 8050241:	e8 aa 98 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050246:	81 c3 ba fd 05 00    	add    $0x5fdba,%ebx
 805024c:	83 ec 18             	sub    $0x18,%esp
 805024f:	e8 3c 88 00 00       	call   8058a90 <__asan_handle_no_return>
 8050254:	8b 44 24 24          	mov    0x24(%esp),%eax
 8050258:	89 44 24 04          	mov    %eax,0x4(%esp)
 805025c:	8b 44 24 20          	mov    0x20(%esp),%eax
 8050260:	89 04 24             	mov    %eax,(%esp)
 8050263:	ff 93 5c bb 02 00    	call   *0x2bb5c(%ebx)
 8050269:	83 c4 18             	add    $0x18,%esp
 805026c:	5b                   	pop    %ebx
 805026d:	c3                   	ret    
 805026e:	66 90                	xchg   %ax,%ax

08050270 <__interceptor_siglongjmp>:
 8050270:	53                   	push   %ebx
 8050271:	e8 7a 98 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050276:	81 c3 8a fd 05 00    	add    $0x5fd8a,%ebx
 805027c:	83 ec 18             	sub    $0x18,%esp
 805027f:	e8 0c 88 00 00       	call   8058a90 <__asan_handle_no_return>
 8050284:	8b 44 24 24          	mov    0x24(%esp),%eax
 8050288:	89 44 24 04          	mov    %eax,0x4(%esp)
 805028c:	8b 44 24 20          	mov    0x20(%esp),%eax
 8050290:	89 04 24             	mov    %eax,(%esp)
 8050293:	ff 93 58 bb 02 00    	call   *0x2bb58(%ebx)
 8050299:	83 c4 18             	add    $0x18,%esp
 805029c:	5b                   	pop    %ebx
 805029d:	c3                   	ret    
 805029e:	66 90                	xchg   %ax,%ax

080502a0 <__interceptor___cxa_throw>:
 80502a0:	53                   	push   %ebx
 80502a1:	e8 4a 98 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80502a6:	81 c3 5a fd 05 00    	add    $0x5fd5a,%ebx
 80502ac:	83 ec 28             	sub    $0x28,%esp
 80502af:	8b 83 54 bb 02 00    	mov    0x2bb54(%ebx),%eax
 80502b5:	85 c0                	test   %eax,%eax
 80502b7:	74 27                	je     80502e0 <__interceptor___cxa_throw+0x40>
 80502b9:	e8 d2 87 00 00       	call   8058a90 <__asan_handle_no_return>
 80502be:	8b 44 24 38          	mov    0x38(%esp),%eax
 80502c2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80502c6:	8b 44 24 34          	mov    0x34(%esp),%eax
 80502ca:	89 44 24 04          	mov    %eax,0x4(%esp)
 80502ce:	8b 44 24 30          	mov    0x30(%esp),%eax
 80502d2:	89 04 24             	mov    %eax,(%esp)
 80502d5:	ff 93 54 bb 02 00    	call   *0x2bb54(%ebx)
 80502db:	83 c4 28             	add    $0x28,%esp
 80502de:	5b                   	pop    %ebx
 80502df:	c3                   	ret    
 80502e0:	8d 83 fc 35 fd ff    	lea    -0x2ca04(%ebx),%eax
 80502e6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80502ea:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 80502f0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80502f7:	00 
 80502f8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80502ff:	00 
 8050300:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050307:	00 
 8050308:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805030f:	00 
 8050310:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)
 8050317:	00 
 8050318:	89 04 24             	mov    %eax,(%esp)
 805031b:	e8 90 20 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

08050320 <__interceptor_sigaction>:
 8050320:	56                   	push   %esi
 8050321:	53                   	push   %ebx
 8050322:	83 ec 14             	sub    $0x14,%esp
 8050325:	e8 c6 97 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805032a:	81 c3 d6 fc 05 00    	add    $0x5fcd6,%ebx
 8050330:	8b 74 24 20          	mov    0x20(%esp),%esi
 8050334:	89 34 24             	mov    %esi,(%esp)
 8050337:	e8 f4 c0 00 00       	call   805c430 <_ZN6__asan20AsanInterceptsSignalEi>
 805033c:	31 d2                	xor    %edx,%edx
 805033e:	84 c0                	test   %al,%al
 8050340:	75 1b                	jne    805035d <__interceptor_sigaction+0x3d>
 8050342:	8b 44 24 28          	mov    0x28(%esp),%eax
 8050346:	89 34 24             	mov    %esi,(%esp)
 8050349:	89 44 24 08          	mov    %eax,0x8(%esp)
 805034d:	8b 44 24 24          	mov    0x24(%esp),%eax
 8050351:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050355:	ff 93 68 bb 02 00    	call   *0x2bb68(%ebx)
 805035b:	89 c2                	mov    %eax,%edx
 805035d:	83 c4 14             	add    $0x14,%esp
 8050360:	89 d0                	mov    %edx,%eax
 8050362:	5b                   	pop    %ebx
 8050363:	5e                   	pop    %esi
 8050364:	c3                   	ret    
 8050365:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8050369:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08050370 <_ZL18MlockIsUnsupportedv.part.5>:
 8050370:	53                   	push   %ebx
 8050371:	e8 7a 97 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050376:	81 c3 8a fc 05 00    	add    $0x5fc8a,%ebx
 805037c:	83 ec 18             	sub    $0x18,%esp
 805037f:	8d 83 60 36 fd ff    	lea    -0x2c9a0(%ebx),%eax
 8050385:	89 04 24             	mov    %eax,(%esp)
 8050388:	c6 83 e1 bb 02 00 01 	movb   $0x1,0x2bbe1(%ebx)
 805038f:	e8 ec 12 01 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8050394:	83 c4 18             	add    $0x18,%esp
 8050397:	5b                   	pop    %ebx
 8050398:	c3                   	ret    
 8050399:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080503a0 <__interceptor_mlock>:
 80503a0:	53                   	push   %ebx
 80503a1:	e8 4a 97 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80503a6:	81 c3 5a fc 05 00    	add    $0x5fc5a,%ebx
 80503ac:	83 ec 08             	sub    $0x8,%esp
 80503af:	80 bb e1 bb 02 00 00 	cmpb   $0x0,0x2bbe1(%ebx)
 80503b6:	75 05                	jne    80503bd <__interceptor_mlock+0x1d>
 80503b8:	e8 b3 ff ff ff       	call   8050370 <_ZL18MlockIsUnsupportedv.part.5>
 80503bd:	83 c4 08             	add    $0x8,%esp
 80503c0:	31 c0                	xor    %eax,%eax
 80503c2:	5b                   	pop    %ebx
 80503c3:	c3                   	ret    
 80503c4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80503ca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

080503d0 <__interceptor_munlock>:
 80503d0:	53                   	push   %ebx
 80503d1:	e8 1a 97 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80503d6:	81 c3 2a fc 05 00    	add    $0x5fc2a,%ebx
 80503dc:	83 ec 08             	sub    $0x8,%esp
 80503df:	80 bb e1 bb 02 00 00 	cmpb   $0x0,0x2bbe1(%ebx)
 80503e6:	75 05                	jne    80503ed <__interceptor_munlock+0x1d>
 80503e8:	e8 83 ff ff ff       	call   8050370 <_ZL18MlockIsUnsupportedv.part.5>
 80503ed:	83 c4 08             	add    $0x8,%esp
 80503f0:	31 c0                	xor    %eax,%eax
 80503f2:	5b                   	pop    %ebx
 80503f3:	c3                   	ret    
 80503f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80503fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08050400 <__interceptor_mlockall>:
 8050400:	53                   	push   %ebx
 8050401:	e8 ea 96 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050406:	81 c3 fa fb 05 00    	add    $0x5fbfa,%ebx
 805040c:	83 ec 08             	sub    $0x8,%esp
 805040f:	80 bb e1 bb 02 00 00 	cmpb   $0x0,0x2bbe1(%ebx)
 8050416:	75 05                	jne    805041d <__interceptor_mlockall+0x1d>
 8050418:	e8 53 ff ff ff       	call   8050370 <_ZL18MlockIsUnsupportedv.part.5>
 805041d:	83 c4 08             	add    $0x8,%esp
 8050420:	31 c0                	xor    %eax,%eax
 8050422:	5b                   	pop    %ebx
 8050423:	c3                   	ret    
 8050424:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805042a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08050430 <__interceptor_munlockall>:
 8050430:	53                   	push   %ebx
 8050431:	e8 ba 96 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050436:	81 c3 ca fb 05 00    	add    $0x5fbca,%ebx
 805043c:	83 ec 08             	sub    $0x8,%esp
 805043f:	80 bb e1 bb 02 00 00 	cmpb   $0x0,0x2bbe1(%ebx)
 8050446:	75 05                	jne    805044d <__interceptor_munlockall+0x1d>
 8050448:	e8 23 ff ff ff       	call   8050370 <_ZL18MlockIsUnsupportedv.part.5>
 805044d:	83 c4 08             	add    $0x8,%esp
 8050450:	31 c0                	xor    %eax,%eax
 8050452:	5b                   	pop    %ebx
 8050453:	c3                   	ret    
 8050454:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805045a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08050460 <_ZL12scanf_commonPvibPKcPc.isra.3>:
 8050460:	55                   	push   %ebp
 8050461:	89 e5                	mov    %esp,%ebp
 8050463:	57                   	push   %edi
 8050464:	56                   	push   %esi
 8050465:	53                   	push   %ebx
 8050466:	83 ec 5c             	sub    $0x5c,%esp
 8050469:	8b 75 08             	mov    0x8(%ebp),%esi
 805046c:	e8 7f 96 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050471:	81 c3 8f fb 05 00    	add    $0x5fb8f,%ebx
 8050477:	85 c0                	test   %eax,%eax
 8050479:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 805047c:	88 55 bf             	mov    %dl,-0x41(%ebp)
 805047f:	0f 84 1c 06 00 00    	je     8050aa1 <_ZL12scanf_commonPvibPKcPc.isra.3+0x641>
 8050485:	8d 83 64 3e fd ff    	lea    -0x2c19c(%ebx),%eax
 805048b:	89 45 b8             	mov    %eax,-0x48(%ebp)
 805048e:	66 90                	xchg   %ax,%ax
 8050490:	80 3e 00             	cmpb   $0x0,(%esi)
 8050493:	74 74                	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050495:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8050498:	85 c0                	test   %eax,%eax
 805049a:	74 6d                	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 805049c:	8d 45 d8             	lea    -0x28(%ebp),%eax
 805049f:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 80504a6:	00 
 80504a7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 80504ae:	00 
 80504af:	89 04 24             	mov    %eax,(%esp)
 80504b2:	e8 89 14 01 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 80504b7:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%ebp)
 80504be:	66 90                	xchg   %ax,%ax
 80504c0:	0f b6 06             	movzbl (%esi),%eax
 80504c3:	84 c0                	test   %al,%al
 80504c5:	74 0e                	je     80504d5 <_ZL12scanf_commonPvibPKcPc.isra.3+0x75>
 80504c7:	3c 25                	cmp    $0x25,%al
 80504c9:	74 4d                	je     8050518 <_ZL12scanf_commonPvibPKcPc.isra.3+0xb8>
 80504cb:	83 c6 01             	add    $0x1,%esi
 80504ce:	0f b6 06             	movzbl (%esi),%eax
 80504d1:	84 c0                	test   %al,%al
 80504d3:	75 f2                	jne    80504c7 <_ZL12scanf_commonPvibPKcPc.isra.3+0x67>
 80504d5:	0f be 45 e4          	movsbl -0x1c(%ebp),%eax
 80504d9:	84 c0                	test   %al,%al
 80504db:	0f 84 d4 00 00 00    	je     80505b5 <_ZL12scanf_commonPvibPKcPc.isra.3+0x155>
 80504e1:	83 7d d8 ff          	cmpl   $0xffffffff,-0x28(%ebp)
 80504e5:	75 22                	jne    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80504e7:	80 7d e0 00          	cmpb   $0x0,-0x20(%ebp)
 80504eb:	75 a3                	jne    8050490 <_ZL12scanf_commonPvibPKcPc.isra.3+0x30>
 80504ed:	80 7d e1 00          	cmpb   $0x0,-0x1f(%ebp)
 80504f1:	0f 85 09 01 00 00    	jne    8050600 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1a0>
 80504f7:	80 7d e5 00          	cmpb   $0x0,-0x1b(%ebp)
 80504fb:	0f 84 c2 01 00 00    	je     80506c3 <_ZL12scanf_commonPvibPKcPc.isra.3+0x263>
 8050501:	3c 61                	cmp    $0x61,%al
 8050503:	0f 84 d1 02 00 00    	je     80507da <_ZL12scanf_commonPvibPKcPc.isra.3+0x37a>
 8050509:	83 c4 5c             	add    $0x5c,%esp
 805050c:	5b                   	pop    %ebx
 805050d:	5e                   	pop    %esi
 805050e:	5f                   	pop    %edi
 805050f:	5d                   	pop    %ebp
 8050510:	c3                   	ret    
 8050511:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8050518:	0f b6 4e 01          	movzbl 0x1(%esi),%ecx
 805051c:	80 f9 25             	cmp    $0x25,%cl
 805051f:	75 07                	jne    8050528 <_ZL12scanf_commonPvibPKcPc.isra.3+0xc8>
 8050521:	83 c6 02             	add    $0x2,%esi
 8050524:	eb 9a                	jmp    80504c0 <_ZL12scanf_commonPvibPKcPc.isra.3+0x60>
 8050526:	66 90                	xchg   %ax,%ax
 8050528:	84 c9                	test   %cl,%cl
 805052a:	74 dd                	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 805052c:	8d 41 d0             	lea    -0x30(%ecx),%eax
 805052f:	3c 09                	cmp    $0x9,%al
 8050531:	8d 7e 01             	lea    0x1(%esi),%edi
 8050534:	0f 86 ee 01 00 00    	jbe    8050728 <_ZL12scanf_commonPvibPKcPc.isra.3+0x2c8>
 805053a:	80 f9 2a             	cmp    $0x2a,%cl
 805053d:	0f 84 34 02 00 00    	je     8050777 <_ZL12scanf_commonPvibPKcPc.isra.3+0x317>
 8050543:	8d 41 d0             	lea    -0x30(%ecx),%eax
 8050546:	3c 09                	cmp    $0x9,%al
 8050548:	0f 86 3f 02 00 00    	jbe    805078d <_ZL12scanf_commonPvibPKcPc.isra.3+0x32d>
 805054e:	80 f9 6d             	cmp    $0x6d,%cl
 8050551:	0f 84 73 02 00 00    	je     80507ca <_ZL12scanf_commonPvibPKcPc.isra.3+0x36a>
 8050557:	8b 45 b8             	mov    -0x48(%ebp),%eax
 805055a:	0f be c9             	movsbl %cl,%ecx
 805055d:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8050561:	89 04 24             	mov    %eax,(%esp)
 8050564:	e8 77 15 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8050569:	85 c0                	test   %eax,%eax
 805056b:	0f 84 0d 03 00 00    	je     805087e <_ZL12scanf_commonPvibPKcPc.isra.3+0x41e>
 8050571:	0f b6 07             	movzbl (%edi),%eax
 8050574:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8050578:	88 45 e2             	mov    %al,-0x1e(%ebp)
 805057b:	8d 47 01             	lea    0x1(%edi),%eax
 805057e:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8050581:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050584:	80 fa 5b             	cmp    $0x5b,%dl
 8050587:	88 55 e4             	mov    %dl,-0x1c(%ebp)
 805058a:	8d 70 01             	lea    0x1(%eax),%esi
 805058d:	0f 84 59 02 00 00    	je     80507ec <_ZL12scanf_commonPvibPKcPc.isra.3+0x38c>
 8050593:	80 7d bf 00          	cmpb   $0x0,-0x41(%ebp)
 8050597:	74 09                	je     80505a2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x142>
 8050599:	80 fa 61             	cmp    $0x61,%dl
 805059c:	0f 84 0e 03 00 00    	je     80508b0 <_ZL12scanf_commonPvibPKcPc.isra.3+0x450>
 80505a2:	85 f6                	test   %esi,%esi
 80505a4:	0f 84 5f ff ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80505aa:	0f be c2             	movsbl %dl,%eax
 80505ad:	84 c0                	test   %al,%al
 80505af:	0f 85 2c ff ff ff    	jne    80504e1 <_ZL12scanf_commonPvibPKcPc.isra.3+0x81>
 80505b5:	0f be 0e             	movsbl (%esi),%ecx
 80505b8:	89 c8                	mov    %ecx,%eax
 80505ba:	99                   	cltd   
 80505bb:	09 d1                	or     %edx,%ecx
 80505bd:	0f 84 46 ff ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80505c3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80505c7:	8d 83 6a 3e fd ff    	lea    -0x2c196(%ebx),%eax
 80505cd:	89 44 24 08          	mov    %eax,0x8(%esp)
 80505d1:	8d 83 a4 36 fd ff    	lea    -0x2c95c(%ebx),%eax
 80505d7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80505de:	00 
 80505df:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80505e6:	00 
 80505e7:	89 54 24 10          	mov    %edx,0x10(%esp)
 80505eb:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)
 80505f2:	00 
 80505f3:	89 04 24             	mov    %eax,(%esp)
 80505f6:	e8 b5 1d 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80505fb:	90                   	nop
 80505fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8050600:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050604:	8d 83 7a 3e fd ff    	lea    -0x2c186(%ebx),%eax
 805060a:	89 04 24             	mov    %eax,(%esp)
 805060d:	e8 ce 14 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8050612:	85 c0                	test   %eax,%eax
 8050614:	0f 84 ef fe ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 805061a:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 805061e:	bf 04 00 00 00       	mov    $0x4,%edi
 8050623:	8b 55 0c             	mov    0xc(%ebp),%edx
 8050626:	83 c2 04             	add    $0x4,%edx
 8050629:	3c 6e                	cmp    $0x6e,%al
 805062b:	89 55 c0             	mov    %edx,-0x40(%ebp)
 805062e:	8b 55 0c             	mov    0xc(%ebp),%edx
 8050631:	0f 95 c0             	setne  %al
 8050634:	0f b6 c0             	movzbl %al,%eax
 8050637:	29 45 c4             	sub    %eax,-0x3c(%ebp)
 805063a:	83 ff ff             	cmp    $0xffffffff,%edi
 805063d:	8b 12                	mov    (%edx),%edx
 805063f:	0f 84 23 02 00 00    	je     8050868 <_ZL12scanf_commonPvibPKcPc.isra.3+0x408>
 8050645:	85 ff                	test   %edi,%edi
 8050647:	74 6f                	je     80506b8 <_ZL12scanf_commonPvibPKcPc.isra.3+0x258>
 8050649:	83 ff 20             	cmp    $0x20,%edi
 805064c:	77 21                	ja     805066f <_ZL12scanf_commonPvibPKcPc.isra.3+0x20f>
 805064e:	89 d0                	mov    %edx,%eax
 8050650:	c1 e8 03             	shr    $0x3,%eax
 8050653:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805065a:	84 c0                	test   %al,%al
 805065c:	0f 84 c4 01 00 00    	je     8050826 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3c6>
 8050662:	89 d1                	mov    %edx,%ecx
 8050664:	83 e1 07             	and    $0x7,%ecx
 8050667:	39 c1                	cmp    %eax,%ecx
 8050669:	0f 8c b7 01 00 00    	jl     8050826 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3c6>
 805066f:	89 14 24             	mov    %edx,(%esp)
 8050672:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8050676:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 8050679:	e8 22 ce 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805067e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8050681:	85 c0                	test   %eax,%eax
 8050683:	74 33                	je     80506b8 <_ZL12scanf_commonPvibPKcPc.isra.3+0x258>
 8050685:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 8050688:	e8 f3 42 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805068d:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8050690:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8050694:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805069b:	00 
 805069c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80506a0:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80506a4:	8d 55 d4             	lea    -0x2c(%ebp),%edx
 80506a7:	89 54 24 08          	mov    %edx,0x8(%esp)
 80506ab:	89 04 24             	mov    %eax,(%esp)
 80506ae:	e8 fd ef 00 00       	call   805f6b0 <__asan_report_error>
 80506b3:	90                   	nop
 80506b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80506b8:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80506bb:	89 45 0c             	mov    %eax,0xc(%ebp)
 80506be:	e9 cd fd ff ff       	jmp    8050490 <_ZL12scanf_commonPvibPKcPc.isra.3+0x30>
 80506c3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80506c7:	8d 83 80 3e fd ff    	lea    -0x2c180(%ebx),%eax
 80506cd:	89 04 24             	mov    %eax,(%esp)
 80506d0:	e8 0b 14 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 80506d5:	85 c0                	test   %eax,%eax
 80506d7:	0f 84 16 03 00 00    	je     80509f3 <_ZL12scanf_commonPvibPKcPc.isra.3+0x593>
 80506dd:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax
 80506e1:	3c 6a                	cmp    $0x6a,%al
 80506e3:	0f 84 47 02 00 00    	je     8050930 <_ZL12scanf_commonPvibPKcPc.isra.3+0x4d0>
 80506e9:	0f 8e f3 01 00 00    	jle    80508e2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x482>
 80506ef:	3c 74                	cmp    $0x74,%al
 80506f1:	0f 84 23 ff ff ff    	je     805061a <_ZL12scanf_commonPvibPKcPc.isra.3+0x1ba>
 80506f7:	3c 7a                	cmp    $0x7a,%al
 80506f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8050700:	0f 84 14 ff ff ff    	je     805061a <_ZL12scanf_commonPvibPKcPc.isra.3+0x1ba>
 8050706:	3c 6c                	cmp    $0x6c,%al
 8050708:	0f 85 fb fd ff ff    	jne    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 805070e:	80 7d e3 6c          	cmpb   $0x6c,-0x1d(%ebp)
 8050712:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050716:	0f 85 02 ff ff ff    	jne    805061e <_ZL12scanf_commonPvibPKcPc.isra.3+0x1be>
 805071c:	bf 08 00 00 00       	mov    $0x8,%edi
 8050721:	e9 fd fe ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 8050726:	66 90                	xchg   %ax,%ax
 8050728:	89 3c 24             	mov    %edi,(%esp)
 805072b:	e8 a0 17 01 00       	call   8061ed0 <_ZN11__sanitizer14internal_atollEPKc>
 8050730:	0f b6 76 01          	movzbl 0x1(%esi),%esi
 8050734:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8050737:	8d 46 d0             	lea    -0x30(%esi),%eax
 805073a:	3c 09                	cmp    $0x9,%al
 805073c:	0f 87 e5 01 00 00    	ja     8050927 <_ZL12scanf_commonPvibPKcPc.isra.3+0x4c7>
 8050742:	89 f8                	mov    %edi,%eax
 8050744:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8050748:	83 c0 01             	add    $0x1,%eax
 805074b:	0f b6 10             	movzbl (%eax),%edx
 805074e:	8d 4a d0             	lea    -0x30(%edx),%ecx
 8050751:	80 f9 09             	cmp    $0x9,%cl
 8050754:	76 f2                	jbe    8050748 <_ZL12scanf_commonPvibPKcPc.isra.3+0x2e8>
 8050756:	80 fa 24             	cmp    $0x24,%dl
 8050759:	89 f1                	mov    %esi,%ecx
 805075b:	0f 85 d9 fd ff ff    	jne    805053a <_ZL12scanf_commonPvibPKcPc.isra.3+0xda>
 8050761:	0f b6 48 01          	movzbl 0x1(%eax),%ecx
 8050765:	8b 7d c0             	mov    -0x40(%ebp),%edi
 8050768:	80 f9 2a             	cmp    $0x2a,%cl
 805076b:	89 7d d8             	mov    %edi,-0x28(%ebp)
 805076e:	8d 78 01             	lea    0x1(%eax),%edi
 8050771:	0f 85 cc fd ff ff    	jne    8050543 <_ZL12scanf_commonPvibPKcPc.isra.3+0xe3>
 8050777:	0f b6 4f 01          	movzbl 0x1(%edi),%ecx
 805077b:	83 c7 01             	add    $0x1,%edi
 805077e:	c6 45 e0 01          	movb   $0x1,-0x20(%ebp)
 8050782:	8d 41 d0             	lea    -0x30(%ecx),%eax
 8050785:	3c 09                	cmp    $0x9,%al
 8050787:	0f 87 c1 fd ff ff    	ja     805054e <_ZL12scanf_commonPvibPKcPc.isra.3+0xee>
 805078d:	89 3c 24             	mov    %edi,(%esp)
 8050790:	e8 3b 17 01 00       	call   8061ed0 <_ZN11__sanitizer14internal_atollEPKc>
 8050795:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8050798:	0f b6 17             	movzbl (%edi),%edx
 805079b:	83 ea 30             	sub    $0x30,%edx
 805079e:	80 fa 09             	cmp    $0x9,%dl
 80507a1:	77 13                	ja     80507b6 <_ZL12scanf_commonPvibPKcPc.isra.3+0x356>
 80507a3:	90                   	nop
 80507a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80507a8:	83 c7 01             	add    $0x1,%edi
 80507ab:	0f b6 17             	movzbl (%edi),%edx
 80507ae:	83 ea 30             	sub    $0x30,%edx
 80507b1:	80 fa 09             	cmp    $0x9,%dl
 80507b4:	76 f2                	jbe    80507a8 <_ZL12scanf_commonPvibPKcPc.isra.3+0x348>
 80507b6:	85 c0                	test   %eax,%eax
 80507b8:	0f 8e 4b fd ff ff    	jle    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80507be:	0f b6 0f             	movzbl (%edi),%ecx
 80507c1:	80 f9 6d             	cmp    $0x6d,%cl
 80507c4:	0f 85 8d fd ff ff    	jne    8050557 <_ZL12scanf_commonPvibPKcPc.isra.3+0xf7>
 80507ca:	0f b6 4f 01          	movzbl 0x1(%edi),%ecx
 80507ce:	83 c7 01             	add    $0x1,%edi
 80507d1:	c6 45 e1 01          	movb   $0x1,-0x1f(%ebp)
 80507d5:	e9 7d fd ff ff       	jmp    8050557 <_ZL12scanf_commonPvibPKcPc.isra.3+0xf7>
 80507da:	80 7d e2 00          	cmpb   $0x0,-0x1e(%ebp)
 80507de:	0f 84 3a fe ff ff    	je     805061e <_ZL12scanf_commonPvibPKcPc.isra.3+0x1be>
 80507e4:	83 c4 5c             	add    $0x5c,%esp
 80507e7:	5b                   	pop    %ebx
 80507e8:	5e                   	pop    %esi
 80507e9:	5f                   	pop    %edi
 80507ea:	5d                   	pop    %ebp
 80507eb:	c3                   	ret    
 80507ec:	0f b6 40 01          	movzbl 0x1(%eax),%eax
 80507f0:	3c 5e                	cmp    $0x5e,%al
 80507f2:	0f 84 18 01 00 00    	je     8050910 <_ZL12scanf_commonPvibPKcPc.isra.3+0x4b0>
 80507f8:	3c 5d                	cmp    $0x5d,%al
 80507fa:	75 16                	jne    8050812 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3b2>
 80507fc:	0f b6 46 01          	movzbl 0x1(%esi),%eax
 8050800:	83 c6 01             	add    $0x1,%esi
 8050803:	3c 5d                	cmp    $0x5d,%al
 8050805:	74 0f                	je     8050816 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3b6>
 8050807:	90                   	nop
 8050808:	84 c0                	test   %al,%al
 805080a:	74 0a                	je     8050816 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3b6>
 805080c:	83 c6 01             	add    $0x1,%esi
 805080f:	0f b6 06             	movzbl (%esi),%eax
 8050812:	3c 5d                	cmp    $0x5d,%al
 8050814:	75 f2                	jne    8050808 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3a8>
 8050816:	84 c0                	test   %al,%al
 8050818:	0f 84 eb fc ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 805081e:	83 c6 01             	add    $0x1,%esi
 8050821:	e9 7c fd ff ff       	jmp    80505a2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x142>
 8050826:	8d 4c 3a ff          	lea    -0x1(%edx,%edi,1),%ecx
 805082a:	89 c8                	mov    %ecx,%eax
 805082c:	c1 e8 03             	shr    $0x3,%eax
 805082f:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8050836:	84 c0                	test   %al,%al
 8050838:	0f 85 bd 00 00 00    	jne    80508fb <_ZL12scanf_commonPvibPKcPc.isra.3+0x49b>
 805083e:	89 f9                	mov    %edi,%ecx
 8050840:	d1 e9                	shr    %ecx
 8050842:	01 d1                	add    %edx,%ecx
 8050844:	89 c8                	mov    %ecx,%eax
 8050846:	c1 e8 03             	shr    $0x3,%eax
 8050849:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8050850:	84 c0                	test   %al,%al
 8050852:	0f 84 60 fe ff ff    	je     80506b8 <_ZL12scanf_commonPvibPKcPc.isra.3+0x258>
 8050858:	83 e1 07             	and    $0x7,%ecx
 805085b:	39 c1                	cmp    %eax,%ecx
 805085d:	0f 8d 0c fe ff ff    	jge    805066f <_ZL12scanf_commonPvibPKcPc.isra.3+0x20f>
 8050863:	e9 50 fe ff ff       	jmp    80506b8 <_ZL12scanf_commonPvibPKcPc.isra.3+0x258>
 8050868:	89 14 24             	mov    %edx,(%esp)
 805086b:	89 55 b4             	mov    %edx,-0x4c(%ebp)
 805086e:	e8 dd 12 01 00       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8050873:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8050876:	8d 78 01             	lea    0x1(%eax),%edi
 8050879:	e9 c7 fd ff ff       	jmp    8050645 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1e5>
 805087e:	0f b6 17             	movzbl (%edi),%edx
 8050881:	80 fa 68             	cmp    $0x68,%dl
 8050884:	0f 84 b4 00 00 00    	je     805093e <_ZL12scanf_commonPvibPKcPc.isra.3+0x4de>
 805088a:	80 fa 6c             	cmp    $0x6c,%dl
 805088d:	89 7d c0             	mov    %edi,-0x40(%ebp)
 8050890:	0f 85 eb fc ff ff    	jne    8050581 <_ZL12scanf_commonPvibPKcPc.isra.3+0x121>
 8050896:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 805089a:	c6 45 e2 6c          	movb   $0x6c,-0x1e(%ebp)
 805089e:	80 fa 6c             	cmp    $0x6c,%dl
 80508a1:	0f 84 3b 01 00 00    	je     80509e2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x582>
 80508a7:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 80508ab:	e9 d1 fc ff ff       	jmp    8050581 <_ZL12scanf_commonPvibPKcPc.isra.3+0x121>
 80508b0:	80 7d e2 00          	cmpb   $0x0,-0x1e(%ebp)
 80508b4:	0f 85 e8 fc ff ff    	jne    80505a2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x142>
 80508ba:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80508bd:	0f b6 78 01          	movzbl 0x1(%eax),%edi
 80508c1:	89 f8                	mov    %edi,%eax
 80508c3:	83 e0 df             	and    $0xffffffdf,%eax
 80508c6:	3c 53                	cmp    $0x53,%al
 80508c8:	0f 85 b7 00 00 00    	jne    8050985 <_ZL12scanf_commonPvibPKcPc.isra.3+0x525>
 80508ce:	8b 75 c0             	mov    -0x40(%ebp),%esi
 80508d1:	b8 61 00 00 00       	mov    $0x61,%eax
 80508d6:	c6 45 e5 01          	movb   $0x1,-0x1b(%ebp)
 80508da:	83 c6 02             	add    $0x2,%esi
 80508dd:	e9 ff fb ff ff       	jmp    80504e1 <_ZL12scanf_commonPvibPKcPc.isra.3+0x81>
 80508e2:	3c 4c                	cmp    $0x4c,%al
 80508e4:	74 4a                	je     8050930 <_ZL12scanf_commonPvibPKcPc.isra.3+0x4d0>
 80508e6:	3c 68                	cmp    $0x68,%al
 80508e8:	74 7e                	je     8050968 <_ZL12scanf_commonPvibPKcPc.isra.3+0x508>
 80508ea:	84 c0                	test   %al,%al
 80508ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80508f0:	0f 85 13 fc ff ff    	jne    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80508f6:	e9 1f fd ff ff       	jmp    805061a <_ZL12scanf_commonPvibPKcPc.isra.3+0x1ba>
 80508fb:	83 e1 07             	and    $0x7,%ecx
 80508fe:	39 c1                	cmp    %eax,%ecx
 8050900:	0f 8d 69 fd ff ff    	jge    805066f <_ZL12scanf_commonPvibPKcPc.isra.3+0x20f>
 8050906:	e9 33 ff ff ff       	jmp    805083e <_ZL12scanf_commonPvibPKcPc.isra.3+0x3de>
 805090b:	90                   	nop
 805090c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8050910:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050913:	8d 70 02             	lea    0x2(%eax),%esi
 8050916:	0f b6 40 02          	movzbl 0x2(%eax),%eax
 805091a:	3c 5d                	cmp    $0x5d,%al
 805091c:	0f 85 f0 fe ff ff    	jne    8050812 <_ZL12scanf_commonPvibPKcPc.isra.3+0x3b2>
 8050922:	e9 d5 fe ff ff       	jmp    80507fc <_ZL12scanf_commonPvibPKcPc.isra.3+0x39c>
 8050927:	89 f2                	mov    %esi,%edx
 8050929:	89 f8                	mov    %edi,%eax
 805092b:	e9 26 fe ff ff       	jmp    8050756 <_ZL12scanf_commonPvibPKcPc.isra.3+0x2f6>
 8050930:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050934:	bf 08 00 00 00       	mov    $0x8,%edi
 8050939:	e9 e5 fc ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 805093e:	0f b6 57 01          	movzbl 0x1(%edi),%edx
 8050942:	8d 47 01             	lea    0x1(%edi),%eax
 8050945:	c6 45 e2 68          	movb   $0x68,-0x1e(%ebp)
 8050949:	89 45 c0             	mov    %eax,-0x40(%ebp)
 805094c:	80 fa 68             	cmp    $0x68,%dl
 805094f:	0f 85 2c fc ff ff    	jne    8050581 <_ZL12scanf_commonPvibPKcPc.isra.3+0x121>
 8050955:	8d 47 02             	lea    0x2(%edi),%eax
 8050958:	0f b6 57 02          	movzbl 0x2(%edi),%edx
 805095c:	c6 45 e3 68          	movb   $0x68,-0x1d(%ebp)
 8050960:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8050963:	e9 19 fc ff ff       	jmp    8050581 <_ZL12scanf_commonPvibPKcPc.isra.3+0x121>
 8050968:	80 7d e3 68          	cmpb   $0x68,-0x1d(%ebp)
 805096c:	bf 01 00 00 00       	mov    $0x1,%edi
 8050971:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050975:	0f 84 a8 fc ff ff    	je     8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 805097b:	bf 02 00 00 00       	mov    $0x2,%edi
 8050980:	e9 9e fc ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 8050985:	89 f9                	mov    %edi,%ecx
 8050987:	b8 61 00 00 00       	mov    $0x61,%eax
 805098c:	80 f9 5b             	cmp    $0x5b,%cl
 805098f:	0f 85 4c fb ff ff    	jne    80504e1 <_ZL12scanf_commonPvibPKcPc.isra.3+0x81>
 8050995:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050998:	8d 70 02             	lea    0x2(%eax),%esi
 805099b:	0f b6 40 02          	movzbl 0x2(%eax),%eax
 805099f:	3c 5e                	cmp    $0x5e,%al
 80509a1:	0f 84 46 01 00 00    	je     8050aed <_ZL12scanf_commonPvibPKcPc.isra.3+0x68d>
 80509a7:	3c 5d                	cmp    $0x5d,%al
 80509a9:	75 17                	jne    80509c2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x562>
 80509ab:	e9 31 01 00 00       	jmp    8050ae1 <_ZL12scanf_commonPvibPKcPc.isra.3+0x681>
 80509b0:	84 c0                	test   %al,%al
 80509b2:	74 12                	je     80509c6 <_ZL12scanf_commonPvibPKcPc.isra.3+0x566>
 80509b4:	3c 25                	cmp    $0x25,%al
 80509b6:	0f 84 4d fb ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80509bc:	83 c6 01             	add    $0x1,%esi
 80509bf:	0f b6 06             	movzbl (%esi),%eax
 80509c2:	3c 5d                	cmp    $0x5d,%al
 80509c4:	75 ea                	jne    80509b0 <_ZL12scanf_commonPvibPKcPc.isra.3+0x550>
 80509c6:	3c 25                	cmp    $0x25,%al
 80509c8:	0f 84 3b fb ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80509ce:	84 c0                	test   %al,%al
 80509d0:	0f 84 33 fb ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 80509d6:	83 c6 01             	add    $0x1,%esi
 80509d9:	c6 45 e5 01          	movb   $0x1,-0x1b(%ebp)
 80509dd:	e9 c0 fb ff ff       	jmp    80505a2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x142>
 80509e2:	c6 45 e3 6c          	movb   $0x6c,-0x1d(%ebp)
 80509e6:	0f b6 57 02          	movzbl 0x2(%edi),%edx
 80509ea:	83 45 c0 02          	addl   $0x2,-0x40(%ebp)
 80509ee:	e9 8e fb ff ff       	jmp    8050581 <_ZL12scanf_commonPvibPKcPc.isra.3+0x121>
 80509f3:	0f be 45 e4          	movsbl -0x1c(%ebp),%eax
 80509f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80509fb:	8d 83 88 3e fd ff    	lea    -0x2c178(%ebx),%eax
 8050a01:	89 04 24             	mov    %eax,(%esp)
 8050a04:	e8 d7 10 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8050a09:	85 c0                	test   %eax,%eax
 8050a0b:	74 43                	je     8050a50 <_ZL12scanf_commonPvibPKcPc.isra.3+0x5f0>
 8050a0d:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax
 8050a11:	3c 4c                	cmp    $0x4c,%al
 8050a13:	74 15                	je     8050a2a <_ZL12scanf_commonPvibPKcPc.isra.3+0x5ca>
 8050a15:	0f 8e cf fe ff ff    	jle    80508ea <_ZL12scanf_commonPvibPKcPc.isra.3+0x48a>
 8050a1b:	3c 6c                	cmp    $0x6c,%al
 8050a1d:	8d 76 00             	lea    0x0(%esi),%esi
 8050a20:	74 16                	je     8050a38 <_ZL12scanf_commonPvibPKcPc.isra.3+0x5d8>
 8050a22:	3c 71                	cmp    $0x71,%al
 8050a24:	0f 85 df fa ff ff    	jne    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050a2a:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050a2e:	bf 0c 00 00 00       	mov    $0xc,%edi
 8050a33:	e9 eb fb ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 8050a38:	80 7d e3 6c          	cmpb   $0x6c,-0x1d(%ebp)
 8050a3c:	bf 0c 00 00 00       	mov    $0xc,%edi
 8050a41:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050a45:	0f 85 d1 fc ff ff    	jne    805071c <_ZL12scanf_commonPvibPKcPc.isra.3+0x2bc>
 8050a4b:	e9 d3 fb ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 8050a50:	0f be 45 e4          	movsbl -0x1c(%ebp),%eax
 8050a54:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050a58:	8d 83 7c 3e fd ff    	lea    -0x2c184(%ebx),%eax
 8050a5e:	89 04 24             	mov    %eax,(%esp)
 8050a61:	e8 7a 10 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8050a66:	85 c0                	test   %eax,%eax
 8050a68:	0f 84 9c 00 00 00    	je     8050b0a <_ZL12scanf_commonPvibPKcPc.isra.3+0x6aa>
 8050a6e:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8050a71:	8d 45 e2             	lea    -0x1e(%ebp),%eax
 8050a74:	e8 37 8f ff ff       	call   80499b0 <_ZL19scanf_get_char_sizeP14ScanfDirective.isra.1>
 8050a79:	85 c0                	test   %eax,%eax
 8050a7b:	0f 84 88 fa ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050a81:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8050a84:	85 d2                	test   %edx,%edx
 8050a86:	74 74                	je     8050afc <_ZL12scanf_commonPvibPKcPc.isra.3+0x69c>
 8050a88:	83 c2 01             	add    $0x1,%edx
 8050a8b:	0f af c2             	imul   %edx,%eax
 8050a8e:	89 c7                	mov    %eax,%edi
 8050a90:	85 ff                	test   %edi,%edi
 8050a92:	0f 84 71 fa ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050a98:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050a9c:	e9 82 fb ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 8050aa1:	8d 83 4f 3e fd ff    	lea    -0x2c1b1(%ebx),%eax
 8050aa7:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050aab:	8d 83 a4 36 fd ff    	lea    -0x2c95c(%ebx),%eax
 8050ab1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050ab8:	00 
 8050ab9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050ac0:	00 
 8050ac1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050ac8:	00 
 8050ac9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050ad0:	00 
 8050ad1:	c7 44 24 04 14 01 00 	movl   $0x114,0x4(%esp)
 8050ad8:	00 
 8050ad9:	89 04 24             	mov    %eax,(%esp)
 8050adc:	e8 cf 18 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050ae1:	0f b6 46 01          	movzbl 0x1(%esi),%eax
 8050ae5:	83 c6 01             	add    $0x1,%esi
 8050ae8:	e9 d5 fe ff ff       	jmp    80509c2 <_ZL12scanf_commonPvibPKcPc.isra.3+0x562>
 8050aed:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8050af0:	8d 70 03             	lea    0x3(%eax),%esi
 8050af3:	0f b6 40 03          	movzbl 0x3(%eax),%eax
 8050af7:	e9 ab fe ff ff       	jmp    80509a7 <_ZL12scanf_commonPvibPKcPc.isra.3+0x547>
 8050afc:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050b00:	bf ff ff ff ff       	mov    $0xffffffff,%edi
 8050b05:	e9 19 fb ff ff       	jmp    8050623 <_ZL12scanf_commonPvibPKcPc.isra.3+0x1c3>
 8050b0a:	0f be 45 e4          	movsbl -0x1c(%ebp),%eax
 8050b0e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050b12:	8d 83 91 3e fd ff    	lea    -0x2c16f(%ebx),%eax
 8050b18:	89 04 24             	mov    %eax,(%esp)
 8050b1b:	e8 c0 0f 01 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8050b20:	85 c0                	test   %eax,%eax
 8050b22:	74 25                	je     8050b49 <_ZL12scanf_commonPvibPKcPc.isra.3+0x6e9>
 8050b24:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8050b27:	8d 45 e2             	lea    -0x1e(%ebp),%eax
 8050b2a:	e8 81 8e ff ff       	call   80499b0 <_ZL19scanf_get_char_sizeP14ScanfDirective.isra.1>
 8050b2f:	85 c0                	test   %eax,%eax
 8050b31:	0f 84 d2 f9 ff ff    	je     8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050b37:	8b 55 dc             	mov    -0x24(%ebp),%edx
 8050b3a:	89 c7                	mov    %eax,%edi
 8050b3c:	0f af c2             	imul   %edx,%eax
 8050b3f:	85 d2                	test   %edx,%edx
 8050b41:	0f 45 f8             	cmovne %eax,%edi
 8050b44:	e9 47 ff ff ff       	jmp    8050a90 <_ZL12scanf_commonPvibPKcPc.isra.3+0x630>
 8050b49:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
 8050b4d:	3c 70                	cmp    $0x70,%al
 8050b4f:	0f 85 b4 f9 ff ff    	jne    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050b55:	80 7d e3 00          	cmpb   $0x0,-0x1d(%ebp)
 8050b59:	0f 84 bf fa ff ff    	je     805061e <_ZL12scanf_commonPvibPKcPc.isra.3+0x1be>
 8050b5f:	e9 a5 f9 ff ff       	jmp    8050509 <_ZL12scanf_commonPvibPKcPc.isra.3+0xa9>
 8050b64:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8050b6a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08050b70 <__interceptor_vscanf>:
 8050b70:	55                   	push   %ebp
 8050b71:	57                   	push   %edi
 8050b72:	56                   	push   %esi
 8050b73:	53                   	push   %ebx
 8050b74:	e8 77 8f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050b79:	81 c3 87 f4 05 00    	add    $0x5f487,%ebx
 8050b7f:	83 ec 2c             	sub    $0x2c,%esp
 8050b82:	8b 7c 24 40          	mov    0x40(%esp),%edi
 8050b86:	8b 6c 24 44          	mov    0x44(%esp),%ebp
 8050b8a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050b90:	80 38 00             	cmpb   $0x0,(%eax)
 8050b93:	75 42                	jne    8050bd7 <__interceptor_vscanf+0x67>
 8050b95:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050b9b:	8b 00                	mov    (%eax),%eax
 8050b9d:	85 c0                	test   %eax,%eax
 8050b9f:	74 2f                	je     8050bd0 <__interceptor_vscanf+0x60>
 8050ba1:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8050ba5:	89 3c 24             	mov    %edi,(%esp)
 8050ba8:	ff 93 a0 bb 02 00    	call   *0x2bba0(%ebx)
 8050bae:	85 c0                	test   %eax,%eax
 8050bb0:	89 c6                	mov    %eax,%esi
 8050bb2:	7e 11                	jle    8050bc5 <__interceptor_vscanf+0x55>
 8050bb4:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8050bb8:	ba 01 00 00 00       	mov    $0x1,%edx
 8050bbd:	89 3c 24             	mov    %edi,(%esp)
 8050bc0:	e8 9b f8 ff ff       	call   8050460 <_ZL12scanf_commonPvibPKcPc.isra.3>
 8050bc5:	83 c4 2c             	add    $0x2c,%esp
 8050bc8:	89 f0                	mov    %esi,%eax
 8050bca:	5b                   	pop    %ebx
 8050bcb:	5e                   	pop    %esi
 8050bcc:	5f                   	pop    %edi
 8050bcd:	5d                   	pop    %ebp
 8050bce:	c3                   	ret    
 8050bcf:	90                   	nop
 8050bd0:	e8 eb 82 00 00       	call   8058ec0 <__asan_init_v1>
 8050bd5:	eb ca                	jmp    8050ba1 <__interceptor_vscanf+0x31>
 8050bd7:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050bdd:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050be1:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050be7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050bee:	00 
 8050bef:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050bf6:	00 
 8050bf7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050bfe:	00 
 8050bff:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050c06:	00 
 8050c07:	c7 44 24 04 03 01 00 	movl   $0x103,0x4(%esp)
 8050c0e:	00 
 8050c0f:	89 04 24             	mov    %eax,(%esp)
 8050c12:	e8 99 17 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050c17:	89 f6                	mov    %esi,%esi
 8050c19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08050c20 <__interceptor_scanf>:
 8050c20:	53                   	push   %ebx
 8050c21:	e8 ca 8e ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050c26:	81 c3 da f3 05 00    	add    $0x5f3da,%ebx
 8050c2c:	83 ec 28             	sub    $0x28,%esp
 8050c2f:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050c35:	80 38 00             	cmpb   $0x0,(%eax)
 8050c38:	75 2a                	jne    8050c64 <__interceptor_scanf+0x44>
 8050c3a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050c40:	8b 00                	mov    (%eax),%eax
 8050c42:	85 c0                	test   %eax,%eax
 8050c44:	75 05                	jne    8050c4b <__interceptor_scanf+0x2b>
 8050c46:	e8 75 82 00 00       	call   8058ec0 <__asan_init_v1>
 8050c4b:	8d 44 24 34          	lea    0x34(%esp),%eax
 8050c4f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050c53:	8b 44 24 30          	mov    0x30(%esp),%eax
 8050c57:	89 04 24             	mov    %eax,(%esp)
 8050c5a:	e8 11 ff ff ff       	call   8050b70 <__interceptor_vscanf>
 8050c5f:	83 c4 28             	add    $0x28,%esp
 8050c62:	5b                   	pop    %ebx
 8050c63:	c3                   	ret    
 8050c64:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050c6a:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050c6e:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050c74:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050c7b:	00 
 8050c7c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050c83:	00 
 8050c84:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050c8b:	00 
 8050c8c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050c93:	00 
 8050c94:	c7 44 24 04 23 01 00 	movl   $0x123,0x4(%esp)
 8050c9b:	00 
 8050c9c:	89 04 24             	mov    %eax,(%esp)
 8050c9f:	e8 0c 17 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050ca4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8050caa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08050cb0 <__interceptor_vsscanf>:
 8050cb0:	55                   	push   %ebp
 8050cb1:	57                   	push   %edi
 8050cb2:	56                   	push   %esi
 8050cb3:	53                   	push   %ebx
 8050cb4:	e8 37 8e ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050cb9:	81 c3 47 f3 05 00    	add    $0x5f347,%ebx
 8050cbf:	83 ec 2c             	sub    $0x2c,%esp
 8050cc2:	8b 7c 24 44          	mov    0x44(%esp),%edi
 8050cc6:	8b 6c 24 48          	mov    0x48(%esp),%ebp
 8050cca:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050cd0:	80 38 00             	cmpb   $0x0,(%eax)
 8050cd3:	75 4a                	jne    8050d1f <__interceptor_vsscanf+0x6f>
 8050cd5:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050cdb:	8b 00                	mov    (%eax),%eax
 8050cdd:	85 c0                	test   %eax,%eax
 8050cdf:	74 37                	je     8050d18 <__interceptor_vsscanf+0x68>
 8050ce1:	8b 44 24 40          	mov    0x40(%esp),%eax
 8050ce5:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 8050ce9:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8050ced:	89 04 24             	mov    %eax,(%esp)
 8050cf0:	ff 93 9c bb 02 00    	call   *0x2bb9c(%ebx)
 8050cf6:	85 c0                	test   %eax,%eax
 8050cf8:	89 c6                	mov    %eax,%esi
 8050cfa:	7e 11                	jle    8050d0d <__interceptor_vsscanf+0x5d>
 8050cfc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8050d00:	ba 01 00 00 00       	mov    $0x1,%edx
 8050d05:	89 3c 24             	mov    %edi,(%esp)
 8050d08:	e8 53 f7 ff ff       	call   8050460 <_ZL12scanf_commonPvibPKcPc.isra.3>
 8050d0d:	83 c4 2c             	add    $0x2c,%esp
 8050d10:	89 f0                	mov    %esi,%eax
 8050d12:	5b                   	pop    %ebx
 8050d13:	5e                   	pop    %esi
 8050d14:	5f                   	pop    %edi
 8050d15:	5d                   	pop    %ebp
 8050d16:	c3                   	ret    
 8050d17:	90                   	nop
 8050d18:	e8 a3 81 00 00       	call   8058ec0 <__asan_init_v1>
 8050d1d:	eb c2                	jmp    8050ce1 <__interceptor_vsscanf+0x31>
 8050d1f:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050d25:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050d29:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050d2f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050d36:	00 
 8050d37:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050d3e:	00 
 8050d3f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050d46:	00 
 8050d47:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050d4e:	00 
 8050d4f:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)
 8050d56:	00 
 8050d57:	89 04 24             	mov    %eax,(%esp)
 8050d5a:	e8 51 16 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050d5f:	90                   	nop

08050d60 <__interceptor_sscanf>:
 8050d60:	53                   	push   %ebx
 8050d61:	e8 8a 8d ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050d66:	81 c3 9a f2 05 00    	add    $0x5f29a,%ebx
 8050d6c:	83 ec 28             	sub    $0x28,%esp
 8050d6f:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050d75:	80 38 00             	cmpb   $0x0,(%eax)
 8050d78:	75 32                	jne    8050dac <__interceptor_sscanf+0x4c>
 8050d7a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050d80:	8b 00                	mov    (%eax),%eax
 8050d82:	85 c0                	test   %eax,%eax
 8050d84:	75 05                	jne    8050d8b <__interceptor_sscanf+0x2b>
 8050d86:	e8 35 81 00 00       	call   8058ec0 <__asan_init_v1>
 8050d8b:	8d 44 24 38          	lea    0x38(%esp),%eax
 8050d8f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050d93:	8b 44 24 34          	mov    0x34(%esp),%eax
 8050d97:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050d9b:	8b 44 24 30          	mov    0x30(%esp),%eax
 8050d9f:	89 04 24             	mov    %eax,(%esp)
 8050da2:	e8 09 ff ff ff       	call   8050cb0 <__interceptor_vsscanf>
 8050da7:	83 c4 28             	add    $0x28,%esp
 8050daa:	5b                   	pop    %ebx
 8050dab:	c3                   	ret    
 8050dac:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050db2:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050db6:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050dbc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050dc3:	00 
 8050dc4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050dcb:	00 
 8050dcc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050dd3:	00 
 8050dd4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050ddb:	00 
 8050ddc:	c7 44 24 04 29 01 00 	movl   $0x129,0x4(%esp)
 8050de3:	00 
 8050de4:	89 04 24             	mov    %eax,(%esp)
 8050de7:	e8 c4 15 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050dec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08050df0 <__interceptor_vfscanf>:
 8050df0:	55                   	push   %ebp
 8050df1:	57                   	push   %edi
 8050df2:	56                   	push   %esi
 8050df3:	53                   	push   %ebx
 8050df4:	e8 f7 8c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050df9:	81 c3 07 f2 05 00    	add    $0x5f207,%ebx
 8050dff:	83 ec 2c             	sub    $0x2c,%esp
 8050e02:	8b 7c 24 44          	mov    0x44(%esp),%edi
 8050e06:	8b 6c 24 48          	mov    0x48(%esp),%ebp
 8050e0a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050e10:	80 38 00             	cmpb   $0x0,(%eax)
 8050e13:	75 4a                	jne    8050e5f <__interceptor_vfscanf+0x6f>
 8050e15:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050e1b:	8b 00                	mov    (%eax),%eax
 8050e1d:	85 c0                	test   %eax,%eax
 8050e1f:	74 37                	je     8050e58 <__interceptor_vfscanf+0x68>
 8050e21:	8b 44 24 40          	mov    0x40(%esp),%eax
 8050e25:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 8050e29:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8050e2d:	89 04 24             	mov    %eax,(%esp)
 8050e30:	ff 93 98 bb 02 00    	call   *0x2bb98(%ebx)
 8050e36:	85 c0                	test   %eax,%eax
 8050e38:	89 c6                	mov    %eax,%esi
 8050e3a:	7e 11                	jle    8050e4d <__interceptor_vfscanf+0x5d>
 8050e3c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8050e40:	ba 01 00 00 00       	mov    $0x1,%edx
 8050e45:	89 3c 24             	mov    %edi,(%esp)
 8050e48:	e8 13 f6 ff ff       	call   8050460 <_ZL12scanf_commonPvibPKcPc.isra.3>
 8050e4d:	83 c4 2c             	add    $0x2c,%esp
 8050e50:	89 f0                	mov    %esi,%eax
 8050e52:	5b                   	pop    %ebx
 8050e53:	5e                   	pop    %esi
 8050e54:	5f                   	pop    %edi
 8050e55:	5d                   	pop    %ebp
 8050e56:	c3                   	ret    
 8050e57:	90                   	nop
 8050e58:	e8 63 80 00 00       	call   8058ec0 <__asan_init_v1>
 8050e5d:	eb c2                	jmp    8050e21 <__interceptor_vfscanf+0x31>
 8050e5f:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050e65:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050e69:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050e6f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050e76:	00 
 8050e77:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050e7e:	00 
 8050e7f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050e86:	00 
 8050e87:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050e8e:	00 
 8050e8f:	c7 44 24 04 09 01 00 	movl   $0x109,0x4(%esp)
 8050e96:	00 
 8050e97:	89 04 24             	mov    %eax,(%esp)
 8050e9a:	e8 11 15 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050e9f:	90                   	nop

08050ea0 <__interceptor_fscanf>:
 8050ea0:	53                   	push   %ebx
 8050ea1:	e8 4a 8c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050ea6:	81 c3 5a f1 05 00    	add    $0x5f15a,%ebx
 8050eac:	83 ec 28             	sub    $0x28,%esp
 8050eaf:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050eb5:	80 38 00             	cmpb   $0x0,(%eax)
 8050eb8:	75 32                	jne    8050eec <__interceptor_fscanf+0x4c>
 8050eba:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050ec0:	8b 00                	mov    (%eax),%eax
 8050ec2:	85 c0                	test   %eax,%eax
 8050ec4:	75 05                	jne    8050ecb <__interceptor_fscanf+0x2b>
 8050ec6:	e8 f5 7f 00 00       	call   8058ec0 <__asan_init_v1>
 8050ecb:	8d 44 24 38          	lea    0x38(%esp),%eax
 8050ecf:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050ed3:	8b 44 24 34          	mov    0x34(%esp),%eax
 8050ed7:	89 44 24 04          	mov    %eax,0x4(%esp)
 8050edb:	8b 44 24 30          	mov    0x30(%esp),%eax
 8050edf:	89 04 24             	mov    %eax,(%esp)
 8050ee2:	e8 09 ff ff ff       	call   8050df0 <__interceptor_vfscanf>
 8050ee7:	83 c4 28             	add    $0x28,%esp
 8050eea:	5b                   	pop    %ebx
 8050eeb:	c3                   	ret    
 8050eec:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050ef2:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050ef6:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050efc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050f03:	00 
 8050f04:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050f0b:	00 
 8050f0c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050f13:	00 
 8050f14:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050f1b:	00 
 8050f1c:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)
 8050f23:	00 
 8050f24:	89 04 24             	mov    %eax,(%esp)
 8050f27:	e8 84 14 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08050f30 <__interceptor___isoc99_vscanf>:
 8050f30:	55                   	push   %ebp
 8050f31:	57                   	push   %edi
 8050f32:	56                   	push   %esi
 8050f33:	53                   	push   %ebx
 8050f34:	e8 b7 8b ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050f39:	81 c3 c7 f0 05 00    	add    $0x5f0c7,%ebx
 8050f3f:	83 ec 2c             	sub    $0x2c,%esp
 8050f42:	8b 7c 24 40          	mov    0x40(%esp),%edi
 8050f46:	8b 6c 24 44          	mov    0x44(%esp),%ebp
 8050f4a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050f50:	80 38 00             	cmpb   $0x0,(%eax)
 8050f53:	75 42                	jne    8050f97 <__interceptor___isoc99_vscanf+0x67>
 8050f55:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8050f5b:	8b 00                	mov    (%eax),%eax
 8050f5d:	85 c0                	test   %eax,%eax
 8050f5f:	74 2f                	je     8050f90 <__interceptor___isoc99_vscanf+0x60>
 8050f61:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8050f65:	89 3c 24             	mov    %edi,(%esp)
 8050f68:	ff 93 94 bb 02 00    	call   *0x2bb94(%ebx)
 8050f6e:	85 c0                	test   %eax,%eax
 8050f70:	89 c6                	mov    %eax,%esi
 8050f72:	7e 0e                	jle    8050f82 <__interceptor___isoc99_vscanf+0x52>
 8050f74:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8050f78:	31 d2                	xor    %edx,%edx
 8050f7a:	89 3c 24             	mov    %edi,(%esp)
 8050f7d:	e8 de f4 ff ff       	call   8050460 <_ZL12scanf_commonPvibPKcPc.isra.3>
 8050f82:	83 c4 2c             	add    $0x2c,%esp
 8050f85:	89 f0                	mov    %esi,%eax
 8050f87:	5b                   	pop    %ebx
 8050f88:	5e                   	pop    %esi
 8050f89:	5f                   	pop    %edi
 8050f8a:	5d                   	pop    %ebp
 8050f8b:	c3                   	ret    
 8050f8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8050f90:	e8 2b 7f 00 00       	call   8058ec0 <__asan_init_v1>
 8050f95:	eb ca                	jmp    8050f61 <__interceptor___isoc99_vscanf+0x31>
 8050f97:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8050f9d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8050fa1:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8050fa7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8050fae:	00 
 8050faf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8050fb6:	00 
 8050fb7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8050fbe:	00 
 8050fbf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8050fc6:	00 
 8050fc7:	c7 44 24 04 0d 01 00 	movl   $0x10d,0x4(%esp)
 8050fce:	00 
 8050fcf:	89 04 24             	mov    %eax,(%esp)
 8050fd2:	e8 d9 13 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8050fd7:	89 f6                	mov    %esi,%esi
 8050fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08050fe0 <__interceptor___isoc99_scanf>:
 8050fe0:	53                   	push   %ebx
 8050fe1:	e8 0a 8b ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8050fe6:	81 c3 1a f0 05 00    	add    $0x5f01a,%ebx
 8050fec:	83 ec 28             	sub    $0x28,%esp
 8050fef:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8050ff5:	80 38 00             	cmpb   $0x0,(%eax)
 8050ff8:	75 2a                	jne    8051024 <__interceptor___isoc99_scanf+0x44>
 8050ffa:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8051000:	8b 00                	mov    (%eax),%eax
 8051002:	85 c0                	test   %eax,%eax
 8051004:	75 05                	jne    805100b <__interceptor___isoc99_scanf+0x2b>
 8051006:	e8 b5 7e 00 00       	call   8058ec0 <__asan_init_v1>
 805100b:	8d 44 24 34          	lea    0x34(%esp),%eax
 805100f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8051013:	8b 44 24 30          	mov    0x30(%esp),%eax
 8051017:	89 04 24             	mov    %eax,(%esp)
 805101a:	e8 11 ff ff ff       	call   8050f30 <__interceptor___isoc99_vscanf>
 805101f:	83 c4 28             	add    $0x28,%esp
 8051022:	5b                   	pop    %ebx
 8051023:	c3                   	ret    
 8051024:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 805102a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805102e:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8051034:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805103b:	00 
 805103c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8051043:	00 
 8051044:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805104b:	00 
 805104c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051053:	00 
 8051054:	c7 44 24 04 2d 01 00 	movl   $0x12d,0x4(%esp)
 805105b:	00 
 805105c:	89 04 24             	mov    %eax,(%esp)
 805105f:	e8 4c 13 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051064:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805106a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08051070 <__interceptor___isoc99_vsscanf>:
 8051070:	55                   	push   %ebp
 8051071:	57                   	push   %edi
 8051072:	56                   	push   %esi
 8051073:	53                   	push   %ebx
 8051074:	e8 77 8a ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051079:	81 c3 87 ef 05 00    	add    $0x5ef87,%ebx
 805107f:	83 ec 2c             	sub    $0x2c,%esp
 8051082:	8b 7c 24 44          	mov    0x44(%esp),%edi
 8051086:	8b 6c 24 48          	mov    0x48(%esp),%ebp
 805108a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8051090:	80 38 00             	cmpb   $0x0,(%eax)
 8051093:	75 4a                	jne    80510df <__interceptor___isoc99_vsscanf+0x6f>
 8051095:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805109b:	8b 00                	mov    (%eax),%eax
 805109d:	85 c0                	test   %eax,%eax
 805109f:	74 37                	je     80510d8 <__interceptor___isoc99_vsscanf+0x68>
 80510a1:	8b 44 24 40          	mov    0x40(%esp),%eax
 80510a5:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 80510a9:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80510ad:	89 04 24             	mov    %eax,(%esp)
 80510b0:	ff 93 90 bb 02 00    	call   *0x2bb90(%ebx)
 80510b6:	85 c0                	test   %eax,%eax
 80510b8:	89 c6                	mov    %eax,%esi
 80510ba:	7e 0e                	jle    80510ca <__interceptor___isoc99_vsscanf+0x5a>
 80510bc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80510c0:	31 d2                	xor    %edx,%edx
 80510c2:	89 3c 24             	mov    %edi,(%esp)
 80510c5:	e8 96 f3 ff ff       	call   8050460 <_ZL12scanf_commonPvibPKcPc.isra.3>
 80510ca:	83 c4 2c             	add    $0x2c,%esp
 80510cd:	89 f0                	mov    %esi,%eax
 80510cf:	5b                   	pop    %ebx
 80510d0:	5e                   	pop    %esi
 80510d1:	5f                   	pop    %edi
 80510d2:	5d                   	pop    %ebp
 80510d3:	c3                   	ret    
 80510d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80510d8:	e8 e3 7d 00 00       	call   8058ec0 <__asan_init_v1>
 80510dd:	eb c2                	jmp    80510a1 <__interceptor___isoc99_vsscanf+0x31>
 80510df:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80510e5:	89 44 24 08          	mov    %eax,0x8(%esp)
 80510e9:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80510ef:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80510f6:	00 
 80510f7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80510fe:	00 
 80510ff:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051106:	00 
 8051107:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805110e:	00 
 805110f:	c7 44 24 04 11 01 00 	movl   $0x111,0x4(%esp)
 8051116:	00 
 8051117:	89 04 24             	mov    %eax,(%esp)
 805111a:	e8 91 12 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805111f:	90                   	nop

08051120 <__interceptor___isoc99_sscanf>:
 8051120:	53                   	push   %ebx
 8051121:	e8 ca 89 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051126:	81 c3 da ee 05 00    	add    $0x5eeda,%ebx
 805112c:	83 ec 28             	sub    $0x28,%esp
 805112f:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8051135:	80 38 00             	cmpb   $0x0,(%eax)
 8051138:	75 32                	jne    805116c <__interceptor___isoc99_sscanf+0x4c>
 805113a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8051140:	8b 00                	mov    (%eax),%eax
 8051142:	85 c0                	test   %eax,%eax
 8051144:	75 05                	jne    805114b <__interceptor___isoc99_sscanf+0x2b>
 8051146:	e8 75 7d 00 00       	call   8058ec0 <__asan_init_v1>
 805114b:	8d 44 24 38          	lea    0x38(%esp),%eax
 805114f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051153:	8b 44 24 34          	mov    0x34(%esp),%eax
 8051157:	89 44 24 04          	mov    %eax,0x4(%esp)
 805115b:	8b 44 24 30          	mov    0x30(%esp),%eax
 805115f:	89 04 24             	mov    %eax,(%esp)
 8051162:	e8 09 ff ff ff       	call   8051070 <__interceptor___isoc99_vsscanf>
 8051167:	83 c4 28             	add    $0x28,%esp
 805116a:	5b                   	pop    %ebx
 805116b:	c3                   	ret    
 805116c:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051172:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051176:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 805117c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051183:	00 
 8051184:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805118b:	00 
 805118c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051193:	00 
 8051194:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805119b:	00 
 805119c:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)
 80511a3:	00 
 80511a4:	89 04 24             	mov    %eax,(%esp)
 80511a7:	e8 04 12 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80511ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080511b0 <__interceptor___isoc99_vfscanf>:
 80511b0:	55                   	push   %ebp
 80511b1:	57                   	push   %edi
 80511b2:	56                   	push   %esi
 80511b3:	53                   	push   %ebx
 80511b4:	e8 37 89 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80511b9:	81 c3 47 ee 05 00    	add    $0x5ee47,%ebx
 80511bf:	83 ec 2c             	sub    $0x2c,%esp
 80511c2:	8b 7c 24 44          	mov    0x44(%esp),%edi
 80511c6:	8b 6c 24 48          	mov    0x48(%esp),%ebp
 80511ca:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80511d0:	80 38 00             	cmpb   $0x0,(%eax)
 80511d3:	75 4a                	jne    805121f <__interceptor___isoc99_vfscanf+0x6f>
 80511d5:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80511db:	8b 00                	mov    (%eax),%eax
 80511dd:	85 c0                	test   %eax,%eax
 80511df:	74 37                	je     8051218 <__interceptor___isoc99_vfscanf+0x68>
 80511e1:	8b 44 24 40          	mov    0x40(%esp),%eax
 80511e5:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 80511e9:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80511ed:	89 04 24             	mov    %eax,(%esp)
 80511f0:	ff 93 8c bb 02 00    	call   *0x2bb8c(%ebx)
 80511f6:	85 c0                	test   %eax,%eax
 80511f8:	89 c6                	mov    %eax,%esi
 80511fa:	7e 0e                	jle    805120a <__interceptor___isoc99_vfscanf+0x5a>
 80511fc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051200:	31 d2                	xor    %edx,%edx
 8051202:	89 3c 24             	mov    %edi,(%esp)
 8051205:	e8 56 f2 ff ff       	call   8050460 <_ZL12scanf_commonPvibPKcPc.isra.3>
 805120a:	83 c4 2c             	add    $0x2c,%esp
 805120d:	89 f0                	mov    %esi,%eax
 805120f:	5b                   	pop    %ebx
 8051210:	5e                   	pop    %esi
 8051211:	5f                   	pop    %edi
 8051212:	5d                   	pop    %ebp
 8051213:	c3                   	ret    
 8051214:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8051218:	e8 a3 7c 00 00       	call   8058ec0 <__asan_init_v1>
 805121d:	eb c2                	jmp    80511e1 <__interceptor___isoc99_vfscanf+0x31>
 805121f:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051225:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051229:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 805122f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051236:	00 
 8051237:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805123e:	00 
 805123f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051246:	00 
 8051247:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805124e:	00 
 805124f:	c7 44 24 04 14 01 00 	movl   $0x114,0x4(%esp)
 8051256:	00 
 8051257:	89 04 24             	mov    %eax,(%esp)
 805125a:	e8 51 11 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805125f:	90                   	nop

08051260 <__interceptor___isoc99_fscanf>:
 8051260:	53                   	push   %ebx
 8051261:	e8 8a 88 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051266:	81 c3 9a ed 05 00    	add    $0x5ed9a,%ebx
 805126c:	83 ec 28             	sub    $0x28,%esp
 805126f:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8051275:	80 38 00             	cmpb   $0x0,(%eax)
 8051278:	75 32                	jne    80512ac <__interceptor___isoc99_fscanf+0x4c>
 805127a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8051280:	8b 00                	mov    (%eax),%eax
 8051282:	85 c0                	test   %eax,%eax
 8051284:	75 05                	jne    805128b <__interceptor___isoc99_fscanf+0x2b>
 8051286:	e8 35 7c 00 00       	call   8058ec0 <__asan_init_v1>
 805128b:	8d 44 24 38          	lea    0x38(%esp),%eax
 805128f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051293:	8b 44 24 34          	mov    0x34(%esp),%eax
 8051297:	89 44 24 04          	mov    %eax,0x4(%esp)
 805129b:	8b 44 24 30          	mov    0x30(%esp),%eax
 805129f:	89 04 24             	mov    %eax,(%esp)
 80512a2:	e8 09 ff ff ff       	call   80511b0 <__interceptor___isoc99_vfscanf>
 80512a7:	83 c4 28             	add    $0x28,%esp
 80512aa:	5b                   	pop    %ebx
 80512ab:	c3                   	ret    
 80512ac:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80512b2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80512b6:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80512bc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80512c3:	00 
 80512c4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80512cb:	00 
 80512cc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80512d3:	00 
 80512d4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80512db:	00 
 80512dc:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)
 80512e3:	00 
 80512e4:	89 04 24             	mov    %eax,(%esp)
 80512e7:	e8 c4 10 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80512ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080512f0 <__interceptor_read>:
 80512f0:	55                   	push   %ebp
 80512f1:	89 e5                	mov    %esp,%ebp
 80512f3:	57                   	push   %edi
 80512f4:	56                   	push   %esi
 80512f5:	53                   	push   %ebx
 80512f6:	e8 f5 87 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80512fb:	81 c3 05 ed 05 00    	add    $0x5ed05,%ebx
 8051301:	83 ec 3c             	sub    $0x3c,%esp
 8051304:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8051307:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805130d:	80 38 00             	cmpb   $0x0,(%eax)
 8051310:	0f 85 fd 00 00 00    	jne    8051413 <__interceptor_read+0x123>
 8051316:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805131c:	8b 00                	mov    (%eax),%eax
 805131e:	85 c0                	test   %eax,%eax
 8051320:	0f 84 9a 00 00 00    	je     80513c0 <__interceptor_read+0xd0>
 8051326:	8b 45 10             	mov    0x10(%ebp),%eax
 8051329:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805132d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051331:	8b 45 08             	mov    0x8(%ebp),%eax
 8051334:	89 04 24             	mov    %eax,(%esp)
 8051337:	ff 93 dc bb 02 00    	call   *0x2bbdc(%ebx)
 805133d:	85 c0                	test   %eax,%eax
 805133f:	89 c6                	mov    %eax,%esi
 8051341:	7e 6d                	jle    80513b0 <__interceptor_read+0xc0>
 8051343:	83 f8 20             	cmp    $0x20,%eax
 8051346:	77 30                	ja     8051378 <__interceptor_read+0x88>
 8051348:	89 f8                	mov    %edi,%eax
 805134a:	c1 e8 03             	shr    $0x3,%eax
 805134d:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051354:	84 c0                	test   %al,%al
 8051356:	75 78                	jne    80513d0 <__interceptor_read+0xe0>
 8051358:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 805135c:	89 d0                	mov    %edx,%eax
 805135e:	c1 e8 03             	shr    $0x3,%eax
 8051361:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051368:	84 c0                	test   %al,%al
 805136a:	0f 84 80 00 00 00    	je     80513f0 <__interceptor_read+0x100>
 8051370:	83 e2 07             	and    $0x7,%edx
 8051373:	39 c2                	cmp    %eax,%edx
 8051375:	7c 79                	jl     80513f0 <__interceptor_read+0x100>
 8051377:	90                   	nop
 8051378:	89 74 24 04          	mov    %esi,0x4(%esp)
 805137c:	89 3c 24             	mov    %edi,(%esp)
 805137f:	e8 1c c1 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051384:	85 c0                	test   %eax,%eax
 8051386:	74 28                	je     80513b0 <__interceptor_read+0xc0>
 8051388:	e8 f3 35 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805138d:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8051390:	89 74 24 14          	mov    %esi,0x14(%esp)
 8051394:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805139b:	00 
 805139c:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80513a0:	89 54 24 08          	mov    %edx,0x8(%esp)
 80513a4:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80513a8:	89 04 24             	mov    %eax,(%esp)
 80513ab:	e8 00 e3 00 00       	call   805f6b0 <__asan_report_error>
 80513b0:	83 c4 3c             	add    $0x3c,%esp
 80513b3:	89 f0                	mov    %esi,%eax
 80513b5:	5b                   	pop    %ebx
 80513b6:	5e                   	pop    %esi
 80513b7:	5f                   	pop    %edi
 80513b8:	5d                   	pop    %ebp
 80513b9:	c3                   	ret    
 80513ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80513c0:	e8 fb 7a 00 00       	call   8058ec0 <__asan_init_v1>
 80513c5:	e9 5c ff ff ff       	jmp    8051326 <__interceptor_read+0x36>
 80513ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80513d0:	89 fa                	mov    %edi,%edx
 80513d2:	83 e2 07             	and    $0x7,%edx
 80513d5:	39 c2                	cmp    %eax,%edx
 80513d7:	0f 8c 7b ff ff ff    	jl     8051358 <__interceptor_read+0x68>
 80513dd:	89 74 24 04          	mov    %esi,0x4(%esp)
 80513e1:	89 3c 24             	mov    %edi,(%esp)
 80513e4:	e8 b7 c0 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80513e9:	85 c0                	test   %eax,%eax
 80513eb:	74 c3                	je     80513b0 <__interceptor_read+0xc0>
 80513ed:	eb 99                	jmp    8051388 <__interceptor_read+0x98>
 80513ef:	90                   	nop
 80513f0:	89 f2                	mov    %esi,%edx
 80513f2:	d1 ea                	shr    %edx
 80513f4:	01 fa                	add    %edi,%edx
 80513f6:	89 d0                	mov    %edx,%eax
 80513f8:	c1 e8 03             	shr    $0x3,%eax
 80513fb:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051402:	84 c0                	test   %al,%al
 8051404:	74 aa                	je     80513b0 <__interceptor_read+0xc0>
 8051406:	83 e2 07             	and    $0x7,%edx
 8051409:	39 c2                	cmp    %eax,%edx
 805140b:	0f 8d 67 ff ff ff    	jge    8051378 <__interceptor_read+0x88>
 8051411:	eb 9d                	jmp    80513b0 <__interceptor_read+0xc0>
 8051413:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051419:	89 44 24 08          	mov    %eax,0x8(%esp)
 805141d:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8051423:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805142a:	00 
 805142b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8051432:	00 
 8051433:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805143a:	00 
 805143b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051442:	00 
 8051443:	c7 44 24 04 20 00 00 	movl   $0x20,0x4(%esp)
 805144a:	00 
 805144b:	89 04 24             	mov    %eax,(%esp)
 805144e:	e8 5d 0f 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051453:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051459:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08051460 <__interceptor_write>:
 8051460:	55                   	push   %ebp
 8051461:	89 e5                	mov    %esp,%ebp
 8051463:	57                   	push   %edi
 8051464:	56                   	push   %esi
 8051465:	53                   	push   %ebx
 8051466:	e8 85 86 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805146b:	81 c3 95 eb 05 00    	add    $0x5eb95,%ebx
 8051471:	83 ec 3c             	sub    $0x3c,%esp
 8051474:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8051477:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805147d:	80 38 00             	cmpb   $0x0,(%eax)
 8051480:	0f 85 fd 00 00 00    	jne    8051583 <__interceptor_write+0x123>
 8051486:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805148c:	8b 00                	mov    (%eax),%eax
 805148e:	85 c0                	test   %eax,%eax
 8051490:	0f 84 9a 00 00 00    	je     8051530 <__interceptor_write+0xd0>
 8051496:	8b 45 10             	mov    0x10(%ebp),%eax
 8051499:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805149d:	89 44 24 08          	mov    %eax,0x8(%esp)
 80514a1:	8b 45 08             	mov    0x8(%ebp),%eax
 80514a4:	89 04 24             	mov    %eax,(%esp)
 80514a7:	ff 93 d0 bb 02 00    	call   *0x2bbd0(%ebx)
 80514ad:	85 c0                	test   %eax,%eax
 80514af:	89 c6                	mov    %eax,%esi
 80514b1:	7e 6d                	jle    8051520 <__interceptor_write+0xc0>
 80514b3:	83 f8 20             	cmp    $0x20,%eax
 80514b6:	77 30                	ja     80514e8 <__interceptor_write+0x88>
 80514b8:	89 f8                	mov    %edi,%eax
 80514ba:	c1 e8 03             	shr    $0x3,%eax
 80514bd:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80514c4:	84 c0                	test   %al,%al
 80514c6:	75 78                	jne    8051540 <__interceptor_write+0xe0>
 80514c8:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 80514cc:	89 d0                	mov    %edx,%eax
 80514ce:	c1 e8 03             	shr    $0x3,%eax
 80514d1:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80514d8:	84 c0                	test   %al,%al
 80514da:	0f 84 80 00 00 00    	je     8051560 <__interceptor_write+0x100>
 80514e0:	83 e2 07             	and    $0x7,%edx
 80514e3:	39 c2                	cmp    %eax,%edx
 80514e5:	7c 79                	jl     8051560 <__interceptor_write+0x100>
 80514e7:	90                   	nop
 80514e8:	89 74 24 04          	mov    %esi,0x4(%esp)
 80514ec:	89 3c 24             	mov    %edi,(%esp)
 80514ef:	e8 ac bf 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80514f4:	85 c0                	test   %eax,%eax
 80514f6:	74 28                	je     8051520 <__interceptor_write+0xc0>
 80514f8:	e8 83 34 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80514fd:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8051500:	89 74 24 14          	mov    %esi,0x14(%esp)
 8051504:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805150b:	00 
 805150c:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8051510:	89 54 24 08          	mov    %edx,0x8(%esp)
 8051514:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051518:	89 04 24             	mov    %eax,(%esp)
 805151b:	e8 90 e1 00 00       	call   805f6b0 <__asan_report_error>
 8051520:	83 c4 3c             	add    $0x3c,%esp
 8051523:	89 f0                	mov    %esi,%eax
 8051525:	5b                   	pop    %ebx
 8051526:	5e                   	pop    %esi
 8051527:	5f                   	pop    %edi
 8051528:	5d                   	pop    %ebp
 8051529:	c3                   	ret    
 805152a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051530:	e8 8b 79 00 00       	call   8058ec0 <__asan_init_v1>
 8051535:	e9 5c ff ff ff       	jmp    8051496 <__interceptor_write+0x36>
 805153a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051540:	89 fa                	mov    %edi,%edx
 8051542:	83 e2 07             	and    $0x7,%edx
 8051545:	39 c2                	cmp    %eax,%edx
 8051547:	0f 8c 7b ff ff ff    	jl     80514c8 <__interceptor_write+0x68>
 805154d:	89 74 24 04          	mov    %esi,0x4(%esp)
 8051551:	89 3c 24             	mov    %edi,(%esp)
 8051554:	e8 47 bf 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051559:	85 c0                	test   %eax,%eax
 805155b:	74 c3                	je     8051520 <__interceptor_write+0xc0>
 805155d:	eb 99                	jmp    80514f8 <__interceptor_write+0x98>
 805155f:	90                   	nop
 8051560:	89 f2                	mov    %esi,%edx
 8051562:	d1 ea                	shr    %edx
 8051564:	01 fa                	add    %edi,%edx
 8051566:	89 d0                	mov    %edx,%eax
 8051568:	c1 e8 03             	shr    $0x3,%eax
 805156b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051572:	84 c0                	test   %al,%al
 8051574:	74 aa                	je     8051520 <__interceptor_write+0xc0>
 8051576:	83 e2 07             	and    $0x7,%edx
 8051579:	39 c2                	cmp    %eax,%edx
 805157b:	0f 8d 67 ff ff ff    	jge    80514e8 <__interceptor_write+0x88>
 8051581:	eb 9d                	jmp    8051520 <__interceptor_write+0xc0>
 8051583:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051589:	89 44 24 08          	mov    %eax,0x8(%esp)
 805158d:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8051593:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805159a:	00 
 805159b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80515a2:	00 
 80515a3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80515aa:	00 
 80515ab:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80515b2:	00 
 80515b3:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)
 80515ba:	00 
 80515bb:	89 04 24             	mov    %eax,(%esp)
 80515be:	e8 ed 0d 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80515c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80515c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080515d0 <__interceptor_pread>:
 80515d0:	55                   	push   %ebp
 80515d1:	89 e5                	mov    %esp,%ebp
 80515d3:	57                   	push   %edi
 80515d4:	56                   	push   %esi
 80515d5:	53                   	push   %ebx
 80515d6:	e8 15 85 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80515db:	81 c3 25 ea 05 00    	add    $0x5ea25,%ebx
 80515e1:	83 ec 3c             	sub    $0x3c,%esp
 80515e4:	8b 7d 0c             	mov    0xc(%ebp),%edi
 80515e7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80515ed:	80 38 00             	cmpb   $0x0,(%eax)
 80515f0:	0f 85 05 01 00 00    	jne    80516fb <__interceptor_pread+0x12b>
 80515f6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80515fc:	8b 00                	mov    (%eax),%eax
 80515fe:	85 c0                	test   %eax,%eax
 8051600:	0f 84 a2 00 00 00    	je     80516a8 <__interceptor_pread+0xd8>
 8051606:	8b 45 14             	mov    0x14(%ebp),%eax
 8051609:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805160d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8051611:	8b 45 10             	mov    0x10(%ebp),%eax
 8051614:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051618:	8b 45 08             	mov    0x8(%ebp),%eax
 805161b:	89 04 24             	mov    %eax,(%esp)
 805161e:	ff 93 d8 bb 02 00    	call   *0x2bbd8(%ebx)
 8051624:	85 c0                	test   %eax,%eax
 8051626:	89 c6                	mov    %eax,%esi
 8051628:	7e 6e                	jle    8051698 <__interceptor_pread+0xc8>
 805162a:	83 f8 20             	cmp    $0x20,%eax
 805162d:	77 31                	ja     8051660 <__interceptor_pread+0x90>
 805162f:	89 f8                	mov    %edi,%eax
 8051631:	c1 e8 03             	shr    $0x3,%eax
 8051634:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805163b:	84 c0                	test   %al,%al
 805163d:	75 79                	jne    80516b8 <__interceptor_pread+0xe8>
 805163f:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 8051643:	89 d0                	mov    %edx,%eax
 8051645:	c1 e8 03             	shr    $0x3,%eax
 8051648:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805164f:	84 c0                	test   %al,%al
 8051651:	0f 84 81 00 00 00    	je     80516d8 <__interceptor_pread+0x108>
 8051657:	83 e2 07             	and    $0x7,%edx
 805165a:	39 c2                	cmp    %eax,%edx
 805165c:	7c 7a                	jl     80516d8 <__interceptor_pread+0x108>
 805165e:	66 90                	xchg   %ax,%ax
 8051660:	89 74 24 04          	mov    %esi,0x4(%esp)
 8051664:	89 3c 24             	mov    %edi,(%esp)
 8051667:	e8 34 be 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805166c:	85 c0                	test   %eax,%eax
 805166e:	74 28                	je     8051698 <__interceptor_pread+0xc8>
 8051670:	e8 0b 33 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8051675:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8051678:	89 74 24 14          	mov    %esi,0x14(%esp)
 805167c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8051683:	00 
 8051684:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8051688:	89 54 24 08          	mov    %edx,0x8(%esp)
 805168c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051690:	89 04 24             	mov    %eax,(%esp)
 8051693:	e8 18 e0 00 00       	call   805f6b0 <__asan_report_error>
 8051698:	83 c4 3c             	add    $0x3c,%esp
 805169b:	89 f0                	mov    %esi,%eax
 805169d:	5b                   	pop    %ebx
 805169e:	5e                   	pop    %esi
 805169f:	5f                   	pop    %edi
 80516a0:	5d                   	pop    %ebp
 80516a1:	c3                   	ret    
 80516a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80516a8:	e8 13 78 00 00       	call   8058ec0 <__asan_init_v1>
 80516ad:	e9 54 ff ff ff       	jmp    8051606 <__interceptor_pread+0x36>
 80516b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80516b8:	89 fa                	mov    %edi,%edx
 80516ba:	83 e2 07             	and    $0x7,%edx
 80516bd:	39 c2                	cmp    %eax,%edx
 80516bf:	0f 8c 7a ff ff ff    	jl     805163f <__interceptor_pread+0x6f>
 80516c5:	89 74 24 04          	mov    %esi,0x4(%esp)
 80516c9:	89 3c 24             	mov    %edi,(%esp)
 80516cc:	e8 cf bd 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80516d1:	85 c0                	test   %eax,%eax
 80516d3:	74 c3                	je     8051698 <__interceptor_pread+0xc8>
 80516d5:	eb 99                	jmp    8051670 <__interceptor_pread+0xa0>
 80516d7:	90                   	nop
 80516d8:	89 f2                	mov    %esi,%edx
 80516da:	d1 ea                	shr    %edx
 80516dc:	01 fa                	add    %edi,%edx
 80516de:	89 d0                	mov    %edx,%eax
 80516e0:	c1 e8 03             	shr    $0x3,%eax
 80516e3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80516ea:	84 c0                	test   %al,%al
 80516ec:	74 aa                	je     8051698 <__interceptor_pread+0xc8>
 80516ee:	83 e2 07             	and    $0x7,%edx
 80516f1:	39 c2                	cmp    %eax,%edx
 80516f3:	0f 8d 67 ff ff ff    	jge    8051660 <__interceptor_pread+0x90>
 80516f9:	eb 9d                	jmp    8051698 <__interceptor_pread+0xc8>
 80516fb:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051701:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051705:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 805170b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051712:	00 
 8051713:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805171a:	00 
 805171b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051722:	00 
 8051723:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805172a:	00 
 805172b:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)
 8051732:	00 
 8051733:	89 04 24             	mov    %eax,(%esp)
 8051736:	e8 75 0c 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805173b:	90                   	nop
 805173c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08051740 <__interceptor_pwrite>:
 8051740:	55                   	push   %ebp
 8051741:	89 e5                	mov    %esp,%ebp
 8051743:	57                   	push   %edi
 8051744:	56                   	push   %esi
 8051745:	53                   	push   %ebx
 8051746:	e8 a5 83 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805174b:	81 c3 b5 e8 05 00    	add    $0x5e8b5,%ebx
 8051751:	83 ec 3c             	sub    $0x3c,%esp
 8051754:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8051757:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805175d:	80 38 00             	cmpb   $0x0,(%eax)
 8051760:	0f 85 05 01 00 00    	jne    805186b <__interceptor_pwrite+0x12b>
 8051766:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805176c:	8b 00                	mov    (%eax),%eax
 805176e:	85 c0                	test   %eax,%eax
 8051770:	0f 84 a2 00 00 00    	je     8051818 <__interceptor_pwrite+0xd8>
 8051776:	8b 45 14             	mov    0x14(%ebp),%eax
 8051779:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805177d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8051781:	8b 45 10             	mov    0x10(%ebp),%eax
 8051784:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051788:	8b 45 08             	mov    0x8(%ebp),%eax
 805178b:	89 04 24             	mov    %eax,(%esp)
 805178e:	ff 93 cc bb 02 00    	call   *0x2bbcc(%ebx)
 8051794:	85 c0                	test   %eax,%eax
 8051796:	89 c6                	mov    %eax,%esi
 8051798:	7e 6e                	jle    8051808 <__interceptor_pwrite+0xc8>
 805179a:	83 f8 20             	cmp    $0x20,%eax
 805179d:	77 31                	ja     80517d0 <__interceptor_pwrite+0x90>
 805179f:	89 f8                	mov    %edi,%eax
 80517a1:	c1 e8 03             	shr    $0x3,%eax
 80517a4:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80517ab:	84 c0                	test   %al,%al
 80517ad:	75 79                	jne    8051828 <__interceptor_pwrite+0xe8>
 80517af:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 80517b3:	89 d0                	mov    %edx,%eax
 80517b5:	c1 e8 03             	shr    $0x3,%eax
 80517b8:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80517bf:	84 c0                	test   %al,%al
 80517c1:	0f 84 81 00 00 00    	je     8051848 <__interceptor_pwrite+0x108>
 80517c7:	83 e2 07             	and    $0x7,%edx
 80517ca:	39 c2                	cmp    %eax,%edx
 80517cc:	7c 7a                	jl     8051848 <__interceptor_pwrite+0x108>
 80517ce:	66 90                	xchg   %ax,%ax
 80517d0:	89 74 24 04          	mov    %esi,0x4(%esp)
 80517d4:	89 3c 24             	mov    %edi,(%esp)
 80517d7:	e8 c4 bc 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80517dc:	85 c0                	test   %eax,%eax
 80517de:	74 28                	je     8051808 <__interceptor_pwrite+0xc8>
 80517e0:	e8 9b 31 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80517e5:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80517e8:	89 74 24 14          	mov    %esi,0x14(%esp)
 80517ec:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80517f3:	00 
 80517f4:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80517f8:	89 54 24 08          	mov    %edx,0x8(%esp)
 80517fc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051800:	89 04 24             	mov    %eax,(%esp)
 8051803:	e8 a8 de 00 00       	call   805f6b0 <__asan_report_error>
 8051808:	83 c4 3c             	add    $0x3c,%esp
 805180b:	89 f0                	mov    %esi,%eax
 805180d:	5b                   	pop    %ebx
 805180e:	5e                   	pop    %esi
 805180f:	5f                   	pop    %edi
 8051810:	5d                   	pop    %ebp
 8051811:	c3                   	ret    
 8051812:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051818:	e8 a3 76 00 00       	call   8058ec0 <__asan_init_v1>
 805181d:	e9 54 ff ff ff       	jmp    8051776 <__interceptor_pwrite+0x36>
 8051822:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051828:	89 fa                	mov    %edi,%edx
 805182a:	83 e2 07             	and    $0x7,%edx
 805182d:	39 c2                	cmp    %eax,%edx
 805182f:	0f 8c 7a ff ff ff    	jl     80517af <__interceptor_pwrite+0x6f>
 8051835:	89 74 24 04          	mov    %esi,0x4(%esp)
 8051839:	89 3c 24             	mov    %edi,(%esp)
 805183c:	e8 5f bc 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051841:	85 c0                	test   %eax,%eax
 8051843:	74 c3                	je     8051808 <__interceptor_pwrite+0xc8>
 8051845:	eb 99                	jmp    80517e0 <__interceptor_pwrite+0xa0>
 8051847:	90                   	nop
 8051848:	89 f2                	mov    %esi,%edx
 805184a:	d1 ea                	shr    %edx
 805184c:	01 fa                	add    %edi,%edx
 805184e:	89 d0                	mov    %edx,%eax
 8051850:	c1 e8 03             	shr    $0x3,%eax
 8051853:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805185a:	84 c0                	test   %al,%al
 805185c:	74 aa                	je     8051808 <__interceptor_pwrite+0xc8>
 805185e:	83 e2 07             	and    $0x7,%edx
 8051861:	39 c2                	cmp    %eax,%edx
 8051863:	0f 8d 67 ff ff ff    	jge    80517d0 <__interceptor_pwrite+0x90>
 8051869:	eb 9d                	jmp    8051808 <__interceptor_pwrite+0xc8>
 805186b:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051871:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051875:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 805187b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051882:	00 
 8051883:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805188a:	00 
 805188b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051892:	00 
 8051893:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805189a:	00 
 805189b:	c7 44 24 04 60 00 00 	movl   $0x60,0x4(%esp)
 80518a2:	00 
 80518a3:	89 04 24             	mov    %eax,(%esp)
 80518a6:	e8 05 0b 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80518ab:	90                   	nop
 80518ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080518b0 <__interceptor_pread64>:
 80518b0:	55                   	push   %ebp
 80518b1:	89 e5                	mov    %esp,%ebp
 80518b3:	57                   	push   %edi
 80518b4:	56                   	push   %esi
 80518b5:	53                   	push   %ebx
 80518b6:	e8 35 82 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80518bb:	81 c3 45 e7 05 00    	add    $0x5e745,%ebx
 80518c1:	83 ec 3c             	sub    $0x3c,%esp
 80518c4:	8b 75 14             	mov    0x14(%ebp),%esi
 80518c7:	8b 7d 18             	mov    0x18(%ebp),%edi
 80518ca:	8d 8b 10 bc 02 00    	lea    0x2bc10(%ebx),%ecx
 80518d0:	80 39 00             	cmpb   $0x0,(%ecx)
 80518d3:	0f 85 fb 00 00 00    	jne    80519d4 <__interceptor_pread64+0x124>
 80518d9:	8d 8b 14 bc 02 00    	lea    0x2bc14(%ebx),%ecx
 80518df:	8b 01                	mov    (%ecx),%eax
 80518e1:	85 c0                	test   %eax,%eax
 80518e3:	0f 84 a7 00 00 00    	je     8051990 <__interceptor_pread64+0xe0>
 80518e9:	8b 45 10             	mov    0x10(%ebp),%eax
 80518ec:	89 7c 24 10          	mov    %edi,0x10(%esp)
 80518f0:	89 74 24 0c          	mov    %esi,0xc(%esp)
 80518f4:	89 44 24 08          	mov    %eax,0x8(%esp)
 80518f8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80518fb:	89 44 24 04          	mov    %eax,0x4(%esp)
 80518ff:	8b 45 08             	mov    0x8(%ebp),%eax
 8051902:	89 04 24             	mov    %eax,(%esp)
 8051905:	ff 93 d4 bb 02 00    	call   *0x2bbd4(%ebx)
 805190b:	85 c0                	test   %eax,%eax
 805190d:	89 c7                	mov    %eax,%edi
 805190f:	7e 75                	jle    8051986 <__interceptor_pread64+0xd6>
 8051911:	83 f8 20             	cmp    $0x20,%eax
 8051914:	77 32                	ja     8051948 <__interceptor_pread64+0x98>
 8051916:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051919:	c1 e8 03             	shr    $0x3,%eax
 805191c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051923:	84 c0                	test   %al,%al
 8051925:	75 79                	jne    80519a0 <__interceptor_pread64+0xf0>
 8051927:	8b 45 0c             	mov    0xc(%ebp),%eax
 805192a:	8d 54 38 ff          	lea    -0x1(%eax,%edi,1),%edx
 805192e:	89 d0                	mov    %edx,%eax
 8051930:	c1 e8 03             	shr    $0x3,%eax
 8051933:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805193a:	84 c0                	test   %al,%al
 805193c:	74 72                	je     80519b0 <__interceptor_pread64+0x100>
 805193e:	83 e2 07             	and    $0x7,%edx
 8051941:	39 c2                	cmp    %eax,%edx
 8051943:	7c 6b                	jl     80519b0 <__interceptor_pread64+0x100>
 8051945:	8d 76 00             	lea    0x0(%esi),%esi
 8051948:	8b 45 0c             	mov    0xc(%ebp),%eax
 805194b:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805194f:	89 04 24             	mov    %eax,(%esp)
 8051952:	e8 49 bb 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051957:	85 c0                	test   %eax,%eax
 8051959:	74 2b                	je     8051986 <__interceptor_pread64+0xd6>
 805195b:	e8 20 30 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8051960:	8b 55 0c             	mov    0xc(%ebp),%edx
 8051963:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8051967:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805196e:	00 
 805196f:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051973:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8051977:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 805197a:	89 54 24 08          	mov    %edx,0x8(%esp)
 805197e:	89 04 24             	mov    %eax,(%esp)
 8051981:	e8 2a dd 00 00       	call   805f6b0 <__asan_report_error>
 8051986:	83 c4 3c             	add    $0x3c,%esp
 8051989:	89 f8                	mov    %edi,%eax
 805198b:	5b                   	pop    %ebx
 805198c:	5e                   	pop    %esi
 805198d:	5f                   	pop    %edi
 805198e:	5d                   	pop    %ebp
 805198f:	c3                   	ret    
 8051990:	e8 2b 75 00 00       	call   8058ec0 <__asan_init_v1>
 8051995:	e9 4f ff ff ff       	jmp    80518e9 <__interceptor_pread64+0x39>
 805199a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80519a0:	8b 55 0c             	mov    0xc(%ebp),%edx
 80519a3:	83 e2 07             	and    $0x7,%edx
 80519a6:	39 c2                	cmp    %eax,%edx
 80519a8:	7d 9e                	jge    8051948 <__interceptor_pread64+0x98>
 80519aa:	e9 78 ff ff ff       	jmp    8051927 <__interceptor_pread64+0x77>
 80519af:	90                   	nop
 80519b0:	89 fa                	mov    %edi,%edx
 80519b2:	d1 ea                	shr    %edx
 80519b4:	03 55 0c             	add    0xc(%ebp),%edx
 80519b7:	89 d0                	mov    %edx,%eax
 80519b9:	c1 e8 03             	shr    $0x3,%eax
 80519bc:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80519c3:	84 c0                	test   %al,%al
 80519c5:	74 bf                	je     8051986 <__interceptor_pread64+0xd6>
 80519c7:	83 e2 07             	and    $0x7,%edx
 80519ca:	39 c2                	cmp    %eax,%edx
 80519cc:	0f 8d 76 ff ff ff    	jge    8051948 <__interceptor_pread64+0x98>
 80519d2:	eb b2                	jmp    8051986 <__interceptor_pread64+0xd6>
 80519d4:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80519da:	89 44 24 08          	mov    %eax,0x8(%esp)
 80519de:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80519e4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80519eb:	00 
 80519ec:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80519f3:	00 
 80519f4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80519fb:	00 
 80519fc:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051a03:	00 
 8051a04:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)
 8051a0b:	00 
 8051a0c:	89 04 24             	mov    %eax,(%esp)
 8051a0f:	e8 9c 09 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051a14:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051a1a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08051a20 <__interceptor_pwrite64>:
 8051a20:	55                   	push   %ebp
 8051a21:	89 e5                	mov    %esp,%ebp
 8051a23:	57                   	push   %edi
 8051a24:	56                   	push   %esi
 8051a25:	53                   	push   %ebx
 8051a26:	e8 c5 80 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051a2b:	81 c3 d5 e5 05 00    	add    $0x5e5d5,%ebx
 8051a31:	83 ec 4c             	sub    $0x4c,%esp
 8051a34:	8b 75 10             	mov    0x10(%ebp),%esi
 8051a37:	8b 7d 14             	mov    0x14(%ebp),%edi
 8051a3a:	8b 45 18             	mov    0x18(%ebp),%eax
 8051a3d:	8b 55 1c             	mov    0x1c(%ebp),%edx
 8051a40:	8d 8b 10 bc 02 00    	lea    0x2bc10(%ebx),%ecx
 8051a46:	80 39 00             	cmpb   $0x0,(%ecx)
 8051a49:	0f 85 05 01 00 00    	jne    8051b54 <__interceptor_pwrite64+0x134>
 8051a4f:	8d 8b 14 bc 02 00    	lea    0x2bc14(%ebx),%ecx
 8051a55:	8b 09                	mov    (%ecx),%ecx
 8051a57:	85 c9                	test   %ecx,%ecx
 8051a59:	0f 84 a9 00 00 00    	je     8051b08 <__interceptor_pwrite64+0xe8>
 8051a5f:	89 44 24 10          	mov    %eax,0x10(%esp)
 8051a63:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051a66:	89 74 24 08          	mov    %esi,0x8(%esp)
 8051a6a:	89 54 24 14          	mov    %edx,0x14(%esp)
 8051a6e:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8051a72:	89 44 24 04          	mov    %eax,0x4(%esp)
 8051a76:	8b 45 08             	mov    0x8(%ebp),%eax
 8051a79:	89 04 24             	mov    %eax,(%esp)
 8051a7c:	ff 93 c8 bb 02 00    	call   *0x2bbc8(%ebx)
 8051a82:	85 c0                	test   %eax,%eax
 8051a84:	89 c6                	mov    %eax,%esi
 8051a86:	7e 76                	jle    8051afe <__interceptor_pwrite64+0xde>
 8051a88:	83 f8 20             	cmp    $0x20,%eax
 8051a8b:	77 33                	ja     8051ac0 <__interceptor_pwrite64+0xa0>
 8051a8d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051a90:	c1 e8 03             	shr    $0x3,%eax
 8051a93:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051a9a:	84 c0                	test   %al,%al
 8051a9c:	0f 85 7e 00 00 00    	jne    8051b20 <__interceptor_pwrite64+0x100>
 8051aa2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051aa5:	8d 54 30 ff          	lea    -0x1(%eax,%esi,1),%edx
 8051aa9:	89 d0                	mov    %edx,%eax
 8051aab:	c1 e8 03             	shr    $0x3,%eax
 8051aae:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051ab5:	84 c0                	test   %al,%al
 8051ab7:	74 77                	je     8051b30 <__interceptor_pwrite64+0x110>
 8051ab9:	83 e2 07             	and    $0x7,%edx
 8051abc:	39 c2                	cmp    %eax,%edx
 8051abe:	7c 70                	jl     8051b30 <__interceptor_pwrite64+0x110>
 8051ac0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8051ac3:	89 74 24 04          	mov    %esi,0x4(%esp)
 8051ac7:	89 04 24             	mov    %eax,(%esp)
 8051aca:	e8 d1 b9 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051acf:	85 c0                	test   %eax,%eax
 8051ad1:	74 2b                	je     8051afe <__interceptor_pwrite64+0xde>
 8051ad3:	e8 a8 2e 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8051ad8:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8051adb:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8051ade:	89 74 24 14          	mov    %esi,0x14(%esp)
 8051ae2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051ae9:	00 
 8051aea:	89 54 24 08          	mov    %edx,0x8(%esp)
 8051aee:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8051af2:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051af6:	89 04 24             	mov    %eax,(%esp)
 8051af9:	e8 b2 db 00 00       	call   805f6b0 <__asan_report_error>
 8051afe:	83 c4 4c             	add    $0x4c,%esp
 8051b01:	89 f0                	mov    %esi,%eax
 8051b03:	5b                   	pop    %ebx
 8051b04:	5e                   	pop    %esi
 8051b05:	5f                   	pop    %edi
 8051b06:	5d                   	pop    %ebp
 8051b07:	c3                   	ret    
 8051b08:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8051b0b:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8051b0e:	e8 ad 73 00 00       	call   8058ec0 <__asan_init_v1>
 8051b13:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8051b16:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8051b19:	e9 41 ff ff ff       	jmp    8051a5f <__interceptor_pwrite64+0x3f>
 8051b1e:	66 90                	xchg   %ax,%ax
 8051b20:	8b 55 0c             	mov    0xc(%ebp),%edx
 8051b23:	83 e2 07             	and    $0x7,%edx
 8051b26:	39 c2                	cmp    %eax,%edx
 8051b28:	7d 96                	jge    8051ac0 <__interceptor_pwrite64+0xa0>
 8051b2a:	e9 73 ff ff ff       	jmp    8051aa2 <__interceptor_pwrite64+0x82>
 8051b2f:	90                   	nop
 8051b30:	89 f2                	mov    %esi,%edx
 8051b32:	d1 ea                	shr    %edx
 8051b34:	03 55 0c             	add    0xc(%ebp),%edx
 8051b37:	89 d0                	mov    %edx,%eax
 8051b39:	c1 e8 03             	shr    $0x3,%eax
 8051b3c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051b43:	84 c0                	test   %al,%al
 8051b45:	74 b7                	je     8051afe <__interceptor_pwrite64+0xde>
 8051b47:	83 e2 07             	and    $0x7,%edx
 8051b4a:	39 c2                	cmp    %eax,%edx
 8051b4c:	0f 8d 6e ff ff ff    	jge    8051ac0 <__interceptor_pwrite64+0xa0>
 8051b52:	eb aa                	jmp    8051afe <__interceptor_pwrite64+0xde>
 8051b54:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051b5a:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051b5e:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8051b64:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051b6b:	00 
 8051b6c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8051b73:	00 
 8051b74:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051b7b:	00 
 8051b7c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051b83:	00 
 8051b84:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)
 8051b8b:	00 
 8051b8c:	89 04 24             	mov    %eax,(%esp)
 8051b8f:	e8 1c 08 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051b94:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051b9a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08051ba0 <__interceptor_strnlen>:
 8051ba0:	55                   	push   %ebp
 8051ba1:	89 e5                	mov    %esp,%ebp
 8051ba3:	57                   	push   %edi
 8051ba4:	56                   	push   %esi
 8051ba5:	53                   	push   %ebx
 8051ba6:	e8 45 7f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051bab:	81 c3 55 e4 05 00    	add    $0x5e455,%ebx
 8051bb1:	83 ec 3c             	sub    $0x3c,%esp
 8051bb4:	8b 75 0c             	mov    0xc(%ebp),%esi
 8051bb7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8051bbd:	80 38 00             	cmpb   $0x0,(%eax)
 8051bc0:	0f 85 0f 01 00 00    	jne    8051cd5 <__interceptor_strnlen+0x135>
 8051bc6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8051bcc:	8b 00                	mov    (%eax),%eax
 8051bce:	85 c0                	test   %eax,%eax
 8051bd0:	0f 84 9a 00 00 00    	je     8051c70 <__interceptor_strnlen+0xd0>
 8051bd6:	8b 45 08             	mov    0x8(%ebp),%eax
 8051bd9:	89 74 24 04          	mov    %esi,0x4(%esp)
 8051bdd:	89 04 24             	mov    %eax,(%esp)
 8051be0:	ff 93 00 bb 02 00    	call   *0x2bb00(%ebx)
 8051be6:	89 c7                	mov    %eax,%edi
 8051be8:	e8 33 69 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8051bed:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8051bf1:	74 0c                	je     8051bff <__interceptor_strnlen+0x5f>
 8051bf3:	8d 47 01             	lea    0x1(%edi),%eax
 8051bf6:	39 f0                	cmp    %esi,%eax
 8051bf8:	0f 46 f0             	cmovbe %eax,%esi
 8051bfb:	85 f6                	test   %esi,%esi
 8051bfd:	75 11                	jne    8051c10 <__interceptor_strnlen+0x70>
 8051bff:	83 c4 3c             	add    $0x3c,%esp
 8051c02:	89 f8                	mov    %edi,%eax
 8051c04:	5b                   	pop    %ebx
 8051c05:	5e                   	pop    %esi
 8051c06:	5f                   	pop    %edi
 8051c07:	5d                   	pop    %ebp
 8051c08:	c3                   	ret    
 8051c09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8051c10:	83 fe 20             	cmp    $0x20,%esi
 8051c13:	77 1b                	ja     8051c30 <__interceptor_strnlen+0x90>
 8051c15:	8b 45 08             	mov    0x8(%ebp),%eax
 8051c18:	c1 e8 03             	shr    $0x3,%eax
 8051c1b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051c22:	84 c0                	test   %al,%al
 8051c24:	74 5a                	je     8051c80 <__interceptor_strnlen+0xe0>
 8051c26:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8051c29:	83 e1 07             	and    $0x7,%ecx
 8051c2c:	39 c1                	cmp    %eax,%ecx
 8051c2e:	7c 50                	jl     8051c80 <__interceptor_strnlen+0xe0>
 8051c30:	8b 45 08             	mov    0x8(%ebp),%eax
 8051c33:	89 74 24 04          	mov    %esi,0x4(%esp)
 8051c37:	89 04 24             	mov    %eax,(%esp)
 8051c3a:	e8 61 b8 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051c3f:	85 c0                	test   %eax,%eax
 8051c41:	74 bc                	je     8051bff <__interceptor_strnlen+0x5f>
 8051c43:	e8 38 2d 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8051c48:	8b 55 08             	mov    0x8(%ebp),%edx
 8051c4b:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
 8051c4e:	89 74 24 14          	mov    %esi,0x14(%esp)
 8051c52:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051c59:	00 
 8051c5a:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8051c5e:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8051c62:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051c66:	89 04 24             	mov    %eax,(%esp)
 8051c69:	e8 42 da 00 00       	call   805f6b0 <__asan_report_error>
 8051c6e:	eb 8f                	jmp    8051bff <__interceptor_strnlen+0x5f>
 8051c70:	e8 4b 72 00 00       	call   8058ec0 <__asan_init_v1>
 8051c75:	e9 5c ff ff ff       	jmp    8051bd6 <__interceptor_strnlen+0x36>
 8051c7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051c80:	8b 45 08             	mov    0x8(%ebp),%eax
 8051c83:	8d 4c 30 ff          	lea    -0x1(%eax,%esi,1),%ecx
 8051c87:	89 c8                	mov    %ecx,%eax
 8051c89:	c1 e8 03             	shr    $0x3,%eax
 8051c8c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051c93:	84 c0                	test   %al,%al
 8051c95:	75 31                	jne    8051cc8 <__interceptor_strnlen+0x128>
 8051c97:	89 f1                	mov    %esi,%ecx
 8051c99:	d1 e9                	shr    %ecx
 8051c9b:	03 4d 08             	add    0x8(%ebp),%ecx
 8051c9e:	89 c8                	mov    %ecx,%eax
 8051ca0:	c1 e8 03             	shr    $0x3,%eax
 8051ca3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051caa:	84 c0                	test   %al,%al
 8051cac:	0f 84 4d ff ff ff    	je     8051bff <__interceptor_strnlen+0x5f>
 8051cb2:	83 e1 07             	and    $0x7,%ecx
 8051cb5:	39 c1                	cmp    %eax,%ecx
 8051cb7:	0f 8d 73 ff ff ff    	jge    8051c30 <__interceptor_strnlen+0x90>
 8051cbd:	e9 3d ff ff ff       	jmp    8051bff <__interceptor_strnlen+0x5f>
 8051cc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051cc8:	83 e1 07             	and    $0x7,%ecx
 8051ccb:	39 c1                	cmp    %eax,%ecx
 8051ccd:	0f 8d 5d ff ff ff    	jge    8051c30 <__interceptor_strnlen+0x90>
 8051cd3:	eb c2                	jmp    8051c97 <__interceptor_strnlen+0xf7>
 8051cd5:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051cdb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051cdf:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8051ce5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051cec:	00 
 8051ced:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8051cf4:	00 
 8051cf5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051cfc:	00 
 8051cfd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051d04:	00 
 8051d05:	c7 44 24 04 09 02 00 	movl   $0x209,0x4(%esp)
 8051d0c:	00 
 8051d0d:	89 04 24             	mov    %eax,(%esp)
 8051d10:	e8 9b 06 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051d15:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8051d19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08051d20 <__interceptor_atol>:
 8051d20:	55                   	push   %ebp
 8051d21:	89 e5                	mov    %esp,%ebp
 8051d23:	57                   	push   %edi
 8051d24:	56                   	push   %esi
 8051d25:	53                   	push   %ebx
 8051d26:	e8 c5 7d ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051d2b:	81 c3 d5 e2 05 00    	add    $0x5e2d5,%ebx
 8051d31:	83 ec 3c             	sub    $0x3c,%esp
 8051d34:	8b 75 08             	mov    0x8(%ebp),%esi
 8051d37:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8051d3d:	80 38 00             	cmpb   $0x0,(%eax)
 8051d40:	0f 85 7f 01 00 00    	jne    8051ec5 <__interceptor_atol+0x1a5>
 8051d46:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8051d4c:	8b 00                	mov    (%eax),%eax
 8051d4e:	85 c0                	test   %eax,%eax
 8051d50:	0f 84 da 00 00 00    	je     8051e30 <__interceptor_atol+0x110>
 8051d56:	e8 c5 67 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8051d5b:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8051d5f:	0f 84 b3 00 00 00    	je     8051e18 <__interceptor_atol+0xf8>
 8051d65:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8051d68:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 8051d6f:	00 
 8051d70:	89 44 24 04          	mov    %eax,0x4(%esp)
 8051d74:	89 34 24             	mov    %esi,(%esp)
 8051d77:	ff 93 fc ba 02 00    	call   *0x2bafc(%ebx)
 8051d7d:	8b 4d e0             	mov    -0x20(%ebp),%ecx
 8051d80:	39 ce                	cmp    %ecx,%esi
 8051d82:	89 c7                	mov    %eax,%edi
 8051d84:	0f 84 b6 00 00 00    	je     8051e40 <__interceptor_atol+0x120>
 8051d8a:	0f 87 75 01 00 00    	ja     8051f05 <__interceptor_atol+0x1e5>
 8051d90:	29 f1                	sub    %esi,%ecx
 8051d92:	83 c1 01             	add    $0x1,%ecx
 8051d95:	75 11                	jne    8051da8 <__interceptor_atol+0x88>
 8051d97:	83 c4 3c             	add    $0x3c,%esp
 8051d9a:	89 f8                	mov    %edi,%eax
 8051d9c:	5b                   	pop    %ebx
 8051d9d:	5e                   	pop    %esi
 8051d9e:	5f                   	pop    %edi
 8051d9f:	5d                   	pop    %ebp
 8051da0:	c3                   	ret    
 8051da1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8051da8:	83 f9 20             	cmp    $0x20,%ecx
 8051dab:	77 21                	ja     8051dce <__interceptor_atol+0xae>
 8051dad:	89 f0                	mov    %esi,%eax
 8051daf:	c1 e8 03             	shr    $0x3,%eax
 8051db2:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051db9:	84 c0                	test   %al,%al
 8051dbb:	0f 84 b7 00 00 00    	je     8051e78 <__interceptor_atol+0x158>
 8051dc1:	89 f2                	mov    %esi,%edx
 8051dc3:	83 e2 07             	and    $0x7,%edx
 8051dc6:	39 c2                	cmp    %eax,%edx
 8051dc8:	0f 8c aa 00 00 00    	jl     8051e78 <__interceptor_atol+0x158>
 8051dce:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8051dd2:	89 34 24             	mov    %esi,(%esp)
 8051dd5:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8051dd8:	e8 c3 b6 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8051ddd:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8051de0:	85 c0                	test   %eax,%eax
 8051de2:	74 b3                	je     8051d97 <__interceptor_atol+0x77>
 8051de4:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8051de7:	e8 94 2b 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8051dec:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8051def:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8051df2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051df9:	00 
 8051dfa:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8051dfe:	89 54 24 08          	mov    %edx,0x8(%esp)
 8051e02:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 8051e06:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8051e0a:	89 04 24             	mov    %eax,(%esp)
 8051e0d:	e8 9e d8 00 00       	call   805f6b0 <__asan_report_error>
 8051e12:	eb 83                	jmp    8051d97 <__interceptor_atol+0x77>
 8051e14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8051e18:	89 34 24             	mov    %esi,(%esp)
 8051e1b:	ff 93 f4 ba 02 00    	call   *0x2baf4(%ebx)
 8051e21:	83 c4 3c             	add    $0x3c,%esp
 8051e24:	5b                   	pop    %ebx
 8051e25:	5e                   	pop    %esi
 8051e26:	5f                   	pop    %edi
 8051e27:	5d                   	pop    %ebp
 8051e28:	c3                   	ret    
 8051e29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8051e30:	e8 8b 70 00 00       	call   8058ec0 <__asan_init_v1>
 8051e35:	e9 1c ff ff ff       	jmp    8051d56 <__interceptor_atol+0x36>
 8051e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051e40:	89 f1                	mov    %esi,%ecx
 8051e42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8051e48:	0f b6 11             	movzbl (%ecx),%edx
 8051e4b:	80 fa 20             	cmp    $0x20,%dl
 8051e4e:	74 18                	je     8051e68 <__interceptor_atol+0x148>
 8051e50:	8d 42 f7             	lea    -0x9(%edx),%eax
 8051e53:	3c 04                	cmp    $0x4,%al
 8051e55:	76 11                	jbe    8051e68 <__interceptor_atol+0x148>
 8051e57:	80 fa 2d             	cmp    $0x2d,%dl
 8051e5a:	75 14                	jne    8051e70 <__interceptor_atol+0x150>
 8051e5c:	83 c1 01             	add    $0x1,%ecx
 8051e5f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 8051e62:	e9 29 ff ff ff       	jmp    8051d90 <__interceptor_atol+0x70>
 8051e67:	90                   	nop
 8051e68:	83 c1 01             	add    $0x1,%ecx
 8051e6b:	eb db                	jmp    8051e48 <__interceptor_atol+0x128>
 8051e6d:	8d 76 00             	lea    0x0(%esi),%esi
 8051e70:	80 fa 2b             	cmp    $0x2b,%dl
 8051e73:	74 e7                	je     8051e5c <__interceptor_atol+0x13c>
 8051e75:	eb e8                	jmp    8051e5f <__interceptor_atol+0x13f>
 8051e77:	90                   	nop
 8051e78:	8d 54 0e ff          	lea    -0x1(%esi,%ecx,1),%edx
 8051e7c:	89 d0                	mov    %edx,%eax
 8051e7e:	c1 e8 03             	shr    $0x3,%eax
 8051e81:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051e88:	84 c0                	test   %al,%al
 8051e8a:	75 2c                	jne    8051eb8 <__interceptor_atol+0x198>
 8051e8c:	89 ca                	mov    %ecx,%edx
 8051e8e:	d1 ea                	shr    %edx
 8051e90:	01 f2                	add    %esi,%edx
 8051e92:	89 d0                	mov    %edx,%eax
 8051e94:	c1 e8 03             	shr    $0x3,%eax
 8051e97:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051e9e:	84 c0                	test   %al,%al
 8051ea0:	0f 84 f1 fe ff ff    	je     8051d97 <__interceptor_atol+0x77>
 8051ea6:	83 e2 07             	and    $0x7,%edx
 8051ea9:	39 c2                	cmp    %eax,%edx
 8051eab:	0f 8d 1d ff ff ff    	jge    8051dce <__interceptor_atol+0xae>
 8051eb1:	e9 e1 fe ff ff       	jmp    8051d97 <__interceptor_atol+0x77>
 8051eb6:	66 90                	xchg   %ax,%ax
 8051eb8:	83 e2 07             	and    $0x7,%edx
 8051ebb:	39 c2                	cmp    %eax,%edx
 8051ebd:	0f 8d 0b ff ff ff    	jge    8051dce <__interceptor_atol+0xae>
 8051ec3:	eb c7                	jmp    8051e8c <__interceptor_atol+0x16c>
 8051ec5:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8051ecb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051ecf:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8051ed5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051edc:	00 
 8051edd:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8051ee4:	00 
 8051ee5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051eec:	00 
 8051eed:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051ef4:	00 
 8051ef5:	c7 44 24 04 4c 02 00 	movl   $0x24c,0x4(%esp)
 8051efc:	00 
 8051efd:	89 04 24             	mov    %eax,(%esp)
 8051f00:	e8 ab 04 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051f05:	8d 83 94 3e fd ff    	lea    -0x2c16c(%ebx),%eax
 8051f0b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8051f0f:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8051f15:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8051f1c:	00 
 8051f1d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8051f24:	00 
 8051f25:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8051f2c:	00 
 8051f2d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8051f34:	00 
 8051f35:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)
 8051f3c:	00 
 8051f3d:	89 04 24             	mov    %eax,(%esp)
 8051f40:	e8 6b 04 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8051f45:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8051f49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08051f50 <__interceptor_atoi>:
 8051f50:	55                   	push   %ebp
 8051f51:	89 e5                	mov    %esp,%ebp
 8051f53:	57                   	push   %edi
 8051f54:	56                   	push   %esi
 8051f55:	53                   	push   %ebx
 8051f56:	e8 95 7b ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8051f5b:	81 c3 a5 e0 05 00    	add    $0x5e0a5,%ebx
 8051f61:	83 ec 3c             	sub    $0x3c,%esp
 8051f64:	8b 75 08             	mov    0x8(%ebp),%esi
 8051f67:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8051f6d:	80 38 00             	cmpb   $0x0,(%eax)
 8051f70:	0f 85 7f 01 00 00    	jne    80520f5 <__interceptor_atoi+0x1a5>
 8051f76:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8051f7c:	8b 00                	mov    (%eax),%eax
 8051f7e:	85 c0                	test   %eax,%eax
 8051f80:	0f 84 da 00 00 00    	je     8052060 <__interceptor_atoi+0x110>
 8051f86:	e8 95 65 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8051f8b:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8051f8f:	0f 84 b3 00 00 00    	je     8052048 <__interceptor_atoi+0xf8>
 8051f95:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8051f98:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 8051f9f:	00 
 8051fa0:	89 44 24 04          	mov    %eax,0x4(%esp)
 8051fa4:	89 34 24             	mov    %esi,(%esp)
 8051fa7:	ff 93 fc ba 02 00    	call   *0x2bafc(%ebx)
 8051fad:	8b 4d e0             	mov    -0x20(%ebp),%ecx
 8051fb0:	39 ce                	cmp    %ecx,%esi
 8051fb2:	89 c7                	mov    %eax,%edi
 8051fb4:	0f 84 b6 00 00 00    	je     8052070 <__interceptor_atoi+0x120>
 8051fba:	0f 87 75 01 00 00    	ja     8052135 <__interceptor_atoi+0x1e5>
 8051fc0:	29 f1                	sub    %esi,%ecx
 8051fc2:	83 c1 01             	add    $0x1,%ecx
 8051fc5:	75 11                	jne    8051fd8 <__interceptor_atoi+0x88>
 8051fc7:	83 c4 3c             	add    $0x3c,%esp
 8051fca:	89 f8                	mov    %edi,%eax
 8051fcc:	5b                   	pop    %ebx
 8051fcd:	5e                   	pop    %esi
 8051fce:	5f                   	pop    %edi
 8051fcf:	5d                   	pop    %ebp
 8051fd0:	c3                   	ret    
 8051fd1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8051fd8:	83 f9 20             	cmp    $0x20,%ecx
 8051fdb:	77 21                	ja     8051ffe <__interceptor_atoi+0xae>
 8051fdd:	89 f0                	mov    %esi,%eax
 8051fdf:	c1 e8 03             	shr    $0x3,%eax
 8051fe2:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8051fe9:	84 c0                	test   %al,%al
 8051feb:	0f 84 b7 00 00 00    	je     80520a8 <__interceptor_atoi+0x158>
 8051ff1:	89 f2                	mov    %esi,%edx
 8051ff3:	83 e2 07             	and    $0x7,%edx
 8051ff6:	39 c2                	cmp    %eax,%edx
 8051ff8:	0f 8c aa 00 00 00    	jl     80520a8 <__interceptor_atoi+0x158>
 8051ffe:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8052002:	89 34 24             	mov    %esi,(%esp)
 8052005:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8052008:	e8 93 b4 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805200d:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8052010:	85 c0                	test   %eax,%eax
 8052012:	74 b3                	je     8051fc7 <__interceptor_atoi+0x77>
 8052014:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8052017:	e8 64 29 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805201c:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 805201f:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8052022:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052029:	00 
 805202a:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805202e:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052032:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 8052036:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805203a:	89 04 24             	mov    %eax,(%esp)
 805203d:	e8 6e d6 00 00       	call   805f6b0 <__asan_report_error>
 8052042:	eb 83                	jmp    8051fc7 <__interceptor_atoi+0x77>
 8052044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8052048:	89 34 24             	mov    %esi,(%esp)
 805204b:	ff 93 f8 ba 02 00    	call   *0x2baf8(%ebx)
 8052051:	83 c4 3c             	add    $0x3c,%esp
 8052054:	5b                   	pop    %ebx
 8052055:	5e                   	pop    %esi
 8052056:	5f                   	pop    %edi
 8052057:	5d                   	pop    %ebp
 8052058:	c3                   	ret    
 8052059:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8052060:	e8 5b 6e 00 00       	call   8058ec0 <__asan_init_v1>
 8052065:	e9 1c ff ff ff       	jmp    8051f86 <__interceptor_atoi+0x36>
 805206a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052070:	89 f1                	mov    %esi,%ecx
 8052072:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052078:	0f b6 11             	movzbl (%ecx),%edx
 805207b:	80 fa 20             	cmp    $0x20,%dl
 805207e:	74 18                	je     8052098 <__interceptor_atoi+0x148>
 8052080:	8d 42 f7             	lea    -0x9(%edx),%eax
 8052083:	3c 04                	cmp    $0x4,%al
 8052085:	76 11                	jbe    8052098 <__interceptor_atoi+0x148>
 8052087:	80 fa 2d             	cmp    $0x2d,%dl
 805208a:	75 14                	jne    80520a0 <__interceptor_atoi+0x150>
 805208c:	83 c1 01             	add    $0x1,%ecx
 805208f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 8052092:	e9 29 ff ff ff       	jmp    8051fc0 <__interceptor_atoi+0x70>
 8052097:	90                   	nop
 8052098:	83 c1 01             	add    $0x1,%ecx
 805209b:	eb db                	jmp    8052078 <__interceptor_atoi+0x128>
 805209d:	8d 76 00             	lea    0x0(%esi),%esi
 80520a0:	80 fa 2b             	cmp    $0x2b,%dl
 80520a3:	74 e7                	je     805208c <__interceptor_atoi+0x13c>
 80520a5:	eb e8                	jmp    805208f <__interceptor_atoi+0x13f>
 80520a7:	90                   	nop
 80520a8:	8d 54 0e ff          	lea    -0x1(%esi,%ecx,1),%edx
 80520ac:	89 d0                	mov    %edx,%eax
 80520ae:	c1 e8 03             	shr    $0x3,%eax
 80520b1:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80520b8:	84 c0                	test   %al,%al
 80520ba:	75 2c                	jne    80520e8 <__interceptor_atoi+0x198>
 80520bc:	89 ca                	mov    %ecx,%edx
 80520be:	d1 ea                	shr    %edx
 80520c0:	01 f2                	add    %esi,%edx
 80520c2:	89 d0                	mov    %edx,%eax
 80520c4:	c1 e8 03             	shr    $0x3,%eax
 80520c7:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80520ce:	84 c0                	test   %al,%al
 80520d0:	0f 84 f1 fe ff ff    	je     8051fc7 <__interceptor_atoi+0x77>
 80520d6:	83 e2 07             	and    $0x7,%edx
 80520d9:	39 c2                	cmp    %eax,%edx
 80520db:	0f 8d 1d ff ff ff    	jge    8051ffe <__interceptor_atoi+0xae>
 80520e1:	e9 e1 fe ff ff       	jmp    8051fc7 <__interceptor_atoi+0x77>
 80520e6:	66 90                	xchg   %ax,%ax
 80520e8:	83 e2 07             	and    $0x7,%edx
 80520eb:	39 c2                	cmp    %eax,%edx
 80520ed:	0f 8d 0b ff ff ff    	jge    8051ffe <__interceptor_atoi+0xae>
 80520f3:	eb c7                	jmp    80520bc <__interceptor_atoi+0x16c>
 80520f5:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80520fb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80520ff:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8052105:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805210c:	00 
 805210d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052114:	00 
 8052115:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805211c:	00 
 805211d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052124:	00 
 8052125:	c7 44 24 04 39 02 00 	movl   $0x239,0x4(%esp)
 805212c:	00 
 805212d:	89 04 24             	mov    %eax,(%esp)
 8052130:	e8 7b 02 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052135:	8d 83 94 3e fd ff    	lea    -0x2c16c(%ebx),%eax
 805213b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805213f:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8052145:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805214c:	00 
 805214d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052154:	00 
 8052155:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805215c:	00 
 805215d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052164:	00 
 8052165:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)
 805216c:	00 
 805216d:	89 04 24             	mov    %eax,(%esp)
 8052170:	e8 3b 02 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052175:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8052179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08052180 <__interceptor_atoll>:
 8052180:	55                   	push   %ebp
 8052181:	89 e5                	mov    %esp,%ebp
 8052183:	57                   	push   %edi
 8052184:	56                   	push   %esi
 8052185:	53                   	push   %ebx
 8052186:	e8 65 79 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805218b:	81 c3 75 de 05 00    	add    $0x5de75,%ebx
 8052191:	83 ec 4c             	sub    $0x4c,%esp
 8052194:	8b 75 08             	mov    0x8(%ebp),%esi
 8052197:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805219d:	80 38 00             	cmpb   $0x0,(%eax)
 80521a0:	0f 85 7f 01 00 00    	jne    8052325 <__interceptor_atoll+0x1a5>
 80521a6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80521ac:	8b 00                	mov    (%eax),%eax
 80521ae:	85 c0                	test   %eax,%eax
 80521b0:	0f 84 d2 00 00 00    	je     8052288 <__interceptor_atoll+0x108>
 80521b6:	e8 65 63 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80521bb:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 80521bf:	0f 84 ab 00 00 00    	je     8052270 <__interceptor_atoll+0xf0>
 80521c5:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80521c8:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 80521cf:	00 
 80521d0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80521d4:	89 34 24             	mov    %esi,(%esp)
 80521d7:	ff 93 f0 ba 02 00    	call   *0x2baf0(%ebx)
 80521dd:	8b 7d e0             	mov    -0x20(%ebp),%edi
 80521e0:	39 fe                	cmp    %edi,%esi
 80521e2:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80521e5:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 80521e8:	0f 84 aa 00 00 00    	je     8052298 <__interceptor_atoll+0x118>
 80521ee:	0f 87 71 01 00 00    	ja     8052365 <__interceptor_atoll+0x1e5>
 80521f4:	29 f7                	sub    %esi,%edi
 80521f6:	83 c7 01             	add    $0x1,%edi
 80521f9:	75 15                	jne    8052210 <__interceptor_atoll+0x90>
 80521fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80521fe:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8052201:	83 c4 4c             	add    $0x4c,%esp
 8052204:	5b                   	pop    %ebx
 8052205:	5e                   	pop    %esi
 8052206:	5f                   	pop    %edi
 8052207:	5d                   	pop    %ebp
 8052208:	c3                   	ret    
 8052209:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8052210:	83 ff 20             	cmp    $0x20,%edi
 8052213:	77 21                	ja     8052236 <__interceptor_atoll+0xb6>
 8052215:	89 f0                	mov    %esi,%eax
 8052217:	c1 e8 03             	shr    $0x3,%eax
 805221a:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052221:	84 c0                	test   %al,%al
 8052223:	0f 84 af 00 00 00    	je     80522d8 <__interceptor_atoll+0x158>
 8052229:	89 f1                	mov    %esi,%ecx
 805222b:	83 e1 07             	and    $0x7,%ecx
 805222e:	39 c1                	cmp    %eax,%ecx
 8052230:	0f 8c a2 00 00 00    	jl     80522d8 <__interceptor_atoll+0x158>
 8052236:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805223a:	89 34 24             	mov    %esi,(%esp)
 805223d:	e8 5e b2 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052242:	85 c0                	test   %eax,%eax
 8052244:	74 b5                	je     80521fb <__interceptor_atoll+0x7b>
 8052246:	e8 35 27 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805224b:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805224f:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8052252:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8052256:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805225d:	00 
 805225e:	89 74 24 08          	mov    %esi,0x8(%esp)
 8052262:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052266:	89 04 24             	mov    %eax,(%esp)
 8052269:	e8 42 d4 00 00       	call   805f6b0 <__asan_report_error>
 805226e:	eb 8b                	jmp    80521fb <__interceptor_atoll+0x7b>
 8052270:	89 34 24             	mov    %esi,(%esp)
 8052273:	ff 93 ec ba 02 00    	call   *0x2baec(%ebx)
 8052279:	83 c4 4c             	add    $0x4c,%esp
 805227c:	5b                   	pop    %ebx
 805227d:	5e                   	pop    %esi
 805227e:	5f                   	pop    %edi
 805227f:	5d                   	pop    %ebp
 8052280:	c3                   	ret    
 8052281:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8052288:	e8 33 6c 00 00       	call   8058ec0 <__asan_init_v1>
 805228d:	e9 24 ff ff ff       	jmp    80521b6 <__interceptor_atoll+0x36>
 8052292:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052298:	89 f7                	mov    %esi,%edi
 805229a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80522a0:	0f b6 07             	movzbl (%edi),%eax
 80522a3:	3c 20                	cmp    $0x20,%al
 80522a5:	74 19                	je     80522c0 <__interceptor_atoll+0x140>
 80522a7:	8d 50 f7             	lea    -0x9(%eax),%edx
 80522aa:	80 fa 04             	cmp    $0x4,%dl
 80522ad:	76 11                	jbe    80522c0 <__interceptor_atoll+0x140>
 80522af:	3c 2d                	cmp    $0x2d,%al
 80522b1:	75 15                	jne    80522c8 <__interceptor_atoll+0x148>
 80522b3:	83 c7 01             	add    $0x1,%edi
 80522b6:	89 7d e0             	mov    %edi,-0x20(%ebp)
 80522b9:	e9 36 ff ff ff       	jmp    80521f4 <__interceptor_atoll+0x74>
 80522be:	66 90                	xchg   %ax,%ax
 80522c0:	83 c7 01             	add    $0x1,%edi
 80522c3:	eb db                	jmp    80522a0 <__interceptor_atoll+0x120>
 80522c5:	8d 76 00             	lea    0x0(%esi),%esi
 80522c8:	3c 2b                	cmp    $0x2b,%al
 80522ca:	74 e7                	je     80522b3 <__interceptor_atoll+0x133>
 80522cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80522d0:	eb e4                	jmp    80522b6 <__interceptor_atoll+0x136>
 80522d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80522d8:	8d 44 3e ff          	lea    -0x1(%esi,%edi,1),%eax
 80522dc:	89 c1                	mov    %eax,%ecx
 80522de:	c1 e8 03             	shr    $0x3,%eax
 80522e1:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80522e8:	84 c0                	test   %al,%al
 80522ea:	75 2c                	jne    8052318 <__interceptor_atoll+0x198>
 80522ec:	89 f8                	mov    %edi,%eax
 80522ee:	d1 e8                	shr    %eax
 80522f0:	01 f0                	add    %esi,%eax
 80522f2:	89 c1                	mov    %eax,%ecx
 80522f4:	c1 e8 03             	shr    $0x3,%eax
 80522f7:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80522fe:	84 c0                	test   %al,%al
 8052300:	0f 84 f5 fe ff ff    	je     80521fb <__interceptor_atoll+0x7b>
 8052306:	83 e1 07             	and    $0x7,%ecx
 8052309:	39 c1                	cmp    %eax,%ecx
 805230b:	0f 8d 25 ff ff ff    	jge    8052236 <__interceptor_atoll+0xb6>
 8052311:	e9 e5 fe ff ff       	jmp    80521fb <__interceptor_atoll+0x7b>
 8052316:	66 90                	xchg   %ax,%ax
 8052318:	83 e1 07             	and    $0x7,%ecx
 805231b:	39 c1                	cmp    %eax,%ecx
 805231d:	0f 8d 13 ff ff ff    	jge    8052236 <__interceptor_atoll+0xb6>
 8052323:	eb c7                	jmp    80522ec <__interceptor_atoll+0x16c>
 8052325:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 805232b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805232f:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8052335:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805233c:	00 
 805233d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052344:	00 
 8052345:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805234c:	00 
 805234d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052354:	00 
 8052355:	c7 44 24 04 6e 02 00 	movl   $0x26e,0x4(%esp)
 805235c:	00 
 805235d:	89 04 24             	mov    %eax,(%esp)
 8052360:	e8 4b 00 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052365:	8d 83 94 3e fd ff    	lea    -0x2c16c(%ebx),%eax
 805236b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805236f:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8052375:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805237c:	00 
 805237d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052384:	00 
 8052385:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805238c:	00 
 805238d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052394:	00 
 8052395:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)
 805239c:	00 
 805239d:	89 04 24             	mov    %eax,(%esp)
 80523a0:	e8 0b 00 01 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80523a5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80523a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080523b0 <__interceptor_localtime>:
 80523b0:	55                   	push   %ebp
 80523b1:	89 e5                	mov    %esp,%ebp
 80523b3:	57                   	push   %edi
 80523b4:	56                   	push   %esi
 80523b5:	53                   	push   %ebx
 80523b6:	e8 35 77 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80523bb:	81 c3 45 dc 05 00    	add    $0x5dc45,%ebx
 80523c1:	83 ec 3c             	sub    $0x3c,%esp
 80523c4:	8b 75 08             	mov    0x8(%ebp),%esi
 80523c7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80523cd:	80 38 00             	cmpb   $0x0,(%eax)
 80523d0:	0f 85 cc 01 00 00    	jne    80525a2 <__interceptor_localtime+0x1f2>
 80523d6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80523dc:	8b 00                	mov    (%eax),%eax
 80523de:	85 c0                	test   %eax,%eax
 80523e0:	0f 84 32 01 00 00    	je     8052518 <__interceptor_localtime+0x168>
 80523e6:	89 34 24             	mov    %esi,(%esp)
 80523e9:	ff 93 c0 bb 02 00    	call   *0x2bbc0(%ebx)
 80523ef:	85 c0                	test   %eax,%eax
 80523f1:	89 c7                	mov    %eax,%edi
 80523f3:	0f 84 f7 00 00 00    	je     80524f0 <__interceptor_localtime+0x140>
 80523f9:	89 f0                	mov    %esi,%eax
 80523fb:	c1 e8 03             	shr    $0x3,%eax
 80523fe:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052405:	84 c0                	test   %al,%al
 8052407:	0f 85 f3 00 00 00    	jne    8052500 <__interceptor_localtime+0x150>
 805240d:	8d 56 03             	lea    0x3(%esi),%edx
 8052410:	89 d0                	mov    %edx,%eax
 8052412:	c1 e8 03             	shr    $0x3,%eax
 8052415:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805241c:	84 c0                	test   %al,%al
 805241e:	0f 84 04 01 00 00    	je     8052528 <__interceptor_localtime+0x178>
 8052424:	83 e2 07             	and    $0x7,%edx
 8052427:	39 c2                	cmp    %eax,%edx
 8052429:	0f 8c f9 00 00 00    	jl     8052528 <__interceptor_localtime+0x178>
 805242f:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 8052436:	00 
 8052437:	89 34 24             	mov    %esi,(%esp)
 805243a:	e8 61 b0 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805243f:	85 c0                	test   %eax,%eax
 8052441:	74 2c                	je     805246f <__interceptor_localtime+0xbf>
 8052443:	e8 38 25 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052448:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 805244b:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8052452:	00 
 8052453:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805245a:	00 
 805245b:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805245f:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052463:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052467:	89 04 24             	mov    %eax,(%esp)
 805246a:	e8 41 d2 00 00       	call   805f6b0 <__asan_report_error>
 805246f:	8d 83 08 01 00 00    	lea    0x108(%ebx),%eax
 8052475:	8b 30                	mov    (%eax),%esi
 8052477:	85 f6                	test   %esi,%esi
 8052479:	74 75                	je     80524f0 <__interceptor_localtime+0x140>
 805247b:	83 fe 20             	cmp    $0x20,%esi
 805247e:	77 38                	ja     80524b8 <__interceptor_localtime+0x108>
 8052480:	89 f8                	mov    %edi,%eax
 8052482:	c1 e8 03             	shr    $0x3,%eax
 8052485:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805248c:	84 c0                	test   %al,%al
 805248e:	0f 85 bc 00 00 00    	jne    8052550 <__interceptor_localtime+0x1a0>
 8052494:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 8052498:	89 d0                	mov    %edx,%eax
 805249a:	c1 e8 03             	shr    $0x3,%eax
 805249d:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80524a4:	84 c0                	test   %al,%al
 80524a6:	0f 84 cc 00 00 00    	je     8052578 <__interceptor_localtime+0x1c8>
 80524ac:	83 e2 07             	and    $0x7,%edx
 80524af:	39 c2                	cmp    %eax,%edx
 80524b1:	0f 8c c1 00 00 00    	jl     8052578 <__interceptor_localtime+0x1c8>
 80524b7:	90                   	nop
 80524b8:	89 74 24 04          	mov    %esi,0x4(%esp)
 80524bc:	89 3c 24             	mov    %edi,(%esp)
 80524bf:	e8 dc af 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80524c4:	85 c0                	test   %eax,%eax
 80524c6:	74 28                	je     80524f0 <__interceptor_localtime+0x140>
 80524c8:	e8 b3 24 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80524cd:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80524d0:	89 74 24 14          	mov    %esi,0x14(%esp)
 80524d4:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 80524db:	00 
 80524dc:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80524e0:	89 54 24 08          	mov    %edx,0x8(%esp)
 80524e4:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80524e8:	89 04 24             	mov    %eax,(%esp)
 80524eb:	e8 c0 d1 00 00       	call   805f6b0 <__asan_report_error>
 80524f0:	83 c4 3c             	add    $0x3c,%esp
 80524f3:	89 f8                	mov    %edi,%eax
 80524f5:	5b                   	pop    %ebx
 80524f6:	5e                   	pop    %esi
 80524f7:	5f                   	pop    %edi
 80524f8:	5d                   	pop    %ebp
 80524f9:	c3                   	ret    
 80524fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052500:	89 f2                	mov    %esi,%edx
 8052502:	83 e2 07             	and    $0x7,%edx
 8052505:	39 c2                	cmp    %eax,%edx
 8052507:	0f 8d 22 ff ff ff    	jge    805242f <__interceptor_localtime+0x7f>
 805250d:	e9 fb fe ff ff       	jmp    805240d <__interceptor_localtime+0x5d>
 8052512:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052518:	e8 a3 69 00 00       	call   8058ec0 <__asan_init_v1>
 805251d:	8d 76 00             	lea    0x0(%esi),%esi
 8052520:	e9 c1 fe ff ff       	jmp    80523e6 <__interceptor_localtime+0x36>
 8052525:	8d 76 00             	lea    0x0(%esi),%esi
 8052528:	8d 56 02             	lea    0x2(%esi),%edx
 805252b:	89 d0                	mov    %edx,%eax
 805252d:	c1 e8 03             	shr    $0x3,%eax
 8052530:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052537:	84 c0                	test   %al,%al
 8052539:	0f 84 30 ff ff ff    	je     805246f <__interceptor_localtime+0xbf>
 805253f:	83 e2 07             	and    $0x7,%edx
 8052542:	39 c2                	cmp    %eax,%edx
 8052544:	0f 8d e5 fe ff ff    	jge    805242f <__interceptor_localtime+0x7f>
 805254a:	e9 20 ff ff ff       	jmp    805246f <__interceptor_localtime+0xbf>
 805254f:	90                   	nop
 8052550:	89 fa                	mov    %edi,%edx
 8052552:	83 e2 07             	and    $0x7,%edx
 8052555:	39 c2                	cmp    %eax,%edx
 8052557:	0f 8c 37 ff ff ff    	jl     8052494 <__interceptor_localtime+0xe4>
 805255d:	89 74 24 04          	mov    %esi,0x4(%esp)
 8052561:	89 3c 24             	mov    %edi,(%esp)
 8052564:	e8 37 af 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052569:	85 c0                	test   %eax,%eax
 805256b:	0f 85 57 ff ff ff    	jne    80524c8 <__interceptor_localtime+0x118>
 8052571:	e9 7a ff ff ff       	jmp    80524f0 <__interceptor_localtime+0x140>
 8052576:	66 90                	xchg   %ax,%ax
 8052578:	89 f2                	mov    %esi,%edx
 805257a:	d1 ea                	shr    %edx
 805257c:	01 fa                	add    %edi,%edx
 805257e:	89 d0                	mov    %edx,%eax
 8052580:	c1 e8 03             	shr    $0x3,%eax
 8052583:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805258a:	84 c0                	test   %al,%al
 805258c:	0f 84 5e ff ff ff    	je     80524f0 <__interceptor_localtime+0x140>
 8052592:	83 e2 07             	and    $0x7,%edx
 8052595:	39 c2                	cmp    %eax,%edx
 8052597:	0f 8d 1b ff ff ff    	jge    80524b8 <__interceptor_localtime+0x108>
 805259d:	e9 4e ff ff ff       	jmp    80524f0 <__interceptor_localtime+0x140>
 80525a2:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80525a8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80525ac:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80525b2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80525b9:	00 
 80525ba:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80525c1:	00 
 80525c2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80525c9:	00 
 80525ca:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80525d1:	00 
 80525d2:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)
 80525d9:	00 
 80525da:	89 04 24             	mov    %eax,(%esp)
 80525dd:	e8 ce fd 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80525e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80525e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080525f0 <__interceptor_gmtime>:
 80525f0:	55                   	push   %ebp
 80525f1:	89 e5                	mov    %esp,%ebp
 80525f3:	57                   	push   %edi
 80525f4:	56                   	push   %esi
 80525f5:	53                   	push   %ebx
 80525f6:	e8 f5 74 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80525fb:	81 c3 05 da 05 00    	add    $0x5da05,%ebx
 8052601:	83 ec 3c             	sub    $0x3c,%esp
 8052604:	8b 75 08             	mov    0x8(%ebp),%esi
 8052607:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805260d:	80 38 00             	cmpb   $0x0,(%eax)
 8052610:	0f 85 cc 01 00 00    	jne    80527e2 <__interceptor_gmtime+0x1f2>
 8052616:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805261c:	8b 00                	mov    (%eax),%eax
 805261e:	85 c0                	test   %eax,%eax
 8052620:	0f 84 32 01 00 00    	je     8052758 <__interceptor_gmtime+0x168>
 8052626:	89 34 24             	mov    %esi,(%esp)
 8052629:	ff 93 b8 bb 02 00    	call   *0x2bbb8(%ebx)
 805262f:	85 c0                	test   %eax,%eax
 8052631:	89 c7                	mov    %eax,%edi
 8052633:	0f 84 f7 00 00 00    	je     8052730 <__interceptor_gmtime+0x140>
 8052639:	89 f0                	mov    %esi,%eax
 805263b:	c1 e8 03             	shr    $0x3,%eax
 805263e:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052645:	84 c0                	test   %al,%al
 8052647:	0f 85 f3 00 00 00    	jne    8052740 <__interceptor_gmtime+0x150>
 805264d:	8d 56 03             	lea    0x3(%esi),%edx
 8052650:	89 d0                	mov    %edx,%eax
 8052652:	c1 e8 03             	shr    $0x3,%eax
 8052655:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805265c:	84 c0                	test   %al,%al
 805265e:	0f 84 04 01 00 00    	je     8052768 <__interceptor_gmtime+0x178>
 8052664:	83 e2 07             	and    $0x7,%edx
 8052667:	39 c2                	cmp    %eax,%edx
 8052669:	0f 8c f9 00 00 00    	jl     8052768 <__interceptor_gmtime+0x178>
 805266f:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 8052676:	00 
 8052677:	89 34 24             	mov    %esi,(%esp)
 805267a:	e8 21 ae 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805267f:	85 c0                	test   %eax,%eax
 8052681:	74 2c                	je     80526af <__interceptor_gmtime+0xbf>
 8052683:	e8 f8 22 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052688:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 805268b:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8052692:	00 
 8052693:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805269a:	00 
 805269b:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805269f:	89 54 24 08          	mov    %edx,0x8(%esp)
 80526a3:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80526a7:	89 04 24             	mov    %eax,(%esp)
 80526aa:	e8 01 d0 00 00       	call   805f6b0 <__asan_report_error>
 80526af:	8d 83 08 01 00 00    	lea    0x108(%ebx),%eax
 80526b5:	8b 30                	mov    (%eax),%esi
 80526b7:	85 f6                	test   %esi,%esi
 80526b9:	74 75                	je     8052730 <__interceptor_gmtime+0x140>
 80526bb:	83 fe 20             	cmp    $0x20,%esi
 80526be:	77 38                	ja     80526f8 <__interceptor_gmtime+0x108>
 80526c0:	89 f8                	mov    %edi,%eax
 80526c2:	c1 e8 03             	shr    $0x3,%eax
 80526c5:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80526cc:	84 c0                	test   %al,%al
 80526ce:	0f 85 bc 00 00 00    	jne    8052790 <__interceptor_gmtime+0x1a0>
 80526d4:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 80526d8:	89 d0                	mov    %edx,%eax
 80526da:	c1 e8 03             	shr    $0x3,%eax
 80526dd:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80526e4:	84 c0                	test   %al,%al
 80526e6:	0f 84 cc 00 00 00    	je     80527b8 <__interceptor_gmtime+0x1c8>
 80526ec:	83 e2 07             	and    $0x7,%edx
 80526ef:	39 c2                	cmp    %eax,%edx
 80526f1:	0f 8c c1 00 00 00    	jl     80527b8 <__interceptor_gmtime+0x1c8>
 80526f7:	90                   	nop
 80526f8:	89 74 24 04          	mov    %esi,0x4(%esp)
 80526fc:	89 3c 24             	mov    %edi,(%esp)
 80526ff:	e8 9c ad 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052704:	85 c0                	test   %eax,%eax
 8052706:	74 28                	je     8052730 <__interceptor_gmtime+0x140>
 8052708:	e8 73 22 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805270d:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8052710:	89 74 24 14          	mov    %esi,0x14(%esp)
 8052714:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805271b:	00 
 805271c:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8052720:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052724:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052728:	89 04 24             	mov    %eax,(%esp)
 805272b:	e8 80 cf 00 00       	call   805f6b0 <__asan_report_error>
 8052730:	83 c4 3c             	add    $0x3c,%esp
 8052733:	89 f8                	mov    %edi,%eax
 8052735:	5b                   	pop    %ebx
 8052736:	5e                   	pop    %esi
 8052737:	5f                   	pop    %edi
 8052738:	5d                   	pop    %ebp
 8052739:	c3                   	ret    
 805273a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052740:	89 f2                	mov    %esi,%edx
 8052742:	83 e2 07             	and    $0x7,%edx
 8052745:	39 c2                	cmp    %eax,%edx
 8052747:	0f 8d 22 ff ff ff    	jge    805266f <__interceptor_gmtime+0x7f>
 805274d:	e9 fb fe ff ff       	jmp    805264d <__interceptor_gmtime+0x5d>
 8052752:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052758:	e8 63 67 00 00       	call   8058ec0 <__asan_init_v1>
 805275d:	8d 76 00             	lea    0x0(%esi),%esi
 8052760:	e9 c1 fe ff ff       	jmp    8052626 <__interceptor_gmtime+0x36>
 8052765:	8d 76 00             	lea    0x0(%esi),%esi
 8052768:	8d 56 02             	lea    0x2(%esi),%edx
 805276b:	89 d0                	mov    %edx,%eax
 805276d:	c1 e8 03             	shr    $0x3,%eax
 8052770:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052777:	84 c0                	test   %al,%al
 8052779:	0f 84 30 ff ff ff    	je     80526af <__interceptor_gmtime+0xbf>
 805277f:	83 e2 07             	and    $0x7,%edx
 8052782:	39 c2                	cmp    %eax,%edx
 8052784:	0f 8d e5 fe ff ff    	jge    805266f <__interceptor_gmtime+0x7f>
 805278a:	e9 20 ff ff ff       	jmp    80526af <__interceptor_gmtime+0xbf>
 805278f:	90                   	nop
 8052790:	89 fa                	mov    %edi,%edx
 8052792:	83 e2 07             	and    $0x7,%edx
 8052795:	39 c2                	cmp    %eax,%edx
 8052797:	0f 8c 37 ff ff ff    	jl     80526d4 <__interceptor_gmtime+0xe4>
 805279d:	89 74 24 04          	mov    %esi,0x4(%esp)
 80527a1:	89 3c 24             	mov    %edi,(%esp)
 80527a4:	e8 f7 ac 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80527a9:	85 c0                	test   %eax,%eax
 80527ab:	0f 85 57 ff ff ff    	jne    8052708 <__interceptor_gmtime+0x118>
 80527b1:	e9 7a ff ff ff       	jmp    8052730 <__interceptor_gmtime+0x140>
 80527b6:	66 90                	xchg   %ax,%ax
 80527b8:	89 f2                	mov    %esi,%edx
 80527ba:	d1 ea                	shr    %edx
 80527bc:	01 fa                	add    %edi,%edx
 80527be:	89 d0                	mov    %edx,%eax
 80527c0:	c1 e8 03             	shr    $0x3,%eax
 80527c3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80527ca:	84 c0                	test   %al,%al
 80527cc:	0f 84 5e ff ff ff    	je     8052730 <__interceptor_gmtime+0x140>
 80527d2:	83 e2 07             	and    $0x7,%edx
 80527d5:	39 c2                	cmp    %eax,%edx
 80527d7:	0f 8d 1b ff ff ff    	jge    80526f8 <__interceptor_gmtime+0x108>
 80527dd:	e9 4e ff ff ff       	jmp    8052730 <__interceptor_gmtime+0x140>
 80527e2:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80527e8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80527ec:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80527f2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80527f9:	00 
 80527fa:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052801:	00 
 8052802:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8052809:	00 
 805280a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052811:	00 
 8052812:	c7 44 24 04 aa 00 00 	movl   $0xaa,0x4(%esp)
 8052819:	00 
 805281a:	89 04 24             	mov    %eax,(%esp)
 805281d:	e8 8e fb 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052822:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8052829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08052830 <__interceptor_localtime_r>:
 8052830:	55                   	push   %ebp
 8052831:	89 e5                	mov    %esp,%ebp
 8052833:	57                   	push   %edi
 8052834:	56                   	push   %esi
 8052835:	53                   	push   %ebx
 8052836:	e8 b5 72 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805283b:	81 c3 c5 d7 05 00    	add    $0x5d7c5,%ebx
 8052841:	83 ec 3c             	sub    $0x3c,%esp
 8052844:	8b 75 08             	mov    0x8(%ebp),%esi
 8052847:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805284d:	80 38 00             	cmpb   $0x0,(%eax)
 8052850:	0f 85 d4 01 00 00    	jne    8052a2a <__interceptor_localtime_r+0x1fa>
 8052856:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805285c:	8b 00                	mov    (%eax),%eax
 805285e:	85 c0                	test   %eax,%eax
 8052860:	0f 84 3a 01 00 00    	je     80529a0 <__interceptor_localtime_r+0x170>
 8052866:	8b 45 0c             	mov    0xc(%ebp),%eax
 8052869:	89 34 24             	mov    %esi,(%esp)
 805286c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8052870:	ff 93 bc bb 02 00    	call   *0x2bbbc(%ebx)
 8052876:	85 c0                	test   %eax,%eax
 8052878:	89 c7                	mov    %eax,%edi
 805287a:	0f 84 f8 00 00 00    	je     8052978 <__interceptor_localtime_r+0x148>
 8052880:	89 f0                	mov    %esi,%eax
 8052882:	c1 e8 03             	shr    $0x3,%eax
 8052885:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805288c:	84 c0                	test   %al,%al
 805288e:	0f 85 f4 00 00 00    	jne    8052988 <__interceptor_localtime_r+0x158>
 8052894:	8d 56 03             	lea    0x3(%esi),%edx
 8052897:	89 d0                	mov    %edx,%eax
 8052899:	c1 e8 03             	shr    $0x3,%eax
 805289c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80528a3:	84 c0                	test   %al,%al
 80528a5:	0f 84 05 01 00 00    	je     80529b0 <__interceptor_localtime_r+0x180>
 80528ab:	83 e2 07             	and    $0x7,%edx
 80528ae:	39 c2                	cmp    %eax,%edx
 80528b0:	0f 8c fa 00 00 00    	jl     80529b0 <__interceptor_localtime_r+0x180>
 80528b6:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 80528bd:	00 
 80528be:	89 34 24             	mov    %esi,(%esp)
 80528c1:	e8 da ab 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80528c6:	85 c0                	test   %eax,%eax
 80528c8:	74 2c                	je     80528f6 <__interceptor_localtime_r+0xc6>
 80528ca:	e8 b1 20 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80528cf:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80528d2:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 80528d9:	00 
 80528da:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80528e1:	00 
 80528e2:	89 74 24 0c          	mov    %esi,0xc(%esp)
 80528e6:	89 54 24 08          	mov    %edx,0x8(%esp)
 80528ea:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80528ee:	89 04 24             	mov    %eax,(%esp)
 80528f1:	e8 ba cd 00 00       	call   805f6b0 <__asan_report_error>
 80528f6:	8d 83 08 01 00 00    	lea    0x108(%ebx),%eax
 80528fc:	8b 30                	mov    (%eax),%esi
 80528fe:	85 f6                	test   %esi,%esi
 8052900:	74 76                	je     8052978 <__interceptor_localtime_r+0x148>
 8052902:	83 fe 20             	cmp    $0x20,%esi
 8052905:	77 39                	ja     8052940 <__interceptor_localtime_r+0x110>
 8052907:	89 f8                	mov    %edi,%eax
 8052909:	c1 e8 03             	shr    $0x3,%eax
 805290c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052913:	84 c0                	test   %al,%al
 8052915:	0f 85 bd 00 00 00    	jne    80529d8 <__interceptor_localtime_r+0x1a8>
 805291b:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 805291f:	89 d0                	mov    %edx,%eax
 8052921:	c1 e8 03             	shr    $0x3,%eax
 8052924:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805292b:	84 c0                	test   %al,%al
 805292d:	0f 84 cd 00 00 00    	je     8052a00 <__interceptor_localtime_r+0x1d0>
 8052933:	83 e2 07             	and    $0x7,%edx
 8052936:	39 c2                	cmp    %eax,%edx
 8052938:	0f 8c c2 00 00 00    	jl     8052a00 <__interceptor_localtime_r+0x1d0>
 805293e:	66 90                	xchg   %ax,%ax
 8052940:	89 74 24 04          	mov    %esi,0x4(%esp)
 8052944:	89 3c 24             	mov    %edi,(%esp)
 8052947:	e8 54 ab 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805294c:	85 c0                	test   %eax,%eax
 805294e:	74 28                	je     8052978 <__interceptor_localtime_r+0x148>
 8052950:	e8 2b 20 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052955:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8052958:	89 74 24 14          	mov    %esi,0x14(%esp)
 805295c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8052963:	00 
 8052964:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8052968:	89 54 24 08          	mov    %edx,0x8(%esp)
 805296c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052970:	89 04 24             	mov    %eax,(%esp)
 8052973:	e8 38 cd 00 00       	call   805f6b0 <__asan_report_error>
 8052978:	83 c4 3c             	add    $0x3c,%esp
 805297b:	89 f8                	mov    %edi,%eax
 805297d:	5b                   	pop    %ebx
 805297e:	5e                   	pop    %esi
 805297f:	5f                   	pop    %edi
 8052980:	5d                   	pop    %ebp
 8052981:	c3                   	ret    
 8052982:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052988:	89 f2                	mov    %esi,%edx
 805298a:	83 e2 07             	and    $0x7,%edx
 805298d:	39 c2                	cmp    %eax,%edx
 805298f:	0f 8d 21 ff ff ff    	jge    80528b6 <__interceptor_localtime_r+0x86>
 8052995:	e9 fa fe ff ff       	jmp    8052894 <__interceptor_localtime_r+0x64>
 805299a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80529a0:	e8 1b 65 00 00       	call   8058ec0 <__asan_init_v1>
 80529a5:	e9 bc fe ff ff       	jmp    8052866 <__interceptor_localtime_r+0x36>
 80529aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80529b0:	8d 56 02             	lea    0x2(%esi),%edx
 80529b3:	89 d0                	mov    %edx,%eax
 80529b5:	c1 e8 03             	shr    $0x3,%eax
 80529b8:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80529bf:	84 c0                	test   %al,%al
 80529c1:	0f 84 2f ff ff ff    	je     80528f6 <__interceptor_localtime_r+0xc6>
 80529c7:	83 e2 07             	and    $0x7,%edx
 80529ca:	39 c2                	cmp    %eax,%edx
 80529cc:	0f 8d e4 fe ff ff    	jge    80528b6 <__interceptor_localtime_r+0x86>
 80529d2:	e9 1f ff ff ff       	jmp    80528f6 <__interceptor_localtime_r+0xc6>
 80529d7:	90                   	nop
 80529d8:	89 fa                	mov    %edi,%edx
 80529da:	83 e2 07             	and    $0x7,%edx
 80529dd:	39 c2                	cmp    %eax,%edx
 80529df:	0f 8c 36 ff ff ff    	jl     805291b <__interceptor_localtime_r+0xeb>
 80529e5:	89 74 24 04          	mov    %esi,0x4(%esp)
 80529e9:	89 3c 24             	mov    %edi,(%esp)
 80529ec:	e8 af aa 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80529f1:	85 c0                	test   %eax,%eax
 80529f3:	0f 85 57 ff ff ff    	jne    8052950 <__interceptor_localtime_r+0x120>
 80529f9:	e9 7a ff ff ff       	jmp    8052978 <__interceptor_localtime_r+0x148>
 80529fe:	66 90                	xchg   %ax,%ax
 8052a00:	89 f2                	mov    %esi,%edx
 8052a02:	d1 ea                	shr    %edx
 8052a04:	01 fa                	add    %edi,%edx
 8052a06:	89 d0                	mov    %edx,%eax
 8052a08:	c1 e8 03             	shr    $0x3,%eax
 8052a0b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052a12:	84 c0                	test   %al,%al
 8052a14:	0f 84 5e ff ff ff    	je     8052978 <__interceptor_localtime_r+0x148>
 8052a1a:	83 e2 07             	and    $0x7,%edx
 8052a1d:	39 c2                	cmp    %eax,%edx
 8052a1f:	0f 8d 1b ff ff ff    	jge    8052940 <__interceptor_localtime_r+0x110>
 8052a25:	e9 4e ff ff ff       	jmp    8052978 <__interceptor_localtime_r+0x148>
 8052a2a:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8052a30:	89 44 24 08          	mov    %eax,0x8(%esp)
 8052a34:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8052a3a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8052a41:	00 
 8052a42:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052a49:	00 
 8052a4a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8052a51:	00 
 8052a52:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052a59:	00 
 8052a5a:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)
 8052a61:	00 
 8052a62:	89 04 24             	mov    %eax,(%esp)
 8052a65:	e8 46 f9 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052a6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08052a70 <__interceptor_gmtime_r>:
 8052a70:	55                   	push   %ebp
 8052a71:	89 e5                	mov    %esp,%ebp
 8052a73:	57                   	push   %edi
 8052a74:	56                   	push   %esi
 8052a75:	53                   	push   %ebx
 8052a76:	e8 75 70 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8052a7b:	81 c3 85 d5 05 00    	add    $0x5d585,%ebx
 8052a81:	83 ec 3c             	sub    $0x3c,%esp
 8052a84:	8b 75 08             	mov    0x8(%ebp),%esi
 8052a87:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8052a8d:	80 38 00             	cmpb   $0x0,(%eax)
 8052a90:	0f 85 d4 01 00 00    	jne    8052c6a <__interceptor_gmtime_r+0x1fa>
 8052a96:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8052a9c:	8b 00                	mov    (%eax),%eax
 8052a9e:	85 c0                	test   %eax,%eax
 8052aa0:	0f 84 3a 01 00 00    	je     8052be0 <__interceptor_gmtime_r+0x170>
 8052aa6:	8b 45 0c             	mov    0xc(%ebp),%eax
 8052aa9:	89 34 24             	mov    %esi,(%esp)
 8052aac:	89 44 24 04          	mov    %eax,0x4(%esp)
 8052ab0:	ff 93 b4 bb 02 00    	call   *0x2bbb4(%ebx)
 8052ab6:	85 c0                	test   %eax,%eax
 8052ab8:	89 c7                	mov    %eax,%edi
 8052aba:	0f 84 f8 00 00 00    	je     8052bb8 <__interceptor_gmtime_r+0x148>
 8052ac0:	89 f0                	mov    %esi,%eax
 8052ac2:	c1 e8 03             	shr    $0x3,%eax
 8052ac5:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052acc:	84 c0                	test   %al,%al
 8052ace:	0f 85 f4 00 00 00    	jne    8052bc8 <__interceptor_gmtime_r+0x158>
 8052ad4:	8d 56 03             	lea    0x3(%esi),%edx
 8052ad7:	89 d0                	mov    %edx,%eax
 8052ad9:	c1 e8 03             	shr    $0x3,%eax
 8052adc:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052ae3:	84 c0                	test   %al,%al
 8052ae5:	0f 84 05 01 00 00    	je     8052bf0 <__interceptor_gmtime_r+0x180>
 8052aeb:	83 e2 07             	and    $0x7,%edx
 8052aee:	39 c2                	cmp    %eax,%edx
 8052af0:	0f 8c fa 00 00 00    	jl     8052bf0 <__interceptor_gmtime_r+0x180>
 8052af6:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 8052afd:	00 
 8052afe:	89 34 24             	mov    %esi,(%esp)
 8052b01:	e8 9a a9 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052b06:	85 c0                	test   %eax,%eax
 8052b08:	74 2c                	je     8052b36 <__interceptor_gmtime_r+0xc6>
 8052b0a:	e8 71 1e 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052b0f:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8052b12:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8052b19:	00 
 8052b1a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052b21:	00 
 8052b22:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8052b26:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052b2a:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052b2e:	89 04 24             	mov    %eax,(%esp)
 8052b31:	e8 7a cb 00 00       	call   805f6b0 <__asan_report_error>
 8052b36:	8d 83 08 01 00 00    	lea    0x108(%ebx),%eax
 8052b3c:	8b 30                	mov    (%eax),%esi
 8052b3e:	85 f6                	test   %esi,%esi
 8052b40:	74 76                	je     8052bb8 <__interceptor_gmtime_r+0x148>
 8052b42:	83 fe 20             	cmp    $0x20,%esi
 8052b45:	77 39                	ja     8052b80 <__interceptor_gmtime_r+0x110>
 8052b47:	89 f8                	mov    %edi,%eax
 8052b49:	c1 e8 03             	shr    $0x3,%eax
 8052b4c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052b53:	84 c0                	test   %al,%al
 8052b55:	0f 85 bd 00 00 00    	jne    8052c18 <__interceptor_gmtime_r+0x1a8>
 8052b5b:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 8052b5f:	89 d0                	mov    %edx,%eax
 8052b61:	c1 e8 03             	shr    $0x3,%eax
 8052b64:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052b6b:	84 c0                	test   %al,%al
 8052b6d:	0f 84 cd 00 00 00    	je     8052c40 <__interceptor_gmtime_r+0x1d0>
 8052b73:	83 e2 07             	and    $0x7,%edx
 8052b76:	39 c2                	cmp    %eax,%edx
 8052b78:	0f 8c c2 00 00 00    	jl     8052c40 <__interceptor_gmtime_r+0x1d0>
 8052b7e:	66 90                	xchg   %ax,%ax
 8052b80:	89 74 24 04          	mov    %esi,0x4(%esp)
 8052b84:	89 3c 24             	mov    %edi,(%esp)
 8052b87:	e8 14 a9 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052b8c:	85 c0                	test   %eax,%eax
 8052b8e:	74 28                	je     8052bb8 <__interceptor_gmtime_r+0x148>
 8052b90:	e8 eb 1d 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052b95:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8052b98:	89 74 24 14          	mov    %esi,0x14(%esp)
 8052b9c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8052ba3:	00 
 8052ba4:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8052ba8:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052bac:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052bb0:	89 04 24             	mov    %eax,(%esp)
 8052bb3:	e8 f8 ca 00 00       	call   805f6b0 <__asan_report_error>
 8052bb8:	83 c4 3c             	add    $0x3c,%esp
 8052bbb:	89 f8                	mov    %edi,%eax
 8052bbd:	5b                   	pop    %ebx
 8052bbe:	5e                   	pop    %esi
 8052bbf:	5f                   	pop    %edi
 8052bc0:	5d                   	pop    %ebp
 8052bc1:	c3                   	ret    
 8052bc2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052bc8:	89 f2                	mov    %esi,%edx
 8052bca:	83 e2 07             	and    $0x7,%edx
 8052bcd:	39 c2                	cmp    %eax,%edx
 8052bcf:	0f 8d 21 ff ff ff    	jge    8052af6 <__interceptor_gmtime_r+0x86>
 8052bd5:	e9 fa fe ff ff       	jmp    8052ad4 <__interceptor_gmtime_r+0x64>
 8052bda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052be0:	e8 db 62 00 00       	call   8058ec0 <__asan_init_v1>
 8052be5:	e9 bc fe ff ff       	jmp    8052aa6 <__interceptor_gmtime_r+0x36>
 8052bea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052bf0:	8d 56 02             	lea    0x2(%esi),%edx
 8052bf3:	89 d0                	mov    %edx,%eax
 8052bf5:	c1 e8 03             	shr    $0x3,%eax
 8052bf8:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052bff:	84 c0                	test   %al,%al
 8052c01:	0f 84 2f ff ff ff    	je     8052b36 <__interceptor_gmtime_r+0xc6>
 8052c07:	83 e2 07             	and    $0x7,%edx
 8052c0a:	39 c2                	cmp    %eax,%edx
 8052c0c:	0f 8d e4 fe ff ff    	jge    8052af6 <__interceptor_gmtime_r+0x86>
 8052c12:	e9 1f ff ff ff       	jmp    8052b36 <__interceptor_gmtime_r+0xc6>
 8052c17:	90                   	nop
 8052c18:	89 fa                	mov    %edi,%edx
 8052c1a:	83 e2 07             	and    $0x7,%edx
 8052c1d:	39 c2                	cmp    %eax,%edx
 8052c1f:	0f 8c 36 ff ff ff    	jl     8052b5b <__interceptor_gmtime_r+0xeb>
 8052c25:	89 74 24 04          	mov    %esi,0x4(%esp)
 8052c29:	89 3c 24             	mov    %edi,(%esp)
 8052c2c:	e8 6f a8 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052c31:	85 c0                	test   %eax,%eax
 8052c33:	0f 85 57 ff ff ff    	jne    8052b90 <__interceptor_gmtime_r+0x120>
 8052c39:	e9 7a ff ff ff       	jmp    8052bb8 <__interceptor_gmtime_r+0x148>
 8052c3e:	66 90                	xchg   %ax,%ax
 8052c40:	89 f2                	mov    %esi,%edx
 8052c42:	d1 ea                	shr    %edx
 8052c44:	01 fa                	add    %edi,%edx
 8052c46:	89 d0                	mov    %edx,%eax
 8052c48:	c1 e8 03             	shr    $0x3,%eax
 8052c4b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052c52:	84 c0                	test   %al,%al
 8052c54:	0f 84 5e ff ff ff    	je     8052bb8 <__interceptor_gmtime_r+0x148>
 8052c5a:	83 e2 07             	and    $0x7,%edx
 8052c5d:	39 c2                	cmp    %eax,%edx
 8052c5f:	0f 8d 1b ff ff ff    	jge    8052b80 <__interceptor_gmtime_r+0x110>
 8052c65:	e9 4e ff ff ff       	jmp    8052bb8 <__interceptor_gmtime_r+0x148>
 8052c6a:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8052c70:	89 44 24 08          	mov    %eax,0x8(%esp)
 8052c74:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8052c7a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8052c81:	00 
 8052c82:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052c89:	00 
 8052c8a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8052c91:	00 
 8052c92:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052c99:	00 
 8052c9a:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)
 8052ca1:	00 
 8052ca2:	89 04 24             	mov    %eax,(%esp)
 8052ca5:	e8 06 f7 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052caa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08052cb0 <__interceptor_strncpy>:
 8052cb0:	55                   	push   %ebp
 8052cb1:	89 e5                	mov    %esp,%ebp
 8052cb3:	57                   	push   %edi
 8052cb4:	56                   	push   %esi
 8052cb5:	53                   	push   %ebx
 8052cb6:	e8 35 6e ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8052cbb:	81 c3 45 d3 05 00    	add    $0x5d345,%ebx
 8052cc1:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8052cc7:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8052cca:	8b 75 10             	mov    0x10(%ebp),%esi
 8052ccd:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8052cd3:	80 38 00             	cmpb   $0x0,(%eax)
 8052cd6:	0f 85 9c 02 00 00    	jne    8052f78 <__interceptor_strncpy+0x2c8>
 8052cdc:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8052ce2:	8b 00                	mov    (%eax),%eax
 8052ce4:	85 c0                	test   %eax,%eax
 8052ce6:	0f 84 54 01 00 00    	je     8052e40 <__interceptor_strncpy+0x190>
 8052cec:	e8 2f 58 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8052cf1:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8052cf5:	0f 84 25 01 00 00    	je     8052e20 <__interceptor_strncpy+0x170>
 8052cfb:	8b 83 00 bb 02 00    	mov    0x2bb00(%ebx),%eax
 8052d01:	89 74 24 04          	mov    %esi,0x4(%esp)
 8052d05:	89 3c 24             	mov    %edi,(%esp)
 8052d08:	85 c0                	test   %eax,%eax
 8052d0a:	0f 84 a8 01 00 00    	je     8052eb8 <__interceptor_strncpy+0x208>
 8052d10:	ff d0                	call   *%eax
 8052d12:	8d 50 01             	lea    0x1(%eax),%edx
 8052d15:	8b 45 08             	mov    0x8(%ebp),%eax
 8052d18:	39 f2                	cmp    %esi,%edx
 8052d1a:	0f 47 d6             	cmova  %esi,%edx
 8052d1d:	01 d0                	add    %edx,%eax
 8052d1f:	39 c7                	cmp    %eax,%edi
 8052d21:	73 0c                	jae    8052d2f <__interceptor_strncpy+0x7f>
 8052d23:	8d 04 17             	lea    (%edi,%edx,1),%eax
 8052d26:	39 45 08             	cmp    %eax,0x8(%ebp)
 8052d29:	0f 82 21 01 00 00    	jb     8052e50 <__interceptor_strncpy+0x1a0>
 8052d2f:	85 d2                	test   %edx,%edx
 8052d31:	74 79                	je     8052dac <__interceptor_strncpy+0xfc>
 8052d33:	83 fa 20             	cmp    $0x20,%edx
 8052d36:	77 21                	ja     8052d59 <__interceptor_strncpy+0xa9>
 8052d38:	89 f8                	mov    %edi,%eax
 8052d3a:	c1 e8 03             	shr    $0x3,%eax
 8052d3d:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052d44:	84 c0                	test   %al,%al
 8052d46:	0f 84 7c 01 00 00    	je     8052ec8 <__interceptor_strncpy+0x218>
 8052d4c:	89 f9                	mov    %edi,%ecx
 8052d4e:	83 e1 07             	and    $0x7,%ecx
 8052d51:	39 c1                	cmp    %eax,%ecx
 8052d53:	0f 8c 6f 01 00 00    	jl     8052ec8 <__interceptor_strncpy+0x218>
 8052d59:	89 54 24 04          	mov    %edx,0x4(%esp)
 8052d5d:	89 3c 24             	mov    %edi,(%esp)
 8052d60:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8052d66:	e8 35 a7 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052d6b:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8052d71:	85 c0                	test   %eax,%eax
 8052d73:	74 37                	je     8052dac <__interceptor_strncpy+0xfc>
 8052d75:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8052d7b:	e8 00 1c 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052d80:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8052d86:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052d8d:	00 
 8052d8e:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8052d92:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052d96:	89 54 24 14          	mov    %edx,0x14(%esp)
 8052d9a:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 8052da0:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052da4:	89 04 24             	mov    %eax,(%esp)
 8052da7:	e8 04 c9 00 00       	call   805f6b0 <__asan_report_error>
 8052dac:	85 f6                	test   %esi,%esi
 8052dae:	74 70                	je     8052e20 <__interceptor_strncpy+0x170>
 8052db0:	83 fe 20             	cmp    $0x20,%esi
 8052db3:	77 23                	ja     8052dd8 <__interceptor_strncpy+0x128>
 8052db5:	8b 45 08             	mov    0x8(%ebp),%eax
 8052db8:	c1 e8 03             	shr    $0x3,%eax
 8052dbb:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052dc2:	84 c0                	test   %al,%al
 8052dc4:	0f 84 46 01 00 00    	je     8052f10 <__interceptor_strncpy+0x260>
 8052dca:	8b 55 08             	mov    0x8(%ebp),%edx
 8052dcd:	83 e2 07             	and    $0x7,%edx
 8052dd0:	39 c2                	cmp    %eax,%edx
 8052dd2:	0f 8c 38 01 00 00    	jl     8052f10 <__interceptor_strncpy+0x260>
 8052dd8:	8b 45 08             	mov    0x8(%ebp),%eax
 8052ddb:	89 74 24 04          	mov    %esi,0x4(%esp)
 8052ddf:	89 04 24             	mov    %eax,(%esp)
 8052de2:	e8 b9 a6 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8052de7:	85 c0                	test   %eax,%eax
 8052de9:	74 35                	je     8052e20 <__interceptor_strncpy+0x170>
 8052deb:	e8 90 1b 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052df0:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8052df3:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 8052df9:	89 74 24 14          	mov    %esi,0x14(%esp)
 8052dfd:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8052e04:	00 
 8052e05:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052e09:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8052e0d:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8052e11:	89 04 24             	mov    %eax,(%esp)
 8052e14:	e8 97 c8 00 00       	call   805f6b0 <__asan_report_error>
 8052e19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8052e20:	8b 45 08             	mov    0x8(%ebp),%eax
 8052e23:	89 74 24 08          	mov    %esi,0x8(%esp)
 8052e27:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8052e2b:	89 04 24             	mov    %eax,(%esp)
 8052e2e:	ff 93 04 bb 02 00    	call   *0x2bb04(%ebx)
 8052e34:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 8052e3a:	5b                   	pop    %ebx
 8052e3b:	5e                   	pop    %esi
 8052e3c:	5f                   	pop    %edi
 8052e3d:	5d                   	pop    %ebp
 8052e3e:	c3                   	ret    
 8052e3f:	90                   	nop
 8052e40:	e8 7b 60 00 00       	call   8058ec0 <__asan_init_v1>
 8052e45:	e9 a2 fe ff ff       	jmp    8052cec <__interceptor_strncpy+0x3c>
 8052e4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052e50:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8052e56:	e8 c5 56 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8052e5b:	0f b6 70 4c          	movzbl 0x4c(%eax),%esi
 8052e5f:	e8 1c 1b 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8052e64:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8052e68:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 8052e6f:	00 
 8052e70:	89 74 24 10          	mov    %esi,0x10(%esp)
 8052e74:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 8052e7a:	89 34 24             	mov    %esi,(%esp)
 8052e7d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8052e81:	e8 ea 95 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 8052e86:	8b 45 08             	mov    0x8(%ebp),%eax
 8052e89:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8052e8f:	89 74 24 14          	mov    %esi,0x14(%esp)
 8052e93:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8052e97:	89 44 24 04          	mov    %eax,0x4(%esp)
 8052e9b:	8d 83 af 3e fd ff    	lea    -0x2c151(%ebx),%eax
 8052ea1:	89 54 24 10          	mov    %edx,0x10(%esp)
 8052ea5:	89 54 24 08          	mov    %edx,0x8(%esp)
 8052ea9:	89 04 24             	mov    %eax,(%esp)
 8052eac:	e8 ff c4 00 00       	call   805f3b0 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE>
 8052eb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8052eb8:	e8 73 ed 00 00       	call   8061c30 <_ZN11__sanitizer16internal_strnlenEPKcm>
 8052ebd:	e9 50 fe ff ff       	jmp    8052d12 <__interceptor_strncpy+0x62>
 8052ec2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052ec8:	8d 4c 17 ff          	lea    -0x1(%edi,%edx,1),%ecx
 8052ecc:	89 c8                	mov    %ecx,%eax
 8052ece:	c1 e8 03             	shr    $0x3,%eax
 8052ed1:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052ed8:	84 c0                	test   %al,%al
 8052eda:	0f 85 88 00 00 00    	jne    8052f68 <__interceptor_strncpy+0x2b8>
 8052ee0:	89 d1                	mov    %edx,%ecx
 8052ee2:	d1 e9                	shr    %ecx
 8052ee4:	01 f9                	add    %edi,%ecx
 8052ee6:	89 c8                	mov    %ecx,%eax
 8052ee8:	c1 e8 03             	shr    $0x3,%eax
 8052eeb:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052ef2:	84 c0                	test   %al,%al
 8052ef4:	0f 84 b2 fe ff ff    	je     8052dac <__interceptor_strncpy+0xfc>
 8052efa:	83 e1 07             	and    $0x7,%ecx
 8052efd:	39 c1                	cmp    %eax,%ecx
 8052eff:	0f 8d 54 fe ff ff    	jge    8052d59 <__interceptor_strncpy+0xa9>
 8052f05:	e9 a2 fe ff ff       	jmp    8052dac <__interceptor_strncpy+0xfc>
 8052f0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052f10:	8b 45 08             	mov    0x8(%ebp),%eax
 8052f13:	8d 54 30 ff          	lea    -0x1(%eax,%esi,1),%edx
 8052f17:	89 d0                	mov    %edx,%eax
 8052f19:	c1 e8 03             	shr    $0x3,%eax
 8052f1c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052f23:	84 c0                	test   %al,%al
 8052f25:	75 31                	jne    8052f58 <__interceptor_strncpy+0x2a8>
 8052f27:	89 f2                	mov    %esi,%edx
 8052f29:	d1 ea                	shr    %edx
 8052f2b:	03 55 08             	add    0x8(%ebp),%edx
 8052f2e:	89 d0                	mov    %edx,%eax
 8052f30:	c1 e8 03             	shr    $0x3,%eax
 8052f33:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8052f3a:	84 c0                	test   %al,%al
 8052f3c:	0f 84 de fe ff ff    	je     8052e20 <__interceptor_strncpy+0x170>
 8052f42:	83 e2 07             	and    $0x7,%edx
 8052f45:	39 c2                	cmp    %eax,%edx
 8052f47:	0f 8d 8b fe ff ff    	jge    8052dd8 <__interceptor_strncpy+0x128>
 8052f4d:	e9 ce fe ff ff       	jmp    8052e20 <__interceptor_strncpy+0x170>
 8052f52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8052f58:	83 e2 07             	and    $0x7,%edx
 8052f5b:	39 c2                	cmp    %eax,%edx
 8052f5d:	0f 8d 75 fe ff ff    	jge    8052dd8 <__interceptor_strncpy+0x128>
 8052f63:	eb c2                	jmp    8052f27 <__interceptor_strncpy+0x277>
 8052f65:	8d 76 00             	lea    0x0(%esi),%esi
 8052f68:	83 e1 07             	and    $0x7,%ecx
 8052f6b:	39 c1                	cmp    %eax,%ecx
 8052f6d:	0f 8d e6 fd ff ff    	jge    8052d59 <__interceptor_strncpy+0xa9>
 8052f73:	e9 68 ff ff ff       	jmp    8052ee0 <__interceptor_strncpy+0x230>
 8052f78:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8052f7e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8052f82:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8052f88:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8052f8f:	00 
 8052f90:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8052f97:	00 
 8052f98:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8052f9f:	00 
 8052fa0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8052fa7:	00 
 8052fa8:	c7 44 24 04 fd 01 00 	movl   $0x1fd,0x4(%esp)
 8052faf:	00 
 8052fb0:	89 04 24             	mov    %eax,(%esp)
 8052fb3:	e8 f8 f3 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8052fb8:	90                   	nop
 8052fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08052fc0 <__interceptor_asctime>:
 8052fc0:	55                   	push   %ebp
 8052fc1:	89 e5                	mov    %esp,%ebp
 8052fc3:	57                   	push   %edi
 8052fc4:	56                   	push   %esi
 8052fc5:	53                   	push   %ebx
 8052fc6:	e8 25 6b ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8052fcb:	81 c3 35 d0 05 00    	add    $0x5d035,%ebx
 8052fd1:	83 ec 3c             	sub    $0x3c,%esp
 8052fd4:	8b 7d 08             	mov    0x8(%ebp),%edi
 8052fd7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8052fdd:	80 38 00             	cmpb   $0x0,(%eax)
 8052fe0:	0f 85 f4 01 00 00    	jne    80531da <__interceptor_asctime+0x21a>
 8052fe6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8052fec:	8b 00                	mov    (%eax),%eax
 8052fee:	85 c0                	test   %eax,%eax
 8052ff0:	0f 84 42 01 00 00    	je     8053138 <__interceptor_asctime+0x178>
 8052ff6:	89 3c 24             	mov    %edi,(%esp)
 8052ff9:	ff 93 a8 bb 02 00    	call   *0x2bba8(%ebx)
 8052fff:	85 c0                	test   %eax,%eax
 8053001:	89 c6                	mov    %eax,%esi
 8053003:	0f 84 1f 01 00 00    	je     8053128 <__interceptor_asctime+0x168>
 8053009:	8d 83 08 01 00 00    	lea    0x108(%ebx),%eax
 805300f:	8b 10                	mov    (%eax),%edx
 8053011:	85 d2                	test   %edx,%edx
 8053013:	0f 84 87 00 00 00    	je     80530a0 <__interceptor_asctime+0xe0>
 8053019:	83 fa 20             	cmp    $0x20,%edx
 805301c:	77 3a                	ja     8053058 <__interceptor_asctime+0x98>
 805301e:	89 f8                	mov    %edi,%eax
 8053020:	c1 e8 03             	shr    $0x3,%eax
 8053023:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805302a:	84 c0                	test   %al,%al
 805302c:	0f 85 16 01 00 00    	jne    8053148 <__interceptor_asctime+0x188>
 8053032:	8d 4c 17 ff          	lea    -0x1(%edi,%edx,1),%ecx
 8053036:	89 c8                	mov    %ecx,%eax
 8053038:	c1 e8 03             	shr    $0x3,%eax
 805303b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053042:	84 c0                	test   %al,%al
 8053044:	0f 84 36 01 00 00    	je     8053180 <__interceptor_asctime+0x1c0>
 805304a:	83 e1 07             	and    $0x7,%ecx
 805304d:	39 c1                	cmp    %eax,%ecx
 805304f:	0f 8c 2b 01 00 00    	jl     8053180 <__interceptor_asctime+0x1c0>
 8053055:	8d 76 00             	lea    0x0(%esi),%esi
 8053058:	89 54 24 04          	mov    %edx,0x4(%esp)
 805305c:	89 3c 24             	mov    %edi,(%esp)
 805305f:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8053062:	e8 39 a4 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053067:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805306a:	85 c0                	test   %eax,%eax
 805306c:	74 32                	je     80530a0 <__interceptor_asctime+0xe0>
 805306e:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8053071:	e8 0a 19 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053076:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8053079:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053080:	00 
 8053081:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8053085:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053089:	89 54 24 14          	mov    %edx,0x14(%esp)
 805308d:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8053090:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053094:	89 04 24             	mov    %eax,(%esp)
 8053097:	e8 14 c6 00 00       	call   805f6b0 <__asan_report_error>
 805309c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80530a0:	89 34 24             	mov    %esi,(%esp)
 80530a3:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 80530a9:	83 c0 01             	add    $0x1,%eax
 80530ac:	89 c7                	mov    %eax,%edi
 80530ae:	74 78                	je     8053128 <__interceptor_asctime+0x168>
 80530b0:	83 f8 20             	cmp    $0x20,%eax
 80530b3:	77 3b                	ja     80530f0 <__interceptor_asctime+0x130>
 80530b5:	89 f0                	mov    %esi,%eax
 80530b7:	c1 e8 03             	shr    $0x3,%eax
 80530ba:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80530c1:	84 c0                	test   %al,%al
 80530c3:	0f 85 97 00 00 00    	jne    8053160 <__interceptor_asctime+0x1a0>
 80530c9:	8d 54 3e ff          	lea    -0x1(%esi,%edi,1),%edx
 80530cd:	89 d0                	mov    %edx,%eax
 80530cf:	c1 e8 03             	shr    $0x3,%eax
 80530d2:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80530d9:	84 c0                	test   %al,%al
 80530db:	0f 84 cf 00 00 00    	je     80531b0 <__interceptor_asctime+0x1f0>
 80530e1:	83 e2 07             	and    $0x7,%edx
 80530e4:	39 c2                	cmp    %eax,%edx
 80530e6:	0f 8c c4 00 00 00    	jl     80531b0 <__interceptor_asctime+0x1f0>
 80530ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80530f0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80530f4:	89 34 24             	mov    %esi,(%esp)
 80530f7:	e8 a4 a3 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80530fc:	85 c0                	test   %eax,%eax
 80530fe:	74 28                	je     8053128 <__interceptor_asctime+0x168>
 8053100:	e8 7b 18 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053105:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8053108:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805310c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8053113:	00 
 8053114:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8053118:	89 54 24 08          	mov    %edx,0x8(%esp)
 805311c:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053120:	89 04 24             	mov    %eax,(%esp)
 8053123:	e8 88 c5 00 00       	call   805f6b0 <__asan_report_error>
 8053128:	83 c4 3c             	add    $0x3c,%esp
 805312b:	89 f0                	mov    %esi,%eax
 805312d:	5b                   	pop    %ebx
 805312e:	5e                   	pop    %esi
 805312f:	5f                   	pop    %edi
 8053130:	5d                   	pop    %ebp
 8053131:	c3                   	ret    
 8053132:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053138:	e8 83 5d 00 00       	call   8058ec0 <__asan_init_v1>
 805313d:	e9 b4 fe ff ff       	jmp    8052ff6 <__interceptor_asctime+0x36>
 8053142:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053148:	89 f9                	mov    %edi,%ecx
 805314a:	83 e1 07             	and    $0x7,%ecx
 805314d:	39 c1                	cmp    %eax,%ecx
 805314f:	0f 8d 03 ff ff ff    	jge    8053058 <__interceptor_asctime+0x98>
 8053155:	e9 d8 fe ff ff       	jmp    8053032 <__interceptor_asctime+0x72>
 805315a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053160:	89 f2                	mov    %esi,%edx
 8053162:	83 e2 07             	and    $0x7,%edx
 8053165:	39 c2                	cmp    %eax,%edx
 8053167:	0f 8c 5c ff ff ff    	jl     80530c9 <__interceptor_asctime+0x109>
 805316d:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8053171:	89 34 24             	mov    %esi,(%esp)
 8053174:	e8 27 a3 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053179:	85 c0                	test   %eax,%eax
 805317b:	75 83                	jne    8053100 <__interceptor_asctime+0x140>
 805317d:	eb a9                	jmp    8053128 <__interceptor_asctime+0x168>
 805317f:	90                   	nop
 8053180:	89 d1                	mov    %edx,%ecx
 8053182:	d1 e9                	shr    %ecx
 8053184:	01 f9                	add    %edi,%ecx
 8053186:	89 c8                	mov    %ecx,%eax
 8053188:	c1 e8 03             	shr    $0x3,%eax
 805318b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053192:	84 c0                	test   %al,%al
 8053194:	0f 84 06 ff ff ff    	je     80530a0 <__interceptor_asctime+0xe0>
 805319a:	83 e1 07             	and    $0x7,%ecx
 805319d:	39 c1                	cmp    %eax,%ecx
 805319f:	0f 8d b3 fe ff ff    	jge    8053058 <__interceptor_asctime+0x98>
 80531a5:	e9 f6 fe ff ff       	jmp    80530a0 <__interceptor_asctime+0xe0>
 80531aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80531b0:	89 fa                	mov    %edi,%edx
 80531b2:	d1 ea                	shr    %edx
 80531b4:	01 f2                	add    %esi,%edx
 80531b6:	89 d0                	mov    %edx,%eax
 80531b8:	c1 e8 03             	shr    $0x3,%eax
 80531bb:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80531c2:	84 c0                	test   %al,%al
 80531c4:	0f 84 5e ff ff ff    	je     8053128 <__interceptor_asctime+0x168>
 80531ca:	83 e2 07             	and    $0x7,%edx
 80531cd:	39 c2                	cmp    %eax,%edx
 80531cf:	0f 8d 1b ff ff ff    	jge    80530f0 <__interceptor_asctime+0x130>
 80531d5:	e9 4e ff ff ff       	jmp    8053128 <__interceptor_asctime+0x168>
 80531da:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80531e0:	89 44 24 08          	mov    %eax,0x8(%esp)
 80531e4:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80531ea:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80531f1:	00 
 80531f2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80531f9:	00 
 80531fa:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8053201:	00 
 8053202:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053209:	00 
 805320a:	c7 44 24 04 d2 00 00 	movl   $0xd2,0x4(%esp)
 8053211:	00 
 8053212:	89 04 24             	mov    %eax,(%esp)
 8053215:	e8 96 f1 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805321a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08053220 <__interceptor_asctime_r>:
 8053220:	55                   	push   %ebp
 8053221:	89 e5                	mov    %esp,%ebp
 8053223:	57                   	push   %edi
 8053224:	56                   	push   %esi
 8053225:	53                   	push   %ebx
 8053226:	e8 c5 68 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805322b:	81 c3 d5 cd 05 00    	add    $0x5cdd5,%ebx
 8053231:	83 ec 3c             	sub    $0x3c,%esp
 8053234:	8b 7d 08             	mov    0x8(%ebp),%edi
 8053237:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805323d:	80 38 00             	cmpb   $0x0,(%eax)
 8053240:	0f 85 fc 01 00 00    	jne    8053442 <__interceptor_asctime_r+0x222>
 8053246:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805324c:	8b 00                	mov    (%eax),%eax
 805324e:	85 c0                	test   %eax,%eax
 8053250:	0f 84 4a 01 00 00    	je     80533a0 <__interceptor_asctime_r+0x180>
 8053256:	8b 45 0c             	mov    0xc(%ebp),%eax
 8053259:	89 3c 24             	mov    %edi,(%esp)
 805325c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8053260:	ff 93 a4 bb 02 00    	call   *0x2bba4(%ebx)
 8053266:	85 c0                	test   %eax,%eax
 8053268:	89 c6                	mov    %eax,%esi
 805326a:	0f 84 20 01 00 00    	je     8053390 <__interceptor_asctime_r+0x170>
 8053270:	8d 83 08 01 00 00    	lea    0x108(%ebx),%eax
 8053276:	8b 10                	mov    (%eax),%edx
 8053278:	85 d2                	test   %edx,%edx
 805327a:	0f 84 88 00 00 00    	je     8053308 <__interceptor_asctime_r+0xe8>
 8053280:	83 fa 20             	cmp    $0x20,%edx
 8053283:	77 3b                	ja     80532c0 <__interceptor_asctime_r+0xa0>
 8053285:	89 f8                	mov    %edi,%eax
 8053287:	c1 e8 03             	shr    $0x3,%eax
 805328a:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053291:	84 c0                	test   %al,%al
 8053293:	0f 85 17 01 00 00    	jne    80533b0 <__interceptor_asctime_r+0x190>
 8053299:	8d 4c 17 ff          	lea    -0x1(%edi,%edx,1),%ecx
 805329d:	89 c8                	mov    %ecx,%eax
 805329f:	c1 e8 03             	shr    $0x3,%eax
 80532a2:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80532a9:	84 c0                	test   %al,%al
 80532ab:	0f 84 37 01 00 00    	je     80533e8 <__interceptor_asctime_r+0x1c8>
 80532b1:	83 e1 07             	and    $0x7,%ecx
 80532b4:	39 c1                	cmp    %eax,%ecx
 80532b6:	0f 8c 2c 01 00 00    	jl     80533e8 <__interceptor_asctime_r+0x1c8>
 80532bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80532c0:	89 54 24 04          	mov    %edx,0x4(%esp)
 80532c4:	89 3c 24             	mov    %edi,(%esp)
 80532c7:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 80532ca:	e8 d1 a1 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80532cf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 80532d2:	85 c0                	test   %eax,%eax
 80532d4:	74 32                	je     8053308 <__interceptor_asctime_r+0xe8>
 80532d6:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 80532d9:	e8 a2 16 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80532de:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 80532e1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80532e8:	00 
 80532e9:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80532ed:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80532f1:	89 54 24 14          	mov    %edx,0x14(%esp)
 80532f5:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80532f8:	89 54 24 08          	mov    %edx,0x8(%esp)
 80532fc:	89 04 24             	mov    %eax,(%esp)
 80532ff:	e8 ac c3 00 00       	call   805f6b0 <__asan_report_error>
 8053304:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053308:	89 34 24             	mov    %esi,(%esp)
 805330b:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8053311:	83 c0 01             	add    $0x1,%eax
 8053314:	89 c7                	mov    %eax,%edi
 8053316:	74 78                	je     8053390 <__interceptor_asctime_r+0x170>
 8053318:	83 f8 20             	cmp    $0x20,%eax
 805331b:	77 3b                	ja     8053358 <__interceptor_asctime_r+0x138>
 805331d:	89 f0                	mov    %esi,%eax
 805331f:	c1 e8 03             	shr    $0x3,%eax
 8053322:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053329:	84 c0                	test   %al,%al
 805332b:	0f 85 97 00 00 00    	jne    80533c8 <__interceptor_asctime_r+0x1a8>
 8053331:	8d 54 3e ff          	lea    -0x1(%esi,%edi,1),%edx
 8053335:	89 d0                	mov    %edx,%eax
 8053337:	c1 e8 03             	shr    $0x3,%eax
 805333a:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053341:	84 c0                	test   %al,%al
 8053343:	0f 84 cf 00 00 00    	je     8053418 <__interceptor_asctime_r+0x1f8>
 8053349:	83 e2 07             	and    $0x7,%edx
 805334c:	39 c2                	cmp    %eax,%edx
 805334e:	0f 8c c4 00 00 00    	jl     8053418 <__interceptor_asctime_r+0x1f8>
 8053354:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053358:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805335c:	89 34 24             	mov    %esi,(%esp)
 805335f:	e8 3c a1 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053364:	85 c0                	test   %eax,%eax
 8053366:	74 28                	je     8053390 <__interceptor_asctime_r+0x170>
 8053368:	e8 13 16 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805336d:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8053370:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8053374:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805337b:	00 
 805337c:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8053380:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053384:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053388:	89 04 24             	mov    %eax,(%esp)
 805338b:	e8 20 c3 00 00       	call   805f6b0 <__asan_report_error>
 8053390:	83 c4 3c             	add    $0x3c,%esp
 8053393:	89 f0                	mov    %esi,%eax
 8053395:	5b                   	pop    %ebx
 8053396:	5e                   	pop    %esi
 8053397:	5f                   	pop    %edi
 8053398:	5d                   	pop    %ebp
 8053399:	c3                   	ret    
 805339a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80533a0:	e8 1b 5b 00 00       	call   8058ec0 <__asan_init_v1>
 80533a5:	e9 ac fe ff ff       	jmp    8053256 <__interceptor_asctime_r+0x36>
 80533aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80533b0:	89 f9                	mov    %edi,%ecx
 80533b2:	83 e1 07             	and    $0x7,%ecx
 80533b5:	39 c1                	cmp    %eax,%ecx
 80533b7:	0f 8d 03 ff ff ff    	jge    80532c0 <__interceptor_asctime_r+0xa0>
 80533bd:	8d 76 00             	lea    0x0(%esi),%esi
 80533c0:	e9 d4 fe ff ff       	jmp    8053299 <__interceptor_asctime_r+0x79>
 80533c5:	8d 76 00             	lea    0x0(%esi),%esi
 80533c8:	89 f2                	mov    %esi,%edx
 80533ca:	83 e2 07             	and    $0x7,%edx
 80533cd:	39 c2                	cmp    %eax,%edx
 80533cf:	0f 8c 5c ff ff ff    	jl     8053331 <__interceptor_asctime_r+0x111>
 80533d5:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80533d9:	89 34 24             	mov    %esi,(%esp)
 80533dc:	e8 bf a0 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80533e1:	85 c0                	test   %eax,%eax
 80533e3:	75 83                	jne    8053368 <__interceptor_asctime_r+0x148>
 80533e5:	eb a9                	jmp    8053390 <__interceptor_asctime_r+0x170>
 80533e7:	90                   	nop
 80533e8:	89 d1                	mov    %edx,%ecx
 80533ea:	d1 e9                	shr    %ecx
 80533ec:	01 f9                	add    %edi,%ecx
 80533ee:	89 c8                	mov    %ecx,%eax
 80533f0:	c1 e8 03             	shr    $0x3,%eax
 80533f3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80533fa:	84 c0                	test   %al,%al
 80533fc:	0f 84 06 ff ff ff    	je     8053308 <__interceptor_asctime_r+0xe8>
 8053402:	83 e1 07             	and    $0x7,%ecx
 8053405:	39 c1                	cmp    %eax,%ecx
 8053407:	0f 8d b3 fe ff ff    	jge    80532c0 <__interceptor_asctime_r+0xa0>
 805340d:	e9 f6 fe ff ff       	jmp    8053308 <__interceptor_asctime_r+0xe8>
 8053412:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053418:	89 fa                	mov    %edi,%edx
 805341a:	d1 ea                	shr    %edx
 805341c:	01 f2                	add    %esi,%edx
 805341e:	89 d0                	mov    %edx,%eax
 8053420:	c1 e8 03             	shr    $0x3,%eax
 8053423:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805342a:	84 c0                	test   %al,%al
 805342c:	0f 84 5e ff ff ff    	je     8053390 <__interceptor_asctime_r+0x170>
 8053432:	83 e2 07             	and    $0x7,%edx
 8053435:	39 c2                	cmp    %eax,%edx
 8053437:	0f 8d 1b ff ff ff    	jge    8053358 <__interceptor_asctime_r+0x138>
 805343d:	e9 4e ff ff ff       	jmp    8053390 <__interceptor_asctime_r+0x170>
 8053442:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8053448:	89 44 24 08          	mov    %eax,0x8(%esp)
 805344c:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 8053452:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8053459:	00 
 805345a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8053461:	00 
 8053462:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8053469:	00 
 805346a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053471:	00 
 8053472:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)
 8053479:	00 
 805347a:	89 04 24             	mov    %eax,(%esp)
 805347d:	e8 2e ef 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8053482:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8053489:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08053490 <__interceptor_ctime>:
 8053490:	55                   	push   %ebp
 8053491:	89 e5                	mov    %esp,%ebp
 8053493:	57                   	push   %edi
 8053494:	56                   	push   %esi
 8053495:	53                   	push   %ebx
 8053496:	e8 55 66 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805349b:	81 c3 65 cb 05 00    	add    $0x5cb65,%ebx
 80534a1:	83 ec 3c             	sub    $0x3c,%esp
 80534a4:	8b 7d 08             	mov    0x8(%ebp),%edi
 80534a7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80534ad:	80 38 00             	cmpb   $0x0,(%eax)
 80534b0:	0f 85 d4 01 00 00    	jne    805368a <__interceptor_ctime+0x1fa>
 80534b6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80534bc:	8b 00                	mov    (%eax),%eax
 80534be:	85 c0                	test   %eax,%eax
 80534c0:	0f 84 3a 01 00 00    	je     8053600 <__interceptor_ctime+0x170>
 80534c6:	89 3c 24             	mov    %edi,(%esp)
 80534c9:	ff 93 b0 bb 02 00    	call   *0x2bbb0(%ebx)
 80534cf:	85 c0                	test   %eax,%eax
 80534d1:	89 c6                	mov    %eax,%esi
 80534d3:	0f 84 ff 00 00 00    	je     80535d8 <__interceptor_ctime+0x148>
 80534d9:	89 f8                	mov    %edi,%eax
 80534db:	c1 e8 03             	shr    $0x3,%eax
 80534de:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80534e5:	84 c0                	test   %al,%al
 80534e7:	0f 85 fb 00 00 00    	jne    80535e8 <__interceptor_ctime+0x158>
 80534ed:	8d 57 03             	lea    0x3(%edi),%edx
 80534f0:	89 d0                	mov    %edx,%eax
 80534f2:	c1 e8 03             	shr    $0x3,%eax
 80534f5:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80534fc:	84 c0                	test   %al,%al
 80534fe:	0f 84 0c 01 00 00    	je     8053610 <__interceptor_ctime+0x180>
 8053504:	83 e2 07             	and    $0x7,%edx
 8053507:	39 c2                	cmp    %eax,%edx
 8053509:	0f 8c 01 01 00 00    	jl     8053610 <__interceptor_ctime+0x180>
 805350f:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 8053516:	00 
 8053517:	89 3c 24             	mov    %edi,(%esp)
 805351a:	e8 81 9f 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805351f:	85 c0                	test   %eax,%eax
 8053521:	74 2c                	je     805354f <__interceptor_ctime+0xbf>
 8053523:	e8 58 14 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053528:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 805352b:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8053532:	00 
 8053533:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805353a:	00 
 805353b:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 805353f:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053543:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053547:	89 04 24             	mov    %eax,(%esp)
 805354a:	e8 61 c1 00 00       	call   805f6b0 <__asan_report_error>
 805354f:	89 34 24             	mov    %esi,(%esp)
 8053552:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8053558:	83 c0 01             	add    $0x1,%eax
 805355b:	89 c7                	mov    %eax,%edi
 805355d:	74 79                	je     80535d8 <__interceptor_ctime+0x148>
 805355f:	83 f8 20             	cmp    $0x20,%eax
 8053562:	77 3c                	ja     80535a0 <__interceptor_ctime+0x110>
 8053564:	89 f0                	mov    %esi,%eax
 8053566:	c1 e8 03             	shr    $0x3,%eax
 8053569:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053570:	84 c0                	test   %al,%al
 8053572:	0f 85 c0 00 00 00    	jne    8053638 <__interceptor_ctime+0x1a8>
 8053578:	8d 54 3e ff          	lea    -0x1(%esi,%edi,1),%edx
 805357c:	89 d0                	mov    %edx,%eax
 805357e:	c1 e8 03             	shr    $0x3,%eax
 8053581:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053588:	84 c0                	test   %al,%al
 805358a:	0f 84 d0 00 00 00    	je     8053660 <__interceptor_ctime+0x1d0>
 8053590:	83 e2 07             	and    $0x7,%edx
 8053593:	39 c2                	cmp    %eax,%edx
 8053595:	0f 8c c5 00 00 00    	jl     8053660 <__interceptor_ctime+0x1d0>
 805359b:	90                   	nop
 805359c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80535a0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80535a4:	89 34 24             	mov    %esi,(%esp)
 80535a7:	e8 f4 9e 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80535ac:	85 c0                	test   %eax,%eax
 80535ae:	74 28                	je     80535d8 <__interceptor_ctime+0x148>
 80535b0:	e8 cb 13 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80535b5:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80535b8:	89 7c 24 14          	mov    %edi,0x14(%esp)
 80535bc:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 80535c3:	00 
 80535c4:	89 74 24 0c          	mov    %esi,0xc(%esp)
 80535c8:	89 54 24 08          	mov    %edx,0x8(%esp)
 80535cc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80535d0:	89 04 24             	mov    %eax,(%esp)
 80535d3:	e8 d8 c0 00 00       	call   805f6b0 <__asan_report_error>
 80535d8:	83 c4 3c             	add    $0x3c,%esp
 80535db:	89 f0                	mov    %esi,%eax
 80535dd:	5b                   	pop    %ebx
 80535de:	5e                   	pop    %esi
 80535df:	5f                   	pop    %edi
 80535e0:	5d                   	pop    %ebp
 80535e1:	c3                   	ret    
 80535e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80535e8:	89 fa                	mov    %edi,%edx
 80535ea:	83 e2 07             	and    $0x7,%edx
 80535ed:	39 c2                	cmp    %eax,%edx
 80535ef:	0f 8d 1a ff ff ff    	jge    805350f <__interceptor_ctime+0x7f>
 80535f5:	e9 f3 fe ff ff       	jmp    80534ed <__interceptor_ctime+0x5d>
 80535fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053600:	e8 bb 58 00 00       	call   8058ec0 <__asan_init_v1>
 8053605:	e9 bc fe ff ff       	jmp    80534c6 <__interceptor_ctime+0x36>
 805360a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053610:	8d 57 02             	lea    0x2(%edi),%edx
 8053613:	89 d0                	mov    %edx,%eax
 8053615:	c1 e8 03             	shr    $0x3,%eax
 8053618:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805361f:	84 c0                	test   %al,%al
 8053621:	0f 84 28 ff ff ff    	je     805354f <__interceptor_ctime+0xbf>
 8053627:	83 e2 07             	and    $0x7,%edx
 805362a:	39 c2                	cmp    %eax,%edx
 805362c:	0f 8d dd fe ff ff    	jge    805350f <__interceptor_ctime+0x7f>
 8053632:	e9 18 ff ff ff       	jmp    805354f <__interceptor_ctime+0xbf>
 8053637:	90                   	nop
 8053638:	89 f2                	mov    %esi,%edx
 805363a:	83 e2 07             	and    $0x7,%edx
 805363d:	39 c2                	cmp    %eax,%edx
 805363f:	0f 8c 33 ff ff ff    	jl     8053578 <__interceptor_ctime+0xe8>
 8053645:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8053649:	89 34 24             	mov    %esi,(%esp)
 805364c:	e8 4f 9e 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053651:	85 c0                	test   %eax,%eax
 8053653:	0f 85 57 ff ff ff    	jne    80535b0 <__interceptor_ctime+0x120>
 8053659:	e9 7a ff ff ff       	jmp    80535d8 <__interceptor_ctime+0x148>
 805365e:	66 90                	xchg   %ax,%ax
 8053660:	89 fa                	mov    %edi,%edx
 8053662:	d1 ea                	shr    %edx
 8053664:	01 f2                	add    %esi,%edx
 8053666:	89 d0                	mov    %edx,%eax
 8053668:	c1 e8 03             	shr    $0x3,%eax
 805366b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053672:	84 c0                	test   %al,%al
 8053674:	0f 84 5e ff ff ff    	je     80535d8 <__interceptor_ctime+0x148>
 805367a:	83 e2 07             	and    $0x7,%edx
 805367d:	39 c2                	cmp    %eax,%edx
 805367f:	0f 8d 1b ff ff ff    	jge    80535a0 <__interceptor_ctime+0x110>
 8053685:	e9 4e ff ff ff       	jmp    80535d8 <__interceptor_ctime+0x148>
 805368a:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8053690:	89 44 24 08          	mov    %eax,0x8(%esp)
 8053694:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 805369a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80536a1:	00 
 80536a2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80536a9:	00 
 80536aa:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80536b1:	00 
 80536b2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80536b9:	00 
 80536ba:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)
 80536c1:	00 
 80536c2:	89 04 24             	mov    %eax,(%esp)
 80536c5:	e8 e6 ec 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80536ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080536d0 <__interceptor_ctime_r>:
 80536d0:	55                   	push   %ebp
 80536d1:	89 e5                	mov    %esp,%ebp
 80536d3:	57                   	push   %edi
 80536d4:	56                   	push   %esi
 80536d5:	53                   	push   %ebx
 80536d6:	e8 15 64 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80536db:	81 c3 25 c9 05 00    	add    $0x5c925,%ebx
 80536e1:	83 ec 3c             	sub    $0x3c,%esp
 80536e4:	8b 7d 08             	mov    0x8(%ebp),%edi
 80536e7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80536ed:	80 38 00             	cmpb   $0x0,(%eax)
 80536f0:	0f 85 dc 01 00 00    	jne    80538d2 <__interceptor_ctime_r+0x202>
 80536f6:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80536fc:	8b 00                	mov    (%eax),%eax
 80536fe:	85 c0                	test   %eax,%eax
 8053700:	0f 84 42 01 00 00    	je     8053848 <__interceptor_ctime_r+0x178>
 8053706:	8b 45 0c             	mov    0xc(%ebp),%eax
 8053709:	89 3c 24             	mov    %edi,(%esp)
 805370c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8053710:	ff 93 ac bb 02 00    	call   *0x2bbac(%ebx)
 8053716:	85 c0                	test   %eax,%eax
 8053718:	89 c6                	mov    %eax,%esi
 805371a:	0f 84 00 01 00 00    	je     8053820 <__interceptor_ctime_r+0x150>
 8053720:	89 f8                	mov    %edi,%eax
 8053722:	c1 e8 03             	shr    $0x3,%eax
 8053725:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805372c:	84 c0                	test   %al,%al
 805372e:	0f 85 fc 00 00 00    	jne    8053830 <__interceptor_ctime_r+0x160>
 8053734:	8d 57 03             	lea    0x3(%edi),%edx
 8053737:	89 d0                	mov    %edx,%eax
 8053739:	c1 e8 03             	shr    $0x3,%eax
 805373c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053743:	84 c0                	test   %al,%al
 8053745:	0f 84 0d 01 00 00    	je     8053858 <__interceptor_ctime_r+0x188>
 805374b:	83 e2 07             	and    $0x7,%edx
 805374e:	39 c2                	cmp    %eax,%edx
 8053750:	0f 8c 02 01 00 00    	jl     8053858 <__interceptor_ctime_r+0x188>
 8053756:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 805375d:	00 
 805375e:	89 3c 24             	mov    %edi,(%esp)
 8053761:	e8 3a 9d 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053766:	85 c0                	test   %eax,%eax
 8053768:	74 2c                	je     8053796 <__interceptor_ctime_r+0xc6>
 805376a:	e8 11 12 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805376f:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8053772:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8053779:	00 
 805377a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053781:	00 
 8053782:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8053786:	89 54 24 08          	mov    %edx,0x8(%esp)
 805378a:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805378e:	89 04 24             	mov    %eax,(%esp)
 8053791:	e8 1a bf 00 00       	call   805f6b0 <__asan_report_error>
 8053796:	89 34 24             	mov    %esi,(%esp)
 8053799:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 805379f:	83 c0 01             	add    $0x1,%eax
 80537a2:	89 c7                	mov    %eax,%edi
 80537a4:	74 7a                	je     8053820 <__interceptor_ctime_r+0x150>
 80537a6:	83 f8 20             	cmp    $0x20,%eax
 80537a9:	77 3d                	ja     80537e8 <__interceptor_ctime_r+0x118>
 80537ab:	89 f0                	mov    %esi,%eax
 80537ad:	c1 e8 03             	shr    $0x3,%eax
 80537b0:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80537b7:	84 c0                	test   %al,%al
 80537b9:	0f 85 c1 00 00 00    	jne    8053880 <__interceptor_ctime_r+0x1b0>
 80537bf:	8d 54 3e ff          	lea    -0x1(%esi,%edi,1),%edx
 80537c3:	89 d0                	mov    %edx,%eax
 80537c5:	c1 e8 03             	shr    $0x3,%eax
 80537c8:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80537cf:	84 c0                	test   %al,%al
 80537d1:	0f 84 d1 00 00 00    	je     80538a8 <__interceptor_ctime_r+0x1d8>
 80537d7:	83 e2 07             	and    $0x7,%edx
 80537da:	39 c2                	cmp    %eax,%edx
 80537dc:	0f 8c c6 00 00 00    	jl     80538a8 <__interceptor_ctime_r+0x1d8>
 80537e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80537e8:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80537ec:	89 34 24             	mov    %esi,(%esp)
 80537ef:	e8 ac 9c 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80537f4:	85 c0                	test   %eax,%eax
 80537f6:	74 28                	je     8053820 <__interceptor_ctime_r+0x150>
 80537f8:	e8 83 11 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80537fd:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8053800:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8053804:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805380b:	00 
 805380c:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8053810:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053814:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053818:	89 04 24             	mov    %eax,(%esp)
 805381b:	e8 90 be 00 00       	call   805f6b0 <__asan_report_error>
 8053820:	83 c4 3c             	add    $0x3c,%esp
 8053823:	89 f0                	mov    %esi,%eax
 8053825:	5b                   	pop    %ebx
 8053826:	5e                   	pop    %esi
 8053827:	5f                   	pop    %edi
 8053828:	5d                   	pop    %ebp
 8053829:	c3                   	ret    
 805382a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053830:	89 fa                	mov    %edi,%edx
 8053832:	83 e2 07             	and    $0x7,%edx
 8053835:	39 c2                	cmp    %eax,%edx
 8053837:	0f 8d 19 ff ff ff    	jge    8053756 <__interceptor_ctime_r+0x86>
 805383d:	e9 f2 fe ff ff       	jmp    8053734 <__interceptor_ctime_r+0x64>
 8053842:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053848:	e8 73 56 00 00       	call   8058ec0 <__asan_init_v1>
 805384d:	8d 76 00             	lea    0x0(%esi),%esi
 8053850:	e9 b1 fe ff ff       	jmp    8053706 <__interceptor_ctime_r+0x36>
 8053855:	8d 76 00             	lea    0x0(%esi),%esi
 8053858:	8d 57 02             	lea    0x2(%edi),%edx
 805385b:	89 d0                	mov    %edx,%eax
 805385d:	c1 e8 03             	shr    $0x3,%eax
 8053860:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053867:	84 c0                	test   %al,%al
 8053869:	0f 84 27 ff ff ff    	je     8053796 <__interceptor_ctime_r+0xc6>
 805386f:	83 e2 07             	and    $0x7,%edx
 8053872:	39 c2                	cmp    %eax,%edx
 8053874:	0f 8d dc fe ff ff    	jge    8053756 <__interceptor_ctime_r+0x86>
 805387a:	e9 17 ff ff ff       	jmp    8053796 <__interceptor_ctime_r+0xc6>
 805387f:	90                   	nop
 8053880:	89 f2                	mov    %esi,%edx
 8053882:	83 e2 07             	and    $0x7,%edx
 8053885:	39 c2                	cmp    %eax,%edx
 8053887:	0f 8c 32 ff ff ff    	jl     80537bf <__interceptor_ctime_r+0xef>
 805388d:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8053891:	89 34 24             	mov    %esi,(%esp)
 8053894:	e8 07 9c 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053899:	85 c0                	test   %eax,%eax
 805389b:	0f 85 57 ff ff ff    	jne    80537f8 <__interceptor_ctime_r+0x128>
 80538a1:	e9 7a ff ff ff       	jmp    8053820 <__interceptor_ctime_r+0x150>
 80538a6:	66 90                	xchg   %ax,%ax
 80538a8:	89 fa                	mov    %edi,%edx
 80538aa:	d1 ea                	shr    %edx
 80538ac:	01 f2                	add    %esi,%edx
 80538ae:	89 d0                	mov    %edx,%eax
 80538b0:	c1 e8 03             	shr    $0x3,%eax
 80538b3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80538ba:	84 c0                	test   %al,%al
 80538bc:	0f 84 5e ff ff ff    	je     8053820 <__interceptor_ctime_r+0x150>
 80538c2:	83 e2 07             	and    $0x7,%edx
 80538c5:	39 c2                	cmp    %eax,%edx
 80538c7:	0f 8d 1b ff ff ff    	jge    80537e8 <__interceptor_ctime_r+0x118>
 80538cd:	e9 4e ff ff ff       	jmp    8053820 <__interceptor_ctime_r+0x150>
 80538d2:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80538d8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80538dc:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 80538e2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80538e9:	00 
 80538ea:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80538f1:	00 
 80538f2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80538f9:	00 
 80538fa:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053901:	00 
 8053902:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 8053909:	00 
 805390a:	89 04 24             	mov    %eax,(%esp)
 805390d:	e8 9e ea 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8053912:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8053919:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08053920 <__interceptor_memcpy.part.14>:
 8053920:	55                   	push   %ebp
 8053921:	89 e5                	mov    %esp,%ebp
 8053923:	57                   	push   %edi
 8053924:	89 c7                	mov    %eax,%edi
 8053926:	56                   	push   %esi
 8053927:	53                   	push   %ebx
 8053928:	e8 c3 61 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805392d:	81 c3 d3 c6 05 00    	add    $0x5c6d3,%ebx
 8053933:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8053939:	8b 75 08             	mov    0x8(%ebp),%esi
 805393c:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8053942:	e8 d9 4b 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8053947:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 805394d:	80 78 21 00          	cmpb   $0x0,0x21(%eax)
 8053951:	0f 84 95 00 00 00    	je     80539ec <__interceptor_memcpy.part.14+0xcc>
 8053957:	39 d7                	cmp    %edx,%edi
 8053959:	0f 84 89 00 00 00    	je     80539e8 <__interceptor_memcpy.part.14+0xc8>
 805395f:	8d 04 37             	lea    (%edi,%esi,1),%eax
 8053962:	39 c2                	cmp    %eax,%edx
 8053964:	0f 83 7e 00 00 00    	jae    80539e8 <__interceptor_memcpy.part.14+0xc8>
 805396a:	8d 04 32             	lea    (%edx,%esi,1),%eax
 805396d:	39 c7                	cmp    %eax,%edi
 805396f:	73 77                	jae    80539e8 <__interceptor_memcpy.part.14+0xc8>
 8053971:	89 95 d0 fb ff ff    	mov    %edx,-0x430(%ebp)
 8053977:	e8 a4 4b 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805397c:	0f b6 48 4c          	movzbl 0x4c(%eax),%ecx
 8053980:	89 8d d4 fb ff ff    	mov    %ecx,-0x42c(%ebp)
 8053986:	e8 f5 0f 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805398b:	8b 8d d4 fb ff ff    	mov    -0x42c(%ebp),%ecx
 8053991:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8053995:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 805399c:	00 
 805399d:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 80539a1:	89 44 24 08          	mov    %eax,0x8(%esp)
 80539a5:	8d 85 e0 fb ff ff    	lea    -0x420(%ebp),%eax
 80539ab:	89 04 24             	mov    %eax,(%esp)
 80539ae:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 80539b4:	e8 b7 8a 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 80539b9:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 80539bf:	8b 95 d0 fb ff ff    	mov    -0x430(%ebp),%edx
 80539c5:	89 74 24 10          	mov    %esi,0x10(%esp)
 80539c9:	89 74 24 08          	mov    %esi,0x8(%esp)
 80539cd:	89 44 24 14          	mov    %eax,0x14(%esp)
 80539d1:	8d 83 b7 3e fd ff    	lea    -0x2c149(%ebx),%eax
 80539d7:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80539db:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80539df:	89 04 24             	mov    %eax,(%esp)
 80539e2:	e8 c9 b9 00 00       	call   805f3b0 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE>
 80539e7:	90                   	nop
 80539e8:	85 f6                	test   %esi,%esi
 80539ea:	75 1c                	jne    8053a08 <__interceptor_memcpy.part.14+0xe8>
 80539ec:	89 74 24 08          	mov    %esi,0x8(%esp)
 80539f0:	89 3c 24             	mov    %edi,(%esp)
 80539f3:	89 54 24 04          	mov    %edx,0x4(%esp)
 80539f7:	e8 b4 de 00 00       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 80539fc:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 8053a02:	5b                   	pop    %ebx
 8053a03:	5e                   	pop    %esi
 8053a04:	5f                   	pop    %edi
 8053a05:	5d                   	pop    %ebp
 8053a06:	c3                   	ret    
 8053a07:	90                   	nop
 8053a08:	83 fe 20             	cmp    $0x20,%esi
 8053a0b:	77 21                	ja     8053a2e <__interceptor_memcpy.part.14+0x10e>
 8053a0d:	89 d0                	mov    %edx,%eax
 8053a0f:	c1 e8 03             	shr    $0x3,%eax
 8053a12:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053a19:	84 c0                	test   %al,%al
 8053a1b:	0f 84 27 01 00 00    	je     8053b48 <__interceptor_memcpy.part.14+0x228>
 8053a21:	89 d1                	mov    %edx,%ecx
 8053a23:	83 e1 07             	and    $0x7,%ecx
 8053a26:	39 c1                	cmp    %eax,%ecx
 8053a28:	0f 8c 1a 01 00 00    	jl     8053b48 <__interceptor_memcpy.part.14+0x228>
 8053a2e:	89 14 24             	mov    %edx,(%esp)
 8053a31:	89 74 24 04          	mov    %esi,0x4(%esp)
 8053a35:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8053a3b:	e8 60 9a 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053a40:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8053a46:	85 c0                	test   %eax,%eax
 8053a48:	74 3d                	je     8053a87 <__interceptor_memcpy.part.14+0x167>
 8053a4a:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8053a50:	e8 2b 0f 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053a55:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8053a5b:	8d 8d e0 fb ff ff    	lea    -0x420(%ebp),%ecx
 8053a61:	89 74 24 14          	mov    %esi,0x14(%esp)
 8053a65:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053a6c:	00 
 8053a6d:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8053a71:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8053a75:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053a79:	89 04 24             	mov    %eax,(%esp)
 8053a7c:	e8 2f bc 00 00       	call   805f6b0 <__asan_report_error>
 8053a81:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8053a87:	83 fe 20             	cmp    $0x20,%esi
 8053a8a:	77 19                	ja     8053aa5 <__interceptor_memcpy.part.14+0x185>
 8053a8c:	89 f8                	mov    %edi,%eax
 8053a8e:	c1 e8 03             	shr    $0x3,%eax
 8053a91:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053a98:	84 c0                	test   %al,%al
 8053a9a:	74 6c                	je     8053b08 <__interceptor_memcpy.part.14+0x1e8>
 8053a9c:	89 f9                	mov    %edi,%ecx
 8053a9e:	83 e1 07             	and    $0x7,%ecx
 8053aa1:	39 c1                	cmp    %eax,%ecx
 8053aa3:	7c 63                	jl     8053b08 <__interceptor_memcpy.part.14+0x1e8>
 8053aa5:	89 74 24 04          	mov    %esi,0x4(%esp)
 8053aa9:	89 3c 24             	mov    %edi,(%esp)
 8053aac:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8053ab2:	e8 e9 99 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053ab7:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8053abd:	85 c0                	test   %eax,%eax
 8053abf:	0f 84 27 ff ff ff    	je     80539ec <__interceptor_memcpy.part.14+0xcc>
 8053ac5:	89 95 d4 fb ff ff    	mov    %edx,-0x42c(%ebp)
 8053acb:	e8 b0 0e 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053ad0:	8d 8d e0 fb ff ff    	lea    -0x420(%ebp),%ecx
 8053ad6:	89 74 24 14          	mov    %esi,0x14(%esp)
 8053ada:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8053ae1:	00 
 8053ae2:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8053ae6:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8053aea:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053aee:	89 04 24             	mov    %eax,(%esp)
 8053af1:	e8 ba bb 00 00       	call   805f6b0 <__asan_report_error>
 8053af6:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 8053afc:	e9 eb fe ff ff       	jmp    80539ec <__interceptor_memcpy.part.14+0xcc>
 8053b01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8053b08:	8d 4c 37 ff          	lea    -0x1(%edi,%esi,1),%ecx
 8053b0c:	89 c8                	mov    %ecx,%eax
 8053b0e:	c1 e8 03             	shr    $0x3,%eax
 8053b11:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053b18:	84 c0                	test   %al,%al
 8053b1a:	75 7c                	jne    8053b98 <__interceptor_memcpy.part.14+0x278>
 8053b1c:	89 f1                	mov    %esi,%ecx
 8053b1e:	d1 e9                	shr    %ecx
 8053b20:	01 f9                	add    %edi,%ecx
 8053b22:	89 c8                	mov    %ecx,%eax
 8053b24:	c1 e8 03             	shr    $0x3,%eax
 8053b27:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053b2e:	84 c0                	test   %al,%al
 8053b30:	0f 84 b6 fe ff ff    	je     80539ec <__interceptor_memcpy.part.14+0xcc>
 8053b36:	83 e1 07             	and    $0x7,%ecx
 8053b39:	39 c1                	cmp    %eax,%ecx
 8053b3b:	0f 8d 64 ff ff ff    	jge    8053aa5 <__interceptor_memcpy.part.14+0x185>
 8053b41:	e9 a6 fe ff ff       	jmp    80539ec <__interceptor_memcpy.part.14+0xcc>
 8053b46:	66 90                	xchg   %ax,%ax
 8053b48:	8d 4c 32 ff          	lea    -0x1(%edx,%esi,1),%ecx
 8053b4c:	89 c8                	mov    %ecx,%eax
 8053b4e:	c1 e8 03             	shr    $0x3,%eax
 8053b51:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053b58:	84 c0                	test   %al,%al
 8053b5a:	75 2c                	jne    8053b88 <__interceptor_memcpy.part.14+0x268>
 8053b5c:	89 f1                	mov    %esi,%ecx
 8053b5e:	d1 e9                	shr    %ecx
 8053b60:	01 d1                	add    %edx,%ecx
 8053b62:	89 c8                	mov    %ecx,%eax
 8053b64:	c1 e8 03             	shr    $0x3,%eax
 8053b67:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053b6e:	84 c0                	test   %al,%al
 8053b70:	0f 84 11 ff ff ff    	je     8053a87 <__interceptor_memcpy.part.14+0x167>
 8053b76:	83 e1 07             	and    $0x7,%ecx
 8053b79:	39 c1                	cmp    %eax,%ecx
 8053b7b:	0f 8d ad fe ff ff    	jge    8053a2e <__interceptor_memcpy.part.14+0x10e>
 8053b81:	e9 01 ff ff ff       	jmp    8053a87 <__interceptor_memcpy.part.14+0x167>
 8053b86:	66 90                	xchg   %ax,%ax
 8053b88:	83 e1 07             	and    $0x7,%ecx
 8053b8b:	39 c1                	cmp    %eax,%ecx
 8053b8d:	0f 8d 9b fe ff ff    	jge    8053a2e <__interceptor_memcpy.part.14+0x10e>
 8053b93:	eb c7                	jmp    8053b5c <__interceptor_memcpy.part.14+0x23c>
 8053b95:	8d 76 00             	lea    0x0(%esi),%esi
 8053b98:	83 e1 07             	and    $0x7,%ecx
 8053b9b:	39 c1                	cmp    %eax,%ecx
 8053b9d:	0f 8d 02 ff ff ff    	jge    8053aa5 <__interceptor_memcpy.part.14+0x185>
 8053ba3:	e9 74 ff ff ff       	jmp    8053b1c <__interceptor_memcpy.part.14+0x1fc>
 8053ba8:	90                   	nop
 8053ba9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08053bb0 <__interceptor_memcpy>:
 8053bb0:	56                   	push   %esi
 8053bb1:	53                   	push   %ebx
 8053bb2:	e8 39 5f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8053bb7:	81 c3 49 c4 05 00    	add    $0x5c449,%ebx
 8053bbd:	83 ec 14             	sub    $0x14,%esp
 8053bc0:	8b 44 24 20          	mov    0x20(%esp),%eax
 8053bc4:	8b 54 24 24          	mov    0x24(%esp),%edx
 8053bc8:	8b 74 24 28          	mov    0x28(%esp),%esi
 8053bcc:	8d 8b 14 bc 02 00    	lea    0x2bc14(%ebx),%ecx
 8053bd2:	8b 09                	mov    (%ecx),%ecx
 8053bd4:	85 c9                	test   %ecx,%ecx
 8053bd6:	74 20                	je     8053bf8 <__interceptor_memcpy+0x48>
 8053bd8:	8d 8b 10 bc 02 00    	lea    0x2bc10(%ebx),%ecx
 8053bde:	80 39 00             	cmpb   $0x0,(%ecx)
 8053be1:	75 2d                	jne    8053c10 <__interceptor_memcpy+0x60>
 8053be3:	89 74 24 20          	mov    %esi,0x20(%esp)
 8053be7:	83 c4 14             	add    $0x14,%esp
 8053bea:	5b                   	pop    %ebx
 8053beb:	5e                   	pop    %esi
 8053bec:	e9 2f fd ff ff       	jmp    8053920 <__interceptor_memcpy.part.14>
 8053bf1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8053bf8:	89 74 24 08          	mov    %esi,0x8(%esp)
 8053bfc:	89 54 24 04          	mov    %edx,0x4(%esp)
 8053c00:	89 04 24             	mov    %eax,(%esp)
 8053c03:	e8 a8 dc 00 00       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8053c08:	83 c4 14             	add    $0x14,%esp
 8053c0b:	5b                   	pop    %ebx
 8053c0c:	5e                   	pop    %esi
 8053c0d:	c3                   	ret    
 8053c0e:	66 90                	xchg   %ax,%ax
 8053c10:	89 74 24 08          	mov    %esi,0x8(%esp)
 8053c14:	89 54 24 04          	mov    %edx,0x4(%esp)
 8053c18:	89 04 24             	mov    %eax,(%esp)
 8053c1b:	ff 93 3c bb 02 00    	call   *0x2bb3c(%ebx)
 8053c21:	83 c4 14             	add    $0x14,%esp
 8053c24:	5b                   	pop    %ebx
 8053c25:	5e                   	pop    %esi
 8053c26:	c3                   	ret    
 8053c27:	89 f6                	mov    %esi,%esi
 8053c29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08053c30 <__interceptor_strcpy>:
 8053c30:	55                   	push   %ebp
 8053c31:	89 e5                	mov    %esp,%ebp
 8053c33:	57                   	push   %edi
 8053c34:	56                   	push   %esi
 8053c35:	53                   	push   %ebx
 8053c36:	e8 b5 5e ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8053c3b:	81 c3 c5 c3 05 00    	add    $0x5c3c5,%ebx
 8053c41:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8053c47:	8b 75 0c             	mov    0xc(%ebp),%esi
 8053c4a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8053c50:	80 38 00             	cmpb   $0x0,(%eax)
 8053c53:	0f 85 ff 01 00 00    	jne    8053e58 <__interceptor_strcpy+0x228>
 8053c59:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8053c5f:	8b 00                	mov    (%eax),%eax
 8053c61:	85 c0                	test   %eax,%eax
 8053c63:	0f 84 0f 02 00 00    	je     8053e78 <__interceptor_strcpy+0x248>
 8053c69:	e8 b2 48 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8053c6e:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8053c72:	0f 84 e0 01 00 00    	je     8053e58 <__interceptor_strcpy+0x228>
 8053c78:	89 34 24             	mov    %esi,(%esp)
 8053c7b:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8053c81:	8d 78 01             	lea    0x1(%eax),%edi
 8053c84:	89 c1                	mov    %eax,%ecx
 8053c86:	8b 45 08             	mov    0x8(%ebp),%eax
 8053c89:	01 f8                	add    %edi,%eax
 8053c8b:	39 c6                	cmp    %eax,%esi
 8053c8d:	73 79                	jae    8053d08 <__interceptor_strcpy+0xd8>
 8053c8f:	8d 04 3e             	lea    (%esi,%edi,1),%eax
 8053c92:	39 45 08             	cmp    %eax,0x8(%ebp)
 8053c95:	73 71                	jae    8053d08 <__interceptor_strcpy+0xd8>
 8053c97:	e8 84 48 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8053c9c:	0f b6 48 4c          	movzbl 0x4c(%eax),%ecx
 8053ca0:	89 8d d4 fb ff ff    	mov    %ecx,-0x42c(%ebp)
 8053ca6:	e8 d5 0c 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053cab:	8b 8d d4 fb ff ff    	mov    -0x42c(%ebp),%ecx
 8053cb1:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8053cb5:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 8053cbc:	00 
 8053cbd:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 8053cc1:	89 44 24 08          	mov    %eax,0x8(%esp)
 8053cc5:	8d 85 e0 fb ff ff    	lea    -0x420(%ebp),%eax
 8053ccb:	89 04 24             	mov    %eax,(%esp)
 8053cce:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 8053cd4:	e8 97 87 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 8053cd9:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 8053cdf:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8053ce3:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8053ce7:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8053ceb:	89 44 24 14          	mov    %eax,0x14(%esp)
 8053cef:	8b 45 08             	mov    0x8(%ebp),%eax
 8053cf2:	89 44 24 04          	mov    %eax,0x4(%esp)
 8053cf6:	8d 83 be 3e fd ff    	lea    -0x2c142(%ebx),%eax
 8053cfc:	89 04 24             	mov    %eax,(%esp)
 8053cff:	e8 ac b6 00 00       	call   805f3b0 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE>
 8053d04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053d08:	85 ff                	test   %edi,%edi
 8053d0a:	0f 84 48 01 00 00    	je     8053e58 <__interceptor_strcpy+0x228>
 8053d10:	83 ff 20             	cmp    $0x20,%edi
 8053d13:	77 53                	ja     8053d68 <__interceptor_strcpy+0x138>
 8053d15:	89 f0                	mov    %esi,%eax
 8053d17:	c1 e8 03             	shr    $0x3,%eax
 8053d1a:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053d21:	84 c0                	test   %al,%al
 8053d23:	0f 85 77 01 00 00    	jne    8053ea0 <__interceptor_strcpy+0x270>
 8053d29:	8d 54 3e ff          	lea    -0x1(%esi,%edi,1),%edx
 8053d2d:	89 d0                	mov    %edx,%eax
 8053d2f:	c1 e8 03             	shr    $0x3,%eax
 8053d32:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053d39:	84 c0                	test   %al,%al
 8053d3b:	74 0b                	je     8053d48 <__interceptor_strcpy+0x118>
 8053d3d:	83 e2 07             	and    $0x7,%edx
 8053d40:	39 c2                	cmp    %eax,%edx
 8053d42:	7d 24                	jge    8053d68 <__interceptor_strcpy+0x138>
 8053d44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053d48:	89 f8                	mov    %edi,%eax
 8053d4a:	d1 e8                	shr    %eax
 8053d4c:	8d 14 06             	lea    (%esi,%eax,1),%edx
 8053d4f:	89 d0                	mov    %edx,%eax
 8053d51:	c1 e8 03             	shr    $0x3,%eax
 8053d54:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053d5b:	84 c0                	test   %al,%al
 8053d5d:	74 5c                	je     8053dbb <__interceptor_strcpy+0x18b>
 8053d5f:	83 e2 07             	and    $0x7,%edx
 8053d62:	39 c2                	cmp    %eax,%edx
 8053d64:	7c 55                	jl     8053dbb <__interceptor_strcpy+0x18b>
 8053d66:	66 90                	xchg   %ax,%ax
 8053d68:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8053d6c:	89 34 24             	mov    %esi,(%esp)
 8053d6f:	89 8d d4 fb ff ff    	mov    %ecx,-0x42c(%ebp)
 8053d75:	e8 26 97 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053d7a:	8b 8d d4 fb ff ff    	mov    -0x42c(%ebp),%ecx
 8053d80:	85 c0                	test   %eax,%eax
 8053d82:	74 37                	je     8053dbb <__interceptor_strcpy+0x18b>
 8053d84:	89 8d d4 fb ff ff    	mov    %ecx,-0x42c(%ebp)
 8053d8a:	e8 f1 0b 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053d8f:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 8053d95:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8053d99:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8053da0:	00 
 8053da1:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8053da5:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053da9:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053dad:	89 04 24             	mov    %eax,(%esp)
 8053db0:	e8 fb b8 00 00       	call   805f6b0 <__asan_report_error>
 8053db5:	8b 8d d4 fb ff ff    	mov    -0x42c(%ebp),%ecx
 8053dbb:	83 ff 20             	cmp    $0x20,%edi
 8053dbe:	77 50                	ja     8053e10 <__interceptor_strcpy+0x1e0>
 8053dc0:	8b 45 08             	mov    0x8(%ebp),%eax
 8053dc3:	c1 e8 03             	shr    $0x3,%eax
 8053dc6:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053dcd:	84 c0                	test   %al,%al
 8053dcf:	0f 85 b3 00 00 00    	jne    8053e88 <__interceptor_strcpy+0x258>
 8053dd5:	03 4d 08             	add    0x8(%ebp),%ecx
 8053dd8:	89 c8                	mov    %ecx,%eax
 8053dda:	c1 e8 03             	shr    $0x3,%eax
 8053ddd:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053de4:	84 c0                	test   %al,%al
 8053de6:	74 08                	je     8053df0 <__interceptor_strcpy+0x1c0>
 8053de8:	83 e1 07             	and    $0x7,%ecx
 8053deb:	39 c1                	cmp    %eax,%ecx
 8053ded:	7d 21                	jge    8053e10 <__interceptor_strcpy+0x1e0>
 8053def:	90                   	nop
 8053df0:	89 f9                	mov    %edi,%ecx
 8053df2:	d1 e9                	shr    %ecx
 8053df4:	03 4d 08             	add    0x8(%ebp),%ecx
 8053df7:	89 c8                	mov    %ecx,%eax
 8053df9:	c1 e8 03             	shr    $0x3,%eax
 8053dfc:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8053e03:	84 c0                	test   %al,%al
 8053e05:	74 51                	je     8053e58 <__interceptor_strcpy+0x228>
 8053e07:	83 e1 07             	and    $0x7,%ecx
 8053e0a:	39 c1                	cmp    %eax,%ecx
 8053e0c:	7c 4a                	jl     8053e58 <__interceptor_strcpy+0x228>
 8053e0e:	66 90                	xchg   %ax,%ax
 8053e10:	8b 45 08             	mov    0x8(%ebp),%eax
 8053e13:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8053e17:	89 04 24             	mov    %eax,(%esp)
 8053e1a:	e8 81 96 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8053e1f:	85 c0                	test   %eax,%eax
 8053e21:	74 35                	je     8053e58 <__interceptor_strcpy+0x228>
 8053e23:	e8 58 0b 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053e28:	8b 55 08             	mov    0x8(%ebp),%edx
 8053e2b:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8053e2f:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8053e36:	00 
 8053e37:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8053e3b:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8053e3f:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 8053e45:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053e49:	89 04 24             	mov    %eax,(%esp)
 8053e4c:	e8 5f b8 00 00       	call   805f6b0 <__asan_report_error>
 8053e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8053e58:	8b 45 08             	mov    0x8(%ebp),%eax
 8053e5b:	89 74 24 04          	mov    %esi,0x4(%esp)
 8053e5f:	89 04 24             	mov    %eax,(%esp)
 8053e62:	ff 93 1c bb 02 00    	call   *0x2bb1c(%ebx)
 8053e68:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 8053e6e:	5b                   	pop    %ebx
 8053e6f:	5e                   	pop    %esi
 8053e70:	5f                   	pop    %edi
 8053e71:	5d                   	pop    %ebp
 8053e72:	c3                   	ret    
 8053e73:	90                   	nop
 8053e74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053e78:	e8 43 50 00 00       	call   8058ec0 <__asan_init_v1>
 8053e7d:	e9 e7 fd ff ff       	jmp    8053c69 <__interceptor_strcpy+0x39>
 8053e82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8053e88:	8b 55 08             	mov    0x8(%ebp),%edx
 8053e8b:	83 e2 07             	and    $0x7,%edx
 8053e8e:	39 c2                	cmp    %eax,%edx
 8053e90:	0f 8d 7a ff ff ff    	jge    8053e10 <__interceptor_strcpy+0x1e0>
 8053e96:	e9 3a ff ff ff       	jmp    8053dd5 <__interceptor_strcpy+0x1a5>
 8053e9b:	90                   	nop
 8053e9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053ea0:	89 f2                	mov    %esi,%edx
 8053ea2:	83 e2 07             	and    $0x7,%edx
 8053ea5:	39 c2                	cmp    %eax,%edx
 8053ea7:	0f 8d bb fe ff ff    	jge    8053d68 <__interceptor_strcpy+0x138>
 8053ead:	8d 76 00             	lea    0x0(%esi),%esi
 8053eb0:	e9 74 fe ff ff       	jmp    8053d29 <__interceptor_strcpy+0xf9>
 8053eb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8053eb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08053ec0 <__interceptor_strcat>:
 8053ec0:	55                   	push   %ebp
 8053ec1:	89 e5                	mov    %esp,%ebp
 8053ec3:	57                   	push   %edi
 8053ec4:	56                   	push   %esi
 8053ec5:	53                   	push   %ebx
 8053ec6:	e8 25 5c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8053ecb:	81 c3 35 c1 05 00    	add    $0x5c135,%ebx
 8053ed1:	81 ec 4c 04 00 00    	sub    $0x44c,%esp
 8053ed7:	8b 75 08             	mov    0x8(%ebp),%esi
 8053eda:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8053ee0:	80 38 00             	cmpb   $0x0,(%eax)
 8053ee3:	0f 85 df 03 00 00    	jne    80542c8 <__interceptor_strcat+0x408>
 8053ee9:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8053eef:	8b 10                	mov    (%eax),%edx
 8053ef1:	85 d2                	test   %edx,%edx
 8053ef3:	0f 84 a7 02 00 00    	je     80541a0 <__interceptor_strcat+0x2e0>
 8053ef9:	e8 22 46 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8053efe:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8053f02:	0f 84 d8 00 00 00    	je     8053fe0 <__interceptor_strcat+0x120>
 8053f08:	8b 45 0c             	mov    0xc(%ebp),%eax
 8053f0b:	89 04 24             	mov    %eax,(%esp)
 8053f0e:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8053f14:	89 c7                	mov    %eax,%edi
 8053f16:	83 c7 01             	add    $0x1,%edi
 8053f19:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 8053f1f:	0f 85 03 02 00 00    	jne    8054128 <__interceptor_strcat+0x268>
 8053f25:	89 34 24             	mov    %esi,(%esp)
 8053f28:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8053f2e:	85 c0                	test   %eax,%eax
 8053f30:	89 c2                	mov    %eax,%edx
 8053f32:	0f 85 68 01 00 00    	jne    80540a0 <__interceptor_strcat+0x1e0>
 8053f38:	85 ff                	test   %edi,%edi
 8053f3a:	0f 85 c0 00 00 00    	jne    8054000 <__interceptor_strcat+0x140>
 8053f40:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 8053f46:	85 c0                	test   %eax,%eax
 8053f48:	0f 84 92 00 00 00    	je     8053fe0 <__interceptor_strcat+0x120>
 8053f4e:	01 fa                	add    %edi,%edx
 8053f50:	8d 04 16             	lea    (%esi,%edx,1),%eax
 8053f53:	39 45 0c             	cmp    %eax,0xc(%ebp)
 8053f56:	0f 83 84 00 00 00    	jae    8053fe0 <__interceptor_strcat+0x120>
 8053f5c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8053f5f:	01 f8                	add    %edi,%eax
 8053f61:	39 c6                	cmp    %eax,%esi
 8053f63:	73 7b                	jae    8053fe0 <__interceptor_strcat+0x120>
 8053f65:	89 95 d0 fb ff ff    	mov    %edx,-0x430(%ebp)
 8053f6b:	e8 b0 45 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8053f70:	0f b6 48 4c          	movzbl 0x4c(%eax),%ecx
 8053f74:	89 8d d4 fb ff ff    	mov    %ecx,-0x42c(%ebp)
 8053f7a:	e8 01 0a 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8053f7f:	8b 8d d4 fb ff ff    	mov    -0x42c(%ebp),%ecx
 8053f85:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8053f89:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 8053f90:	00 
 8053f91:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 8053f95:	89 44 24 08          	mov    %eax,0x8(%esp)
 8053f99:	8d 85 e0 fb ff ff    	lea    -0x420(%ebp),%eax
 8053f9f:	89 04 24             	mov    %eax,(%esp)
 8053fa2:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 8053fa8:	e8 c3 84 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 8053fad:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 8053fb3:	8b 95 d0 fb ff ff    	mov    -0x430(%ebp),%edx
 8053fb9:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8053fbd:	89 74 24 04          	mov    %esi,0x4(%esp)
 8053fc1:	89 44 24 14          	mov    %eax,0x14(%esp)
 8053fc5:	8b 45 0c             	mov    0xc(%ebp),%eax
 8053fc8:	89 54 24 08          	mov    %edx,0x8(%esp)
 8053fcc:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8053fd0:	8d 83 c5 3e fd ff    	lea    -0x2c13b(%ebx),%eax
 8053fd6:	89 04 24             	mov    %eax,(%esp)
 8053fd9:	e8 d2 b3 00 00       	call   805f3b0 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE>
 8053fde:	66 90                	xchg   %ax,%ax
 8053fe0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8053fe3:	89 34 24             	mov    %esi,(%esp)
 8053fe6:	89 44 24 04          	mov    %eax,0x4(%esp)
 8053fea:	ff 93 28 bb 02 00    	call   *0x2bb28(%ebx)
 8053ff0:	81 c4 4c 04 00 00    	add    $0x44c,%esp
 8053ff6:	5b                   	pop    %ebx
 8053ff7:	5e                   	pop    %esi
 8053ff8:	5f                   	pop    %edi
 8053ff9:	5d                   	pop    %ebp
 8053ffa:	c3                   	ret    
 8053ffb:	90                   	nop
 8053ffc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054000:	8d 04 16             	lea    (%esi,%edx,1),%eax
 8054003:	83 ff 20             	cmp    $0x20,%edi
 8054006:	89 85 d0 fb ff ff    	mov    %eax,-0x430(%ebp)
 805400c:	77 23                	ja     8054031 <__interceptor_strcat+0x171>
 805400e:	c1 e8 03             	shr    $0x3,%eax
 8054011:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054018:	84 c0                	test   %al,%al
 805401a:	0f 84 20 02 00 00    	je     8054240 <__interceptor_strcat+0x380>
 8054020:	8b 8d d0 fb ff ff    	mov    -0x430(%ebp),%ecx
 8054026:	83 e1 07             	and    $0x7,%ecx
 8054029:	39 c1                	cmp    %eax,%ecx
 805402b:	0f 8c 0f 02 00 00    	jl     8054240 <__interceptor_strcat+0x380>
 8054031:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 8054037:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805403b:	89 95 cc fb ff ff    	mov    %edx,-0x434(%ebp)
 8054041:	89 04 24             	mov    %eax,(%esp)
 8054044:	e8 57 94 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054049:	8b 95 cc fb ff ff    	mov    -0x434(%ebp),%edx
 805404f:	85 c0                	test   %eax,%eax
 8054051:	0f 84 e9 fe ff ff    	je     8053f40 <__interceptor_strcat+0x80>
 8054057:	89 95 cc fb ff ff    	mov    %edx,-0x434(%ebp)
 805405d:	e8 1e 09 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054062:	8b 8d d0 fb ff ff    	mov    -0x430(%ebp),%ecx
 8054068:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805406c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8054073:	00 
 8054074:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054078:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 805407c:	8d 8d e0 fb ff ff    	lea    -0x420(%ebp),%ecx
 8054082:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8054086:	89 04 24             	mov    %eax,(%esp)
 8054089:	e8 22 b6 00 00       	call   805f6b0 <__asan_report_error>
 805408e:	8b 95 cc fb ff ff    	mov    -0x434(%ebp),%edx
 8054094:	e9 a7 fe ff ff       	jmp    8053f40 <__interceptor_strcat+0x80>
 8054099:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80540a0:	83 f8 20             	cmp    $0x20,%eax
 80540a3:	77 21                	ja     80540c6 <__interceptor_strcat+0x206>
 80540a5:	89 f0                	mov    %esi,%eax
 80540a7:	c1 e8 03             	shr    $0x3,%eax
 80540aa:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80540b1:	84 c0                	test   %al,%al
 80540b3:	0f 84 f7 00 00 00    	je     80541b0 <__interceptor_strcat+0x2f0>
 80540b9:	89 f1                	mov    %esi,%ecx
 80540bb:	83 e1 07             	and    $0x7,%ecx
 80540be:	39 c1                	cmp    %eax,%ecx
 80540c0:	0f 8c ea 00 00 00    	jl     80541b0 <__interceptor_strcat+0x2f0>
 80540c6:	89 54 24 04          	mov    %edx,0x4(%esp)
 80540ca:	89 34 24             	mov    %esi,(%esp)
 80540cd:	89 95 d0 fb ff ff    	mov    %edx,-0x430(%ebp)
 80540d3:	e8 c8 93 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80540d8:	8b 95 d0 fb ff ff    	mov    -0x430(%ebp),%edx
 80540de:	85 c0                	test   %eax,%eax
 80540e0:	0f 84 52 fe ff ff    	je     8053f38 <__interceptor_strcat+0x78>
 80540e6:	89 95 d0 fb ff ff    	mov    %edx,-0x430(%ebp)
 80540ec:	e8 8f 08 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80540f1:	8b 95 d0 fb ff ff    	mov    -0x430(%ebp),%edx
 80540f7:	8d 8d e0 fb ff ff    	lea    -0x420(%ebp),%ecx
 80540fd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054104:	00 
 8054105:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8054109:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805410d:	89 54 24 14          	mov    %edx,0x14(%esp)
 8054111:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054115:	89 04 24             	mov    %eax,(%esp)
 8054118:	e8 93 b5 00 00       	call   805f6b0 <__asan_report_error>
 805411d:	8b 95 d0 fb ff ff    	mov    -0x430(%ebp),%edx
 8054123:	e9 10 fe ff ff       	jmp    8053f38 <__interceptor_strcat+0x78>
 8054128:	83 ff 20             	cmp    $0x20,%edi
 805412b:	77 23                	ja     8054150 <__interceptor_strcat+0x290>
 805412d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054130:	c1 e8 03             	shr    $0x3,%eax
 8054133:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805413a:	84 c0                	test   %al,%al
 805413c:	0f 84 b6 00 00 00    	je     80541f8 <__interceptor_strcat+0x338>
 8054142:	8b 55 0c             	mov    0xc(%ebp),%edx
 8054145:	83 e2 07             	and    $0x7,%edx
 8054148:	39 c2                	cmp    %eax,%edx
 805414a:	0f 8c a8 00 00 00    	jl     80541f8 <__interceptor_strcat+0x338>
 8054150:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054153:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8054157:	89 04 24             	mov    %eax,(%esp)
 805415a:	e8 41 93 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805415f:	85 c0                	test   %eax,%eax
 8054161:	0f 84 be fd ff ff    	je     8053f25 <__interceptor_strcat+0x65>
 8054167:	e8 14 08 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805416c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805416f:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 8054175:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8054179:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054180:	00 
 8054181:	89 54 24 08          	mov    %edx,0x8(%esp)
 8054185:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8054189:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805418d:	89 04 24             	mov    %eax,(%esp)
 8054190:	e8 1b b5 00 00       	call   805f6b0 <__asan_report_error>
 8054195:	e9 8b fd ff ff       	jmp    8053f25 <__interceptor_strcat+0x65>
 805419a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80541a0:	e8 1b 4d 00 00       	call   8058ec0 <__asan_init_v1>
 80541a5:	e9 4f fd ff ff       	jmp    8053ef9 <__interceptor_strcat+0x39>
 80541aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80541b0:	8d 4c 16 ff          	lea    -0x1(%esi,%edx,1),%ecx
 80541b4:	89 c8                	mov    %ecx,%eax
 80541b6:	c1 e8 03             	shr    $0x3,%eax
 80541b9:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80541c0:	84 c0                	test   %al,%al
 80541c2:	0f 85 f0 00 00 00    	jne    80542b8 <__interceptor_strcat+0x3f8>
 80541c8:	89 d1                	mov    %edx,%ecx
 80541ca:	d1 e9                	shr    %ecx
 80541cc:	01 f1                	add    %esi,%ecx
 80541ce:	89 c8                	mov    %ecx,%eax
 80541d0:	c1 e8 03             	shr    $0x3,%eax
 80541d3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80541da:	84 c0                	test   %al,%al
 80541dc:	0f 84 56 fd ff ff    	je     8053f38 <__interceptor_strcat+0x78>
 80541e2:	83 e1 07             	and    $0x7,%ecx
 80541e5:	39 c1                	cmp    %eax,%ecx
 80541e7:	0f 8d d9 fe ff ff    	jge    80540c6 <__interceptor_strcat+0x206>
 80541ed:	e9 46 fd ff ff       	jmp    8053f38 <__interceptor_strcat+0x78>
 80541f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80541f8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80541fb:	8d 54 38 ff          	lea    -0x1(%eax,%edi,1),%edx
 80541ff:	89 d0                	mov    %edx,%eax
 8054201:	c1 e8 03             	shr    $0x3,%eax
 8054204:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805420b:	84 c0                	test   %al,%al
 805420d:	0f 85 95 00 00 00    	jne    80542a8 <__interceptor_strcat+0x3e8>
 8054213:	89 fa                	mov    %edi,%edx
 8054215:	d1 ea                	shr    %edx
 8054217:	03 55 0c             	add    0xc(%ebp),%edx
 805421a:	89 d0                	mov    %edx,%eax
 805421c:	c1 e8 03             	shr    $0x3,%eax
 805421f:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054226:	84 c0                	test   %al,%al
 8054228:	0f 84 f7 fc ff ff    	je     8053f25 <__interceptor_strcat+0x65>
 805422e:	83 e2 07             	and    $0x7,%edx
 8054231:	39 c2                	cmp    %eax,%edx
 8054233:	0f 8d 17 ff ff ff    	jge    8054150 <__interceptor_strcat+0x290>
 8054239:	e9 e7 fc ff ff       	jmp    8053f25 <__interceptor_strcat+0x65>
 805423e:	66 90                	xchg   %ax,%ax
 8054240:	8b 8d d0 fb ff ff    	mov    -0x430(%ebp),%ecx
 8054246:	03 8d d4 fb ff ff    	add    -0x42c(%ebp),%ecx
 805424c:	89 c8                	mov    %ecx,%eax
 805424e:	c1 e8 03             	shr    $0x3,%eax
 8054251:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054258:	84 c0                	test   %al,%al
 805425a:	75 34                	jne    8054290 <__interceptor_strcat+0x3d0>
 805425c:	89 f9                	mov    %edi,%ecx
 805425e:	d1 e9                	shr    %ecx
 8054260:	03 8d d0 fb ff ff    	add    -0x430(%ebp),%ecx
 8054266:	89 c8                	mov    %ecx,%eax
 8054268:	c1 e8 03             	shr    $0x3,%eax
 805426b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054272:	84 c0                	test   %al,%al
 8054274:	0f 84 c6 fc ff ff    	je     8053f40 <__interceptor_strcat+0x80>
 805427a:	83 e1 07             	and    $0x7,%ecx
 805427d:	39 c1                	cmp    %eax,%ecx
 805427f:	0f 8d ac fd ff ff    	jge    8054031 <__interceptor_strcat+0x171>
 8054285:	e9 b6 fc ff ff       	jmp    8053f40 <__interceptor_strcat+0x80>
 805428a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8054290:	83 e1 07             	and    $0x7,%ecx
 8054293:	39 c1                	cmp    %eax,%ecx
 8054295:	0f 8d 96 fd ff ff    	jge    8054031 <__interceptor_strcat+0x171>
 805429b:	90                   	nop
 805429c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80542a0:	eb ba                	jmp    805425c <__interceptor_strcat+0x39c>
 80542a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80542a8:	83 e2 07             	and    $0x7,%edx
 80542ab:	39 c2                	cmp    %eax,%edx
 80542ad:	0f 8d 9d fe ff ff    	jge    8054150 <__interceptor_strcat+0x290>
 80542b3:	e9 5b ff ff ff       	jmp    8054213 <__interceptor_strcat+0x353>
 80542b8:	83 e1 07             	and    $0x7,%ecx
 80542bb:	39 c1                	cmp    %eax,%ecx
 80542bd:	0f 8d 03 fe ff ff    	jge    80540c6 <__interceptor_strcat+0x206>
 80542c3:	e9 00 ff ff ff       	jmp    80541c8 <__interceptor_strcat+0x308>
 80542c8:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80542ce:	89 44 24 08          	mov    %eax,0x8(%esp)
 80542d2:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 80542d8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80542df:	00 
 80542e0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80542e7:	00 
 80542e8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80542ef:	00 
 80542f0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80542f7:	00 
 80542f8:	c7 44 24 04 5f 01 00 	movl   $0x15f,0x4(%esp)
 80542ff:	00 
 8054300:	89 04 24             	mov    %eax,(%esp)
 8054303:	e8 a8 e0 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8054308:	90                   	nop
 8054309:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08054310 <__interceptor_strncat>:
 8054310:	55                   	push   %ebp
 8054311:	89 e5                	mov    %esp,%ebp
 8054313:	57                   	push   %edi
 8054314:	56                   	push   %esi
 8054315:	53                   	push   %ebx
 8054316:	e8 d5 57 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805431b:	81 c3 e5 bc 05 00    	add    $0x5bce5,%ebx
 8054321:	81 ec 4c 04 00 00    	sub    $0x44c,%esp
 8054327:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805432d:	80 38 00             	cmpb   $0x0,(%eax)
 8054330:	0f 85 e2 03 00 00    	jne    8054718 <__interceptor_strncat+0x408>
 8054336:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805433c:	8b 10                	mov    (%eax),%edx
 805433e:	85 d2                	test   %edx,%edx
 8054340:	0f 84 8a 02 00 00    	je     80545d0 <__interceptor_strncat+0x2c0>
 8054346:	e8 d5 41 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805434b:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 805434f:	0f 84 53 02 00 00    	je     80545a8 <__interceptor_strncat+0x298>
 8054355:	8b 83 00 bb 02 00    	mov    0x2bb00(%ebx),%eax
 805435b:	85 c0                	test   %eax,%eax
 805435d:	0f 84 7d 02 00 00    	je     80545e0 <__interceptor_strncat+0x2d0>
 8054363:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8054366:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805436a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805436d:	89 0c 24             	mov    %ecx,(%esp)
 8054370:	ff d0                	call   *%eax
 8054372:	89 85 d0 fb ff ff    	mov    %eax,-0x430(%ebp)
 8054378:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 805437e:	8d 70 01             	lea    0x1(%eax),%esi
 8054381:	89 f0                	mov    %esi,%eax
 8054383:	3b 75 10             	cmp    0x10(%ebp),%esi
 8054386:	0f 47 45 10          	cmova  0x10(%ebp),%eax
 805438a:	85 c0                	test   %eax,%eax
 805438c:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 8054392:	74 7c                	je     8054410 <__interceptor_strncat+0x100>
 8054394:	83 f8 20             	cmp    $0x20,%eax
 8054397:	77 23                	ja     80543bc <__interceptor_strncat+0xac>
 8054399:	8b 45 0c             	mov    0xc(%ebp),%eax
 805439c:	c1 e8 03             	shr    $0x3,%eax
 805439f:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80543a6:	84 c0                	test   %al,%al
 80543a8:	0f 84 e2 02 00 00    	je     8054690 <__interceptor_strncat+0x380>
 80543ae:	8b 55 0c             	mov    0xc(%ebp),%edx
 80543b1:	83 e2 07             	and    $0x7,%edx
 80543b4:	39 c2                	cmp    %eax,%edx
 80543b6:	0f 8c d4 02 00 00    	jl     8054690 <__interceptor_strncat+0x380>
 80543bc:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 80543c2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80543c6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80543c9:	89 04 24             	mov    %eax,(%esp)
 80543cc:	e8 cf 90 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80543d1:	85 c0                	test   %eax,%eax
 80543d3:	74 3b                	je     8054410 <__interceptor_strncat+0x100>
 80543d5:	e8 a6 05 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80543da:	8b 8d d4 fb ff ff    	mov    -0x42c(%ebp),%ecx
 80543e0:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 80543e6:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80543ed:	00 
 80543ee:	89 54 24 08          	mov    %edx,0x8(%esp)
 80543f2:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80543f6:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 80543fa:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 80543fd:	89 04 24             	mov    %eax,(%esp)
 8054400:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8054404:	e8 a7 b2 00 00       	call   805f6b0 <__asan_report_error>
 8054409:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8054410:	8b 45 08             	mov    0x8(%ebp),%eax
 8054413:	89 04 24             	mov    %eax,(%esp)
 8054416:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 805441c:	85 c0                	test   %eax,%eax
 805441e:	89 c7                	mov    %eax,%edi
 8054420:	74 6e                	je     8054490 <__interceptor_strncat+0x180>
 8054422:	83 f8 20             	cmp    $0x20,%eax
 8054425:	77 23                	ja     805444a <__interceptor_strncat+0x13a>
 8054427:	8b 45 08             	mov    0x8(%ebp),%eax
 805442a:	c1 e8 03             	shr    $0x3,%eax
 805442d:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054434:	84 c0                	test   %al,%al
 8054436:	0f 84 c4 01 00 00    	je     8054600 <__interceptor_strncat+0x2f0>
 805443c:	8b 55 08             	mov    0x8(%ebp),%edx
 805443f:	83 e2 07             	and    $0x7,%edx
 8054442:	39 c2                	cmp    %eax,%edx
 8054444:	0f 8c b6 01 00 00    	jl     8054600 <__interceptor_strncat+0x2f0>
 805444a:	8b 45 08             	mov    0x8(%ebp),%eax
 805444d:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8054451:	89 04 24             	mov    %eax,(%esp)
 8054454:	e8 47 90 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054459:	85 c0                	test   %eax,%eax
 805445b:	74 33                	je     8054490 <__interceptor_strncat+0x180>
 805445d:	e8 1e 05 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054462:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8054465:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 805446b:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805446f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054476:	00 
 8054477:	89 54 24 08          	mov    %edx,0x8(%esp)
 805447b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 805447f:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054483:	89 04 24             	mov    %eax,(%esp)
 8054486:	e8 25 b2 00 00       	call   805f6b0 <__asan_report_error>
 805448b:	90                   	nop
 805448c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054490:	85 f6                	test   %esi,%esi
 8054492:	0f 84 80 00 00 00    	je     8054518 <__interceptor_strncat+0x208>
 8054498:	8b 55 08             	mov    0x8(%ebp),%edx
 805449b:	01 fa                	add    %edi,%edx
 805449d:	83 fe 20             	cmp    $0x20,%esi
 80544a0:	77 21                	ja     80544c3 <__interceptor_strncat+0x1b3>
 80544a2:	89 d0                	mov    %edx,%eax
 80544a4:	c1 e8 03             	shr    $0x3,%eax
 80544a7:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80544ae:	84 c0                	test   %al,%al
 80544b0:	0f 84 92 01 00 00    	je     8054648 <__interceptor_strncat+0x338>
 80544b6:	89 d1                	mov    %edx,%ecx
 80544b8:	83 e1 07             	and    $0x7,%ecx
 80544bb:	39 c1                	cmp    %eax,%ecx
 80544bd:	0f 8c 85 01 00 00    	jl     8054648 <__interceptor_strncat+0x338>
 80544c3:	89 14 24             	mov    %edx,(%esp)
 80544c6:	89 74 24 04          	mov    %esi,0x4(%esp)
 80544ca:	89 95 cc fb ff ff    	mov    %edx,-0x434(%ebp)
 80544d0:	e8 cb 8f 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80544d5:	8b 95 cc fb ff ff    	mov    -0x434(%ebp),%edx
 80544db:	85 c0                	test   %eax,%eax
 80544dd:	74 39                	je     8054518 <__interceptor_strncat+0x208>
 80544df:	89 95 cc fb ff ff    	mov    %edx,-0x434(%ebp)
 80544e5:	e8 96 04 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80544ea:	8b 95 cc fb ff ff    	mov    -0x434(%ebp),%edx
 80544f0:	89 74 24 14          	mov    %esi,0x14(%esp)
 80544f4:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 80544fb:	00 
 80544fc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054500:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8054504:	8d 95 e0 fb ff ff    	lea    -0x420(%ebp),%edx
 805450a:	89 54 24 08          	mov    %edx,0x8(%esp)
 805450e:	89 04 24             	mov    %eax,(%esp)
 8054511:	e8 9a b1 00 00       	call   805f6b0 <__asan_report_error>
 8054516:	66 90                	xchg   %ax,%ax
 8054518:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 805451e:	85 c0                	test   %eax,%eax
 8054520:	0f 84 82 00 00 00    	je     80545a8 <__interceptor_strncat+0x298>
 8054526:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 805452c:	8d 74 07 01          	lea    0x1(%edi,%eax,1),%esi
 8054530:	8b 45 08             	mov    0x8(%ebp),%eax
 8054533:	01 f0                	add    %esi,%eax
 8054535:	39 45 0c             	cmp    %eax,0xc(%ebp)
 8054538:	73 6e                	jae    80545a8 <__interceptor_strncat+0x298>
 805453a:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 8054540:	03 45 0c             	add    0xc(%ebp),%eax
 8054543:	39 45 08             	cmp    %eax,0x8(%ebp)
 8054546:	73 60                	jae    80545a8 <__interceptor_strncat+0x298>
 8054548:	e8 d3 3f 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805454d:	0f b6 78 4c          	movzbl 0x4c(%eax),%edi
 8054551:	e8 2a 04 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054556:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805455a:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 8054561:	00 
 8054562:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8054566:	8d bd e0 fb ff ff    	lea    -0x420(%ebp),%edi
 805456c:	89 3c 24             	mov    %edi,(%esp)
 805456f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8054573:	e8 f8 7e 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 8054578:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 805457e:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8054582:	89 74 24 08          	mov    %esi,0x8(%esp)
 8054586:	89 44 24 10          	mov    %eax,0x10(%esp)
 805458a:	8b 45 0c             	mov    0xc(%ebp),%eax
 805458d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8054591:	8b 45 08             	mov    0x8(%ebp),%eax
 8054594:	89 44 24 04          	mov    %eax,0x4(%esp)
 8054598:	8d 83 cc 3e fd ff    	lea    -0x2c134(%ebx),%eax
 805459e:	89 04 24             	mov    %eax,(%esp)
 80545a1:	e8 0a ae 00 00       	call   805f3b0 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE>
 80545a6:	66 90                	xchg   %ax,%ax
 80545a8:	8b 45 10             	mov    0x10(%ebp),%eax
 80545ab:	89 44 24 08          	mov    %eax,0x8(%esp)
 80545af:	8b 45 0c             	mov    0xc(%ebp),%eax
 80545b2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80545b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80545b9:	89 04 24             	mov    %eax,(%esp)
 80545bc:	ff 93 24 bb 02 00    	call   *0x2bb24(%ebx)
 80545c2:	81 c4 4c 04 00 00    	add    $0x44c,%esp
 80545c8:	5b                   	pop    %ebx
 80545c9:	5e                   	pop    %esi
 80545ca:	5f                   	pop    %edi
 80545cb:	5d                   	pop    %ebp
 80545cc:	c3                   	ret    
 80545cd:	8d 76 00             	lea    0x0(%esi),%esi
 80545d0:	e8 eb 48 00 00       	call   8058ec0 <__asan_init_v1>
 80545d5:	e9 6c fd ff ff       	jmp    8054346 <__interceptor_strncat+0x36>
 80545da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80545e0:	8b 45 10             	mov    0x10(%ebp),%eax
 80545e3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80545e7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80545ea:	89 04 24             	mov    %eax,(%esp)
 80545ed:	e8 3e d6 00 00       	call   8061c30 <_ZN11__sanitizer16internal_strnlenEPKcm>
 80545f2:	89 85 d0 fb ff ff    	mov    %eax,-0x430(%ebp)
 80545f8:	e9 7b fd ff ff       	jmp    8054378 <__interceptor_strncat+0x68>
 80545fd:	8d 76 00             	lea    0x0(%esi),%esi
 8054600:	8b 45 08             	mov    0x8(%ebp),%eax
 8054603:	8d 54 38 ff          	lea    -0x1(%eax,%edi,1),%edx
 8054607:	89 d0                	mov    %edx,%eax
 8054609:	c1 e8 03             	shr    $0x3,%eax
 805460c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054613:	84 c0                	test   %al,%al
 8054615:	0f 85 ed 00 00 00    	jne    8054708 <__interceptor_strncat+0x3f8>
 805461b:	89 fa                	mov    %edi,%edx
 805461d:	d1 ea                	shr    %edx
 805461f:	03 55 08             	add    0x8(%ebp),%edx
 8054622:	89 d0                	mov    %edx,%eax
 8054624:	c1 e8 03             	shr    $0x3,%eax
 8054627:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805462e:	84 c0                	test   %al,%al
 8054630:	0f 84 5a fe ff ff    	je     8054490 <__interceptor_strncat+0x180>
 8054636:	83 e2 07             	and    $0x7,%edx
 8054639:	39 c2                	cmp    %eax,%edx
 805463b:	0f 8d 09 fe ff ff    	jge    805444a <__interceptor_strncat+0x13a>
 8054641:	e9 4a fe ff ff       	jmp    8054490 <__interceptor_strncat+0x180>
 8054646:	66 90                	xchg   %ax,%ax
 8054648:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 805464e:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8054651:	89 c8                	mov    %ecx,%eax
 8054653:	c1 e8 03             	shr    $0x3,%eax
 8054656:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805465d:	84 c0                	test   %al,%al
 805465f:	0f 85 93 00 00 00    	jne    80546f8 <__interceptor_strncat+0x3e8>
 8054665:	89 f1                	mov    %esi,%ecx
 8054667:	d1 e9                	shr    %ecx
 8054669:	01 d1                	add    %edx,%ecx
 805466b:	89 c8                	mov    %ecx,%eax
 805466d:	c1 e8 03             	shr    $0x3,%eax
 8054670:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054677:	84 c0                	test   %al,%al
 8054679:	0f 84 99 fe ff ff    	je     8054518 <__interceptor_strncat+0x208>
 805467f:	83 e1 07             	and    $0x7,%ecx
 8054682:	39 c1                	cmp    %eax,%ecx
 8054684:	0f 8d 39 fe ff ff    	jge    80544c3 <__interceptor_strncat+0x1b3>
 805468a:	e9 89 fe ff ff       	jmp    8054518 <__interceptor_strncat+0x208>
 805468f:	90                   	nop
 8054690:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054693:	8b bd d4 fb ff ff    	mov    -0x42c(%ebp),%edi
 8054699:	8d 54 38 ff          	lea    -0x1(%eax,%edi,1),%edx
 805469d:	89 d0                	mov    %edx,%eax
 805469f:	c1 e8 03             	shr    $0x3,%eax
 80546a2:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80546a9:	84 c0                	test   %al,%al
 80546ab:	75 33                	jne    80546e0 <__interceptor_strncat+0x3d0>
 80546ad:	8b 95 d4 fb ff ff    	mov    -0x42c(%ebp),%edx
 80546b3:	d1 ea                	shr    %edx
 80546b5:	03 55 0c             	add    0xc(%ebp),%edx
 80546b8:	89 d0                	mov    %edx,%eax
 80546ba:	c1 e8 03             	shr    $0x3,%eax
 80546bd:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80546c4:	84 c0                	test   %al,%al
 80546c6:	0f 84 44 fd ff ff    	je     8054410 <__interceptor_strncat+0x100>
 80546cc:	83 e2 07             	and    $0x7,%edx
 80546cf:	39 c2                	cmp    %eax,%edx
 80546d1:	0f 8d e5 fc ff ff    	jge    80543bc <__interceptor_strncat+0xac>
 80546d7:	e9 34 fd ff ff       	jmp    8054410 <__interceptor_strncat+0x100>
 80546dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80546e0:	83 e2 07             	and    $0x7,%edx
 80546e3:	39 c2                	cmp    %eax,%edx
 80546e5:	0f 8d d1 fc ff ff    	jge    80543bc <__interceptor_strncat+0xac>
 80546eb:	90                   	nop
 80546ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80546f0:	eb bb                	jmp    80546ad <__interceptor_strncat+0x39d>
 80546f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80546f8:	83 e1 07             	and    $0x7,%ecx
 80546fb:	39 c1                	cmp    %eax,%ecx
 80546fd:	0f 8d c0 fd ff ff    	jge    80544c3 <__interceptor_strncat+0x1b3>
 8054703:	e9 5d ff ff ff       	jmp    8054665 <__interceptor_strncat+0x355>
 8054708:	83 e2 07             	and    $0x7,%edx
 805470b:	39 c2                	cmp    %eax,%edx
 805470d:	0f 8d 37 fd ff ff    	jge    805444a <__interceptor_strncat+0x13a>
 8054713:	e9 03 ff ff ff       	jmp    805461b <__interceptor_strncat+0x30b>
 8054718:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 805471e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8054722:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8054728:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805472f:	00 
 8054730:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8054737:	00 
 8054738:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805473f:	00 
 8054740:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054747:	00 
 8054748:	c7 44 24 04 72 01 00 	movl   $0x172,0x4(%esp)
 805474f:	00 
 8054750:	89 04 24             	mov    %eax,(%esp)
 8054753:	e8 58 dc 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8054758:	90                   	nop
 8054759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08054760 <__interceptor_strcmp>:
 8054760:	55                   	push   %ebp
 8054761:	89 e5                	mov    %esp,%ebp
 8054763:	57                   	push   %edi
 8054764:	56                   	push   %esi
 8054765:	53                   	push   %ebx
 8054766:	e8 85 53 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805476b:	81 c3 95 b8 05 00    	add    $0x5b895,%ebx
 8054771:	83 ec 3c             	sub    $0x3c,%esp
 8054774:	8b 75 0c             	mov    0xc(%ebp),%esi
 8054777:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805477d:	8b 00                	mov    (%eax),%eax
 805477f:	85 c0                	test   %eax,%eax
 8054781:	0f 84 49 01 00 00    	je     80548d0 <__interceptor_strcmp+0x170>
 8054787:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805478d:	80 38 00             	cmpb   $0x0,(%eax)
 8054790:	0f 85 ea 01 00 00    	jne    8054980 <__interceptor_strcmp+0x220>
 8054796:	8b 45 08             	mov    0x8(%ebp),%eax
 8054799:	0f b6 0e             	movzbl (%esi),%ecx
 805479c:	0f b6 10             	movzbl (%eax),%edx
 805479f:	84 d2                	test   %dl,%dl
 80547a1:	0f 84 41 01 00 00    	je     80548e8 <__interceptor_strcmp+0x188>
 80547a7:	31 c0                	xor    %eax,%eax
 80547a9:	38 ca                	cmp    %cl,%dl
 80547ab:	74 11                	je     80547be <__interceptor_strcmp+0x5e>
 80547ad:	e9 36 01 00 00       	jmp    80548e8 <__interceptor_strcmp+0x188>
 80547b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80547b8:	38 ca                	cmp    %cl,%dl
 80547ba:	75 16                	jne    80547d2 <__interceptor_strcmp+0x72>
 80547bc:	89 f8                	mov    %edi,%eax
 80547be:	8b 4d 08             	mov    0x8(%ebp),%ecx
 80547c1:	8d 78 01             	lea    0x1(%eax),%edi
 80547c4:	0f b6 54 01 01       	movzbl 0x1(%ecx,%eax,1),%edx
 80547c9:	0f b6 4c 06 01       	movzbl 0x1(%esi,%eax,1),%ecx
 80547ce:	84 d2                	test   %dl,%dl
 80547d0:	75 e6                	jne    80547b8 <__interceptor_strcmp+0x58>
 80547d2:	8d 78 02             	lea    0x2(%eax),%edi
 80547d5:	83 ff 20             	cmp    $0x20,%edi
 80547d8:	0f 86 12 01 00 00    	jbe    80548f0 <__interceptor_strcmp+0x190>
 80547de:	8b 45 08             	mov    0x8(%ebp),%eax
 80547e1:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80547e5:	89 55 d0             	mov    %edx,-0x30(%ebp)
 80547e8:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 80547eb:	89 04 24             	mov    %eax,(%esp)
 80547ee:	e8 ad 8c 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 80547f3:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 80547f6:	8b 55 d0             	mov    -0x30(%ebp),%edx
 80547f9:	85 c0                	test   %eax,%eax
 80547fb:	74 37                	je     8054834 <__interceptor_strcmp+0xd4>
 80547fd:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8054800:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054803:	e8 78 01 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054808:	8b 55 08             	mov    0x8(%ebp),%edx
 805480b:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805480f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054816:	00 
 8054817:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805481b:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805481f:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8054822:	89 54 24 08          	mov    %edx,0x8(%esp)
 8054826:	89 04 24             	mov    %eax,(%esp)
 8054829:	e8 82 ae 00 00       	call   805f6b0 <__asan_report_error>
 805482e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8054831:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054834:	83 ff 20             	cmp    $0x20,%edi
 8054837:	77 2f                	ja     8054868 <__interceptor_strcmp+0x108>
 8054839:	89 f0                	mov    %esi,%eax
 805483b:	c1 e8 03             	shr    $0x3,%eax
 805483e:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054845:	84 c0                	test   %al,%al
 8054847:	88 45 d4             	mov    %al,-0x2c(%ebp)
 805484a:	0f 84 48 01 00 00    	je     8054998 <__interceptor_strcmp+0x238>
 8054850:	89 f0                	mov    %esi,%eax
 8054852:	83 e0 07             	and    $0x7,%eax
 8054855:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8054858:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
 805485c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 805485f:	0f 8c 33 01 00 00    	jl     8054998 <__interceptor_strcmp+0x238>
 8054865:	8d 76 00             	lea    0x0(%esi),%esi
 8054868:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805486c:	89 34 24             	mov    %esi,(%esp)
 805486f:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054872:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8054875:	e8 26 8c 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805487a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 805487d:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054880:	85 c0                	test   %eax,%eax
 8054882:	74 34                	je     80548b8 <__interceptor_strcmp+0x158>
 8054884:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054887:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 805488a:	e8 f1 00 01 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805488f:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8054893:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8054896:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805489a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80548a1:	00 
 80548a2:	89 74 24 08          	mov    %esi,0x8(%esp)
 80548a6:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80548aa:	89 04 24             	mov    %eax,(%esp)
 80548ad:	e8 fe ad 00 00       	call   805f6b0 <__asan_report_error>
 80548b2:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 80548b5:	8b 55 d0             	mov    -0x30(%ebp),%edx
 80548b8:	31 c0                	xor    %eax,%eax
 80548ba:	38 ca                	cmp    %cl,%dl
 80548bc:	74 21                	je     80548df <__interceptor_strcmp+0x17f>
 80548be:	19 c0                	sbb    %eax,%eax
 80548c0:	83 c4 3c             	add    $0x3c,%esp
 80548c3:	5b                   	pop    %ebx
 80548c4:	83 c8 01             	or     $0x1,%eax
 80548c7:	5e                   	pop    %esi
 80548c8:	5f                   	pop    %edi
 80548c9:	5d                   	pop    %ebp
 80548ca:	c3                   	ret    
 80548cb:	90                   	nop
 80548cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80548d0:	8b 45 08             	mov    0x8(%ebp),%eax
 80548d3:	89 74 24 04          	mov    %esi,0x4(%esp)
 80548d7:	89 04 24             	mov    %eax,(%esp)
 80548da:	e8 61 d1 00 00       	call   8061a40 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 80548df:	83 c4 3c             	add    $0x3c,%esp
 80548e2:	5b                   	pop    %ebx
 80548e3:	5e                   	pop    %esi
 80548e4:	5f                   	pop    %edi
 80548e5:	5d                   	pop    %ebp
 80548e6:	c3                   	ret    
 80548e7:	90                   	nop
 80548e8:	bf 01 00 00 00       	mov    $0x1,%edi
 80548ed:	8d 76 00             	lea    0x0(%esi),%esi
 80548f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80548f3:	c1 e8 03             	shr    $0x3,%eax
 80548f6:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 80548fd:	84 c0                	test   %al,%al
 80548ff:	88 45 d4             	mov    %al,-0x2c(%ebp)
 8054902:	74 1c                	je     8054920 <__interceptor_strcmp+0x1c0>
 8054904:	8b 45 08             	mov    0x8(%ebp),%eax
 8054907:	83 e0 07             	and    $0x7,%eax
 805490a:	89 45 d0             	mov    %eax,-0x30(%ebp)
 805490d:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
 8054911:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 8054914:	0f 8d c4 fe ff ff    	jge    80547de <__interceptor_strcmp+0x7e>
 805491a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8054920:	8b 45 08             	mov    0x8(%ebp),%eax
 8054923:	8d 44 38 ff          	lea    -0x1(%eax,%edi,1),%eax
 8054927:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805492a:	c1 e8 03             	shr    $0x3,%eax
 805492d:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054934:	84 c0                	test   %al,%al
 8054936:	88 45 d0             	mov    %al,-0x30(%ebp)
 8054939:	0f 85 c9 00 00 00    	jne    8054a08 <__interceptor_strcmp+0x2a8>
 805493f:	89 f8                	mov    %edi,%eax
 8054941:	d1 e8                	shr    %eax
 8054943:	03 45 08             	add    0x8(%ebp),%eax
 8054946:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054949:	c1 e8 03             	shr    $0x3,%eax
 805494c:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054953:	84 c0                	test   %al,%al
 8054955:	88 45 d0             	mov    %al,-0x30(%ebp)
 8054958:	0f 84 d6 fe ff ff    	je     8054834 <__interceptor_strcmp+0xd4>
 805495e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8054961:	83 e0 07             	and    $0x7,%eax
 8054964:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054967:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 805496b:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 805496e:	0f 8d 6a fe ff ff    	jge    80547de <__interceptor_strcmp+0x7e>
 8054974:	e9 bb fe ff ff       	jmp    8054834 <__interceptor_strcmp+0xd4>
 8054979:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8054980:	8b 45 08             	mov    0x8(%ebp),%eax
 8054983:	89 74 24 04          	mov    %esi,0x4(%esp)
 8054987:	89 04 24             	mov    %eax,(%esp)
 805498a:	ff 93 20 bb 02 00    	call   *0x2bb20(%ebx)
 8054990:	83 c4 3c             	add    $0x3c,%esp
 8054993:	5b                   	pop    %ebx
 8054994:	5e                   	pop    %esi
 8054995:	5f                   	pop    %edi
 8054996:	5d                   	pop    %ebp
 8054997:	c3                   	ret    
 8054998:	8d 44 3e ff          	lea    -0x1(%esi,%edi,1),%eax
 805499c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 805499f:	c1 e8 03             	shr    $0x3,%eax
 80549a2:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 80549a9:	84 c0                	test   %al,%al
 80549ab:	88 45 d0             	mov    %al,-0x30(%ebp)
 80549ae:	75 40                	jne    80549f0 <__interceptor_strcmp+0x290>
 80549b0:	89 f8                	mov    %edi,%eax
 80549b2:	d1 e8                	shr    %eax
 80549b4:	01 f0                	add    %esi,%eax
 80549b6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80549b9:	c1 e8 03             	shr    $0x3,%eax
 80549bc:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 80549c3:	84 c0                	test   %al,%al
 80549c5:	88 45 d0             	mov    %al,-0x30(%ebp)
 80549c8:	0f 84 ea fe ff ff    	je     80548b8 <__interceptor_strcmp+0x158>
 80549ce:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80549d1:	83 e0 07             	and    $0x7,%eax
 80549d4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80549d7:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 80549db:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 80549de:	0f 8d 84 fe ff ff    	jge    8054868 <__interceptor_strcmp+0x108>
 80549e4:	e9 cf fe ff ff       	jmp    80548b8 <__interceptor_strcmp+0x158>
 80549e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80549f0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80549f3:	83 e0 07             	and    $0x7,%eax
 80549f6:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80549f9:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 80549fd:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 8054a00:	0f 8d 62 fe ff ff    	jge    8054868 <__interceptor_strcmp+0x108>
 8054a06:	eb a8                	jmp    80549b0 <__interceptor_strcmp+0x250>
 8054a08:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8054a0b:	83 e0 07             	and    $0x7,%eax
 8054a0e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054a11:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 8054a15:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 8054a18:	0f 8d c0 fd ff ff    	jge    80547de <__interceptor_strcmp+0x7e>
 8054a1e:	e9 1c ff ff ff       	jmp    805493f <__interceptor_strcmp+0x1df>
 8054a23:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8054a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08054a30 <__interceptor_strlen>:
 8054a30:	55                   	push   %ebp
 8054a31:	89 e5                	mov    %esp,%ebp
 8054a33:	57                   	push   %edi
 8054a34:	56                   	push   %esi
 8054a35:	53                   	push   %ebx
 8054a36:	e8 b5 50 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8054a3b:	81 c3 c5 b5 05 00    	add    $0x5b5c5,%ebx
 8054a41:	83 ec 3c             	sub    $0x3c,%esp
 8054a44:	8b 75 08             	mov    0x8(%ebp),%esi
 8054a47:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8054a4d:	8b 00                	mov    (%eax),%eax
 8054a4f:	85 c0                	test   %eax,%eax
 8054a51:	0f 84 e1 00 00 00    	je     8054b38 <__interceptor_strlen+0x108>
 8054a57:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8054a5d:	80 38 00             	cmpb   $0x0,(%eax)
 8054a60:	89 34 24             	mov    %esi,(%esp)
 8054a63:	0f 85 df 00 00 00    	jne    8054b48 <__interceptor_strlen+0x118>
 8054a69:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8054a6f:	89 c7                	mov    %eax,%edi
 8054a71:	e8 aa 3a 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8054a76:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 8054a7a:	75 0c                	jne    8054a88 <__interceptor_strlen+0x58>
 8054a7c:	83 c4 3c             	add    $0x3c,%esp
 8054a7f:	89 f8                	mov    %edi,%eax
 8054a81:	5b                   	pop    %ebx
 8054a82:	5e                   	pop    %esi
 8054a83:	5f                   	pop    %edi
 8054a84:	5d                   	pop    %ebp
 8054a85:	c3                   	ret    
 8054a86:	66 90                	xchg   %ax,%ax
 8054a88:	89 fa                	mov    %edi,%edx
 8054a8a:	83 c2 01             	add    $0x1,%edx
 8054a8d:	74 ed                	je     8054a7c <__interceptor_strlen+0x4c>
 8054a8f:	83 fa 20             	cmp    $0x20,%edx
 8054a92:	77 54                	ja     8054ae8 <__interceptor_strlen+0xb8>
 8054a94:	89 f0                	mov    %esi,%eax
 8054a96:	c1 e8 03             	shr    $0x3,%eax
 8054a99:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054aa0:	84 c0                	test   %al,%al
 8054aa2:	0f 85 b0 00 00 00    	jne    8054b58 <__interceptor_strlen+0x128>
 8054aa8:	8d 4c 16 ff          	lea    -0x1(%esi,%edx,1),%ecx
 8054aac:	89 c8                	mov    %ecx,%eax
 8054aae:	c1 e8 03             	shr    $0x3,%eax
 8054ab1:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054ab8:	84 c0                	test   %al,%al
 8054aba:	74 0c                	je     8054ac8 <__interceptor_strlen+0x98>
 8054abc:	83 e1 07             	and    $0x7,%ecx
 8054abf:	39 c1                	cmp    %eax,%ecx
 8054ac1:	7d 25                	jge    8054ae8 <__interceptor_strlen+0xb8>
 8054ac3:	90                   	nop
 8054ac4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054ac8:	89 d1                	mov    %edx,%ecx
 8054aca:	d1 e9                	shr    %ecx
 8054acc:	01 f1                	add    %esi,%ecx
 8054ace:	89 c8                	mov    %ecx,%eax
 8054ad0:	c1 e8 03             	shr    $0x3,%eax
 8054ad3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054ada:	84 c0                	test   %al,%al
 8054adc:	74 9e                	je     8054a7c <__interceptor_strlen+0x4c>
 8054ade:	83 e1 07             	and    $0x7,%ecx
 8054ae1:	39 c1                	cmp    %eax,%ecx
 8054ae3:	7c 97                	jl     8054a7c <__interceptor_strlen+0x4c>
 8054ae5:	8d 76 00             	lea    0x0(%esi),%esi
 8054ae8:	89 54 24 04          	mov    %edx,0x4(%esp)
 8054aec:	89 34 24             	mov    %esi,(%esp)
 8054aef:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054af2:	e8 a9 89 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054af7:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8054afa:	85 c0                	test   %eax,%eax
 8054afc:	0f 84 7a ff ff ff    	je     8054a7c <__interceptor_strlen+0x4c>
 8054b02:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054b05:	e8 76 fe 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054b0a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8054b0d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054b14:	00 
 8054b15:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8054b19:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054b1d:	89 54 24 14          	mov    %edx,0x14(%esp)
 8054b21:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8054b24:	89 54 24 08          	mov    %edx,0x8(%esp)
 8054b28:	89 04 24             	mov    %eax,(%esp)
 8054b2b:	e8 80 ab 00 00       	call   805f6b0 <__asan_report_error>
 8054b30:	e9 47 ff ff ff       	jmp    8054a7c <__interceptor_strlen+0x4c>
 8054b35:	8d 76 00             	lea    0x0(%esi),%esi
 8054b38:	89 34 24             	mov    %esi,(%esp)
 8054b3b:	e8 10 d0 00 00       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8054b40:	83 c4 3c             	add    $0x3c,%esp
 8054b43:	5b                   	pop    %ebx
 8054b44:	5e                   	pop    %esi
 8054b45:	5f                   	pop    %edi
 8054b46:	5d                   	pop    %ebp
 8054b47:	c3                   	ret    
 8054b48:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8054b4e:	83 c4 3c             	add    $0x3c,%esp
 8054b51:	5b                   	pop    %ebx
 8054b52:	5e                   	pop    %esi
 8054b53:	5f                   	pop    %edi
 8054b54:	5d                   	pop    %ebp
 8054b55:	c3                   	ret    
 8054b56:	66 90                	xchg   %ax,%ax
 8054b58:	89 f1                	mov    %esi,%ecx
 8054b5a:	83 e1 07             	and    $0x7,%ecx
 8054b5d:	39 c1                	cmp    %eax,%ecx
 8054b5f:	7d 87                	jge    8054ae8 <__interceptor_strlen+0xb8>
 8054b61:	e9 42 ff ff ff       	jmp    8054aa8 <__interceptor_strlen+0x78>
 8054b66:	8d 76 00             	lea    0x0(%esi),%esi
 8054b69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08054b70 <__interceptor_strncmp>:
 8054b70:	55                   	push   %ebp
 8054b71:	89 e5                	mov    %esp,%ebp
 8054b73:	57                   	push   %edi
 8054b74:	56                   	push   %esi
 8054b75:	53                   	push   %ebx
 8054b76:	e8 75 4f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8054b7b:	81 c3 85 b4 05 00    	add    $0x5b485,%ebx
 8054b81:	83 ec 3c             	sub    $0x3c,%esp
 8054b84:	8b 75 08             	mov    0x8(%ebp),%esi
 8054b87:	8b 7d 10             	mov    0x10(%ebp),%edi
 8054b8a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8054b90:	8b 00                	mov    (%eax),%eax
 8054b92:	85 c0                	test   %eax,%eax
 8054b94:	0f 84 66 01 00 00    	je     8054d00 <__interceptor_strncmp+0x190>
 8054b9a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8054ba0:	80 38 00             	cmpb   $0x0,(%eax)
 8054ba3:	0f 85 f7 01 00 00    	jne    8054da0 <__interceptor_strncmp+0x230>
 8054ba9:	85 ff                	test   %edi,%edi
 8054bab:	0f 84 87 02 00 00    	je     8054e38 <__interceptor_strncmp+0x2c8>
 8054bb1:	0f b6 16             	movzbl (%esi),%edx
 8054bb4:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054bb7:	84 d2                	test   %dl,%dl
 8054bb9:	0f b6 08             	movzbl (%eax),%ecx
 8054bbc:	0f 84 7f 02 00 00    	je     8054e41 <__interceptor_strncmp+0x2d1>
 8054bc2:	38 ca                	cmp    %cl,%dl
 8054bc4:	0f 85 77 02 00 00    	jne    8054e41 <__interceptor_strncmp+0x2d1>
 8054bca:	31 c0                	xor    %eax,%eax
 8054bcc:	eb 1d                	jmp    8054beb <__interceptor_strncmp+0x7b>
 8054bce:	66 90                	xchg   %ax,%ax
 8054bd0:	0f b6 14 06          	movzbl (%esi,%eax,1),%edx
 8054bd4:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 8054bd7:	84 d2                	test   %dl,%dl
 8054bd9:	0f b6 0c 01          	movzbl (%ecx,%eax,1),%ecx
 8054bdd:	0f 84 15 01 00 00    	je     8054cf8 <__interceptor_strncmp+0x188>
 8054be3:	38 ca                	cmp    %cl,%dl
 8054be5:	0f 85 0d 01 00 00    	jne    8054cf8 <__interceptor_strncmp+0x188>
 8054beb:	83 c0 01             	add    $0x1,%eax
 8054bee:	39 f8                	cmp    %edi,%eax
 8054bf0:	75 de                	jne    8054bd0 <__interceptor_strncmp+0x60>
 8054bf2:	8d 47 01             	lea    0x1(%edi),%eax
 8054bf5:	39 f8                	cmp    %edi,%eax
 8054bf7:	0f 46 f8             	cmovbe %eax,%edi
 8054bfa:	85 ff                	test   %edi,%edi
 8054bfc:	0f 84 de 00 00 00    	je     8054ce0 <__interceptor_strncmp+0x170>
 8054c02:	83 ff 20             	cmp    $0x20,%edi
 8054c05:	0f 86 15 01 00 00    	jbe    8054d20 <__interceptor_strncmp+0x1b0>
 8054c0b:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8054c0f:	89 34 24             	mov    %esi,(%esp)
 8054c12:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054c15:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8054c18:	e8 83 88 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054c1d:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8054c20:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054c23:	85 c0                	test   %eax,%eax
 8054c25:	74 34                	je     8054c5b <__interceptor_strncmp+0xeb>
 8054c27:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054c2a:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8054c2d:	e8 4e fd 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054c32:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8054c36:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8054c39:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8054c3d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054c44:	00 
 8054c45:	89 74 24 08          	mov    %esi,0x8(%esp)
 8054c49:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054c4d:	89 04 24             	mov    %eax,(%esp)
 8054c50:	e8 5b aa 00 00       	call   805f6b0 <__asan_report_error>
 8054c55:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8054c58:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054c5b:	83 ff 20             	cmp    $0x20,%edi
 8054c5e:	77 23                	ja     8054c83 <__interceptor_strncmp+0x113>
 8054c60:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054c63:	c1 e8 03             	shr    $0x3,%eax
 8054c66:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054c6d:	84 c0                	test   %al,%al
 8054c6f:	0f 84 4b 01 00 00    	je     8054dc0 <__interceptor_strncmp+0x250>
 8054c75:	8b 75 0c             	mov    0xc(%ebp),%esi
 8054c78:	83 e6 07             	and    $0x7,%esi
 8054c7b:	39 c6                	cmp    %eax,%esi
 8054c7d:	0f 8c 3d 01 00 00    	jl     8054dc0 <__interceptor_strncmp+0x250>
 8054c83:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054c86:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8054c8a:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054c8d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8054c90:	89 04 24             	mov    %eax,(%esp)
 8054c93:	e8 08 88 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054c98:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8054c9b:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054c9e:	85 c0                	test   %eax,%eax
 8054ca0:	74 3e                	je     8054ce0 <__interceptor_strncmp+0x170>
 8054ca2:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8054ca5:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8054ca8:	e8 d3 fc 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054cad:	8b 75 0c             	mov    0xc(%ebp),%esi
 8054cb0:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8054cb4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054cbb:	00 
 8054cbc:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054cc0:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8054cc4:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8054cc7:	89 74 24 08          	mov    %esi,0x8(%esp)
 8054ccb:	89 04 24             	mov    %eax,(%esp)
 8054cce:	e8 dd a9 00 00       	call   805f6b0 <__asan_report_error>
 8054cd3:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8054cd6:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8054cd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8054ce0:	31 c0                	xor    %eax,%eax
 8054ce2:	38 ca                	cmp    %cl,%dl
 8054ce4:	74 05                	je     8054ceb <__interceptor_strncmp+0x17b>
 8054ce6:	19 c0                	sbb    %eax,%eax
 8054ce8:	83 c8 01             	or     $0x1,%eax
 8054ceb:	83 c4 3c             	add    $0x3c,%esp
 8054cee:	5b                   	pop    %ebx
 8054cef:	5e                   	pop    %esi
 8054cf0:	5f                   	pop    %edi
 8054cf1:	5d                   	pop    %ebp
 8054cf2:	c3                   	ret    
 8054cf3:	90                   	nop
 8054cf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054cf8:	83 c0 01             	add    $0x1,%eax
 8054cfb:	e9 f5 fe ff ff       	jmp    8054bf5 <__interceptor_strncmp+0x85>
 8054d00:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054d03:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8054d07:	89 34 24             	mov    %esi,(%esp)
 8054d0a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8054d0e:	e8 6d cd 00 00       	call   8061a80 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 8054d13:	83 c4 3c             	add    $0x3c,%esp
 8054d16:	5b                   	pop    %ebx
 8054d17:	5e                   	pop    %esi
 8054d18:	5f                   	pop    %edi
 8054d19:	5d                   	pop    %ebp
 8054d1a:	c3                   	ret    
 8054d1b:	90                   	nop
 8054d1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054d20:	89 f0                	mov    %esi,%eax
 8054d22:	c1 e8 03             	shr    $0x3,%eax
 8054d25:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054d2c:	84 c0                	test   %al,%al
 8054d2e:	88 45 d4             	mov    %al,-0x2c(%ebp)
 8054d31:	74 15                	je     8054d48 <__interceptor_strncmp+0x1d8>
 8054d33:	89 f0                	mov    %esi,%eax
 8054d35:	83 e0 07             	and    $0x7,%eax
 8054d38:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8054d3b:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
 8054d3f:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 8054d42:	0f 8d c3 fe ff ff    	jge    8054c0b <__interceptor_strncmp+0x9b>
 8054d48:	8d 44 3e ff          	lea    -0x1(%esi,%edi,1),%eax
 8054d4c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054d4f:	c1 e8 03             	shr    $0x3,%eax
 8054d52:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054d59:	84 c0                	test   %al,%al
 8054d5b:	88 45 d0             	mov    %al,-0x30(%ebp)
 8054d5e:	0f 85 a4 00 00 00    	jne    8054e08 <__interceptor_strncmp+0x298>
 8054d64:	89 f8                	mov    %edi,%eax
 8054d66:	d1 e8                	shr    %eax
 8054d68:	01 f0                	add    %esi,%eax
 8054d6a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054d6d:	c1 e8 03             	shr    $0x3,%eax
 8054d70:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054d77:	84 c0                	test   %al,%al
 8054d79:	88 45 d0             	mov    %al,-0x30(%ebp)
 8054d7c:	0f 84 d9 fe ff ff    	je     8054c5b <__interceptor_strncmp+0xeb>
 8054d82:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8054d85:	83 e0 07             	and    $0x7,%eax
 8054d88:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054d8b:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 8054d8f:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 8054d92:	0f 8d 73 fe ff ff    	jge    8054c0b <__interceptor_strncmp+0x9b>
 8054d98:	e9 be fe ff ff       	jmp    8054c5b <__interceptor_strncmp+0xeb>
 8054d9d:	8d 76 00             	lea    0x0(%esi),%esi
 8054da0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054da3:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8054da7:	89 34 24             	mov    %esi,(%esp)
 8054daa:	89 44 24 04          	mov    %eax,0x4(%esp)
 8054dae:	ff 93 08 bb 02 00    	call   *0x2bb08(%ebx)
 8054db4:	83 c4 3c             	add    $0x3c,%esp
 8054db7:	5b                   	pop    %ebx
 8054db8:	5e                   	pop    %esi
 8054db9:	5f                   	pop    %edi
 8054dba:	5d                   	pop    %ebp
 8054dbb:	c3                   	ret    
 8054dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054dc0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054dc3:	8d 74 38 ff          	lea    -0x1(%eax,%edi,1),%esi
 8054dc7:	89 f0                	mov    %esi,%eax
 8054dc9:	c1 e8 03             	shr    $0x3,%eax
 8054dcc:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054dd3:	84 c0                	test   %al,%al
 8054dd5:	75 51                	jne    8054e28 <__interceptor_strncmp+0x2b8>
 8054dd7:	89 fe                	mov    %edi,%esi
 8054dd9:	d1 ee                	shr    %esi
 8054ddb:	03 75 0c             	add    0xc(%ebp),%esi
 8054dde:	89 f0                	mov    %esi,%eax
 8054de0:	c1 e8 03             	shr    $0x3,%eax
 8054de3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054dea:	84 c0                	test   %al,%al
 8054dec:	0f 84 ee fe ff ff    	je     8054ce0 <__interceptor_strncmp+0x170>
 8054df2:	83 e6 07             	and    $0x7,%esi
 8054df5:	39 c6                	cmp    %eax,%esi
 8054df7:	0f 8d 86 fe ff ff    	jge    8054c83 <__interceptor_strncmp+0x113>
 8054dfd:	e9 de fe ff ff       	jmp    8054ce0 <__interceptor_strncmp+0x170>
 8054e02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8054e08:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8054e0b:	83 e0 07             	and    $0x7,%eax
 8054e0e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8054e11:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 8054e15:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 8054e18:	0f 8d ed fd ff ff    	jge    8054c0b <__interceptor_strncmp+0x9b>
 8054e1e:	e9 41 ff ff ff       	jmp    8054d64 <__interceptor_strncmp+0x1f4>
 8054e23:	90                   	nop
 8054e24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054e28:	83 e6 07             	and    $0x7,%esi
 8054e2b:	39 c6                	cmp    %eax,%esi
 8054e2d:	0f 8d 50 fe ff ff    	jge    8054c83 <__interceptor_strncmp+0x113>
 8054e33:	eb a2                	jmp    8054dd7 <__interceptor_strncmp+0x267>
 8054e35:	8d 76 00             	lea    0x0(%esi),%esi
 8054e38:	31 c9                	xor    %ecx,%ecx
 8054e3a:	31 d2                	xor    %edx,%edx
 8054e3c:	e9 9f fe ff ff       	jmp    8054ce0 <__interceptor_strncmp+0x170>
 8054e41:	b8 01 00 00 00       	mov    $0x1,%eax
 8054e46:	e9 aa fd ff ff       	jmp    8054bf5 <__interceptor_strncmp+0x85>
 8054e4b:	90                   	nop
 8054e4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08054e50 <__interceptor_memcmp>:
 8054e50:	55                   	push   %ebp
 8054e51:	89 e5                	mov    %esp,%ebp
 8054e53:	57                   	push   %edi
 8054e54:	56                   	push   %esi
 8054e55:	53                   	push   %ebx
 8054e56:	e8 95 4c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8054e5b:	81 c3 a5 b1 05 00    	add    $0x5b1a5,%ebx
 8054e61:	83 ec 4c             	sub    $0x4c,%esp
 8054e64:	8b 75 08             	mov    0x8(%ebp),%esi
 8054e67:	8b 7d 10             	mov    0x10(%ebp),%edi
 8054e6a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8054e70:	8b 00                	mov    (%eax),%eax
 8054e72:	85 c0                	test   %eax,%eax
 8054e74:	0f 84 46 01 00 00    	je     8054fc0 <__interceptor_memcmp+0x170>
 8054e7a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8054e80:	80 38 00             	cmpb   $0x0,(%eax)
 8054e83:	0f 85 62 02 00 00    	jne    80550eb <__interceptor_memcmp+0x29b>
 8054e89:	85 ff                	test   %edi,%edi
 8054e8b:	0f 84 47 02 00 00    	je     80550d8 <__interceptor_memcmp+0x288>
 8054e91:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054e94:	0f b6 16             	movzbl (%esi),%edx
 8054e97:	0f b6 08             	movzbl (%eax),%ecx
 8054e9a:	38 ca                	cmp    %cl,%dl
 8054e9c:	0f 85 3f 02 00 00    	jne    80550e1 <__interceptor_memcmp+0x291>
 8054ea2:	31 c0                	xor    %eax,%eax
 8054ea4:	eb 15                	jmp    8054ebb <__interceptor_memcmp+0x6b>
 8054ea6:	66 90                	xchg   %ax,%ax
 8054ea8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 8054eab:	0f b6 14 06          	movzbl (%esi,%eax,1),%edx
 8054eaf:	0f b6 0c 01          	movzbl (%ecx,%eax,1),%ecx
 8054eb3:	38 ca                	cmp    %cl,%dl
 8054eb5:	0f 85 fd 00 00 00    	jne    8054fb8 <__interceptor_memcmp+0x168>
 8054ebb:	83 c0 01             	add    $0x1,%eax
 8054ebe:	39 f8                	cmp    %edi,%eax
 8054ec0:	75 e6                	jne    8054ea8 <__interceptor_memcmp+0x58>
 8054ec2:	8d 47 01             	lea    0x1(%edi),%eax
 8054ec5:	89 d1                	mov    %edx,%ecx
 8054ec7:	39 f8                	cmp    %edi,%eax
 8054ec9:	0f 46 f8             	cmovbe %eax,%edi
 8054ecc:	85 ff                	test   %edi,%edi
 8054ece:	0f 84 cc 00 00 00    	je     8054fa0 <__interceptor_memcmp+0x150>
 8054ed4:	83 ff 20             	cmp    $0x20,%edi
 8054ed7:	77 2c                	ja     8054f05 <__interceptor_memcmp+0xb5>
 8054ed9:	89 f0                	mov    %esi,%eax
 8054edb:	c1 e8 03             	shr    $0x3,%eax
 8054ede:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8054ee5:	84 c0                	test   %al,%al
 8054ee7:	88 45 d4             	mov    %al,-0x2c(%ebp)
 8054eea:	0f 84 80 01 00 00    	je     8055070 <__interceptor_memcmp+0x220>
 8054ef0:	89 f0                	mov    %esi,%eax
 8054ef2:	83 e0 07             	and    $0x7,%eax
 8054ef5:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8054ef8:	0f be 45 d4          	movsbl -0x2c(%ebp),%eax
 8054efc:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 8054eff:	0f 8c 6b 01 00 00    	jl     8055070 <__interceptor_memcmp+0x220>
 8054f05:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8054f09:	89 34 24             	mov    %esi,(%esp)
 8054f0c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 8054f0f:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054f12:	e8 89 85 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054f17:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8054f1a:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 8054f1d:	85 c0                	test   %eax,%eax
 8054f1f:	74 34                	je     8054f55 <__interceptor_memcmp+0x105>
 8054f21:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 8054f24:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054f27:	e8 54 fa 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054f2c:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8054f30:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8054f33:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8054f37:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054f3e:	00 
 8054f3f:	89 74 24 08          	mov    %esi,0x8(%esp)
 8054f43:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054f47:	89 04 24             	mov    %eax,(%esp)
 8054f4a:	e8 61 a7 00 00       	call   805f6b0 <__asan_report_error>
 8054f4f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8054f52:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 8054f55:	83 ff 20             	cmp    $0x20,%edi
 8054f58:	77 23                	ja     8054f7d <__interceptor_memcmp+0x12d>
 8054f5a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054f5d:	c1 e8 03             	shr    $0x3,%eax
 8054f60:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8054f67:	84 c0                	test   %al,%al
 8054f69:	0f 84 b1 00 00 00    	je     8055020 <__interceptor_memcmp+0x1d0>
 8054f6f:	8b 75 0c             	mov    0xc(%ebp),%esi
 8054f72:	83 e6 07             	and    $0x7,%esi
 8054f75:	39 c6                	cmp    %eax,%esi
 8054f77:	0f 8c a3 00 00 00    	jl     8055020 <__interceptor_memcmp+0x1d0>
 8054f7d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054f80:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8054f84:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 8054f87:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054f8a:	89 04 24             	mov    %eax,(%esp)
 8054f8d:	e8 0e 85 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8054f92:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8054f95:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 8054f98:	85 c0                	test   %eax,%eax
 8054f9a:	75 44                	jne    8054fe0 <__interceptor_memcmp+0x190>
 8054f9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054fa0:	31 c0                	xor    %eax,%eax
 8054fa2:	38 ca                	cmp    %cl,%dl
 8054fa4:	74 05                	je     8054fab <__interceptor_memcmp+0x15b>
 8054fa6:	19 c0                	sbb    %eax,%eax
 8054fa8:	83 c8 01             	or     $0x1,%eax
 8054fab:	83 c4 4c             	add    $0x4c,%esp
 8054fae:	5b                   	pop    %ebx
 8054faf:	5e                   	pop    %esi
 8054fb0:	5f                   	pop    %edi
 8054fb1:	5d                   	pop    %ebp
 8054fb2:	c3                   	ret    
 8054fb3:	90                   	nop
 8054fb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054fb8:	83 c0 01             	add    $0x1,%eax
 8054fbb:	e9 07 ff ff ff       	jmp    8054ec7 <__interceptor_memcmp+0x77>
 8054fc0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8054fc3:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8054fc7:	89 34 24             	mov    %esi,(%esp)
 8054fca:	89 44 24 04          	mov    %eax,0x4(%esp)
 8054fce:	e8 7d c8 00 00       	call   8061850 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>
 8054fd3:	83 c4 4c             	add    $0x4c,%esp
 8054fd6:	5b                   	pop    %ebx
 8054fd7:	5e                   	pop    %esi
 8054fd8:	5f                   	pop    %edi
 8054fd9:	5d                   	pop    %ebp
 8054fda:	c3                   	ret    
 8054fdb:	90                   	nop
 8054fdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8054fe0:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 8054fe3:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8054fe6:	e8 95 f9 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8054feb:	8b 75 0c             	mov    0xc(%ebp),%esi
 8054fee:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8054ff2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8054ff9:	00 
 8054ffa:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8054ffe:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8055002:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8055005:	89 74 24 08          	mov    %esi,0x8(%esp)
 8055009:	89 04 24             	mov    %eax,(%esp)
 805500c:	e8 9f a6 00 00       	call   805f6b0 <__asan_report_error>
 8055011:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055014:	8b 4d d0             	mov    -0x30(%ebp),%ecx
 8055017:	eb 87                	jmp    8054fa0 <__interceptor_memcmp+0x150>
 8055019:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8055020:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055023:	8d 74 38 ff          	lea    -0x1(%eax,%edi,1),%esi
 8055027:	89 f0                	mov    %esi,%eax
 8055029:	c1 e8 03             	shr    $0x3,%eax
 805502c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055033:	84 c0                	test   %al,%al
 8055035:	74 0b                	je     8055042 <__interceptor_memcmp+0x1f2>
 8055037:	83 e6 07             	and    $0x7,%esi
 805503a:	39 c6                	cmp    %eax,%esi
 805503c:	0f 8d 3b ff ff ff    	jge    8054f7d <__interceptor_memcmp+0x12d>
 8055042:	89 fe                	mov    %edi,%esi
 8055044:	d1 ee                	shr    %esi
 8055046:	03 75 0c             	add    0xc(%ebp),%esi
 8055049:	89 f0                	mov    %esi,%eax
 805504b:	c1 e8 03             	shr    $0x3,%eax
 805504e:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055055:	84 c0                	test   %al,%al
 8055057:	0f 84 43 ff ff ff    	je     8054fa0 <__interceptor_memcmp+0x150>
 805505d:	83 e6 07             	and    $0x7,%esi
 8055060:	39 c6                	cmp    %eax,%esi
 8055062:	0f 8d 15 ff ff ff    	jge    8054f7d <__interceptor_memcmp+0x12d>
 8055068:	e9 33 ff ff ff       	jmp    8054fa0 <__interceptor_memcmp+0x150>
 805506d:	8d 76 00             	lea    0x0(%esi),%esi
 8055070:	8d 44 3e ff          	lea    -0x1(%esi,%edi,1),%eax
 8055074:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8055077:	c1 e8 03             	shr    $0x3,%eax
 805507a:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 8055081:	84 c0                	test   %al,%al
 8055083:	88 45 d0             	mov    %al,-0x30(%ebp)
 8055086:	74 16                	je     805509e <__interceptor_memcmp+0x24e>
 8055088:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 805508b:	83 e0 07             	and    $0x7,%eax
 805508e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8055091:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 8055095:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 8055098:	0f 8d 67 fe ff ff    	jge    8054f05 <__interceptor_memcmp+0xb5>
 805509e:	89 f8                	mov    %edi,%eax
 80550a0:	d1 e8                	shr    %eax
 80550a2:	01 f0                	add    %esi,%eax
 80550a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80550a7:	c1 e8 03             	shr    $0x3,%eax
 80550aa:	0f b6 80 00 00 00 20 	movzbl 0x20000000(%eax),%eax
 80550b1:	84 c0                	test   %al,%al
 80550b3:	88 45 d0             	mov    %al,-0x30(%ebp)
 80550b6:	0f 84 99 fe ff ff    	je     8054f55 <__interceptor_memcmp+0x105>
 80550bc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80550bf:	83 e0 07             	and    $0x7,%eax
 80550c2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80550c5:	0f be 45 d0          	movsbl -0x30(%ebp),%eax
 80550c9:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 80550cc:	0f 8d 33 fe ff ff    	jge    8054f05 <__interceptor_memcmp+0xb5>
 80550d2:	e9 7e fe ff ff       	jmp    8054f55 <__interceptor_memcmp+0x105>
 80550d7:	90                   	nop
 80550d8:	31 c9                	xor    %ecx,%ecx
 80550da:	31 d2                	xor    %edx,%edx
 80550dc:	e9 bf fe ff ff       	jmp    8054fa0 <__interceptor_memcmp+0x150>
 80550e1:	b8 01 00 00 00       	mov    $0x1,%eax
 80550e6:	e9 dc fd ff ff       	jmp    8054ec7 <__interceptor_memcmp+0x77>
 80550eb:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80550f1:	89 44 24 08          	mov    %eax,0x8(%esp)
 80550f5:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 80550fb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8055102:	00 
 8055103:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805510a:	00 
 805510b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8055112:	00 
 8055113:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805511a:	00 
 805511b:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)
 8055122:	00 
 8055123:	89 04 24             	mov    %eax,(%esp)
 8055126:	e8 85 d2 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805512b:	90                   	nop
 805512c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08055130 <__interceptor_index>:
 8055130:	55                   	push   %ebp
 8055131:	89 e5                	mov    %esp,%ebp
 8055133:	57                   	push   %edi
 8055134:	56                   	push   %esi
 8055135:	53                   	push   %ebx
 8055136:	e8 b5 49 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805513b:	81 c3 c5 ae 05 00    	add    $0x5aec5,%ebx
 8055141:	83 ec 3c             	sub    $0x3c,%esp
 8055144:	8b 75 08             	mov    0x8(%ebp),%esi
 8055147:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805514d:	8b 00                	mov    (%eax),%eax
 805514f:	85 c0                	test   %eax,%eax
 8055151:	74 4d                	je     80551a0 <__interceptor_index+0x70>
 8055153:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8055159:	80 38 00             	cmpb   $0x0,(%eax)
 805515c:	8b 45 0c             	mov    0xc(%ebp),%eax
 805515f:	89 34 24             	mov    %esi,(%esp)
 8055162:	89 44 24 04          	mov    %eax,0x4(%esp)
 8055166:	0f 85 f4 00 00 00    	jne    8055260 <__interceptor_index+0x130>
 805516c:	ff 93 30 bb 02 00    	call   *0x2bb30(%ebx)
 8055172:	89 c7                	mov    %eax,%edi
 8055174:	e8 a7 33 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8055179:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 805517d:	74 13                	je     8055192 <__interceptor_index+0x62>
 805517f:	85 ff                	test   %edi,%edi
 8055181:	0f 84 f9 00 00 00    	je     8055280 <__interceptor_index+0x150>
 8055187:	89 fa                	mov    %edi,%edx
 8055189:	29 f2                	sub    %esi,%edx
 805518b:	83 c2 01             	add    $0x1,%edx
 805518e:	85 d2                	test   %edx,%edx
 8055190:	75 26                	jne    80551b8 <__interceptor_index+0x88>
 8055192:	83 c4 3c             	add    $0x3c,%esp
 8055195:	89 f8                	mov    %edi,%eax
 8055197:	5b                   	pop    %ebx
 8055198:	5e                   	pop    %esi
 8055199:	5f                   	pop    %edi
 805519a:	5d                   	pop    %ebp
 805519b:	c3                   	ret    
 805519c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80551a0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80551a3:	89 34 24             	mov    %esi,(%esp)
 80551a6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80551aa:	e8 31 c9 00 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 80551af:	83 c4 3c             	add    $0x3c,%esp
 80551b2:	5b                   	pop    %ebx
 80551b3:	5e                   	pop    %esi
 80551b4:	5f                   	pop    %edi
 80551b5:	5d                   	pop    %ebp
 80551b6:	c3                   	ret    
 80551b7:	90                   	nop
 80551b8:	83 fa 20             	cmp    $0x20,%edx
 80551bb:	77 53                	ja     8055210 <__interceptor_index+0xe0>
 80551bd:	89 f0                	mov    %esi,%eax
 80551bf:	c1 e8 03             	shr    $0x3,%eax
 80551c2:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80551c9:	84 c0                	test   %al,%al
 80551cb:	0f 85 9f 00 00 00    	jne    8055270 <__interceptor_index+0x140>
 80551d1:	8d 4c 16 ff          	lea    -0x1(%esi,%edx,1),%ecx
 80551d5:	89 c8                	mov    %ecx,%eax
 80551d7:	c1 e8 03             	shr    $0x3,%eax
 80551da:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80551e1:	84 c0                	test   %al,%al
 80551e3:	74 0b                	je     80551f0 <__interceptor_index+0xc0>
 80551e5:	83 e1 07             	and    $0x7,%ecx
 80551e8:	39 c1                	cmp    %eax,%ecx
 80551ea:	7d 24                	jge    8055210 <__interceptor_index+0xe0>
 80551ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80551f0:	89 d1                	mov    %edx,%ecx
 80551f2:	d1 e9                	shr    %ecx
 80551f4:	01 f1                	add    %esi,%ecx
 80551f6:	89 c8                	mov    %ecx,%eax
 80551f8:	c1 e8 03             	shr    $0x3,%eax
 80551fb:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055202:	84 c0                	test   %al,%al
 8055204:	74 8c                	je     8055192 <__interceptor_index+0x62>
 8055206:	83 e1 07             	and    $0x7,%ecx
 8055209:	39 c1                	cmp    %eax,%ecx
 805520b:	7c 85                	jl     8055192 <__interceptor_index+0x62>
 805520d:	8d 76 00             	lea    0x0(%esi),%esi
 8055210:	89 54 24 04          	mov    %edx,0x4(%esp)
 8055214:	89 34 24             	mov    %esi,(%esp)
 8055217:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 805521a:	e8 81 82 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805521f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055222:	85 c0                	test   %eax,%eax
 8055224:	0f 84 68 ff ff ff    	je     8055192 <__interceptor_index+0x62>
 805522a:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 805522d:	e8 4e f7 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055232:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055235:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805523c:	00 
 805523d:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8055241:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8055245:	89 54 24 14          	mov    %edx,0x14(%esp)
 8055249:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 805524c:	89 54 24 08          	mov    %edx,0x8(%esp)
 8055250:	89 04 24             	mov    %eax,(%esp)
 8055253:	e8 58 a4 00 00       	call   805f6b0 <__asan_report_error>
 8055258:	e9 35 ff ff ff       	jmp    8055192 <__interceptor_index+0x62>
 805525d:	8d 76 00             	lea    0x0(%esi),%esi
 8055260:	ff 93 30 bb 02 00    	call   *0x2bb30(%ebx)
 8055266:	83 c4 3c             	add    $0x3c,%esp
 8055269:	5b                   	pop    %ebx
 805526a:	5e                   	pop    %esi
 805526b:	5f                   	pop    %edi
 805526c:	5d                   	pop    %ebp
 805526d:	c3                   	ret    
 805526e:	66 90                	xchg   %ax,%ax
 8055270:	89 f1                	mov    %esi,%ecx
 8055272:	83 e1 07             	and    $0x7,%ecx
 8055275:	39 c1                	cmp    %eax,%ecx
 8055277:	7d 97                	jge    8055210 <__interceptor_index+0xe0>
 8055279:	e9 53 ff ff ff       	jmp    80551d1 <__interceptor_index+0xa1>
 805527e:	66 90                	xchg   %ax,%ax
 8055280:	89 34 24             	mov    %esi,(%esp)
 8055283:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8055289:	8d 50 01             	lea    0x1(%eax),%edx
 805528c:	e9 fd fe ff ff       	jmp    805518e <__interceptor_index+0x5e>
 8055291:	eb 0d                	jmp    80552a0 <__interceptor_memset>
 8055293:	90                   	nop
 8055294:	90                   	nop
 8055295:	90                   	nop
 8055296:	90                   	nop
 8055297:	90                   	nop
 8055298:	90                   	nop
 8055299:	90                   	nop
 805529a:	90                   	nop
 805529b:	90                   	nop
 805529c:	90                   	nop
 805529d:	90                   	nop
 805529e:	90                   	nop
 805529f:	90                   	nop

080552a0 <__interceptor_memset>:
 80552a0:	55                   	push   %ebp
 80552a1:	89 e5                	mov    %esp,%ebp
 80552a3:	57                   	push   %edi
 80552a4:	56                   	push   %esi
 80552a5:	53                   	push   %ebx
 80552a6:	e8 45 48 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80552ab:	81 c3 55 ad 05 00    	add    $0x5ad55,%ebx
 80552b1:	83 ec 3c             	sub    $0x3c,%esp
 80552b4:	8b 7d 08             	mov    0x8(%ebp),%edi
 80552b7:	8b 75 10             	mov    0x10(%ebp),%esi
 80552ba:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80552c0:	8b 00                	mov    (%eax),%eax
 80552c2:	85 c0                	test   %eax,%eax
 80552c4:	0f 84 d6 00 00 00    	je     80553a0 <__interceptor_memset+0x100>
 80552ca:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80552d0:	80 38 00             	cmpb   $0x0,(%eax)
 80552d3:	75 0b                	jne    80552e0 <__interceptor_memset+0x40>
 80552d5:	e8 46 32 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80552da:	80 78 21 00          	cmpb   $0x0,0x21(%eax)
 80552de:	75 20                	jne    8055300 <__interceptor_memset+0x60>
 80552e0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80552e3:	89 74 24 08          	mov    %esi,0x8(%esp)
 80552e7:	89 3c 24             	mov    %edi,(%esp)
 80552ea:	89 44 24 04          	mov    %eax,0x4(%esp)
 80552ee:	ff 93 34 bb 02 00    	call   *0x2bb34(%ebx)
 80552f4:	83 c4 3c             	add    $0x3c,%esp
 80552f7:	5b                   	pop    %ebx
 80552f8:	5e                   	pop    %esi
 80552f9:	5f                   	pop    %edi
 80552fa:	5d                   	pop    %ebp
 80552fb:	c3                   	ret    
 80552fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055300:	85 f6                	test   %esi,%esi
 8055302:	74 dc                	je     80552e0 <__interceptor_memset+0x40>
 8055304:	83 fe 20             	cmp    $0x20,%esi
 8055307:	77 4f                	ja     8055358 <__interceptor_memset+0xb8>
 8055309:	89 f8                	mov    %edi,%eax
 805530b:	c1 e8 03             	shr    $0x3,%eax
 805530e:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055315:	84 c0                	test   %al,%al
 8055317:	0f 85 a3 00 00 00    	jne    80553c0 <__interceptor_memset+0x120>
 805531d:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 8055321:	89 d0                	mov    %edx,%eax
 8055323:	c1 e8 03             	shr    $0x3,%eax
 8055326:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805532d:	84 c0                	test   %al,%al
 805532f:	74 07                	je     8055338 <__interceptor_memset+0x98>
 8055331:	83 e2 07             	and    $0x7,%edx
 8055334:	39 c2                	cmp    %eax,%edx
 8055336:	7d 20                	jge    8055358 <__interceptor_memset+0xb8>
 8055338:	89 f2                	mov    %esi,%edx
 805533a:	d1 ea                	shr    %edx
 805533c:	01 fa                	add    %edi,%edx
 805533e:	89 d0                	mov    %edx,%eax
 8055340:	c1 e8 03             	shr    $0x3,%eax
 8055343:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805534a:	84 c0                	test   %al,%al
 805534c:	74 92                	je     80552e0 <__interceptor_memset+0x40>
 805534e:	83 e2 07             	and    $0x7,%edx
 8055351:	39 c2                	cmp    %eax,%edx
 8055353:	7c 8b                	jl     80552e0 <__interceptor_memset+0x40>
 8055355:	8d 76 00             	lea    0x0(%esi),%esi
 8055358:	89 74 24 04          	mov    %esi,0x4(%esp)
 805535c:	89 3c 24             	mov    %edi,(%esp)
 805535f:	e8 3c 81 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055364:	85 c0                	test   %eax,%eax
 8055366:	0f 84 74 ff ff ff    	je     80552e0 <__interceptor_memset+0x40>
 805536c:	e8 0f f6 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055371:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8055374:	89 74 24 14          	mov    %esi,0x14(%esp)
 8055378:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805537f:	00 
 8055380:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8055384:	89 54 24 08          	mov    %edx,0x8(%esp)
 8055388:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805538c:	89 04 24             	mov    %eax,(%esp)
 805538f:	e8 1c a3 00 00       	call   805f6b0 <__asan_report_error>
 8055394:	e9 47 ff ff ff       	jmp    80552e0 <__interceptor_memset+0x40>
 8055399:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80553a0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80553a3:	89 74 24 08          	mov    %esi,0x8(%esp)
 80553a7:	89 3c 24             	mov    %edi,(%esp)
 80553aa:	89 44 24 04          	mov    %eax,0x4(%esp)
 80553ae:	e8 8d c5 00 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 80553b3:	83 c4 3c             	add    $0x3c,%esp
 80553b6:	5b                   	pop    %ebx
 80553b7:	5e                   	pop    %esi
 80553b8:	5f                   	pop    %edi
 80553b9:	5d                   	pop    %ebp
 80553ba:	c3                   	ret    
 80553bb:	90                   	nop
 80553bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80553c0:	89 fa                	mov    %edi,%edx
 80553c2:	83 e2 07             	and    $0x7,%edx
 80553c5:	39 c2                	cmp    %eax,%edx
 80553c7:	7d 8f                	jge    8055358 <__interceptor_memset+0xb8>
 80553c9:	e9 4f ff ff ff       	jmp    805531d <__interceptor_memset+0x7d>
 80553ce:	66 90                	xchg   %ax,%ax

080553d0 <__interceptor_strdup>:
 80553d0:	55                   	push   %ebp
 80553d1:	89 e5                	mov    %esp,%ebp
 80553d3:	57                   	push   %edi
 80553d4:	56                   	push   %esi
 80553d5:	53                   	push   %ebx
 80553d6:	e8 15 47 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80553db:	81 c3 25 ac 05 00    	add    $0x5ac25,%ebx
 80553e1:	83 ec 3c             	sub    $0x3c,%esp
 80553e4:	8b 75 08             	mov    0x8(%ebp),%esi
 80553e7:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80553ed:	8b 00                	mov    (%eax),%eax
 80553ef:	85 c0                	test   %eax,%eax
 80553f1:	0f 84 e1 00 00 00    	je     80554d8 <__interceptor_strdup+0x108>
 80553f7:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80553fd:	80 38 00             	cmpb   $0x0,(%eax)
 8055400:	0f 85 f0 00 00 00    	jne    80554f6 <__interceptor_strdup+0x126>
 8055406:	e8 15 31 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805540b:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 805540f:	75 17                	jne    8055428 <__interceptor_strdup+0x58>
 8055411:	89 34 24             	mov    %esi,(%esp)
 8055414:	ff 93 18 bb 02 00    	call   *0x2bb18(%ebx)
 805541a:	83 c4 3c             	add    $0x3c,%esp
 805541d:	5b                   	pop    %ebx
 805541e:	5e                   	pop    %esi
 805541f:	5f                   	pop    %edi
 8055420:	5d                   	pop    %ebp
 8055421:	c3                   	ret    
 8055422:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8055428:	89 34 24             	mov    %esi,(%esp)
 805542b:	ff 93 14 bb 02 00    	call   *0x2bb14(%ebx)
 8055431:	83 c0 01             	add    $0x1,%eax
 8055434:	89 c7                	mov    %eax,%edi
 8055436:	74 d9                	je     8055411 <__interceptor_strdup+0x41>
 8055438:	83 f8 20             	cmp    $0x20,%eax
 805543b:	77 53                	ja     8055490 <__interceptor_strdup+0xc0>
 805543d:	89 f0                	mov    %esi,%eax
 805543f:	c1 e8 03             	shr    $0x3,%eax
 8055442:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055449:	84 c0                	test   %al,%al
 805544b:	0f 85 97 00 00 00    	jne    80554e8 <__interceptor_strdup+0x118>
 8055451:	8d 54 3e ff          	lea    -0x1(%esi,%edi,1),%edx
 8055455:	89 d0                	mov    %edx,%eax
 8055457:	c1 e8 03             	shr    $0x3,%eax
 805545a:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055461:	84 c0                	test   %al,%al
 8055463:	74 0b                	je     8055470 <__interceptor_strdup+0xa0>
 8055465:	83 e2 07             	and    $0x7,%edx
 8055468:	39 c2                	cmp    %eax,%edx
 805546a:	7d 24                	jge    8055490 <__interceptor_strdup+0xc0>
 805546c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055470:	89 fa                	mov    %edi,%edx
 8055472:	d1 ea                	shr    %edx
 8055474:	01 f2                	add    %esi,%edx
 8055476:	89 d0                	mov    %edx,%eax
 8055478:	c1 e8 03             	shr    $0x3,%eax
 805547b:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055482:	84 c0                	test   %al,%al
 8055484:	74 8b                	je     8055411 <__interceptor_strdup+0x41>
 8055486:	83 e2 07             	and    $0x7,%edx
 8055489:	39 c2                	cmp    %eax,%edx
 805548b:	7c 84                	jl     8055411 <__interceptor_strdup+0x41>
 805548d:	8d 76 00             	lea    0x0(%esi),%esi
 8055490:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8055494:	89 34 24             	mov    %esi,(%esp)
 8055497:	e8 04 80 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805549c:	85 c0                	test   %eax,%eax
 805549e:	0f 84 6d ff ff ff    	je     8055411 <__interceptor_strdup+0x41>
 80554a4:	e8 d7 f4 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80554a9:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80554ac:	89 7c 24 14          	mov    %edi,0x14(%esp)
 80554b0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80554b7:	00 
 80554b8:	89 74 24 0c          	mov    %esi,0xc(%esp)
 80554bc:	89 54 24 08          	mov    %edx,0x8(%esp)
 80554c0:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80554c4:	89 04 24             	mov    %eax,(%esp)
 80554c7:	e8 e4 a1 00 00       	call   805f6b0 <__asan_report_error>
 80554cc:	e9 40 ff ff ff       	jmp    8055411 <__interceptor_strdup+0x41>
 80554d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80554d8:	89 34 24             	mov    %esi,(%esp)
 80554db:	e8 f0 c4 00 00       	call   80619d0 <_ZN11__sanitizer15internal_strdupEPKc>
 80554e0:	83 c4 3c             	add    $0x3c,%esp
 80554e3:	5b                   	pop    %ebx
 80554e4:	5e                   	pop    %esi
 80554e5:	5f                   	pop    %edi
 80554e6:	5d                   	pop    %ebp
 80554e7:	c3                   	ret    
 80554e8:	89 f2                	mov    %esi,%edx
 80554ea:	83 e2 07             	and    $0x7,%edx
 80554ed:	39 c2                	cmp    %eax,%edx
 80554ef:	7d 9f                	jge    8055490 <__interceptor_strdup+0xc0>
 80554f1:	e9 5b ff ff ff       	jmp    8055451 <__interceptor_strdup+0x81>
 80554f6:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80554fc:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055500:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8055506:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805550d:	00 
 805550e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8055515:	00 
 8055516:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805551d:	00 
 805551e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055525:	00 
 8055526:	c7 44 24 04 b2 01 00 	movl   $0x1b2,0x4(%esp)
 805552d:	00 
 805552e:	89 04 24             	mov    %eax,(%esp)
 8055531:	e8 7a ce 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8055536:	8d 76 00             	lea    0x0(%esi),%esi
 8055539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08055540 <__interceptor_memmove>:
 8055540:	55                   	push   %ebp
 8055541:	89 e5                	mov    %esp,%ebp
 8055543:	57                   	push   %edi
 8055544:	56                   	push   %esi
 8055545:	53                   	push   %ebx
 8055546:	e8 a5 45 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805554b:	81 c3 b5 aa 05 00    	add    $0x5aab5,%ebx
 8055551:	83 ec 3c             	sub    $0x3c,%esp
 8055554:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8055557:	8b 75 10             	mov    0x10(%ebp),%esi
 805555a:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8055560:	8b 00                	mov    (%eax),%eax
 8055562:	85 c0                	test   %eax,%eax
 8055564:	74 1a                	je     8055580 <__interceptor_memmove+0x40>
 8055566:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 805556c:	80 38 00             	cmpb   $0x0,(%eax)
 805556f:	0f 85 43 01 00 00    	jne    80556b8 <__interceptor_memmove+0x178>
 8055575:	e8 a6 2f 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805557a:	80 78 21 00          	cmpb   $0x0,0x21(%eax)
 805557e:	75 20                	jne    80555a0 <__interceptor_memmove+0x60>
 8055580:	8b 45 08             	mov    0x8(%ebp),%eax
 8055583:	89 74 24 08          	mov    %esi,0x8(%esp)
 8055587:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805558b:	89 04 24             	mov    %eax,(%esp)
 805558e:	e8 4d c3 00 00       	call   80618e0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 8055593:	83 c4 3c             	add    $0x3c,%esp
 8055596:	5b                   	pop    %ebx
 8055597:	5e                   	pop    %esi
 8055598:	5f                   	pop    %edi
 8055599:	5d                   	pop    %ebp
 805559a:	c3                   	ret    
 805559b:	90                   	nop
 805559c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80555a0:	85 f6                	test   %esi,%esi
 80555a2:	74 dc                	je     8055580 <__interceptor_memmove+0x40>
 80555a4:	83 fe 20             	cmp    $0x20,%esi
 80555a7:	77 4f                	ja     80555f8 <__interceptor_memmove+0xb8>
 80555a9:	89 f8                	mov    %edi,%eax
 80555ab:	c1 e8 03             	shr    $0x3,%eax
 80555ae:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80555b5:	84 c0                	test   %al,%al
 80555b7:	0f 85 63 01 00 00    	jne    8055720 <__interceptor_memmove+0x1e0>
 80555bd:	8d 54 37 ff          	lea    -0x1(%edi,%esi,1),%edx
 80555c1:	89 d0                	mov    %edx,%eax
 80555c3:	c1 e8 03             	shr    $0x3,%eax
 80555c6:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80555cd:	84 c0                	test   %al,%al
 80555cf:	74 07                	je     80555d8 <__interceptor_memmove+0x98>
 80555d1:	83 e2 07             	and    $0x7,%edx
 80555d4:	39 c2                	cmp    %eax,%edx
 80555d6:	7d 20                	jge    80555f8 <__interceptor_memmove+0xb8>
 80555d8:	89 f2                	mov    %esi,%edx
 80555da:	d1 ea                	shr    %edx
 80555dc:	01 fa                	add    %edi,%edx
 80555de:	89 d0                	mov    %edx,%eax
 80555e0:	c1 e8 03             	shr    $0x3,%eax
 80555e3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80555ea:	84 c0                	test   %al,%al
 80555ec:	74 1e                	je     805560c <__interceptor_memmove+0xcc>
 80555ee:	83 e2 07             	and    $0x7,%edx
 80555f1:	39 c2                	cmp    %eax,%edx
 80555f3:	7c 17                	jl     805560c <__interceptor_memmove+0xcc>
 80555f5:	8d 76 00             	lea    0x0(%esi),%esi
 80555f8:	89 74 24 04          	mov    %esi,0x4(%esp)
 80555fc:	89 3c 24             	mov    %edi,(%esp)
 80555ff:	e8 9c 7e 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055604:	85 c0                	test   %eax,%eax
 8055606:	0f 85 cc 00 00 00    	jne    80556d8 <__interceptor_memmove+0x198>
 805560c:	83 fe 20             	cmp    $0x20,%esi
 805560f:	77 5f                	ja     8055670 <__interceptor_memmove+0x130>
 8055611:	8b 45 08             	mov    0x8(%ebp),%eax
 8055614:	c1 e8 03             	shr    $0x3,%eax
 8055617:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805561e:	84 c0                	test   %al,%al
 8055620:	0f 85 e2 00 00 00    	jne    8055708 <__interceptor_memmove+0x1c8>
 8055626:	8b 45 08             	mov    0x8(%ebp),%eax
 8055629:	8d 54 30 ff          	lea    -0x1(%eax,%esi,1),%edx
 805562d:	89 d0                	mov    %edx,%eax
 805562f:	c1 e8 03             	shr    $0x3,%eax
 8055632:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055639:	84 c0                	test   %al,%al
 805563b:	74 0b                	je     8055648 <__interceptor_memmove+0x108>
 805563d:	83 e2 07             	and    $0x7,%edx
 8055640:	39 c2                	cmp    %eax,%edx
 8055642:	7d 2c                	jge    8055670 <__interceptor_memmove+0x130>
 8055644:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055648:	89 f2                	mov    %esi,%edx
 805564a:	d1 ea                	shr    %edx
 805564c:	03 55 08             	add    0x8(%ebp),%edx
 805564f:	89 d0                	mov    %edx,%eax
 8055651:	c1 e8 03             	shr    $0x3,%eax
 8055654:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805565b:	84 c0                	test   %al,%al
 805565d:	0f 84 1d ff ff ff    	je     8055580 <__interceptor_memmove+0x40>
 8055663:	83 e2 07             	and    $0x7,%edx
 8055666:	39 c2                	cmp    %eax,%edx
 8055668:	0f 8c 12 ff ff ff    	jl     8055580 <__interceptor_memmove+0x40>
 805566e:	66 90                	xchg   %ax,%ax
 8055670:	8b 45 08             	mov    0x8(%ebp),%eax
 8055673:	89 74 24 04          	mov    %esi,0x4(%esp)
 8055677:	89 04 24             	mov    %eax,(%esp)
 805567a:	e8 21 7e 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 805567f:	85 c0                	test   %eax,%eax
 8055681:	0f 84 f9 fe ff ff    	je     8055580 <__interceptor_memmove+0x40>
 8055687:	e8 f4 f2 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805568c:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805568f:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 8055692:	89 74 24 14          	mov    %esi,0x14(%esp)
 8055696:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 805569d:	00 
 805569e:	89 54 24 08          	mov    %edx,0x8(%esp)
 80556a2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80556a6:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80556aa:	89 04 24             	mov    %eax,(%esp)
 80556ad:	e8 fe 9f 00 00       	call   805f6b0 <__asan_report_error>
 80556b2:	e9 c9 fe ff ff       	jmp    8055580 <__interceptor_memmove+0x40>
 80556b7:	90                   	nop
 80556b8:	8b 45 08             	mov    0x8(%ebp),%eax
 80556bb:	89 74 24 08          	mov    %esi,0x8(%esp)
 80556bf:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80556c3:	89 04 24             	mov    %eax,(%esp)
 80556c6:	ff 93 38 bb 02 00    	call   *0x2bb38(%ebx)
 80556cc:	83 c4 3c             	add    $0x3c,%esp
 80556cf:	5b                   	pop    %ebx
 80556d0:	5e                   	pop    %esi
 80556d1:	5f                   	pop    %edi
 80556d2:	5d                   	pop    %ebp
 80556d3:	c3                   	ret    
 80556d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80556d8:	e8 a3 f2 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80556dd:	8d 55 e4             	lea    -0x1c(%ebp),%edx
 80556e0:	89 74 24 14          	mov    %esi,0x14(%esp)
 80556e4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80556eb:	00 
 80556ec:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80556f0:	89 54 24 08          	mov    %edx,0x8(%esp)
 80556f4:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80556f8:	89 04 24             	mov    %eax,(%esp)
 80556fb:	e8 b0 9f 00 00       	call   805f6b0 <__asan_report_error>
 8055700:	e9 07 ff ff ff       	jmp    805560c <__interceptor_memmove+0xcc>
 8055705:	8d 76 00             	lea    0x0(%esi),%esi
 8055708:	8b 55 08             	mov    0x8(%ebp),%edx
 805570b:	83 e2 07             	and    $0x7,%edx
 805570e:	39 c2                	cmp    %eax,%edx
 8055710:	0f 8d 5a ff ff ff    	jge    8055670 <__interceptor_memmove+0x130>
 8055716:	e9 0b ff ff ff       	jmp    8055626 <__interceptor_memmove+0xe6>
 805571b:	90                   	nop
 805571c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055720:	89 fa                	mov    %edi,%edx
 8055722:	83 e2 07             	and    $0x7,%edx
 8055725:	39 c2                	cmp    %eax,%edx
 8055727:	0f 8d cb fe ff ff    	jge    80555f8 <__interceptor_memmove+0xb8>
 805572d:	8d 76 00             	lea    0x0(%esi),%esi
 8055730:	e9 88 fe ff ff       	jmp    80555bd <__interceptor_memmove+0x7d>
 8055735:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055739:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08055740 <__interceptor_strtol>:
 8055740:	55                   	push   %ebp
 8055741:	89 e5                	mov    %esp,%ebp
 8055743:	57                   	push   %edi
 8055744:	56                   	push   %esi
 8055745:	53                   	push   %ebx
 8055746:	e8 a5 43 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805574b:	81 c3 b5 a8 05 00    	add    $0x5a8b5,%ebx
 8055751:	83 ec 3c             	sub    $0x3c,%esp
 8055754:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8055757:	8b 75 10             	mov    0x10(%ebp),%esi
 805575a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8055760:	80 38 00             	cmpb   $0x0,(%eax)
 8055763:	0f 85 8d 01 00 00    	jne    80558f6 <__interceptor_strtol+0x1b6>
 8055769:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805576f:	8b 00                	mov    (%eax),%eax
 8055771:	85 c0                	test   %eax,%eax
 8055773:	74 5b                	je     80557d0 <__interceptor_strtol+0x90>
 8055775:	e8 a6 2d 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805577a:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 805577e:	89 74 24 08          	mov    %esi,0x8(%esp)
 8055782:	74 34                	je     80557b8 <__interceptor_strtol+0x78>
 8055784:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8055787:	89 44 24 04          	mov    %eax,0x4(%esp)
 805578b:	8b 45 08             	mov    0x8(%ebp),%eax
 805578e:	89 04 24             	mov    %eax,(%esp)
 8055791:	ff 93 fc ba 02 00    	call   *0x2bafc(%ebx)
 8055797:	85 ff                	test   %edi,%edi
 8055799:	89 c2                	mov    %eax,%edx
 805579b:	74 05                	je     80557a2 <__interceptor_strtol+0x62>
 805579d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80557a0:	89 07                	mov    %eax,(%edi)
 80557a2:	8d 46 fe             	lea    -0x2(%esi),%eax
 80557a5:	83 f8 22             	cmp    $0x22,%eax
 80557a8:	76 2e                	jbe    80557d8 <__interceptor_strtol+0x98>
 80557aa:	85 f6                	test   %esi,%esi
 80557ac:	74 2a                	je     80557d8 <__interceptor_strtol+0x98>
 80557ae:	83 c4 3c             	add    $0x3c,%esp
 80557b1:	89 d0                	mov    %edx,%eax
 80557b3:	5b                   	pop    %ebx
 80557b4:	5e                   	pop    %esi
 80557b5:	5f                   	pop    %edi
 80557b6:	5d                   	pop    %ebp
 80557b7:	c3                   	ret    
 80557b8:	8b 45 08             	mov    0x8(%ebp),%eax
 80557bb:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80557bf:	89 04 24             	mov    %eax,(%esp)
 80557c2:	ff 93 fc ba 02 00    	call   *0x2bafc(%ebx)
 80557c8:	83 c4 3c             	add    $0x3c,%esp
 80557cb:	5b                   	pop    %ebx
 80557cc:	5e                   	pop    %esi
 80557cd:	5f                   	pop    %edi
 80557ce:	5d                   	pop    %ebp
 80557cf:	c3                   	ret    
 80557d0:	e8 eb 36 00 00       	call   8058ec0 <__asan_init_v1>
 80557d5:	eb 9e                	jmp    8055775 <__interceptor_strtol+0x35>
 80557d7:	90                   	nop
 80557d8:	8b 4d e0             	mov    -0x20(%ebp),%ecx
 80557db:	39 4d 08             	cmp    %ecx,0x8(%ebp)
 80557de:	66 90                	xchg   %ax,%ax
 80557e0:	0f 84 d2 00 00 00    	je     80558b8 <__interceptor_strtol+0x178>
 80557e6:	0f 87 4a 01 00 00    	ja     8055936 <__interceptor_strtol+0x1f6>
 80557ec:	2b 4d 08             	sub    0x8(%ebp),%ecx
 80557ef:	83 c1 01             	add    $0x1,%ecx
 80557f2:	89 ce                	mov    %ecx,%esi
 80557f4:	74 b8                	je     80557ae <__interceptor_strtol+0x6e>
 80557f6:	83 f9 20             	cmp    $0x20,%ecx
 80557f9:	77 65                	ja     8055860 <__interceptor_strtol+0x120>
 80557fb:	8b 45 08             	mov    0x8(%ebp),%eax
 80557fe:	c1 e8 03             	shr    $0x3,%eax
 8055801:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055808:	84 c0                	test   %al,%al
 805580a:	74 0c                	je     8055818 <__interceptor_strtol+0xd8>
 805580c:	8b 4d 08             	mov    0x8(%ebp),%ecx
 805580f:	83 e1 07             	and    $0x7,%ecx
 8055812:	39 c1                	cmp    %eax,%ecx
 8055814:	7d 4a                	jge    8055860 <__interceptor_strtol+0x120>
 8055816:	66 90                	xchg   %ax,%ax
 8055818:	8b 45 08             	mov    0x8(%ebp),%eax
 805581b:	8d 4c 30 ff          	lea    -0x1(%eax,%esi,1),%ecx
 805581f:	89 c8                	mov    %ecx,%eax
 8055821:	c1 e8 03             	shr    $0x3,%eax
 8055824:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805582b:	84 c0                	test   %al,%al
 805582d:	74 09                	je     8055838 <__interceptor_strtol+0xf8>
 805582f:	83 e1 07             	and    $0x7,%ecx
 8055832:	39 c1                	cmp    %eax,%ecx
 8055834:	7d 2a                	jge    8055860 <__interceptor_strtol+0x120>
 8055836:	66 90                	xchg   %ax,%ax
 8055838:	89 f1                	mov    %esi,%ecx
 805583a:	d1 e9                	shr    %ecx
 805583c:	03 4d 08             	add    0x8(%ebp),%ecx
 805583f:	89 c8                	mov    %ecx,%eax
 8055841:	c1 e8 03             	shr    $0x3,%eax
 8055844:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 805584b:	84 c0                	test   %al,%al
 805584d:	0f 84 5b ff ff ff    	je     80557ae <__interceptor_strtol+0x6e>
 8055853:	83 e1 07             	and    $0x7,%ecx
 8055856:	39 c1                	cmp    %eax,%ecx
 8055858:	0f 8c 50 ff ff ff    	jl     80557ae <__interceptor_strtol+0x6e>
 805585e:	66 90                	xchg   %ax,%ax
 8055860:	8b 45 08             	mov    0x8(%ebp),%eax
 8055863:	89 74 24 04          	mov    %esi,0x4(%esp)
 8055867:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 805586a:	89 04 24             	mov    %eax,(%esp)
 805586d:	e8 2e 7c 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055872:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055875:	85 c0                	test   %eax,%eax
 8055877:	0f 84 31 ff ff ff    	je     80557ae <__interceptor_strtol+0x6e>
 805587d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055880:	e8 fb f0 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055885:	8b 55 08             	mov    0x8(%ebp),%edx
 8055888:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
 805588b:	89 74 24 14          	mov    %esi,0x14(%esp)
 805588f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055896:	00 
 8055897:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805589b:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805589f:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80558a3:	89 04 24             	mov    %eax,(%esp)
 80558a6:	e8 05 9e 00 00       	call   805f6b0 <__asan_report_error>
 80558ab:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 80558ae:	e9 fb fe ff ff       	jmp    80557ae <__interceptor_strtol+0x6e>
 80558b3:	90                   	nop
 80558b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80558b8:	8b 7d 08             	mov    0x8(%ebp),%edi
 80558bb:	90                   	nop
 80558bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80558c0:	0f b6 07             	movzbl (%edi),%eax
 80558c3:	3c 20                	cmp    $0x20,%al
 80558c5:	74 21                	je     80558e8 <__interceptor_strtol+0x1a8>
 80558c7:	8d 70 f7             	lea    -0x9(%eax),%esi
 80558ca:	89 f1                	mov    %esi,%ecx
 80558cc:	80 f9 04             	cmp    $0x4,%cl
 80558cf:	76 17                	jbe    80558e8 <__interceptor_strtol+0x1a8>
 80558d1:	3c 2d                	cmp    $0x2d,%al
 80558d3:	75 1b                	jne    80558f0 <__interceptor_strtol+0x1b0>
 80558d5:	83 c7 01             	add    $0x1,%edi
 80558d8:	89 7d e0             	mov    %edi,-0x20(%ebp)
 80558db:	89 f9                	mov    %edi,%ecx
 80558dd:	e9 0a ff ff ff       	jmp    80557ec <__interceptor_strtol+0xac>
 80558e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80558e8:	83 c7 01             	add    $0x1,%edi
 80558eb:	eb d3                	jmp    80558c0 <__interceptor_strtol+0x180>
 80558ed:	8d 76 00             	lea    0x0(%esi),%esi
 80558f0:	3c 2b                	cmp    $0x2b,%al
 80558f2:	74 e1                	je     80558d5 <__interceptor_strtol+0x195>
 80558f4:	eb e2                	jmp    80558d8 <__interceptor_strtol+0x198>
 80558f6:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 80558fc:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055900:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8055906:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805590d:	00 
 805590e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8055915:	00 
 8055916:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805591d:	00 
 805591e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055925:	00 
 8055926:	c7 44 24 04 25 02 00 	movl   $0x225,0x4(%esp)
 805592d:	00 
 805592e:	89 04 24             	mov    %eax,(%esp)
 8055931:	e8 7a ca 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8055936:	8d 83 94 3e fd ff    	lea    -0x2c16c(%ebx),%eax
 805593c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055940:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8055946:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805594d:	00 
 805594e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8055955:	00 
 8055956:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805595d:	00 
 805595e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055965:	00 
 8055966:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)
 805596d:	00 
 805596e:	89 04 24             	mov    %eax,(%esp)
 8055971:	e8 3a ca 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8055976:	8d 76 00             	lea    0x0(%esi),%esi
 8055979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08055980 <__interceptor_strtoll>:
 8055980:	55                   	push   %ebp
 8055981:	89 e5                	mov    %esp,%ebp
 8055983:	57                   	push   %edi
 8055984:	56                   	push   %esi
 8055985:	53                   	push   %ebx
 8055986:	e8 65 41 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805598b:	81 c3 75 a6 05 00    	add    $0x5a675,%ebx
 8055991:	83 ec 4c             	sub    $0x4c,%esp
 8055994:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8055997:	8b 75 10             	mov    0x10(%ebp),%esi
 805599a:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80559a0:	80 38 00             	cmpb   $0x0,(%eax)
 80559a3:	0f 85 9f 01 00 00    	jne    8055b48 <__interceptor_strtoll+0x1c8>
 80559a9:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80559af:	8b 00                	mov    (%eax),%eax
 80559b1:	85 c0                	test   %eax,%eax
 80559b3:	74 63                	je     8055a18 <__interceptor_strtoll+0x98>
 80559b5:	e8 66 2b 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80559ba:	80 78 20 00          	cmpb   $0x0,0x20(%eax)
 80559be:	89 74 24 08          	mov    %esi,0x8(%esp)
 80559c2:	74 3c                	je     8055a00 <__interceptor_strtoll+0x80>
 80559c4:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80559c7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80559cb:	8b 45 08             	mov    0x8(%ebp),%eax
 80559ce:	89 04 24             	mov    %eax,(%esp)
 80559d1:	ff 93 f0 ba 02 00    	call   *0x2baf0(%ebx)
 80559d7:	85 ff                	test   %edi,%edi
 80559d9:	89 d1                	mov    %edx,%ecx
 80559db:	89 c2                	mov    %eax,%edx
 80559dd:	74 05                	je     80559e4 <__interceptor_strtoll+0x64>
 80559df:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80559e2:	89 07                	mov    %eax,(%edi)
 80559e4:	8d 46 fe             	lea    -0x2(%esi),%eax
 80559e7:	83 f8 22             	cmp    $0x22,%eax
 80559ea:	76 34                	jbe    8055a20 <__interceptor_strtoll+0xa0>
 80559ec:	85 f6                	test   %esi,%esi
 80559ee:	74 30                	je     8055a20 <__interceptor_strtoll+0xa0>
 80559f0:	83 c4 4c             	add    $0x4c,%esp
 80559f3:	89 d0                	mov    %edx,%eax
 80559f5:	5b                   	pop    %ebx
 80559f6:	89 ca                	mov    %ecx,%edx
 80559f8:	5e                   	pop    %esi
 80559f9:	5f                   	pop    %edi
 80559fa:	5d                   	pop    %ebp
 80559fb:	c3                   	ret    
 80559fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055a00:	8b 45 08             	mov    0x8(%ebp),%eax
 8055a03:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8055a07:	89 04 24             	mov    %eax,(%esp)
 8055a0a:	ff 93 f0 ba 02 00    	call   *0x2baf0(%ebx)
 8055a10:	83 c4 4c             	add    $0x4c,%esp
 8055a13:	5b                   	pop    %ebx
 8055a14:	5e                   	pop    %esi
 8055a15:	5f                   	pop    %edi
 8055a16:	5d                   	pop    %ebp
 8055a17:	c3                   	ret    
 8055a18:	e8 a3 34 00 00       	call   8058ec0 <__asan_init_v1>
 8055a1d:	eb 96                	jmp    80559b5 <__interceptor_strtoll+0x35>
 8055a1f:	90                   	nop
 8055a20:	8b 75 e0             	mov    -0x20(%ebp),%esi
 8055a23:	39 75 08             	cmp    %esi,0x8(%ebp)
 8055a26:	0f 84 dc 00 00 00    	je     8055b08 <__interceptor_strtoll+0x188>
 8055a2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055a30:	0f 87 52 01 00 00    	ja     8055b88 <__interceptor_strtoll+0x208>
 8055a36:	2b 75 08             	sub    0x8(%ebp),%esi
 8055a39:	83 c6 01             	add    $0x1,%esi
 8055a3c:	74 b2                	je     80559f0 <__interceptor_strtoll+0x70>
 8055a3e:	83 fe 20             	cmp    $0x20,%esi
 8055a41:	77 65                	ja     8055aa8 <__interceptor_strtoll+0x128>
 8055a43:	8b 45 08             	mov    0x8(%ebp),%eax
 8055a46:	c1 e8 03             	shr    $0x3,%eax
 8055a49:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055a50:	84 c0                	test   %al,%al
 8055a52:	74 0c                	je     8055a60 <__interceptor_strtoll+0xe0>
 8055a54:	8b 7d 08             	mov    0x8(%ebp),%edi
 8055a57:	83 e7 07             	and    $0x7,%edi
 8055a5a:	39 c7                	cmp    %eax,%edi
 8055a5c:	7d 4a                	jge    8055aa8 <__interceptor_strtoll+0x128>
 8055a5e:	66 90                	xchg   %ax,%ax
 8055a60:	8b 45 08             	mov    0x8(%ebp),%eax
 8055a63:	8d 7c 30 ff          	lea    -0x1(%eax,%esi,1),%edi
 8055a67:	89 f8                	mov    %edi,%eax
 8055a69:	c1 e8 03             	shr    $0x3,%eax
 8055a6c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055a73:	84 c0                	test   %al,%al
 8055a75:	74 09                	je     8055a80 <__interceptor_strtoll+0x100>
 8055a77:	83 e7 07             	and    $0x7,%edi
 8055a7a:	39 c7                	cmp    %eax,%edi
 8055a7c:	7d 2a                	jge    8055aa8 <__interceptor_strtoll+0x128>
 8055a7e:	66 90                	xchg   %ax,%ax
 8055a80:	89 f7                	mov    %esi,%edi
 8055a82:	d1 ef                	shr    %edi
 8055a84:	03 7d 08             	add    0x8(%ebp),%edi
 8055a87:	89 f8                	mov    %edi,%eax
 8055a89:	c1 e8 03             	shr    $0x3,%eax
 8055a8c:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055a93:	84 c0                	test   %al,%al
 8055a95:	0f 84 55 ff ff ff    	je     80559f0 <__interceptor_strtoll+0x70>
 8055a9b:	83 e7 07             	and    $0x7,%edi
 8055a9e:	39 c7                	cmp    %eax,%edi
 8055aa0:	0f 8c 4a ff ff ff    	jl     80559f0 <__interceptor_strtoll+0x70>
 8055aa6:	66 90                	xchg   %ax,%ax
 8055aa8:	8b 45 08             	mov    0x8(%ebp),%eax
 8055aab:	89 74 24 04          	mov    %esi,0x4(%esp)
 8055aaf:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8055ab2:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8055ab5:	89 04 24             	mov    %eax,(%esp)
 8055ab8:	e8 e3 79 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055abd:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8055ac0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8055ac3:	85 c0                	test   %eax,%eax
 8055ac5:	0f 84 25 ff ff ff    	je     80559f0 <__interceptor_strtoll+0x70>
 8055acb:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8055ace:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
 8055ad1:	e8 aa ee 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055ad6:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8055ad9:	89 74 24 14          	mov    %esi,0x14(%esp)
 8055add:	8d 75 e4             	lea    -0x1c(%ebp),%esi
 8055ae0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055ae7:	00 
 8055ae8:	89 74 24 08          	mov    %esi,0x8(%esp)
 8055aec:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8055af0:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8055af4:	89 04 24             	mov    %eax,(%esp)
 8055af7:	e8 b4 9b 00 00       	call   805f6b0 <__asan_report_error>
 8055afc:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8055aff:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
 8055b02:	e9 e9 fe ff ff       	jmp    80559f0 <__interceptor_strtoll+0x70>
 8055b07:	90                   	nop
 8055b08:	8b 75 08             	mov    0x8(%ebp),%esi
 8055b0b:	90                   	nop
 8055b0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055b10:	0f b6 06             	movzbl (%esi),%eax
 8055b13:	3c 20                	cmp    $0x20,%al
 8055b15:	88 45 d0             	mov    %al,-0x30(%ebp)
 8055b18:	74 1e                	je     8055b38 <__interceptor_strtoll+0x1b8>
 8055b1a:	8d 78 f7             	lea    -0x9(%eax),%edi
 8055b1d:	89 f8                	mov    %edi,%eax
 8055b1f:	3c 04                	cmp    $0x4,%al
 8055b21:	76 15                	jbe    8055b38 <__interceptor_strtoll+0x1b8>
 8055b23:	80 7d d0 2d          	cmpb   $0x2d,-0x30(%ebp)
 8055b27:	75 17                	jne    8055b40 <__interceptor_strtoll+0x1c0>
 8055b29:	83 c6 01             	add    $0x1,%esi
 8055b2c:	89 75 e0             	mov    %esi,-0x20(%ebp)
 8055b2f:	e9 02 ff ff ff       	jmp    8055a36 <__interceptor_strtoll+0xb6>
 8055b34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055b38:	83 c6 01             	add    $0x1,%esi
 8055b3b:	eb d3                	jmp    8055b10 <__interceptor_strtoll+0x190>
 8055b3d:	8d 76 00             	lea    0x0(%esi),%esi
 8055b40:	80 7d d0 2b          	cmpb   $0x2b,-0x30(%ebp)
 8055b44:	74 e3                	je     8055b29 <__interceptor_strtoll+0x1a9>
 8055b46:	eb e4                	jmp    8055b2c <__interceptor_strtoll+0x1ac>
 8055b48:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8055b4e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055b52:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8055b58:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8055b5f:	00 
 8055b60:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8055b67:	00 
 8055b68:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8055b6f:	00 
 8055b70:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055b77:	00 
 8055b78:	c7 44 24 04 5a 02 00 	movl   $0x25a,0x4(%esp)
 8055b7f:	00 
 8055b80:	89 04 24             	mov    %eax,(%esp)
 8055b83:	e8 28 c8 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8055b88:	8d 83 94 3e fd ff    	lea    -0x2c16c(%ebx),%eax
 8055b8e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055b92:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8055b98:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8055b9f:	00 
 8055ba0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8055ba7:	00 
 8055ba8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8055baf:	00 
 8055bb0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055bb7:	00 
 8055bb8:	c7 44 24 04 20 02 00 	movl   $0x220,0x4(%esp)
 8055bbf:	00 
 8055bc0:	89 04 24             	mov    %eax,(%esp)
 8055bc3:	e8 e8 c7 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8055bc8:	90                   	nop
 8055bc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08055bd0 <__interceptor_strcasecmp>:
 8055bd0:	55                   	push   %ebp
 8055bd1:	89 e5                	mov    %esp,%ebp
 8055bd3:	57                   	push   %edi
 8055bd4:	56                   	push   %esi
 8055bd5:	53                   	push   %ebx
 8055bd6:	e8 15 3f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8055bdb:	81 c3 25 a4 05 00    	add    $0x5a425,%ebx
 8055be1:	83 ec 4c             	sub    $0x4c,%esp
 8055be4:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8055bea:	80 38 00             	cmpb   $0x0,(%eax)
 8055bed:	0f 85 40 02 00 00    	jne    8055e33 <__interceptor_strcasecmp+0x263>
 8055bf3:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8055bf9:	8b 00                	mov    (%eax),%eax
 8055bfb:	85 c0                	test   %eax,%eax
 8055bfd:	0f 84 55 01 00 00    	je     8055d58 <__interceptor_strcasecmp+0x188>
 8055c03:	31 c0                	xor    %eax,%eax
 8055c05:	eb 0a                	jmp    8055c11 <__interceptor_strcasecmp+0x41>
 8055c07:	90                   	nop
 8055c08:	80 7d d4 00          	cmpb   $0x0,-0x2c(%ebp)
 8055c0c:	74 3c                	je     8055c4a <__interceptor_strcasecmp+0x7a>
 8055c0e:	83 c0 01             	add    $0x1,%eax
 8055c11:	8b 55 08             	mov    0x8(%ebp),%edx
 8055c14:	0f b6 0c 02          	movzbl (%edx,%eax,1),%ecx
 8055c18:	0f b6 d1             	movzbl %cl,%edx
 8055c1b:	8d 7a bf             	lea    -0x41(%edx),%edi
 8055c1e:	89 fe                	mov    %edi,%esi
 8055c20:	83 fe 19             	cmp    $0x19,%esi
 8055c23:	8b 75 0c             	mov    0xc(%ebp),%esi
 8055c26:	88 4d d4             	mov    %cl,-0x2c(%ebp)
 8055c29:	89 7d cc             	mov    %edi,-0x34(%ebp)
 8055c2c:	8d 7a 20             	lea    0x20(%edx),%edi
 8055c2f:	0f 47 fa             	cmova  %edx,%edi
 8055c32:	0f b6 34 06          	movzbl (%esi,%eax,1),%esi
 8055c36:	8d 4e bf             	lea    -0x41(%esi),%ecx
 8055c39:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 8055c3c:	8d 4e 20             	lea    0x20(%esi),%ecx
 8055c3f:	83 7d d0 19          	cmpl   $0x19,-0x30(%ebp)
 8055c43:	0f 47 ce             	cmova  %esi,%ecx
 8055c46:	39 cf                	cmp    %ecx,%edi
 8055c48:	74 be                	je     8055c08 <__interceptor_strcasecmp+0x38>
 8055c4a:	8d 78 01             	lea    0x1(%eax),%edi
 8055c4d:	83 ff 20             	cmp    $0x20,%edi
 8055c50:	77 3e                	ja     8055c90 <__interceptor_strcasecmp+0xc0>
 8055c52:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c55:	c1 e8 03             	shr    $0x3,%eax
 8055c58:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055c5f:	84 c0                	test   %al,%al
 8055c61:	0f 85 41 01 00 00    	jne    8055da8 <__interceptor_strcasecmp+0x1d8>
 8055c67:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c6a:	8d 4c 38 ff          	lea    -0x1(%eax,%edi,1),%ecx
 8055c6e:	89 c8                	mov    %ecx,%eax
 8055c70:	c1 e8 03             	shr    $0x3,%eax
 8055c73:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055c7a:	84 c0                	test   %al,%al
 8055c7c:	0f 84 86 01 00 00    	je     8055e08 <__interceptor_strcasecmp+0x238>
 8055c82:	83 e1 07             	and    $0x7,%ecx
 8055c85:	39 c1                	cmp    %eax,%ecx
 8055c87:	0f 8c 7b 01 00 00    	jl     8055e08 <__interceptor_strcasecmp+0x238>
 8055c8d:	8d 76 00             	lea    0x0(%esi),%esi
 8055c90:	8b 45 08             	mov    0x8(%ebp),%eax
 8055c93:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8055c97:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055c9a:	89 04 24             	mov    %eax,(%esp)
 8055c9d:	e8 fe 77 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055ca2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055ca5:	85 c0                	test   %eax,%eax
 8055ca7:	0f 85 bb 00 00 00    	jne    8055d68 <__interceptor_strcasecmp+0x198>
 8055cad:	83 ff 20             	cmp    $0x20,%edi
 8055cb0:	77 3e                	ja     8055cf0 <__interceptor_strcasecmp+0x120>
 8055cb2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055cb5:	c1 e8 03             	shr    $0x3,%eax
 8055cb8:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055cbf:	84 c0                	test   %al,%al
 8055cc1:	0f 85 f9 00 00 00    	jne    8055dc0 <__interceptor_strcasecmp+0x1f0>
 8055cc7:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055cca:	8d 4c 38 ff          	lea    -0x1(%eax,%edi,1),%ecx
 8055cce:	89 c8                	mov    %ecx,%eax
 8055cd0:	c1 e8 03             	shr    $0x3,%eax
 8055cd3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055cda:	84 c0                	test   %al,%al
 8055cdc:	0f 84 f6 00 00 00    	je     8055dd8 <__interceptor_strcasecmp+0x208>
 8055ce2:	83 e1 07             	and    $0x7,%ecx
 8055ce5:	39 c1                	cmp    %eax,%ecx
 8055ce7:	0f 8c eb 00 00 00    	jl     8055dd8 <__interceptor_strcasecmp+0x208>
 8055ced:	8d 76 00             	lea    0x0(%esi),%esi
 8055cf0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055cf3:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8055cf7:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055cfa:	89 04 24             	mov    %eax,(%esp)
 8055cfd:	e8 9e 77 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055d02:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055d05:	85 c0                	test   %eax,%eax
 8055d07:	74 31                	je     8055d3a <__interceptor_strcasecmp+0x16a>
 8055d09:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055d0c:	e8 6f ec 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055d11:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
 8055d14:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8055d18:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8055d1b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055d22:	00 
 8055d23:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8055d27:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8055d2b:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8055d2f:	89 04 24             	mov    %eax,(%esp)
 8055d32:	e8 79 99 00 00       	call   805f6b0 <__asan_report_error>
 8055d37:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055d3a:	83 7d cc 19          	cmpl   $0x19,-0x34(%ebp)
 8055d3e:	8d 42 20             	lea    0x20(%edx),%eax
 8055d41:	0f 47 c2             	cmova  %edx,%eax
 8055d44:	83 7d d0 19          	cmpl   $0x19,-0x30(%ebp)
 8055d48:	8d 56 20             	lea    0x20(%esi),%edx
 8055d4b:	0f 46 f2             	cmovbe %edx,%esi
 8055d4e:	83 c4 4c             	add    $0x4c,%esp
 8055d51:	5b                   	pop    %ebx
 8055d52:	29 f0                	sub    %esi,%eax
 8055d54:	5e                   	pop    %esi
 8055d55:	5f                   	pop    %edi
 8055d56:	5d                   	pop    %ebp
 8055d57:	c3                   	ret    
 8055d58:	e8 63 31 00 00       	call   8058ec0 <__asan_init_v1>
 8055d5d:	e9 a1 fe ff ff       	jmp    8055c03 <__interceptor_strcasecmp+0x33>
 8055d62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8055d68:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055d6b:	90                   	nop
 8055d6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055d70:	e8 0b ec 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055d75:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8055d79:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055d80:	00 
 8055d81:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8055d85:	89 c1                	mov    %eax,%ecx
 8055d87:	8b 45 08             	mov    0x8(%ebp),%eax
 8055d8a:	89 0c 24             	mov    %ecx,(%esp)
 8055d8d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8055d91:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8055d94:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055d98:	e8 13 99 00 00       	call   805f6b0 <__asan_report_error>
 8055d9d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055da0:	e9 08 ff ff ff       	jmp    8055cad <__interceptor_strcasecmp+0xdd>
 8055da5:	8d 76 00             	lea    0x0(%esi),%esi
 8055da8:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8055dab:	83 e1 07             	and    $0x7,%ecx
 8055dae:	39 c1                	cmp    %eax,%ecx
 8055db0:	0f 8d da fe ff ff    	jge    8055c90 <__interceptor_strcasecmp+0xc0>
 8055db6:	e9 ac fe ff ff       	jmp    8055c67 <__interceptor_strcasecmp+0x97>
 8055dbb:	90                   	nop
 8055dbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055dc0:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 8055dc3:	83 e1 07             	and    $0x7,%ecx
 8055dc6:	39 c1                	cmp    %eax,%ecx
 8055dc8:	0f 8d 22 ff ff ff    	jge    8055cf0 <__interceptor_strcasecmp+0x120>
 8055dce:	66 90                	xchg   %ax,%ax
 8055dd0:	e9 f2 fe ff ff       	jmp    8055cc7 <__interceptor_strcasecmp+0xf7>
 8055dd5:	8d 76 00             	lea    0x0(%esi),%esi
 8055dd8:	89 f8                	mov    %edi,%eax
 8055dda:	d1 e8                	shr    %eax
 8055ddc:	03 45 0c             	add    0xc(%ebp),%eax
 8055ddf:	89 c1                	mov    %eax,%ecx
 8055de1:	c1 e8 03             	shr    $0x3,%eax
 8055de4:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055deb:	84 c0                	test   %al,%al
 8055ded:	0f 84 47 ff ff ff    	je     8055d3a <__interceptor_strcasecmp+0x16a>
 8055df3:	83 e1 07             	and    $0x7,%ecx
 8055df6:	39 c1                	cmp    %eax,%ecx
 8055df8:	0f 8d f2 fe ff ff    	jge    8055cf0 <__interceptor_strcasecmp+0x120>
 8055dfe:	e9 37 ff ff ff       	jmp    8055d3a <__interceptor_strcasecmp+0x16a>
 8055e03:	90                   	nop
 8055e04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055e08:	89 f8                	mov    %edi,%eax
 8055e0a:	d1 e8                	shr    %eax
 8055e0c:	03 45 08             	add    0x8(%ebp),%eax
 8055e0f:	89 c1                	mov    %eax,%ecx
 8055e11:	c1 e8 03             	shr    $0x3,%eax
 8055e14:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055e1b:	84 c0                	test   %al,%al
 8055e1d:	0f 84 8a fe ff ff    	je     8055cad <__interceptor_strcasecmp+0xdd>
 8055e23:	83 e1 07             	and    $0x7,%ecx
 8055e26:	39 c1                	cmp    %eax,%ecx
 8055e28:	0f 8d 62 fe ff ff    	jge    8055c90 <__interceptor_strcasecmp+0xc0>
 8055e2e:	e9 7a fe ff ff       	jmp    8055cad <__interceptor_strcasecmp+0xdd>
 8055e33:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8055e39:	89 44 24 08          	mov    %eax,0x8(%esp)
 8055e3d:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 8055e43:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8055e4a:	00 
 8055e4b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8055e52:	00 
 8055e53:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8055e5a:	00 
 8055e5b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055e62:	00 
 8055e63:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)
 8055e6a:	00 
 8055e6b:	89 04 24             	mov    %eax,(%esp)
 8055e6e:	e8 3d c5 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8055e73:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8055e79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08055e80 <__interceptor_strncasecmp>:
 8055e80:	55                   	push   %ebp
 8055e81:	89 e5                	mov    %esp,%ebp
 8055e83:	57                   	push   %edi
 8055e84:	56                   	push   %esi
 8055e85:	53                   	push   %ebx
 8055e86:	e8 65 3c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8055e8b:	81 c3 75 a1 05 00    	add    $0x5a175,%ebx
 8055e91:	83 ec 4c             	sub    $0x4c,%esp
 8055e94:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 8055e9a:	80 38 00             	cmpb   $0x0,(%eax)
 8055e9d:	0f 85 77 02 00 00    	jne    805611a <__interceptor_strncasecmp+0x29a>
 8055ea3:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 8055ea9:	8b 10                	mov    (%eax),%edx
 8055eab:	85 d2                	test   %edx,%edx
 8055ead:	0f 84 7d 01 00 00    	je     8056030 <__interceptor_strncasecmp+0x1b0>
 8055eb3:	8b 45 10             	mov    0x10(%ebp),%eax
 8055eb6:	85 c0                	test   %eax,%eax
 8055eb8:	0f 84 4a 02 00 00    	je     8056108 <__interceptor_strncasecmp+0x288>
 8055ebe:	31 c0                	xor    %eax,%eax
 8055ec0:	8b 55 08             	mov    0x8(%ebp),%edx
 8055ec3:	0f b6 0c 02          	movzbl (%edx,%eax,1),%ecx
 8055ec7:	0f b6 d1             	movzbl %cl,%edx
 8055eca:	8d 7a bf             	lea    -0x41(%edx),%edi
 8055ecd:	89 fe                	mov    %edi,%esi
 8055ecf:	83 fe 19             	cmp    $0x19,%esi
 8055ed2:	8b 75 0c             	mov    0xc(%ebp),%esi
 8055ed5:	88 4d d4             	mov    %cl,-0x2c(%ebp)
 8055ed8:	89 7d cc             	mov    %edi,-0x34(%ebp)
 8055edb:	8d 7a 20             	lea    0x20(%edx),%edi
 8055ede:	0f 47 fa             	cmova  %edx,%edi
 8055ee1:	0f b6 34 06          	movzbl (%esi,%eax,1),%esi
 8055ee5:	8d 4e bf             	lea    -0x41(%esi),%ecx
 8055ee8:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 8055eeb:	8d 4e 20             	lea    0x20(%esi),%ecx
 8055eee:	83 7d d0 19          	cmpl   $0x19,-0x30(%ebp)
 8055ef2:	0f 47 ce             	cmova  %esi,%ecx
 8055ef5:	39 cf                	cmp    %ecx,%edi
 8055ef7:	75 0f                	jne    8055f08 <__interceptor_strncasecmp+0x88>
 8055ef9:	80 7d d4 00          	cmpb   $0x0,-0x2c(%ebp)
 8055efd:	74 09                	je     8055f08 <__interceptor_strncasecmp+0x88>
 8055eff:	83 c0 01             	add    $0x1,%eax
 8055f02:	3b 45 10             	cmp    0x10(%ebp),%eax
 8055f05:	75 b9                	jne    8055ec0 <__interceptor_strncasecmp+0x40>
 8055f07:	90                   	nop
 8055f08:	83 c0 01             	add    $0x1,%eax
 8055f0b:	3b 45 10             	cmp    0x10(%ebp),%eax
 8055f0e:	0f 47 45 10          	cmova  0x10(%ebp),%eax
 8055f12:	85 c0                	test   %eax,%eax
 8055f14:	89 c7                	mov    %eax,%edi
 8055f16:	0f 84 f4 00 00 00    	je     8056010 <__interceptor_strncasecmp+0x190>
 8055f1c:	83 f8 20             	cmp    $0x20,%eax
 8055f1f:	77 3f                	ja     8055f60 <__interceptor_strncasecmp+0xe0>
 8055f21:	8b 45 08             	mov    0x8(%ebp),%eax
 8055f24:	c1 e8 03             	shr    $0x3,%eax
 8055f27:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055f2e:	84 c0                	test   %al,%al
 8055f30:	0f 85 5a 01 00 00    	jne    8056090 <__interceptor_strncasecmp+0x210>
 8055f36:	8b 45 08             	mov    0x8(%ebp),%eax
 8055f39:	8d 4c 38 ff          	lea    -0x1(%eax,%edi,1),%ecx
 8055f3d:	89 c8                	mov    %ecx,%eax
 8055f3f:	c1 e8 03             	shr    $0x3,%eax
 8055f42:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055f49:	84 c0                	test   %al,%al
 8055f4b:	0f 84 57 01 00 00    	je     80560a8 <__interceptor_strncasecmp+0x228>
 8055f51:	83 e1 07             	and    $0x7,%ecx
 8055f54:	39 c1                	cmp    %eax,%ecx
 8055f56:	0f 8c 4c 01 00 00    	jl     80560a8 <__interceptor_strncasecmp+0x228>
 8055f5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8055f60:	8b 45 08             	mov    0x8(%ebp),%eax
 8055f63:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8055f67:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055f6a:	89 04 24             	mov    %eax,(%esp)
 8055f6d:	e8 2e 75 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055f72:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055f75:	85 c0                	test   %eax,%eax
 8055f77:	0f 85 c3 00 00 00    	jne    8056040 <__interceptor_strncasecmp+0x1c0>
 8055f7d:	83 ff 20             	cmp    $0x20,%edi
 8055f80:	77 3e                	ja     8055fc0 <__interceptor_strncasecmp+0x140>
 8055f82:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055f85:	c1 e8 03             	shr    $0x3,%eax
 8055f88:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055f8f:	84 c0                	test   %al,%al
 8055f91:	0f 85 e1 00 00 00    	jne    8056078 <__interceptor_strncasecmp+0x1f8>
 8055f97:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055f9a:	8d 4c 38 ff          	lea    -0x1(%eax,%edi,1),%ecx
 8055f9e:	89 c8                	mov    %ecx,%eax
 8055fa0:	c1 e8 03             	shr    $0x3,%eax
 8055fa3:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 8055faa:	84 c0                	test   %al,%al
 8055fac:	0f 84 26 01 00 00    	je     80560d8 <__interceptor_strncasecmp+0x258>
 8055fb2:	83 e1 07             	and    $0x7,%ecx
 8055fb5:	39 c1                	cmp    %eax,%ecx
 8055fb7:	0f 8c 1b 01 00 00    	jl     80560d8 <__interceptor_strncasecmp+0x258>
 8055fbd:	8d 76 00             	lea    0x0(%esi),%esi
 8055fc0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8055fc3:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8055fc7:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055fca:	89 04 24             	mov    %eax,(%esp)
 8055fcd:	e8 ce 74 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8055fd2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8055fd5:	85 c0                	test   %eax,%eax
 8055fd7:	74 37                	je     8056010 <__interceptor_strncasecmp+0x190>
 8055fd9:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8055fdc:	e8 9f e9 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8055fe1:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
 8055fe4:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8055fe8:	8b 7d 0c             	mov    0xc(%ebp),%edi
 8055feb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8055ff2:	00 
 8055ff3:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8055ff7:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8055ffb:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8055fff:	89 04 24             	mov    %eax,(%esp)
 8056002:	e8 a9 96 00 00       	call   805f6b0 <__asan_report_error>
 8056007:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 805600a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8056010:	83 7d cc 19          	cmpl   $0x19,-0x34(%ebp)
 8056014:	8d 42 20             	lea    0x20(%edx),%eax
 8056017:	76 02                	jbe    805601b <__interceptor_strncasecmp+0x19b>
 8056019:	89 d0                	mov    %edx,%eax
 805601b:	83 7d d0 19          	cmpl   $0x19,-0x30(%ebp)
 805601f:	8d 56 20             	lea    0x20(%esi),%edx
 8056022:	0f 46 f2             	cmovbe %edx,%esi
 8056025:	83 c4 4c             	add    $0x4c,%esp
 8056028:	5b                   	pop    %ebx
 8056029:	29 f0                	sub    %esi,%eax
 805602b:	5e                   	pop    %esi
 805602c:	5f                   	pop    %edi
 805602d:	5d                   	pop    %ebp
 805602e:	c3                   	ret    
 805602f:	90                   	nop
 8056030:	e8 8b 2e 00 00       	call   8058ec0 <__asan_init_v1>
 8056035:	e9 79 fe ff ff       	jmp    8055eb3 <__interceptor_strncasecmp+0x33>
 805603a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8056040:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8056043:	e8 38 e9 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8056048:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805604c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8056053:	00 
 8056054:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8056058:	89 c1                	mov    %eax,%ecx
 805605a:	8b 45 08             	mov    0x8(%ebp),%eax
 805605d:	89 0c 24             	mov    %ecx,(%esp)
 8056060:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056064:	8d 45 e4             	lea    -0x1c(%ebp),%eax
 8056067:	89 44 24 08          	mov    %eax,0x8(%esp)
 805606b:	e8 40 96 00 00       	call   805f6b0 <__asan_report_error>
 8056070:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 8056073:	e9 05 ff ff ff       	jmp    8055f7d <__interceptor_strncasecmp+0xfd>
 8056078:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 805607b:	83 e1 07             	and    $0x7,%ecx
 805607e:	39 c1                	cmp    %eax,%ecx
 8056080:	0f 8d 3a ff ff ff    	jge    8055fc0 <__interceptor_strncasecmp+0x140>
 8056086:	e9 0c ff ff ff       	jmp    8055f97 <__interceptor_strncasecmp+0x117>
 805608b:	90                   	nop
 805608c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056090:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8056093:	83 e1 07             	and    $0x7,%ecx
 8056096:	39 c1                	cmp    %eax,%ecx
 8056098:	0f 8d c2 fe ff ff    	jge    8055f60 <__interceptor_strncasecmp+0xe0>
 805609e:	66 90                	xchg   %ax,%ax
 80560a0:	e9 91 fe ff ff       	jmp    8055f36 <__interceptor_strncasecmp+0xb6>
 80560a5:	8d 76 00             	lea    0x0(%esi),%esi
 80560a8:	89 f8                	mov    %edi,%eax
 80560aa:	d1 e8                	shr    %eax
 80560ac:	03 45 08             	add    0x8(%ebp),%eax
 80560af:	89 c1                	mov    %eax,%ecx
 80560b1:	c1 e8 03             	shr    $0x3,%eax
 80560b4:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80560bb:	84 c0                	test   %al,%al
 80560bd:	0f 84 ba fe ff ff    	je     8055f7d <__interceptor_strncasecmp+0xfd>
 80560c3:	83 e1 07             	and    $0x7,%ecx
 80560c6:	39 c1                	cmp    %eax,%ecx
 80560c8:	0f 8d 92 fe ff ff    	jge    8055f60 <__interceptor_strncasecmp+0xe0>
 80560ce:	e9 aa fe ff ff       	jmp    8055f7d <__interceptor_strncasecmp+0xfd>
 80560d3:	90                   	nop
 80560d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80560d8:	89 f8                	mov    %edi,%eax
 80560da:	d1 e8                	shr    %eax
 80560dc:	03 45 0c             	add    0xc(%ebp),%eax
 80560df:	89 c1                	mov    %eax,%ecx
 80560e1:	c1 e8 03             	shr    $0x3,%eax
 80560e4:	0f be 80 00 00 00 20 	movsbl 0x20000000(%eax),%eax
 80560eb:	84 c0                	test   %al,%al
 80560ed:	0f 84 1d ff ff ff    	je     8056010 <__interceptor_strncasecmp+0x190>
 80560f3:	83 e1 07             	and    $0x7,%ecx
 80560f6:	39 c1                	cmp    %eax,%ecx
 80560f8:	0f 8d c2 fe ff ff    	jge    8055fc0 <__interceptor_strncasecmp+0x140>
 80560fe:	e9 0d ff ff ff       	jmp    8056010 <__interceptor_strncasecmp+0x190>
 8056103:	90                   	nop
 8056104:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056108:	31 d2                	xor    %edx,%edx
 805610a:	31 f6                	xor    %esi,%esi
 805610c:	c7 45 d0 bf ff ff ff 	movl   $0xffffffbf,-0x30(%ebp)
 8056113:	89 d0                	mov    %edx,%eax
 8056115:	e9 01 ff ff ff       	jmp    805601b <__interceptor_strncasecmp+0x19b>
 805611a:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8056120:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056124:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 805612a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8056131:	00 
 8056132:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8056139:	00 
 805613a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8056141:	00 
 8056142:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8056149:	00 
 805614a:	c7 44 24 04 da 01 00 	movl   $0x1da,0x4(%esp)
 8056151:	00 
 8056152:	89 04 24             	mov    %eax,(%esp)
 8056155:	e8 56 c2 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805615a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08056160 <_ZN6__asan13SetThreadNameEPKc>:
 8056160:	53                   	push   %ebx
 8056161:	e8 8a 39 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8056166:	81 c3 9a 9e 05 00    	add    $0x59e9a,%ebx
 805616c:	83 ec 18             	sub    $0x18,%esp
 805616f:	e8 fc 37 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8056174:	89 04 24             	mov    %eax,(%esp)
 8056177:	e8 04 3a 00 00       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805617c:	85 c0                	test   %eax,%eax
 805617e:	74 1f                	je     805619f <_ZN6__asan13SetThreadNameEPKc+0x3f>
 8056180:	8b 54 24 20          	mov    0x20(%esp),%edx
 8056184:	c7 44 24 08 7f 00 00 	movl   $0x7f,0x8(%esp)
 805618b:	00 
 805618c:	89 54 24 04          	mov    %edx,0x4(%esp)
 8056190:	8b 00                	mov    (%eax),%eax
 8056192:	05 18 04 00 00       	add    $0x418,%eax
 8056197:	89 04 24             	mov    %eax,(%esp)
 805619a:	e8 41 ba 00 00       	call   8061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 805619f:	83 c4 18             	add    $0x18,%esp
 80561a2:	5b                   	pop    %ebx
 80561a3:	c3                   	ret    
 80561a4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80561aa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

080561b0 <__interceptor_prctl>:
 80561b0:	55                   	push   %ebp
 80561b1:	57                   	push   %edi
 80561b2:	56                   	push   %esi
 80561b3:	53                   	push   %ebx
 80561b4:	e8 37 39 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80561b9:	81 c3 47 9e 05 00    	add    $0x59e47,%ebx
 80561bf:	83 ec 4c             	sub    $0x4c,%esp
 80561c2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80561c8:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 80561cc:	31 c0                	xor    %eax,%eax
 80561ce:	8b 74 24 60          	mov    0x60(%esp),%esi
 80561d2:	8b 7c 24 64          	mov    0x64(%esp),%edi
 80561d6:	8d 83 10 bc 02 00    	lea    0x2bc10(%ebx),%eax
 80561dc:	80 38 00             	cmpb   $0x0,(%eax)
 80561df:	0f 85 87 00 00 00    	jne    805626c <__interceptor_prctl+0xbc>
 80561e5:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 80561eb:	8b 00                	mov    (%eax),%eax
 80561ed:	85 c0                	test   %eax,%eax
 80561ef:	74 47                	je     8056238 <__interceptor_prctl+0x88>
 80561f1:	8b 44 24 70          	mov    0x70(%esp),%eax
 80561f5:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80561f9:	89 34 24             	mov    %esi,(%esp)
 80561fc:	89 44 24 10          	mov    %eax,0x10(%esp)
 8056200:	8b 44 24 6c          	mov    0x6c(%esp),%eax
 8056204:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056208:	8b 44 24 68          	mov    0x68(%esp),%eax
 805620c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056210:	ff 93 c4 bb 02 00    	call   *0x2bbc4(%ebx)
 8056216:	83 fe 0f             	cmp    $0xf,%esi
 8056219:	89 c5                	mov    %eax,%ebp
 805621b:	74 23                	je     8056240 <__interceptor_prctl+0x90>
 805621d:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 8056221:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 8056228:	89 e8                	mov    %ebp,%eax
 805622a:	75 3b                	jne    8056267 <__interceptor_prctl+0xb7>
 805622c:	83 c4 4c             	add    $0x4c,%esp
 805622f:	5b                   	pop    %ebx
 8056230:	5e                   	pop    %esi
 8056231:	5f                   	pop    %edi
 8056232:	5d                   	pop    %ebp
 8056233:	c3                   	ret    
 8056234:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056238:	e8 83 2c 00 00       	call   8058ec0 <__asan_init_v1>
 805623d:	eb b2                	jmp    80561f1 <__interceptor_prctl+0x41>
 805623f:	90                   	nop
 8056240:	8d 74 24 2c          	lea    0x2c(%esp),%esi
 8056244:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)
 805624b:	00 
 805624c:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8056250:	89 34 24             	mov    %esi,(%esp)
 8056253:	e8 88 b9 00 00       	call   8061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 8056258:	89 34 24             	mov    %esi,(%esp)
 805625b:	c6 44 24 3b 00       	movb   $0x0,0x3b(%esp)
 8056260:	e8 fb fe ff ff       	call   8056160 <_ZN6__asan13SetThreadNameEPKc>
 8056265:	eb b6                	jmp    805621d <__interceptor_prctl+0x6d>
 8056267:	e8 54 c9 02 00       	call   8082bc0 <__stack_chk_fail_local>
 805626c:	8d 83 fc 36 fd ff    	lea    -0x2c904(%ebx),%eax
 8056272:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056276:	8d 83 20 37 fd ff    	lea    -0x2c8e0(%ebx),%eax
 805627c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8056283:	00 
 8056284:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805628b:	00 
 805628c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8056293:	00 
 8056294:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805629b:	00 
 805629c:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)
 80562a3:	00 
 80562a4:	89 04 24             	mov    %eax,(%esp)
 80562a7:	e8 04 c1 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80562ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080562b0 <_ZN6__asan26InitializeAsanInterceptorsEv>:
 80562b0:	53                   	push   %ebx
 80562b1:	e8 3a 38 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80562b6:	81 c3 4a 9d 05 00    	add    $0x59d4a,%ebx
 80562bc:	83 ec 28             	sub    $0x28,%esp
 80562bf:	80 bb e0 bb 02 00 00 	cmpb   $0x0,0x2bbe0(%ebx)
 80562c6:	0f 85 c7 10 00 00    	jne    8057393 <_ZN6__asan26InitializeAsanInterceptorsEv+0x10e3>
 80562cc:	8d 83 f0 12 fa ff    	lea    -0x5ed10(%ebx),%eax
 80562d2:	c6 83 e0 bb 02 00 01 	movb   $0x1,0x2bbe0(%ebx)
 80562d9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80562dd:	8d 83 f0 12 fa ff    	lea    -0x5ed10(%ebx),%eax
 80562e3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80562e7:	8d 83 dc bb 02 00    	lea    0x2bbdc(%ebx),%eax
 80562ed:	89 44 24 04          	mov    %eax,0x4(%esp)
 80562f1:	8d 83 d5 3e fd ff    	lea    -0x2c12b(%ebx),%eax
 80562f7:	89 04 24             	mov    %eax,(%esp)
 80562fa:	e8 31 07 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80562ff:	8d 83 d0 15 fa ff    	lea    -0x5ea30(%ebx),%eax
 8056305:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056309:	8d 83 d0 15 fa ff    	lea    -0x5ea30(%ebx),%eax
 805630f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056313:	8d 83 d8 bb 02 00    	lea    0x2bbd8(%ebx),%eax
 8056319:	89 44 24 04          	mov    %eax,0x4(%esp)
 805631d:	8d 83 d4 3e fd ff    	lea    -0x2c12c(%ebx),%eax
 8056323:	89 04 24             	mov    %eax,(%esp)
 8056326:	e8 05 07 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805632b:	8d 83 b0 18 fa ff    	lea    -0x5e750(%ebx),%eax
 8056331:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056335:	8d 83 b0 18 fa ff    	lea    -0x5e750(%ebx),%eax
 805633b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805633f:	8d 83 d4 bb 02 00    	lea    0x2bbd4(%ebx),%eax
 8056345:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056349:	8d 83 da 3e fd ff    	lea    -0x2c126(%ebx),%eax
 805634f:	89 04 24             	mov    %eax,(%esp)
 8056352:	e8 d9 06 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056357:	8d 83 b0 61 fa ff    	lea    -0x59e50(%ebx),%eax
 805635d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056361:	8d 83 b0 61 fa ff    	lea    -0x59e50(%ebx),%eax
 8056367:	89 44 24 08          	mov    %eax,0x8(%esp)
 805636b:	8d 83 c4 bb 02 00    	lea    0x2bbc4(%ebx),%eax
 8056371:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056375:	8d 83 e2 3e fd ff    	lea    -0x2c11e(%ebx),%eax
 805637b:	89 04 24             	mov    %eax,(%esp)
 805637e:	e8 ad 06 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056383:	8d 83 60 14 fa ff    	lea    -0x5eba0(%ebx),%eax
 8056389:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805638d:	8d 83 60 14 fa ff    	lea    -0x5eba0(%ebx),%eax
 8056393:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056397:	8d 83 d0 bb 02 00    	lea    0x2bbd0(%ebx),%eax
 805639d:	89 44 24 04          	mov    %eax,0x4(%esp)
 80563a1:	8d 83 e9 3e fd ff    	lea    -0x2c117(%ebx),%eax
 80563a7:	89 04 24             	mov    %eax,(%esp)
 80563aa:	e8 81 06 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80563af:	8d 83 40 17 fa ff    	lea    -0x5e8c0(%ebx),%eax
 80563b5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80563b9:	8d 83 40 17 fa ff    	lea    -0x5e8c0(%ebx),%eax
 80563bf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80563c3:	8d 83 cc bb 02 00    	lea    0x2bbcc(%ebx),%eax
 80563c9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80563cd:	8d 83 e8 3e fd ff    	lea    -0x2c118(%ebx),%eax
 80563d3:	89 04 24             	mov    %eax,(%esp)
 80563d6:	e8 55 06 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80563db:	8d 83 20 1a fa ff    	lea    -0x5e5e0(%ebx),%eax
 80563e1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80563e5:	8d 83 20 1a fa ff    	lea    -0x5e5e0(%ebx),%eax
 80563eb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80563ef:	8d 83 c8 bb 02 00    	lea    0x2bbc8(%ebx),%eax
 80563f5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80563f9:	8d 83 ef 3e fd ff    	lea    -0x2c111(%ebx),%eax
 80563ff:	89 04 24             	mov    %eax,(%esp)
 8056402:	e8 29 06 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056407:	8d 83 b0 23 fa ff    	lea    -0x5dc50(%ebx),%eax
 805640d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056411:	8d 83 b0 23 fa ff    	lea    -0x5dc50(%ebx),%eax
 8056417:	89 44 24 08          	mov    %eax,0x8(%esp)
 805641b:	8d 83 c0 bb 02 00    	lea    0x2bbc0(%ebx),%eax
 8056421:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056425:	8d 83 f8 3e fd ff    	lea    -0x2c108(%ebx),%eax
 805642b:	89 04 24             	mov    %eax,(%esp)
 805642e:	e8 fd 05 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056433:	8d 83 30 28 fa ff    	lea    -0x5d7d0(%ebx),%eax
 8056439:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805643d:	8d 83 30 28 fa ff    	lea    -0x5d7d0(%ebx),%eax
 8056443:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056447:	8d 83 bc bb 02 00    	lea    0x2bbbc(%ebx),%eax
 805644d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056451:	8d 83 02 3f fd ff    	lea    -0x2c0fe(%ebx),%eax
 8056457:	89 04 24             	mov    %eax,(%esp)
 805645a:	e8 d1 05 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805645f:	8d 83 f0 25 fa ff    	lea    -0x5da10(%ebx),%eax
 8056465:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056469:	8d 83 f0 25 fa ff    	lea    -0x5da10(%ebx),%eax
 805646f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056473:	8d 83 b8 bb 02 00    	lea    0x2bbb8(%ebx),%eax
 8056479:	89 44 24 04          	mov    %eax,0x4(%esp)
 805647d:	8d 83 0e 3f fd ff    	lea    -0x2c0f2(%ebx),%eax
 8056483:	89 04 24             	mov    %eax,(%esp)
 8056486:	e8 a5 05 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805648b:	8d 83 70 2a fa ff    	lea    -0x5d590(%ebx),%eax
 8056491:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056495:	8d 83 70 2a fa ff    	lea    -0x5d590(%ebx),%eax
 805649b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805649f:	8d 83 b4 bb 02 00    	lea    0x2bbb4(%ebx),%eax
 80564a5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80564a9:	8d 83 15 3f fd ff    	lea    -0x2c0eb(%ebx),%eax
 80564af:	89 04 24             	mov    %eax,(%esp)
 80564b2:	e8 79 05 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80564b7:	8d 83 90 34 fa ff    	lea    -0x5cb70(%ebx),%eax
 80564bd:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80564c1:	8d 83 90 34 fa ff    	lea    -0x5cb70(%ebx),%eax
 80564c7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80564cb:	8d 83 b0 bb 02 00    	lea    0x2bbb0(%ebx),%eax
 80564d1:	89 44 24 04          	mov    %eax,0x4(%esp)
 80564d5:	8d 83 20 3f fd ff    	lea    -0x2c0e0(%ebx),%eax
 80564db:	89 04 24             	mov    %eax,(%esp)
 80564de:	e8 4d 05 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80564e3:	8d 83 d0 36 fa ff    	lea    -0x5c930(%ebx),%eax
 80564e9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80564ed:	8d 83 d0 36 fa ff    	lea    -0x5c930(%ebx),%eax
 80564f3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80564f7:	8d 83 ac bb 02 00    	lea    0x2bbac(%ebx),%eax
 80564fd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056501:	8d 83 28 3f fd ff    	lea    -0x2c0d8(%ebx),%eax
 8056507:	89 04 24             	mov    %eax,(%esp)
 805650a:	e8 21 05 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805650f:	8d 83 c0 2f fa ff    	lea    -0x5d040(%ebx),%eax
 8056515:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056519:	8d 83 c0 2f fa ff    	lea    -0x5d040(%ebx),%eax
 805651f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056523:	8d 83 a8 bb 02 00    	lea    0x2bba8(%ebx),%eax
 8056529:	89 44 24 04          	mov    %eax,0x4(%esp)
 805652d:	8d 83 1e 3f fd ff    	lea    -0x2c0e2(%ebx),%eax
 8056533:	89 04 24             	mov    %eax,(%esp)
 8056536:	e8 f5 04 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805653b:	8d 83 20 32 fa ff    	lea    -0x5cde0(%ebx),%eax
 8056541:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056545:	8d 83 20 32 fa ff    	lea    -0x5cde0(%ebx),%eax
 805654b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805654f:	8d 83 a4 bb 02 00    	lea    0x2bba4(%ebx),%eax
 8056555:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056559:	8d 83 26 3f fd ff    	lea    -0x2c0da(%ebx),%eax
 805655f:	89 04 24             	mov    %eax,(%esp)
 8056562:	e8 c9 04 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056567:	8d 83 20 0c fa ff    	lea    -0x5f3e0(%ebx),%eax
 805656d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056571:	8d 83 20 0c fa ff    	lea    -0x5f3e0(%ebx),%eax
 8056577:	89 44 24 08          	mov    %eax,0x8(%esp)
 805657b:	8d 83 88 bb 02 00    	lea    0x2bb88(%ebx),%eax
 8056581:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056585:	8d 83 39 3f fd ff    	lea    -0x2c0c7(%ebx),%eax
 805658b:	89 04 24             	mov    %eax,(%esp)
 805658e:	e8 9d 04 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056593:	8d 83 60 0d fa ff    	lea    -0x5f2a0(%ebx),%eax
 8056599:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805659d:	8d 83 60 0d fa ff    	lea    -0x5f2a0(%ebx),%eax
 80565a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80565a7:	8d 83 80 bb 02 00    	lea    0x2bb80(%ebx),%eax
 80565ad:	89 44 24 04          	mov    %eax,0x4(%esp)
 80565b1:	8d 83 48 3f fd ff    	lea    -0x2c0b8(%ebx),%eax
 80565b7:	89 04 24             	mov    %eax,(%esp)
 80565ba:	e8 71 04 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80565bf:	8d 83 a0 0e fa ff    	lea    -0x5f160(%ebx),%eax
 80565c5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80565c9:	8d 83 a0 0e fa ff    	lea    -0x5f160(%ebx),%eax
 80565cf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80565d3:	8d 83 84 bb 02 00    	lea    0x2bb84(%ebx),%eax
 80565d9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80565dd:	8d 83 58 3f fd ff    	lea    -0x2c0a8(%ebx),%eax
 80565e3:	89 04 24             	mov    %eax,(%esp)
 80565e6:	e8 45 04 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80565eb:	8d 83 70 0b fa ff    	lea    -0x5f490(%ebx),%eax
 80565f1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80565f5:	8d 83 70 0b fa ff    	lea    -0x5f490(%ebx),%eax
 80565fb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80565ff:	8d 83 a0 bb 02 00    	lea    0x2bba0(%ebx),%eax
 8056605:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056609:	8d 83 68 3f fd ff    	lea    -0x2c098(%ebx),%eax
 805660f:	89 04 24             	mov    %eax,(%esp)
 8056612:	e8 19 04 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056617:	8d 83 b0 0c fa ff    	lea    -0x5f350(%ebx),%eax
 805661d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056621:	8d 83 b0 0c fa ff    	lea    -0x5f350(%ebx),%eax
 8056627:	89 44 24 08          	mov    %eax,0x8(%esp)
 805662b:	8d 83 9c bb 02 00    	lea    0x2bb9c(%ebx),%eax
 8056631:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056635:	8d 83 78 3f fd ff    	lea    -0x2c088(%ebx),%eax
 805663b:	89 04 24             	mov    %eax,(%esp)
 805663e:	e8 ed 03 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056643:	8d 83 f0 0d fa ff    	lea    -0x5f210(%ebx),%eax
 8056649:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805664d:	8d 83 f0 0d fa ff    	lea    -0x5f210(%ebx),%eax
 8056653:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056657:	8d 83 98 bb 02 00    	lea    0x2bb98(%ebx),%eax
 805665d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056661:	8d 83 89 3f fd ff    	lea    -0x2c077(%ebx),%eax
 8056667:	89 04 24             	mov    %eax,(%esp)
 805666a:	e8 c1 03 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805666f:	8d 83 e0 0f fa ff    	lea    -0x5f020(%ebx),%eax
 8056675:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056679:	8d 83 e0 0f fa ff    	lea    -0x5f020(%ebx),%eax
 805667f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056683:	8d 83 7c bb 02 00    	lea    0x2bb7c(%ebx),%eax
 8056689:	89 44 24 04          	mov    %eax,0x4(%esp)
 805668d:	8d 83 30 3f fd ff    	lea    -0x2c0d0(%ebx),%eax
 8056693:	89 04 24             	mov    %eax,(%esp)
 8056696:	e8 95 03 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805669b:	8d 83 20 11 fa ff    	lea    -0x5eee0(%ebx),%eax
 80566a1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80566a5:	8d 83 20 11 fa ff    	lea    -0x5eee0(%ebx),%eax
 80566ab:	89 44 24 08          	mov    %eax,0x8(%esp)
 80566af:	8d 83 74 bb 02 00    	lea    0x2bb74(%ebx),%eax
 80566b5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80566b9:	8d 83 3f 3f fd ff    	lea    -0x2c0c1(%ebx),%eax
 80566bf:	89 04 24             	mov    %eax,(%esp)
 80566c2:	e8 69 03 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80566c7:	8d 83 60 12 fa ff    	lea    -0x5eda0(%ebx),%eax
 80566cd:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80566d1:	8d 83 60 12 fa ff    	lea    -0x5eda0(%ebx),%eax
 80566d7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80566db:	8d 83 78 bb 02 00    	lea    0x2bb78(%ebx),%eax
 80566e1:	89 44 24 04          	mov    %eax,0x4(%esp)
 80566e5:	8d 83 4f 3f fd ff    	lea    -0x2c0b1(%ebx),%eax
 80566eb:	89 04 24             	mov    %eax,(%esp)
 80566ee:	e8 3d 03 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80566f3:	8d 83 30 0f fa ff    	lea    -0x5f0d0(%ebx),%eax
 80566f9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80566fd:	8d 83 30 0f fa ff    	lea    -0x5f0d0(%ebx),%eax
 8056703:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056707:	8d 83 94 bb 02 00    	lea    0x2bb94(%ebx),%eax
 805670d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056711:	8d 83 5f 3f fd ff    	lea    -0x2c0a1(%ebx),%eax
 8056717:	89 04 24             	mov    %eax,(%esp)
 805671a:	e8 11 03 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805671f:	8d 83 70 10 fa ff    	lea    -0x5ef90(%ebx),%eax
 8056725:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056729:	8d 83 70 10 fa ff    	lea    -0x5ef90(%ebx),%eax
 805672f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056733:	8d 83 90 bb 02 00    	lea    0x2bb90(%ebx),%eax
 8056739:	89 44 24 04          	mov    %eax,0x4(%esp)
 805673d:	8d 83 6f 3f fd ff    	lea    -0x2c091(%ebx),%eax
 8056743:	89 04 24             	mov    %eax,(%esp)
 8056746:	e8 e5 02 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805674b:	8d 83 b0 11 fa ff    	lea    -0x5ee50(%ebx),%eax
 8056751:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056755:	8d 83 b0 11 fa ff    	lea    -0x5ee50(%ebx),%eax
 805675b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805675f:	8d 83 8c bb 02 00    	lea    0x2bb8c(%ebx),%eax
 8056765:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056769:	8d 83 80 3f fd ff    	lea    -0x2c080(%ebx),%eax
 805676f:	89 04 24             	mov    %eax,(%esp)
 8056772:	e8 b9 02 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056777:	8d 83 50 4e fa ff    	lea    -0x5b1b0(%ebx),%eax
 805677d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056781:	8d 83 50 4e fa ff    	lea    -0x5b1b0(%ebx),%eax
 8056787:	89 44 24 08          	mov    %eax,0x8(%esp)
 805678b:	8d 83 40 bb 02 00    	lea    0x2bb40(%ebx),%eax
 8056791:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056795:	8d 83 91 3f fd ff    	lea    -0x2c06f(%ebx),%eax
 805679b:	89 04 24             	mov    %eax,(%esp)
 805679e:	e8 8d 02 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80567a3:	84 c0                	test   %al,%al
 80567a5:	0f 84 cd 06 00 00    	je     8056e78 <_ZN6__asan26InitializeAsanInterceptorsEv+0xbc8>
 80567ab:	8d 83 40 55 fa ff    	lea    -0x5aac0(%ebx),%eax
 80567b1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80567b5:	8d 83 40 55 fa ff    	lea    -0x5aac0(%ebx),%eax
 80567bb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80567bf:	8d 83 38 bb 02 00    	lea    0x2bb38(%ebx),%eax
 80567c5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80567c9:	8d 83 98 3f fd ff    	lea    -0x2c068(%ebx),%eax
 80567cf:	89 04 24             	mov    %eax,(%esp)
 80567d2:	e8 59 02 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80567d7:	84 c0                	test   %al,%al
 80567d9:	0f 84 91 0b 00 00    	je     8057370 <_ZN6__asan26InitializeAsanInterceptorsEv+0x10c0>
 80567df:	8d 83 a0 52 fa ff    	lea    -0x5ad60(%ebx),%eax
 80567e5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80567e9:	8d 83 a0 52 fa ff    	lea    -0x5ad60(%ebx),%eax
 80567ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80567f3:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 80567f9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80567fd:	8d 83 a0 3f fd ff    	lea    -0x2c060(%ebx),%eax
 8056803:	89 04 24             	mov    %eax,(%esp)
 8056806:	e8 25 02 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805680b:	84 c0                	test   %al,%al
 805680d:	0f 84 35 0b 00 00    	je     8057348 <_ZN6__asan26InitializeAsanInterceptorsEv+0x1098>
 8056813:	8d 83 b0 3b fa ff    	lea    -0x5c450(%ebx),%eax
 8056819:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805681d:	8d 83 b0 3b fa ff    	lea    -0x5c450(%ebx),%eax
 8056823:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056827:	8d 83 3c bb 02 00    	lea    0x2bb3c(%ebx),%eax
 805682d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056831:	8d 83 b7 3e fd ff    	lea    -0x2c149(%ebx),%eax
 8056837:	89 04 24             	mov    %eax,(%esp)
 805683a:	e8 f1 01 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805683f:	84 c0                	test   %al,%al
 8056841:	0f 84 d9 0a 00 00    	je     8057320 <_ZN6__asan26InitializeAsanInterceptorsEv+0x1070>
 8056847:	8d 83 c0 3e fa ff    	lea    -0x5c140(%ebx),%eax
 805684d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056851:	8d 83 c0 3e fa ff    	lea    -0x5c140(%ebx),%eax
 8056857:	89 44 24 08          	mov    %eax,0x8(%esp)
 805685b:	8d 83 28 bb 02 00    	lea    0x2bb28(%ebx),%eax
 8056861:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056865:	8d 83 c5 3e fd ff    	lea    -0x2c13b(%ebx),%eax
 805686b:	89 04 24             	mov    %eax,(%esp)
 805686e:	e8 bd 01 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056873:	84 c0                	test   %al,%al
 8056875:	0f 84 7d 0a 00 00    	je     80572f8 <_ZN6__asan26InitializeAsanInterceptorsEv+0x1048>
 805687b:	8d 83 30 51 fa ff    	lea    -0x5aed0(%ebx),%eax
 8056881:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056885:	8d 83 30 51 fa ff    	lea    -0x5aed0(%ebx),%eax
 805688b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805688f:	8d 83 30 bb 02 00    	lea    0x2bb30(%ebx),%eax
 8056895:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056899:	8d 83 a7 3f fd ff    	lea    -0x2c059(%ebx),%eax
 805689f:	89 04 24             	mov    %eax,(%esp)
 80568a2:	e8 89 01 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80568a7:	84 c0                	test   %al,%al
 80568a9:	0f 84 21 0a 00 00    	je     80572d0 <_ZN6__asan26InitializeAsanInterceptorsEv+0x1020>
 80568af:	8d 83 60 47 fa ff    	lea    -0x5b8a0(%ebx),%eax
 80568b5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80568b9:	8d 83 60 47 fa ff    	lea    -0x5b8a0(%ebx),%eax
 80568bf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80568c3:	8d 83 20 bb 02 00    	lea    0x2bb20(%ebx),%eax
 80568c9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80568cd:	8d 83 ae 3f fd ff    	lea    -0x2c052(%ebx),%eax
 80568d3:	89 04 24             	mov    %eax,(%esp)
 80568d6:	e8 55 01 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80568db:	84 c0                	test   %al,%al
 80568dd:	0f 84 c5 09 00 00    	je     80572a8 <_ZN6__asan26InitializeAsanInterceptorsEv+0xff8>
 80568e3:	8d 83 30 3c fa ff    	lea    -0x5c3d0(%ebx),%eax
 80568e9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80568ed:	8d 83 30 3c fa ff    	lea    -0x5c3d0(%ebx),%eax
 80568f3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80568f7:	8d 83 1c bb 02 00    	lea    0x2bb1c(%ebx),%eax
 80568fd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056901:	8d 83 be 3e fd ff    	lea    -0x2c142(%ebx),%eax
 8056907:	89 04 24             	mov    %eax,(%esp)
 805690a:	e8 21 01 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 805690f:	84 c0                	test   %al,%al
 8056911:	0f 84 69 09 00 00    	je     8057280 <_ZN6__asan26InitializeAsanInterceptorsEv+0xfd0>
 8056917:	8d 83 30 4a fa ff    	lea    -0x5b5d0(%ebx),%eax
 805691d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056921:	8d 83 30 4a fa ff    	lea    -0x5b5d0(%ebx),%eax
 8056927:	89 44 24 08          	mov    %eax,0x8(%esp)
 805692b:	8d 83 14 bb 02 00    	lea    0x2bb14(%ebx),%eax
 8056931:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056935:	8d 83 b5 3f fd ff    	lea    -0x2c04b(%ebx),%eax
 805693b:	89 04 24             	mov    %eax,(%esp)
 805693e:	e8 ed 00 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056943:	84 c0                	test   %al,%al
 8056945:	0f 84 0d 09 00 00    	je     8057258 <_ZN6__asan26InitializeAsanInterceptorsEv+0xfa8>
 805694b:	8d 83 10 43 fa ff    	lea    -0x5bcf0(%ebx),%eax
 8056951:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056955:	8d 83 10 43 fa ff    	lea    -0x5bcf0(%ebx),%eax
 805695b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805695f:	8d 83 24 bb 02 00    	lea    0x2bb24(%ebx),%eax
 8056965:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056969:	8d 83 cc 3e fd ff    	lea    -0x2c134(%ebx),%eax
 805696f:	89 04 24             	mov    %eax,(%esp)
 8056972:	e8 b9 00 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056977:	84 c0                	test   %al,%al
 8056979:	0f 84 b1 08 00 00    	je     8057230 <_ZN6__asan26InitializeAsanInterceptorsEv+0xf80>
 805697f:	8d 83 70 4b fa ff    	lea    -0x5b490(%ebx),%eax
 8056985:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056989:	8d 83 70 4b fa ff    	lea    -0x5b490(%ebx),%eax
 805698f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056993:	8d 83 08 bb 02 00    	lea    0x2bb08(%ebx),%eax
 8056999:	89 44 24 04          	mov    %eax,0x4(%esp)
 805699d:	8d 83 bc 3f fd ff    	lea    -0x2c044(%ebx),%eax
 80569a3:	89 04 24             	mov    %eax,(%esp)
 80569a6:	e8 85 00 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80569ab:	84 c0                	test   %al,%al
 80569ad:	0f 84 55 08 00 00    	je     8057208 <_ZN6__asan26InitializeAsanInterceptorsEv+0xf58>
 80569b3:	8d 83 b0 2c fa ff    	lea    -0x5d350(%ebx),%eax
 80569b9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80569bd:	8d 83 b0 2c fa ff    	lea    -0x5d350(%ebx),%eax
 80569c3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80569c7:	8d 83 04 bb 02 00    	lea    0x2bb04(%ebx),%eax
 80569cd:	89 44 24 04          	mov    %eax,0x4(%esp)
 80569d1:	8d 83 af 3e fd ff    	lea    -0x2c151(%ebx),%eax
 80569d7:	89 04 24             	mov    %eax,(%esp)
 80569da:	e8 51 00 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 80569df:	84 c0                	test   %al,%al
 80569e1:	0f 84 f9 07 00 00    	je     80571e0 <_ZN6__asan26InitializeAsanInterceptorsEv+0xf30>
 80569e7:	8d 83 d0 5b fa ff    	lea    -0x5a430(%ebx),%eax
 80569ed:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80569f1:	8d 83 d0 5b fa ff    	lea    -0x5a430(%ebx),%eax
 80569f7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80569fb:	8d 83 10 bb 02 00    	lea    0x2bb10(%ebx),%eax
 8056a01:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056a05:	8d 83 c4 3f fd ff    	lea    -0x2c03c(%ebx),%eax
 8056a0b:	89 04 24             	mov    %eax,(%esp)
 8056a0e:	e8 1d 00 01 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056a13:	84 c0                	test   %al,%al
 8056a15:	0f 84 9d 07 00 00    	je     80571b8 <_ZN6__asan26InitializeAsanInterceptorsEv+0xf08>
 8056a1b:	8d 83 80 5e fa ff    	lea    -0x5a180(%ebx),%eax
 8056a21:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056a25:	8d 83 80 5e fa ff    	lea    -0x5a180(%ebx),%eax
 8056a2b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056a2f:	8d 83 0c bb 02 00    	lea    0x2bb0c(%ebx),%eax
 8056a35:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056a39:	8d 83 cf 3f fd ff    	lea    -0x2c031(%ebx),%eax
 8056a3f:	89 04 24             	mov    %eax,(%esp)
 8056a42:	e8 e9 ff 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056a47:	84 c0                	test   %al,%al
 8056a49:	0f 84 41 07 00 00    	je     8057190 <_ZN6__asan26InitializeAsanInterceptorsEv+0xee0>
 8056a4f:	8d 83 d0 53 fa ff    	lea    -0x5ac30(%ebx),%eax
 8056a55:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056a59:	8d 83 d0 53 fa ff    	lea    -0x5ac30(%ebx),%eax
 8056a5f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056a63:	8d 83 18 bb 02 00    	lea    0x2bb18(%ebx),%eax
 8056a69:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056a6d:	8d 83 db 3f fd ff    	lea    -0x2c025(%ebx),%eax
 8056a73:	89 04 24             	mov    %eax,(%esp)
 8056a76:	e8 b5 ff 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056a7b:	84 c0                	test   %al,%al
 8056a7d:	0f 84 e5 06 00 00    	je     8057168 <_ZN6__asan26InitializeAsanInterceptorsEv+0xeb8>
 8056a83:	8d 83 a0 1b fa ff    	lea    -0x5e460(%ebx),%eax
 8056a89:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056a8d:	8d 83 a0 1b fa ff    	lea    -0x5e460(%ebx),%eax
 8056a93:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056a97:	8d 83 00 bb 02 00    	lea    0x2bb00(%ebx),%eax
 8056a9d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056aa1:	8d 83 e2 3f fd ff    	lea    -0x2c01e(%ebx),%eax
 8056aa7:	89 04 24             	mov    %eax,(%esp)
 8056aaa:	e8 81 ff 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056aaf:	84 c0                	test   %al,%al
 8056ab1:	0f 84 89 06 00 00    	je     8057140 <_ZN6__asan26InitializeAsanInterceptorsEv+0xe90>
 8056ab7:	8d 83 30 51 fa ff    	lea    -0x5aed0(%ebx),%eax
 8056abd:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056ac1:	8d 83 30 51 fa ff    	lea    -0x5aed0(%ebx),%eax
 8056ac7:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056acb:	8d 83 2c bb 02 00    	lea    0x2bb2c(%ebx),%eax
 8056ad1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056ad5:	8d 83 ea 3f fd ff    	lea    -0x2c016(%ebx),%eax
 8056adb:	89 04 24             	mov    %eax,(%esp)
 8056ade:	e8 4d ff 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056ae3:	84 c0                	test   %al,%al
 8056ae5:	0f 84 2d 06 00 00    	je     8057118 <_ZN6__asan26InitializeAsanInterceptorsEv+0xe68>
 8056aeb:	8d 83 50 1f fa ff    	lea    -0x5e0b0(%ebx),%eax
 8056af1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056af5:	8d 83 50 1f fa ff    	lea    -0x5e0b0(%ebx),%eax
 8056afb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056aff:	8d 83 f8 ba 02 00    	lea    0x2baf8(%ebx),%eax
 8056b05:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056b09:	8d 83 f0 3f fd ff    	lea    -0x2c010(%ebx),%eax
 8056b0f:	89 04 24             	mov    %eax,(%esp)
 8056b12:	e8 19 ff 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056b17:	84 c0                	test   %al,%al
 8056b19:	0f 84 d1 05 00 00    	je     80570f0 <_ZN6__asan26InitializeAsanInterceptorsEv+0xe40>
 8056b1f:	8d 83 20 1d fa ff    	lea    -0x5e2e0(%ebx),%eax
 8056b25:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056b29:	8d 83 20 1d fa ff    	lea    -0x5e2e0(%ebx),%eax
 8056b2f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056b33:	8d 83 f4 ba 02 00    	lea    0x2baf4(%ebx),%eax
 8056b39:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056b3d:	8d 83 f5 3f fd ff    	lea    -0x2c00b(%ebx),%eax
 8056b43:	89 04 24             	mov    %eax,(%esp)
 8056b46:	e8 e5 fe 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056b4b:	84 c0                	test   %al,%al
 8056b4d:	0f 84 75 05 00 00    	je     80570c8 <_ZN6__asan26InitializeAsanInterceptorsEv+0xe18>
 8056b53:	8d 83 40 57 fa ff    	lea    -0x5a8c0(%ebx),%eax
 8056b59:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056b5d:	8d 83 40 57 fa ff    	lea    -0x5a8c0(%ebx),%eax
 8056b63:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056b67:	8d 83 fc ba 02 00    	lea    0x2bafc(%ebx),%eax
 8056b6d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056b71:	8d 83 fa 3f fd ff    	lea    -0x2c006(%ebx),%eax
 8056b77:	89 04 24             	mov    %eax,(%esp)
 8056b7a:	e8 b1 fe 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056b7f:	84 c0                	test   %al,%al
 8056b81:	0f 84 19 05 00 00    	je     80570a0 <_ZN6__asan26InitializeAsanInterceptorsEv+0xdf0>
 8056b87:	8d 83 80 21 fa ff    	lea    -0x5de80(%ebx),%eax
 8056b8d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056b91:	8d 83 80 21 fa ff    	lea    -0x5de80(%ebx),%eax
 8056b97:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056b9b:	8d 83 ec ba 02 00    	lea    0x2baec(%ebx),%eax
 8056ba1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056ba5:	8d 83 01 40 fd ff    	lea    -0x2bfff(%ebx),%eax
 8056bab:	89 04 24             	mov    %eax,(%esp)
 8056bae:	e8 7d fe 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056bb3:	84 c0                	test   %al,%al
 8056bb5:	0f 84 bd 04 00 00    	je     8057078 <_ZN6__asan26InitializeAsanInterceptorsEv+0xdc8>
 8056bbb:	8d 83 80 59 fa ff    	lea    -0x5a680(%ebx),%eax
 8056bc1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056bc5:	8d 83 80 59 fa ff    	lea    -0x5a680(%ebx),%eax
 8056bcb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056bcf:	8d 83 f0 ba 02 00    	lea    0x2baf0(%ebx),%eax
 8056bd5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056bd9:	8d 83 07 40 fd ff    	lea    -0x2bff9(%ebx),%eax
 8056bdf:	89 04 24             	mov    %eax,(%esp)
 8056be2:	e8 49 fe 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056be7:	84 c0                	test   %al,%al
 8056be9:	0f 84 61 04 00 00    	je     8057050 <_ZN6__asan26InitializeAsanInterceptorsEv+0xda0>
 8056bef:	8d 83 a0 03 fa ff    	lea    -0x5fc60(%ebx),%eax
 8056bf5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056bf9:	8d 83 a0 03 fa ff    	lea    -0x5fc60(%ebx),%eax
 8056bff:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056c03:	8d 83 50 bb 02 00    	lea    0x2bb50(%ebx),%eax
 8056c09:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056c0d:	8d 83 0f 40 fd ff    	lea    -0x2bff1(%ebx),%eax
 8056c13:	89 04 24             	mov    %eax,(%esp)
 8056c16:	e8 15 fe 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056c1b:	84 c0                	test   %al,%al
 8056c1d:	0f 84 05 04 00 00    	je     8057028 <_ZN6__asan26InitializeAsanInterceptorsEv+0xd78>
 8056c23:	8d 83 d0 03 fa ff    	lea    -0x5fc30(%ebx),%eax
 8056c29:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056c2d:	8d 83 d0 03 fa ff    	lea    -0x5fc30(%ebx),%eax
 8056c33:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056c37:	8d 83 4c bb 02 00    	lea    0x2bb4c(%ebx),%eax
 8056c3d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056c41:	8d 83 15 40 fd ff    	lea    -0x2bfeb(%ebx),%eax
 8056c47:	89 04 24             	mov    %eax,(%esp)
 8056c4a:	e8 e1 fd 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056c4f:	84 c0                	test   %al,%al
 8056c51:	0f 84 a9 03 00 00    	je     8057000 <_ZN6__asan26InitializeAsanInterceptorsEv+0xd50>
 8056c57:	8d 83 00 04 fa ff    	lea    -0x5fc00(%ebx),%eax
 8056c5d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056c61:	8d 83 00 04 fa ff    	lea    -0x5fc00(%ebx),%eax
 8056c67:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056c6b:	8d 83 48 bb 02 00    	lea    0x2bb48(%ebx),%eax
 8056c71:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056c75:	8d 83 1d 40 fd ff    	lea    -0x2bfe3(%ebx),%eax
 8056c7b:	89 04 24             	mov    %eax,(%esp)
 8056c7e:	e8 ad fd 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056c83:	84 c0                	test   %al,%al
 8056c85:	0f 84 4d 03 00 00    	je     8056fd8 <_ZN6__asan26InitializeAsanInterceptorsEv+0xd28>
 8056c8b:	8d 83 30 04 fa ff    	lea    -0x5fbd0(%ebx),%eax
 8056c91:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056c95:	8d 83 30 04 fa ff    	lea    -0x5fbd0(%ebx),%eax
 8056c9b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056c9f:	8d 83 44 bb 02 00    	lea    0x2bb44(%ebx),%eax
 8056ca5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056ca9:	8d 83 26 40 fd ff    	lea    -0x2bfda(%ebx),%eax
 8056caf:	89 04 24             	mov    %eax,(%esp)
 8056cb2:	e8 79 fd 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056cb7:	84 c0                	test   %al,%al
 8056cb9:	0f 84 f1 02 00 00    	je     8056fb0 <_ZN6__asan26InitializeAsanInterceptorsEv+0xd00>
 8056cbf:	8d 83 10 02 fa ff    	lea    -0x5fdf0(%ebx),%eax
 8056cc5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056cc9:	8d 83 10 02 fa ff    	lea    -0x5fdf0(%ebx),%eax
 8056ccf:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056cd3:	8d 83 60 bb 02 00    	lea    0x2bb60(%ebx),%eax
 8056cd9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056cdd:	8d 83 4f 40 fd ff    	lea    -0x2bfb1(%ebx),%eax
 8056ce3:	89 04 24             	mov    %eax,(%esp)
 8056ce6:	e8 45 fd 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056ceb:	84 c0                	test   %al,%al
 8056ced:	0f 84 95 02 00 00    	je     8056f88 <_ZN6__asan26InitializeAsanInterceptorsEv+0xcd8>
 8056cf3:	8d 83 20 03 fa ff    	lea    -0x5fce0(%ebx),%eax
 8056cf9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056cfd:	8d 83 20 03 fa ff    	lea    -0x5fce0(%ebx),%eax
 8056d03:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056d07:	8d 83 68 bb 02 00    	lea    0x2bb68(%ebx),%eax
 8056d0d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056d11:	8d 83 31 40 fd ff    	lea    -0x2bfcf(%ebx),%eax
 8056d17:	89 04 24             	mov    %eax,(%esp)
 8056d1a:	e8 11 fd 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056d1f:	84 c0                	test   %al,%al
 8056d21:	0f 84 39 02 00 00    	je     8056f60 <_ZN6__asan26InitializeAsanInterceptorsEv+0xcb0>
 8056d27:	8d 83 b0 00 fa ff    	lea    -0x5ff50(%ebx),%eax
 8056d2d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056d31:	8d 83 b0 00 fa ff    	lea    -0x5ff50(%ebx),%eax
 8056d37:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056d3b:	8d 83 6c bb 02 00    	lea    0x2bb6c(%ebx),%eax
 8056d41:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056d45:	8d 83 3b 40 fd ff    	lea    -0x2bfc5(%ebx),%eax
 8056d4b:	89 04 24             	mov    %eax,(%esp)
 8056d4e:	e8 dd fc 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056d53:	84 c0                	test   %al,%al
 8056d55:	0f 84 dd 01 00 00    	je     8056f38 <_ZN6__asan26InitializeAsanInterceptorsEv+0xc88>
 8056d5b:	8d 83 90 01 fa ff    	lea    -0x5fe70(%ebx),%eax
 8056d61:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056d65:	8d 83 90 01 fa ff    	lea    -0x5fe70(%ebx),%eax
 8056d6b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056d6f:	8d 83 64 bb 02 00    	lea    0x2bb64(%ebx),%eax
 8056d75:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056d79:	8d 83 42 40 fd ff    	lea    -0x2bfbe(%ebx),%eax
 8056d7f:	89 04 24             	mov    %eax,(%esp)
 8056d82:	e8 a9 fc 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056d87:	84 c0                	test   %al,%al
 8056d89:	0f 84 81 01 00 00    	je     8056f10 <_ZN6__asan26InitializeAsanInterceptorsEv+0xc60>
 8056d8f:	8d 83 40 02 fa ff    	lea    -0x5fdc0(%ebx),%eax
 8056d95:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056d99:	8d 83 40 02 fa ff    	lea    -0x5fdc0(%ebx),%eax
 8056d9f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056da3:	8d 83 5c bb 02 00    	lea    0x2bb5c(%ebx),%eax
 8056da9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056dad:	8d 83 4e 40 fd ff    	lea    -0x2bfb2(%ebx),%eax
 8056db3:	89 04 24             	mov    %eax,(%esp)
 8056db6:	e8 75 fc 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056dbb:	84 c0                	test   %al,%al
 8056dbd:	0f 84 25 01 00 00    	je     8056ee8 <_ZN6__asan26InitializeAsanInterceptorsEv+0xc38>
 8056dc3:	8d 83 70 02 fa ff    	lea    -0x5fd90(%ebx),%eax
 8056dc9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056dcd:	8d 83 70 02 fa ff    	lea    -0x5fd90(%ebx),%eax
 8056dd3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056dd7:	8d 83 58 bb 02 00    	lea    0x2bb58(%ebx),%eax
 8056ddd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056de1:	8d 83 57 40 fd ff    	lea    -0x2bfa9(%ebx),%eax
 8056de7:	89 04 24             	mov    %eax,(%esp)
 8056dea:	e8 41 fc 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056def:	84 c0                	test   %al,%al
 8056df1:	0f 84 c9 00 00 00    	je     8056ec0 <_ZN6__asan26InitializeAsanInterceptorsEv+0xc10>
 8056df7:	8d 83 a0 02 fa ff    	lea    -0x5fd60(%ebx),%eax
 8056dfd:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056e01:	8d 83 a0 02 fa ff    	lea    -0x5fd60(%ebx),%eax
 8056e07:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056e0b:	8d 83 54 bb 02 00    	lea    0x2bb54(%ebx),%eax
 8056e11:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056e15:	8d 83 62 40 fd ff    	lea    -0x2bf9e(%ebx),%eax
 8056e1b:	89 04 24             	mov    %eax,(%esp)
 8056e1e:	e8 0d fc 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056e23:	8d 83 a0 ff f9 ff    	lea    -0x60060(%ebx),%eax
 8056e29:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8056e2d:	8d 83 a0 ff f9 ff    	lea    -0x60060(%ebx),%eax
 8056e33:	89 44 24 08          	mov    %eax,0x8(%esp)
 8056e37:	8d 83 70 bb 02 00    	lea    0x2bb70(%ebx),%eax
 8056e3d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8056e41:	8d 83 6e 40 fd ff    	lea    -0x2bf92(%ebx),%eax
 8056e47:	89 04 24             	mov    %eax,(%esp)
 8056e4a:	e8 e1 fb 00 00       	call   8066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>
 8056e4f:	84 c0                	test   %al,%al
 8056e51:	74 4d                	je     8056ea0 <_ZN6__asan26InitializeAsanInterceptorsEv+0xbf0>
 8056e53:	e8 c8 16 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056e58:	8b 40 08             	mov    0x8(%eax),%eax
 8056e5b:	85 c0                	test   %eax,%eax
 8056e5d:	7e 0e                	jle    8056e6d <_ZN6__asan26InitializeAsanInterceptorsEv+0xbbd>
 8056e5f:	8d 83 94 37 fd ff    	lea    -0x2c86c(%ebx),%eax
 8056e65:	89 04 24             	mov    %eax,(%esp)
 8056e68:	e8 d3 a8 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056e6d:	83 c4 28             	add    $0x28,%esp
 8056e70:	5b                   	pop    %ebx
 8056e71:	c3                   	ret    
 8056e72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8056e78:	e8 a3 16 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056e7d:	8b 50 08             	mov    0x8(%eax),%edx
 8056e80:	85 d2                	test   %edx,%edx
 8056e82:	0f 8e 23 f9 ff ff    	jle    80567ab <_ZN6__asan26InitializeAsanInterceptorsEv+0x4fb>
 8056e88:	8d 83 c8 37 fd ff    	lea    -0x2c838(%ebx),%eax
 8056e8e:	89 04 24             	mov    %eax,(%esp)
 8056e91:	e8 aa a8 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056e96:	e9 10 f9 ff ff       	jmp    80567ab <_ZN6__asan26InitializeAsanInterceptorsEv+0x4fb>
 8056e9b:	90                   	nop
 8056e9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056ea0:	e8 7b 16 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056ea5:	8b 50 08             	mov    0x8(%eax),%edx
 8056ea8:	85 d2                	test   %edx,%edx
 8056eaa:	7e a7                	jle    8056e53 <_ZN6__asan26InitializeAsanInterceptorsEv+0xba3>
 8056eac:	8d 83 10 3e fd ff    	lea    -0x2c1f0(%ebx),%eax
 8056eb2:	89 04 24             	mov    %eax,(%esp)
 8056eb5:	e8 86 a8 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056eba:	eb 97                	jmp    8056e53 <_ZN6__asan26InitializeAsanInterceptorsEv+0xba3>
 8056ebc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056ec0:	e8 5b 16 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056ec5:	8b 48 08             	mov    0x8(%eax),%ecx
 8056ec8:	85 c9                	test   %ecx,%ecx
 8056eca:	0f 8e 27 ff ff ff    	jle    8056df7 <_ZN6__asan26InitializeAsanInterceptorsEv+0xb47>
 8056ed0:	8d 83 dc 3d fd ff    	lea    -0x2c224(%ebx),%eax
 8056ed6:	89 04 24             	mov    %eax,(%esp)
 8056ed9:	e8 62 a8 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056ede:	e9 14 ff ff ff       	jmp    8056df7 <_ZN6__asan26InitializeAsanInterceptorsEv+0xb47>
 8056ee3:	90                   	nop
 8056ee4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056ee8:	e8 33 16 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056eed:	8b 40 08             	mov    0x8(%eax),%eax
 8056ef0:	85 c0                	test   %eax,%eax
 8056ef2:	0f 8e cb fe ff ff    	jle    8056dc3 <_ZN6__asan26InitializeAsanInterceptorsEv+0xb13>
 8056ef8:	8d 83 a8 3d fd ff    	lea    -0x2c258(%ebx),%eax
 8056efe:	89 04 24             	mov    %eax,(%esp)
 8056f01:	e8 3a a8 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056f06:	e9 b8 fe ff ff       	jmp    8056dc3 <_ZN6__asan26InitializeAsanInterceptorsEv+0xb13>
 8056f0b:	90                   	nop
 8056f0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056f10:	e8 0b 16 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056f15:	8b 40 08             	mov    0x8(%eax),%eax
 8056f18:	85 c0                	test   %eax,%eax
 8056f1a:	0f 8e 6f fe ff ff    	jle    8056d8f <_ZN6__asan26InitializeAsanInterceptorsEv+0xadf>
 8056f20:	8d 83 70 3d fd ff    	lea    -0x2c290(%ebx),%eax
 8056f26:	89 04 24             	mov    %eax,(%esp)
 8056f29:	e8 12 a8 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056f2e:	e9 5c fe ff ff       	jmp    8056d8f <_ZN6__asan26InitializeAsanInterceptorsEv+0xadf>
 8056f33:	90                   	nop
 8056f34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056f38:	e8 e3 15 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056f3d:	8b 40 08             	mov    0x8(%eax),%eax
 8056f40:	85 c0                	test   %eax,%eax
 8056f42:	0f 8e 13 fe ff ff    	jle    8056d5b <_ZN6__asan26InitializeAsanInterceptorsEv+0xaab>
 8056f48:	8d 83 40 3d fd ff    	lea    -0x2c2c0(%ebx),%eax
 8056f4e:	89 04 24             	mov    %eax,(%esp)
 8056f51:	e8 ea a7 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056f56:	e9 00 fe ff ff       	jmp    8056d5b <_ZN6__asan26InitializeAsanInterceptorsEv+0xaab>
 8056f5b:	90                   	nop
 8056f5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056f60:	e8 bb 15 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056f65:	8b 40 08             	mov    0x8(%eax),%eax
 8056f68:	85 c0                	test   %eax,%eax
 8056f6a:	0f 8e b7 fd ff ff    	jle    8056d27 <_ZN6__asan26InitializeAsanInterceptorsEv+0xa77>
 8056f70:	8d 83 0c 3d fd ff    	lea    -0x2c2f4(%ebx),%eax
 8056f76:	89 04 24             	mov    %eax,(%esp)
 8056f79:	e8 c2 a7 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056f7e:	e9 a4 fd ff ff       	jmp    8056d27 <_ZN6__asan26InitializeAsanInterceptorsEv+0xa77>
 8056f83:	90                   	nop
 8056f84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056f88:	e8 93 15 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056f8d:	8b 40 08             	mov    0x8(%eax),%eax
 8056f90:	85 c0                	test   %eax,%eax
 8056f92:	0f 8e 5b fd ff ff    	jle    8056cf3 <_ZN6__asan26InitializeAsanInterceptorsEv+0xa43>
 8056f98:	8d 83 d8 3c fd ff    	lea    -0x2c328(%ebx),%eax
 8056f9e:	89 04 24             	mov    %eax,(%esp)
 8056fa1:	e8 9a a7 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056fa6:	e9 48 fd ff ff       	jmp    8056cf3 <_ZN6__asan26InitializeAsanInterceptorsEv+0xa43>
 8056fab:	90                   	nop
 8056fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056fb0:	e8 6b 15 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056fb5:	8b 40 08             	mov    0x8(%eax),%eax
 8056fb8:	85 c0                	test   %eax,%eax
 8056fba:	0f 8e ff fc ff ff    	jle    8056cbf <_ZN6__asan26InitializeAsanInterceptorsEv+0xa0f>
 8056fc0:	8d 83 a4 3c fd ff    	lea    -0x2c35c(%ebx),%eax
 8056fc6:	89 04 24             	mov    %eax,(%esp)
 8056fc9:	e8 72 a7 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056fce:	e9 ec fc ff ff       	jmp    8056cbf <_ZN6__asan26InitializeAsanInterceptorsEv+0xa0f>
 8056fd3:	90                   	nop
 8056fd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8056fd8:	e8 43 15 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8056fdd:	8b 50 08             	mov    0x8(%eax),%edx
 8056fe0:	85 d2                	test   %edx,%edx
 8056fe2:	0f 8e a3 fc ff ff    	jle    8056c8b <_ZN6__asan26InitializeAsanInterceptorsEv+0x9db>
 8056fe8:	8d 83 70 3c fd ff    	lea    -0x2c390(%ebx),%eax
 8056fee:	89 04 24             	mov    %eax,(%esp)
 8056ff1:	e8 4a a7 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8056ff6:	e9 90 fc ff ff       	jmp    8056c8b <_ZN6__asan26InitializeAsanInterceptorsEv+0x9db>
 8056ffb:	90                   	nop
 8056ffc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057000:	e8 1b 15 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057005:	8b 48 08             	mov    0x8(%eax),%ecx
 8057008:	85 c9                	test   %ecx,%ecx
 805700a:	0f 8e 47 fc ff ff    	jle    8056c57 <_ZN6__asan26InitializeAsanInterceptorsEv+0x9a7>
 8057010:	8d 83 3c 3c fd ff    	lea    -0x2c3c4(%ebx),%eax
 8057016:	89 04 24             	mov    %eax,(%esp)
 8057019:	e8 22 a7 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805701e:	e9 34 fc ff ff       	jmp    8056c57 <_ZN6__asan26InitializeAsanInterceptorsEv+0x9a7>
 8057023:	90                   	nop
 8057024:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057028:	e8 f3 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805702d:	8b 40 08             	mov    0x8(%eax),%eax
 8057030:	85 c0                	test   %eax,%eax
 8057032:	0f 8e eb fb ff ff    	jle    8056c23 <_ZN6__asan26InitializeAsanInterceptorsEv+0x973>
 8057038:	8d 83 0c 3c fd ff    	lea    -0x2c3f4(%ebx),%eax
 805703e:	89 04 24             	mov    %eax,(%esp)
 8057041:	e8 fa a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057046:	e9 d8 fb ff ff       	jmp    8056c23 <_ZN6__asan26InitializeAsanInterceptorsEv+0x973>
 805704b:	90                   	nop
 805704c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057050:	e8 cb 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057055:	8b 40 08             	mov    0x8(%eax),%eax
 8057058:	85 c0                	test   %eax,%eax
 805705a:	0f 8e 8f fb ff ff    	jle    8056bef <_ZN6__asan26InitializeAsanInterceptorsEv+0x93f>
 8057060:	8d 83 d8 3b fd ff    	lea    -0x2c428(%ebx),%eax
 8057066:	89 04 24             	mov    %eax,(%esp)
 8057069:	e8 d2 a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805706e:	e9 7c fb ff ff       	jmp    8056bef <_ZN6__asan26InitializeAsanInterceptorsEv+0x93f>
 8057073:	90                   	nop
 8057074:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057078:	e8 a3 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805707d:	8b 40 08             	mov    0x8(%eax),%eax
 8057080:	85 c0                	test   %eax,%eax
 8057082:	0f 8e 33 fb ff ff    	jle    8056bbb <_ZN6__asan26InitializeAsanInterceptorsEv+0x90b>
 8057088:	8d 83 a8 3b fd ff    	lea    -0x2c458(%ebx),%eax
 805708e:	89 04 24             	mov    %eax,(%esp)
 8057091:	e8 aa a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057096:	e9 20 fb ff ff       	jmp    8056bbb <_ZN6__asan26InitializeAsanInterceptorsEv+0x90b>
 805709b:	90                   	nop
 805709c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80570a0:	e8 7b 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80570a5:	8b 40 08             	mov    0x8(%eax),%eax
 80570a8:	85 c0                	test   %eax,%eax
 80570aa:	0f 8e d7 fa ff ff    	jle    8056b87 <_ZN6__asan26InitializeAsanInterceptorsEv+0x8d7>
 80570b0:	8d 83 78 3b fd ff    	lea    -0x2c488(%ebx),%eax
 80570b6:	89 04 24             	mov    %eax,(%esp)
 80570b9:	e8 82 a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80570be:	e9 c4 fa ff ff       	jmp    8056b87 <_ZN6__asan26InitializeAsanInterceptorsEv+0x8d7>
 80570c3:	90                   	nop
 80570c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80570c8:	e8 53 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80570cd:	8b 40 08             	mov    0x8(%eax),%eax
 80570d0:	85 c0                	test   %eax,%eax
 80570d2:	0f 8e 7b fa ff ff    	jle    8056b53 <_ZN6__asan26InitializeAsanInterceptorsEv+0x8a3>
 80570d8:	8d 83 48 3b fd ff    	lea    -0x2c4b8(%ebx),%eax
 80570de:	89 04 24             	mov    %eax,(%esp)
 80570e1:	e8 5a a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80570e6:	e9 68 fa ff ff       	jmp    8056b53 <_ZN6__asan26InitializeAsanInterceptorsEv+0x8a3>
 80570eb:	90                   	nop
 80570ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80570f0:	e8 2b 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80570f5:	8b 40 08             	mov    0x8(%eax),%eax
 80570f8:	85 c0                	test   %eax,%eax
 80570fa:	0f 8e 1f fa ff ff    	jle    8056b1f <_ZN6__asan26InitializeAsanInterceptorsEv+0x86f>
 8057100:	8d 83 18 3b fd ff    	lea    -0x2c4e8(%ebx),%eax
 8057106:	89 04 24             	mov    %eax,(%esp)
 8057109:	e8 32 a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805710e:	e9 0c fa ff ff       	jmp    8056b1f <_ZN6__asan26InitializeAsanInterceptorsEv+0x86f>
 8057113:	90                   	nop
 8057114:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057118:	e8 03 14 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805711d:	8b 50 08             	mov    0x8(%eax),%edx
 8057120:	85 d2                	test   %edx,%edx
 8057122:	0f 8e c3 f9 ff ff    	jle    8056aeb <_ZN6__asan26InitializeAsanInterceptorsEv+0x83b>
 8057128:	8d 83 e8 3a fd ff    	lea    -0x2c518(%ebx),%eax
 805712e:	89 04 24             	mov    %eax,(%esp)
 8057131:	e8 0a a6 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057136:	e9 b0 f9 ff ff       	jmp    8056aeb <_ZN6__asan26InitializeAsanInterceptorsEv+0x83b>
 805713b:	90                   	nop
 805713c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057140:	e8 db 13 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057145:	8b 48 08             	mov    0x8(%eax),%ecx
 8057148:	85 c9                	test   %ecx,%ecx
 805714a:	0f 8e 67 f9 ff ff    	jle    8056ab7 <_ZN6__asan26InitializeAsanInterceptorsEv+0x807>
 8057150:	8d 83 b4 3a fd ff    	lea    -0x2c54c(%ebx),%eax
 8057156:	89 04 24             	mov    %eax,(%esp)
 8057159:	e8 e2 a5 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805715e:	e9 54 f9 ff ff       	jmp    8056ab7 <_ZN6__asan26InitializeAsanInterceptorsEv+0x807>
 8057163:	90                   	nop
 8057164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057168:	e8 b3 13 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805716d:	8b 40 08             	mov    0x8(%eax),%eax
 8057170:	85 c0                	test   %eax,%eax
 8057172:	0f 8e 0b f9 ff ff    	jle    8056a83 <_ZN6__asan26InitializeAsanInterceptorsEv+0x7d3>
 8057178:	8d 83 84 3a fd ff    	lea    -0x2c57c(%ebx),%eax
 805717e:	89 04 24             	mov    %eax,(%esp)
 8057181:	e8 ba a5 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057186:	e9 f8 f8 ff ff       	jmp    8056a83 <_ZN6__asan26InitializeAsanInterceptorsEv+0x7d3>
 805718b:	90                   	nop
 805718c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057190:	e8 8b 13 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057195:	8b 40 08             	mov    0x8(%eax),%eax
 8057198:	85 c0                	test   %eax,%eax
 805719a:	0f 8e af f8 ff ff    	jle    8056a4f <_ZN6__asan26InitializeAsanInterceptorsEv+0x79f>
 80571a0:	8d 83 4c 3a fd ff    	lea    -0x2c5b4(%ebx),%eax
 80571a6:	89 04 24             	mov    %eax,(%esp)
 80571a9:	e8 92 a5 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80571ae:	e9 9c f8 ff ff       	jmp    8056a4f <_ZN6__asan26InitializeAsanInterceptorsEv+0x79f>
 80571b3:	90                   	nop
 80571b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80571b8:	e8 63 13 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80571bd:	8b 40 08             	mov    0x8(%eax),%eax
 80571c0:	85 c0                	test   %eax,%eax
 80571c2:	0f 8e 53 f8 ff ff    	jle    8056a1b <_ZN6__asan26InitializeAsanInterceptorsEv+0x76b>
 80571c8:	8d 83 18 3a fd ff    	lea    -0x2c5e8(%ebx),%eax
 80571ce:	89 04 24             	mov    %eax,(%esp)
 80571d1:	e8 6a a5 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80571d6:	e9 40 f8 ff ff       	jmp    8056a1b <_ZN6__asan26InitializeAsanInterceptorsEv+0x76b>
 80571db:	90                   	nop
 80571dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80571e0:	e8 3b 13 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80571e5:	8b 40 08             	mov    0x8(%eax),%eax
 80571e8:	85 c0                	test   %eax,%eax
 80571ea:	0f 8e f7 f7 ff ff    	jle    80569e7 <_ZN6__asan26InitializeAsanInterceptorsEv+0x737>
 80571f0:	8d 83 e4 39 fd ff    	lea    -0x2c61c(%ebx),%eax
 80571f6:	89 04 24             	mov    %eax,(%esp)
 80571f9:	e8 42 a5 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80571fe:	e9 e4 f7 ff ff       	jmp    80569e7 <_ZN6__asan26InitializeAsanInterceptorsEv+0x737>
 8057203:	90                   	nop
 8057204:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057208:	e8 13 13 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805720d:	8b 40 08             	mov    0x8(%eax),%eax
 8057210:	85 c0                	test   %eax,%eax
 8057212:	0f 8e 9b f7 ff ff    	jle    80569b3 <_ZN6__asan26InitializeAsanInterceptorsEv+0x703>
 8057218:	8d 83 b0 39 fd ff    	lea    -0x2c650(%ebx),%eax
 805721e:	89 04 24             	mov    %eax,(%esp)
 8057221:	e8 1a a5 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057226:	e9 88 f7 ff ff       	jmp    80569b3 <_ZN6__asan26InitializeAsanInterceptorsEv+0x703>
 805722b:	90                   	nop
 805722c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057230:	e8 eb 12 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057235:	8b 40 08             	mov    0x8(%eax),%eax
 8057238:	85 c0                	test   %eax,%eax
 805723a:	0f 8e 3f f7 ff ff    	jle    805697f <_ZN6__asan26InitializeAsanInterceptorsEv+0x6cf>
 8057240:	8d 83 7c 39 fd ff    	lea    -0x2c684(%ebx),%eax
 8057246:	89 04 24             	mov    %eax,(%esp)
 8057249:	e8 f2 a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805724e:	e9 2c f7 ff ff       	jmp    805697f <_ZN6__asan26InitializeAsanInterceptorsEv+0x6cf>
 8057253:	90                   	nop
 8057254:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057258:	e8 c3 12 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805725d:	8b 50 08             	mov    0x8(%eax),%edx
 8057260:	85 d2                	test   %edx,%edx
 8057262:	0f 8e e3 f6 ff ff    	jle    805694b <_ZN6__asan26InitializeAsanInterceptorsEv+0x69b>
 8057268:	8d 83 4c 39 fd ff    	lea    -0x2c6b4(%ebx),%eax
 805726e:	89 04 24             	mov    %eax,(%esp)
 8057271:	e8 ca a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057276:	e9 d0 f6 ff ff       	jmp    805694b <_ZN6__asan26InitializeAsanInterceptorsEv+0x69b>
 805727b:	90                   	nop
 805727c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057280:	e8 9b 12 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057285:	8b 48 08             	mov    0x8(%eax),%ecx
 8057288:	85 c9                	test   %ecx,%ecx
 805728a:	0f 8e 87 f6 ff ff    	jle    8056917 <_ZN6__asan26InitializeAsanInterceptorsEv+0x667>
 8057290:	8d 83 1c 39 fd ff    	lea    -0x2c6e4(%ebx),%eax
 8057296:	89 04 24             	mov    %eax,(%esp)
 8057299:	e8 a2 a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805729e:	e9 74 f6 ff ff       	jmp    8056917 <_ZN6__asan26InitializeAsanInterceptorsEv+0x667>
 80572a3:	90                   	nop
 80572a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80572a8:	e8 73 12 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80572ad:	8b 40 08             	mov    0x8(%eax),%eax
 80572b0:	85 c0                	test   %eax,%eax
 80572b2:	0f 8e 2b f6 ff ff    	jle    80568e3 <_ZN6__asan26InitializeAsanInterceptorsEv+0x633>
 80572b8:	8d 83 ec 38 fd ff    	lea    -0x2c714(%ebx),%eax
 80572be:	89 04 24             	mov    %eax,(%esp)
 80572c1:	e8 7a a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80572c6:	e9 18 f6 ff ff       	jmp    80568e3 <_ZN6__asan26InitializeAsanInterceptorsEv+0x633>
 80572cb:	90                   	nop
 80572cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80572d0:	e8 4b 12 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80572d5:	8b 40 08             	mov    0x8(%eax),%eax
 80572d8:	85 c0                	test   %eax,%eax
 80572da:	0f 8e cf f5 ff ff    	jle    80568af <_ZN6__asan26InitializeAsanInterceptorsEv+0x5ff>
 80572e0:	8d 83 bc 38 fd ff    	lea    -0x2c744(%ebx),%eax
 80572e6:	89 04 24             	mov    %eax,(%esp)
 80572e9:	e8 52 a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80572ee:	e9 bc f5 ff ff       	jmp    80568af <_ZN6__asan26InitializeAsanInterceptorsEv+0x5ff>
 80572f3:	90                   	nop
 80572f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80572f8:	e8 23 12 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80572fd:	8b 40 08             	mov    0x8(%eax),%eax
 8057300:	85 c0                	test   %eax,%eax
 8057302:	0f 8e 73 f5 ff ff    	jle    805687b <_ZN6__asan26InitializeAsanInterceptorsEv+0x5cb>
 8057308:	8d 83 8c 38 fd ff    	lea    -0x2c774(%ebx),%eax
 805730e:	89 04 24             	mov    %eax,(%esp)
 8057311:	e8 2a a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057316:	e9 60 f5 ff ff       	jmp    805687b <_ZN6__asan26InitializeAsanInterceptorsEv+0x5cb>
 805731b:	90                   	nop
 805731c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057320:	e8 fb 11 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057325:	8b 40 08             	mov    0x8(%eax),%eax
 8057328:	85 c0                	test   %eax,%eax
 805732a:	0f 8e 17 f5 ff ff    	jle    8056847 <_ZN6__asan26InitializeAsanInterceptorsEv+0x597>
 8057330:	8d 83 5c 38 fd ff    	lea    -0x2c7a4(%ebx),%eax
 8057336:	89 04 24             	mov    %eax,(%esp)
 8057339:	e8 02 a4 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805733e:	e9 04 f5 ff ff       	jmp    8056847 <_ZN6__asan26InitializeAsanInterceptorsEv+0x597>
 8057343:	90                   	nop
 8057344:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057348:	e8 d3 11 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805734d:	8b 40 08             	mov    0x8(%eax),%eax
 8057350:	85 c0                	test   %eax,%eax
 8057352:	0f 8e bb f4 ff ff    	jle    8056813 <_ZN6__asan26InitializeAsanInterceptorsEv+0x563>
 8057358:	8d 83 2c 38 fd ff    	lea    -0x2c7d4(%ebx),%eax
 805735e:	89 04 24             	mov    %eax,(%esp)
 8057361:	e8 da a3 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8057366:	e9 a8 f4 ff ff       	jmp    8056813 <_ZN6__asan26InitializeAsanInterceptorsEv+0x563>
 805736b:	90                   	nop
 805736c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057370:	e8 ab 11 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057375:	8b 40 08             	mov    0x8(%eax),%eax
 8057378:	85 c0                	test   %eax,%eax
 805737a:	0f 8e 5f f4 ff ff    	jle    80567df <_ZN6__asan26InitializeAsanInterceptorsEv+0x52f>
 8057380:	8d 83 f8 37 fd ff    	lea    -0x2c808(%ebx),%eax
 8057386:	89 04 24             	mov    %eax,(%esp)
 8057389:	e8 b2 a3 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805738e:	e9 4c f4 ff ff       	jmp    80567df <_ZN6__asan26InitializeAsanInterceptorsEv+0x52f>
 8057393:	8d 83 70 37 fd ff    	lea    -0x2c890(%ebx),%eax
 8057399:	89 44 24 08          	mov    %eax,0x8(%esp)
 805739d:	8d 83 28 36 fd ff    	lea    -0x2c9d8(%ebx),%eax
 80573a3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80573aa:	00 
 80573ab:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80573b2:	00 
 80573b3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80573ba:	00 
 80573bb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80573c2:	00 
 80573c3:	c7 44 24 04 98 02 00 	movl   $0x298,0x4(%esp)
 80573ca:	00 
 80573cb:	89 04 24             	mov    %eax,(%esp)
 80573ce:	e8 dd af 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80573d3:	66 90                	xchg   %ax,%ax
 80573d5:	66 90                	xchg   %ax,%ax
 80573d7:	66 90                	xchg   %ax,%ax
 80573d9:	66 90                	xchg   %ax,%ax
 80573db:	66 90                	xchg   %ax,%ax
 80573dd:	66 90                	xchg   %ax,%ax
 80573df:	90                   	nop

080573e0 <_ZN6__asan28ReplaceOperatorsNewAndDeleteEv>:
 80573e0:	f3 c3                	repz ret 
 80573e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80573e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080573f0 <_Znwj>:
 80573f0:	55                   	push   %ebp
 80573f1:	89 e5                	mov    %esp,%ebp
 80573f3:	57                   	push   %edi
 80573f4:	56                   	push   %esi
 80573f5:	53                   	push   %ebx
 80573f6:	e8 f5 26 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80573fb:	81 c3 05 8c 05 00    	add    $0x58c05,%ebx
 8057401:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057407:	e8 14 11 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805740c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057410:	e8 6b d5 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057415:	89 c6                	mov    %eax,%esi
 8057417:	e8 04 11 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805741c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8057420:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8057424:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057428:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805742e:	8b 40 1c             	mov    0x1c(%eax),%eax
 8057431:	89 34 24             	mov    %esi,(%esp)
 8057434:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057438:	e8 33 50 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805743d:	8b 45 08             	mov    0x8(%ebp),%eax
 8057440:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057444:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 805744b:	00 
 805744c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8057453:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057457:	e8 34 78 ff ff       	call   804ec90 <_ZN6__asan13asan_memalignEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 805745c:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 8057462:	5b                   	pop    %ebx
 8057463:	5e                   	pop    %esi
 8057464:	5f                   	pop    %edi
 8057465:	5d                   	pop    %ebp
 8057466:	c3                   	ret    
 8057467:	89 f6                	mov    %esi,%esi
 8057469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08057470 <_Znaj>:
 8057470:	55                   	push   %ebp
 8057471:	89 e5                	mov    %esp,%ebp
 8057473:	57                   	push   %edi
 8057474:	56                   	push   %esi
 8057475:	53                   	push   %ebx
 8057476:	e8 75 26 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805747b:	81 c3 85 8b 05 00    	add    $0x58b85,%ebx
 8057481:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057487:	e8 94 10 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805748c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057490:	e8 eb d4 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057495:	89 c6                	mov    %eax,%esi
 8057497:	e8 84 10 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805749c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 80574a0:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 80574a4:	89 74 24 08          	mov    %esi,0x8(%esp)
 80574a8:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 80574ae:	8b 40 1c             	mov    0x1c(%eax),%eax
 80574b1:	89 34 24             	mov    %esi,(%esp)
 80574b4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80574b8:	e8 b3 4f 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 80574bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80574c0:	89 74 24 08          	mov    %esi,0x8(%esp)
 80574c4:	c7 44 24 0c 03 00 00 	movl   $0x3,0xc(%esp)
 80574cb:	00 
 80574cc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80574d3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80574d7:	e8 b4 77 ff ff       	call   804ec90 <_ZN6__asan13asan_memalignEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 80574dc:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 80574e2:	5b                   	pop    %ebx
 80574e3:	5e                   	pop    %esi
 80574e4:	5f                   	pop    %edi
 80574e5:	5d                   	pop    %ebp
 80574e6:	c3                   	ret    
 80574e7:	89 f6                	mov    %esi,%esi
 80574e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080574f0 <_ZnwjRKSt9nothrow_t>:
 80574f0:	55                   	push   %ebp
 80574f1:	89 e5                	mov    %esp,%ebp
 80574f3:	57                   	push   %edi
 80574f4:	56                   	push   %esi
 80574f5:	53                   	push   %ebx
 80574f6:	e8 f5 25 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80574fb:	81 c3 05 8b 05 00    	add    $0x58b05,%ebx
 8057501:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057507:	e8 14 10 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805750c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057510:	e8 6b d4 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057515:	89 c6                	mov    %eax,%esi
 8057517:	e8 04 10 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805751c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8057520:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8057524:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057528:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805752e:	8b 40 1c             	mov    0x1c(%eax),%eax
 8057531:	89 34 24             	mov    %esi,(%esp)
 8057534:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057538:	e8 33 4f 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805753d:	8b 45 08             	mov    0x8(%ebp),%eax
 8057540:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057544:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 805754b:	00 
 805754c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8057553:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057557:	e8 34 77 ff ff       	call   804ec90 <_ZN6__asan13asan_memalignEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 805755c:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 8057562:	5b                   	pop    %ebx
 8057563:	5e                   	pop    %esi
 8057564:	5f                   	pop    %edi
 8057565:	5d                   	pop    %ebp
 8057566:	c3                   	ret    
 8057567:	89 f6                	mov    %esi,%esi
 8057569:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08057570 <_ZnajRKSt9nothrow_t>:
 8057570:	55                   	push   %ebp
 8057571:	89 e5                	mov    %esp,%ebp
 8057573:	57                   	push   %edi
 8057574:	56                   	push   %esi
 8057575:	53                   	push   %ebx
 8057576:	e8 75 25 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805757b:	81 c3 85 8a 05 00    	add    $0x58a85,%ebx
 8057581:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057587:	e8 94 0f 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805758c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057590:	e8 eb d3 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057595:	89 c6                	mov    %eax,%esi
 8057597:	e8 84 0f 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805759c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 80575a0:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 80575a4:	89 74 24 08          	mov    %esi,0x8(%esp)
 80575a8:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 80575ae:	8b 40 1c             	mov    0x1c(%eax),%eax
 80575b1:	89 34 24             	mov    %esi,(%esp)
 80575b4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80575b8:	e8 b3 4e 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 80575bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80575c0:	89 74 24 08          	mov    %esi,0x8(%esp)
 80575c4:	c7 44 24 0c 03 00 00 	movl   $0x3,0xc(%esp)
 80575cb:	00 
 80575cc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80575d3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80575d7:	e8 b4 76 ff ff       	call   804ec90 <_ZN6__asan13asan_memalignEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 80575dc:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 80575e2:	5b                   	pop    %ebx
 80575e3:	5e                   	pop    %esi
 80575e4:	5f                   	pop    %edi
 80575e5:	5d                   	pop    %ebp
 80575e6:	c3                   	ret    
 80575e7:	89 f6                	mov    %esi,%esi
 80575e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080575f0 <_ZdlPv>:
 80575f0:	55                   	push   %ebp
 80575f1:	89 e5                	mov    %esp,%ebp
 80575f3:	57                   	push   %edi
 80575f4:	56                   	push   %esi
 80575f5:	53                   	push   %ebx
 80575f6:	e8 f5 24 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80575fb:	81 c3 05 8a 05 00    	add    $0x58a05,%ebx
 8057601:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057607:	e8 14 0f 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805760c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057610:	e8 6b d3 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057615:	89 c6                	mov    %eax,%esi
 8057617:	e8 04 0f 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805761c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8057620:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8057624:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057628:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805762e:	8b 40 1c             	mov    0x1c(%eax),%eax
 8057631:	89 34 24             	mov    %esi,(%esp)
 8057634:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057638:	e8 33 4e 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805763d:	8b 45 08             	mov    0x8(%ebp),%eax
 8057640:	89 74 24 04          	mov    %esi,0x4(%esp)
 8057644:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 805764b:	00 
 805764c:	89 04 24             	mov    %eax,(%esp)
 805764f:	e8 ec 63 ff ff       	call   804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 8057654:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805765a:	5b                   	pop    %ebx
 805765b:	5e                   	pop    %esi
 805765c:	5f                   	pop    %edi
 805765d:	5d                   	pop    %ebp
 805765e:	c3                   	ret    
 805765f:	90                   	nop

08057660 <_ZdaPv>:
 8057660:	55                   	push   %ebp
 8057661:	89 e5                	mov    %esp,%ebp
 8057663:	57                   	push   %edi
 8057664:	56                   	push   %esi
 8057665:	53                   	push   %ebx
 8057666:	e8 85 24 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805766b:	81 c3 95 89 05 00    	add    $0x58995,%ebx
 8057671:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057677:	e8 a4 0e 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805767c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057680:	e8 fb d2 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057685:	89 c6                	mov    %eax,%esi
 8057687:	e8 94 0e 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805768c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8057690:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8057694:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057698:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805769e:	8b 40 1c             	mov    0x1c(%eax),%eax
 80576a1:	89 34 24             	mov    %esi,(%esp)
 80576a4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80576a8:	e8 c3 4d 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 80576ad:	8b 45 08             	mov    0x8(%ebp),%eax
 80576b0:	89 74 24 04          	mov    %esi,0x4(%esp)
 80576b4:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 80576bb:	00 
 80576bc:	89 04 24             	mov    %eax,(%esp)
 80576bf:	e8 7c 63 ff ff       	call   804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 80576c4:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 80576ca:	5b                   	pop    %ebx
 80576cb:	5e                   	pop    %esi
 80576cc:	5f                   	pop    %edi
 80576cd:	5d                   	pop    %ebp
 80576ce:	c3                   	ret    
 80576cf:	90                   	nop

080576d0 <_ZdlPvRKSt9nothrow_t>:
 80576d0:	55                   	push   %ebp
 80576d1:	89 e5                	mov    %esp,%ebp
 80576d3:	57                   	push   %edi
 80576d4:	56                   	push   %esi
 80576d5:	53                   	push   %ebx
 80576d6:	e8 15 24 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80576db:	81 c3 25 89 05 00    	add    $0x58925,%ebx
 80576e1:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 80576e7:	e8 34 0e 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80576ec:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 80576f0:	e8 8b d2 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80576f5:	89 c6                	mov    %eax,%esi
 80576f7:	e8 24 0e 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80576fc:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8057700:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8057704:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057708:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805770e:	8b 40 1c             	mov    0x1c(%eax),%eax
 8057711:	89 34 24             	mov    %esi,(%esp)
 8057714:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057718:	e8 53 4d 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805771d:	8b 45 08             	mov    0x8(%ebp),%eax
 8057720:	89 74 24 04          	mov    %esi,0x4(%esp)
 8057724:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 805772b:	00 
 805772c:	89 04 24             	mov    %eax,(%esp)
 805772f:	e8 0c 63 ff ff       	call   804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 8057734:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805773a:	5b                   	pop    %ebx
 805773b:	5e                   	pop    %esi
 805773c:	5f                   	pop    %edi
 805773d:	5d                   	pop    %ebp
 805773e:	c3                   	ret    
 805773f:	90                   	nop

08057740 <_ZdaPvRKSt9nothrow_t>:
 8057740:	55                   	push   %ebp
 8057741:	89 e5                	mov    %esp,%ebp
 8057743:	57                   	push   %edi
 8057744:	56                   	push   %esi
 8057745:	53                   	push   %ebx
 8057746:	e8 a5 23 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805774b:	81 c3 b5 88 05 00    	add    $0x588b5,%ebx
 8057751:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 8057757:	e8 c4 0d 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805775c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 8057760:	e8 1b d2 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8057765:	89 c6                	mov    %eax,%esi
 8057767:	e8 b4 0d 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805776c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8057770:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8057774:	89 74 24 08          	mov    %esi,0x8(%esp)
 8057778:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805777e:	8b 40 1c             	mov    0x1c(%eax),%eax
 8057781:	89 34 24             	mov    %esi,(%esp)
 8057784:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057788:	e8 e3 4c 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805778d:	8b 45 08             	mov    0x8(%ebp),%eax
 8057790:	89 74 24 04          	mov    %esi,0x4(%esp)
 8057794:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 805779b:	00 
 805779c:	89 04 24             	mov    %eax,(%esp)
 805779f:	e8 9c 62 ff ff       	call   804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 80577a4:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 80577aa:	5b                   	pop    %ebx
 80577ab:	5e                   	pop    %esi
 80577ac:	5f                   	pop    %edi
 80577ad:	5d                   	pop    %ebp
 80577ae:	c3                   	ret    
 80577af:	90                   	nop

080577b0 <_ZN6__asanL14ASAN_OnSIGSEGVEiP9siginfo_tPv>:
 80577b0:	56                   	push   %esi
 80577b1:	53                   	push   %ebx
 80577b2:	e8 39 23 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80577b7:	81 c3 49 88 05 00    	add    $0x58849,%ebx
 80577bd:	83 ec 24             	sub    $0x24,%esp
 80577c0:	8b 44 24 34          	mov    0x34(%esp),%eax
 80577c4:	8b 70 0c             	mov    0xc(%eax),%esi
 80577c7:	8d 83 7d 40 fd ff    	lea    -0x2bf83(%ebx),%eax
 80577cd:	c7 44 24 08 0d 00 00 	movl   $0xd,0x8(%esp)
 80577d4:	00 
 80577d5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80577d9:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 80577e0:	e8 6b d9 00 00       	call   8065150 <_ZN11__sanitizer14internal_writeEiPKvm>
 80577e5:	83 f8 0d             	cmp    $0xd,%eax
 80577e8:	74 05                	je     80577ef <_ZN6__asanL14ASAN_OnSIGSEGVEiP9siginfo_tPv+0x3f>
 80577ea:	e8 71 aa 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 80577ef:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80577f3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80577f7:	8d 44 24 18          	lea    0x18(%esp),%eax
 80577fb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80577ff:	8d 44 24 14          	lea    0x14(%esp),%eax
 8057803:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057807:	8b 44 24 38          	mov    0x38(%esp),%eax
 805780b:	89 04 24             	mov    %eax,(%esp)
 805780e:	e8 fd 4b 00 00       	call   805c410 <_ZN6__asan9GetPcSpBpEPvPmS1_S1_>
 8057813:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8057817:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805781b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805781f:	8b 44 24 18          	mov    0x18(%esp),%eax
 8057823:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057827:	8b 44 24 14          	mov    0x14(%esp),%eax
 805782b:	89 04 24             	mov    %eax,(%esp)
 805782e:	e8 4d 75 00 00       	call   805ed80 <_ZN6__asan13ReportSIGSEGVEmmmm>
 8057833:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8057839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08057840 <_ZN6__asanL21MaybeInstallSigactionEiPFviP9siginfo_tPvE.part.0.constprop.4>:
 8057840:	57                   	push   %edi
 8057841:	89 c7                	mov    %eax,%edi
 8057843:	56                   	push   %esi
 8057844:	53                   	push   %ebx
 8057845:	e8 a6 22 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805784a:	81 c3 b6 87 05 00    	add    $0x587b6,%ebx
 8057850:	81 ec b0 00 00 00    	sub    $0xb0,%esp
 8057856:	8d 74 24 24          	lea    0x24(%esp),%esi
 805785a:	c7 44 24 08 8c 00 00 	movl   $0x8c,0x8(%esp)
 8057861:	00 
 8057862:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8057869:	00 
 805786a:	89 34 24             	mov    %esi,(%esp)
 805786d:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 8057873:	ff 10                	call   *(%eax)
 8057875:	8d 83 b0 77 fa ff    	lea    -0x58850(%ebx),%eax
 805787b:	89 44 24 24          	mov    %eax,0x24(%esp)
 805787f:	c7 84 24 a8 00 00 00 	movl   $0x4,0xa8(%esp)
 8057886:	04 00 00 00 
 805788a:	e8 91 0c 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 805788f:	80 78 35 00          	cmpb   $0x0,0x35(%eax)
 8057893:	74 0b                	je     80578a0 <_ZN6__asanL21MaybeInstallSigactionEiPFviP9siginfo_tPvE.part.0.constprop.4+0x60>
 8057895:	81 8c 24 a8 00 00 00 	orl    $0x8000000,0xa8(%esp)
 805789c:	00 00 00 08 
 80578a0:	8d 83 68 bb 02 00    	lea    0x2bb68(%ebx),%eax
 80578a6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 80578ad:	00 
 80578ae:	89 74 24 04          	mov    %esi,0x4(%esp)
 80578b2:	89 3c 24             	mov    %edi,(%esp)
 80578b5:	ff 10                	call   *(%eax)
 80578b7:	85 c0                	test   %eax,%eax
 80578b9:	75 28                	jne    80578e3 <_ZN6__asanL21MaybeInstallSigactionEiPFviP9siginfo_tPvE.part.0.constprop.4+0xa3>
 80578bb:	e8 60 0c 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80578c0:	8b 40 08             	mov    0x8(%eax),%eax
 80578c3:	85 c0                	test   %eax,%eax
 80578c5:	7e 12                	jle    80578d9 <_ZN6__asanL21MaybeInstallSigactionEiPFviP9siginfo_tPvE.part.0.constprop.4+0x99>
 80578c7:	8d 83 34 41 fd ff    	lea    -0x2becc(%ebx),%eax
 80578cd:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80578d1:	89 04 24             	mov    %eax,(%esp)
 80578d4:	e8 67 9e 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80578d9:	81 c4 b0 00 00 00    	add    $0xb0,%esp
 80578df:	5b                   	pop    %ebx
 80578e0:	5e                   	pop    %esi
 80578e1:	5f                   	pop    %edi
 80578e2:	c3                   	ret    
 80578e3:	8d 83 c0 40 fd ff    	lea    -0x2bf40(%ebx),%eax
 80578e9:	89 44 24 08          	mov    %eax,0x8(%esp)
 80578ed:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 80578f3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80578fa:	00 
 80578fb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057902:	00 
 8057903:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805790a:	00 
 805790b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057912:	00 
 8057913:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)
 805791a:	00 
 805791b:	89 04 24             	mov    %eax,(%esp)
 805791e:	e8 8d aa 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057923:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8057929:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08057930 <_ZN6__asan23SetAlternateSignalStackEv>:
 8057930:	57                   	push   %edi
 8057931:	56                   	push   %esi
 8057932:	53                   	push   %ebx
 8057933:	e8 b8 21 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057938:	81 c3 c8 86 05 00    	add    $0x586c8,%ebx
 805793e:	83 ec 40             	sub    $0x40,%esp
 8057941:	8d 44 24 34          	lea    0x34(%esp),%eax
 8057945:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057949:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8057950:	e8 4b 20 ff ff       	call   80499a0 <sigaltstack@plt>
 8057955:	85 c0                	test   %eax,%eax
 8057957:	0f 85 c2 00 00 00    	jne    8057a1f <_ZN6__asan23SetAlternateSignalStackEv+0xef>
 805795d:	f6 44 24 38 02       	testb  $0x2,0x38(%esp)
 8057962:	75 0c                	jne    8057970 <_ZN6__asan23SetAlternateSignalStackEv+0x40>
 8057964:	83 c4 40             	add    $0x40,%esp
 8057967:	5b                   	pop    %ebx
 8057968:	5e                   	pop    %esi
 8057969:	5f                   	pop    %edi
 805796a:	c3                   	ret    
 805796b:	90                   	nop
 805796c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057970:	8d 83 49 42 fd ff    	lea    -0x2bdb7(%ebx),%eax
 8057976:	89 44 24 04          	mov    %eax,0x4(%esp)
 805797a:	c7 04 24 00 80 00 00 	movl   $0x8000,(%esp)
 8057981:	e8 5a b8 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8057986:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 805798d:	00 
 805798e:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8057995:	00 
 8057996:	c7 44 24 30 00 80 00 	movl   $0x8000,0x30(%esp)
 805799d:	00 
 805799e:	89 44 24 28          	mov    %eax,0x28(%esp)
 80579a2:	8d 44 24 28          	lea    0x28(%esp),%eax
 80579a6:	89 04 24             	mov    %eax,(%esp)
 80579a9:	e8 f2 1f ff ff       	call   80499a0 <sigaltstack@plt>
 80579ae:	85 c0                	test   %eax,%eax
 80579b0:	0f 85 a9 00 00 00    	jne    8057a5f <_ZN6__asan23SetAlternateSignalStackEv+0x12f>
 80579b6:	e8 65 0b 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 80579bb:	8b 40 08             	mov    0x8(%eax),%eax
 80579be:	85 c0                	test   %eax,%eax
 80579c0:	7e a2                	jle    8057964 <_ZN6__asan23SetAlternateSignalStackEv+0x34>
 80579c2:	8b 74 24 28          	mov    0x28(%esp),%esi
 80579c6:	8b 7c 24 30          	mov    0x30(%esp),%edi
 80579ca:	e8 a1 1f 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 80579cf:	31 d2                	xor    %edx,%edx
 80579d1:	01 f7                	add    %esi,%edi
 80579d3:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 80579da:	75 24                	jne    8057a00 <_ZN6__asan23SetAlternateSignalStackEv+0xd0>
 80579dc:	8d 83 b4 41 fd ff    	lea    -0x2be4c(%ebx),%eax
 80579e2:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80579e6:	89 74 24 08          	mov    %esi,0x8(%esp)
 80579ea:	89 54 24 04          	mov    %edx,0x4(%esp)
 80579ee:	89 04 24             	mov    %eax,(%esp)
 80579f1:	e8 4a 9d 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80579f6:	83 c4 40             	add    $0x40,%esp
 80579f9:	5b                   	pop    %ebx
 80579fa:	5e                   	pop    %esi
 80579fb:	5f                   	pop    %edi
 80579fc:	c3                   	ret    
 80579fd:	8d 76 00             	lea    0x0(%esi),%esi
 8057a00:	89 04 24             	mov    %eax,(%esp)
 8057a03:	e8 78 21 00 00       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 8057a08:	85 c0                	test   %eax,%eax
 8057a0a:	74 0c                	je     8057a18 <_ZN6__asan23SetAlternateSignalStackEv+0xe8>
 8057a0c:	8b 00                	mov    (%eax),%eax
 8057a0e:	8b 10                	mov    (%eax),%edx
 8057a10:	eb ca                	jmp    80579dc <_ZN6__asan23SetAlternateSignalStackEv+0xac>
 8057a12:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8057a18:	ba ff ff ff 00       	mov    $0xffffff,%edx
 8057a1d:	eb bd                	jmp    80579dc <_ZN6__asan23SetAlternateSignalStackEv+0xac>
 8057a1f:	8d 83 5c 41 fd ff    	lea    -0x2bea4(%ebx),%eax
 8057a25:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057a29:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057a2f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057a36:	00 
 8057a37:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057a3e:	00 
 8057a3f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057a46:	00 
 8057a47:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057a4e:	00 
 8057a4f:	c7 44 24 04 3c 00 00 	movl   $0x3c,0x4(%esp)
 8057a56:	00 
 8057a57:	89 04 24             	mov    %eax,(%esp)
 8057a5a:	e8 51 a9 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057a5f:	8d 83 88 41 fd ff    	lea    -0x2be78(%ebx),%eax
 8057a65:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057a69:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057a6f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057a76:	00 
 8057a77:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057a7e:	00 
 8057a7f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057a86:	00 
 8057a87:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057a8e:	00 
 8057a8f:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)
 8057a96:	00 
 8057a97:	89 04 24             	mov    %eax,(%esp)
 8057a9a:	e8 11 a9 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057a9f:	90                   	nop

08057aa0 <_ZN6__asan25UnsetAlternateSignalStackEv>:
 8057aa0:	53                   	push   %ebx
 8057aa1:	e8 4a 20 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057aa6:	81 c3 5a 85 05 00    	add    $0x5855a,%ebx
 8057aac:	83 ec 48             	sub    $0x48,%esp
 8057aaf:	8d 44 24 34          	lea    0x34(%esp),%eax
 8057ab3:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057ab7:	8d 44 24 28          	lea    0x28(%esp),%eax
 8057abb:	89 04 24             	mov    %eax,(%esp)
 8057abe:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 8057ac5:	00 
 8057ac6:	c7 44 24 2c 02 00 00 	movl   $0x2,0x2c(%esp)
 8057acd:	00 
 8057ace:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 8057ad5:	00 
 8057ad6:	e8 c5 1e ff ff       	call   80499a0 <sigaltstack@plt>
 8057adb:	85 c0                	test   %eax,%eax
 8057add:	75 19                	jne    8057af8 <_ZN6__asan25UnsetAlternateSignalStackEv+0x58>
 8057adf:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8057ae3:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057ae7:	8b 44 24 34          	mov    0x34(%esp),%eax
 8057aeb:	89 04 24             	mov    %eax,(%esp)
 8057aee:	e8 bd af 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8057af3:	83 c4 48             	add    $0x48,%esp
 8057af6:	5b                   	pop    %ebx
 8057af7:	c3                   	ret    
 8057af8:	8d 83 dc 41 fd ff    	lea    -0x2be24(%ebx),%eax
 8057afe:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057b02:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057b08:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057b0f:	00 
 8057b10:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057b17:	00 
 8057b18:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057b1f:	00 
 8057b20:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057b27:	00 
 8057b28:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)
 8057b2f:	00 
 8057b30:	89 04 24             	mov    %eax,(%esp)
 8057b33:	e8 78 a8 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057b38:	90                   	nop
 8057b39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08057b40 <_ZN6__asan21InstallSignalHandlersEv>:
 8057b40:	53                   	push   %ebx
 8057b41:	e8 aa 1f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057b46:	81 c3 ba 84 05 00    	add    $0x584ba,%ebx
 8057b4c:	83 ec 18             	sub    $0x18,%esp
 8057b4f:	e8 cc 09 00 00       	call   8058520 <_ZN6__asan5flagsEv>
 8057b54:	80 78 35 00          	cmpb   $0x0,0x35(%eax)
 8057b58:	74 05                	je     8057b5f <_ZN6__asan21InstallSignalHandlersEv+0x1f>
 8057b5a:	e8 d1 fd ff ff       	call   8057930 <_ZN6__asan23SetAlternateSignalStackEv>
 8057b5f:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)
 8057b66:	e8 c5 48 00 00       	call   805c430 <_ZN6__asan20AsanInterceptsSignalEi>
 8057b6b:	84 c0                	test   %al,%al
 8057b6d:	75 19                	jne    8057b88 <_ZN6__asan21InstallSignalHandlersEv+0x48>
 8057b6f:	c7 04 24 07 00 00 00 	movl   $0x7,(%esp)
 8057b76:	e8 b5 48 00 00       	call   805c430 <_ZN6__asan20AsanInterceptsSignalEi>
 8057b7b:	84 c0                	test   %al,%al
 8057b7d:	75 23                	jne    8057ba2 <_ZN6__asan21InstallSignalHandlersEv+0x62>
 8057b7f:	83 c4 18             	add    $0x18,%esp
 8057b82:	5b                   	pop    %ebx
 8057b83:	c3                   	ret    
 8057b84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8057b88:	b8 0b 00 00 00       	mov    $0xb,%eax
 8057b8d:	e8 ae fc ff ff       	call   8057840 <_ZN6__asanL21MaybeInstallSigactionEiPFviP9siginfo_tPvE.part.0.constprop.4>
 8057b92:	c7 04 24 07 00 00 00 	movl   $0x7,(%esp)
 8057b99:	e8 92 48 00 00       	call   805c430 <_ZN6__asan20AsanInterceptsSignalEi>
 8057b9e:	84 c0                	test   %al,%al
 8057ba0:	74 dd                	je     8057b7f <_ZN6__asan21InstallSignalHandlersEv+0x3f>
 8057ba2:	83 c4 18             	add    $0x18,%esp
 8057ba5:	b8 07 00 00 00       	mov    $0x7,%eax
 8057baa:	5b                   	pop    %ebx
 8057bab:	e9 90 fc ff ff       	jmp    8057840 <_ZN6__asanL21MaybeInstallSigactionEiPFviP9siginfo_tPvE.part.0.constprop.4>

08057bb0 <_ZN6__asan11AsanTSDInitEPFvPvE>:
 8057bb0:	53                   	push   %ebx
 8057bb1:	e8 3a 1f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057bb6:	81 c3 4a 84 05 00    	add    $0x5844a,%ebx
 8057bbc:	83 ec 28             	sub    $0x28,%esp
 8057bbf:	80 bb e4 bb 02 00 00 	cmpb   $0x0,0x2bbe4(%ebx)
 8057bc6:	75 26                	jne    8057bee <_ZN6__asan11AsanTSDInitEPFvPvE+0x3e>
 8057bc8:	8b 44 24 30          	mov    0x30(%esp),%eax
 8057bcc:	c6 83 e4 bb 02 00 01 	movb   $0x1,0x2bbe4(%ebx)
 8057bd3:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057bd7:	8d 83 e8 bb 02 00    	lea    0x2bbe8(%ebx),%eax
 8057bdd:	89 04 24             	mov    %eax,(%esp)
 8057be0:	e8 3b 1b ff ff       	call   8049720 <pthread_key_create@plt>
 8057be5:	85 c0                	test   %eax,%eax
 8057be7:	75 45                	jne    8057c2e <_ZN6__asan11AsanTSDInitEPFvPvE+0x7e>
 8057be9:	83 c4 28             	add    $0x28,%esp
 8057bec:	5b                   	pop    %ebx
 8057bed:	c3                   	ret    
 8057bee:	8d 83 8b 40 fd ff    	lea    -0x2bf75(%ebx),%eax
 8057bf4:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057bf8:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057bfe:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057c05:	00 
 8057c06:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057c0d:	00 
 8057c0e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057c15:	00 
 8057c16:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057c1d:	00 
 8057c1e:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)
 8057c25:	00 
 8057c26:	89 04 24             	mov    %eax,(%esp)
 8057c29:	e8 82 a7 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057c2e:	8d 83 10 42 fd ff    	lea    -0x2bdf0(%ebx),%eax
 8057c34:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057c38:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057c3e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057c45:	00 
 8057c46:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057c4d:	00 
 8057c4e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057c55:	00 
 8057c56:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057c5d:	00 
 8057c5e:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)
 8057c65:	00 
 8057c66:	89 04 24             	mov    %eax,(%esp)
 8057c69:	e8 42 a7 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057c6e:	66 90                	xchg   %ax,%ax

08057c70 <_ZN6__asan10AsanTSDGetEv>:
 8057c70:	53                   	push   %ebx
 8057c71:	e8 7a 1e ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057c76:	81 c3 8a 83 05 00    	add    $0x5838a,%ebx
 8057c7c:	83 ec 28             	sub    $0x28,%esp
 8057c7f:	80 bb e4 bb 02 00 00 	cmpb   $0x0,0x2bbe4(%ebx)
 8057c86:	74 13                	je     8057c9b <_ZN6__asan10AsanTSDGetEv+0x2b>
 8057c88:	8b 83 e8 bb 02 00    	mov    0x2bbe8(%ebx),%eax
 8057c8e:	89 04 24             	mov    %eax,(%esp)
 8057c91:	e8 ea 1c ff ff       	call   8049980 <pthread_getspecific@plt>
 8057c96:	83 c4 28             	add    $0x28,%esp
 8057c99:	5b                   	pop    %ebx
 8057c9a:	c3                   	ret    
 8057c9b:	8d 83 a6 40 fd ff    	lea    -0x2bf5a(%ebx),%eax
 8057ca1:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057ca5:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057cab:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057cb2:	00 
 8057cb3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057cba:	00 
 8057cbb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057cc2:	00 
 8057cc3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057cca:	00 
 8057ccb:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)
 8057cd2:	00 
 8057cd3:	89 04 24             	mov    %eax,(%esp)
 8057cd6:	e8 d5 a6 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057cdb:	90                   	nop
 8057cdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08057ce0 <_ZN6__asan10AsanTSDSetEPv>:
 8057ce0:	53                   	push   %ebx
 8057ce1:	e8 0a 1e ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057ce6:	81 c3 1a 83 05 00    	add    $0x5831a,%ebx
 8057cec:	83 ec 28             	sub    $0x28,%esp
 8057cef:	80 bb e4 bb 02 00 00 	cmpb   $0x0,0x2bbe4(%ebx)
 8057cf6:	74 1b                	je     8057d13 <_ZN6__asan10AsanTSDSetEPv+0x33>
 8057cf8:	8b 44 24 30          	mov    0x30(%esp),%eax
 8057cfc:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057d00:	8b 83 e8 bb 02 00    	mov    0x2bbe8(%ebx),%eax
 8057d06:	89 04 24             	mov    %eax,(%esp)
 8057d09:	e8 12 1c ff ff       	call   8049920 <pthread_setspecific@plt>
 8057d0e:	83 c4 28             	add    $0x28,%esp
 8057d11:	5b                   	pop    %ebx
 8057d12:	c3                   	ret    
 8057d13:	8d 83 a6 40 fd ff    	lea    -0x2bf5a(%ebx),%eax
 8057d19:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057d1d:	8d 83 04 41 fd ff    	lea    -0x2befc(%ebx),%eax
 8057d23:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8057d2a:	00 
 8057d2b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8057d32:	00 
 8057d33:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8057d3a:	00 
 8057d3b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8057d42:	00 
 8057d43:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)
 8057d4a:	00 
 8057d4b:	89 04 24             	mov    %eax,(%esp)
 8057d4e:	e8 5d a6 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8057d53:	66 90                	xchg   %ax,%ax
 8057d55:	66 90                	xchg   %ax,%ax
 8057d57:	66 90                	xchg   %ax,%ax
 8057d59:	66 90                	xchg   %ax,%ax
 8057d5b:	66 90                	xchg   %ax,%ax
 8057d5d:	66 90                	xchg   %ax,%ax
 8057d5f:	90                   	nop

08057d60 <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc>:
 8057d60:	57                   	push   %edi
 8057d61:	89 d7                	mov    %edx,%edi
 8057d63:	56                   	push   %esi
 8057d64:	89 c6                	mov    %eax,%esi
 8057d66:	53                   	push   %ebx
 8057d67:	e8 84 1d ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8057d6c:	81 c3 94 82 05 00    	add    $0x58294,%ebx
 8057d72:	83 ec 20             	sub    $0x20,%esp
 8057d75:	89 14 24             	mov    %edx,(%esp)
 8057d78:	89 74 24 04          	mov    %esi,0x4(%esp)
 8057d7c:	8d 83 61 42 fd ff    	lea    -0x2bd9f(%ebx),%eax
 8057d82:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057d86:	e8 45 d0 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057d8b:	8d 83 71 42 fd ff    	lea    -0x2bd8f(%ebx),%eax
 8057d91:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057d95:	8d 46 04             	lea    0x4(%esi),%eax
 8057d98:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057d9c:	89 3c 24             	mov    %edi,(%esp)
 8057d9f:	e8 1c cf 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057da4:	8d 83 7b 42 fd ff    	lea    -0x2bd85(%ebx),%eax
 8057daa:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057dae:	8d 46 08             	lea    0x8(%esi),%eax
 8057db1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057db5:	89 3c 24             	mov    %edi,(%esp)
 8057db8:	e8 13 d0 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057dbd:	8d 83 85 42 fd ff    	lea    -0x2bd7b(%ebx),%eax
 8057dc3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057dc7:	8d 46 0c             	lea    0xc(%esi),%eax
 8057dca:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057dce:	89 3c 24             	mov    %edi,(%esp)
 8057dd1:	e8 fa cf 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057dd6:	8b 46 0c             	mov    0xc(%esi),%eax
 8057dd9:	83 f8 0f             	cmp    $0xf,%eax
 8057ddc:	0f 8e 0d 03 00 00    	jle    80580ef <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc+0x38f>
 8057de2:	8d 50 ff             	lea    -0x1(%eax),%edx
 8057de5:	85 c2                	test   %eax,%edx
 8057de7:	0f 85 82 03 00 00    	jne    805816f <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc+0x40f>
 8057ded:	8d 83 a9 42 fd ff    	lea    -0x2bd57(%ebx),%eax
 8057df3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057df7:	8d 46 10             	lea    0x10(%esi),%eax
 8057dfa:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057dfe:	89 3c 24             	mov    %edi,(%esp)
 8057e01:	e8 ba ce 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057e06:	8d 83 af 42 fd ff    	lea    -0x2bd51(%ebx),%eax
 8057e0c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057e10:	8d 46 14             	lea    0x14(%esi),%eax
 8057e13:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057e17:	89 3c 24             	mov    %edi,(%esp)
 8057e1a:	e8 b1 cf 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057e1f:	8d 83 be 42 fd ff    	lea    -0x2bd42(%ebx),%eax
 8057e25:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057e29:	8d 46 18             	lea    0x18(%esi),%eax
 8057e2c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057e30:	89 3c 24             	mov    %edi,(%esp)
 8057e33:	e8 88 ce 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057e38:	8d 83 d3 42 fd ff    	lea    -0x2bd2d(%ebx),%eax
 8057e3e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057e42:	8d 46 1c             	lea    0x1c(%esi),%eax
 8057e45:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057e49:	89 3c 24             	mov    %edi,(%esp)
 8057e4c:	e8 7f cf 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057e51:	81 7e 1c 00 01 00 00 	cmpl   $0x100,0x1c(%esi)
 8057e58:	0f 87 d1 02 00 00    	ja     805812f <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc+0x3cf>
 8057e5e:	8d 83 e7 42 fd ff    	lea    -0x2bd19(%ebx),%eax
 8057e64:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057e68:	8d 46 20             	lea    0x20(%esi),%eax
 8057e6b:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057e6f:	89 3c 24             	mov    %edi,(%esp)
 8057e72:	e8 49 ce 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057e77:	8d 83 f3 42 fd ff    	lea    -0x2bd0d(%ebx),%eax
 8057e7d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057e81:	8d 46 21             	lea    0x21(%esi),%eax
 8057e84:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057e88:	89 3c 24             	mov    %edi,(%esp)
 8057e8b:	e8 30 ce 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057e90:	8d 83 02 43 fd ff    	lea    -0x2bcfe(%ebx),%eax
 8057e96:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057e9a:	8d 46 22             	lea    0x22(%esi),%eax
 8057e9d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057ea1:	89 3c 24             	mov    %edi,(%esp)
 8057ea4:	e8 17 ce 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057ea9:	8d 83 1a 43 fd ff    	lea    -0x2bce6(%ebx),%eax
 8057eaf:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057eb3:	8d 46 23             	lea    0x23(%esi),%eax
 8057eb6:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057eba:	89 3c 24             	mov    %edi,(%esp)
 8057ebd:	e8 fe cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057ec2:	8d 83 29 43 fd ff    	lea    -0x2bcd7(%ebx),%eax
 8057ec8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057ecc:	8d 46 24             	lea    0x24(%esi),%eax
 8057ecf:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057ed3:	89 3c 24             	mov    %edi,(%esp)
 8057ed6:	e8 f5 ce 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057edb:	8d 83 3e 43 fd ff    	lea    -0x2bcc2(%ebx),%eax
 8057ee1:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057ee5:	8d 46 28             	lea    0x28(%esi),%eax
 8057ee8:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057eec:	89 3c 24             	mov    %edi,(%esp)
 8057eef:	e8 dc ce 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057ef4:	8d 83 47 43 fd ff    	lea    -0x2bcb9(%ebx),%eax
 8057efa:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057efe:	8d 46 2c             	lea    0x2c(%esi),%eax
 8057f01:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f05:	89 3c 24             	mov    %edi,(%esp)
 8057f08:	e8 b3 cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057f0d:	8d 83 5c 43 fd ff    	lea    -0x2bca4(%ebx),%eax
 8057f13:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057f17:	8d 46 30             	lea    0x30(%esi),%eax
 8057f1a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f1e:	89 3c 24             	mov    %edi,(%esp)
 8057f21:	e8 aa ce 00 00       	call   8064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>
 8057f26:	8d 83 6f 43 fd ff    	lea    -0x2bc91(%ebx),%eax
 8057f2c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057f30:	8d 46 34             	lea    0x34(%esi),%eax
 8057f33:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f37:	89 3c 24             	mov    %edi,(%esp)
 8057f3a:	e8 81 cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057f3f:	8d 83 7b 43 fd ff    	lea    -0x2bc85(%ebx),%eax
 8057f45:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057f49:	8d 46 35             	lea    0x35(%esi),%eax
 8057f4c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f50:	89 3c 24             	mov    %edi,(%esp)
 8057f53:	e8 68 cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057f58:	8d 83 8b 43 fd ff    	lea    -0x2bc75(%ebx),%eax
 8057f5e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057f62:	8d 46 36             	lea    0x36(%esi),%eax
 8057f65:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f69:	89 3c 24             	mov    %edi,(%esp)
 8057f6c:	e8 4f cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057f71:	8d 83 a4 43 fd ff    	lea    -0x2bc5c(%ebx),%eax
 8057f77:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057f7b:	8d 46 37             	lea    0x37(%esi),%eax
 8057f7e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f82:	89 3c 24             	mov    %edi,(%esp)
 8057f85:	e8 36 cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057f8a:	8d 83 b9 43 fd ff    	lea    -0x2bc47(%ebx),%eax
 8057f90:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057f94:	8d 46 38             	lea    0x38(%esi),%eax
 8057f97:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057f9b:	89 3c 24             	mov    %edi,(%esp)
 8057f9e:	e8 1d cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057fa3:	8d 83 c8 43 fd ff    	lea    -0x2bc38(%ebx),%eax
 8057fa9:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057fad:	8d 46 39             	lea    0x39(%esi),%eax
 8057fb0:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057fb4:	89 3c 24             	mov    %edi,(%esp)
 8057fb7:	e8 04 cd 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057fbc:	8d 83 d4 43 fd ff    	lea    -0x2bc2c(%ebx),%eax
 8057fc2:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057fc6:	8d 46 3a             	lea    0x3a(%esi),%eax
 8057fc9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057fcd:	89 3c 24             	mov    %edi,(%esp)
 8057fd0:	e8 eb cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057fd5:	8d 83 e1 43 fd ff    	lea    -0x2bc1f(%ebx),%eax
 8057fdb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057fdf:	8d 46 3b             	lea    0x3b(%esi),%eax
 8057fe2:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057fe6:	89 3c 24             	mov    %edi,(%esp)
 8057fe9:	e8 d2 cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8057fee:	8d 83 e8 43 fd ff    	lea    -0x2bc18(%ebx),%eax
 8057ff4:	89 44 24 08          	mov    %eax,0x8(%esp)
 8057ff8:	8d 46 3c             	lea    0x3c(%esi),%eax
 8057ffb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8057fff:	89 3c 24             	mov    %edi,(%esp)
 8058002:	e8 b9 cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8058007:	8d 83 f5 43 fd ff    	lea    -0x2bc0b(%ebx),%eax
 805800d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058011:	8d 46 40             	lea    0x40(%esi),%eax
 8058014:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058018:	89 3c 24             	mov    %edi,(%esp)
 805801b:	e8 00 ce 00 00       	call   8064e20 <_ZN11__sanitizer9ParseFlagEPKcPS1_S1_>
 8058020:	8d 83 07 44 fd ff    	lea    -0x2bbf9(%ebx),%eax
 8058026:	89 44 24 08          	mov    %eax,0x8(%esp)
 805802a:	8d 46 3d             	lea    0x3d(%esi),%eax
 805802d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058031:	89 3c 24             	mov    %edi,(%esp)
 8058034:	e8 87 cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8058039:	8d 83 14 44 fd ff    	lea    -0x2bbec(%ebx),%eax
 805803f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058043:	8d 46 44             	lea    0x44(%esi),%eax
 8058046:	89 44 24 04          	mov    %eax,0x4(%esp)
 805804a:	89 3c 24             	mov    %edi,(%esp)
 805804d:	e8 6e cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8058052:	8d 83 2e 44 fd ff    	lea    -0x2bbd2(%ebx),%eax
 8058058:	89 44 24 08          	mov    %eax,0x8(%esp)
 805805c:	8d 46 48             	lea    0x48(%esi),%eax
 805805f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058063:	89 3c 24             	mov    %edi,(%esp)
 8058066:	e8 b5 cd 00 00       	call   8064e20 <_ZN11__sanitizer9ParseFlagEPKcPS1_S1_>
 805806b:	8d 83 37 44 fd ff    	lea    -0x2bbc9(%ebx),%eax
 8058071:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058075:	8d 46 4c             	lea    0x4c(%esi),%eax
 8058078:	89 44 24 04          	mov    %eax,0x4(%esp)
 805807c:	89 3c 24             	mov    %edi,(%esp)
 805807f:	e8 3c cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 8058084:	8d 83 4c 44 fd ff    	lea    -0x2bbb4(%ebx),%eax
 805808a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805808e:	8d 46 4d             	lea    0x4d(%esi),%eax
 8058091:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058095:	89 3c 24             	mov    %edi,(%esp)
 8058098:	e8 23 cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 805809d:	8d 83 62 44 fd ff    	lea    -0x2bb9e(%ebx),%eax
 80580a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80580a7:	8d 46 4e             	lea    0x4e(%esi),%eax
 80580aa:	89 44 24 04          	mov    %eax,0x4(%esp)
 80580ae:	89 3c 24             	mov    %edi,(%esp)
 80580b1:	e8 0a cc 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 80580b6:	8d 83 6e 44 fd ff    	lea    -0x2bb92(%ebx),%eax
 80580bc:	89 44 24 08          	mov    %eax,0x8(%esp)
 80580c0:	8d 46 4f             	lea    0x4f(%esi),%eax
 80580c3:	83 c6 50             	add    $0x50,%esi
 80580c6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80580ca:	89 3c 24             	mov    %edi,(%esp)
 80580cd:	e8 ee cb 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 80580d2:	8d 83 85 44 fd ff    	lea    -0x2bb7b(%ebx),%eax
 80580d8:	89 74 24 04          	mov    %esi,0x4(%esp)
 80580dc:	89 3c 24             	mov    %edi,(%esp)
 80580df:	89 44 24 08          	mov    %eax,0x8(%esp)
 80580e3:	e8 d8 cb 00 00       	call   8064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>
 80580e8:	83 c4 20             	add    $0x20,%esp
 80580eb:	5b                   	pop    %ebx
 80580ec:	5e                   	pop    %esi
 80580ed:	5f                   	pop    %edi
 80580ee:	c3                   	ret    
 80580ef:	8d 83 8d 42 fd ff    	lea    -0x2bd73(%ebx),%eax
 80580f5:	89 44 24 08          	mov    %eax,0x8(%esp)
 80580f9:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 80580ff:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8058106:	00 
 8058107:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805810e:	00 
 805810f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8058116:	00 
 8058117:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805811e:	00 
 805811f:	c7 44 24 04 5d 00 00 	movl   $0x5d,0x4(%esp)
 8058126:	00 
 8058127:	89 04 24             	mov    %eax,(%esp)
 805812a:	e8 81 a2 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805812f:	8d 83 2c 46 fd ff    	lea    -0x2b9d4(%ebx),%eax
 8058135:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058139:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 805813f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8058146:	00 
 8058147:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805814e:	00 
 805814f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8058156:	00 
 8058157:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805815e:	00 
 805815f:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)
 8058166:	00 
 8058167:	89 04 24             	mov    %eax,(%esp)
 805816a:	e8 41 a2 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805816f:	8d 83 08 46 fd ff    	lea    -0x2b9f8(%ebx),%eax
 8058175:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058179:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 805817f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8058186:	00 
 8058187:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805818e:	00 
 805818f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8058196:	00 
 8058197:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805819e:	00 
 805819f:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)
 80581a6:	00 
 80581a7:	89 04 24             	mov    %eax,(%esp)
 80581aa:	e8 01 a2 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80581af:	90                   	nop

080581b0 <_ZN6__asanL18OnLowLevelAllocateEmm>:
 80581b0:	53                   	push   %ebx
 80581b1:	83 ec 18             	sub    $0x18,%esp
 80581b4:	8b 44 24 24          	mov    0x24(%esp),%eax
 80581b8:	e8 33 19 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80581bd:	81 c3 43 7e 05 00    	add    $0x57e43,%ebx
 80581c3:	c7 44 24 08 fe 00 00 	movl   $0xfe,0x8(%esp)
 80581ca:	00 
 80581cb:	89 44 24 04          	mov    %eax,0x4(%esp)
 80581cf:	8b 44 24 20          	mov    0x20(%esp),%eax
 80581d3:	89 04 24             	mov    %eax,(%esp)
 80581d6:	e8 d5 48 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 80581db:	83 c4 18             	add    $0x18,%esp
 80581de:	5b                   	pop    %ebx
 80581df:	c3                   	ret    

080581e0 <_ZN6__asanL11asan_atexitEv>:
 80581e0:	57                   	push   %edi
 80581e1:	56                   	push   %esi
 80581e2:	31 f6                	xor    %esi,%esi
 80581e4:	53                   	push   %ebx
 80581e5:	e8 06 19 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80581ea:	81 c3 16 7e 05 00    	add    $0x57e16,%ebx
 80581f0:	83 ec 10             	sub    $0x10,%esp
 80581f3:	8d 83 95 44 fd ff    	lea    -0x2bb6b(%ebx),%eax
 80581f9:	89 04 24             	mov    %eax,(%esp)
 80581fc:	8d bb b3 44 fd ff    	lea    -0x2bb4d(%ebx),%edi
 8058202:	e8 79 94 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8058207:	e8 54 17 00 00       	call   8059960 <__asan_print_accumulated_stats>
 805820c:	eb 0d                	jmp    805821b <_ZN6__asanL11asan_atexitEv+0x3b>
 805820e:	66 90                	xchg   %ax,%ax
 8058210:	83 c6 01             	add    $0x1,%esi
 8058213:	81 fe da 00 00 00    	cmp    $0xda,%esi
 8058219:	74 26                	je     8058241 <_ZN6__asanL11asan_atexitEv+0x61>
 805821b:	8b 84 b3 20 bc 02 00 	mov    0x2bc20(%ebx,%esi,4),%eax
 8058222:	85 c0                	test   %eax,%eax
 8058224:	74 ea                	je     8058210 <_ZN6__asanL11asan_atexitEv+0x30>
 8058226:	89 74 24 04          	mov    %esi,0x4(%esp)
 805822a:	83 c6 01             	add    $0x1,%esi
 805822d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058231:	89 3c 24             	mov    %edi,(%esp)
 8058234:	e8 47 94 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8058239:	81 fe da 00 00 00    	cmp    $0xda,%esi
 805823f:	75 da                	jne    805821b <_ZN6__asanL11asan_atexitEv+0x3b>
 8058241:	83 c4 10             	add    $0x10,%esp
 8058244:	5b                   	pop    %ebx
 8058245:	5e                   	pop    %esi
 8058246:	5f                   	pop    %edi
 8058247:	c3                   	ret    
 8058248:	90                   	nop
 8058249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058250 <_ZN6__asanL15AsanCheckFailedEPKciS1_yy>:
 8058250:	55                   	push   %ebp
 8058251:	89 e5                	mov    %esp,%ebp
 8058253:	56                   	push   %esi
 8058254:	53                   	push   %ebx
 8058255:	81 ec 30 04 00 00    	sub    $0x430,%esp
 805825b:	8b 45 1c             	mov    0x1c(%ebp),%eax
 805825e:	e8 8d 18 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058263:	81 c3 9d 7d 05 00    	add    $0x57d9d,%ebx
 8058269:	89 44 24 14          	mov    %eax,0x14(%esp)
 805826d:	8b 45 14             	mov    0x14(%ebp),%eax
 8058270:	89 44 24 10          	mov    %eax,0x10(%esp)
 8058274:	8b 45 10             	mov    0x10(%ebp),%eax
 8058277:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805827b:	8b 45 0c             	mov    0xc(%ebp),%eax
 805827e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058282:	8b 45 08             	mov    0x8(%ebp),%eax
 8058285:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058289:	8d 83 68 46 fd ff    	lea    -0x2b998(%ebx),%eax
 805828f:	89 04 24             	mov    %eax,(%esp)
 8058292:	e8 a9 94 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8058297:	0f b6 b3 ec bf 02 00 	movzbl 0x2bfec(%ebx),%esi
 805829e:	e8 dd c6 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 80582a3:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 80582a7:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 80582ae:	00 
 80582af:	89 74 24 10          	mov    %esi,0x10(%esp)
 80582b3:	8d b5 f0 fb ff ff    	lea    -0x410(%ebp),%esi
 80582b9:	89 34 24             	mov    %esi,(%esp)
 80582bc:	89 44 24 08          	mov    %eax,0x8(%esp)
 80582c0:	e8 ab 41 00 00       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 80582c5:	89 34 24             	mov    %esi,(%esp)
 80582c8:	e8 13 7f 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 80582cd:	e8 8e 9f 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 80582d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80582d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080582e0 <_ZN6__asanL7AsanDieEv>:
 80582e0:	53                   	push   %ebx
 80582e1:	b8 01 00 00 00       	mov    $0x1,%eax
 80582e6:	e8 05 18 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80582eb:	81 c3 15 7d 05 00    	add    $0x57d15,%ebx
 80582f1:	83 ec 18             	sub    $0x18,%esp
 80582f4:	f0 0f c1 83 88 bf 02 	lock xadd %eax,0x2bf88(%ebx)
 80582fb:	00 
 80582fc:	85 c0                	test   %eax,%eax
 80582fe:	75 7a                	jne    805837a <_ZN6__asanL7AsanDieEv+0x9a>
 8058300:	8b 83 d0 bf 02 00    	mov    0x2bfd0(%ebx),%eax
 8058306:	85 c0                	test   %eax,%eax
 8058308:	75 72                	jne    805837c <_ZN6__asanL7AsanDieEv+0x9c>
 805830a:	80 bb d7 bf 02 00 00 	cmpb   $0x0,0x2bfd7(%ebx)
 8058311:	74 4d                	je     8058360 <_ZN6__asanL7AsanDieEv+0x80>
 8058313:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 8058319:	8b 00                	mov    (%eax),%eax
 805831b:	85 c0                	test   %eax,%eax
 805831d:	0f 84 8c 00 00 00    	je     80583af <_ZN6__asanL7AsanDieEv+0xcf>
 8058323:	2d 00 00 00 20       	sub    $0x20000000,%eax
 8058328:	89 44 24 04          	mov    %eax,0x4(%esp)
 805832c:	c7 04 24 00 00 00 20 	movl   $0x20000000,(%esp)
 8058333:	e8 78 a7 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8058338:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805833e:	8b 10                	mov    (%eax),%edx
 8058340:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 8058346:	8b 00                	mov    (%eax),%eax
 8058348:	89 14 24             	mov    %edx,(%esp)
 805834b:	c1 e8 03             	shr    $0x3,%eax
 805834e:	29 d0                	sub    %edx,%eax
 8058350:	05 00 00 00 20       	add    $0x20000000,%eax
 8058355:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058359:	e8 52 a7 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 805835e:	66 90                	xchg   %ax,%ax
 8058360:	8b 83 0c bc 02 00    	mov    0x2bc0c(%ebx),%eax
 8058366:	85 c0                	test   %eax,%eax
 8058368:	74 02                	je     805836c <_ZN6__asanL7AsanDieEv+0x8c>
 805836a:	ff d0                	call   *%eax
 805836c:	80 bb d8 bf 02 00 00 	cmpb   $0x0,0x2bfd8(%ebx)
 8058373:	74 2c                	je     80583a1 <_ZN6__asanL7AsanDieEv+0xc1>
 8058375:	e8 c6 b1 00 00       	call   8063540 <_ZN11__sanitizer5AbortEv>
 805837a:	eb fe                	jmp    805837a <_ZN6__asanL7AsanDieEv+0x9a>
 805837c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058380:	8d 83 ce 44 fd ff    	lea    -0x2bb32(%ebx),%eax
 8058386:	89 04 24             	mov    %eax,(%esp)
 8058389:	e8 b2 93 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805838e:	8b 83 d0 bf 02 00    	mov    0x2bfd0(%ebx),%eax
 8058394:	89 04 24             	mov    %eax,(%esp)
 8058397:	e8 54 b1 00 00       	call   80634f0 <_ZN11__sanitizer15SleepForSecondsEi>
 805839c:	e9 69 ff ff ff       	jmp    805830a <_ZN6__asanL7AsanDieEv+0x2a>
 80583a1:	8b 83 c8 bf 02 00    	mov    0x2bfc8(%ebx),%eax
 80583a7:	89 04 24             	mov    %eax,(%esp)
 80583aa:	e8 71 cf 00 00       	call   8065320 <_ZN11__sanitizer14internal__exitEi>
 80583af:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 80583b5:	8b 00                	mov    (%eax),%eax
 80583b7:	c7 04 24 00 00 00 20 	movl   $0x20000000,(%esp)
 80583be:	c1 e8 03             	shr    $0x3,%eax
 80583c1:	89 44 24 04          	mov    %eax,0x4(%esp)
 80583c5:	e8 e6 a6 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 80583ca:	eb 94                	jmp    8058360 <_ZN6__asanL7AsanDieEv+0x80>
 80583cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080583d0 <_ZN6__asanL24ReserveShadowMemoryRangeEmm>:
 80583d0:	57                   	push   %edi
 80583d1:	89 d7                	mov    %edx,%edi
 80583d3:	56                   	push   %esi
 80583d4:	89 c6                	mov    %eax,%esi
 80583d6:	53                   	push   %ebx
 80583d7:	e8 14 17 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80583dc:	81 c3 24 7c 05 00    	add    $0x57c24,%ebx
 80583e2:	83 ec 20             	sub    $0x20,%esp
 80583e5:	e8 26 9e 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 80583ea:	31 d2                	xor    %edx,%edx
 80583ec:	89 c1                	mov    %eax,%ecx
 80583ee:	89 f0                	mov    %esi,%eax
 80583f0:	f7 f1                	div    %ecx
 80583f2:	85 d2                	test   %edx,%edx
 80583f4:	75 2d                	jne    8058423 <_ZN6__asanL24ReserveShadowMemoryRangeEmm+0x53>
 80583f6:	e8 15 9e 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 80583fb:	83 c7 01             	add    $0x1,%edi
 80583fe:	31 d2                	xor    %edx,%edx
 8058400:	89 c1                	mov    %eax,%ecx
 8058402:	89 f8                	mov    %edi,%eax
 8058404:	f7 f1                	div    %ecx
 8058406:	85 d2                	test   %edx,%edx
 8058408:	75 70                	jne    805847a <_ZN6__asanL24ReserveShadowMemoryRangeEmm+0xaa>
 805840a:	29 f7                	sub    %esi,%edi
 805840c:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8058410:	89 34 24             	mov    %esi,(%esp)
 8058413:	e8 48 a7 00 00       	call   8062b60 <_ZN11__sanitizer18MmapFixedNoReserveEmm>
 8058418:	39 f0                	cmp    %esi,%eax
 805841a:	75 47                	jne    8058463 <_ZN6__asanL24ReserveShadowMemoryRangeEmm+0x93>
 805841c:	83 c4 20             	add    $0x20,%esp
 805841f:	5b                   	pop    %ebx
 8058420:	5e                   	pop    %esi
 8058421:	5f                   	pop    %edi
 8058422:	c3                   	ret    
 8058423:	8d 83 a4 46 fd ff    	lea    -0x2b95c(%ebx),%eax
 8058429:	89 44 24 08          	mov    %eax,0x8(%esp)
 805842d:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 8058433:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805843a:	00 
 805843b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8058442:	00 
 8058443:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805844a:	00 
 805844b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8058452:	00 
 8058453:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805845a:	00 
 805845b:	89 04 24             	mov    %eax,(%esp)
 805845e:	e8 4d 9f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8058463:	8d 83 04 47 fd ff    	lea    -0x2b8fc(%ebx),%eax
 8058469:	89 04 24             	mov    %eax,(%esp)
 805846c:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8058470:	e8 cb 92 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8058475:	e8 c6 b0 00 00       	call   8063540 <_ZN11__sanitizer5AbortEv>
 805847a:	8d 83 d0 46 fd ff    	lea    -0x2b930(%ebx),%eax
 8058480:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058484:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 805848a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8058491:	00 
 8058492:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8058499:	00 
 805849a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80584a1:	00 
 80584a2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80584a9:	00 
 80584aa:	c7 44 24 04 c9 00 00 	movl   $0xc9,0x4(%esp)
 80584b1:	00 
 80584b2:	89 04 24             	mov    %eax,(%esp)
 80584b5:	e8 f6 9e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80584ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080584c0 <_ZN6__asanL10ProtectGapEmm>:
 80584c0:	55                   	push   %ebp
 80584c1:	89 c5                	mov    %eax,%ebp
 80584c3:	57                   	push   %edi
 80584c4:	31 ff                	xor    %edi,%edi
 80584c6:	56                   	push   %esi
 80584c7:	53                   	push   %ebx
 80584c8:	e8 23 16 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80584cd:	81 c3 33 7b 05 00    	add    $0x57b33,%ebx
 80584d3:	83 ec 2c             	sub    $0x2c,%esp
 80584d6:	89 54 24 04          	mov    %edx,0x4(%esp)
 80584da:	89 04 24             	mov    %eax,(%esp)
 80584dd:	e8 ae a8 00 00       	call   8062d90 <_ZN11__sanitizer8MprotectEmm>
 80584e2:	31 c9                	xor    %ecx,%ecx
 80584e4:	39 e8                	cmp    %ebp,%eax
 80584e6:	75 08                	jne    80584f0 <_ZN6__asanL10ProtectGapEmm+0x30>
 80584e8:	83 c4 2c             	add    $0x2c,%esp
 80584eb:	5b                   	pop    %ebx
 80584ec:	5e                   	pop    %esi
 80584ed:	5f                   	pop    %edi
 80584ee:	5d                   	pop    %ebp
 80584ef:	c3                   	ret    
 80584f0:	89 44 24 14          	mov    %eax,0x14(%esp)
 80584f4:	8d 83 68 47 fd ff    	lea    -0x2b898(%ebx),%eax
 80584fa:	89 44 24 08          	mov    %eax,0x8(%esp)
 80584fe:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 8058504:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8058508:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805850c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8058510:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)
 8058517:	00 
 8058518:	89 04 24             	mov    %eax,(%esp)
 805851b:	e8 90 9e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

08058520 <_ZN6__asan5flagsEv>:
 8058520:	e8 70 7a ff ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8058525:	81 c1 db 7a 05 00    	add    $0x57adb,%ecx
 805852b:	8d 81 a0 bf 02 00    	lea    0x2bfa0(%ecx),%eax
 8058531:	c3                   	ret    
 8058532:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8058539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058540 <_ZN6__asan15InitializeFlagsEPNS_5FlagsEPKc>:
 8058540:	55                   	push   %ebp
 8058541:	57                   	push   %edi
 8058542:	56                   	push   %esi
 8058543:	53                   	push   %ebx
 8058544:	e8 a7 15 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058549:	81 c3 b7 7a 05 00    	add    $0x57ab7,%ebx
 805854f:	83 ec 1c             	sub    $0x1c,%esp
 8058552:	8b 74 24 30          	mov    0x30(%esp),%esi
 8058556:	c7 44 24 08 54 00 00 	movl   $0x54,0x8(%esp)
 805855d:	00 
 805855e:	8b 6c 24 34          	mov    0x34(%esp),%ebp
 8058562:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058569:	00 
 805856a:	89 34 24             	mov    %esi,(%esp)
 805856d:	8d bb b7 61 fd ff    	lea    -0x29e49(%ebx),%edi
 8058573:	e8 c8 93 00 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 8058578:	89 fa                	mov    %edi,%edx
 805857a:	89 f0                	mov    %esi,%eax
 805857c:	c7 06 00 00 00 04    	movl   $0x4000000,(%esi)
 8058582:	c6 46 04 00          	movb   $0x0,0x4(%esi)
 8058586:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)
 805858d:	c7 46 0c 10 00 00 00 	movl   $0x10,0xc(%esi)
 8058594:	c6 46 10 00          	movb   $0x0,0x10(%esi)
 8058598:	c7 46 14 01 00 00 00 	movl   $0x1,0x14(%esi)
 805859f:	c6 46 18 01          	movb   $0x1,0x18(%esi)
 80585a3:	c7 46 1c 1e 00 00 00 	movl   $0x1e,0x1c(%esi)
 80585aa:	c6 46 20 01          	movb   $0x1,0x20(%esi)
 80585ae:	c6 46 21 01          	movb   $0x1,0x21(%esi)
 80585b2:	c6 46 22 00          	movb   $0x0,0x22(%esi)
 80585b6:	c6 46 23 01          	movb   $0x1,0x23(%esi)
 80585ba:	c7 46 24 00 00 00 00 	movl   $0x0,0x24(%esi)
 80585c1:	c7 46 28 01 00 00 00 	movl   $0x1,0x28(%esi)
 80585c8:	c6 46 2c 01          	movb   $0x1,0x2c(%esi)
 80585cc:	c7 46 30 00 00 00 00 	movl   $0x0,0x30(%esi)
 80585d3:	c6 46 34 01          	movb   $0x1,0x34(%esi)
 80585d7:	c6 46 35 00          	movb   $0x0,0x35(%esi)
 80585db:	c6 46 36 01          	movb   $0x1,0x36(%esi)
 80585df:	c6 46 37 00          	movb   $0x0,0x37(%esi)
 80585e3:	c6 46 38 00          	movb   $0x0,0x38(%esi)
 80585e7:	c6 46 39 00          	movb   $0x0,0x39(%esi)
 80585eb:	c6 46 3a 01          	movb   $0x1,0x3a(%esi)
 80585ef:	c6 46 3b 00          	movb   $0x0,0x3b(%esi)
 80585f3:	c6 46 3c 00          	movb   $0x0,0x3c(%esi)
 80585f7:	89 7e 40             	mov    %edi,0x40(%esi)
 80585fa:	c6 46 3d 01          	movb   $0x1,0x3d(%esi)
 80585fe:	c6 46 44 01          	movb   $0x1,0x44(%esi)
 8058602:	c7 46 48 00 00 00 00 	movl   $0x0,0x48(%esi)
 8058609:	c6 46 4c 00          	movb   $0x0,0x4c(%esi)
 805860d:	c6 46 4d 01          	movb   $0x1,0x4d(%esi)
 8058611:	c6 46 4e 01          	movb   $0x1,0x4e(%esi)
 8058615:	c6 46 4f 01          	movb   $0x1,0x4f(%esi)
 8058619:	c6 46 50 01          	movb   $0x1,0x50(%esi)
 805861d:	e8 3e f7 ff ff       	call   8057d60 <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc>
 8058622:	8b 93 d4 ff ff ff    	mov    -0x2c(%ebx),%edx
 8058628:	85 d2                	test   %edx,%edx
 805862a:	74 3f                	je     805866b <_ZN6__asan15InitializeFlagsEPNS_5FlagsEPKc+0x12b>
 805862c:	e8 cf 10 ff ff       	call   8049700 <__asan_default_options@plt>
 8058631:	89 c2                	mov    %eax,%edx
 8058633:	89 f0                	mov    %esi,%eax
 8058635:	e8 26 f7 ff ff       	call   8057d60 <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc>
 805863a:	8b 83 a8 bf 02 00    	mov    0x2bfa8(%ebx),%eax
 8058640:	85 c0                	test   %eax,%eax
 8058642:	74 17                	je     805865b <_ZN6__asan15InitializeFlagsEPNS_5FlagsEPKc+0x11b>
 8058644:	e8 b7 10 ff ff       	call   8049700 <__asan_default_options@plt>
 8058649:	89 44 24 04          	mov    %eax,0x4(%esp)
 805864d:	8d 83 90 47 fd ff    	lea    -0x2b870(%ebx),%eax
 8058653:	89 04 24             	mov    %eax,(%esp)
 8058656:	e8 e5 90 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805865b:	83 c4 1c             	add    $0x1c,%esp
 805865e:	89 ea                	mov    %ebp,%edx
 8058660:	5b                   	pop    %ebx
 8058661:	89 f0                	mov    %esi,%eax
 8058663:	5e                   	pop    %esi
 8058664:	5f                   	pop    %edi
 8058665:	5d                   	pop    %ebp
 8058666:	e9 f5 f6 ff ff       	jmp    8057d60 <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc>
 805866b:	89 f0                	mov    %esi,%eax
 805866d:	89 fa                	mov    %edi,%edx
 805866f:	e8 ec f6 ff ff       	call   8057d60 <_ZN6__asanL20ParseFlagsFromStringEPNS_5FlagsEPKc>
 8058674:	89 f8                	mov    %edi,%eax
 8058676:	83 bb a8 bf 02 00 00 	cmpl   $0x0,0x2bfa8(%ebx)
 805867d:	75 ca                	jne    8058649 <_ZN6__asan15InitializeFlagsEPNS_5FlagsEPKc+0x109>
 805867f:	eb da                	jmp    805865b <_ZN6__asan15InitializeFlagsEPNS_5FlagsEPKc+0x11b>
 8058681:	eb 0d                	jmp    8058690 <_ZN6__asan17ShowStatsAndAbortEv>
 8058683:	90                   	nop
 8058684:	90                   	nop
 8058685:	90                   	nop
 8058686:	90                   	nop
 8058687:	90                   	nop
 8058688:	90                   	nop
 8058689:	90                   	nop
 805868a:	90                   	nop
 805868b:	90                   	nop
 805868c:	90                   	nop
 805868d:	90                   	nop
 805868e:	90                   	nop
 805868f:	90                   	nop

08058690 <_ZN6__asan17ShowStatsAndAbortEv>:
 8058690:	53                   	push   %ebx
 8058691:	e8 5a 14 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058696:	81 c3 6a 79 05 00    	add    $0x5796a,%ebx
 805869c:	83 ec 08             	sub    $0x8,%esp
 805869f:	e8 bc 12 00 00       	call   8059960 <__asan_print_accumulated_stats>
 80586a4:	e8 b7 9b 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 80586a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080586b0 <__asan_report_load1>:
 80586b0:	55                   	push   %ebp
 80586b1:	89 e5                	mov    %esp,%ebp
 80586b3:	53                   	push   %ebx
 80586b4:	83 ec 34             	sub    $0x34,%esp
 80586b7:	8b 45 08             	mov    0x8(%ebp),%eax
 80586ba:	e8 31 14 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80586bf:	81 c3 41 79 05 00    	add    $0x57941,%ebx
 80586c5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80586c9:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
 80586d0:	00 
 80586d1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80586d5:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80586d8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80586dc:	8b 45 04             	mov    0x4(%ebp),%eax
 80586df:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80586e6:	00 
 80586e7:	89 04 24             	mov    %eax,(%esp)
 80586ea:	e8 c1 6f 00 00       	call   805f6b0 <__asan_report_error>
 80586ef:	83 c4 34             	add    $0x34,%esp
 80586f2:	5b                   	pop    %ebx
 80586f3:	5d                   	pop    %ebp
 80586f4:	c3                   	ret    
 80586f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80586f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058700 <__asan_report_load2>:
 8058700:	55                   	push   %ebp
 8058701:	89 e5                	mov    %esp,%ebp
 8058703:	53                   	push   %ebx
 8058704:	83 ec 34             	sub    $0x34,%esp
 8058707:	8b 45 08             	mov    0x8(%ebp),%eax
 805870a:	e8 e1 13 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805870f:	81 c3 f1 78 05 00    	add    $0x578f1,%ebx
 8058715:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058719:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
 8058720:	00 
 8058721:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058725:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058728:	89 44 24 08          	mov    %eax,0x8(%esp)
 805872c:	8b 45 04             	mov    0x4(%ebp),%eax
 805872f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8058736:	00 
 8058737:	89 04 24             	mov    %eax,(%esp)
 805873a:	e8 71 6f 00 00       	call   805f6b0 <__asan_report_error>
 805873f:	83 c4 34             	add    $0x34,%esp
 8058742:	5b                   	pop    %ebx
 8058743:	5d                   	pop    %ebp
 8058744:	c3                   	ret    
 8058745:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8058749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058750 <__asan_report_load4>:
 8058750:	55                   	push   %ebp
 8058751:	89 e5                	mov    %esp,%ebp
 8058753:	53                   	push   %ebx
 8058754:	83 ec 34             	sub    $0x34,%esp
 8058757:	8b 45 08             	mov    0x8(%ebp),%eax
 805875a:	e8 91 13 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805875f:	81 c3 a1 78 05 00    	add    $0x578a1,%ebx
 8058765:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058769:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8058770:	00 
 8058771:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058775:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058778:	89 44 24 08          	mov    %eax,0x8(%esp)
 805877c:	8b 45 04             	mov    0x4(%ebp),%eax
 805877f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8058786:	00 
 8058787:	89 04 24             	mov    %eax,(%esp)
 805878a:	e8 21 6f 00 00       	call   805f6b0 <__asan_report_error>
 805878f:	83 c4 34             	add    $0x34,%esp
 8058792:	5b                   	pop    %ebx
 8058793:	5d                   	pop    %ebp
 8058794:	c3                   	ret    
 8058795:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8058799:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080587a0 <__asan_report_load8>:
 80587a0:	55                   	push   %ebp
 80587a1:	89 e5                	mov    %esp,%ebp
 80587a3:	53                   	push   %ebx
 80587a4:	83 ec 34             	sub    $0x34,%esp
 80587a7:	8b 45 08             	mov    0x8(%ebp),%eax
 80587aa:	e8 41 13 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80587af:	81 c3 51 78 05 00    	add    $0x57851,%ebx
 80587b5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80587b9:	c7 44 24 14 08 00 00 	movl   $0x8,0x14(%esp)
 80587c0:	00 
 80587c1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80587c5:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80587c8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80587cc:	8b 45 04             	mov    0x4(%ebp),%eax
 80587cf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80587d6:	00 
 80587d7:	89 04 24             	mov    %eax,(%esp)
 80587da:	e8 d1 6e 00 00       	call   805f6b0 <__asan_report_error>
 80587df:	83 c4 34             	add    $0x34,%esp
 80587e2:	5b                   	pop    %ebx
 80587e3:	5d                   	pop    %ebp
 80587e4:	c3                   	ret    
 80587e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80587e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080587f0 <__asan_report_load16>:
 80587f0:	55                   	push   %ebp
 80587f1:	89 e5                	mov    %esp,%ebp
 80587f3:	53                   	push   %ebx
 80587f4:	83 ec 34             	sub    $0x34,%esp
 80587f7:	8b 45 08             	mov    0x8(%ebp),%eax
 80587fa:	e8 f1 12 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80587ff:	81 c3 01 78 05 00    	add    $0x57801,%ebx
 8058805:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058809:	c7 44 24 14 10 00 00 	movl   $0x10,0x14(%esp)
 8058810:	00 
 8058811:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058815:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058818:	89 44 24 08          	mov    %eax,0x8(%esp)
 805881c:	8b 45 04             	mov    0x4(%ebp),%eax
 805881f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8058826:	00 
 8058827:	89 04 24             	mov    %eax,(%esp)
 805882a:	e8 81 6e 00 00       	call   805f6b0 <__asan_report_error>
 805882f:	83 c4 34             	add    $0x34,%esp
 8058832:	5b                   	pop    %ebx
 8058833:	5d                   	pop    %ebp
 8058834:	c3                   	ret    
 8058835:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8058839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058840 <__asan_report_store1>:
 8058840:	55                   	push   %ebp
 8058841:	89 e5                	mov    %esp,%ebp
 8058843:	53                   	push   %ebx
 8058844:	83 ec 34             	sub    $0x34,%esp
 8058847:	8b 45 08             	mov    0x8(%ebp),%eax
 805884a:	e8 a1 12 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805884f:	81 c3 b1 77 05 00    	add    $0x577b1,%ebx
 8058855:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058859:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
 8058860:	00 
 8058861:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058865:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058868:	89 44 24 08          	mov    %eax,0x8(%esp)
 805886c:	8b 45 04             	mov    0x4(%ebp),%eax
 805886f:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8058876:	00 
 8058877:	89 04 24             	mov    %eax,(%esp)
 805887a:	e8 31 6e 00 00       	call   805f6b0 <__asan_report_error>
 805887f:	83 c4 34             	add    $0x34,%esp
 8058882:	5b                   	pop    %ebx
 8058883:	5d                   	pop    %ebp
 8058884:	c3                   	ret    
 8058885:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8058889:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058890 <__asan_report_store2>:
 8058890:	55                   	push   %ebp
 8058891:	89 e5                	mov    %esp,%ebp
 8058893:	53                   	push   %ebx
 8058894:	83 ec 34             	sub    $0x34,%esp
 8058897:	8b 45 08             	mov    0x8(%ebp),%eax
 805889a:	e8 51 12 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805889f:	81 c3 61 77 05 00    	add    $0x57761,%ebx
 80588a5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80588a9:	c7 44 24 14 02 00 00 	movl   $0x2,0x14(%esp)
 80588b0:	00 
 80588b1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80588b5:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80588b8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80588bc:	8b 45 04             	mov    0x4(%ebp),%eax
 80588bf:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 80588c6:	00 
 80588c7:	89 04 24             	mov    %eax,(%esp)
 80588ca:	e8 e1 6d 00 00       	call   805f6b0 <__asan_report_error>
 80588cf:	83 c4 34             	add    $0x34,%esp
 80588d2:	5b                   	pop    %ebx
 80588d3:	5d                   	pop    %ebp
 80588d4:	c3                   	ret    
 80588d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80588d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080588e0 <__asan_report_store4>:
 80588e0:	55                   	push   %ebp
 80588e1:	89 e5                	mov    %esp,%ebp
 80588e3:	53                   	push   %ebx
 80588e4:	83 ec 34             	sub    $0x34,%esp
 80588e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80588ea:	e8 01 12 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80588ef:	81 c3 11 77 05 00    	add    $0x57711,%ebx
 80588f5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80588f9:	c7 44 24 14 04 00 00 	movl   $0x4,0x14(%esp)
 8058900:	00 
 8058901:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058905:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058908:	89 44 24 08          	mov    %eax,0x8(%esp)
 805890c:	8b 45 04             	mov    0x4(%ebp),%eax
 805890f:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8058916:	00 
 8058917:	89 04 24             	mov    %eax,(%esp)
 805891a:	e8 91 6d 00 00       	call   805f6b0 <__asan_report_error>
 805891f:	83 c4 34             	add    $0x34,%esp
 8058922:	5b                   	pop    %ebx
 8058923:	5d                   	pop    %ebp
 8058924:	c3                   	ret    
 8058925:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8058929:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058930 <__asan_report_store8>:
 8058930:	55                   	push   %ebp
 8058931:	89 e5                	mov    %esp,%ebp
 8058933:	53                   	push   %ebx
 8058934:	83 ec 34             	sub    $0x34,%esp
 8058937:	8b 45 08             	mov    0x8(%ebp),%eax
 805893a:	e8 b1 11 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805893f:	81 c3 c1 76 05 00    	add    $0x576c1,%ebx
 8058945:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058949:	c7 44 24 14 08 00 00 	movl   $0x8,0x14(%esp)
 8058950:	00 
 8058951:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058955:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058958:	89 44 24 08          	mov    %eax,0x8(%esp)
 805895c:	8b 45 04             	mov    0x4(%ebp),%eax
 805895f:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8058966:	00 
 8058967:	89 04 24             	mov    %eax,(%esp)
 805896a:	e8 41 6d 00 00       	call   805f6b0 <__asan_report_error>
 805896f:	83 c4 34             	add    $0x34,%esp
 8058972:	5b                   	pop    %ebx
 8058973:	5d                   	pop    %ebp
 8058974:	c3                   	ret    
 8058975:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8058979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058980 <__asan_report_store16>:
 8058980:	55                   	push   %ebp
 8058981:	89 e5                	mov    %esp,%ebp
 8058983:	53                   	push   %ebx
 8058984:	83 ec 34             	sub    $0x34,%esp
 8058987:	8b 45 08             	mov    0x8(%ebp),%eax
 805898a:	e8 61 11 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805898f:	81 c3 71 76 05 00    	add    $0x57671,%ebx
 8058995:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058999:	c7 44 24 14 10 00 00 	movl   $0x10,0x14(%esp)
 80589a0:	00 
 80589a1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80589a5:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80589a8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80589ac:	8b 45 04             	mov    0x4(%ebp),%eax
 80589af:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 80589b6:	00 
 80589b7:	89 04 24             	mov    %eax,(%esp)
 80589ba:	e8 f1 6c 00 00       	call   805f6b0 <__asan_report_error>
 80589bf:	83 c4 34             	add    $0x34,%esp
 80589c2:	5b                   	pop    %ebx
 80589c3:	5d                   	pop    %ebp
 80589c4:	c3                   	ret    
 80589c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80589c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080589d0 <__asan_report_load_n>:
 80589d0:	55                   	push   %ebp
 80589d1:	89 e5                	mov    %esp,%ebp
 80589d3:	53                   	push   %ebx
 80589d4:	83 ec 34             	sub    $0x34,%esp
 80589d7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80589da:	e8 11 11 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80589df:	81 c3 21 76 05 00    	add    $0x57621,%ebx
 80589e5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80589e9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80589f0:	00 
 80589f1:	89 44 24 14          	mov    %eax,0x14(%esp)
 80589f5:	8b 45 08             	mov    0x8(%ebp),%eax
 80589f8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80589fc:	8d 45 f4             	lea    -0xc(%ebp),%eax
 80589ff:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058a03:	8b 45 04             	mov    0x4(%ebp),%eax
 8058a06:	89 04 24             	mov    %eax,(%esp)
 8058a09:	e8 a2 6c 00 00       	call   805f6b0 <__asan_report_error>
 8058a0e:	83 c4 34             	add    $0x34,%esp
 8058a11:	5b                   	pop    %ebx
 8058a12:	5d                   	pop    %ebp
 8058a13:	c3                   	ret    
 8058a14:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8058a1a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08058a20 <__asan_report_store_n>:
 8058a20:	55                   	push   %ebp
 8058a21:	89 e5                	mov    %esp,%ebp
 8058a23:	53                   	push   %ebx
 8058a24:	83 ec 34             	sub    $0x34,%esp
 8058a27:	8b 45 0c             	mov    0xc(%ebp),%eax
 8058a2a:	e8 c1 10 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058a2f:	81 c3 d1 75 05 00    	add    $0x575d1,%ebx
 8058a35:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8058a39:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8058a40:	00 
 8058a41:	89 44 24 14          	mov    %eax,0x14(%esp)
 8058a45:	8b 45 08             	mov    0x8(%ebp),%eax
 8058a48:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8058a4c:	8d 45 f4             	lea    -0xc(%ebp),%eax
 8058a4f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058a53:	8b 45 04             	mov    0x4(%ebp),%eax
 8058a56:	89 04 24             	mov    %eax,(%esp)
 8058a59:	e8 52 6c 00 00       	call   805f6b0 <__asan_report_error>
 8058a5e:	83 c4 34             	add    $0x34,%esp
 8058a61:	5b                   	pop    %ebx
 8058a62:	5d                   	pop    %ebp
 8058a63:	c3                   	ret    
 8058a64:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8058a6a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08058a70 <__asan_set_error_exit_code>:
 8058a70:	e8 20 75 ff ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8058a75:	81 c1 8b 75 05 00    	add    $0x5758b,%ecx
 8058a7b:	8b 54 24 04          	mov    0x4(%esp),%edx
 8058a7f:	8b 81 c8 bf 02 00    	mov    0x2bfc8(%ecx),%eax
 8058a85:	89 91 c8 bf 02 00    	mov    %edx,0x2bfc8(%ecx)
 8058a8b:	c3                   	ret    
 8058a8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08058a90 <__asan_handle_no_return>:
 8058a90:	56                   	push   %esi
 8058a91:	53                   	push   %ebx
 8058a92:	e8 59 10 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058a97:	81 c3 69 75 05 00    	add    $0x57569,%ebx
 8058a9d:	83 ec 34             	sub    $0x34,%esp
 8058aa0:	e8 cb 0e 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8058aa5:	89 04 24             	mov    %eax,(%esp)
 8058aa8:	e8 d3 10 00 00       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 8058aad:	85 c0                	test   %eax,%eax
 8058aaf:	89 c6                	mov    %eax,%esi
 8058ab1:	74 30                	je     8058ae3 <__asan_handle_no_return+0x53>
 8058ab3:	e8 58 97 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 8058ab8:	8d 4c 24 2c          	lea    0x2c(%esp),%ecx
 8058abc:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8058ac3:	00 
 8058ac4:	29 c1                	sub    %eax,%ecx
 8058ac6:	89 c2                	mov    %eax,%edx
 8058ac8:	8b 46 0c             	mov    0xc(%esi),%eax
 8058acb:	f7 da                	neg    %edx
 8058acd:	21 ca                	and    %ecx,%edx
 8058acf:	89 14 24             	mov    %edx,(%esp)
 8058ad2:	29 d0                	sub    %edx,%eax
 8058ad4:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058ad8:	e8 d3 3f 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 8058add:	83 c4 34             	add    $0x34,%esp
 8058ae0:	5b                   	pop    %ebx
 8058ae1:	5e                   	pop    %esi
 8058ae2:	c3                   	ret    
 8058ae3:	8d 83 e9 44 fd ff    	lea    -0x2bb17(%ebx),%eax
 8058ae9:	89 44 24 08          	mov    %eax,0x8(%esp)
 8058aed:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 8058af3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8058afa:	00 
 8058afb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8058b02:	00 
 8058b03:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8058b0a:	00 
 8058b0b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8058b12:	00 
 8058b13:	c7 44 24 04 8d 01 00 	movl   $0x18d,0x4(%esp)
 8058b1a:	00 
 8058b1b:	89 04 24             	mov    %eax,(%esp)
 8058b1e:	e8 8d 98 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8058b23:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8058b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058b30 <__asan_set_death_callback>:
 8058b30:	e8 60 74 ff ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8058b35:	81 c1 cb 74 05 00    	add    $0x574cb,%ecx
 8058b3b:	8b 44 24 04          	mov    0x4(%esp),%eax
 8058b3f:	89 81 0c bc 02 00    	mov    %eax,0x2bc0c(%ecx)
 8058b45:	c3                   	ret    
 8058b46:	8d 76 00             	lea    0x0(%esi),%esi
 8058b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08058b50 <_ZN6__asanL23force_interface_symbolsEv>:
 8058b50:	53                   	push   %ebx
 8058b51:	83 ec 28             	sub    $0x28,%esp
 8058b54:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 8058b5b:	00 
 8058b5c:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8058b60:	e8 8b 0f ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058b65:	81 c3 9b 74 05 00    	add    $0x5749b,%ebx
 8058b6b:	83 f8 23             	cmp    $0x23,%eax
 8058b6e:	77 20                	ja     8058b90 <.L95>
 8058b70:	8b 84 83 b0 4a fd ff 	mov    -0x2b550(%ebx,%eax,4),%eax
 8058b77:	01 d8                	add    %ebx,%eax
 8058b79:	ff e0                	jmp    *%eax
 8058b7b:	90                   	nop
 8058b7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08058b80 <.L131>:
 8058b80:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058b87:	e8 44 74 00 00       	call   805ffd0 <__asan_describe_address>
 8058b8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08058b90 <.L95>:
 8058b90:	83 c4 28             	add    $0x28,%esp
 8058b93:	5b                   	pop    %ebx
 8058b94:	c3                   	ret    
 8058b95:	8d 76 00             	lea    0x0(%esi),%esi

08058b98 <.L130>:
 8058b98:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058b9f:	00 
 8058ba0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058ba7:	e8 f4 48 00 00       	call   805d4a0 <__asan_region_is_poisoned>
 8058bac:	eb e2                	jmp    8058b90 <.L95>
 8058bae:	66 90                	xchg   %ax,%ax

08058bb0 <.L129>:
 8058bb0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058bb7:	00 
 8058bb8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058bbf:	e8 cc 4c 00 00       	call   805d890 <__asan_unpoison_stack_memory>
 8058bc4:	eb ca                	jmp    8058b90 <.L95>
 8058bc6:	66 90                	xchg   %ax,%ax

08058bc8 <.L128>:
 8058bc8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058bcf:	00 
 8058bd0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058bd7:	e8 94 4b 00 00       	call   805d770 <__asan_poison_stack_memory>
 8058bdc:	eb b2                	jmp    8058b90 <.L95>
 8058bde:	66 90                	xchg   %ax,%ax

08058be0 <.L127>:
 8058be0:	e8 7b 35 00 00       	call   805c160 <__asan_after_dynamic_init>
 8058be5:	eb a9                	jmp    8058b90 <.L95>
 8058be7:	90                   	nop

08058be8 <.L126>:
 8058be8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058bef:	00 
 8058bf0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058bf7:	e8 34 32 00 00       	call   805be30 <__asan_before_dynamic_init>
 8058bfc:	eb 92                	jmp    8058b90 <.L95>
 8058bfe:	66 90                	xchg   %ax,%ax

08058c00 <.L125>:
 8058c00:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058c07:	00 
 8058c08:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058c0f:	e8 ec 2a 00 00       	call   805b700 <__asan_stack_malloc>
 8058c14:	e9 77 ff ff ff       	jmp    8058b90 <.L95>
 8058c19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058c20 <.L124>:
 8058c20:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8058c27:	00 
 8058c28:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058c2f:	00 
 8058c30:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058c37:	e8 24 2b 00 00       	call   805b760 <__asan_stack_free>
 8058c3c:	e9 4f ff ff ff       	jmp    8058b90 <.L95>
 8058c41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058c48 <.L123>:
 8058c48:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058c4f:	e8 1c fe ff ff       	call   8058a70 <__asan_set_error_exit_code>
 8058c54:	e9 37 ff ff ff       	jmp    8058b90 <.L95>
 8058c59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058c60 <.L122>:
 8058c60:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058c67:	00 
 8058c68:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058c6f:	e8 2c 45 00 00       	call   805d1a0 <__asan_unpoison_memory_region>
 8058c74:	e9 17 ff ff ff       	jmp    8058b90 <.L95>
 8058c79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058c80 <.L121>:
 8058c80:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058c87:	00 
 8058c88:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058c8f:	e8 cc 41 00 00       	call   805ce60 <__asan_poison_memory_region>
 8058c94:	e9 f7 fe ff ff       	jmp    8058b90 <.L95>
 8058c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058ca0 <.L120>:
 8058ca0:	e8 ab 0c 00 00       	call   8059950 <__asan_get_unmapped_bytes>
 8058ca5:	e9 e6 fe ff ff       	jmp    8058b90 <.L95>
 8058caa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08058cb0 <.L119>:
 8058cb0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058cb7:	e8 e4 29 ff ff       	call   804b6a0 <__asan_get_ownership>
 8058cbc:	e9 cf fe ff ff       	jmp    8058b90 <.L95>
 8058cc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058cc8 <.L118>:
 8058cc8:	e8 23 0c 00 00       	call   80598f0 <__asan_get_heap_size>
 8058ccd:	8d 76 00             	lea    0x0(%esi),%esi
 8058cd0:	e9 bb fe ff ff       	jmp    8058b90 <.L95>
 8058cd5:	8d 76 00             	lea    0x0(%esi),%esi

08058cd8 <.L117>:
 8058cd8:	90                   	nop
 8058cd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8058ce0:	e8 3b 0c 00 00       	call   8059920 <__asan_get_free_bytes>
 8058ce5:	e9 a6 fe ff ff       	jmp    8058b90 <.L95>
 8058cea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08058cf0 <.L116>:
 8058cf0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058cf7:	e8 94 29 ff ff       	call   804b690 <__asan_get_estimated_allocated_size>
 8058cfc:	e9 8f fe ff ff       	jmp    8058b90 <.L95>
 8058d01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058d08 <.L115>:
 8058d08:	e8 b3 0b 00 00       	call   80598c0 <__asan_get_current_allocated_bytes>
 8058d0d:	8d 76 00             	lea    0x0(%esi),%esi
 8058d10:	e9 7b fe ff ff       	jmp    8058b90 <.L95>
 8058d15:	8d 76 00             	lea    0x0(%esi),%esi

08058d18 <.L114>:
 8058d18:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058d1f:	e8 9c 29 ff ff       	call   804b6c0 <__asan_get_allocated_size>
 8058d24:	e9 67 fe ff ff       	jmp    8058b90 <.L95>
 8058d29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058d30 <.L113>:
 8058d30:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058d37:	e8 44 47 00 00       	call   805d480 <__asan_address_is_poisoned>
 8058d3c:	e9 4f fe ff ff       	jmp    8058b90 <.L95>
 8058d41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058d48 <.L112>:
 8058d48:	e8 43 fd ff ff       	call   8058a90 <__asan_handle_no_return>
 8058d4d:	8d 76 00             	lea    0x0(%esi),%esi
 8058d50:	e9 3b fe ff ff       	jmp    8058b90 <.L95>
 8058d55:	8d 76 00             	lea    0x0(%esi),%esi

08058d58 <.L111>:
 8058d58:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058d5f:	e8 0c 72 00 00       	call   805ff70 <__asan_set_error_report_callback>
 8058d64:	e9 27 fe ff ff       	jmp    8058b90 <.L95>
 8058d69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058d70 <.L110>:
 8058d70:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058d77:	e8 b4 fd ff ff       	call   8058b30 <__asan_set_death_callback>
 8058d7c:	e9 0f fe ff ff       	jmp    8058b90 <.L95>
 8058d81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058d88 <.L109>:
 8058d88:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058d8f:	00 
 8058d90:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058d97:	e8 34 2e 00 00       	call   805bbd0 <__asan_unregister_globals>
 8058d9c:	e9 ef fd ff ff       	jmp    8058b90 <.L95>
 8058da1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058da8 <.L108>:
 8058da8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8058daf:	00 
 8058db0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058db7:	e8 34 2b 00 00       	call   805b8f0 <__asan_register_globals>
 8058dbc:	e9 cf fd ff ff       	jmp    8058b90 <.L95>
 8058dc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058dc8 <.L107>:
 8058dc8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058dcf:	e8 ac fb ff ff       	call   8058980 <__asan_report_store16>
 8058dd4:	e9 b7 fd ff ff       	jmp    8058b90 <.L95>
 8058dd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058de0 <.L106>:
 8058de0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058de7:	e8 44 fb ff ff       	call   8058930 <__asan_report_store8>
 8058dec:	e9 9f fd ff ff       	jmp    8058b90 <.L95>
 8058df1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058df8 <.L105>:
 8058df8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058dff:	e8 dc fa ff ff       	call   80588e0 <__asan_report_store4>
 8058e04:	e9 87 fd ff ff       	jmp    8058b90 <.L95>
 8058e09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058e10 <.L104>:
 8058e10:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058e17:	e8 74 fa ff ff       	call   8058890 <__asan_report_store2>
 8058e1c:	e9 6f fd ff ff       	jmp    8058b90 <.L95>
 8058e21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058e28 <.L103>:
 8058e28:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058e2f:	e8 0c fa ff ff       	call   8058840 <__asan_report_store1>
 8058e34:	e9 57 fd ff ff       	jmp    8058b90 <.L95>
 8058e39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058e40 <.L102>:
 8058e40:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058e47:	e8 a4 f9 ff ff       	call   80587f0 <__asan_report_load16>
 8058e4c:	e9 3f fd ff ff       	jmp    8058b90 <.L95>
 8058e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058e58 <.L101>:
 8058e58:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058e5f:	e8 3c f9 ff ff       	call   80587a0 <__asan_report_load8>
 8058e64:	e9 27 fd ff ff       	jmp    8058b90 <.L95>
 8058e69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058e70 <.L100>:
 8058e70:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058e77:	e8 d4 f8 ff ff       	call   8058750 <__asan_report_load4>
 8058e7c:	e9 0f fd ff ff       	jmp    8058b90 <.L95>
 8058e81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058e88 <.L99>:
 8058e88:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058e8f:	e8 6c f8 ff ff       	call   8058700 <__asan_report_load2>
 8058e94:	e9 f7 fc ff ff       	jmp    8058b90 <.L95>
 8058e99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08058ea0 <.L97>:
 8058ea0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8058ea7:	e8 04 f8 ff ff       	call   80586b0 <__asan_report_load1>
 8058eac:	e9 df fc ff ff       	jmp    8058b90 <.L95>
 8058eb1:	eb 0d                	jmp    8058ec0 <__asan_init_v1>
 8058eb3:	90                   	nop
 8058eb4:	90                   	nop
 8058eb5:	90                   	nop
 8058eb6:	90                   	nop
 8058eb7:	90                   	nop
 8058eb8:	90                   	nop
 8058eb9:	90                   	nop
 8058eba:	90                   	nop
 8058ebb:	90                   	nop
 8058ebc:	90                   	nop
 8058ebd:	90                   	nop
 8058ebe:	90                   	nop
 8058ebf:	90                   	nop

08058ec0 <__asan_init_v1>:
 8058ec0:	55                   	push   %ebp
 8058ec1:	57                   	push   %edi
 8058ec2:	56                   	push   %esi
 8058ec3:	53                   	push   %ebx
 8058ec4:	e8 27 0c ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8058ec9:	81 c3 37 71 05 00    	add    $0x57137,%ebx
 8058ecf:	83 ec 3c             	sub    $0x3c,%esp
 8058ed2:	8b 83 14 bc 02 00    	mov    0x2bc14(%ebx),%eax
 8058ed8:	85 c0                	test   %eax,%eax
 8058eda:	0f 85 04 02 00 00    	jne    80590e4 <__asan_init_v1+0x224>
 8058ee0:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
 8058ee6:	8d 93 00 45 fd ff    	lea    -0x2bb00(%ebx),%edx
 8058eec:	80 bb 10 bc 02 00 00 	cmpb   $0x0,0x2bc10(%ebx)
 8058ef3:	89 10                	mov    %edx,(%eax)
 8058ef5:	0f 85 a9 06 00 00    	jne    80595a4 <__asan_init_v1+0x6e4>
 8058efb:	8d b3 08 bc 02 00    	lea    0x2bc08(%ebx),%esi
 8058f01:	c6 83 10 bc 02 00 01 	movb   $0x1,0x2bc10(%ebx)
 8058f08:	c7 06 ff ff ff ff    	movl   $0xffffffff,(%esi)
 8058f0e:	e8 dd 34 00 00       	call   805c3f0 <_ZN6__asan31AsanDoesNotSupportStaticLinkageEv>
 8058f13:	8d 83 e0 82 fa ff    	lea    -0x57d20(%ebx),%eax
 8058f19:	89 04 24             	mov    %eax,(%esp)
 8058f1c:	e8 1f 93 00 00       	call   8062240 <_ZN11__sanitizer14SetDieCallbackEPFvvE>
 8058f21:	8d 83 50 82 fa ff    	lea    -0x57db0(%ebx),%eax
 8058f27:	89 04 24             	mov    %eax,(%esp)
 8058f2a:	e8 61 94 00 00       	call   8062390 <_ZN11__sanitizer22SetCheckFailedCallbackEPFvPKciS1_yyE>
 8058f2f:	8d 83 10 db fa ff    	lea    -0x524f0(%ebx),%eax
 8058f35:	89 04 24             	mov    %eax,(%esp)
 8058f38:	e8 23 87 00 00       	call   8061660 <_ZN11__sanitizer26SetPrintfAndReportCallbackEPFvPKcE>
 8058f3d:	8d 83 11 45 fd ff    	lea    -0x2baef(%ebx),%eax
 8058f43:	89 04 24             	mov    %eax,(%esp)
 8058f46:	e8 75 c4 00 00       	call   80653c0 <_ZN11__sanitizer6GetEnvEPKc>
 8058f4b:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058f4f:	89 c7                	mov    %eax,%edi
 8058f51:	8d 83 a0 bf 02 00    	lea    0x2bfa0(%ebx),%eax
 8058f57:	89 04 24             	mov    %eax,(%esp)
 8058f5a:	e8 e1 f5 ff ff       	call   8058540 <_ZN6__asan15InitializeFlagsEPNS_5FlagsEPKc>
 8058f5f:	8b 83 e8 bf 02 00    	mov    0x2bfe8(%ebx),%eax
 8058f65:	89 04 24             	mov    %eax,(%esp)
 8058f68:	e8 a3 98 00 00       	call   8062810 <__sanitizer_set_report_path>
 8058f6d:	8b ab a8 bf 02 00    	mov    0x2bfa8(%ebx),%ebp
 8058f73:	85 ed                	test   %ebp,%ebp
 8058f75:	74 16                	je     8058f8d <__asan_init_v1+0xcd>
 8058f77:	85 ff                	test   %edi,%edi
 8058f79:	74 12                	je     8058f8d <__asan_init_v1+0xcd>
 8058f7b:	8d 83 bd 45 fd ff    	lea    -0x2ba43(%ebx),%eax
 8058f81:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8058f85:	89 04 24             	mov    %eax,(%esp)
 8058f88:	e8 b3 87 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8058f8d:	e8 4e 34 00 00       	call   805c3e0 <_ZN6__asan11MaybeReexecEv>
 8058f92:	8d 83 b0 81 fa ff    	lea    -0x57e50(%ebx),%eax
 8058f98:	89 04 24             	mov    %eax,(%esp)
 8058f9b:	e8 30 92 00 00       	call   80621d0 <_ZN11__sanitizer27SetLowLevelAllocateCallbackEPFvmmE>
 8058fa0:	80 bb db bf 02 00 00 	cmpb   $0x0,0x2bfdb(%ebx)
 8058fa7:	0f 85 33 04 00 00    	jne    80593e0 <__asan_init_v1+0x520>
 8058fad:	e8 fe d2 ff ff       	call   80562b0 <_ZN6__asan26InitializeAsanInterceptorsEv>
 8058fb2:	bd 00 00 00 20       	mov    $0x20000000,%ebp
 8058fb7:	e8 74 35 00 00       	call   805c530 <_ZN6__asan19ReplaceSystemMallocEv>
 8058fbc:	e8 1f e4 ff ff       	call   80573e0 <_ZN6__asan28ReplaceOperatorsNewAndDeleteEv>
 8058fc1:	e8 6a 9a 00 00       	call   8062a30 <_ZN11__sanitizer18GetMmapGranularityEv>
 8058fc6:	29 c5                	sub    %eax,%ebp
 8058fc8:	8b 06                	mov    (%esi),%eax
 8058fca:	89 2c 24             	mov    %ebp,(%esp)
 8058fcd:	c1 e8 03             	shr    $0x3,%eax
 8058fd0:	05 00 00 00 20       	add    $0x20000000,%eax
 8058fd5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8058fd9:	89 44 24 28          	mov    %eax,0x28(%esp)
 8058fdd:	e8 ee 9f 00 00       	call   8062fd0 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm>
 8058fe2:	8b bb a8 bf 02 00    	mov    0x2bfa8(%ebx),%edi
 8058fe8:	85 ff                	test   %edi,%edi
 8058fea:	88 44 24 20          	mov    %al,0x20(%esp)
 8058fee:	0f 85 fc 00 00 00    	jne    80590f0 <__asan_init_v1+0x230>
 8058ff4:	8d bb 04 bc 02 00    	lea    0x2bc04(%ebx),%edi
 8058ffa:	80 bb dc bf 02 00 00 	cmpb   $0x0,0x2bfdc(%ebx)
 8059001:	0f 85 f1 03 00 00    	jne    80593f8 <__asan_init_v1+0x538>
 8059007:	80 7c 24 20 00       	cmpb   $0x0,0x20(%esp)
 805900c:	75 22                	jne    8059030 <__asan_init_v1+0x170>
 805900e:	8b 07                	mov    (%edi),%eax
 8059010:	85 c0                	test   %eax,%eax
 8059012:	0f 85 18 04 00 00    	jne    8059430 <__asan_init_v1+0x570>
 8059018:	8d 83 44 4a fd ff    	lea    -0x2b5bc(%ebx),%eax
 805901e:	89 04 24             	mov    %eax,(%esp)
 8059021:	e8 1a 87 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8059026:	e8 d5 a0 00 00       	call   8063100 <_ZN11__sanitizer14DumpProcessMapEv>
 805902b:	e8 30 92 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 8059030:	ba ff ff ff 23       	mov    $0x23ffffff,%edx
 8059035:	89 e8                	mov    %ebp,%eax
 8059037:	e8 94 f3 ff ff       	call   80583d0 <_ZN6__asanL24ReserveShadowMemoryRangeEmm>
 805903c:	8b 06                	mov    (%esi),%eax
 805903e:	c1 e8 03             	shr    $0x3,%eax
 8059041:	8d 90 00 00 00 20    	lea    0x20000000(%eax),%edx
 8059047:	05 01 00 00 20       	add    $0x20000001,%eax
 805904c:	c1 e8 03             	shr    $0x3,%eax
 805904f:	05 00 00 00 20       	add    $0x20000000,%eax
 8059054:	e8 77 f3 ff ff       	call   80583d0 <_ZN6__asanL24ReserveShadowMemoryRangeEmm>
 8059059:	8b 17                	mov    (%edi),%edx
 805905b:	85 d2                	test   %edx,%edx
 805905d:	75 0b                	jne    805906a <__asan_init_v1+0x1aa>
 805905f:	8b 16                	mov    (%esi),%edx
 8059061:	c1 ea 03             	shr    $0x3,%edx
 8059064:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805906a:	c1 ea 03             	shr    $0x3,%edx
 805906d:	b8 00 00 00 24       	mov    $0x24000000,%eax
 8059072:	81 ea 00 00 00 04    	sub    $0x4000000,%edx
 8059078:	e8 43 f4 ff ff       	call   80584c0 <_ZN6__asanL10ProtectGapEmm>
 805907d:	e8 be ea ff ff       	call   8057b40 <_ZN6__asan21InstallSignalHandlersEv>
 8059082:	80 bb a4 bf 02 00 00 	cmpb   $0x0,0x2bfa4(%ebx)
 8059089:	0f 85 79 03 00 00    	jne    8059408 <__asan_init_v1+0x548>
 805908f:	c7 83 14 bc 02 00 01 	movl   $0x1,0x2bc14(%ebx)
 8059096:	00 00 00 
 8059099:	c6 83 10 bc 02 00 00 	movb   $0x0,0x2bc10(%ebx)
 80590a0:	e8 cb 08 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 80590a5:	89 04 24             	mov    %eax,(%esp)
 80590a8:	e8 33 0c 00 00       	call   8059ce0 <_ZN6__asan18AsanThreadRegistry4InitEv>
 80590ad:	e8 be 08 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 80590b2:	89 04 24             	mov    %eax,(%esp)
 80590b5:	e8 b6 0a 00 00       	call   8059b70 <_ZN6__asan18AsanThreadRegistry7GetMainEv>
 80590ba:	89 04 24             	mov    %eax,(%esp)
 80590bd:	e8 be 76 00 00       	call   8060780 <_ZN6__asan10AsanThread11ThreadStartEv>
 80590c2:	e8 89 fa ff ff       	call   8058b50 <_ZN6__asanL23force_interface_symbolsEv>
 80590c7:	e8 74 20 ff ff       	call   804b140 <_ZN6__asan19InitializeAllocatorEv>
 80590cc:	8b 83 a8 bf 02 00    	mov    0x2bfa8(%ebx),%eax
 80590d2:	85 c0                	test   %eax,%eax
 80590d4:	74 0e                	je     80590e4 <__asan_init_v1+0x224>
 80590d6:	8d 83 a1 45 fd ff    	lea    -0x2ba5f(%ebx),%eax
 80590dc:	89 04 24             	mov    %eax,(%esp)
 80590df:	e8 5c 86 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80590e4:	83 c4 3c             	add    $0x3c,%esp
 80590e7:	5b                   	pop    %ebx
 80590e8:	5e                   	pop    %esi
 80590e9:	5f                   	pop    %edi
 80590ea:	5d                   	pop    %ebp
 80590eb:	c3                   	ret    
 80590ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80590f0:	8b 06                	mov    (%esi),%eax
 80590f2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80590f6:	c1 e8 03             	shr    $0x3,%eax
 80590f9:	05 01 00 00 20       	add    $0x20000001,%eax
 80590fe:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059102:	8d 83 04 48 fd ff    	lea    -0x2b7fc(%ebx),%eax
 8059108:	89 04 24             	mov    %eax,(%esp)
 805910b:	e8 70 85 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059110:	8b 06                	mov    (%esi),%eax
 8059112:	c1 e8 03             	shr    $0x3,%eax
 8059115:	8d 90 00 00 00 20    	lea    0x20000000(%eax),%edx
 805911b:	05 01 00 00 20       	add    $0x20000001,%eax
 8059120:	c1 e8 03             	shr    $0x3,%eax
 8059123:	05 00 00 00 20       	add    $0x20000000,%eax
 8059128:	89 44 24 04          	mov    %eax,0x4(%esp)
 805912c:	8d 83 24 48 fd ff    	lea    -0x2b7dc(%ebx),%eax
 8059132:	89 54 24 08          	mov    %edx,0x8(%esp)
 8059136:	89 04 24             	mov    %eax,(%esp)
 8059139:	e8 42 85 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805913e:	8d bb 04 bc 02 00    	lea    0x2bc04(%ebx),%edi
 8059144:	8b 0f                	mov    (%edi),%ecx
 8059146:	85 c9                	test   %ecx,%ecx
 8059148:	0f 84 c2 00 00 00    	je     8059210 <__asan_init_v1+0x350>
 805914e:	8b 06                	mov    (%esi),%eax
 8059150:	c1 e8 03             	shr    $0x3,%eax
 8059153:	05 01 00 00 20       	add    $0x20000001,%eax
 8059158:	c1 e8 03             	shr    $0x3,%eax
 805915b:	05 ff ff ff 1f       	add    $0x1fffffff,%eax
 8059160:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059164:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805916a:	8b 08                	mov    (%eax),%ecx
 805916c:	89 44 24 24          	mov    %eax,0x24(%esp)
 8059170:	8d 41 01             	lea    0x1(%ecx),%eax
 8059173:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059177:	8d 83 44 48 fd ff    	lea    -0x2b7bc(%ebx),%eax
 805917d:	89 04 24             	mov    %eax,(%esp)
 8059180:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 8059184:	e8 f7 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059189:	8b 44 24 24          	mov    0x24(%esp),%eax
 805918d:	8b 00                	mov    (%eax),%eax
 805918f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059193:	8b 07                	mov    (%edi),%eax
 8059195:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059199:	8d 83 64 48 fd ff    	lea    -0x2b79c(%ebx),%eax
 805919f:	89 04 24             	mov    %eax,(%esp)
 80591a2:	e8 d9 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80591a7:	8b 17                	mov    (%edi),%edx
 80591a9:	85 d2                	test   %edx,%edx
 80591ab:	0f 84 c7 03 00 00    	je     8059578 <__asan_init_v1+0x6b8>
 80591b1:	8b 44 24 24          	mov    0x24(%esp),%eax
 80591b5:	83 ea 01             	sub    $0x1,%edx
 80591b8:	8b 00                	mov    (%eax),%eax
 80591ba:	c1 e8 03             	shr    $0x3,%eax
 80591bd:	05 01 00 00 20       	add    $0x20000001,%eax
 80591c2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80591c6:	8d 83 84 48 fd ff    	lea    -0x2b77c(%ebx),%eax
 80591cc:	89 54 24 08          	mov    %edx,0x8(%esp)
 80591d0:	89 04 24             	mov    %eax,(%esp)
 80591d3:	e8 a8 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80591d8:	8b 44 24 24          	mov    0x24(%esp),%eax
 80591dc:	8b 00                	mov    (%eax),%eax
 80591de:	c1 e8 03             	shr    $0x3,%eax
 80591e1:	05 00 00 00 20       	add    $0x20000000,%eax
 80591e6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80591ea:	8b 07                	mov    (%edi),%eax
 80591ec:	c1 e8 03             	shr    $0x3,%eax
 80591ef:	05 00 00 00 20       	add    $0x20000000,%eax
 80591f4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80591f8:	8d 83 a4 48 fd ff    	lea    -0x2b75c(%ebx),%eax
 80591fe:	89 04 24             	mov    %eax,(%esp)
 8059201:	e8 7a 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059206:	8b 07                	mov    (%edi),%eax
 8059208:	85 c0                	test   %eax,%eax
 805920a:	75 0e                	jne    805921a <__asan_init_v1+0x35a>
 805920c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8059210:	8b 06                	mov    (%esi),%eax
 8059212:	c1 e8 03             	shr    $0x3,%eax
 8059215:	05 01 00 00 20       	add    $0x20000001,%eax
 805921a:	c1 e8 03             	shr    $0x3,%eax
 805921d:	05 ff ff ff 1f       	add    $0x1fffffff,%eax
 8059222:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059226:	8d 83 c4 48 fd ff    	lea    -0x2b73c(%ebx),%eax
 805922c:	89 04 24             	mov    %eax,(%esp)
 805922f:	c7 44 24 04 00 00 00 	movl   $0x24000000,0x4(%esp)
 8059236:	24 
 8059237:	e8 44 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805923c:	8d 83 e4 48 fd ff    	lea    -0x2b71c(%ebx),%eax
 8059242:	89 04 24             	mov    %eax,(%esp)
 8059245:	c7 44 24 08 ff ff ff 	movl   $0x23ffffff,0x8(%esp)
 805924c:	23 
 805924d:	c7 44 24 04 00 00 00 	movl   $0x20000000,0x4(%esp)
 8059254:	20 
 8059255:	e8 26 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805925a:	8d 83 04 49 fd ff    	lea    -0x2b6fc(%ebx),%eax
 8059260:	89 04 24             	mov    %eax,(%esp)
 8059263:	c7 44 24 08 ff ff ff 	movl   $0x1fffffff,0x8(%esp)
 805926a:	1f 
 805926b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8059272:	00 
 8059273:	e8 08 84 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059278:	8b 06                	mov    (%esi),%eax
 805927a:	c7 44 24 08 ff ff 7f 	movl   $0x247fffff,0x8(%esp)
 8059281:	24 
 8059282:	c7 44 24 04 00 00 00 	movl   $0x24000000,0x4(%esp)
 8059289:	24 
 805928a:	c1 e8 03             	shr    $0x3,%eax
 805928d:	8d 90 00 00 00 20    	lea    0x20000000(%eax),%edx
 8059293:	05 01 00 00 20       	add    $0x20000001,%eax
 8059298:	c1 e8 03             	shr    $0x3,%eax
 805929b:	05 00 00 00 20       	add    $0x20000000,%eax
 80592a0:	c1 e8 03             	shr    $0x3,%eax
 80592a3:	05 00 00 00 20       	add    $0x20000000,%eax
 80592a8:	c1 ea 03             	shr    $0x3,%edx
 80592ab:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 80592b1:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80592b5:	8d 83 24 49 fd ff    	lea    -0x2b6dc(%ebx),%eax
 80592bb:	89 04 24             	mov    %eax,(%esp)
 80592be:	89 54 24 10          	mov    %edx,0x10(%esp)
 80592c2:	e8 b9 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80592c7:	8b 07                	mov    (%edi),%eax
 80592c9:	85 c0                	test   %eax,%eax
 80592cb:	0f 85 5f 02 00 00    	jne    8059530 <__asan_init_v1+0x670>
 80592d1:	8d 83 b6 61 fd ff    	lea    -0x29e4a(%ebx),%eax
 80592d7:	89 04 24             	mov    %eax,(%esp)
 80592da:	e8 a1 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80592df:	8b 83 ac bf 02 00    	mov    0x2bfac(%ebx),%eax
 80592e5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80592e9:	8d 83 25 45 fd ff    	lea    -0x2badb(%ebx),%eax
 80592ef:	89 04 24             	mov    %eax,(%esp)
 80592f2:	e8 89 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80592f7:	8b 83 bc bf 02 00    	mov    0x2bfbc(%ebx),%eax
 80592fd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059301:	8d 83 33 45 fd ff    	lea    -0x2bacd(%ebx),%eax
 8059307:	89 04 24             	mov    %eax,(%esp)
 805930a:	e8 71 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805930f:	8d 83 4c 45 fd ff    	lea    -0x2bab4(%ebx),%eax
 8059315:	89 04 24             	mov    %eax,(%esp)
 8059318:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 805931f:	00 
 8059320:	e8 5b 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059325:	8d 83 5f 45 fd ff    	lea    -0x2baa1(%ebx),%eax
 805932b:	89 04 24             	mov    %eax,(%esp)
 805932e:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 8059335:	00 
 8059336:	e8 45 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805933b:	8d 83 78 45 fd ff    	lea    -0x2ba88(%ebx),%eax
 8059341:	89 04 24             	mov    %eax,(%esp)
 8059344:	c7 44 24 04 00 00 00 	movl   $0x20000000,0x4(%esp)
 805934b:	20 
 805934c:	e8 2f 83 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059351:	8b 07                	mov    (%edi),%eax
 8059353:	85 c0                	test   %eax,%eax
 8059355:	0f 84 9f fc ff ff    	je     8058ffa <__asan_init_v1+0x13a>
 805935b:	89 c2                	mov    %eax,%edx
 805935d:	c1 ea 03             	shr    $0x3,%edx
 8059360:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8059366:	81 fa ff ff ff 23    	cmp    $0x23ffffff,%edx
 805936c:	76 32                	jbe    80593a0 <__asan_init_v1+0x4e0>
 805936e:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 8059374:	8b 12                	mov    (%edx),%edx
 8059376:	89 d1                	mov    %edx,%ecx
 8059378:	c1 e9 03             	shr    $0x3,%ecx
 805937b:	81 c1 00 00 00 20    	add    $0x20000000,%ecx
 8059381:	39 c8                	cmp    %ecx,%eax
 8059383:	76 1b                	jbe    80593a0 <__asan_init_v1+0x4e0>
 8059385:	8b 06                	mov    (%esi),%eax
 8059387:	c1 e8 03             	shr    $0x3,%eax
 805938a:	05 01 00 00 20       	add    $0x20000001,%eax
 805938f:	c1 e8 03             	shr    $0x3,%eax
 8059392:	05 00 00 00 20       	add    $0x20000000,%eax
 8059397:	39 c2                	cmp    %eax,%edx
 8059399:	0f 82 5b fc ff ff    	jb     8058ffa <__asan_init_v1+0x13a>
 805939f:	90                   	nop
 80593a0:	8d 83 48 49 fd ff    	lea    -0x2b6b8(%ebx),%eax
 80593a6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80593aa:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 80593b0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80593b7:	00 
 80593b8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80593bf:	00 
 80593c0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80593c7:	00 
 80593c8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80593cf:	00 
 80593d0:	c7 44 24 04 75 01 00 	movl   $0x175,0x4(%esp)
 80593d7:	00 
 80593d8:	89 04 24             	mov    %eax,(%esp)
 80593db:	e8 d0 8f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80593e0:	8d 83 e0 81 fa ff    	lea    -0x57e20(%ebx),%eax
 80593e6:	89 04 24             	mov    %eax,(%esp)
 80593e9:	e8 72 a1 00 00       	call   8063560 <_ZN11__sanitizer6AtexitEPFvvE>
 80593ee:	e9 ba fb ff ff       	jmp    8058fad <__asan_init_v1+0xed>
 80593f3:	90                   	nop
 80593f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80593f8:	e8 83 9f 00 00       	call   8063380 <_ZN11__sanitizer17DisableCoreDumperEv>
 80593fd:	8d 76 00             	lea    0x0(%esi),%esi
 8059400:	e9 02 fc ff ff       	jmp    8059007 <__asan_init_v1+0x147>
 8059405:	8d 76 00             	lea    0x0(%esi),%esi
 8059408:	8d 83 8c 45 fd ff    	lea    -0x2ba74(%ebx),%eax
 805940e:	89 04 24             	mov    %eax,(%esp)
 8059411:	e8 aa bf 00 00       	call   80653c0 <_ZN11__sanitizer6GetEnvEPKc>
 8059416:	85 c0                	test   %eax,%eax
 8059418:	0f 84 71 fc ff ff    	je     805908f <__asan_init_v1+0x1cf>
 805941e:	89 04 24             	mov    %eax,(%esp)
 8059421:	e8 ba af 00 00       	call   80643e0 <_ZN11__sanitizer28InitializeExternalSymbolizerEPKc>
 8059426:	e9 64 fc ff ff       	jmp    805908f <__asan_init_v1+0x1cf>
 805942b:	90                   	nop
 805942c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8059430:	83 e8 01             	sub    $0x1,%eax
 8059433:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059437:	89 2c 24             	mov    %ebp,(%esp)
 805943a:	e8 91 9b 00 00       	call   8062fd0 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm>
 805943f:	84 c0                	test   %al,%al
 8059441:	0f 84 d1 fb ff ff    	je     8059018 <__asan_init_v1+0x158>
 8059447:	8b 44 24 28          	mov    0x28(%esp),%eax
 805944b:	89 44 24 04          	mov    %eax,0x4(%esp)
 805944f:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 8059455:	89 44 24 24          	mov    %eax,0x24(%esp)
 8059459:	8b 00                	mov    (%eax),%eax
 805945b:	89 44 24 20          	mov    %eax,0x20(%esp)
 805945f:	83 c0 01             	add    $0x1,%eax
 8059462:	89 04 24             	mov    %eax,(%esp)
 8059465:	e8 66 9b 00 00       	call   8062fd0 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm>
 805946a:	84 c0                	test   %al,%al
 805946c:	0f 84 a6 fb ff ff    	je     8059018 <__asan_init_v1+0x158>
 8059472:	ba ff ff ff 23       	mov    $0x23ffffff,%edx
 8059477:	89 e8                	mov    %ebp,%eax
 8059479:	e8 52 ef ff ff       	call   80583d0 <_ZN6__asanL24ReserveShadowMemoryRangeEmm>
 805947e:	8b 44 24 24          	mov    0x24(%esp),%eax
 8059482:	8b 10                	mov    (%eax),%edx
 8059484:	8b 07                	mov    (%edi),%eax
 8059486:	c1 ea 03             	shr    $0x3,%edx
 8059489:	c1 e8 03             	shr    $0x3,%eax
 805948c:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8059492:	05 00 00 00 20       	add    $0x20000000,%eax
 8059497:	e8 34 ef ff ff       	call   80583d0 <_ZN6__asanL24ReserveShadowMemoryRangeEmm>
 805949c:	8b 06                	mov    (%esi),%eax
 805949e:	c1 e8 03             	shr    $0x3,%eax
 80594a1:	8d 90 00 00 00 20    	lea    0x20000000(%eax),%edx
 80594a7:	05 01 00 00 20       	add    $0x20000001,%eax
 80594ac:	c1 e8 03             	shr    $0x3,%eax
 80594af:	05 00 00 00 20       	add    $0x20000000,%eax
 80594b4:	e8 17 ef ff ff       	call   80583d0 <_ZN6__asanL24ReserveShadowMemoryRangeEmm>
 80594b9:	8b 17                	mov    (%edi),%edx
 80594bb:	85 d2                	test   %edx,%edx
 80594bd:	75 0b                	jne    80594ca <__asan_init_v1+0x60a>
 80594bf:	8b 16                	mov    (%esi),%edx
 80594c1:	c1 ea 03             	shr    $0x3,%edx
 80594c4:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 80594ca:	c1 ea 03             	shr    $0x3,%edx
 80594cd:	b8 00 00 00 24       	mov    $0x24000000,%eax
 80594d2:	81 ea 00 00 00 04    	sub    $0x4000000,%edx
 80594d8:	e8 e3 ef ff ff       	call   80584c0 <_ZN6__asanL10ProtectGapEmm>
 80594dd:	8b 17                	mov    (%edi),%edx
 80594df:	85 d2                	test   %edx,%edx
 80594e1:	0f 84 b1 00 00 00    	je     8059598 <__asan_init_v1+0x6d8>
 80594e7:	8b 44 24 24          	mov    0x24(%esp),%eax
 80594eb:	8b 00                	mov    (%eax),%eax
 80594ed:	c1 e8 03             	shr    $0x3,%eax
 80594f0:	05 01 00 00 20       	add    $0x20000001,%eax
 80594f5:	29 c2                	sub    %eax,%edx
 80594f7:	e8 c4 ef ff ff       	call   80584c0 <_ZN6__asanL10ProtectGapEmm>
 80594fc:	8b 17                	mov    (%edi),%edx
 80594fe:	85 d2                	test   %edx,%edx
 8059500:	0f 84 82 00 00 00    	je     8059588 <__asan_init_v1+0x6c8>
 8059506:	8b 44 24 24          	mov    0x24(%esp),%eax
 805950a:	8b 16                	mov    (%esi),%edx
 805950c:	8b 08                	mov    (%eax),%ecx
 805950e:	b8 ff ff ff 1f       	mov    $0x1fffffff,%eax
 8059513:	c1 ea 03             	shr    $0x3,%edx
 8059516:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805951c:	c1 ea 03             	shr    $0x3,%edx
 805951f:	29 c8                	sub    %ecx,%eax
 8059521:	01 c2                	add    %eax,%edx
 8059523:	8d 41 01             	lea    0x1(%ecx),%eax
 8059526:	e8 95 ef ff ff       	call   80584c0 <_ZN6__asanL10ProtectGapEmm>
 805952b:	e9 4d fb ff ff       	jmp    805907d <__asan_init_v1+0x1bd>
 8059530:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 8059536:	c1 e8 03             	shr    $0x3,%eax
 8059539:	05 00 00 00 20       	add    $0x20000000,%eax
 805953e:	c1 e8 03             	shr    $0x3,%eax
 8059541:	05 00 00 00 20       	add    $0x20000000,%eax
 8059546:	8b 12                	mov    (%edx),%edx
 8059548:	89 44 24 04          	mov    %eax,0x4(%esp)
 805954c:	8d 83 1e 45 fd ff    	lea    -0x2bae2(%ebx),%eax
 8059552:	89 04 24             	mov    %eax,(%esp)
 8059555:	c1 ea 03             	shr    $0x3,%edx
 8059558:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 805955e:	c1 ea 03             	shr    $0x3,%edx
 8059561:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8059567:	89 54 24 08          	mov    %edx,0x8(%esp)
 805956b:	e8 10 81 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059570:	e9 5c fd ff ff       	jmp    80592d1 <__asan_init_v1+0x411>
 8059575:	8d 76 00             	lea    0x0(%esi),%esi
 8059578:	31 d2                	xor    %edx,%edx
 805957a:	31 c0                	xor    %eax,%eax
 805957c:	e9 41 fc ff ff       	jmp    80591c2 <__asan_init_v1+0x302>
 8059581:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8059588:	ba 01 00 00 00       	mov    $0x1,%edx
 805958d:	31 c0                	xor    %eax,%eax
 805958f:	eb 95                	jmp    8059526 <__asan_init_v1+0x666>
 8059591:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8059598:	ba 01 00 00 00       	mov    $0x1,%edx
 805959d:	31 c0                	xor    %eax,%eax
 805959f:	e9 53 ff ff ff       	jmp    80594f7 <__asan_init_v1+0x637>
 80595a4:	8d 83 c4 47 fd ff    	lea    -0x2b83c(%ebx),%eax
 80595aa:	89 44 24 08          	mov    %eax,0x8(%esp)
 80595ae:	8d 83 d8 45 fd ff    	lea    -0x2ba28(%ebx),%eax
 80595b4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80595bb:	00 
 80595bc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80595c3:	00 
 80595c4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80595cb:	00 
 80595cc:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80595d3:	00 
 80595d4:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)
 80595db:	00 
 80595dc:	89 04 24             	mov    %eax,(%esp)
 80595df:	e8 cc 8d 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80595e4:	66 90                	xchg   %ax,%ax
 80595e6:	66 90                	xchg   %ax,%ax
 80595e8:	66 90                	xchg   %ax,%ax
 80595ea:	66 90                	xchg   %ax,%ax
 80595ec:	66 90                	xchg   %ax,%ax
 80595ee:	66 90                	xchg   %ax,%ax

080595f0 <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m>:
 80595f0:	55                   	push   %ebp
 80595f1:	89 d5                	mov    %edx,%ebp
 80595f3:	57                   	push   %edi
 80595f4:	56                   	push   %esi
 80595f5:	31 f6                	xor    %esi,%esi
 80595f7:	53                   	push   %ebx
 80595f8:	e8 f3 04 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80595fd:	81 c3 03 6a 05 00    	add    $0x56a03,%ebx
 8059603:	83 ec 1c             	sub    $0x1c,%esp
 8059606:	89 44 24 04          	mov    %eax,0x4(%esp)
 805960a:	8d 83 1b 6b fd ff    	lea    -0x294e5(%ebx),%eax
 8059610:	89 04 24             	mov    %eax,(%esp)
 8059613:	8d bb 40 4b fd ff    	lea    -0x2b4c0(%ebx),%edi
 8059619:	e8 62 80 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805961e:	eb 0b                	jmp    805962b <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m+0x3b>
 8059620:	83 c6 01             	add    $0x1,%esi
 8059623:	81 fe ff 00 00 00    	cmp    $0xff,%esi
 8059629:	74 23                	je     805964e <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m+0x5e>
 805962b:	8b 44 b5 00          	mov    0x0(%ebp,%esi,4),%eax
 805962f:	85 c0                	test   %eax,%eax
 8059631:	74 ed                	je     8059620 <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m+0x30>
 8059633:	89 74 24 04          	mov    %esi,0x4(%esp)
 8059637:	83 c6 01             	add    $0x1,%esi
 805963a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805963e:	89 3c 24             	mov    %edi,(%esp)
 8059641:	e8 3a 80 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059646:	81 fe ff 00 00 00    	cmp    $0xff,%esi
 805964c:	75 dd                	jne    805962b <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m+0x3b>
 805964e:	8d 83 b6 61 fd ff    	lea    -0x29e4a(%ebx),%eax
 8059654:	89 04 24             	mov    %eax,(%esp)
 8059657:	e8 24 80 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805965c:	83 c4 1c             	add    $0x1c,%esp
 805965f:	5b                   	pop    %ebx
 8059660:	5e                   	pop    %esi
 8059661:	5f                   	pop    %edi
 8059662:	5d                   	pop    %ebp
 8059663:	c3                   	ret    
 8059664:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805966a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08059670 <_ZN6__asan9AsanStatsC1Ev>:
 8059670:	53                   	push   %ebx
 8059671:	e8 7a 04 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059676:	81 c3 8a 69 05 00    	add    $0x5698a,%ebx
 805967c:	83 ec 28             	sub    $0x28,%esp
 805967f:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 8059685:	8b 00                	mov    (%eax),%eax
 8059687:	85 c0                	test   %eax,%eax
 8059689:	74 1e                	je     80596a9 <_ZN6__asan9AsanStatsC1Ev+0x39>
 805968b:	8b 54 24 30          	mov    0x30(%esp),%edx
 805968f:	c7 44 24 08 30 10 00 	movl   $0x1030,0x8(%esp)
 8059696:	00 
 8059697:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 805969e:	00 
 805969f:	89 14 24             	mov    %edx,(%esp)
 80596a2:	ff d0                	call   *%eax
 80596a4:	83 c4 28             	add    $0x28,%esp
 80596a7:	5b                   	pop    %ebx
 80596a8:	c3                   	ret    
 80596a9:	8d 83 b4 4b fd ff    	lea    -0x2b44c(%ebx),%eax
 80596af:	89 44 24 08          	mov    %eax,0x8(%esp)
 80596b3:	8d 83 e0 4b fd ff    	lea    -0x2b420(%ebx),%eax
 80596b9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80596c0:	00 
 80596c1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80596c8:	00 
 80596c9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80596d0:	00 
 80596d1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80596d8:	00 
 80596d9:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)
 80596e0:	00 
 80596e1:	89 04 24             	mov    %eax,(%esp)
 80596e4:	e8 c7 8c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80596e9:	90                   	nop
 80596ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080596f0 <_ZN6__asan9AsanStats5PrintEv>:
 80596f0:	56                   	push   %esi
 80596f1:	53                   	push   %ebx
 80596f2:	83 ec 24             	sub    $0x24,%esp
 80596f5:	8b 74 24 30          	mov    0x30(%esp),%esi
 80596f9:	e8 f2 03 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80596fe:	81 c3 02 69 05 00    	add    $0x56902,%ebx
 8059704:	8b 06                	mov    (%esi),%eax
 8059706:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805970a:	8b 46 08             	mov    0x8(%esi),%eax
 805970d:	c1 e8 14             	shr    $0x14,%eax
 8059710:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059714:	8b 46 04             	mov    0x4(%esi),%eax
 8059717:	c1 e8 14             	shr    $0x14,%eax
 805971a:	89 44 24 04          	mov    %eax,0x4(%esp)
 805971e:	8d 83 10 4c fd ff    	lea    -0x2b3f0(%ebx),%eax
 8059724:	89 04 24             	mov    %eax,(%esp)
 8059727:	e8 54 7f 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805972c:	8b 46 20             	mov    0x20(%esi),%eax
 805972f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059733:	8b 46 24             	mov    0x24(%esi),%eax
 8059736:	c1 e8 14             	shr    $0x14,%eax
 8059739:	89 44 24 04          	mov    %eax,0x4(%esp)
 805973d:	8d 83 48 4c fd ff    	lea    -0x2b3b8(%ebx),%eax
 8059743:	89 04 24             	mov    %eax,(%esp)
 8059746:	e8 35 7f 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805974b:	8b 46 0c             	mov    0xc(%esi),%eax
 805974e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059752:	8b 46 10             	mov    0x10(%esi),%eax
 8059755:	c1 e8 14             	shr    $0x14,%eax
 8059758:	89 44 24 04          	mov    %eax,0x4(%esp)
 805975c:	8d 83 6c 4c fd ff    	lea    -0x2b394(%ebx),%eax
 8059762:	89 04 24             	mov    %eax,(%esp)
 8059765:	e8 16 7f 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805976a:	8b 46 14             	mov    0x14(%esi),%eax
 805976d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059771:	8b 46 18             	mov    0x18(%esi),%eax
 8059774:	c1 e8 14             	shr    $0x14,%eax
 8059777:	89 44 24 04          	mov    %eax,0x4(%esp)
 805977b:	8d 83 8c 4c fd ff    	lea    -0x2b374(%ebx),%eax
 8059781:	89 04 24             	mov    %eax,(%esp)
 8059784:	e8 f7 7e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059789:	8b 4e 30             	mov    0x30(%esi),%ecx
 805978c:	8b 56 34             	mov    0x34(%esi),%edx
 805978f:	8b 46 2c             	mov    0x2c(%esi),%eax
 8059792:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 8059796:	8b 4e 28             	mov    0x28(%esi),%ecx
 8059799:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 805979d:	89 d1                	mov    %edx,%ecx
 805979f:	c1 e9 14             	shr    $0x14,%ecx
 80597a2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80597a6:	89 c1                	mov    %eax,%ecx
 80597a8:	29 d0                	sub    %edx,%eax
 80597aa:	c1 e8 14             	shr    $0x14,%eax
 80597ad:	c1 e9 14             	shr    $0x14,%ecx
 80597b0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80597b4:	8d 83 b4 4c fd ff    	lea    -0x2b34c(%ebx),%eax
 80597ba:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80597be:	89 04 24             	mov    %eax,(%esp)
 80597c1:	e8 ba 7e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80597c6:	8d 56 38             	lea    0x38(%esi),%edx
 80597c9:	8d 83 4a 4b fd ff    	lea    -0x2b4b6(%ebx),%eax
 80597cf:	e8 1c fe ff ff       	call   80595f0 <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m>
 80597d4:	8d 96 34 04 00 00    	lea    0x434(%esi),%edx
 80597da:	8d 83 64 4b fd ff    	lea    -0x2b49c(%ebx),%eax
 80597e0:	e8 0b fe ff ff       	call   80595f0 <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m>
 80597e5:	8d 96 30 08 00 00    	lea    0x830(%esi),%edx
 80597eb:	8d 83 7e 4b fd ff    	lea    -0x2b482(%ebx),%eax
 80597f1:	e8 fa fd ff ff       	call   80595f0 <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m>
 80597f6:	8d 96 2c 0c 00 00    	lea    0xc2c(%esi),%edx
 80597fc:	8d 83 98 4b fd ff    	lea    -0x2b468(%ebx),%eax
 8059802:	e8 e9 fd ff ff       	call   80595f0 <_ZN6__asanL21PrintMallocStatsArrayEPKcRA255_m>
 8059807:	8b 86 2c 10 00 00    	mov    0x102c(%esi),%eax
 805980d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059811:	8b 86 28 10 00 00    	mov    0x1028(%esi),%eax
 8059817:	89 44 24 04          	mov    %eax,0x4(%esp)
 805981b:	8d 83 ec 4c fd ff    	lea    -0x2b314(%ebx),%eax
 8059821:	89 04 24             	mov    %eax,(%esp)
 8059824:	e8 57 7e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8059829:	83 c4 24             	add    $0x24,%esp
 805982c:	5b                   	pop    %ebx
 805982d:	5e                   	pop    %esi
 805982e:	c3                   	ret    
 805982f:	90                   	nop

08059830 <_ZN6__asanL21PrintAccumulatedStatsEv>:
 8059830:	57                   	push   %edi
 8059831:	56                   	push   %esi
 8059832:	53                   	push   %ebx
 8059833:	e8 b8 02 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059838:	81 c3 c8 67 05 00    	add    $0x567c8,%ebx
 805983e:	81 ec 40 10 00 00    	sub    $0x1040,%esp
 8059844:	8d 74 24 10          	lea    0x10(%esp),%esi
 8059848:	89 34 24             	mov    %esi,(%esp)
 805984b:	e8 20 fe ff ff       	call   8059670 <_ZN6__asan9AsanStatsC1Ev>
 8059850:	8d bb 00 c0 02 00    	lea    0x2c000(%ebx),%edi
 8059856:	e8 15 01 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805985b:	89 74 24 04          	mov    %esi,0x4(%esp)
 805985f:	89 04 24             	mov    %eax,(%esp)
 8059862:	e8 f9 06 00 00       	call   8059f60 <_ZN6__asan18AsanThreadRegistry19GetAccumulatedStatsEPNS_9AsanStatsE>
 8059867:	89 3c 24             	mov    %edi,(%esp)
 805986a:	e8 c1 ca 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805986f:	89 34 24             	mov    %esi,(%esp)
 8059872:	e8 79 fe ff ff       	call   80596f0 <_ZN6__asan9AsanStats5PrintEv>
 8059877:	e8 34 73 00 00       	call   8060bb0 <_ZN11__sanitizer18StackDepotGetStatsEv>
 805987c:	8b 50 04             	mov    0x4(%eax),%edx
 805987f:	c1 ea 14             	shr    $0x14,%edx
 8059882:	89 54 24 08          	mov    %edx,0x8(%esp)
 8059886:	8b 00                	mov    (%eax),%eax
 8059888:	89 44 24 04          	mov    %eax,0x4(%esp)
 805988c:	8d 83 18 4d fd ff    	lea    -0x2b2e8(%ebx),%eax
 8059892:	89 04 24             	mov    %eax,(%esp)
 8059895:	e8 e6 7d 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805989a:	e8 d1 1b ff ff       	call   804b470 <_ZN6__asan27PrintInternalAllocatorStatsEv>
 805989f:	89 3c 24             	mov    %edi,(%esp)
 80598a2:	e8 f9 ca 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 80598a7:	81 c4 40 10 00 00    	add    $0x1040,%esp
 80598ad:	5b                   	pop    %ebx
 80598ae:	5e                   	pop    %esi
 80598af:	5f                   	pop    %edi
 80598b0:	c3                   	ret    
 80598b1:	eb 0d                	jmp    80598c0 <__asan_get_current_allocated_bytes>
 80598b3:	90                   	nop
 80598b4:	90                   	nop
 80598b5:	90                   	nop
 80598b6:	90                   	nop
 80598b7:	90                   	nop
 80598b8:	90                   	nop
 80598b9:	90                   	nop
 80598ba:	90                   	nop
 80598bb:	90                   	nop
 80598bc:	90                   	nop
 80598bd:	90                   	nop
 80598be:	90                   	nop
 80598bf:	90                   	nop

080598c0 <__asan_get_current_allocated_bytes>:
 80598c0:	53                   	push   %ebx
 80598c1:	e8 2a 02 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80598c6:	81 c3 3a 67 05 00    	add    $0x5673a,%ebx
 80598cc:	83 ec 18             	sub    $0x18,%esp
 80598cf:	e8 9c 00 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 80598d4:	89 04 24             	mov    %eax,(%esp)
 80598d7:	e8 e4 06 00 00       	call   8059fc0 <_ZN6__asan18AsanThreadRegistry24GetCurrentAllocatedBytesEv>
 80598dc:	83 c4 18             	add    $0x18,%esp
 80598df:	5b                   	pop    %ebx
 80598e0:	c3                   	ret    
 80598e1:	eb 0d                	jmp    80598f0 <__asan_get_heap_size>
 80598e3:	90                   	nop
 80598e4:	90                   	nop
 80598e5:	90                   	nop
 80598e6:	90                   	nop
 80598e7:	90                   	nop
 80598e8:	90                   	nop
 80598e9:	90                   	nop
 80598ea:	90                   	nop
 80598eb:	90                   	nop
 80598ec:	90                   	nop
 80598ed:	90                   	nop
 80598ee:	90                   	nop
 80598ef:	90                   	nop

080598f0 <__asan_get_heap_size>:
 80598f0:	53                   	push   %ebx
 80598f1:	e8 fa 01 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80598f6:	81 c3 0a 67 05 00    	add    $0x5670a,%ebx
 80598fc:	83 ec 18             	sub    $0x18,%esp
 80598ff:	e8 6c 00 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8059904:	89 04 24             	mov    %eax,(%esp)
 8059907:	e8 14 07 00 00       	call   805a020 <_ZN6__asan18AsanThreadRegistry11GetHeapSizeEv>
 805990c:	83 c4 18             	add    $0x18,%esp
 805990f:	5b                   	pop    %ebx
 8059910:	c3                   	ret    
 8059911:	eb 0d                	jmp    8059920 <__asan_get_free_bytes>
 8059913:	90                   	nop
 8059914:	90                   	nop
 8059915:	90                   	nop
 8059916:	90                   	nop
 8059917:	90                   	nop
 8059918:	90                   	nop
 8059919:	90                   	nop
 805991a:	90                   	nop
 805991b:	90                   	nop
 805991c:	90                   	nop
 805991d:	90                   	nop
 805991e:	90                   	nop
 805991f:	90                   	nop

08059920 <__asan_get_free_bytes>:
 8059920:	53                   	push   %ebx
 8059921:	e8 ca 01 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059926:	81 c3 da 66 05 00    	add    $0x566da,%ebx
 805992c:	83 ec 18             	sub    $0x18,%esp
 805992f:	e8 3c 00 00 00       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8059934:	89 04 24             	mov    %eax,(%esp)
 8059937:	e8 34 07 00 00       	call   805a070 <_ZN6__asan18AsanThreadRegistry12GetFreeBytesEv>
 805993c:	83 c4 18             	add    $0x18,%esp
 805993f:	5b                   	pop    %ebx
 8059940:	c3                   	ret    
 8059941:	eb 0d                	jmp    8059950 <__asan_get_unmapped_bytes>
 8059943:	90                   	nop
 8059944:	90                   	nop
 8059945:	90                   	nop
 8059946:	90                   	nop
 8059947:	90                   	nop
 8059948:	90                   	nop
 8059949:	90                   	nop
 805994a:	90                   	nop
 805994b:	90                   	nop
 805994c:	90                   	nop
 805994d:	90                   	nop
 805994e:	90                   	nop
 805994f:	90                   	nop

08059950 <__asan_get_unmapped_bytes>:
 8059950:	31 c0                	xor    %eax,%eax
 8059952:	c3                   	ret    
 8059953:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8059959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08059960 <__asan_print_accumulated_stats>:
 8059960:	e9 cb fe ff ff       	jmp    8059830 <_ZN6__asanL21PrintAccumulatedStatsEv>
 8059965:	66 90                	xchg   %ax,%ax
 8059967:	66 90                	xchg   %ax,%ax
 8059969:	66 90                	xchg   %ax,%ax
 805996b:	66 90                	xchg   %ax,%ax
 805996d:	66 90                	xchg   %ax,%ax
 805996f:	90                   	nop

08059970 <_ZN6__asan18asanThreadRegistryEv>:
 8059970:	e8 20 66 ff ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8059975:	81 c1 8b 66 05 00    	add    $0x5668b,%ecx
 805997b:	8d 81 40 c0 02 00    	lea    0x2c040(%ecx),%eax
 8059981:	c3                   	ret    
 8059982:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8059989:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08059990 <_ZN6__asan18AsanThreadRegistryC1E17LinkerInitialized>:
 8059990:	57                   	push   %edi
 8059991:	56                   	push   %esi
 8059992:	53                   	push   %ebx
 8059993:	83 ec 10             	sub    $0x10,%esp
 8059996:	8b 74 24 20          	mov    0x20(%esp),%esi
 805999a:	e8 51 01 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805999f:	81 c3 61 66 05 00    	add    $0x56661,%ebx
 80599a5:	8b 7c 24 24          	mov    0x24(%esp),%edi
 80599a9:	8d 86 00 00 00 01    	lea    0x1000000(%esi),%eax
 80599af:	81 c6 c0 3d 18 01    	add    $0x1183dc0,%esi
 80599b5:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80599b9:	89 04 24             	mov    %eax,(%esp)
 80599bc:	e8 7f 68 00 00       	call   8060240 <_ZN6__asan10AsanThreadC1E17LinkerInitialized>
 80599c1:	89 7e f8             	mov    %edi,-0x8(%esi)
 80599c4:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80599c8:	89 34 24             	mov    %esi,(%esp)
 80599cb:	e8 00 c9 00 00       	call   80662d0 <_ZN11__sanitizer13BlockingMutexC1E17LinkerInitialized>
 80599d0:	83 c4 10             	add    $0x10,%esp
 80599d3:	5b                   	pop    %ebx
 80599d4:	5e                   	pop    %esi
 80599d5:	5f                   	pop    %edi
 80599d6:	c3                   	ret    
 80599d7:	90                   	nop
 80599d8:	90                   	nop
 80599d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080599e0 <_ZN6__asan18AsanThreadRegistry14RegisterThreadEPNS_10AsanThreadE>:
 80599e0:	57                   	push   %edi
 80599e1:	56                   	push   %esi
 80599e2:	53                   	push   %ebx
 80599e3:	83 ec 20             	sub    $0x20,%esp
 80599e6:	8b 74 24 30          	mov    0x30(%esp),%esi
 80599ea:	e8 01 01 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80599ef:	81 c3 11 66 05 00    	add    $0x56611,%ebx
 80599f5:	8d be c0 3d 18 01    	lea    0x1183dc0(%esi),%edi
 80599fb:	89 3c 24             	mov    %edi,(%esp)
 80599fe:	e8 2d c9 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 8059a03:	8b 86 bc 3d 18 01    	mov    0x1183dbc(%esi),%eax
 8059a09:	8d 50 01             	lea    0x1(%eax),%edx
 8059a0c:	81 fa ff ff 3f 00    	cmp    $0x3fffff,%edx
 8059a12:	89 96 bc 3d 18 01    	mov    %edx,0x1183dbc(%esi)
 8059a18:	77 1e                	ja     8059a38 <_ZN6__asan18AsanThreadRegistry14RegisterThreadEPNS_10AsanThreadE+0x58>
 8059a1a:	8b 54 24 34          	mov    0x34(%esp),%edx
 8059a1e:	8b 12                	mov    (%edx),%edx
 8059a20:	85 d2                	test   %edx,%edx
 8059a22:	74 54                	je     8059a78 <_ZN6__asan18AsanThreadRegistry14RegisterThreadEPNS_10AsanThreadE+0x98>
 8059a24:	89 02                	mov    %eax,(%edx)
 8059a26:	89 14 86             	mov    %edx,(%esi,%eax,4)
 8059a29:	89 3c 24             	mov    %edi,(%esp)
 8059a2c:	e8 6f c9 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 8059a31:	83 c4 20             	add    $0x20,%esp
 8059a34:	5b                   	pop    %ebx
 8059a35:	5e                   	pop    %esi
 8059a36:	5f                   	pop    %edi
 8059a37:	c3                   	ret    
 8059a38:	8d 83 44 4d fd ff    	lea    -0x2b2bc(%ebx),%eax
 8059a3e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059a42:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059a48:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059a4f:	00 
 8059a50:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059a57:	00 
 8059a58:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059a5f:	00 
 8059a60:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059a67:	00 
 8059a68:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)
 8059a6f:	00 
 8059a70:	89 04 24             	mov    %eax,(%esp)
 8059a73:	e8 38 89 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059a78:	8d 83 f6 4d fd ff    	lea    -0x2b20a(%ebx),%eax
 8059a7e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059a82:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059a88:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059a8f:	00 
 8059a90:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059a97:	00 
 8059a98:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059a9f:	00 
 8059aa0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059aa7:	00 
 8059aa8:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)
 8059aaf:	00 
 8059ab0:	89 04 24             	mov    %eax,(%esp)
 8059ab3:	e8 f8 88 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059ab8:	90                   	nop
 8059ab9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08059ac0 <_ZN6__asan18AsanThreadRegistry16UnregisterThreadEPNS_10AsanThreadE>:
 8059ac0:	55                   	push   %ebp
 8059ac1:	57                   	push   %edi
 8059ac2:	56                   	push   %esi
 8059ac3:	53                   	push   %ebx
 8059ac4:	83 ec 2c             	sub    $0x2c,%esp
 8059ac7:	8b 7c 24 40          	mov    0x40(%esp),%edi
 8059acb:	e8 20 00 ff ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059ad0:	81 c3 30 65 05 00    	add    $0x56530,%ebx
 8059ad6:	8b 74 24 44          	mov    0x44(%esp),%esi
 8059ada:	8d af c0 3d 18 01    	lea    0x1183dc0(%edi),%ebp
 8059ae0:	89 2c 24             	mov    %ebp,(%esp)
 8059ae3:	e8 48 c8 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 8059ae8:	8d 8e c0 18 18 00    	lea    0x1818c0(%esi),%ecx
 8059aee:	31 c0                	xor    %eax,%eax
 8059af0:	8d 97 88 2d 18 01    	lea    0x1182d88(%edi),%edx
 8059af6:	66 90                	xchg   %ax,%ax
 8059af8:	8b 3c 81             	mov    (%ecx,%eax,4),%edi
 8059afb:	01 3c 82             	add    %edi,(%edx,%eax,4)
 8059afe:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
 8059b05:	83 c0 01             	add    $0x1,%eax
 8059b08:	3d 0c 04 00 00       	cmp    $0x40c,%eax
 8059b0d:	75 e9                	jne    8059af8 <_ZN6__asan18AsanThreadRegistry16UnregisterThreadEPNS_10AsanThreadE+0x38>
 8059b0f:	8b 06                	mov    (%esi),%eax
 8059b11:	85 c0                	test   %eax,%eax
 8059b13:	74 1a                	je     8059b2f <_ZN6__asan18AsanThreadRegistry16UnregisterThreadEPNS_10AsanThreadE+0x6f>
 8059b15:	c7 80 14 04 00 00 00 	movl   $0x0,0x414(%eax)
 8059b1c:	00 00 00 
 8059b1f:	89 2c 24             	mov    %ebp,(%esp)
 8059b22:	e8 79 c8 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 8059b27:	83 c4 2c             	add    $0x2c,%esp
 8059b2a:	5b                   	pop    %ebx
 8059b2b:	5e                   	pop    %esi
 8059b2c:	5f                   	pop    %edi
 8059b2d:	5d                   	pop    %ebp
 8059b2e:	c3                   	ret    
 8059b2f:	8d 83 0e 4e fd ff    	lea    -0x2b1f2(%ebx),%eax
 8059b35:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059b39:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059b3f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059b46:	00 
 8059b47:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059b4e:	00 
 8059b4f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059b56:	00 
 8059b57:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059b5e:	00 
 8059b5f:	c7 44 24 04 3c 00 00 	movl   $0x3c,0x4(%esp)
 8059b66:	00 
 8059b67:	89 04 24             	mov    %eax,(%esp)
 8059b6a:	e8 41 88 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059b6f:	90                   	nop

08059b70 <_ZN6__asan18AsanThreadRegistry7GetMainEv>:
 8059b70:	8b 44 24 04          	mov    0x4(%esp),%eax
 8059b74:	05 00 00 00 01       	add    $0x1000000,%eax
 8059b79:	c3                   	ret    
 8059b7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>:
 8059b80:	53                   	push   %ebx
 8059b81:	e8 6a ff fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059b86:	81 c3 7a 64 05 00    	add    $0x5647a,%ebx
 8059b8c:	83 ec 08             	sub    $0x8,%esp
 8059b8f:	e8 dc e0 ff ff       	call   8057c70 <_ZN6__asan10AsanTSDGetEv>
 8059b94:	85 c0                	test   %eax,%eax
 8059b96:	74 10                	je     8059ba8 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv+0x28>
 8059b98:	8b 80 14 04 00 00    	mov    0x414(%eax),%eax
 8059b9e:	83 c4 08             	add    $0x8,%esp
 8059ba1:	5b                   	pop    %ebx
 8059ba2:	c3                   	ret    
 8059ba3:	90                   	nop
 8059ba4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8059ba8:	31 c0                	xor    %eax,%eax
 8059baa:	eb f2                	jmp    8059b9e <_ZN6__asan18AsanThreadRegistry10GetCurrentEv+0x1e>
 8059bac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08059bb0 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE>:
 8059bb0:	56                   	push   %esi
 8059bb1:	53                   	push   %ebx
 8059bb2:	83 ec 24             	sub    $0x24,%esp
 8059bb5:	8b 74 24 34          	mov    0x34(%esp),%esi
 8059bb9:	e8 32 ff fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059bbe:	81 c3 42 64 05 00    	add    $0x56442,%ebx
 8059bc4:	8b 06                	mov    (%esi),%eax
 8059bc6:	85 c0                	test   %eax,%eax
 8059bc8:	74 4e                	je     8059c18 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE+0x68>
 8059bca:	e8 51 e9 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 8059bcf:	83 78 08 01          	cmpl   $0x1,0x8(%eax)
 8059bd3:	7e 1d                	jle    8059bf2 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE+0x42>
 8059bd5:	e8 b6 8e 00 00       	call   8062a90 <_ZN11__sanitizer13GetThreadSelfEv>
 8059bda:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059bde:	8b 06                	mov    (%esi),%eax
 8059be0:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059be4:	8d 83 39 4e fd ff    	lea    -0x2b1c7(%ebx),%eax
 8059bea:	89 04 24             	mov    %eax,(%esp)
 8059bed:	e8 4e 7b 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8059bf2:	e8 79 e0 ff ff       	call   8057c70 <_ZN6__asan10AsanTSDGetEv>
 8059bf7:	85 c0                	test   %eax,%eax
 8059bf9:	0f 85 99 00 00 00    	jne    8059c98 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE+0xe8>
 8059bff:	8b 06                	mov    (%esi),%eax
 8059c01:	89 04 24             	mov    %eax,(%esp)
 8059c04:	e8 d7 e0 ff ff       	call   8057ce0 <_ZN6__asan10AsanTSDSetEPv>
 8059c09:	e8 62 e0 ff ff       	call   8057c70 <_ZN6__asan10AsanTSDGetEv>
 8059c0e:	3b 06                	cmp    (%esi),%eax
 8059c10:	75 46                	jne    8059c58 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE+0xa8>
 8059c12:	83 c4 24             	add    $0x24,%esp
 8059c15:	5b                   	pop    %ebx
 8059c16:	5e                   	pop    %esi
 8059c17:	c3                   	ret    
 8059c18:	8d 83 21 4e fd ff    	lea    -0x2b1df(%ebx),%eax
 8059c1e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059c22:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059c28:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059c2f:	00 
 8059c30:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059c37:	00 
 8059c38:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059c3f:	00 
 8059c40:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059c47:	00 
 8059c48:	c7 44 24 04 59 00 00 	movl   $0x59,0x4(%esp)
 8059c4f:	00 
 8059c50:	89 04 24             	mov    %eax,(%esp)
 8059c53:	e8 58 87 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059c58:	8d 83 ac 4d fd ff    	lea    -0x2b254(%ebx),%eax
 8059c5e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059c62:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059c68:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059c6f:	00 
 8059c70:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059c77:	00 
 8059c78:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059c7f:	00 
 8059c80:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059c87:	00 
 8059c88:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)
 8059c8f:	00 
 8059c90:	89 04 24             	mov    %eax,(%esp)
 8059c93:	e8 18 87 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059c98:	8d 83 57 4e fd ff    	lea    -0x2b1a9(%ebx),%eax
 8059c9e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059ca2:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059ca8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059caf:	00 
 8059cb0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059cb7:	00 
 8059cb8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059cbf:	00 
 8059cc0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059cc7:	00 
 8059cc8:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)
 8059ccf:	00 
 8059cd0:	89 04 24             	mov    %eax,(%esp)
 8059cd3:	e8 d8 86 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059cd8:	90                   	nop
 8059cd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08059ce0 <_ZN6__asan18AsanThreadRegistry4InitEv>:
 8059ce0:	57                   	push   %edi
 8059ce1:	56                   	push   %esi
 8059ce2:	53                   	push   %ebx
 8059ce3:	e8 08 fe fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059ce8:	81 c3 18 63 05 00    	add    $0x56318,%ebx
 8059cee:	83 ec 10             	sub    $0x10,%esp
 8059cf1:	8b 74 24 20          	mov    0x20(%esp),%esi
 8059cf5:	8d be 00 00 00 01    	lea    0x1000000(%esi),%edi
 8059cfb:	8d 83 c0 04 fb ff    	lea    -0x4fb40(%ebx),%eax
 8059d01:	89 04 24             	mov    %eax,(%esp)
 8059d04:	e8 a7 de ff ff       	call   8057bb0 <_ZN6__asan11AsanTSDInitEPFvPvE>
 8059d09:	8d 86 f0 28 18 01    	lea    0x11828f0(%esi),%eax
 8059d0f:	89 86 00 00 00 01    	mov    %eax,0x1000000(%esi)
 8059d15:	89 be 04 2d 18 01    	mov    %edi,0x1182d04(%esi)
 8059d1b:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8059d1f:	89 34 24             	mov    %esi,(%esp)
 8059d22:	e8 b9 fc ff ff       	call   80599e0 <_ZN6__asan18AsanThreadRegistry14RegisterThreadEPNS_10AsanThreadE>
 8059d27:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8059d2b:	89 34 24             	mov    %esi,(%esp)
 8059d2e:	e8 7d fe ff ff       	call   8059bb0 <_ZN6__asan18AsanThreadRegistry10SetCurrentEPNS_10AsanThreadE>
 8059d33:	c6 86 ec 3d 18 01 01 	movb   $0x1,0x1183dec(%esi)
 8059d3a:	83 c4 10             	add    $0x10,%esp
 8059d3d:	5b                   	pop    %ebx
 8059d3e:	5e                   	pop    %esi
 8059d3f:	5f                   	pop    %edi
 8059d40:	c3                   	ret    
 8059d41:	90                   	nop
 8059d42:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8059d49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08059d50 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv>:
 8059d50:	53                   	push   %ebx
 8059d51:	e8 9a fd fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059d56:	81 c3 aa 62 05 00    	add    $0x562aa,%ebx
 8059d5c:	83 ec 08             	sub    $0x8,%esp
 8059d5f:	e8 0c df ff ff       	call   8057c70 <_ZN6__asan10AsanTSDGetEv>
 8059d64:	85 c0                	test   %eax,%eax
 8059d66:	74 18                	je     8059d80 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv+0x30>
 8059d68:	8b 80 14 04 00 00    	mov    0x414(%eax),%eax
 8059d6e:	85 c0                	test   %eax,%eax
 8059d70:	74 0e                	je     8059d80 <_ZN6__asan18AsanThreadRegistry21GetCurrentThreadStatsEv+0x30>
 8059d72:	83 c4 08             	add    $0x8,%esp
 8059d75:	05 c0 18 18 00       	add    $0x1818c0,%eax
 8059d7a:	5b                   	pop    %ebx
 8059d7b:	c3                   	ret    
 8059d7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8059d80:	8b 44 24 10          	mov    0x10(%esp),%eax
 8059d84:	83 c4 08             	add    $0x8,%esp
 8059d87:	5b                   	pop    %ebx
 8059d88:	05 c0 18 18 01       	add    $0x11818c0,%eax
 8059d8d:	c3                   	ret    
 8059d8e:	66 90                	xchg   %ax,%ax

08059d90 <_ZN6__asan18AsanThreadRegistry9FindByTidEj>:
 8059d90:	53                   	push   %ebx
 8059d91:	83 ec 28             	sub    $0x28,%esp
 8059d94:	8b 44 24 30          	mov    0x30(%esp),%eax
 8059d98:	8b 54 24 34          	mov    0x34(%esp),%edx
 8059d9c:	e8 4f fd fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059da1:	81 c3 5f 62 05 00    	add    $0x5625f,%ebx
 8059da7:	39 90 bc 3d 18 01    	cmp    %edx,0x1183dbc(%eax)
 8059dad:	76 0c                	jbe    8059dbb <_ZN6__asan18AsanThreadRegistry9FindByTidEj+0x2b>
 8059daf:	8b 04 90             	mov    (%eax,%edx,4),%eax
 8059db2:	85 c0                	test   %eax,%eax
 8059db4:	74 45                	je     8059dfb <_ZN6__asan18AsanThreadRegistry9FindByTidEj+0x6b>
 8059db6:	83 c4 28             	add    $0x28,%esp
 8059db9:	5b                   	pop    %ebx
 8059dba:	c3                   	ret    
 8059dbb:	8d 83 74 4e fd ff    	lea    -0x2b18c(%ebx),%eax
 8059dc1:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059dc5:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059dcb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059dd2:	00 
 8059dd3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059dda:	00 
 8059ddb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059de2:	00 
 8059de3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059dea:	00 
 8059deb:	c7 44 24 04 99 00 00 	movl   $0x99,0x4(%esp)
 8059df2:	00 
 8059df3:	89 04 24             	mov    %eax,(%esp)
 8059df6:	e8 b5 85 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059dfb:	8d 83 d4 4d fd ff    	lea    -0x2b22c(%ebx),%eax
 8059e01:	89 44 24 08          	mov    %eax,0x8(%esp)
 8059e05:	8d 83 70 4d fd ff    	lea    -0x2b290(%ebx),%eax
 8059e0b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8059e12:	00 
 8059e13:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8059e1a:	00 
 8059e1b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8059e22:	00 
 8059e23:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8059e2a:	00 
 8059e2b:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)
 8059e32:	00 
 8059e33:	89 04 24             	mov    %eax,(%esp)
 8059e36:	e8 75 85 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8059e3b:	90                   	nop
 8059e3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08059e40 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm>:
 8059e40:	55                   	push   %ebp
 8059e41:	57                   	push   %edi
 8059e42:	31 ff                	xor    %edi,%edi
 8059e44:	56                   	push   %esi
 8059e45:	53                   	push   %ebx
 8059e46:	83 ec 1c             	sub    $0x1c,%esp
 8059e49:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8059e4d:	e8 9e fc fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059e52:	81 c3 ae 61 05 00    	add    $0x561ae,%ebx
 8059e58:	8d 85 c0 3d 18 01    	lea    0x1183dc0(%ebp),%eax
 8059e5e:	89 04 24             	mov    %eax,(%esp)
 8059e61:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8059e65:	e8 c6 c4 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 8059e6a:	8b 95 bc 3d 18 01    	mov    0x1183dbc(%ebp),%edx
 8059e70:	85 d2                	test   %edx,%edx
 8059e72:	74 67                	je     8059edb <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x9b>
 8059e74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8059e78:	8b 44 bd 00          	mov    0x0(%ebp,%edi,4),%eax
 8059e7c:	8b b0 14 04 00 00    	mov    0x414(%eax),%esi
 8059e82:	85 f6                	test   %esi,%esi
 8059e84:	74 4a                	je     8059ed0 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x90>
 8059e86:	8b 46 14             	mov    0x14(%esi),%eax
 8059e89:	85 c0                	test   %eax,%eax
 8059e8b:	74 43                	je     8059ed0 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x90>
 8059e8d:	8b 44 24 34          	mov    0x34(%esp),%eax
 8059e91:	89 44 24 04          	mov    %eax,0x4(%esp)
 8059e95:	8d 46 14             	lea    0x14(%esi),%eax
 8059e98:	89 04 24             	mov    %eax,(%esp)
 8059e9b:	e8 10 05 00 00       	call   805a3b0 <_ZN6__asan9FakeStack17AddrIsInFakeStackEm>
 8059ea0:	85 c0                	test   %eax,%eax
 8059ea2:	75 12                	jne    8059eb6 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x76>
 8059ea4:	8b 56 10             	mov    0x10(%esi),%edx
 8059ea7:	39 54 24 34          	cmp    %edx,0x34(%esp)
 8059eab:	8b 46 0c             	mov    0xc(%esi),%eax
 8059eae:	72 20                	jb     8059ed0 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x90>
 8059eb0:	39 44 24 34          	cmp    %eax,0x34(%esp)
 8059eb4:	73 1a                	jae    8059ed0 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x90>
 8059eb6:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8059eba:	89 04 24             	mov    %eax,(%esp)
 8059ebd:	e8 de c4 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 8059ec2:	83 c4 1c             	add    $0x1c,%esp
 8059ec5:	89 f0                	mov    %esi,%eax
 8059ec7:	5b                   	pop    %ebx
 8059ec8:	5e                   	pop    %esi
 8059ec9:	5f                   	pop    %edi
 8059eca:	5d                   	pop    %ebp
 8059ecb:	c3                   	ret    
 8059ecc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8059ed0:	83 c7 01             	add    $0x1,%edi
 8059ed3:	39 bd bc 3d 18 01    	cmp    %edi,0x1183dbc(%ebp)
 8059ed9:	77 9d                	ja     8059e78 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x38>
 8059edb:	31 f6                	xor    %esi,%esi
 8059edd:	eb d7                	jmp    8059eb6 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm+0x76>
 8059edf:	90                   	nop

08059ee0 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv>:
 8059ee0:	55                   	push   %ebp
 8059ee1:	57                   	push   %edi
 8059ee2:	56                   	push   %esi
 8059ee3:	83 ec 04             	sub    $0x4,%esp
 8059ee6:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8059eea:	8b 87 bc 3d 18 01    	mov    0x1183dbc(%edi),%eax
 8059ef0:	85 c0                	test   %eax,%eax
 8059ef2:	74 4d                	je     8059f41 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv+0x61>
 8059ef4:	89 fe                	mov    %edi,%esi
 8059ef6:	8d 2c 87             	lea    (%edi,%eax,4),%ebp
 8059ef9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8059f00:	8b 06                	mov    (%esi),%eax
 8059f02:	8b 88 14 04 00 00    	mov    0x414(%eax),%ecx
 8059f08:	85 c9                	test   %ecx,%ecx
 8059f0a:	74 2e                	je     8059f3a <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv+0x5a>
 8059f0c:	81 c1 c0 18 18 00    	add    $0x1818c0,%ecx
 8059f12:	31 c0                	xor    %eax,%eax
 8059f14:	8d 97 88 2d 18 01    	lea    0x1182d88(%edi),%edx
 8059f1a:	89 34 24             	mov    %esi,(%esp)
 8059f1d:	8d 76 00             	lea    0x0(%esi),%esi
 8059f20:	8b 34 81             	mov    (%ecx,%eax,4),%esi
 8059f23:	01 34 82             	add    %esi,(%edx,%eax,4)
 8059f26:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
 8059f2d:	83 c0 01             	add    $0x1,%eax
 8059f30:	3d 0c 04 00 00       	cmp    $0x40c,%eax
 8059f35:	75 e9                	jne    8059f20 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv+0x40>
 8059f37:	8b 34 24             	mov    (%esp),%esi
 8059f3a:	83 c6 04             	add    $0x4,%esi
 8059f3d:	39 ee                	cmp    %ebp,%esi
 8059f3f:	75 bf                	jne    8059f00 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv+0x20>
 8059f41:	8b 87 8c 2d 18 01    	mov    0x1182d8c(%edi),%eax
 8059f47:	39 87 b8 3d 18 01    	cmp    %eax,0x1183db8(%edi)
 8059f4d:	73 06                	jae    8059f55 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv+0x75>
 8059f4f:	89 87 b8 3d 18 01    	mov    %eax,0x1183db8(%edi)
 8059f55:	83 c4 04             	add    $0x4,%esp
 8059f58:	5e                   	pop    %esi
 8059f59:	5f                   	pop    %edi
 8059f5a:	5d                   	pop    %ebp
 8059f5b:	c3                   	ret    
 8059f5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08059f60 <_ZN6__asan18AsanThreadRegistry19GetAccumulatedStatsEPNS_9AsanStatsE>:
 8059f60:	57                   	push   %edi
 8059f61:	56                   	push   %esi
 8059f62:	53                   	push   %ebx
 8059f63:	83 ec 10             	sub    $0x10,%esp
 8059f66:	e8 85 fb fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059f6b:	81 c3 95 60 05 00    	add    $0x56095,%ebx
 8059f71:	8b 74 24 20          	mov    0x20(%esp),%esi
 8059f75:	8d be c0 3d 18 01    	lea    0x1183dc0(%esi),%edi
 8059f7b:	89 3c 24             	mov    %edi,(%esp)
 8059f7e:	e8 ad c3 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 8059f83:	89 34 24             	mov    %esi,(%esp)
 8059f86:	81 c6 88 2d 18 01    	add    $0x1182d88,%esi
 8059f8c:	e8 4f ff ff ff       	call   8059ee0 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv>
 8059f91:	8b 44 24 24          	mov    0x24(%esp),%eax
 8059f95:	89 74 24 04          	mov    %esi,0x4(%esp)
 8059f99:	c7 44 24 08 30 10 00 	movl   $0x1030,0x8(%esp)
 8059fa0:	00 
 8059fa1:	89 04 24             	mov    %eax,(%esp)
 8059fa4:	e8 07 79 00 00       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8059fa9:	89 3c 24             	mov    %edi,(%esp)
 8059fac:	e8 ef c3 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 8059fb1:	83 c4 10             	add    $0x10,%esp
 8059fb4:	5b                   	pop    %ebx
 8059fb5:	5e                   	pop    %esi
 8059fb6:	5f                   	pop    %edi
 8059fb7:	c3                   	ret    
 8059fb8:	90                   	nop
 8059fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08059fc0 <_ZN6__asan18AsanThreadRegistry24GetCurrentAllocatedBytesEv>:
 8059fc0:	57                   	push   %edi
 8059fc1:	56                   	push   %esi
 8059fc2:	53                   	push   %ebx
 8059fc3:	83 ec 10             	sub    $0x10,%esp
 8059fc6:	8b 74 24 20          	mov    0x20(%esp),%esi
 8059fca:	e8 21 fb fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8059fcf:	81 c3 31 60 05 00    	add    $0x56031,%ebx
 8059fd5:	8d be c0 3d 18 01    	lea    0x1183dc0(%esi),%edi
 8059fdb:	89 3c 24             	mov    %edi,(%esp)
 8059fde:	e8 4d c3 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 8059fe3:	89 34 24             	mov    %esi,(%esp)
 8059fe6:	e8 f5 fe ff ff       	call   8059ee0 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv>
 8059feb:	8b 96 8c 2d 18 01    	mov    0x1182d8c(%esi),%edx
 8059ff1:	8b 86 98 2d 18 01    	mov    0x1182d98(%esi),%eax
 8059ff7:	be 01 00 00 00       	mov    $0x1,%esi
 8059ffc:	89 3c 24             	mov    %edi,(%esp)
 8059fff:	89 d1                	mov    %edx,%ecx
 805a001:	29 c1                	sub    %eax,%ecx
 805a003:	39 c2                	cmp    %eax,%edx
 805a005:	0f 47 f1             	cmova  %ecx,%esi
 805a008:	e8 93 c3 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805a00d:	83 c4 10             	add    $0x10,%esp
 805a010:	89 f0                	mov    %esi,%eax
 805a012:	5b                   	pop    %ebx
 805a013:	5e                   	pop    %esi
 805a014:	5f                   	pop    %edi
 805a015:	c3                   	ret    
 805a016:	8d 76 00             	lea    0x0(%esi),%esi
 805a019:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805a020 <_ZN6__asan18AsanThreadRegistry11GetHeapSizeEv>:
 805a020:	55                   	push   %ebp
 805a021:	57                   	push   %edi
 805a022:	56                   	push   %esi
 805a023:	53                   	push   %ebx
 805a024:	83 ec 1c             	sub    $0x1c,%esp
 805a027:	8b 74 24 30          	mov    0x30(%esp),%esi
 805a02b:	e8 c0 fa fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a030:	81 c3 d0 5f 05 00    	add    $0x55fd0,%ebx
 805a036:	8d ae c0 3d 18 01    	lea    0x1183dc0(%esi),%ebp
 805a03c:	89 2c 24             	mov    %ebp,(%esp)
 805a03f:	e8 ec c2 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805a044:	89 34 24             	mov    %esi,(%esp)
 805a047:	e8 94 fe ff ff       	call   8059ee0 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv>
 805a04c:	8b be b4 2d 18 01    	mov    0x1182db4(%esi),%edi
 805a052:	2b be bc 2d 18 01    	sub    0x1182dbc(%esi),%edi
 805a058:	89 2c 24             	mov    %ebp,(%esp)
 805a05b:	e8 40 c3 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805a060:	83 c4 1c             	add    $0x1c,%esp
 805a063:	5b                   	pop    %ebx
 805a064:	89 f8                	mov    %edi,%eax
 805a066:	5e                   	pop    %esi
 805a067:	5f                   	pop    %edi
 805a068:	5d                   	pop    %ebp
 805a069:	c3                   	ret    
 805a06a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805a070 <_ZN6__asan18AsanThreadRegistry12GetFreeBytesEv>:
 805a070:	57                   	push   %edi
 805a071:	56                   	push   %esi
 805a072:	53                   	push   %ebx
 805a073:	83 ec 10             	sub    $0x10,%esp
 805a076:	8b 74 24 20          	mov    0x20(%esp),%esi
 805a07a:	e8 71 fa fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a07f:	81 c3 81 5f 05 00    	add    $0x55f81,%ebx
 805a085:	8d be c0 3d 18 01    	lea    0x1183dc0(%esi),%edi
 805a08b:	89 3c 24             	mov    %edi,(%esp)
 805a08e:	e8 9d c2 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805a093:	89 34 24             	mov    %esi,(%esp)
 805a096:	e8 45 fe ff ff       	call   8059ee0 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv>
 805a09b:	8b 96 a0 2d 18 01    	mov    0x1182da0(%esi),%edx
 805a0a1:	03 96 b4 2d 18 01    	add    0x1182db4(%esi),%edx
 805a0a7:	8b 8e 90 2d 18 01    	mov    0x1182d90(%esi),%ecx
 805a0ad:	03 96 a4 2d 18 01    	add    0x1182da4(%esi),%edx
 805a0b3:	2b 96 bc 2d 18 01    	sub    0x1182dbc(%esi),%edx
 805a0b9:	03 8e 8c 2d 18 01    	add    0x1182d8c(%esi),%ecx
 805a0bf:	be 01 00 00 00       	mov    $0x1,%esi
 805a0c4:	89 3c 24             	mov    %edi,(%esp)
 805a0c7:	89 d0                	mov    %edx,%eax
 805a0c9:	29 c8                	sub    %ecx,%eax
 805a0cb:	39 ca                	cmp    %ecx,%edx
 805a0cd:	0f 47 f0             	cmova  %eax,%esi
 805a0d0:	e8 cb c2 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805a0d5:	83 c4 10             	add    $0x10,%esp
 805a0d8:	89 f0                	mov    %esi,%eax
 805a0da:	5b                   	pop    %ebx
 805a0db:	5e                   	pop    %esi
 805a0dc:	5f                   	pop    %edi
 805a0dd:	c3                   	ret    
 805a0de:	66 90                	xchg   %ax,%ax

0805a0e0 <_ZN6__asan18AsanThreadRegistry20FillMallocStatisticsEPNS_15AsanMallocStatsE>:
 805a0e0:	55                   	push   %ebp
 805a0e1:	57                   	push   %edi
 805a0e2:	56                   	push   %esi
 805a0e3:	53                   	push   %ebx
 805a0e4:	83 ec 1c             	sub    $0x1c,%esp
 805a0e7:	8b 74 24 30          	mov    0x30(%esp),%esi
 805a0eb:	e8 00 fa fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a0f0:	81 c3 10 5f 05 00    	add    $0x55f10,%ebx
 805a0f6:	8b 7c 24 34          	mov    0x34(%esp),%edi
 805a0fa:	8d ae c0 3d 18 01    	lea    0x1183dc0(%esi),%ebp
 805a100:	89 2c 24             	mov    %ebp,(%esp)
 805a103:	e8 28 c2 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805a108:	89 34 24             	mov    %esi,(%esp)
 805a10b:	e8 d0 fd ff ff       	call   8059ee0 <_ZN6__asan18AsanThreadRegistry30UpdateAccumulatedStatsUnlockedEv>
 805a110:	8b 86 88 2d 18 01    	mov    0x1182d88(%esi),%eax
 805a116:	89 07                	mov    %eax,(%edi)
 805a118:	8b 86 8c 2d 18 01    	mov    0x1182d8c(%esi),%eax
 805a11e:	89 47 04             	mov    %eax,0x4(%edi)
 805a121:	8b 86 b8 3d 18 01    	mov    0x1183db8(%esi),%eax
 805a127:	89 47 08             	mov    %eax,0x8(%edi)
 805a12a:	8b 86 b4 2d 18 01    	mov    0x1182db4(%esi),%eax
 805a130:	89 47 0c             	mov    %eax,0xc(%edi)
 805a133:	89 2c 24             	mov    %ebp,(%esp)
 805a136:	e8 65 c2 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805a13b:	83 c4 1c             	add    $0x1c,%esp
 805a13e:	5b                   	pop    %ebx
 805a13f:	5e                   	pop    %esi
 805a140:	5f                   	pop    %edi
 805a141:	5d                   	pop    %ebp
 805a142:	c3                   	ret    
 805a143:	90                   	nop
 805a144:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805a14a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0805a150 <_ZN6__asan18AsanThreadRegistry31FlushToAccumulatedStatsUnlockedEPNS_9AsanStatsE>:
 805a150:	56                   	push   %esi
 805a151:	8b 44 24 08          	mov    0x8(%esp),%eax
 805a155:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 805a159:	8d 90 88 2d 18 01    	lea    0x1182d88(%eax),%edx
 805a15f:	31 c0                	xor    %eax,%eax
 805a161:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805a168:	8b 34 81             	mov    (%ecx,%eax,4),%esi
 805a16b:	01 34 82             	add    %esi,(%edx,%eax,4)
 805a16e:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)
 805a175:	83 c0 01             	add    $0x1,%eax
 805a178:	3d 0c 04 00 00       	cmp    $0x40c,%eax
 805a17d:	75 e9                	jne    805a168 <_ZN6__asan18AsanThreadRegistry31FlushToAccumulatedStatsUnlockedEPNS_9AsanStatsE+0x18>
 805a17f:	5e                   	pop    %esi
 805a180:	c3                   	ret    
 805a181:	66 90                	xchg   %ax,%ax
 805a183:	66 90                	xchg   %ax,%ax
 805a185:	66 90                	xchg   %ax,%ax
 805a187:	66 90                	xchg   %ax,%ax
 805a189:	66 90                	xchg   %ax,%ax
 805a18b:	66 90                	xchg   %ax,%ax
 805a18d:	66 90                	xchg   %ax,%ax
 805a18f:	90                   	nop

0805a190 <_ZN6__asan9FakeStackC1Ev>:
 805a190:	53                   	push   %ebx
 805a191:	e8 5a f9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a196:	81 c3 6a 5e 05 00    	add    $0x55e6a,%ebx
 805a19c:	83 ec 28             	sub    $0x28,%esp
 805a19f:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 805a1a5:	8b 00                	mov    (%eax),%eax
 805a1a7:	85 c0                	test   %eax,%eax
 805a1a9:	74 1e                	je     805a1c9 <_ZN6__asan9FakeStackC1Ev+0x39>
 805a1ab:	8b 54 24 30          	mov    0x30(%esp),%edx
 805a1af:	c7 44 24 08 6c 00 00 	movl   $0x6c,0x8(%esp)
 805a1b6:	00 
 805a1b7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 805a1be:	00 
 805a1bf:	89 14 24             	mov    %edx,(%esp)
 805a1c2:	ff d0                	call   *%eax
 805a1c4:	83 c4 28             	add    $0x28,%esp
 805a1c7:	5b                   	pop    %ebx
 805a1c8:	c3                   	ret    
 805a1c9:	8d 83 b4 4b fd ff    	lea    -0x2b44c(%ebx),%eax
 805a1cf:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a1d3:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805a1d9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a1e0:	00 
 805a1e1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a1e8:	00 
 805a1e9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a1f0:	00 
 805a1f1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a1f8:	00 
 805a1f9:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)
 805a200:	00 
 805a201:	89 04 24             	mov    %eax,(%esp)
 805a204:	e8 a7 81 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a209:	90                   	nop
 805a20a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805a210 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm>:
 805a210:	55                   	push   %ebp
 805a211:	57                   	push   %edi
 805a212:	56                   	push   %esi
 805a213:	53                   	push   %ebx
 805a214:	83 ec 3c             	sub    $0x3c,%esp
 805a217:	8b 44 24 50          	mov    0x50(%esp),%eax
 805a21b:	8b 54 24 58          	mov    0x58(%esp),%edx
 805a21f:	e8 cc f8 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a224:	81 c3 dc 5d 05 00    	add    $0x55ddc,%ebx
 805a22a:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 805a231:	00 
 805a232:	8b 30                	mov    (%eax),%esi
 805a234:	8b 7c 90 08          	mov    0x8(%eax,%edx,4),%edi
 805a238:	85 f6                	test   %esi,%esi
 805a23a:	89 74 24 20          	mov    %esi,0x20(%esp)
 805a23e:	0f 84 e1 00 00 00    	je     805a325 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x115>
 805a244:	8d 56 ff             	lea    -0x1(%esi),%edx
 805a247:	89 f0                	mov    %esi,%eax
 805a249:	85 f2                	test   %esi,%edx
 805a24b:	75 2b                	jne    805a278 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x68>
 805a24d:	39 7c 24 54          	cmp    %edi,0x54(%esp)
 805a251:	72 15                	jb     805a268 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x58>
 805a253:	85 ff                	test   %edi,%edi
 805a255:	74 11                	je     805a268 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x58>
 805a257:	01 c7                	add    %eax,%edi
 805a259:	39 7c 24 54          	cmp    %edi,0x54(%esp)
 805a25d:	0f 92 c0             	setb   %al
 805a260:	83 c4 3c             	add    $0x3c,%esp
 805a263:	5b                   	pop    %ebx
 805a264:	5e                   	pop    %esi
 805a265:	5f                   	pop    %edi
 805a266:	5d                   	pop    %ebp
 805a267:	c3                   	ret    
 805a268:	83 c4 3c             	add    $0x3c,%esp
 805a26b:	31 c0                	xor    %eax,%eax
 805a26d:	5b                   	pop    %ebx
 805a26e:	5e                   	pop    %esi
 805a26f:	5f                   	pop    %edi
 805a270:	5d                   	pop    %ebp
 805a271:	c3                   	ret    
 805a272:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805a278:	0f bd c6             	bsr    %esi,%eax
 805a27b:	bd 1f 00 00 00       	mov    $0x1f,%ebp
 805a280:	8b 54 24 24          	mov    0x24(%esp),%edx
 805a284:	83 f0 1f             	xor    $0x1f,%eax
 805a287:	29 c5                	sub    %eax,%ebp
 805a289:	8d 45 01             	lea    0x1(%ebp),%eax
 805a28c:	89 c1                	mov    %eax,%ecx
 805a28e:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805a292:	8b 44 24 20          	mov    0x20(%esp),%eax
 805a296:	0f ad d0             	shrd   %cl,%edx,%eax
 805a299:	d3 ea                	shr    %cl,%edx
 805a29b:	f6 c1 20             	test   $0x20,%cl
 805a29e:	74 04                	je     805a2a4 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x94>
 805a2a0:	89 d0                	mov    %edx,%eax
 805a2a2:	31 d2                	xor    %edx,%edx
 805a2a4:	89 d1                	mov    %edx,%ecx
 805a2a6:	09 c1                	or     %eax,%ecx
 805a2a8:	0f 85 b7 00 00 00    	jne    805a365 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x155>
 805a2ae:	89 e9                	mov    %ebp,%ecx
 805a2b0:	31 c0                	xor    %eax,%eax
 805a2b2:	31 d2                	xor    %edx,%edx
 805a2b4:	f6 c1 20             	test   $0x20,%cl
 805a2b7:	0f 94 c0             	sete   %al
 805a2ba:	0f 95 c2             	setne  %dl
 805a2bd:	d3 e2                	shl    %cl,%edx
 805a2bf:	d3 e0                	shl    %cl,%eax
 805a2c1:	39 54 24 24          	cmp    %edx,0x24(%esp)
 805a2c5:	77 4d                	ja     805a314 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x104>
 805a2c7:	73 47                	jae    805a310 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x100>
 805a2c9:	8d 83 f0 4e fd ff    	lea    -0x2b110(%ebx),%eax
 805a2cf:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a2d3:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a2d9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a2e0:	00 
 805a2e1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a2e8:	00 
 805a2e9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a2f0:	00 
 805a2f1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a2f8:	00 
 805a2f9:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805a300:	00 
 805a301:	89 04 24             	mov    %eax,(%esp)
 805a304:	e8 a7 80 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a309:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805a310:	39 c6                	cmp    %eax,%esi
 805a312:	76 b5                	jbe    805a2c9 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0xb9>
 805a314:	0f b6 4c 24 2c       	movzbl 0x2c(%esp),%ecx
 805a319:	b8 01 00 00 00       	mov    $0x1,%eax
 805a31e:	d3 e0                	shl    %cl,%eax
 805a320:	e9 28 ff ff ff       	jmp    805a24d <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm+0x3d>
 805a325:	8d 83 7e 51 fd ff    	lea    -0x2ae82(%ebx),%eax
 805a32b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a32f:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a335:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a33c:	00 
 805a33d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a344:	00 
 805a345:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a34c:	00 
 805a34d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a354:	00 
 805a355:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)
 805a35c:	00 
 805a35d:	89 04 24             	mov    %eax,(%esp)
 805a360:	e8 4b 80 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a365:	8d 83 c8 4e fd ff    	lea    -0x2b138(%ebx),%eax
 805a36b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a36f:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a375:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a37c:	00 
 805a37d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a384:	00 
 805a385:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a38c:	00 
 805a38d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a394:	00 
 805a395:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 805a39c:	00 
 805a39d:	89 04 24             	mov    %eax,(%esp)
 805a3a0:	e8 0b 80 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a3a5:	90                   	nop
 805a3a6:	8d 76 00             	lea    0x0(%esi),%esi
 805a3a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805a3b0 <_ZN6__asan9FakeStack17AddrIsInFakeStackEm>:
 805a3b0:	55                   	push   %ebp
 805a3b1:	57                   	push   %edi
 805a3b2:	56                   	push   %esi
 805a3b3:	31 f6                	xor    %esi,%esi
 805a3b5:	83 ec 10             	sub    $0x10,%esp
 805a3b8:	8b 7c 24 20          	mov    0x20(%esp),%edi
 805a3bc:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 805a3c0:	89 74 24 08          	mov    %esi,0x8(%esp)
 805a3c4:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805a3c8:	89 3c 24             	mov    %edi,(%esp)
 805a3cb:	e8 40 fe ff ff       	call   805a210 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm>
 805a3d0:	84 c0                	test   %al,%al
 805a3d2:	75 14                	jne    805a3e8 <_ZN6__asan9FakeStack17AddrIsInFakeStackEm+0x38>
 805a3d4:	83 c6 01             	add    $0x1,%esi
 805a3d7:	83 fe 08             	cmp    $0x8,%esi
 805a3da:	75 e4                	jne    805a3c0 <_ZN6__asan9FakeStack17AddrIsInFakeStackEm+0x10>
 805a3dc:	83 c4 10             	add    $0x10,%esp
 805a3df:	31 c0                	xor    %eax,%eax
 805a3e1:	5e                   	pop    %esi
 805a3e2:	5f                   	pop    %edi
 805a3e3:	5d                   	pop    %ebp
 805a3e4:	c3                   	ret    
 805a3e5:	8d 76 00             	lea    0x0(%esi),%esi
 805a3e8:	8b 44 b7 08          	mov    0x8(%edi,%esi,4),%eax
 805a3ec:	83 c4 10             	add    $0x10,%esp
 805a3ef:	5e                   	pop    %esi
 805a3f0:	5f                   	pop    %edi
 805a3f1:	5d                   	pop    %ebp
 805a3f2:	c3                   	ret    
 805a3f3:	90                   	nop
 805a3f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805a3fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0805a400 <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE>:
 805a400:	53                   	push   %ebx
 805a401:	83 ec 28             	sub    $0x28,%esp
 805a404:	8b 44 24 34          	mov    0x34(%esp),%eax
 805a408:	e8 e3 f6 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a40d:	81 c3 f3 5b 05 00    	add    $0x55bf3,%ebx
 805a413:	8b 54 24 30          	mov    0x30(%esp),%edx
 805a417:	85 c0                	test   %eax,%eax
 805a419:	74 74                	je     805a48f <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE+0x8f>
 805a41b:	8b 0a                	mov    (%edx),%ecx
 805a41d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 805a424:	85 c9                	test   %ecx,%ecx
 805a426:	74 18                	je     805a440 <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE+0x40>
 805a428:	8b 4a 04             	mov    0x4(%edx),%ecx
 805a42b:	85 c9                	test   %ecx,%ecx
 805a42d:	0f 84 9c 00 00 00    	je     805a4cf <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE+0xcf>
 805a433:	89 41 08             	mov    %eax,0x8(%ecx)
 805a436:	89 42 04             	mov    %eax,0x4(%edx)
 805a439:	83 c4 28             	add    $0x28,%esp
 805a43c:	5b                   	pop    %ebx
 805a43d:	c3                   	ret    
 805a43e:	66 90                	xchg   %ax,%ax
 805a440:	8b 4a 04             	mov    0x4(%edx),%ecx
 805a443:	85 c9                	test   %ecx,%ecx
 805a445:	74 41                	je     805a488 <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE+0x88>
 805a447:	8d 83 9e 51 fd ff    	lea    -0x2ae62(%ebx),%eax
 805a44d:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a451:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805a457:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a45e:	00 
 805a45f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a466:	00 
 805a467:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a46e:	00 
 805a46f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a476:	00 
 805a477:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)
 805a47e:	00 
 805a47f:	89 04 24             	mov    %eax,(%esp)
 805a482:	e8 29 7f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a487:	90                   	nop
 805a488:	89 42 04             	mov    %eax,0x4(%edx)
 805a48b:	89 02                	mov    %eax,(%edx)
 805a48d:	eb aa                	jmp    805a439 <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE+0x39>
 805a48f:	8d 83 8e 51 fd ff    	lea    -0x2ae72(%ebx),%eax
 805a495:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a499:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805a49f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a4a6:	00 
 805a4a7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a4ae:	00 
 805a4af:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a4b6:	00 
 805a4b7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a4be:	00 
 805a4bf:	c7 44 24 04 35 00 00 	movl   $0x35,0x4(%esp)
 805a4c6:	00 
 805a4c7:	89 04 24             	mov    %eax,(%esp)
 805a4ca:	e8 e1 7e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a4cf:	8d 83 b0 51 fd ff    	lea    -0x2ae50(%ebx),%eax
 805a4d5:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a4d9:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805a4df:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a4e6:	00 
 805a4e7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a4ee:	00 
 805a4ef:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a4f6:	00 
 805a4f7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a4fe:	00 
 805a4ff:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)
 805a506:	00 
 805a507:	89 04 24             	mov    %eax,(%esp)
 805a50a:	e8 a1 7e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a50f:	90                   	nop

0805a510 <_ZN6__asan13FakeFrameFifo7FifoPopEv>:
 805a510:	53                   	push   %ebx
 805a511:	83 ec 28             	sub    $0x28,%esp
 805a514:	8b 54 24 30          	mov    0x30(%esp),%edx
 805a518:	e8 d3 f5 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a51d:	81 c3 e3 5a 05 00    	add    $0x55ae3,%ebx
 805a523:	8b 02                	mov    (%edx),%eax
 805a525:	85 c0                	test   %eax,%eax
 805a527:	74 17                	je     805a540 <_ZN6__asan13FakeFrameFifo7FifoPopEv+0x30>
 805a529:	8b 4a 04             	mov    0x4(%edx),%ecx
 805a52c:	85 c9                	test   %ecx,%ecx
 805a52e:	74 10                	je     805a540 <_ZN6__asan13FakeFrameFifo7FifoPopEv+0x30>
 805a530:	39 c8                	cmp    %ecx,%eax
 805a532:	74 4c                	je     805a580 <_ZN6__asan13FakeFrameFifo7FifoPopEv+0x70>
 805a534:	8b 48 08             	mov    0x8(%eax),%ecx
 805a537:	89 0a                	mov    %ecx,(%edx)
 805a539:	83 c4 28             	add    $0x28,%esp
 805a53c:	5b                   	pop    %ebx
 805a53d:	c3                   	ret    
 805a53e:	66 90                	xchg   %ax,%ax
 805a540:	8d 83 10 4f fd ff    	lea    -0x2b0f0(%ebx),%eax
 805a546:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a54a:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805a550:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a557:	00 
 805a558:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a55f:	00 
 805a560:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a567:	00 
 805a568:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a56f:	00 
 805a570:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)
 805a577:	00 
 805a578:	89 04 24             	mov    %eax,(%esp)
 805a57b:	e8 30 7e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a580:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
 805a587:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
 805a58d:	83 c4 28             	add    $0x28,%esp
 805a590:	5b                   	pop    %ebx
 805a591:	c3                   	ret    
 805a592:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805a599:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805a5a0 <_ZN6__asan9FakeStack4InitEm>:
 805a5a0:	8b 44 24 04          	mov    0x4(%esp),%eax
 805a5a4:	8b 54 24 08          	mov    0x8(%esp),%edx
 805a5a8:	c6 40 04 01          	movb   $0x1,0x4(%eax)
 805a5ac:	89 10                	mov    %edx,(%eax)
 805a5ae:	c3                   	ret    
 805a5af:	90                   	nop

0805a5b0 <_ZN6__asan9FakeStack7CleanupEv>:
 805a5b0:	55                   	push   %ebp
 805a5b1:	57                   	push   %edi
 805a5b2:	56                   	push   %esi
 805a5b3:	53                   	push   %ebx
 805a5b4:	83 ec 3c             	sub    $0x3c,%esp
 805a5b7:	8b 44 24 50          	mov    0x50(%esp),%eax
 805a5bb:	e8 30 f5 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a5c0:	81 c3 40 5a 05 00    	add    $0x55a40,%ebx
 805a5c6:	c6 40 04 00          	movb   $0x0,0x4(%eax)
 805a5ca:	89 c7                	mov    %eax,%edi
 805a5cc:	83 c0 20             	add    $0x20,%eax
 805a5cf:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 805a5d3:	eb 10                	jmp    805a5e5 <_ZN6__asan9FakeStack7CleanupEv+0x35>
 805a5d5:	8d 76 00             	lea    0x0(%esi),%esi
 805a5d8:	83 c7 04             	add    $0x4,%edi
 805a5db:	3b 7c 24 1c          	cmp    0x1c(%esp),%edi
 805a5df:	0f 84 85 00 00 00    	je     805a66a <_ZN6__asan9FakeStack7CleanupEv+0xba>
 805a5e5:	8b 77 08             	mov    0x8(%edi),%esi
 805a5e8:	85 f6                	test   %esi,%esi
 805a5ea:	74 ec                	je     805a5d8 <_ZN6__asan9FakeStack7CleanupEv+0x28>
 805a5ec:	8b 44 24 50          	mov    0x50(%esp),%eax
 805a5f0:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 805a5f7:	00 
 805a5f8:	8b 28                	mov    (%eax),%ebp
 805a5fa:	85 ed                	test   %ebp,%ebp
 805a5fc:	89 6c 24 20          	mov    %ebp,0x20(%esp)
 805a600:	0f 84 97 01 00 00    	je     805a79d <_ZN6__asan9FakeStack7CleanupEv+0x1ed>
 805a606:	8d 55 ff             	lea    -0x1(%ebp),%edx
 805a609:	89 e8                	mov    %ebp,%eax
 805a60b:	85 ea                	test   %ebp,%edx
 805a60d:	0f 85 d5 00 00 00    	jne    805a6e8 <_ZN6__asan9FakeStack7CleanupEv+0x138>
 805a613:	89 44 24 04          	mov    %eax,0x4(%esp)
 805a617:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 805a61e:	00 
 805a61f:	89 34 24             	mov    %esi,(%esp)
 805a622:	e8 89 24 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805a627:	8b 44 24 50          	mov    0x50(%esp),%eax
 805a62b:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
 805a632:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 805a639:	00 
 805a63a:	8b 28                	mov    (%eax),%ebp
 805a63c:	85 ed                	test   %ebp,%ebp
 805a63e:	89 6c 24 20          	mov    %ebp,0x20(%esp)
 805a642:	0f 84 55 01 00 00    	je     805a79d <_ZN6__asan9FakeStack7CleanupEv+0x1ed>
 805a648:	8d 55 ff             	lea    -0x1(%ebp),%edx
 805a64b:	89 e8                	mov    %ebp,%eax
 805a64d:	85 ea                	test   %ebp,%edx
 805a64f:	75 27                	jne    805a678 <_ZN6__asan9FakeStack7CleanupEv+0xc8>
 805a651:	89 44 24 04          	mov    %eax,0x4(%esp)
 805a655:	83 c7 04             	add    $0x4,%edi
 805a658:	89 34 24             	mov    %esi,(%esp)
 805a65b:	e8 50 84 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 805a660:	3b 7c 24 1c          	cmp    0x1c(%esp),%edi
 805a664:	0f 85 7b ff ff ff    	jne    805a5e5 <_ZN6__asan9FakeStack7CleanupEv+0x35>
 805a66a:	83 c4 3c             	add    $0x3c,%esp
 805a66d:	5b                   	pop    %ebx
 805a66e:	5e                   	pop    %esi
 805a66f:	5f                   	pop    %edi
 805a670:	5d                   	pop    %ebp
 805a671:	c3                   	ret    
 805a672:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805a678:	0f bd c5             	bsr    %ebp,%eax
 805a67b:	b9 1f 00 00 00       	mov    $0x1f,%ecx
 805a680:	8b 54 24 24          	mov    0x24(%esp),%edx
 805a684:	83 f0 1f             	xor    $0x1f,%eax
 805a687:	29 c1                	sub    %eax,%ecx
 805a689:	8d 41 01             	lea    0x1(%ecx),%eax
 805a68c:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 805a690:	89 c1                	mov    %eax,%ecx
 805a692:	89 44 24 28          	mov    %eax,0x28(%esp)
 805a696:	8b 44 24 20          	mov    0x20(%esp),%eax
 805a69a:	0f ad d0             	shrd   %cl,%edx,%eax
 805a69d:	d3 ea                	shr    %cl,%edx
 805a69f:	f6 c1 20             	test   $0x20,%cl
 805a6a2:	74 04                	je     805a6a8 <_ZN6__asan9FakeStack7CleanupEv+0xf8>
 805a6a4:	89 d0                	mov    %edx,%eax
 805a6a6:	31 d2                	xor    %edx,%edx
 805a6a8:	89 d1                	mov    %edx,%ecx
 805a6aa:	09 c1                	or     %eax,%ecx
 805a6ac:	0f 85 2b 01 00 00    	jne    805a7dd <_ZN6__asan9FakeStack7CleanupEv+0x22d>
 805a6b2:	0f b6 4c 24 2c       	movzbl 0x2c(%esp),%ecx
 805a6b7:	31 c0                	xor    %eax,%eax
 805a6b9:	31 d2                	xor    %edx,%edx
 805a6bb:	f6 c1 20             	test   $0x20,%cl
 805a6be:	0f 94 c0             	sete   %al
 805a6c1:	0f 95 c2             	setne  %dl
 805a6c4:	d3 e2                	shl    %cl,%edx
 805a6c6:	d3 e0                	shl    %cl,%eax
 805a6c8:	39 54 24 24          	cmp    %edx,0x24(%esp)
 805a6cc:	72 74                	jb     805a742 <_ZN6__asan9FakeStack7CleanupEv+0x192>
 805a6ce:	77 04                	ja     805a6d4 <_ZN6__asan9FakeStack7CleanupEv+0x124>
 805a6d0:	39 c5                	cmp    %eax,%ebp
 805a6d2:	76 6e                	jbe    805a742 <_ZN6__asan9FakeStack7CleanupEv+0x192>
 805a6d4:	0f b6 4c 24 28       	movzbl 0x28(%esp),%ecx
 805a6d9:	b8 01 00 00 00       	mov    $0x1,%eax
 805a6de:	d3 e0                	shl    %cl,%eax
 805a6e0:	e9 6c ff ff ff       	jmp    805a651 <_ZN6__asan9FakeStack7CleanupEv+0xa1>
 805a6e5:	8d 76 00             	lea    0x0(%esi),%esi
 805a6e8:	0f bd c5             	bsr    %ebp,%eax
 805a6eb:	b9 1f 00 00 00       	mov    $0x1f,%ecx
 805a6f0:	8b 54 24 24          	mov    0x24(%esp),%edx
 805a6f4:	83 f0 1f             	xor    $0x1f,%eax
 805a6f7:	29 c1                	sub    %eax,%ecx
 805a6f9:	89 c8                	mov    %ecx,%eax
 805a6fb:	83 c0 01             	add    $0x1,%eax
 805a6fe:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 805a702:	89 c1                	mov    %eax,%ecx
 805a704:	89 44 24 28          	mov    %eax,0x28(%esp)
 805a708:	8b 44 24 20          	mov    0x20(%esp),%eax
 805a70c:	0f ad d0             	shrd   %cl,%edx,%eax
 805a70f:	d3 ea                	shr    %cl,%edx
 805a711:	f6 c1 20             	test   $0x20,%cl
 805a714:	74 04                	je     805a71a <_ZN6__asan9FakeStack7CleanupEv+0x16a>
 805a716:	89 d0                	mov    %edx,%eax
 805a718:	31 d2                	xor    %edx,%edx
 805a71a:	89 d1                	mov    %edx,%ecx
 805a71c:	09 c1                	or     %eax,%ecx
 805a71e:	0f 85 b9 00 00 00    	jne    805a7dd <_ZN6__asan9FakeStack7CleanupEv+0x22d>
 805a724:	0f b6 4c 24 2c       	movzbl 0x2c(%esp),%ecx
 805a729:	31 c0                	xor    %eax,%eax
 805a72b:	31 d2                	xor    %edx,%edx
 805a72d:	f6 c1 20             	test   $0x20,%cl
 805a730:	0f 94 c0             	sete   %al
 805a733:	0f 95 c2             	setne  %dl
 805a736:	d3 e2                	shl    %cl,%edx
 805a738:	d3 e0                	shl    %cl,%eax
 805a73a:	39 54 24 24          	cmp    %edx,0x24(%esp)
 805a73e:	77 4c                	ja     805a78c <_ZN6__asan9FakeStack7CleanupEv+0x1dc>
 805a740:	73 46                	jae    805a788 <_ZN6__asan9FakeStack7CleanupEv+0x1d8>
 805a742:	8d 83 f0 4e fd ff    	lea    -0x2b110(%ebx),%eax
 805a748:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a74c:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a752:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a759:	00 
 805a75a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a761:	00 
 805a762:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a769:	00 
 805a76a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a771:	00 
 805a772:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805a779:	00 
 805a77a:	89 04 24             	mov    %eax,(%esp)
 805a77d:	e8 2e 7c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a782:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805a788:	39 c5                	cmp    %eax,%ebp
 805a78a:	76 b6                	jbe    805a742 <_ZN6__asan9FakeStack7CleanupEv+0x192>
 805a78c:	0f b6 4c 24 28       	movzbl 0x28(%esp),%ecx
 805a791:	b8 01 00 00 00       	mov    $0x1,%eax
 805a796:	d3 e0                	shl    %cl,%eax
 805a798:	e9 76 fe ff ff       	jmp    805a613 <_ZN6__asan9FakeStack7CleanupEv+0x63>
 805a79d:	8d 83 7e 51 fd ff    	lea    -0x2ae82(%ebx),%eax
 805a7a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a7a7:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a7ad:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a7b4:	00 
 805a7b5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a7bc:	00 
 805a7bd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a7c4:	00 
 805a7c5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a7cc:	00 
 805a7cd:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)
 805a7d4:	00 
 805a7d5:	89 04 24             	mov    %eax,(%esp)
 805a7d8:	e8 d3 7b 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a7dd:	8d 83 c8 4e fd ff    	lea    -0x2b138(%ebx),%eax
 805a7e3:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a7e7:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a7ed:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a7f4:	00 
 805a7f5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a7fc:	00 
 805a7fd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a804:	00 
 805a805:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a80c:	00 
 805a80d:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 805a814:	00 
 805a815:	89 04 24             	mov    %eax,(%esp)
 805a818:	e8 93 7b 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a81d:	90                   	nop
 805a81e:	66 90                	xchg   %ax,%ax

0805a820 <_ZN6__asan9FakeStack13ClassMmapSizeEm>:
 805a820:	55                   	push   %ebp
 805a821:	31 ed                	xor    %ebp,%ebp
 805a823:	57                   	push   %edi
 805a824:	56                   	push   %esi
 805a825:	53                   	push   %ebx
 805a826:	83 ec 3c             	sub    $0x3c,%esp
 805a829:	8b 44 24 50          	mov    0x50(%esp),%eax
 805a82d:	e8 be f2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a832:	81 c3 ce 57 05 00    	add    $0x557ce,%ebx
 805a838:	8b 30                	mov    (%eax),%esi
 805a83a:	85 f6                	test   %esi,%esi
 805a83c:	0f 84 ce 00 00 00    	je     805a910 <_ZN6__asan9FakeStack13ClassMmapSizeEm+0xf0>
 805a842:	8d 56 ff             	lea    -0x1(%esi),%edx
 805a845:	89 f0                	mov    %esi,%eax
 805a847:	85 f2                	test   %esi,%edx
 805a849:	75 0d                	jne    805a858 <_ZN6__asan9FakeStack13ClassMmapSizeEm+0x38>
 805a84b:	83 c4 3c             	add    $0x3c,%esp
 805a84e:	5b                   	pop    %ebx
 805a84f:	5e                   	pop    %esi
 805a850:	5f                   	pop    %edi
 805a851:	5d                   	pop    %ebp
 805a852:	c3                   	ret    
 805a853:	90                   	nop
 805a854:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805a858:	0f bd c6             	bsr    %esi,%eax
 805a85b:	89 ea                	mov    %ebp,%edx
 805a85d:	83 f0 1f             	xor    $0x1f,%eax
 805a860:	31 ff                	xor    %edi,%edi
 805a862:	c7 44 24 28 1f 00 00 	movl   $0x1f,0x28(%esp)
 805a869:	00 
 805a86a:	29 44 24 28          	sub    %eax,0x28(%esp)
 805a86e:	8b 44 24 28          	mov    0x28(%esp),%eax
 805a872:	83 c0 01             	add    $0x1,%eax
 805a875:	89 c1                	mov    %eax,%ecx
 805a877:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805a87b:	89 f0                	mov    %esi,%eax
 805a87d:	d3 ea                	shr    %cl,%edx
 805a87f:	0f ad e8             	shrd   %cl,%ebp,%eax
 805a882:	f6 c1 20             	test   $0x20,%cl
 805a885:	0f 45 c2             	cmovne %edx,%eax
 805a888:	0f 45 d7             	cmovne %edi,%edx
 805a88b:	89 d1                	mov    %edx,%ecx
 805a88d:	09 c1                	or     %eax,%ecx
 805a88f:	0f 85 bb 00 00 00    	jne    805a950 <_ZN6__asan9FakeStack13ClassMmapSizeEm+0x130>
 805a895:	0f b6 4c 24 28       	movzbl 0x28(%esp),%ecx
 805a89a:	31 c0                	xor    %eax,%eax
 805a89c:	31 d2                	xor    %edx,%edx
 805a89e:	f6 c1 20             	test   $0x20,%cl
 805a8a1:	0f 95 c2             	setne  %dl
 805a8a4:	0f 94 c0             	sete   %al
 805a8a7:	d3 e2                	shl    %cl,%edx
 805a8a9:	d3 e0                	shl    %cl,%eax
 805a8ab:	39 d5                	cmp    %edx,%ebp
 805a8ad:	77 4d                	ja     805a8fc <_ZN6__asan9FakeStack13ClassMmapSizeEm+0xdc>
 805a8af:	73 47                	jae    805a8f8 <_ZN6__asan9FakeStack13ClassMmapSizeEm+0xd8>
 805a8b1:	8d 83 f0 4e fd ff    	lea    -0x2b110(%ebx),%eax
 805a8b7:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a8bb:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a8c1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a8c8:	00 
 805a8c9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a8d0:	00 
 805a8d1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a8d8:	00 
 805a8d9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a8e0:	00 
 805a8e1:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805a8e8:	00 
 805a8e9:	89 04 24             	mov    %eax,(%esp)
 805a8ec:	e8 bf 7a 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a8f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805a8f8:	39 c6                	cmp    %eax,%esi
 805a8fa:	76 b5                	jbe    805a8b1 <_ZN6__asan9FakeStack13ClassMmapSizeEm+0x91>
 805a8fc:	0f b6 4c 24 2c       	movzbl 0x2c(%esp),%ecx
 805a901:	b8 01 00 00 00       	mov    $0x1,%eax
 805a906:	83 c4 3c             	add    $0x3c,%esp
 805a909:	5b                   	pop    %ebx
 805a90a:	5e                   	pop    %esi
 805a90b:	5f                   	pop    %edi
 805a90c:	d3 e0                	shl    %cl,%eax
 805a90e:	5d                   	pop    %ebp
 805a90f:	c3                   	ret    
 805a910:	8d 83 7e 51 fd ff    	lea    -0x2ae82(%ebx),%eax
 805a916:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a91a:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a920:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a927:	00 
 805a928:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a92f:	00 
 805a930:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a937:	00 
 805a938:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a93f:	00 
 805a940:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)
 805a947:	00 
 805a948:	89 04 24             	mov    %eax,(%esp)
 805a94b:	e8 60 7a 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805a950:	8d 83 c8 4e fd ff    	lea    -0x2b138(%ebx),%eax
 805a956:	89 44 24 08          	mov    %eax,0x8(%esp)
 805a95a:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805a960:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805a967:	00 
 805a968:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805a96f:	00 
 805a970:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805a977:	00 
 805a978:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805a97f:	00 
 805a980:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 805a987:	00 
 805a988:	89 04 24             	mov    %eax,(%esp)
 805a98b:	e8 20 7a 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0805a990 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm>:
 805a990:	55                   	push   %ebp
 805a991:	57                   	push   %edi
 805a992:	56                   	push   %esi
 805a993:	53                   	push   %ebx
 805a994:	83 ec 4c             	sub    $0x4c,%esp
 805a997:	8b 7c 24 60          	mov    0x60(%esp),%edi
 805a99b:	e8 50 f1 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805a9a0:	81 c3 60 56 05 00    	add    $0x55660,%ebx
 805a9a6:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 805a9ad:	00 
 805a9ae:	8b 37                	mov    (%edi),%esi
 805a9b0:	85 f6                	test   %esi,%esi
 805a9b2:	89 74 24 28          	mov    %esi,0x28(%esp)
 805a9b6:	0f 84 86 02 00 00    	je     805ac42 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2b2>
 805a9bc:	8d 46 ff             	lea    -0x1(%esi),%eax
 805a9bf:	89 f5                	mov    %esi,%ebp
 805a9c1:	85 f0                	test   %esi,%eax
 805a9c3:	0f 85 9f 01 00 00    	jne    805ab68 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x1d8>
 805a9c9:	e8 42 78 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 805a9ce:	39 e8                	cmp    %ebp,%eax
 805a9d0:	0f 87 ec 02 00 00    	ja     805acc2 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x332>
 805a9d6:	8b 37                	mov    (%edi),%esi
 805a9d8:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 805a9df:	00 
 805a9e0:	85 f6                	test   %esi,%esi
 805a9e2:	89 74 24 28          	mov    %esi,0x28(%esp)
 805a9e6:	0f 84 56 02 00 00    	je     805ac42 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2b2>
 805a9ec:	8d 56 ff             	lea    -0x1(%esi),%edx
 805a9ef:	89 f0                	mov    %esi,%eax
 805a9f1:	85 f2                	test   %esi,%edx
 805a9f3:	0f 85 df 01 00 00    	jne    805abd8 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x248>
 805a9f9:	8d 93 1c 52 fd ff    	lea    -0x2ade4(%ebx),%edx
 805a9ff:	89 54 24 04          	mov    %edx,0x4(%esp)
 805aa03:	89 04 24             	mov    %eax,(%esp)
 805aa06:	e8 d5 87 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 805aa0b:	8b 17                	mov    (%edi),%edx
 805aa0d:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 805aa14:	00 
 805aa15:	85 d2                	test   %edx,%edx
 805aa17:	89 54 24 28          	mov    %edx,0x28(%esp)
 805aa1b:	89 44 24 34          	mov    %eax,0x34(%esp)
 805aa1f:	0f 84 1d 02 00 00    	je     805ac42 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2b2>
 805aa25:	8b 44 24 64          	mov    0x64(%esp),%eax
 805aa29:	31 ed                	xor    %ebp,%ebp
 805aa2b:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%esp)
 805aa32:	00 
 805aa33:	8b 74 24 28          	mov    0x28(%esp),%esi
 805aa37:	89 7c 24 60          	mov    %edi,0x60(%esp)
 805aa3b:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 805aa3f:	8d 48 09             	lea    0x9(%eax),%ecx
 805aa42:	83 c0 04             	add    $0x4,%eax
 805aa45:	d3 64 24 30          	shll   %cl,0x30(%esp)
 805aa49:	89 44 24 38          	mov    %eax,0x38(%esp)
 805aa4d:	eb 3d                	jmp    805aa8c <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0xfc>
 805aa4f:	90                   	nop
 805aa50:	39 c5                	cmp    %eax,%ebp
 805aa52:	0f 83 f2 00 00 00    	jae    805ab4a <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x1ba>
 805aa58:	8b 44 24 34          	mov    0x34(%esp),%eax
 805aa5c:	8b 7c 24 38          	mov    0x38(%esp),%edi
 805aa60:	01 e8                	add    %ebp,%eax
 805aa62:	89 44 24 04          	mov    %eax,0x4(%esp)
 805aa66:	8b 44 24 60          	mov    0x60(%esp),%eax
 805aa6a:	8d 44 f8 08          	lea    0x8(%eax,%edi,8),%eax
 805aa6e:	31 ff                	xor    %edi,%edi
 805aa70:	89 04 24             	mov    %eax,(%esp)
 805aa73:	e8 88 f9 ff ff       	call   805a400 <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE>
 805aa78:	8b 44 24 60          	mov    0x60(%esp),%eax
 805aa7c:	03 6c 24 30          	add    0x30(%esp),%ebp
 805aa80:	8b 10                	mov    (%eax),%edx
 805aa82:	85 d2                	test   %edx,%edx
 805aa84:	89 d6                	mov    %edx,%esi
 805aa86:	0f 84 b6 01 00 00    	je     805ac42 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2b2>
 805aa8c:	8d 4a ff             	lea    -0x1(%edx),%ecx
 805aa8f:	89 d0                	mov    %edx,%eax
 805aa91:	85 d1                	test   %edx,%ecx
 805aa93:	74 bb                	je     805aa50 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0xc0>
 805aa95:	0f bd d2             	bsr    %edx,%edx
 805aa98:	83 f2 1f             	xor    $0x1f,%edx
 805aa9b:	c7 44 24 28 1f 00 00 	movl   $0x1f,0x28(%esp)
 805aaa2:	00 
 805aaa3:	29 54 24 28          	sub    %edx,0x28(%esp)
 805aaa7:	89 fa                	mov    %edi,%edx
 805aaa9:	8b 44 24 28          	mov    0x28(%esp),%eax
 805aaad:	83 c0 01             	add    $0x1,%eax
 805aab0:	89 c1                	mov    %eax,%ecx
 805aab2:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 805aab6:	89 f0                	mov    %esi,%eax
 805aab8:	0f ad d0             	shrd   %cl,%edx,%eax
 805aabb:	d3 ea                	shr    %cl,%edx
 805aabd:	f6 c1 20             	test   $0x20,%cl
 805aac0:	74 04                	je     805aac6 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x136>
 805aac2:	89 d0                	mov    %edx,%eax
 805aac4:	31 d2                	xor    %edx,%edx
 805aac6:	89 d1                	mov    %edx,%ecx
 805aac8:	09 c1                	or     %eax,%ecx
 805aaca:	0f 85 b2 01 00 00    	jne    805ac82 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2f2>
 805aad0:	0f b6 4c 24 28       	movzbl 0x28(%esp),%ecx
 805aad5:	31 c0                	xor    %eax,%eax
 805aad7:	31 d2                	xor    %edx,%edx
 805aad9:	f6 c1 20             	test   $0x20,%cl
 805aadc:	0f 95 c2             	setne  %dl
 805aadf:	0f 94 c0             	sete   %al
 805aae2:	d3 e2                	shl    %cl,%edx
 805aae4:	d3 e0                	shl    %cl,%eax
 805aae6:	39 fa                	cmp    %edi,%edx
 805aae8:	76 46                	jbe    805ab30 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x1a0>
 805aaea:	8d 83 f0 4e fd ff    	lea    -0x2b110(%ebx),%eax
 805aaf0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805aaf4:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805aafa:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ab01:	00 
 805ab02:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ab09:	00 
 805ab0a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ab11:	00 
 805ab12:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ab19:	00 
 805ab1a:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805ab21:	00 
 805ab22:	89 04 24             	mov    %eax,(%esp)
 805ab25:	e8 86 78 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ab2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805ab30:	72 04                	jb     805ab36 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x1a6>
 805ab32:	39 f0                	cmp    %esi,%eax
 805ab34:	73 b4                	jae    805aaea <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x15a>
 805ab36:	0f b6 4c 24 3c       	movzbl 0x3c(%esp),%ecx
 805ab3b:	b8 01 00 00 00       	mov    $0x1,%eax
 805ab40:	d3 e0                	shl    %cl,%eax
 805ab42:	39 c5                	cmp    %eax,%ebp
 805ab44:	0f 82 0e ff ff ff    	jb     805aa58 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0xc8>
 805ab4a:	8b 7c 24 60          	mov    0x60(%esp),%edi
 805ab4e:	0f 85 ae 01 00 00    	jne    805ad02 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x372>
 805ab54:	8b 74 24 34          	mov    0x34(%esp),%esi
 805ab58:	8b 44 24 64          	mov    0x64(%esp),%eax
 805ab5c:	89 74 87 08          	mov    %esi,0x8(%edi,%eax,4)
 805ab60:	83 c4 4c             	add    $0x4c,%esp
 805ab63:	5b                   	pop    %ebx
 805ab64:	5e                   	pop    %esi
 805ab65:	5f                   	pop    %edi
 805ab66:	5d                   	pop    %ebp
 805ab67:	c3                   	ret    
 805ab68:	0f bd c6             	bsr    %esi,%eax
 805ab6b:	bd 1f 00 00 00       	mov    $0x1f,%ebp
 805ab70:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 805ab74:	83 f0 1f             	xor    $0x1f,%eax
 805ab77:	29 c5                	sub    %eax,%ebp
 805ab79:	8d 45 01             	lea    0x1(%ebp),%eax
 805ab7c:	89 c1                	mov    %eax,%ecx
 805ab7e:	89 44 24 30          	mov    %eax,0x30(%esp)
 805ab82:	8b 44 24 28          	mov    0x28(%esp),%eax
 805ab86:	0f ad d0             	shrd   %cl,%edx,%eax
 805ab89:	d3 ea                	shr    %cl,%edx
 805ab8b:	f6 c1 20             	test   $0x20,%cl
 805ab8e:	74 04                	je     805ab94 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x204>
 805ab90:	89 d0                	mov    %edx,%eax
 805ab92:	31 d2                	xor    %edx,%edx
 805ab94:	89 d1                	mov    %edx,%ecx
 805ab96:	09 c1                	or     %eax,%ecx
 805ab98:	0f 85 e4 00 00 00    	jne    805ac82 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2f2>
 805ab9e:	89 e9                	mov    %ebp,%ecx
 805aba0:	31 c0                	xor    %eax,%eax
 805aba2:	31 d2                	xor    %edx,%edx
 805aba4:	f6 c1 20             	test   $0x20,%cl
 805aba7:	0f 94 c0             	sete   %al
 805abaa:	0f 95 c2             	setne  %dl
 805abad:	d3 e2                	shl    %cl,%edx
 805abaf:	d3 e0                	shl    %cl,%eax
 805abb1:	39 54 24 2c          	cmp    %edx,0x2c(%esp)
 805abb5:	77 0e                	ja     805abc5 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x235>
 805abb7:	0f 82 2d ff ff ff    	jb     805aaea <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x15a>
 805abbd:	39 c6                	cmp    %eax,%esi
 805abbf:	0f 86 25 ff ff ff    	jbe    805aaea <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x15a>
 805abc5:	0f b6 4c 24 30       	movzbl 0x30(%esp),%ecx
 805abca:	bd 01 00 00 00       	mov    $0x1,%ebp
 805abcf:	d3 e5                	shl    %cl,%ebp
 805abd1:	e9 f3 fd ff ff       	jmp    805a9c9 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x39>
 805abd6:	66 90                	xchg   %ax,%ax
 805abd8:	0f bd c6             	bsr    %esi,%eax
 805abdb:	bd 1f 00 00 00       	mov    $0x1f,%ebp
 805abe0:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 805abe4:	83 f0 1f             	xor    $0x1f,%eax
 805abe7:	29 c5                	sub    %eax,%ebp
 805abe9:	8d 45 01             	lea    0x1(%ebp),%eax
 805abec:	89 c1                	mov    %eax,%ecx
 805abee:	89 44 24 30          	mov    %eax,0x30(%esp)
 805abf2:	8b 44 24 28          	mov    0x28(%esp),%eax
 805abf6:	0f ad d0             	shrd   %cl,%edx,%eax
 805abf9:	d3 ea                	shr    %cl,%edx
 805abfb:	f6 c1 20             	test   $0x20,%cl
 805abfe:	74 04                	je     805ac04 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x274>
 805ac00:	89 d0                	mov    %edx,%eax
 805ac02:	31 d2                	xor    %edx,%edx
 805ac04:	89 d1                	mov    %edx,%ecx
 805ac06:	09 c1                	or     %eax,%ecx
 805ac08:	75 78                	jne    805ac82 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2f2>
 805ac0a:	89 e9                	mov    %ebp,%ecx
 805ac0c:	31 c0                	xor    %eax,%eax
 805ac0e:	31 d2                	xor    %edx,%edx
 805ac10:	f6 c1 20             	test   $0x20,%cl
 805ac13:	0f 94 c0             	sete   %al
 805ac16:	0f 95 c2             	setne  %dl
 805ac19:	d3 e2                	shl    %cl,%edx
 805ac1b:	d3 e0                	shl    %cl,%eax
 805ac1d:	39 54 24 2c          	cmp    %edx,0x2c(%esp)
 805ac21:	0f 82 c3 fe ff ff    	jb     805aaea <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x15a>
 805ac27:	77 08                	ja     805ac31 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x2a1>
 805ac29:	39 c6                	cmp    %eax,%esi
 805ac2b:	0f 86 b9 fe ff ff    	jbe    805aaea <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x15a>
 805ac31:	0f b6 4c 24 30       	movzbl 0x30(%esp),%ecx
 805ac36:	b8 01 00 00 00       	mov    $0x1,%eax
 805ac3b:	d3 e0                	shl    %cl,%eax
 805ac3d:	e9 b7 fd ff ff       	jmp    805a9f9 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm+0x69>
 805ac42:	8d 83 7e 51 fd ff    	lea    -0x2ae82(%ebx),%eax
 805ac48:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ac4c:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805ac52:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ac59:	00 
 805ac5a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ac61:	00 
 805ac62:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ac69:	00 
 805ac6a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ac71:	00 
 805ac72:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)
 805ac79:	00 
 805ac7a:	89 04 24             	mov    %eax,(%esp)
 805ac7d:	e8 2e 77 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ac82:	8d 83 c8 4e fd ff    	lea    -0x2b138(%ebx),%eax
 805ac88:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ac8c:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805ac92:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ac99:	00 
 805ac9a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805aca1:	00 
 805aca2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805aca9:	00 
 805acaa:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805acb1:	00 
 805acb2:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 805acb9:	00 
 805acba:	89 04 24             	mov    %eax,(%esp)
 805acbd:	e8 ee 76 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805acc2:	8d 83 48 4f fd ff    	lea    -0x2b0b8(%ebx),%eax
 805acc8:	89 44 24 08          	mov    %eax,0x8(%esp)
 805accc:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805acd2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805acd9:	00 
 805acda:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ace1:	00 
 805ace2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ace9:	00 
 805acea:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805acf1:	00 
 805acf2:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)
 805acf9:	00 
 805acfa:	89 04 24             	mov    %eax,(%esp)
 805acfd:	e8 ae 76 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ad02:	8d 83 84 4f fd ff    	lea    -0x2b07c(%ebx),%eax
 805ad08:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ad0c:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805ad12:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ad19:	00 
 805ad1a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ad21:	00 
 805ad22:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ad29:	00 
 805ad2a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ad31:	00 
 805ad32:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)
 805ad39:	00 
 805ad3a:	89 04 24             	mov    %eax,(%esp)
 805ad3d:	e8 6e 76 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ad42:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805ad49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805ad50 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE>:
 805ad50:	55                   	push   %ebp
 805ad51:	57                   	push   %edi
 805ad52:	56                   	push   %esi
 805ad53:	53                   	push   %ebx
 805ad54:	83 ec 3c             	sub    $0x3c,%esp
 805ad57:	8b 7c 24 50          	mov    0x50(%esp),%edi
 805ad5b:	8b 44 24 54          	mov    0x54(%esp),%eax
 805ad5f:	e8 8c ed fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ad64:	81 c3 9c 52 05 00    	add    $0x5529c,%ebx
 805ad6a:	80 7f 04 00          	cmpb   $0x0,0x4(%edi)
 805ad6e:	89 44 24 20          	mov    %eax,0x20(%esp)
 805ad72:	0f 84 32 03 00 00    	je     805b0aa <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x35a>
 805ad78:	8b 44 24 20          	mov    0x20(%esp),%eax
 805ad7c:	0f b7 50 12          	movzwl 0x12(%eax),%edx
 805ad80:	8d 72 01             	lea    0x1(%edx),%esi
 805ad83:	85 f2                	test   %esi,%edx
 805ad85:	89 f0                	mov    %esi,%eax
 805ad87:	0f 85 c3 00 00 00    	jne    805ae50 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x100>
 805ad8d:	bd 01 00 00 00       	mov    $0x1,%ebp
 805ad92:	f3 0f bc c8          	tzcnt  %eax,%ecx
 805ad96:	89 ea                	mov    %ebp,%edx
 805ad98:	d3 e2                	shl    %cl,%edx
 805ad9a:	39 d6                	cmp    %edx,%esi
 805ad9c:	89 4c 24 24          	mov    %ecx,0x24(%esp)
 805ada0:	0f 87 84 03 00 00    	ja     805b12a <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x3da>
 805ada6:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 805adaa:	83 e9 01             	sub    $0x1,%ecx
 805adad:	d3 e5                	shl    %cl,%ebp
 805adaf:	39 ee                	cmp    %ebp,%esi
 805adb1:	0f 86 99 01 00 00    	jbe    805af50 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x200>
 805adb7:	83 7c 24 24 08       	cmpl   $0x8,0x24(%esp)
 805adbc:	0f 86 7e 00 00 00    	jbe    805ae40 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0xf0>
 805adc2:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 805adc6:	83 ed 09             	sub    $0x9,%ebp
 805adc9:	83 fd 07             	cmp    $0x7,%ebp
 805adcc:	0f 87 18 03 00 00    	ja     805b0ea <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x39a>
 805add2:	39 c2                	cmp    %eax,%edx
 805add4:	0f 82 d0 01 00 00    	jb     805afaa <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x25a>
 805adda:	8b 44 af 08          	mov    0x8(%edi,%ebp,4),%eax
 805adde:	85 c0                	test   %eax,%eax
 805ade0:	0f 84 04 02 00 00    	je     805afea <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x29a>
 805ade6:	8b 44 24 20          	mov    0x20(%esp),%eax
 805adea:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805adee:	89 3c 24             	mov    %edi,(%esp)
 805adf1:	89 44 24 04          	mov    %eax,0x4(%esp)
 805adf5:	e8 16 f4 ff ff       	call   805a210 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm>
 805adfa:	84 c0                	test   %al,%al
 805adfc:	0f 84 28 02 00 00    	je     805b02a <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x2da>
 805ae02:	8b 44 24 20          	mov    0x20(%esp),%eax
 805ae06:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805ae0a:	89 3c 24             	mov    %edi,(%esp)
 805ae0d:	8d 44 30 ff          	lea    -0x1(%eax,%esi,1),%eax
 805ae11:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ae15:	e8 f6 f3 ff ff       	call   805a210 <_ZN6__asan9FakeStack17AddrIsInSizeClassEmm>
 805ae1a:	84 c0                	test   %al,%al
 805ae1c:	0f 84 48 02 00 00    	je     805b06a <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x31a>
 805ae22:	8b 44 24 20          	mov    0x20(%esp),%eax
 805ae26:	89 44 24 54          	mov    %eax,0x54(%esp)
 805ae2a:	8d 44 ef 28          	lea    0x28(%edi,%ebp,8),%eax
 805ae2e:	89 44 24 50          	mov    %eax,0x50(%esp)
 805ae32:	83 c4 3c             	add    $0x3c,%esp
 805ae35:	5b                   	pop    %ebx
 805ae36:	5e                   	pop    %esi
 805ae37:	5f                   	pop    %edi
 805ae38:	5d                   	pop    %ebp
 805ae39:	e9 c2 f5 ff ff       	jmp    805a400 <_ZN6__asan13FakeFrameFifo8FifoPushEPNS_9FakeFrameE>
 805ae3e:	66 90                	xchg   %ax,%ax
 805ae40:	ba 00 02 00 00       	mov    $0x200,%edx
 805ae45:	31 ed                	xor    %ebp,%ebp
 805ae47:	eb 89                	jmp    805add2 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x82>
 805ae49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805ae50:	0f bd c6             	bsr    %esi,%eax
 805ae53:	bd 1f 00 00 00       	mov    $0x1f,%ebp
 805ae58:	83 f0 1f             	xor    $0x1f,%eax
 805ae5b:	89 f1                	mov    %esi,%ecx
 805ae5d:	29 c5                	sub    %eax,%ebp
 805ae5f:	c1 f9 1f             	sar    $0x1f,%ecx
 805ae62:	8d 45 01             	lea    0x1(%ebp),%eax
 805ae65:	89 ca                	mov    %ecx,%edx
 805ae67:	89 44 24 24          	mov    %eax,0x24(%esp)
 805ae6b:	89 f0                	mov    %esi,%eax
 805ae6d:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 805ae71:	0f b6 4c 24 24       	movzbl 0x24(%esp),%ecx
 805ae76:	89 74 24 28          	mov    %esi,0x28(%esp)
 805ae7a:	0f ad d0             	shrd   %cl,%edx,%eax
 805ae7d:	d3 ea                	shr    %cl,%edx
 805ae7f:	f6 c1 20             	test   $0x20,%cl
 805ae82:	74 04                	je     805ae88 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x138>
 805ae84:	89 d0                	mov    %edx,%eax
 805ae86:	31 d2                	xor    %edx,%edx
 805ae88:	89 d1                	mov    %edx,%ecx
 805ae8a:	09 c1                	or     %eax,%ecx
 805ae8c:	0f 85 d8 02 00 00    	jne    805b16a <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x41a>
 805ae92:	89 e9                	mov    %ebp,%ecx
 805ae94:	31 c0                	xor    %eax,%eax
 805ae96:	31 d2                	xor    %edx,%edx
 805ae98:	f6 c1 20             	test   $0x20,%cl
 805ae9b:	0f 94 c0             	sete   %al
 805ae9e:	0f 95 c2             	setne  %dl
 805aea1:	d3 e2                	shl    %cl,%edx
 805aea3:	d3 e0                	shl    %cl,%eax
 805aea5:	39 54 24 2c          	cmp    %edx,0x2c(%esp)
 805aea9:	77 49                	ja     805aef4 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x1a4>
 805aeab:	73 43                	jae    805aef0 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x1a0>
 805aead:	8d 83 f0 4e fd ff    	lea    -0x2b110(%ebx),%eax
 805aeb3:	89 44 24 08          	mov    %eax,0x8(%esp)
 805aeb7:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805aebd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805aec4:	00 
 805aec5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805aecc:	00 
 805aecd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805aed4:	00 
 805aed5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805aedc:	00 
 805aedd:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805aee4:	00 
 805aee5:	89 04 24             	mov    %eax,(%esp)
 805aee8:	e8 c3 74 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805aeed:	8d 76 00             	lea    0x0(%esi),%esi
 805aef0:	39 c6                	cmp    %eax,%esi
 805aef2:	76 b9                	jbe    805aead <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x15d>
 805aef4:	0f b6 4c 24 24       	movzbl 0x24(%esp),%ecx
 805aef9:	b8 01 00 00 00       	mov    $0x1,%eax
 805aefe:	d3 e0                	shl    %cl,%eax
 805af00:	8d 50 ff             	lea    -0x1(%eax),%edx
 805af03:	85 c2                	test   %eax,%edx
 805af05:	0f 84 82 fe ff ff    	je     805ad8d <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE+0x3d>
 805af0b:	8d 83 d3 51 fd ff    	lea    -0x2ae2d(%ebx),%eax
 805af11:	89 44 24 08          	mov    %eax,0x8(%esp)
 805af15:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805af1b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805af22:	00 
 805af23:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805af2a:	00 
 805af2b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805af32:	00 
 805af33:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805af3a:	00 
 805af3b:	c7 44 24 04 da 00 00 	movl   $0xda,0x4(%esp)
 805af42:	00 
 805af43:	89 04 24             	mov    %eax,(%esp)
 805af46:	e8 65 74 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805af4b:	90                   	nop
 805af4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805af50:	8b 44 24 24          	mov    0x24(%esp),%eax
 805af54:	89 74 24 04          	mov    %esi,0x4(%esp)
 805af58:	89 44 24 08          	mov    %eax,0x8(%esp)
 805af5c:	8d 83 ee 51 fd ff    	lea    -0x2ae12(%ebx),%eax
 805af62:	89 04 24             	mov    %eax,(%esp)
 805af65:	e8 16 67 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805af6a:	8d 83 d8 4f fd ff    	lea    -0x2b028(%ebx),%eax
 805af70:	89 44 24 08          	mov    %eax,0x8(%esp)
 805af74:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805af7a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805af81:	00 
 805af82:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805af89:	00 
 805af8a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805af91:	00 
 805af92:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805af99:	00 
 805af9a:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)
 805afa1:	00 
 805afa2:	89 04 24             	mov    %eax,(%esp)
 805afa5:	e8 06 74 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805afaa:	8d 83 2c 50 fd ff    	lea    -0x2afd4(%ebx),%eax
 805afb0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805afb4:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805afba:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805afc1:	00 
 805afc2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805afc9:	00 
 805afca:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805afd1:	00 
 805afd2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805afd9:	00 
 805afda:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)
 805afe1:	00 
 805afe2:	89 04 24             	mov    %eax,(%esp)
 805afe5:	e8 c6 73 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805afea:	8d 83 58 50 fd ff    	lea    -0x2afa8(%ebx),%eax
 805aff0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805aff4:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805affa:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b001:	00 
 805b002:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b009:	00 
 805b00a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b011:	00 
 805b012:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b019:	00 
 805b01a:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)
 805b021:	00 
 805b022:	89 04 24             	mov    %eax,(%esp)
 805b025:	e8 86 73 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b02a:	8d 83 88 50 fd ff    	lea    -0x2af78(%ebx),%eax
 805b030:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b034:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b03a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b041:	00 
 805b042:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b049:	00 
 805b04a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b051:	00 
 805b052:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b059:	00 
 805b05a:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)
 805b061:	00 
 805b062:	89 04 24             	mov    %eax,(%esp)
 805b065:	e8 46 73 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b06a:	8d 83 b8 50 fd ff    	lea    -0x2af48(%ebx),%eax
 805b070:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b074:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b07a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b081:	00 
 805b082:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b089:	00 
 805b08a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b091:	00 
 805b092:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b099:	00 
 805b09a:	c7 44 24 04 91 00 00 	movl   $0x91,0x4(%esp)
 805b0a1:	00 
 805b0a2:	89 04 24             	mov    %eax,(%esp)
 805b0a5:	e8 06 73 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b0aa:	8d 83 c1 51 fd ff    	lea    -0x2ae3f(%ebx),%eax
 805b0b0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b0b4:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b0ba:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b0c1:	00 
 805b0c2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b0c9:	00 
 805b0ca:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b0d1:	00 
 805b0d2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b0d9:	00 
 805b0da:	c7 44 24 04 8b 00 00 	movl   $0x8b,0x4(%esp)
 805b0e1:	00 
 805b0e2:	89 04 24             	mov    %eax,(%esp)
 805b0e5:	e8 c6 72 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b0ea:	8d 83 04 50 fd ff    	lea    -0x2affc(%ebx),%eax
 805b0f0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b0f4:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b0fa:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b101:	00 
 805b102:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b109:	00 
 805b10a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b111:	00 
 805b112:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b119:	00 
 805b11a:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)
 805b121:	00 
 805b122:	89 04 24             	mov    %eax,(%esp)
 805b125:	e8 86 72 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b12a:	8d 83 b0 4f fd ff    	lea    -0x2b050(%ebx),%eax
 805b130:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b134:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b13a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b141:	00 
 805b142:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b149:	00 
 805b14a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b151:	00 
 805b152:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b159:	00 
 805b15a:	c7 44 24 04 29 00 00 	movl   $0x29,0x4(%esp)
 805b161:	00 
 805b162:	89 04 24             	mov    %eax,(%esp)
 805b165:	e8 46 72 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b16a:	8d 83 c8 4e fd ff    	lea    -0x2b138(%ebx),%eax
 805b170:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b174:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805b17a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b181:	00 
 805b182:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b189:	00 
 805b18a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b191:	00 
 805b192:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b199:	00 
 805b19a:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 805b1a1:	00 
 805b1a2:	89 04 24             	mov    %eax,(%esp)
 805b1a5:	e8 06 72 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b1aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805b1b0 <_ZN6__asan9FakeStack13AllocateStackEmm>:
 805b1b0:	55                   	push   %ebp
 805b1b1:	57                   	push   %edi
 805b1b2:	56                   	push   %esi
 805b1b3:	53                   	push   %ebx
 805b1b4:	83 ec 3c             	sub    $0x3c,%esp
 805b1b7:	8b 74 24 50          	mov    0x50(%esp),%esi
 805b1bb:	e8 30 e9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b1c0:	81 c3 40 4e 05 00    	add    $0x54e40,%ebx
 805b1c6:	80 7e 04 00          	cmpb   $0x0,0x4(%esi)
 805b1ca:	0f 84 38 02 00 00    	je     805b408 <_ZN6__asan9FakeStack13AllocateStackEmm+0x258>
 805b1d0:	8b 44 24 54          	mov    0x54(%esp),%eax
 805b1d4:	83 e8 02             	sub    $0x2,%eax
 805b1d7:	3d fe ff 00 00       	cmp    $0xfffe,%eax
 805b1dc:	0f 87 3f 03 00 00    	ja     805b521 <_ZN6__asan9FakeStack13AllocateStackEmm+0x371>
 805b1e2:	8b 44 24 54          	mov    0x54(%esp),%eax
 805b1e6:	31 ed                	xor    %ebp,%ebp
 805b1e8:	8b 7c 24 54          	mov    0x54(%esp),%edi
 805b1ec:	8d 50 ff             	lea    -0x1(%eax),%edx
 805b1ef:	85 d0                	test   %edx,%eax
 805b1f1:	0f 85 f9 00 00 00    	jne    805b2f0 <_ZN6__asan9FakeStack13AllocateStackEmm+0x140>
 805b1f7:	f3 0f bc d0          	tzcnt  %eax,%edx
 805b1fb:	bf 01 00 00 00       	mov    $0x1,%edi
 805b200:	89 fd                	mov    %edi,%ebp
 805b202:	89 d1                	mov    %edx,%ecx
 805b204:	d3 e5                	shl    %cl,%ebp
 805b206:	39 6c 24 54          	cmp    %ebp,0x54(%esp)
 805b20a:	0f 87 51 03 00 00    	ja     805b561 <_ZN6__asan9FakeStack13AllocateStackEmm+0x3b1>
 805b210:	8d 4a ff             	lea    -0x1(%edx),%ecx
 805b213:	d3 e7                	shl    %cl,%edi
 805b215:	39 7c 24 54          	cmp    %edi,0x54(%esp)
 805b219:	0f 86 51 02 00 00    	jbe    805b470 <_ZN6__asan9FakeStack13AllocateStackEmm+0x2c0>
 805b21f:	83 fa 08             	cmp    $0x8,%edx
 805b222:	0f 87 f8 01 00 00    	ja     805b420 <_ZN6__asan9FakeStack13AllocateStackEmm+0x270>
 805b228:	bd 00 02 00 00       	mov    $0x200,%ebp
 805b22d:	31 ff                	xor    %edi,%edi
 805b22f:	39 c5                	cmp    %eax,%ebp
 805b231:	0f 82 aa 02 00 00    	jb     805b4e1 <_ZN6__asan9FakeStack13AllocateStackEmm+0x331>
 805b237:	8b 54 be 08          	mov    0x8(%esi,%edi,4),%edx
 805b23b:	85 d2                	test   %edx,%edx
 805b23d:	0f 84 8d 02 00 00    	je     805b4d0 <_ZN6__asan9FakeStack13AllocateStackEmm+0x320>
 805b243:	8d 44 fe 28          	lea    0x28(%esi,%edi,8),%eax
 805b247:	89 04 24             	mov    %eax,(%esp)
 805b24a:	e8 c1 f2 ff ff       	call   805a510 <_ZN6__asan13FakeFrameFifo7FifoPopEv>
 805b24f:	85 c0                	test   %eax,%eax
 805b251:	89 c5                	mov    %eax,%ebp
 805b253:	0f 84 48 03 00 00    	je     805b5a1 <_ZN6__asan9FakeStack13AllocateStackEmm+0x3f1>
 805b259:	0f b7 44 24 54       	movzwl 0x54(%esp),%eax
 805b25e:	83 e8 01             	sub    $0x1,%eax
 805b261:	66 89 45 12          	mov    %ax,0x12(%ebp)
 805b265:	8b 44 24 58          	mov    0x58(%esp),%eax
 805b269:	89 45 0c             	mov    %eax,0xc(%ebp)
 805b26c:	31 c0                	xor    %eax,%eax
 805b26e:	66 89 45 10          	mov    %ax,0x10(%ebp)
 805b272:	8b 46 68             	mov    0x68(%esi),%eax
 805b275:	85 c0                	test   %eax,%eax
 805b277:	0f 84 9b 01 00 00    	je     805b418 <_ZN6__asan9FakeStack13AllocateStackEmm+0x268>
 805b27d:	8b 4c 24 58          	mov    0x58(%esp),%ecx
 805b281:	31 ff                	xor    %edi,%edi
 805b283:	66 83 78 10 00       	cmpw   $0x0,0x10(%eax)
 805b288:	8b 50 0c             	mov    0xc(%eax),%edx
 805b28b:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 805b28f:	75 33                	jne    805b2c4 <_ZN6__asan9FakeStack13AllocateStackEmm+0x114>
 805b291:	39 ca                	cmp    %ecx,%edx
 805b293:	77 2f                	ja     805b2c4 <_ZN6__asan9FakeStack13AllocateStackEmm+0x114>
 805b295:	8d 76 00             	lea    0x0(%esi),%esi
 805b298:	8b 50 08             	mov    0x8(%eax),%edx
 805b29b:	89 56 68             	mov    %edx,0x68(%esi)
 805b29e:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b2a2:	89 34 24             	mov    %esi,(%esp)
 805b2a5:	e8 a6 fa ff ff       	call   805ad50 <_ZN6__asan9FakeStack15DeallocateFrameEPNS_9FakeFrameE>
 805b2aa:	8b 46 68             	mov    0x68(%esi),%eax
 805b2ad:	85 c0                	test   %eax,%eax
 805b2af:	0f 84 63 01 00 00    	je     805b418 <_ZN6__asan9FakeStack13AllocateStackEmm+0x268>
 805b2b5:	0f b7 50 10          	movzwl 0x10(%eax),%edx
 805b2b9:	8b 48 0c             	mov    0xc(%eax),%ecx
 805b2bc:	39 fa                	cmp    %edi,%edx
 805b2be:	0f 86 2c 01 00 00    	jbe    805b3f0 <_ZN6__asan9FakeStack13AllocateStackEmm+0x240>
 805b2c4:	89 45 08             	mov    %eax,0x8(%ebp)
 805b2c7:	8b 44 24 54          	mov    0x54(%esp),%eax
 805b2cb:	89 6e 68             	mov    %ebp,0x68(%esi)
 805b2ce:	89 2c 24             	mov    %ebp,(%esp)
 805b2d1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 805b2d8:	00 
 805b2d9:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b2dd:	e8 ce 17 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805b2e2:	83 c4 3c             	add    $0x3c,%esp
 805b2e5:	89 e8                	mov    %ebp,%eax
 805b2e7:	5b                   	pop    %ebx
 805b2e8:	5e                   	pop    %esi
 805b2e9:	5f                   	pop    %edi
 805b2ea:	5d                   	pop    %ebp
 805b2eb:	c3                   	ret    
 805b2ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805b2f0:	0f bd c0             	bsr    %eax,%eax
 805b2f3:	89 ea                	mov    %ebp,%edx
 805b2f5:	83 f0 1f             	xor    $0x1f,%eax
 805b2f8:	c7 44 24 28 1f 00 00 	movl   $0x1f,0x28(%esp)
 805b2ff:	00 
 805b300:	29 44 24 28          	sub    %eax,0x28(%esp)
 805b304:	8b 44 24 28          	mov    0x28(%esp),%eax
 805b308:	83 c0 01             	add    $0x1,%eax
 805b30b:	89 c1                	mov    %eax,%ecx
 805b30d:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805b311:	89 f8                	mov    %edi,%eax
 805b313:	31 ff                	xor    %edi,%edi
 805b315:	d3 ea                	shr    %cl,%edx
 805b317:	0f ad e8             	shrd   %cl,%ebp,%eax
 805b31a:	f6 c1 20             	test   $0x20,%cl
 805b31d:	0f 45 c2             	cmovne %edx,%eax
 805b320:	0f 45 d7             	cmovne %edi,%edx
 805b323:	89 d1                	mov    %edx,%ecx
 805b325:	09 c1                	or     %eax,%ecx
 805b327:	0f 85 b4 02 00 00    	jne    805b5e1 <_ZN6__asan9FakeStack13AllocateStackEmm+0x431>
 805b32d:	0f b6 4c 24 28       	movzbl 0x28(%esp),%ecx
 805b332:	31 c0                	xor    %eax,%eax
 805b334:	31 d2                	xor    %edx,%edx
 805b336:	f6 c1 20             	test   $0x20,%cl
 805b339:	0f 95 c2             	setne  %dl
 805b33c:	0f 94 c0             	sete   %al
 805b33f:	d3 e2                	shl    %cl,%edx
 805b341:	d3 e0                	shl    %cl,%eax
 805b343:	39 d5                	cmp    %edx,%ebp
 805b345:	77 4f                	ja     805b396 <_ZN6__asan9FakeStack13AllocateStackEmm+0x1e6>
 805b347:	73 47                	jae    805b390 <_ZN6__asan9FakeStack13AllocateStackEmm+0x1e0>
 805b349:	8d 83 f0 4e fd ff    	lea    -0x2b110(%ebx),%eax
 805b34f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b353:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805b359:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b360:	00 
 805b361:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b368:	00 
 805b369:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b370:	00 
 805b371:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b378:	00 
 805b379:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)
 805b380:	00 
 805b381:	89 04 24             	mov    %eax,(%esp)
 805b384:	e8 27 70 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b389:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805b390:	39 44 24 54          	cmp    %eax,0x54(%esp)
 805b394:	76 b3                	jbe    805b349 <_ZN6__asan9FakeStack13AllocateStackEmm+0x199>
 805b396:	0f b6 4c 24 2c       	movzbl 0x2c(%esp),%ecx
 805b39b:	b8 01 00 00 00       	mov    $0x1,%eax
 805b3a0:	d3 e0                	shl    %cl,%eax
 805b3a2:	8d 50 ff             	lea    -0x1(%eax),%edx
 805b3a5:	85 c2                	test   %eax,%edx
 805b3a7:	0f 84 4a fe ff ff    	je     805b1f7 <_ZN6__asan9FakeStack13AllocateStackEmm+0x47>
 805b3ad:	8d 83 d3 51 fd ff    	lea    -0x2ae2d(%ebx),%eax
 805b3b3:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b3b7:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805b3bd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b3c4:	00 
 805b3c5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b3cc:	00 
 805b3cd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b3d4:	00 
 805b3d5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b3dc:	00 
 805b3dd:	c7 44 24 04 da 00 00 	movl   $0xda,0x4(%esp)
 805b3e4:	00 
 805b3e5:	89 04 24             	mov    %eax,(%esp)
 805b3e8:	e8 c3 6f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b3ed:	8d 76 00             	lea    0x0(%esi),%esi
 805b3f0:	0f 82 a2 fe ff ff    	jb     805b298 <_ZN6__asan9FakeStack13AllocateStackEmm+0xe8>
 805b3f6:	3b 4c 24 28          	cmp    0x28(%esp),%ecx
 805b3fa:	0f 87 c4 fe ff ff    	ja     805b2c4 <_ZN6__asan9FakeStack13AllocateStackEmm+0x114>
 805b400:	e9 93 fe ff ff       	jmp    805b298 <_ZN6__asan9FakeStack13AllocateStackEmm+0xe8>
 805b405:	8d 76 00             	lea    0x0(%esi),%esi
 805b408:	8b 44 24 58          	mov    0x58(%esp),%eax
 805b40c:	83 c4 3c             	add    $0x3c,%esp
 805b40f:	5b                   	pop    %ebx
 805b410:	5e                   	pop    %esi
 805b411:	5f                   	pop    %edi
 805b412:	5d                   	pop    %ebp
 805b413:	c3                   	ret    
 805b414:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805b418:	31 c0                	xor    %eax,%eax
 805b41a:	e9 a5 fe ff ff       	jmp    805b2c4 <_ZN6__asan9FakeStack13AllocateStackEmm+0x114>
 805b41f:	90                   	nop
 805b420:	8d 7a f7             	lea    -0x9(%edx),%edi
 805b423:	83 ff 07             	cmp    $0x7,%edi
 805b426:	0f 86 03 fe ff ff    	jbe    805b22f <_ZN6__asan9FakeStack13AllocateStackEmm+0x7f>
 805b42c:	8d 83 04 50 fd ff    	lea    -0x2affc(%ebx),%eax
 805b432:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b436:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b43c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b443:	00 
 805b444:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b44b:	00 
 805b44c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b453:	00 
 805b454:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b45b:	00 
 805b45c:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)
 805b463:	00 
 805b464:	89 04 24             	mov    %eax,(%esp)
 805b467:	e8 44 6f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b46c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805b470:	8b 44 24 54          	mov    0x54(%esp),%eax
 805b474:	89 54 24 08          	mov    %edx,0x8(%esp)
 805b478:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b47c:	8d 83 ee 51 fd ff    	lea    -0x2ae12(%ebx),%eax
 805b482:	89 04 24             	mov    %eax,(%esp)
 805b485:	e8 f6 61 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805b48a:	8d 83 d8 4f fd ff    	lea    -0x2b028(%ebx),%eax
 805b490:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b494:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b49a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b4a1:	00 
 805b4a2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b4a9:	00 
 805b4aa:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b4b1:	00 
 805b4b2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b4b9:	00 
 805b4ba:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)
 805b4c1:	00 
 805b4c2:	89 04 24             	mov    %eax,(%esp)
 805b4c5:	e8 e6 6e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b4ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805b4d0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805b4d4:	89 34 24             	mov    %esi,(%esp)
 805b4d7:	e8 b4 f4 ff ff       	call   805a990 <_ZN6__asan9FakeStack20AllocateOneSizeClassEm>
 805b4dc:	e9 62 fd ff ff       	jmp    805b243 <_ZN6__asan9FakeStack13AllocateStackEmm+0x93>
 805b4e1:	8d 83 2c 50 fd ff    	lea    -0x2afd4(%ebx),%eax
 805b4e7:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b4eb:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b4f1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b4f8:	00 
 805b4f9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b500:	00 
 805b501:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b508:	00 
 805b509:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b510:	00 
 805b511:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%esp)
 805b518:	00 
 805b519:	89 04 24             	mov    %eax,(%esp)
 805b51c:	e8 8f 6e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b521:	8d 83 f4 50 fd ff    	lea    -0x2af0c(%ebx),%eax
 805b527:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b52b:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b531:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b538:	00 
 805b539:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b540:	00 
 805b541:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b548:	00 
 805b549:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b550:	00 
 805b551:	c7 44 24 04 76 00 00 	movl   $0x76,0x4(%esp)
 805b558:	00 
 805b559:	89 04 24             	mov    %eax,(%esp)
 805b55c:	e8 4f 6e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b561:	8d 83 b0 4f fd ff    	lea    -0x2b050(%ebx),%eax
 805b567:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b56b:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b571:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b578:	00 
 805b579:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b580:	00 
 805b581:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b588:	00 
 805b589:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b590:	00 
 805b591:	c7 44 24 04 29 00 00 	movl   $0x29,0x4(%esp)
 805b598:	00 
 805b599:	89 04 24             	mov    %eax,(%esp)
 805b59c:	e8 0f 6e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b5a1:	8d 83 06 52 fd ff    	lea    -0x2adfa(%ebx),%eax
 805b5a7:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b5ab:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b5b1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b5b8:	00 
 805b5b9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b5c0:	00 
 805b5c1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b5c8:	00 
 805b5c9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b5d0:	00 
 805b5d1:	c7 44 24 04 7c 00 00 	movl   $0x7c,0x4(%esp)
 805b5d8:	00 
 805b5d9:	89 04 24             	mov    %eax,(%esp)
 805b5dc:	e8 cf 6d 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b5e1:	8d 83 c8 4e fd ff    	lea    -0x2b138(%ebx),%eax
 805b5e7:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b5eb:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 805b5f1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b5f8:	00 
 805b5f9:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b600:	00 
 805b601:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b608:	00 
 805b609:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b610:	00 
 805b611:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 805b618:	00 
 805b619:	89 04 24             	mov    %eax,(%esp)
 805b61c:	e8 8f 6d 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b621:	90                   	nop
 805b622:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805b629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805b630 <_ZN6__asan9FakeStack6OnFreeEmmm>:
 805b630:	56                   	push   %esi
 805b631:	53                   	push   %ebx
 805b632:	83 ec 24             	sub    $0x24,%esp
 805b635:	8b 44 24 30          	mov    0x30(%esp),%eax
 805b639:	e8 b2 e4 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b63e:	81 c3 c2 49 05 00    	add    $0x549c2,%ebx
 805b644:	8b 54 24 34          	mov    0x34(%esp),%edx
 805b648:	8b 48 04             	mov    0x4(%eax),%ecx
 805b64b:	c7 00 0e 36 e0 45    	movl   $0x45e0360e,(%eax)
 805b651:	85 c9                	test   %ecx,%ecx
 805b653:	74 25                	je     805b67a <_ZN6__asan9FakeStack6OnFreeEmmm+0x4a>
 805b655:	0f b7 70 12          	movzwl 0x12(%eax),%esi
 805b659:	8d 4a ff             	lea    -0x1(%edx),%ecx
 805b65c:	39 ce                	cmp    %ecx,%esi
 805b65e:	75 5a                	jne    805b6ba <_ZN6__asan9FakeStack6OnFreeEmmm+0x8a>
 805b660:	c7 44 24 08 f5 00 00 	movl   $0xf5,0x8(%esp)
 805b667:	00 
 805b668:	89 54 24 04          	mov    %edx,0x4(%esp)
 805b66c:	89 04 24             	mov    %eax,(%esp)
 805b66f:	e8 3c 14 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805b674:	83 c4 24             	add    $0x24,%esp
 805b677:	5b                   	pop    %ebx
 805b678:	5e                   	pop    %esi
 805b679:	c3                   	ret    
 805b67a:	8d 83 28 51 fd ff    	lea    -0x2aed8(%ebx),%eax
 805b680:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b684:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b68a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b691:	00 
 805b692:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b699:	00 
 805b69a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b6a1:	00 
 805b6a2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b6a9:	00 
 805b6aa:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)
 805b6b1:	00 
 805b6b2:	89 04 24             	mov    %eax,(%esp)
 805b6b5:	e8 f6 6c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b6ba:	8d 83 4c 51 fd ff    	lea    -0x2aeb4(%ebx),%eax
 805b6c0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b6c4:	8d 83 90 4e fd ff    	lea    -0x2b170(%ebx),%eax
 805b6ca:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b6d1:	00 
 805b6d2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805b6d9:	00 
 805b6da:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805b6e1:	00 
 805b6e2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805b6e9:	00 
 805b6ea:	c7 44 24 04 99 00 00 	movl   $0x99,0x4(%esp)
 805b6f1:	00 
 805b6f2:	89 04 24             	mov    %eax,(%esp)
 805b6f5:	e8 b6 6c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805b6fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805b700 <__asan_stack_malloc>:
 805b700:	53                   	push   %ebx
 805b701:	e8 ea e3 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b706:	81 c3 fa 48 05 00    	add    $0x548fa,%ebx
 805b70c:	83 ec 18             	sub    $0x18,%esp
 805b70f:	e8 0c ce ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b714:	80 78 23 00          	cmpb   $0x0,0x23(%eax)
 805b718:	75 0e                	jne    805b728 <__asan_stack_malloc+0x28>
 805b71a:	8b 44 24 24          	mov    0x24(%esp),%eax
 805b71e:	83 c4 18             	add    $0x18,%esp
 805b721:	5b                   	pop    %ebx
 805b722:	c3                   	ret    
 805b723:	90                   	nop
 805b724:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805b728:	e8 43 e2 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805b72d:	89 04 24             	mov    %eax,(%esp)
 805b730:	e8 4b e4 ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805b735:	85 c0                	test   %eax,%eax
 805b737:	74 e1                	je     805b71a <__asan_stack_malloc+0x1a>
 805b739:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 805b73d:	83 c0 14             	add    $0x14,%eax
 805b740:	8b 54 24 20          	mov    0x20(%esp),%edx
 805b744:	89 04 24             	mov    %eax,(%esp)
 805b747:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805b74b:	89 54 24 04          	mov    %edx,0x4(%esp)
 805b74f:	e8 5c fa ff ff       	call   805b1b0 <_ZN6__asan9FakeStack13AllocateStackEmm>
 805b754:	83 c4 18             	add    $0x18,%esp
 805b757:	5b                   	pop    %ebx
 805b758:	c3                   	ret    
 805b759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805b760 <__asan_stack_free>:
 805b760:	55                   	push   %ebp
 805b761:	57                   	push   %edi
 805b762:	56                   	push   %esi
 805b763:	53                   	push   %ebx
 805b764:	e8 87 e3 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b769:	81 c3 97 48 05 00    	add    $0x54897,%ebx
 805b76f:	83 ec 0c             	sub    $0xc,%esp
 805b772:	8b 74 24 20          	mov    0x20(%esp),%esi
 805b776:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 805b77a:	8b 7c 24 28          	mov    0x28(%esp),%edi
 805b77e:	e8 9d cd ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b783:	80 78 23 00          	cmpb   $0x0,0x23(%eax)
 805b787:	74 1f                	je     805b7a8 <__asan_stack_free+0x48>
 805b789:	39 fe                	cmp    %edi,%esi
 805b78b:	74 1b                	je     805b7a8 <__asan_stack_free+0x48>
 805b78d:	89 7c 24 28          	mov    %edi,0x28(%esp)
 805b791:	89 6c 24 24          	mov    %ebp,0x24(%esp)
 805b795:	89 74 24 20          	mov    %esi,0x20(%esp)
 805b799:	83 c4 0c             	add    $0xc,%esp
 805b79c:	5b                   	pop    %ebx
 805b79d:	5e                   	pop    %esi
 805b79e:	5f                   	pop    %edi
 805b79f:	5d                   	pop    %ebp
 805b7a0:	e9 8b fe ff ff       	jmp    805b630 <_ZN6__asan9FakeStack6OnFreeEmmm>
 805b7a5:	8d 76 00             	lea    0x0(%esi),%esi
 805b7a8:	83 c4 0c             	add    $0xc,%esp
 805b7ab:	5b                   	pop    %ebx
 805b7ac:	5e                   	pop    %esi
 805b7ad:	5f                   	pop    %edi
 805b7ae:	5d                   	pop    %ebp
 805b7af:	c3                   	ret    

0805b7b0 <_ZN6__asan14PoisonRedZonesERK13__asan_global>:
 805b7b0:	57                   	push   %edi
 805b7b1:	56                   	push   %esi
 805b7b2:	53                   	push   %ebx
 805b7b3:	83 ec 10             	sub    $0x10,%esp
 805b7b6:	8b 7c 24 20          	mov    0x20(%esp),%edi
 805b7ba:	e8 31 e3 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b7bf:	81 c3 41 48 05 00    	add    $0x54841,%ebx
 805b7c5:	8b 47 04             	mov    0x4(%edi),%eax
 805b7c8:	c7 44 24 08 f9 00 00 	movl   $0xf9,0x8(%esp)
 805b7cf:	00 
 805b7d0:	8d 70 07             	lea    0x7(%eax),%esi
 805b7d3:	8b 47 08             	mov    0x8(%edi),%eax
 805b7d6:	83 e6 f8             	and    $0xfffffff8,%esi
 805b7d9:	29 f0                	sub    %esi,%eax
 805b7db:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b7df:	8b 07                	mov    (%edi),%eax
 805b7e1:	01 f0                	add    %esi,%eax
 805b7e3:	89 04 24             	mov    %eax,(%esp)
 805b7e6:	e8 c5 12 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805b7eb:	8b 47 04             	mov    0x4(%edi),%eax
 805b7ee:	39 f0                	cmp    %esi,%eax
 805b7f0:	74 26                	je     805b818 <_ZN6__asan14PoisonRedZonesERK13__asan_global+0x68>
 805b7f2:	89 c2                	mov    %eax,%edx
 805b7f4:	83 e0 f8             	and    $0xfffffff8,%eax
 805b7f7:	83 e2 07             	and    $0x7,%edx
 805b7fa:	c7 44 24 0c f9 00 00 	movl   $0xf9,0xc(%esp)
 805b801:	00 
 805b802:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
 805b809:	00 
 805b80a:	89 54 24 04          	mov    %edx,0x4(%esp)
 805b80e:	03 07                	add    (%edi),%eax
 805b810:	89 04 24             	mov    %eax,(%esp)
 805b813:	e8 c8 14 00 00       	call   805cce0 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh>
 805b818:	83 c4 10             	add    $0x10,%esp
 805b81b:	5b                   	pop    %ebx
 805b81c:	5e                   	pop    %esi
 805b81d:	5f                   	pop    %edi
 805b81e:	c3                   	ret    
 805b81f:	90                   	nop

0805b820 <_ZN6__asan23DescribeAddressIfGlobalEmm>:
 805b820:	55                   	push   %ebp
 805b821:	57                   	push   %edi
 805b822:	31 ff                	xor    %edi,%edi
 805b824:	56                   	push   %esi
 805b825:	53                   	push   %ebx
 805b826:	e8 c5 e2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b82b:	81 c3 d5 47 05 00    	add    $0x547d5,%ebx
 805b831:	83 ec 2c             	sub    $0x2c,%esp
 805b834:	e8 e7 cc ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b839:	8b 40 14             	mov    0x14(%eax),%eax
 805b83c:	85 c0                	test   %eax,%eax
 805b83e:	75 10                	jne    805b850 <_ZN6__asan23DescribeAddressIfGlobalEmm+0x30>
 805b840:	83 c4 2c             	add    $0x2c,%esp
 805b843:	89 f8                	mov    %edi,%eax
 805b845:	5b                   	pop    %ebx
 805b846:	5e                   	pop    %esi
 805b847:	5f                   	pop    %edi
 805b848:	5d                   	pop    %ebp
 805b849:	c3                   	ret    
 805b84a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805b850:	8d 83 60 fe 1a 01    	lea    0x11afe60(%ebx),%eax
 805b856:	89 04 24             	mov    %eax,(%esp)
 805b859:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 805b85d:	e8 ce aa 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805b862:	8b b3 44 fe 1a 01    	mov    0x11afe44(%ebx),%esi
 805b868:	85 f6                	test   %esi,%esi
 805b86a:	74 71                	je     805b8dd <_ZN6__asan23DescribeAddressIfGlobalEmm+0xbd>
 805b86c:	8d 83 34 52 fd ff    	lea    -0x2adcc(%ebx),%eax
 805b872:	89 44 24 18          	mov    %eax,0x18(%esp)
 805b876:	66 90                	xchg   %ax,%ax
 805b878:	8b 2e                	mov    (%esi),%ebp
 805b87a:	e8 a1 cc ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b87f:	83 78 14 01          	cmpl   $0x1,0x14(%eax)
 805b883:	7e 21                	jle    805b8a6 <_ZN6__asan23DescribeAddressIfGlobalEmm+0x86>
 805b885:	8b 45 0c             	mov    0xc(%ebp),%eax
 805b888:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805b88c:	8b 45 04             	mov    0x4(%ebp),%eax
 805b88f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b893:	8b 45 00             	mov    0x0(%ebp),%eax
 805b896:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b89a:	8b 44 24 18          	mov    0x18(%esp),%eax
 805b89e:	89 04 24             	mov    %eax,(%esp)
 805b8a1:	e8 9a 5e 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805b8a6:	8b 44 24 44          	mov    0x44(%esp),%eax
 805b8aa:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805b8ae:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b8b2:	8b 44 24 40          	mov    0x40(%esp),%eax
 805b8b6:	89 04 24             	mov    %eax,(%esp)
 805b8b9:	e8 a2 24 00 00       	call   805dd60 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global>
 805b8be:	8b 76 04             	mov    0x4(%esi),%esi
 805b8c1:	09 c7                	or     %eax,%edi
 805b8c3:	85 f6                	test   %esi,%esi
 805b8c5:	75 b1                	jne    805b878 <_ZN6__asan23DescribeAddressIfGlobalEmm+0x58>
 805b8c7:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 805b8cb:	89 04 24             	mov    %eax,(%esp)
 805b8ce:	e8 cd aa 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805b8d3:	83 c4 2c             	add    $0x2c,%esp
 805b8d6:	89 f8                	mov    %edi,%eax
 805b8d8:	5b                   	pop    %ebx
 805b8d9:	5e                   	pop    %esi
 805b8da:	5f                   	pop    %edi
 805b8db:	5d                   	pop    %ebp
 805b8dc:	c3                   	ret    
 805b8dd:	31 ff                	xor    %edi,%edi
 805b8df:	eb e6                	jmp    805b8c7 <_ZN6__asan23DescribeAddressIfGlobalEmm+0xa7>
 805b8e1:	eb 0d                	jmp    805b8f0 <__asan_register_globals>
 805b8e3:	90                   	nop
 805b8e4:	90                   	nop
 805b8e5:	90                   	nop
 805b8e6:	90                   	nop
 805b8e7:	90                   	nop
 805b8e8:	90                   	nop
 805b8e9:	90                   	nop
 805b8ea:	90                   	nop
 805b8eb:	90                   	nop
 805b8ec:	90                   	nop
 805b8ed:	90                   	nop
 805b8ee:	90                   	nop
 805b8ef:	90                   	nop

0805b8f0 <__asan_register_globals>:
 805b8f0:	55                   	push   %ebp
 805b8f1:	57                   	push   %edi
 805b8f2:	56                   	push   %esi
 805b8f3:	53                   	push   %ebx
 805b8f4:	e8 f7 e1 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805b8f9:	81 c3 07 47 05 00    	add    $0x54707,%ebx
 805b8ff:	83 ec 3c             	sub    $0x3c,%esp
 805b902:	e8 19 cc ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b907:	8b 68 14             	mov    0x14(%eax),%ebp
 805b90a:	85 ed                	test   %ebp,%ebp
 805b90c:	75 0a                	jne    805b918 <__asan_register_globals+0x28>
 805b90e:	83 c4 3c             	add    $0x3c,%esp
 805b911:	5b                   	pop    %ebx
 805b912:	5e                   	pop    %esi
 805b913:	5f                   	pop    %edi
 805b914:	5d                   	pop    %ebp
 805b915:	c3                   	ret    
 805b916:	66 90                	xchg   %ax,%ax
 805b918:	8d 83 60 fe 1a 01    	lea    0x11afe60(%ebx),%eax
 805b91e:	89 04 24             	mov    %eax,(%esp)
 805b921:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805b925:	e8 06 aa 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805b92a:	8b 7c 24 54          	mov    0x54(%esp),%edi
 805b92e:	85 ff                	test   %edi,%edi
 805b930:	0f 84 c2 01 00 00    	je     805baf8 <__asan_register_globals+0x208>
 805b936:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805b93c:	8b 30                	mov    (%eax),%esi
 805b93e:	85 f6                	test   %esi,%esi
 805b940:	0f 84 71 01 00 00    	je     805bab7 <__asan_register_globals+0x1c7>
 805b946:	8b 44 24 50          	mov    0x50(%esp),%eax
 805b94a:	31 ff                	xor    %edi,%edi
 805b94c:	8d 68 14             	lea    0x14(%eax),%ebp
 805b94f:	89 c6                	mov    %eax,%esi
 805b951:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805b958:	e8 c3 cb ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b95d:	83 78 14 01          	cmpl   $0x1,0x14(%eax)
 805b961:	7e 30                	jle    805b993 <__asan_register_globals+0xa3>
 805b963:	8b 46 10             	mov    0x10(%esi),%eax
 805b966:	89 44 24 14          	mov    %eax,0x14(%esp)
 805b96a:	8b 46 0c             	mov    0xc(%esi),%eax
 805b96d:	89 44 24 10          	mov    %eax,0x10(%esp)
 805b971:	8b 46 08             	mov    0x8(%esi),%eax
 805b974:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805b978:	8b 46 04             	mov    0x4(%esi),%eax
 805b97b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b97f:	8b 06                	mov    (%esi),%eax
 805b981:	89 44 24 04          	mov    %eax,0x4(%esp)
 805b985:	8d 83 90 52 fd ff    	lea    -0x2ad70(%ebx),%eax
 805b98b:	89 04 24             	mov    %eax,(%esp)
 805b98e:	e8 ad 5d 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805b993:	e8 88 cb ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805b998:	8b 50 14             	mov    0x14(%eax),%edx
 805b99b:	85 d2                	test   %edx,%edx
 805b99d:	0f 84 69 01 00 00    	je     805bb0c <__asan_register_globals+0x21c>
 805b9a3:	8b 06                	mov    (%esi),%eax
 805b9a5:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805b9aa:	76 7c                	jbe    805ba28 <__asan_register_globals+0x138>
 805b9ac:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 805b9b2:	8b 11                	mov    (%ecx),%edx
 805b9b4:	85 d2                	test   %edx,%edx
 805b9b6:	74 10                	je     805b9c8 <__asan_register_globals+0xd8>
 805b9b8:	39 d0                	cmp    %edx,%eax
 805b9ba:	72 0c                	jb     805b9c8 <__asan_register_globals+0xd8>
 805b9bc:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 805b9c2:	3b 02                	cmp    (%edx),%eax
 805b9c4:	76 62                	jbe    805ba28 <__asan_register_globals+0x138>
 805b9c6:	66 90                	xchg   %ax,%ax
 805b9c8:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 805b9ce:	8b 12                	mov    (%edx),%edx
 805b9d0:	89 d1                	mov    %edx,%ecx
 805b9d2:	c1 e9 03             	shr    $0x3,%ecx
 805b9d5:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805b9db:	39 c8                	cmp    %ecx,%eax
 805b9dd:	72 04                	jb     805b9e3 <__asan_register_globals+0xf3>
 805b9df:	39 d0                	cmp    %edx,%eax
 805b9e1:	76 45                	jbe    805ba28 <__asan_register_globals+0x138>
 805b9e3:	8d 83 58 53 fd ff    	lea    -0x2aca8(%ebx),%eax
 805b9e9:	89 44 24 08          	mov    %eax,0x8(%esp)
 805b9ed:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805b9f3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805b9fa:	00 
 805b9fb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ba02:	00 
 805ba03:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ba0a:	00 
 805ba0b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ba12:	00 
 805ba13:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)
 805ba1a:	00 
 805ba1b:	89 04 24             	mov    %eax,(%esp)
 805ba1e:	e8 8d 69 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ba23:	90                   	nop
 805ba24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805ba28:	a8 07                	test   $0x7,%al
 805ba2a:	0f 85 1c 01 00 00    	jne    805bb4c <__asan_register_globals+0x25c>
 805ba30:	f6 46 08 07          	testb  $0x7,0x8(%esi)
 805ba34:	0f 85 52 01 00 00    	jne    805bb8c <__asan_register_globals+0x29c>
 805ba3a:	89 34 24             	mov    %esi,(%esp)
 805ba3d:	e8 6e fd ff ff       	call   805b7b0 <_ZN6__asan14PoisonRedZonesERK13__asan_global>
 805ba42:	8d 93 48 fe 1a 01    	lea    0x11afe48(%ebx),%edx
 805ba48:	89 14 24             	mov    %edx,(%esp)
 805ba4b:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 805ba52:	00 
 805ba53:	89 54 24 28          	mov    %edx,0x28(%esp)
 805ba57:	e8 b4 66 00 00       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 805ba5c:	8b 8b 44 fe 1a 01    	mov    0x11afe44(%ebx),%ecx
 805ba62:	8b 54 24 28          	mov    0x28(%esp),%edx
 805ba66:	89 30                	mov    %esi,(%eax)
 805ba68:	89 48 04             	mov    %ecx,0x4(%eax)
 805ba6b:	89 83 44 fe 1a 01    	mov    %eax,0x11afe44(%ebx)
 805ba71:	8b 46 10             	mov    0x10(%esi),%eax
 805ba74:	85 c0                	test   %eax,%eax
 805ba76:	74 21                	je     805ba99 <__asan_register_globals+0x1a9>
 805ba78:	89 14 24             	mov    %edx,(%esp)
 805ba7b:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 805ba82:	00 
 805ba83:	e8 88 66 00 00       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 805ba88:	8b 93 40 fe 1a 01    	mov    0x11afe40(%ebx),%edx
 805ba8e:	89 30                	mov    %esi,(%eax)
 805ba90:	89 50 04             	mov    %edx,0x4(%eax)
 805ba93:	89 83 40 fe 1a 01    	mov    %eax,0x11afe40(%ebx)
 805ba99:	83 c7 01             	add    $0x1,%edi
 805ba9c:	3b 7c 24 54          	cmp    0x54(%esp),%edi
 805baa0:	74 56                	je     805baf8 <__asan_register_globals+0x208>
 805baa2:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805baa8:	89 ee                	mov    %ebp,%esi
 805baaa:	83 c5 14             	add    $0x14,%ebp
 805baad:	8b 08                	mov    (%eax),%ecx
 805baaf:	85 c9                	test   %ecx,%ecx
 805bab1:	0f 85 a1 fe ff ff    	jne    805b958 <__asan_register_globals+0x68>
 805bab7:	8d 83 cf 53 fd ff    	lea    -0x2ac31(%ebx),%eax
 805babd:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bac1:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bac7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bace:	00 
 805bacf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bad6:	00 
 805bad7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bade:	00 
 805badf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bae6:	00 
 805bae7:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)
 805baee:	00 
 805baef:	89 04 24             	mov    %eax,(%esp)
 805baf2:	e8 b9 68 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805baf7:	90                   	nop
 805baf8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 805bafc:	89 04 24             	mov    %eax,(%esp)
 805baff:	e8 9c a8 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805bb04:	83 c4 3c             	add    $0x3c,%esp
 805bb07:	5b                   	pop    %ebx
 805bb08:	5e                   	pop    %esi
 805bb09:	5f                   	pop    %edi
 805bb0a:	5d                   	pop    %ebp
 805bb0b:	c3                   	ret    
 805bb0c:	8d 83 c8 52 fd ff    	lea    -0x2ad38(%ebx),%eax
 805bb12:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bb16:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bb1c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bb23:	00 
 805bb24:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bb2b:	00 
 805bb2c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bb33:	00 
 805bb34:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bb3b:	00 
 805bb3c:	c7 44 24 04 48 00 00 	movl   $0x48,0x4(%esp)
 805bb43:	00 
 805bb44:	89 04 24             	mov    %eax,(%esp)
 805bb47:	e8 64 68 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bb4c:	8d 83 ec 52 fd ff    	lea    -0x2ad14(%ebx),%eax
 805bb52:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bb56:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bb5c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bb63:	00 
 805bb64:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bb6b:	00 
 805bb6c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bb73:	00 
 805bb74:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bb7b:	00 
 805bb7c:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)
 805bb83:	00 
 805bb84:	89 04 24             	mov    %eax,(%esp)
 805bb87:	e8 24 68 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bb8c:	8d 83 1c 53 fd ff    	lea    -0x2ace4(%ebx),%eax
 805bb92:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bb96:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bb9c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bba3:	00 
 805bba4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bbab:	00 
 805bbac:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bbb3:	00 
 805bbb4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bbbb:	00 
 805bbbc:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)
 805bbc3:	00 
 805bbc4:	89 04 24             	mov    %eax,(%esp)
 805bbc7:	e8 e4 67 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bbcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0805bbd0 <__asan_unregister_globals>:
 805bbd0:	55                   	push   %ebp
 805bbd1:	57                   	push   %edi
 805bbd2:	56                   	push   %esi
 805bbd3:	53                   	push   %ebx
 805bbd4:	e8 17 df fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805bbd9:	81 c3 27 44 05 00    	add    $0x54427,%ebx
 805bbdf:	83 ec 2c             	sub    $0x2c,%esp
 805bbe2:	e8 39 c9 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805bbe7:	8b 78 14             	mov    0x14(%eax),%edi
 805bbea:	85 ff                	test   %edi,%edi
 805bbec:	75 0a                	jne    805bbf8 <__asan_unregister_globals+0x28>
 805bbee:	83 c4 2c             	add    $0x2c,%esp
 805bbf1:	5b                   	pop    %ebx
 805bbf2:	5e                   	pop    %esi
 805bbf3:	5f                   	pop    %edi
 805bbf4:	5d                   	pop    %ebp
 805bbf5:	c3                   	ret    
 805bbf6:	66 90                	xchg   %ax,%ax
 805bbf8:	8d 83 60 fe 1a 01    	lea    0x11afe60(%ebx),%eax
 805bbfe:	89 04 24             	mov    %eax,(%esp)
 805bc01:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 805bc05:	e8 26 a7 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805bc0a:	8b 74 24 44          	mov    0x44(%esp),%esi
 805bc0e:	85 f6                	test   %esi,%esi
 805bc10:	0f 84 42 01 00 00    	je     805bd58 <__asan_unregister_globals+0x188>
 805bc16:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805bc1c:	8b 08                	mov    (%eax),%ecx
 805bc1e:	85 c9                	test   %ecx,%ecx
 805bc20:	0f 84 ec 00 00 00    	je     805bd12 <__asan_unregister_globals+0x142>
 805bc26:	8b 44 24 40          	mov    0x40(%esp),%eax
 805bc2a:	31 f6                	xor    %esi,%esi
 805bc2c:	8d 78 14             	lea    0x14(%eax),%edi
 805bc2f:	89 c5                	mov    %eax,%ebp
 805bc31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805bc38:	e8 e3 c8 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805bc3d:	8b 40 14             	mov    0x14(%eax),%eax
 805bc40:	85 c0                	test   %eax,%eax
 805bc42:	0f 84 24 01 00 00    	je     805bd6c <__asan_unregister_globals+0x19c>
 805bc48:	8b 45 00             	mov    0x0(%ebp),%eax
 805bc4b:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805bc50:	76 7a                	jbe    805bccc <__asan_unregister_globals+0xfc>
 805bc52:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 805bc58:	8b 11                	mov    (%ecx),%edx
 805bc5a:	85 d2                	test   %edx,%edx
 805bc5c:	74 12                	je     805bc70 <__asan_unregister_globals+0xa0>
 805bc5e:	39 d0                	cmp    %edx,%eax
 805bc60:	72 0e                	jb     805bc70 <__asan_unregister_globals+0xa0>
 805bc62:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 805bc68:	3b 02                	cmp    (%edx),%eax
 805bc6a:	76 60                	jbe    805bccc <__asan_unregister_globals+0xfc>
 805bc6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805bc70:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 805bc76:	8b 12                	mov    (%edx),%edx
 805bc78:	89 d1                	mov    %edx,%ecx
 805bc7a:	c1 e9 03             	shr    $0x3,%ecx
 805bc7d:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805bc83:	39 c8                	cmp    %ecx,%eax
 805bc85:	73 41                	jae    805bcc8 <__asan_unregister_globals+0xf8>
 805bc87:	8d 83 58 53 fd ff    	lea    -0x2aca8(%ebx),%eax
 805bc8d:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bc91:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bc97:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bc9e:	00 
 805bc9f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bca6:	00 
 805bca7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bcae:	00 
 805bcaf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bcb6:	00 
 805bcb7:	c7 44 24 04 5d 00 00 	movl   $0x5d,0x4(%esp)
 805bcbe:	00 
 805bcbf:	89 04 24             	mov    %eax,(%esp)
 805bcc2:	e8 e9 66 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bcc7:	90                   	nop
 805bcc8:	39 d0                	cmp    %edx,%eax
 805bcca:	77 bb                	ja     805bc87 <__asan_unregister_globals+0xb7>
 805bccc:	a8 07                	test   $0x7,%al
 805bcce:	0f 85 d8 00 00 00    	jne    805bdac <__asan_unregister_globals+0x1dc>
 805bcd4:	8b 55 08             	mov    0x8(%ebp),%edx
 805bcd7:	f6 c2 07             	test   $0x7,%dl
 805bcda:	0f 85 0c 01 00 00    	jne    805bdec <__asan_unregister_globals+0x21c>
 805bce0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 805bce7:	00 
 805bce8:	83 c6 01             	add    $0x1,%esi
 805bceb:	89 54 24 04          	mov    %edx,0x4(%esp)
 805bcef:	89 04 24             	mov    %eax,(%esp)
 805bcf2:	e8 b9 0d 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805bcf7:	3b 74 24 44          	cmp    0x44(%esp),%esi
 805bcfb:	74 5b                	je     805bd58 <__asan_unregister_globals+0x188>
 805bcfd:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805bd03:	89 fd                	mov    %edi,%ebp
 805bd05:	83 c7 14             	add    $0x14,%edi
 805bd08:	8b 10                	mov    (%eax),%edx
 805bd0a:	85 d2                	test   %edx,%edx
 805bd0c:	0f 85 26 ff ff ff    	jne    805bc38 <__asan_unregister_globals+0x68>
 805bd12:	8d 83 cf 53 fd ff    	lea    -0x2ac31(%ebx),%eax
 805bd18:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bd1c:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bd22:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bd29:	00 
 805bd2a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bd31:	00 
 805bd32:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bd39:	00 
 805bd3a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bd41:	00 
 805bd42:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)
 805bd49:	00 
 805bd4a:	89 04 24             	mov    %eax,(%esp)
 805bd4d:	e8 5e 66 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bd52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805bd58:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 805bd5c:	89 04 24             	mov    %eax,(%esp)
 805bd5f:	e8 3c a6 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805bd64:	83 c4 2c             	add    $0x2c,%esp
 805bd67:	5b                   	pop    %ebx
 805bd68:	5e                   	pop    %esi
 805bd69:	5f                   	pop    %edi
 805bd6a:	5d                   	pop    %ebp
 805bd6b:	c3                   	ret    
 805bd6c:	8d 83 c8 52 fd ff    	lea    -0x2ad38(%ebx),%eax
 805bd72:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bd76:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bd7c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bd83:	00 
 805bd84:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bd8b:	00 
 805bd8c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bd93:	00 
 805bd94:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bd9b:	00 
 805bd9c:	c7 44 24 04 5c 00 00 	movl   $0x5c,0x4(%esp)
 805bda3:	00 
 805bda4:	89 04 24             	mov    %eax,(%esp)
 805bda7:	e8 04 66 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bdac:	8d 83 ec 52 fd ff    	lea    -0x2ad14(%ebx),%eax
 805bdb2:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bdb6:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bdbc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bdc3:	00 
 805bdc4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bdcb:	00 
 805bdcc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bdd3:	00 
 805bdd4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bddb:	00 
 805bddc:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)
 805bde3:	00 
 805bde4:	89 04 24             	mov    %eax,(%esp)
 805bde7:	e8 c4 65 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bdec:	8d 83 1c 53 fd ff    	lea    -0x2ace4(%ebx),%eax
 805bdf2:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bdf6:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bdfc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805be03:	00 
 805be04:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805be0b:	00 
 805be0c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805be13:	00 
 805be14:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805be1b:	00 
 805be1c:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)
 805be23:	00 
 805be24:	89 04 24             	mov    %eax,(%esp)
 805be27:	e8 84 65 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805be2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0805be30 <__asan_before_dynamic_init>:
 805be30:	55                   	push   %ebp
 805be31:	57                   	push   %edi
 805be32:	56                   	push   %esi
 805be33:	53                   	push   %ebx
 805be34:	e8 b7 dc fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805be39:	81 c3 c7 41 05 00    	add    $0x541c7,%ebx
 805be3f:	83 ec 2c             	sub    $0x2c,%esp
 805be42:	e8 d9 c6 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805be47:	80 78 18 00          	cmpb   $0x0,0x18(%eax)
 805be4b:	0f 84 85 01 00 00    	je     805bfd6 <__asan_before_dynamic_init+0x1a6>
 805be51:	8b 93 40 fe 1a 01    	mov    0x11afe40(%ebx),%edx
 805be57:	85 d2                	test   %edx,%edx
 805be59:	0f 84 bf 02 00 00    	je     805c11e <__asan_before_dynamic_init+0x2ee>
 805be5f:	8d 83 60 fe 1a 01    	lea    0x11afe60(%ebx),%eax
 805be65:	89 04 24             	mov    %eax,(%esp)
 805be68:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 805be6c:	e8 bf a4 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805be71:	8b b3 40 fe 1a 01    	mov    0x11afe40(%ebx),%esi
 805be77:	85 f6                	test   %esi,%esi
 805be79:	0f 84 4b 01 00 00    	je     805bfca <__asan_before_dynamic_init+0x19a>
 805be7f:	31 ed                	xor    %ebp,%ebp
 805be81:	eb 1c                	jmp    805be9f <__asan_before_dynamic_init+0x6f>
 805be83:	90                   	nop
 805be84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805be88:	8b 76 04             	mov    0x4(%esi),%esi
 805be8b:	39 44 24 40          	cmp    %eax,0x40(%esp)
 805be8f:	b8 00 00 00 00       	mov    $0x0,%eax
 805be94:	0f 44 e8             	cmove  %eax,%ebp
 805be97:	85 f6                	test   %esi,%esi
 805be99:	0f 84 21 01 00 00    	je     805bfc0 <__asan_before_dynamic_init+0x190>
 805be9f:	8b 3e                	mov    (%esi),%edi
 805bea1:	8b 07                	mov    (%edi),%eax
 805bea3:	3b 44 24 44          	cmp    0x44(%esp),%eax
 805bea7:	0f 84 03 01 00 00    	je     805bfb0 <__asan_before_dynamic_init+0x180>
 805bead:	89 e9                	mov    %ebp,%ecx
 805beaf:	84 c9                	test   %cl,%cl
 805beb1:	75 d5                	jne    805be88 <__asan_before_dynamic_init+0x58>
 805beb3:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805beb9:	8b 00                	mov    (%eax),%eax
 805bebb:	85 c0                	test   %eax,%eax
 805bebd:	0f 84 db 01 00 00    	je     805c09e <__asan_before_dynamic_init+0x26e>
 805bec3:	e8 58 c6 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805bec8:	80 78 18 00          	cmpb   $0x0,0x18(%eax)
 805becc:	0f 84 8c 01 00 00    	je     805c05e <__asan_before_dynamic_init+0x22e>
 805bed2:	8b 07                	mov    (%edi),%eax
 805bed4:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805bed9:	76 1d                	jbe    805bef8 <__asan_before_dynamic_init+0xc8>
 805bedb:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 805bee1:	8b 12                	mov    (%edx),%edx
 805bee3:	85 d2                	test   %edx,%edx
 805bee5:	74 69                	je     805bf50 <__asan_before_dynamic_init+0x120>
 805bee7:	39 d0                	cmp    %edx,%eax
 805bee9:	72 65                	jb     805bf50 <__asan_before_dynamic_init+0x120>
 805beeb:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 805bef1:	3b 02                	cmp    (%edx),%eax
 805bef3:	77 5b                	ja     805bf50 <__asan_before_dynamic_init+0x120>
 805bef5:	8d 76 00             	lea    0x0(%esi),%esi
 805bef8:	a8 07                	test   $0x7,%al
 805befa:	0f 85 1e 01 00 00    	jne    805c01e <__asan_before_dynamic_init+0x1ee>
 805bf00:	f6 47 08 07          	testb  $0x7,0x8(%edi)
 805bf04:	0f 85 d4 00 00 00    	jne    805bfde <__asan_before_dynamic_init+0x1ae>
 805bf0a:	e8 11 c6 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805bf0f:	83 78 14 02          	cmpl   $0x2,0x14(%eax)
 805bf13:	7e 15                	jle    805bf2a <__asan_before_dynamic_init+0xfa>
 805bf15:	8b 47 0c             	mov    0xc(%edi),%eax
 805bf18:	89 44 24 04          	mov    %eax,0x4(%esp)
 805bf1c:	8d 83 e6 53 fd ff    	lea    -0x2ac1a(%ebx),%eax
 805bf22:	89 04 24             	mov    %eax,(%esp)
 805bf25:	e8 56 57 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805bf2a:	c7 44 24 08 f6 00 00 	movl   $0xf6,0x8(%esp)
 805bf31:	00 
 805bf32:	8b 47 08             	mov    0x8(%edi),%eax
 805bf35:	89 44 24 04          	mov    %eax,0x4(%esp)
 805bf39:	8b 07                	mov    (%edi),%eax
 805bf3b:	89 04 24             	mov    %eax,(%esp)
 805bf3e:	e8 6d 0b 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805bf43:	8b 06                	mov    (%esi),%eax
 805bf45:	8b 00                	mov    (%eax),%eax
 805bf47:	e9 3c ff ff ff       	jmp    805be88 <__asan_before_dynamic_init+0x58>
 805bf4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805bf50:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 805bf56:	8b 12                	mov    (%edx),%edx
 805bf58:	89 d1                	mov    %edx,%ecx
 805bf5a:	c1 e9 03             	shr    $0x3,%ecx
 805bf5d:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805bf63:	39 c8                	cmp    %ecx,%eax
 805bf65:	72 09                	jb     805bf70 <__asan_before_dynamic_init+0x140>
 805bf67:	39 d0                	cmp    %edx,%eax
 805bf69:	76 8d                	jbe    805bef8 <__asan_before_dynamic_init+0xc8>
 805bf6b:	90                   	nop
 805bf6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805bf70:	8d 83 58 53 fd ff    	lea    -0x2aca8(%ebx),%eax
 805bf76:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bf7a:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bf80:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bf87:	00 
 805bf88:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bf8f:	00 
 805bf90:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805bf97:	00 
 805bf98:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805bf9f:	00 
 805bfa0:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)
 805bfa7:	00 
 805bfa8:	89 04 24             	mov    %eax,(%esp)
 805bfab:	e8 00 64 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805bfb0:	8b 44 24 44          	mov    0x44(%esp),%eax
 805bfb4:	bd 01 00 00 00       	mov    $0x1,%ebp
 805bfb9:	e9 ca fe ff ff       	jmp    805be88 <__asan_before_dynamic_init+0x58>
 805bfbe:	66 90                	xchg   %ax,%ax
 805bfc0:	89 e8                	mov    %ebp,%eax
 805bfc2:	84 c0                	test   %al,%al
 805bfc4:	0f 85 14 01 00 00    	jne    805c0de <__asan_before_dynamic_init+0x2ae>
 805bfca:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 805bfce:	89 04 24             	mov    %eax,(%esp)
 805bfd1:	e8 ca a3 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805bfd6:	83 c4 2c             	add    $0x2c,%esp
 805bfd9:	5b                   	pop    %ebx
 805bfda:	5e                   	pop    %esi
 805bfdb:	5f                   	pop    %edi
 805bfdc:	5d                   	pop    %ebp
 805bfdd:	c3                   	ret    
 805bfde:	8d 83 1c 53 fd ff    	lea    -0x2ace4(%ebx),%eax
 805bfe4:	89 44 24 08          	mov    %eax,0x8(%esp)
 805bfe8:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805bfee:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805bff5:	00 
 805bff6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805bffd:	00 
 805bffe:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c005:	00 
 805c006:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c00d:	00 
 805c00e:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)
 805c015:	00 
 805c016:	89 04 24             	mov    %eax,(%esp)
 805c019:	e8 92 63 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c01e:	8d 83 ec 52 fd ff    	lea    -0x2ad14(%ebx),%eax
 805c024:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c028:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c02e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c035:	00 
 805c036:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c03d:	00 
 805c03e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c045:	00 
 805c046:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c04d:	00 
 805c04e:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)
 805c055:	00 
 805c056:	89 04 24             	mov    %eax,(%esp)
 805c059:	e8 52 63 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c05e:	8d 83 a0 53 fd ff    	lea    -0x2ac60(%ebx),%eax
 805c064:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c068:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c06e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c075:	00 
 805c076:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c07d:	00 
 805c07e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c085:	00 
 805c086:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c08d:	00 
 805c08e:	c7 44 24 04 69 00 00 	movl   $0x69,0x4(%esp)
 805c095:	00 
 805c096:	89 04 24             	mov    %eax,(%esp)
 805c099:	e8 12 63 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c09e:	8d 83 cf 53 fd ff    	lea    -0x2ac31(%ebx),%eax
 805c0a4:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c0a8:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c0ae:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c0b5:	00 
 805c0b6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c0bd:	00 
 805c0be:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c0c5:	00 
 805c0c6:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c0cd:	00 
 805c0ce:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)
 805c0d5:	00 
 805c0d6:	89 04 24             	mov    %eax,(%esp)
 805c0d9:	e8 d2 62 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c0de:	8d 83 fb 53 fd ff    	lea    -0x2ac05(%ebx),%eax
 805c0e4:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c0e8:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c0ee:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c0f5:	00 
 805c0f6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c0fd:	00 
 805c0fe:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c105:	00 
 805c106:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c10d:	00 
 805c10e:	c7 44 24 04 aa 00 00 	movl   $0xaa,0x4(%esp)
 805c115:	00 
 805c116:	89 04 24             	mov    %eax,(%esp)
 805c119:	e8 92 62 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c11e:	8d 83 78 53 fd ff    	lea    -0x2ac88(%ebx),%eax
 805c124:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c128:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c12e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c135:	00 
 805c136:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c13d:	00 
 805c13e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c145:	00 
 805c146:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c14d:	00 
 805c14e:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)
 805c155:	00 
 805c156:	89 04 24             	mov    %eax,(%esp)
 805c159:	e8 52 62 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c15e:	66 90                	xchg   %ax,%ax

0805c160 <__asan_after_dynamic_init>:
 805c160:	55                   	push   %ebp
 805c161:	57                   	push   %edi
 805c162:	56                   	push   %esi
 805c163:	53                   	push   %ebx
 805c164:	e8 87 d9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c169:	81 c3 97 3e 05 00    	add    $0x53e97,%ebx
 805c16f:	83 ec 2c             	sub    $0x2c,%esp
 805c172:	e8 a9 c3 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c177:	80 78 18 00          	cmpb   $0x0,0x18(%eax)
 805c17b:	75 0b                	jne    805c188 <__asan_after_dynamic_init+0x28>
 805c17d:	83 c4 2c             	add    $0x2c,%esp
 805c180:	5b                   	pop    %ebx
 805c181:	5e                   	pop    %esi
 805c182:	5f                   	pop    %edi
 805c183:	5d                   	pop    %ebp
 805c184:	c3                   	ret    
 805c185:	8d 76 00             	lea    0x0(%esi),%esi
 805c188:	8d 83 60 fe 1a 01    	lea    0x11afe60(%ebx),%eax
 805c18e:	89 04 24             	mov    %eax,(%esp)
 805c191:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 805c195:	e8 96 a1 00 00       	call   8066330 <_ZN11__sanitizer13BlockingMutex4LockEv>
 805c19a:	8b bb 40 fe 1a 01    	mov    0x11afe40(%ebx),%edi
 805c1a0:	85 ff                	test   %edi,%edi
 805c1a2:	0f 84 58 01 00 00    	je     805c300 <__asan_after_dynamic_init+0x1a0>
 805c1a8:	8d ab 14 bc 02 00    	lea    0x2bc14(%ebx),%ebp
 805c1ae:	8b 37                	mov    (%edi),%esi
 805c1b0:	8b 55 00             	mov    0x0(%ebp),%edx
 805c1b3:	85 d2                	test   %edx,%edx
 805c1b5:	0f 84 00 01 00 00    	je     805c2bb <__asan_after_dynamic_init+0x15b>
 805c1bb:	90                   	nop
 805c1bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805c1c0:	e8 5b c3 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c1c5:	80 78 18 00          	cmpb   $0x0,0x18(%eax)
 805c1c9:	0f 84 45 01 00 00    	je     805c314 <__asan_after_dynamic_init+0x1b4>
 805c1cf:	8b 06                	mov    (%esi),%eax
 805c1d1:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805c1d6:	76 7c                	jbe    805c254 <__asan_after_dynamic_init+0xf4>
 805c1d8:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 805c1de:	8b 11                	mov    (%ecx),%edx
 805c1e0:	85 d2                	test   %edx,%edx
 805c1e2:	74 14                	je     805c1f8 <__asan_after_dynamic_init+0x98>
 805c1e4:	39 d0                	cmp    %edx,%eax
 805c1e6:	72 10                	jb     805c1f8 <__asan_after_dynamic_init+0x98>
 805c1e8:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 805c1ee:	3b 02                	cmp    (%edx),%eax
 805c1f0:	76 62                	jbe    805c254 <__asan_after_dynamic_init+0xf4>
 805c1f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805c1f8:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 805c1fe:	8b 12                	mov    (%edx),%edx
 805c200:	89 d1                	mov    %edx,%ecx
 805c202:	c1 e9 03             	shr    $0x3,%ecx
 805c205:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805c20b:	39 c8                	cmp    %ecx,%eax
 805c20d:	73 41                	jae    805c250 <__asan_after_dynamic_init+0xf0>
 805c20f:	8d 83 58 53 fd ff    	lea    -0x2aca8(%ebx),%eax
 805c215:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c219:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c21f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c226:	00 
 805c227:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c22e:	00 
 805c22f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c236:	00 
 805c237:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c23e:	00 
 805c23f:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)
 805c246:	00 
 805c247:	89 04 24             	mov    %eax,(%esp)
 805c24a:	e8 61 61 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c24f:	90                   	nop
 805c250:	39 d0                	cmp    %edx,%eax
 805c252:	77 bb                	ja     805c20f <__asan_after_dynamic_init+0xaf>
 805c254:	a8 07                	test   $0x7,%al
 805c256:	0f 85 f8 00 00 00    	jne    805c354 <__asan_after_dynamic_init+0x1f4>
 805c25c:	f6 46 08 07          	testb  $0x7,0x8(%esi)
 805c260:	0f 85 2e 01 00 00    	jne    805c394 <__asan_after_dynamic_init+0x234>
 805c266:	e8 b5 c2 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c26b:	83 78 14 02          	cmpl   $0x2,0x14(%eax)
 805c26f:	7e 15                	jle    805c286 <__asan_after_dynamic_init+0x126>
 805c271:	8b 46 0c             	mov    0xc(%esi),%eax
 805c274:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c278:	8d 83 17 54 fd ff    	lea    -0x2abe9(%ebx),%eax
 805c27e:	89 04 24             	mov    %eax,(%esp)
 805c281:	e8 fa 53 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805c286:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 805c28d:	00 
 805c28e:	8b 46 08             	mov    0x8(%esi),%eax
 805c291:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c295:	8b 06                	mov    (%esi),%eax
 805c297:	89 04 24             	mov    %eax,(%esp)
 805c29a:	e8 11 08 00 00       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805c29f:	89 34 24             	mov    %esi,(%esp)
 805c2a2:	e8 09 f5 ff ff       	call   805b7b0 <_ZN6__asan14PoisonRedZonesERK13__asan_global>
 805c2a7:	8b 7f 04             	mov    0x4(%edi),%edi
 805c2aa:	85 ff                	test   %edi,%edi
 805c2ac:	74 52                	je     805c300 <__asan_after_dynamic_init+0x1a0>
 805c2ae:	8b 45 00             	mov    0x0(%ebp),%eax
 805c2b1:	8b 37                	mov    (%edi),%esi
 805c2b3:	85 c0                	test   %eax,%eax
 805c2b5:	0f 85 05 ff ff ff    	jne    805c1c0 <__asan_after_dynamic_init+0x60>
 805c2bb:	8d 83 cf 53 fd ff    	lea    -0x2ac31(%ebx),%eax
 805c2c1:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c2c5:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c2cb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c2d2:	00 
 805c2d3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c2da:	00 
 805c2db:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c2e2:	00 
 805c2e3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c2ea:	00 
 805c2eb:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)
 805c2f2:	00 
 805c2f3:	89 04 24             	mov    %eax,(%esp)
 805c2f6:	e8 b5 60 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c2fb:	90                   	nop
 805c2fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805c300:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 805c304:	89 04 24             	mov    %eax,(%esp)
 805c307:	e8 94 a0 00 00       	call   80663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 805c30c:	83 c4 2c             	add    $0x2c,%esp
 805c30f:	5b                   	pop    %ebx
 805c310:	5e                   	pop    %esi
 805c311:	5f                   	pop    %edi
 805c312:	5d                   	pop    %ebp
 805c313:	c3                   	ret    
 805c314:	8d 83 a0 53 fd ff    	lea    -0x2ac60(%ebx),%eax
 805c31a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c31e:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c324:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c32b:	00 
 805c32c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c333:	00 
 805c334:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c33b:	00 
 805c33c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c343:	00 
 805c344:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)
 805c34b:	00 
 805c34c:	89 04 24             	mov    %eax,(%esp)
 805c34f:	e8 5c 60 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c354:	8d 83 ec 52 fd ff    	lea    -0x2ad14(%ebx),%eax
 805c35a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c35e:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c364:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c36b:	00 
 805c36c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c373:	00 
 805c374:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c37b:	00 
 805c37c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c383:	00 
 805c384:	c7 44 24 04 76 00 00 	movl   $0x76,0x4(%esp)
 805c38b:	00 
 805c38c:	89 04 24             	mov    %eax,(%esp)
 805c38f:	e8 1c 60 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c394:	8d 83 1c 53 fd ff    	lea    -0x2ace4(%ebx),%eax
 805c39a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c39e:	8d 83 5c 52 fd ff    	lea    -0x2ada4(%ebx),%eax
 805c3a4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c3ab:	00 
 805c3ac:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c3b3:	00 
 805c3b4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c3bb:	00 
 805c3bc:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c3c3:	00 
 805c3c4:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)
 805c3cb:	00 
 805c3cc:	89 04 24             	mov    %eax,(%esp)
 805c3cf:	e8 dc 5f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c3d4:	66 90                	xchg   %ax,%ax
 805c3d6:	66 90                	xchg   %ax,%ax
 805c3d8:	66 90                	xchg   %ax,%ax
 805c3da:	66 90                	xchg   %ax,%ax
 805c3dc:	66 90                	xchg   %ax,%ax
 805c3de:	66 90                	xchg   %ax,%ax

0805c3e0 <_ZN6__asan11MaybeReexecEv>:
 805c3e0:	f3 c3                	repz ret 
 805c3e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805c3e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c3f0 <_ZN6__asan31AsanDoesNotSupportStaticLinkageEv>:
 805c3f0:	e8 a0 3b ff ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 805c3f5:	81 c1 0b 3c 05 00    	add    $0x53c0b,%ecx
 805c3fb:	8b 81 f0 ff ff ff    	mov    -0x10(%ecx),%eax
 805c401:	c3                   	ret    
 805c402:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805c409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c410 <_ZN6__asan9GetPcSpBpEPvPmS1_S1_>:
 805c410:	8b 44 24 04          	mov    0x4(%esp),%eax
 805c414:	8b 54 24 08          	mov    0x8(%esp),%edx
 805c418:	8b 48 4c             	mov    0x4c(%eax),%ecx
 805c41b:	89 0a                	mov    %ecx,(%edx)
 805c41d:	8b 48 2c             	mov    0x2c(%eax),%ecx
 805c420:	8b 54 24 10          	mov    0x10(%esp),%edx
 805c424:	89 0a                	mov    %ecx,(%edx)
 805c426:	8b 50 30             	mov    0x30(%eax),%edx
 805c429:	8b 44 24 0c          	mov    0xc(%esp),%eax
 805c42d:	89 10                	mov    %edx,(%eax)
 805c42f:	c3                   	ret    

0805c430 <_ZN6__asan20AsanInterceptsSignalEi>:
 805c430:	53                   	push   %ebx
 805c431:	31 c0                	xor    %eax,%eax
 805c433:	83 ec 08             	sub    $0x8,%esp
 805c436:	e8 b5 d6 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c43b:	81 c3 c5 3b 05 00    	add    $0x53bc5,%ebx
 805c441:	83 7c 24 10 0b       	cmpl   $0xb,0x10(%esp)
 805c446:	74 08                	je     805c450 <_ZN6__asan20AsanInterceptsSignalEi+0x20>
 805c448:	83 c4 08             	add    $0x8,%esp
 805c44b:	5b                   	pop    %ebx
 805c44c:	c3                   	ret    
 805c44d:	8d 76 00             	lea    0x0(%esi),%esi
 805c450:	e8 cb c0 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c455:	0f b6 40 34          	movzbl 0x34(%eax),%eax
 805c459:	83 c4 08             	add    $0x8,%esp
 805c45c:	5b                   	pop    %ebx
 805c45d:	c3                   	ret    
 805c45e:	66 90                	xchg   %ax,%ax

0805c460 <_ZN6__asan22AsanPlatformThreadInitEv>:
 805c460:	f3 c3                	repz ret 
 805c462:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805c469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>:
 805c470:	57                   	push   %edi
 805c471:	56                   	push   %esi
 805c472:	53                   	push   %ebx
 805c473:	83 ec 20             	sub    $0x20,%esp
 805c476:	e8 75 d6 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c47b:	81 c3 85 3b 05 00    	add    $0x53b85,%ebx
 805c481:	8b 74 24 30          	mov    0x30(%esp),%esi
 805c485:	80 7c 24 40 00       	cmpb   $0x0,0x40(%esp)
 805c48a:	8b 44 24 34          	mov    0x34(%esp),%eax
 805c48e:	8b 7c 24 38          	mov    0x38(%esp),%edi
 805c492:	74 64                	je     805c4f8 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb+0x88>
 805c494:	83 f8 01             	cmp    $0x1,%eax
 805c497:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
 805c49d:	89 7e 08             	mov    %edi,0x8(%esi)
 805c4a0:	76 0f                	jbe    805c4b1 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb+0x41>
 805c4a2:	89 46 04             	mov    %eax,0x4(%esi)
 805c4a5:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805c4ab:	8b 00                	mov    (%eax),%eax
 805c4ad:	85 c0                	test   %eax,%eax
 805c4af:	75 07                	jne    805c4b8 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb+0x48>
 805c4b1:	83 c4 20             	add    $0x20,%esp
 805c4b4:	5b                   	pop    %ebx
 805c4b5:	5e                   	pop    %esi
 805c4b6:	5f                   	pop    %edi
 805c4b7:	c3                   	ret    
 805c4b8:	e8 b3 d4 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805c4bd:	89 04 24             	mov    %eax,(%esp)
 805c4c0:	e8 bb d6 ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805c4c5:	85 c0                	test   %eax,%eax
 805c4c7:	74 e8                	je     805c4b1 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb+0x41>
 805c4c9:	8b 50 10             	mov    0x10(%eax),%edx
 805c4cc:	89 54 24 10          	mov    %edx,0x10(%esp)
 805c4d0:	8b 40 0c             	mov    0xc(%eax),%eax
 805c4d3:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805c4d7:	89 34 24             	mov    %esi,(%esp)
 805c4da:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805c4de:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 805c4e2:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c4e6:	e8 a5 84 00 00       	call   8064990 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm>
 805c4eb:	83 c4 20             	add    $0x20,%esp
 805c4ee:	5b                   	pop    %ebx
 805c4ef:	5e                   	pop    %esi
 805c4f0:	5f                   	pop    %edi
 805c4f1:	c3                   	ret    
 805c4f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805c4f8:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805c4fc:	89 34 24             	mov    %esi,(%esp)
 805c4ff:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c503:	e8 b8 9c 00 00       	call   80661c0 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm>
 805c508:	83 c4 20             	add    $0x20,%esp
 805c50b:	5b                   	pop    %ebx
 805c50c:	5e                   	pop    %esi
 805c50d:	5f                   	pop    %edi
 805c50e:	c3                   	ret    
 805c50f:	90                   	nop

0805c510 <_ZN6__asan16ReadContextStackEPvPmS1_>:
 805c510:	8b 44 24 04          	mov    0x4(%esp),%eax
 805c514:	8b 54 24 08          	mov    0x8(%esp),%edx
 805c518:	8b 48 08             	mov    0x8(%eax),%ecx
 805c51b:	89 0a                	mov    %ecx,(%edx)
 805c51d:	8b 50 10             	mov    0x10(%eax),%edx
 805c520:	8b 44 24 0c          	mov    0xc(%esp),%eax
 805c524:	89 10                	mov    %edx,(%eax)
 805c526:	c3                   	ret    
 805c527:	66 90                	xchg   %ax,%ax
 805c529:	66 90                	xchg   %ax,%ax
 805c52b:	66 90                	xchg   %ax,%ax
 805c52d:	66 90                	xchg   %ax,%ax
 805c52f:	90                   	nop

0805c530 <_ZN6__asan19ReplaceSystemMallocEv>:
 805c530:	f3 c3                	repz ret 
 805c532:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805c539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c540 <__interceptor_free>:
 805c540:	55                   	push   %ebp
 805c541:	89 e5                	mov    %esp,%ebp
 805c543:	57                   	push   %edi
 805c544:	56                   	push   %esi
 805c545:	53                   	push   %ebx
 805c546:	e8 a5 d5 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c54b:	81 c3 b5 3a 05 00    	add    $0x53ab5,%ebx
 805c551:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c557:	e8 c4 bf ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c55c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c560:	e8 1b 84 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c565:	89 c6                	mov    %eax,%esi
 805c567:	e8 b4 bf ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c56c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c570:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c574:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c578:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c57e:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c581:	89 34 24             	mov    %esi,(%esp)
 805c584:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c588:	e8 e3 fe ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c58d:	8b 45 08             	mov    0x8(%ebp),%eax
 805c590:	89 74 24 04          	mov    %esi,0x4(%esp)
 805c594:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 805c59b:	00 
 805c59c:	89 04 24             	mov    %eax,(%esp)
 805c59f:	e8 9c 14 ff ff       	call   804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 805c5a4:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c5aa:	5b                   	pop    %ebx
 805c5ab:	5e                   	pop    %esi
 805c5ac:	5f                   	pop    %edi
 805c5ad:	5d                   	pop    %ebp
 805c5ae:	c3                   	ret    
 805c5af:	90                   	nop

0805c5b0 <__interceptor_cfree>:
 805c5b0:	55                   	push   %ebp
 805c5b1:	89 e5                	mov    %esp,%ebp
 805c5b3:	57                   	push   %edi
 805c5b4:	56                   	push   %esi
 805c5b5:	53                   	push   %ebx
 805c5b6:	e8 35 d5 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c5bb:	81 c3 45 3a 05 00    	add    $0x53a45,%ebx
 805c5c1:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c5c7:	e8 54 bf ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c5cc:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c5d0:	e8 ab 83 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c5d5:	89 c6                	mov    %eax,%esi
 805c5d7:	e8 44 bf ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c5dc:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c5e0:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c5e4:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c5e8:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c5ee:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c5f1:	89 34 24             	mov    %esi,(%esp)
 805c5f4:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c5f8:	e8 73 fe ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c5fd:	8b 45 08             	mov    0x8(%ebp),%eax
 805c600:	89 74 24 04          	mov    %esi,0x4(%esp)
 805c604:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 805c60b:	00 
 805c60c:	89 04 24             	mov    %eax,(%esp)
 805c60f:	e8 2c 14 ff ff       	call   804da40 <_ZN6__asan9asan_freeEPvPN11__sanitizer10StackTraceENS_9AllocTypeE>
 805c614:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c61a:	5b                   	pop    %ebx
 805c61b:	5e                   	pop    %esi
 805c61c:	5f                   	pop    %edi
 805c61d:	5d                   	pop    %ebp
 805c61e:	c3                   	ret    
 805c61f:	90                   	nop

0805c620 <__interceptor_malloc>:
 805c620:	55                   	push   %ebp
 805c621:	89 e5                	mov    %esp,%ebp
 805c623:	57                   	push   %edi
 805c624:	56                   	push   %esi
 805c625:	53                   	push   %ebx
 805c626:	e8 c5 d4 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c62b:	81 c3 d5 39 05 00    	add    $0x539d5,%ebx
 805c631:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c637:	e8 e4 be ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c63c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c640:	e8 3b 83 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c645:	89 c6                	mov    %eax,%esi
 805c647:	e8 d4 be ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c64c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c650:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c654:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c658:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c65e:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c661:	89 34 24             	mov    %esi,(%esp)
 805c664:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c668:	e8 03 fe ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c66d:	8b 45 08             	mov    0x8(%ebp),%eax
 805c670:	89 74 24 04          	mov    %esi,0x4(%esp)
 805c674:	89 04 24             	mov    %eax,(%esp)
 805c677:	e8 34 26 ff ff       	call   804ecb0 <_ZN6__asan11asan_mallocEmPN11__sanitizer10StackTraceE>
 805c67c:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c682:	5b                   	pop    %ebx
 805c683:	5e                   	pop    %esi
 805c684:	5f                   	pop    %edi
 805c685:	5d                   	pop    %ebp
 805c686:	c3                   	ret    
 805c687:	89 f6                	mov    %esi,%esi
 805c689:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c690 <__interceptor_calloc>:
 805c690:	55                   	push   %ebp
 805c691:	89 e5                	mov    %esp,%ebp
 805c693:	57                   	push   %edi
 805c694:	56                   	push   %esi
 805c695:	53                   	push   %ebx
 805c696:	e8 55 d4 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c69b:	81 c3 65 39 05 00    	add    $0x53965,%ebx
 805c6a1:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c6a7:	8d 83 14 bc 02 00    	lea    0x2bc14(%ebx),%eax
 805c6ad:	8b 00                	mov    (%eax),%eax
 805c6af:	85 c0                	test   %eax,%eax
 805c6b1:	75 35                	jne    805c6e8 <__interceptor_calloc+0x58>
 805c6b3:	8b 45 08             	mov    0x8(%ebp),%eax
 805c6b6:	0f af 45 0c          	imul   0xc(%ebp),%eax
 805c6ba:	8b 93 e0 0e 1b 01    	mov    0x11b0ee0(%ebx),%edx
 805c6c0:	83 c0 03             	add    $0x3,%eax
 805c6c3:	c1 e8 02             	shr    $0x2,%eax
 805c6c6:	01 d0                	add    %edx,%eax
 805c6c8:	3d ff 03 00 00       	cmp    $0x3ff,%eax
 805c6cd:	89 83 e0 0e 1b 01    	mov    %eax,0x11b0ee0(%ebx)
 805c6d3:	77 6a                	ja     805c73f <__interceptor_calloc+0xaf>
 805c6d5:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c6db:	8d 84 93 e0 fe 1a 01 	lea    0x11afee0(%ebx,%edx,4),%eax
 805c6e2:	5b                   	pop    %ebx
 805c6e3:	5e                   	pop    %esi
 805c6e4:	5f                   	pop    %edi
 805c6e5:	5d                   	pop    %ebp
 805c6e6:	c3                   	ret    
 805c6e7:	90                   	nop
 805c6e8:	e8 33 be ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c6ed:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c6f1:	e8 8a 82 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c6f6:	89 c6                	mov    %eax,%esi
 805c6f8:	e8 23 be ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c6fd:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c701:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c705:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c709:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c70f:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c712:	89 34 24             	mov    %esi,(%esp)
 805c715:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c719:	e8 52 fd ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c71e:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c721:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c725:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c729:	8b 45 08             	mov    0x8(%ebp),%eax
 805c72c:	89 04 24             	mov    %eax,(%esp)
 805c72f:	e8 9c 25 ff ff       	call   804ecd0 <_ZN6__asan11asan_callocEmmPN11__sanitizer10StackTraceE>
 805c734:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c73a:	5b                   	pop    %ebx
 805c73b:	5e                   	pop    %esi
 805c73c:	5f                   	pop    %edi
 805c73d:	5d                   	pop    %ebp
 805c73e:	c3                   	ret    
 805c73f:	8d 83 2c 54 fd ff    	lea    -0x2abd4(%ebx),%eax
 805c745:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c749:	8d 83 54 54 fd ff    	lea    -0x2abac(%ebx),%eax
 805c74f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805c756:	00 
 805c757:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805c75e:	00 
 805c75f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805c766:	00 
 805c767:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805c76e:	00 
 805c76f:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)
 805c776:	00 
 805c777:	89 04 24             	mov    %eax,(%esp)
 805c77a:	e8 31 5c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805c77f:	90                   	nop

0805c780 <__interceptor_realloc>:
 805c780:	55                   	push   %ebp
 805c781:	89 e5                	mov    %esp,%ebp
 805c783:	57                   	push   %edi
 805c784:	56                   	push   %esi
 805c785:	53                   	push   %ebx
 805c786:	e8 65 d3 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c78b:	81 c3 75 38 05 00    	add    $0x53875,%ebx
 805c791:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c797:	e8 84 bd ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c79c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c7a0:	e8 db 81 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c7a5:	89 c6                	mov    %eax,%esi
 805c7a7:	e8 74 bd ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c7ac:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c7b0:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c7b4:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c7b8:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c7be:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c7c1:	89 34 24             	mov    %esi,(%esp)
 805c7c4:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c7c8:	e8 a3 fc ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c7cd:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c7d0:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c7d4:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c7d8:	8b 45 08             	mov    0x8(%ebp),%eax
 805c7db:	89 04 24             	mov    %eax,(%esp)
 805c7de:	e8 cd 26 ff ff       	call   804eeb0 <_ZN6__asan12asan_reallocEPvmPN11__sanitizer10StackTraceE>
 805c7e3:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c7e9:	5b                   	pop    %ebx
 805c7ea:	5e                   	pop    %esi
 805c7eb:	5f                   	pop    %edi
 805c7ec:	5d                   	pop    %ebp
 805c7ed:	c3                   	ret    
 805c7ee:	66 90                	xchg   %ax,%ax

0805c7f0 <__interceptor___libc_memalign>:
 805c7f0:	55                   	push   %ebp
 805c7f1:	89 e5                	mov    %esp,%ebp
 805c7f3:	57                   	push   %edi
 805c7f4:	56                   	push   %esi
 805c7f5:	53                   	push   %ebx
 805c7f6:	e8 f5 d2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c7fb:	81 c3 05 38 05 00    	add    $0x53805,%ebx
 805c801:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c807:	e8 14 bd ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c80c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c810:	e8 6b 81 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c815:	89 c6                	mov    %eax,%esi
 805c817:	e8 04 bd ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c81c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c820:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c824:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c828:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c82e:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c831:	89 34 24             	mov    %esi,(%esp)
 805c834:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c838:	e8 33 fc ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c83d:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c840:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c844:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 805c84b:	00 
 805c84c:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c850:	8b 45 08             	mov    0x8(%ebp),%eax
 805c853:	89 04 24             	mov    %eax,(%esp)
 805c856:	e8 35 24 ff ff       	call   804ec90 <_ZN6__asan13asan_memalignEmmPN11__sanitizer10StackTraceENS_9AllocTypeE>
 805c85b:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c861:	5b                   	pop    %ebx
 805c862:	5e                   	pop    %esi
 805c863:	5f                   	pop    %edi
 805c864:	5d                   	pop    %ebp
 805c865:	c3                   	ret    
 805c866:	8d 76 00             	lea    0x0(%esi),%esi
 805c869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c870 <__interceptor_malloc_usable_size>:
 805c870:	55                   	push   %ebp
 805c871:	89 e5                	mov    %esp,%ebp
 805c873:	57                   	push   %edi
 805c874:	56                   	push   %esi
 805c875:	53                   	push   %ebx
 805c876:	e8 75 d2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c87b:	81 c3 85 37 05 00    	add    $0x53785,%ebx
 805c881:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c887:	e8 94 bc ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c88c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c890:	e8 eb 80 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c895:	89 c6                	mov    %eax,%esi
 805c897:	e8 84 bc ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c89c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c8a0:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c8a4:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c8a8:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c8ae:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c8b1:	89 34 24             	mov    %esi,(%esp)
 805c8b4:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c8b8:	e8 b3 fb ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c8bd:	8b 45 08             	mov    0x8(%ebp),%eax
 805c8c0:	89 74 24 04          	mov    %esi,0x4(%esp)
 805c8c4:	89 04 24             	mov    %eax,(%esp)
 805c8c7:	e8 44 ec fe ff       	call   804b510 <_ZN6__asan23asan_malloc_usable_sizeEPvPN11__sanitizer10StackTraceE>
 805c8cc:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c8d2:	5b                   	pop    %ebx
 805c8d3:	5e                   	pop    %esi
 805c8d4:	5f                   	pop    %edi
 805c8d5:	5d                   	pop    %ebp
 805c8d6:	c3                   	ret    
 805c8d7:	89 f6                	mov    %esi,%esi
 805c8d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c8e0 <__interceptor_mallinfo>:
 805c8e0:	56                   	push   %esi
 805c8e1:	53                   	push   %ebx
 805c8e2:	e8 09 d2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c8e7:	81 c3 19 37 05 00    	add    $0x53719,%ebx
 805c8ed:	83 ec 14             	sub    $0x14,%esp
 805c8f0:	8b 74 24 20          	mov    0x20(%esp),%esi
 805c8f4:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)
 805c8fb:	00 
 805c8fc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 805c903:	00 
 805c904:	89 34 24             	mov    %esi,(%esp)
 805c907:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 805c90d:	ff 10                	call   *(%eax)
 805c90f:	83 c4 14             	add    $0x14,%esp
 805c912:	89 f0                	mov    %esi,%eax
 805c914:	5b                   	pop    %ebx
 805c915:	5e                   	pop    %esi
 805c916:	c2 04 00             	ret    $0x4
 805c919:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805c920 <__interceptor_mallopt>:
 805c920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 805c925:	c3                   	ret    
 805c926:	8d 76 00             	lea    0x0(%esi),%esi
 805c929:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c930 <__interceptor_posix_memalign>:
 805c930:	55                   	push   %ebp
 805c931:	89 e5                	mov    %esp,%ebp
 805c933:	57                   	push   %edi
 805c934:	56                   	push   %esi
 805c935:	53                   	push   %ebx
 805c936:	e8 b5 d1 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c93b:	81 c3 c5 36 05 00    	add    $0x536c5,%ebx
 805c941:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c947:	e8 d4 bb ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c94c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c950:	e8 2b 80 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c955:	89 c6                	mov    %eax,%esi
 805c957:	e8 c4 bb ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c95c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c960:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c964:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c968:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c96e:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c971:	89 34 24             	mov    %esi,(%esp)
 805c974:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c978:	e8 f3 fa ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c97d:	8b 45 10             	mov    0x10(%ebp),%eax
 805c980:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805c984:	89 44 24 08          	mov    %eax,0x8(%esp)
 805c988:	8b 45 0c             	mov    0xc(%ebp),%eax
 805c98b:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c98f:	8b 45 08             	mov    0x8(%ebp),%eax
 805c992:	89 04 24             	mov    %eax,(%esp)
 805c995:	e8 86 24 ff ff       	call   804ee20 <_ZN6__asan19asan_posix_memalignEPPvmmPN11__sanitizer10StackTraceE>
 805c99a:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805c9a0:	5b                   	pop    %ebx
 805c9a1:	5e                   	pop    %esi
 805c9a2:	5f                   	pop    %edi
 805c9a3:	5d                   	pop    %ebp
 805c9a4:	c3                   	ret    
 805c9a5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805c9a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805c9b0 <__interceptor_valloc>:
 805c9b0:	55                   	push   %ebp
 805c9b1:	89 e5                	mov    %esp,%ebp
 805c9b3:	57                   	push   %edi
 805c9b4:	56                   	push   %esi
 805c9b5:	53                   	push   %ebx
 805c9b6:	e8 35 d1 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805c9bb:	81 c3 45 36 05 00    	add    $0x53645,%ebx
 805c9c1:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805c9c7:	e8 54 bb ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c9cc:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805c9d0:	e8 ab 7f 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805c9d5:	89 c6                	mov    %eax,%esi
 805c9d7:	e8 44 bb ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805c9dc:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805c9e0:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805c9e4:	89 74 24 08          	mov    %esi,0x8(%esp)
 805c9e8:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805c9ee:	8b 40 1c             	mov    0x1c(%eax),%eax
 805c9f1:	89 34 24             	mov    %esi,(%esp)
 805c9f4:	89 44 24 04          	mov    %eax,0x4(%esp)
 805c9f8:	e8 73 fa ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805c9fd:	8b 45 08             	mov    0x8(%ebp),%eax
 805ca00:	89 74 24 04          	mov    %esi,0x4(%esp)
 805ca04:	89 04 24             	mov    %eax,(%esp)
 805ca07:	e8 44 23 ff ff       	call   804ed50 <_ZN6__asan11asan_vallocEmPN11__sanitizer10StackTraceE>
 805ca0c:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805ca12:	5b                   	pop    %ebx
 805ca13:	5e                   	pop    %esi
 805ca14:	5f                   	pop    %edi
 805ca15:	5d                   	pop    %ebp
 805ca16:	c3                   	ret    
 805ca17:	89 f6                	mov    %esi,%esi
 805ca19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805ca20 <__interceptor_pvalloc>:
 805ca20:	55                   	push   %ebp
 805ca21:	89 e5                	mov    %esp,%ebp
 805ca23:	57                   	push   %edi
 805ca24:	56                   	push   %esi
 805ca25:	53                   	push   %ebx
 805ca26:	e8 c5 d0 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ca2b:	81 c3 d5 35 05 00    	add    $0x535d5,%ebx
 805ca31:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805ca37:	e8 e4 ba ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805ca3c:	0f b6 78 4d          	movzbl 0x4d(%eax),%edi
 805ca40:	e8 3b 7f 00 00       	call   8064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 805ca45:	89 c6                	mov    %eax,%esi
 805ca47:	e8 d4 ba ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805ca4c:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805ca50:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805ca54:	89 74 24 08          	mov    %esi,0x8(%esp)
 805ca58:	8d b5 e0 fb ff ff    	lea    -0x420(%ebp),%esi
 805ca5e:	8b 40 1c             	mov    0x1c(%eax),%eax
 805ca61:	89 34 24             	mov    %esi,(%esp)
 805ca64:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ca68:	e8 03 fa ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805ca6d:	8b 45 08             	mov    0x8(%ebp),%eax
 805ca70:	89 74 24 04          	mov    %esi,0x4(%esp)
 805ca74:	89 04 24             	mov    %eax,(%esp)
 805ca77:	e8 14 23 ff ff       	call   804ed90 <_ZN6__asan12asan_pvallocEmPN11__sanitizer10StackTraceE>
 805ca7c:	81 c4 3c 04 00 00    	add    $0x43c,%esp
 805ca82:	5b                   	pop    %ebx
 805ca83:	5e                   	pop    %esi
 805ca84:	5f                   	pop    %edi
 805ca85:	5d                   	pop    %ebp
 805ca86:	c3                   	ret    
 805ca87:	89 f6                	mov    %esi,%esi
 805ca89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805ca90 <__interceptor_malloc_stats>:
 805ca90:	53                   	push   %ebx
 805ca91:	e8 5a d0 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ca96:	81 c3 6a 35 05 00    	add    $0x5356a,%ebx
 805ca9c:	83 ec 08             	sub    $0x8,%esp
 805ca9f:	e8 bc ce ff ff       	call   8059960 <__asan_print_accumulated_stats>
 805caa4:	83 c4 08             	add    $0x8,%esp
 805caa7:	5b                   	pop    %ebx
 805caa8:	c3                   	ret    
 805caa9:	66 90                	xchg   %ax,%ax
 805caab:	66 90                	xchg   %ax,%ax
 805caad:	66 90                	xchg   %ax,%ax
 805caaf:	90                   	nop

0805cab0 <_ZN6__asan12PoisonShadowEmmh>:
 805cab0:	57                   	push   %edi
 805cab1:	56                   	push   %esi
 805cab2:	53                   	push   %ebx
 805cab3:	e8 38 d0 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805cab8:	81 c3 48 35 05 00    	add    $0x53548,%ebx
 805cabe:	83 ec 20             	sub    $0x20,%esp
 805cac1:	8b 74 24 30          	mov    0x30(%esp),%esi
 805cac5:	8b 7c 24 38          	mov    0x38(%esp),%edi
 805cac9:	e8 52 ba ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805cace:	80 78 4e 00          	cmpb   $0x0,0x4e(%eax)
 805cad2:	0f 84 b4 00 00 00    	je     805cb8c <_ZN6__asan12PoisonShadowEmmh+0xdc>
 805cad8:	f7 c6 07 00 00 00    	test   $0x7,%esi
 805cade:	0f 85 b5 01 00 00    	jne    805cc99 <_ZN6__asan12PoisonShadowEmmh+0x1e9>
 805cae4:	8b 44 24 34          	mov    0x34(%esp),%eax
 805cae8:	01 f0                	add    %esi,%eax
 805caea:	a8 07                	test   $0x7,%al
 805caec:	0f 85 67 01 00 00    	jne    805cc59 <_ZN6__asan12PoisonShadowEmmh+0x1a9>
 805caf2:	81 fe fe ff ff 1f    	cmp    $0x1ffffffe,%esi
 805caf8:	76 26                	jbe    805cb20 <_ZN6__asan12PoisonShadowEmmh+0x70>
 805cafa:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 805cb00:	8b 12                	mov    (%edx),%edx
 805cb02:	85 d2                	test   %edx,%edx
 805cb04:	0f 84 8e 00 00 00    	je     805cb98 <_ZN6__asan12PoisonShadowEmmh+0xe8>
 805cb0a:	39 d6                	cmp    %edx,%esi
 805cb0c:	0f 82 86 00 00 00    	jb     805cb98 <_ZN6__asan12PoisonShadowEmmh+0xe8>
 805cb12:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 805cb18:	3b 32                	cmp    (%edx),%esi
 805cb1a:	77 7c                	ja     805cb98 <_ZN6__asan12PoisonShadowEmmh+0xe8>
 805cb1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805cb20:	c1 ee 03             	shr    $0x3,%esi
 805cb23:	83 e8 08             	sub    $0x8,%eax
 805cb26:	81 c6 00 00 00 20    	add    $0x20000000,%esi
 805cb2c:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805cb31:	76 2d                	jbe    805cb60 <_ZN6__asan12PoisonShadowEmmh+0xb0>
 805cb33:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 805cb39:	8b 12                	mov    (%edx),%edx
 805cb3b:	85 d2                	test   %edx,%edx
 805cb3d:	0f 84 b5 00 00 00    	je     805cbf8 <_ZN6__asan12PoisonShadowEmmh+0x148>
 805cb43:	39 d0                	cmp    %edx,%eax
 805cb45:	0f 82 ad 00 00 00    	jb     805cbf8 <_ZN6__asan12PoisonShadowEmmh+0x148>
 805cb4b:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 805cb51:	3b 02                	cmp    (%edx),%eax
 805cb53:	0f 87 9f 00 00 00    	ja     805cbf8 <_ZN6__asan12PoisonShadowEmmh+0x148>
 805cb59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805cb60:	8d 93 34 bb 02 00    	lea    0x2bb34(%ebx),%edx
 805cb66:	c1 e8 03             	shr    $0x3,%eax
 805cb69:	8b 12                	mov    (%edx),%edx
 805cb6b:	85 d2                	test   %edx,%edx
 805cb6d:	0f 84 a6 00 00 00    	je     805cc19 <_ZN6__asan12PoisonShadowEmmh+0x169>
 805cb73:	29 f0                	sub    %esi,%eax
 805cb75:	05 01 00 00 20       	add    $0x20000001,%eax
 805cb7a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cb7e:	89 f8                	mov    %edi,%eax
 805cb80:	0f b6 f8             	movzbl %al,%edi
 805cb83:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805cb87:	89 34 24             	mov    %esi,(%esp)
 805cb8a:	ff d2                	call   *%edx
 805cb8c:	83 c4 20             	add    $0x20,%esp
 805cb8f:	5b                   	pop    %ebx
 805cb90:	5e                   	pop    %esi
 805cb91:	5f                   	pop    %edi
 805cb92:	c3                   	ret    
 805cb93:	90                   	nop
 805cb94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805cb98:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 805cb9e:	8b 12                	mov    (%edx),%edx
 805cba0:	89 d1                	mov    %edx,%ecx
 805cba2:	c1 e9 03             	shr    $0x3,%ecx
 805cba5:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805cbab:	39 ce                	cmp    %ecx,%esi
 805cbad:	72 08                	jb     805cbb7 <_ZN6__asan12PoisonShadowEmmh+0x107>
 805cbaf:	39 d6                	cmp    %edx,%esi
 805cbb1:	0f 86 69 ff ff ff    	jbe    805cb20 <_ZN6__asan12PoisonShadowEmmh+0x70>
 805cbb7:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805cbbd:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cbc1:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805cbc7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805cbce:	00 
 805cbcf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805cbd6:	00 
 805cbd7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805cbde:	00 
 805cbdf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805cbe6:	00 
 805cbe7:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805cbee:	00 
 805cbef:	89 04 24             	mov    %eax,(%esp)
 805cbf2:	e8 b9 57 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805cbf7:	90                   	nop
 805cbf8:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 805cbfe:	8b 12                	mov    (%edx),%edx
 805cc00:	89 d1                	mov    %edx,%ecx
 805cc02:	c1 e9 03             	shr    $0x3,%ecx
 805cc05:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805cc0b:	39 c8                	cmp    %ecx,%eax
 805cc0d:	72 a8                	jb     805cbb7 <_ZN6__asan12PoisonShadowEmmh+0x107>
 805cc0f:	39 d0                	cmp    %edx,%eax
 805cc11:	0f 86 49 ff ff ff    	jbe    805cb60 <_ZN6__asan12PoisonShadowEmmh+0xb0>
 805cc17:	eb 9e                	jmp    805cbb7 <_ZN6__asan12PoisonShadowEmmh+0x107>
 805cc19:	8d 83 b4 4b fd ff    	lea    -0x2b44c(%ebx),%eax
 805cc1f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cc23:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805cc29:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805cc30:	00 
 805cc31:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805cc38:	00 
 805cc39:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805cc40:	00 
 805cc41:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805cc48:	00 
 805cc49:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)
 805cc50:	00 
 805cc51:	89 04 24             	mov    %eax,(%esp)
 805cc54:	e8 57 57 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805cc59:	8d 83 ec 54 fd ff    	lea    -0x2ab14(%ebx),%eax
 805cc5f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cc63:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805cc69:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805cc70:	00 
 805cc71:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805cc78:	00 
 805cc79:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805cc80:	00 
 805cc81:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805cc88:	00 
 805cc89:	c7 44 24 04 17 00 00 	movl   $0x17,0x4(%esp)
 805cc90:	00 
 805cc91:	89 04 24             	mov    %eax,(%esp)
 805cc94:	e8 17 57 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805cc99:	8d 83 8c 54 fd ff    	lea    -0x2ab74(%ebx),%eax
 805cc9f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cca3:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805cca9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ccb0:	00 
 805ccb1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ccb8:	00 
 805ccb9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ccc0:	00 
 805ccc1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ccc8:	00 
 805ccc9:	c7 44 24 04 16 00 00 	movl   $0x16,0x4(%esp)
 805ccd0:	00 
 805ccd1:	89 04 24             	mov    %eax,(%esp)
 805ccd4:	e8 d7 56 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ccd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805cce0 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh>:
 805cce0:	55                   	push   %ebp
 805cce1:	57                   	push   %edi
 805cce2:	56                   	push   %esi
 805cce3:	53                   	push   %ebx
 805cce4:	e8 07 ce fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805cce9:	81 c3 17 33 05 00    	add    $0x53317,%ebx
 805ccef:	83 ec 2c             	sub    $0x2c,%esp
 805ccf2:	0f b6 44 24 4c       	movzbl 0x4c(%esp),%eax
 805ccf7:	8b 6c 24 40          	mov    0x40(%esp),%ebp
 805ccfb:	88 44 24 1f          	mov    %al,0x1f(%esp)
 805ccff:	e8 1c b8 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805cd04:	80 78 4e 00          	cmpb   $0x0,0x4e(%eax)
 805cd08:	0f 84 9a 00 00 00    	je     805cda8 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xc8>
 805cd0e:	f7 c5 07 00 00 00    	test   $0x7,%ebp
 805cd14:	0f 85 05 01 00 00    	jne    805ce1f <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x13f>
 805cd1a:	81 fd fe ff ff 1f    	cmp    $0x1ffffffe,%ebp
 805cd20:	76 26                	jbe    805cd48 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x68>
 805cd22:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805cd28:	8b 00                	mov    (%eax),%eax
 805cd2a:	85 c0                	test   %eax,%eax
 805cd2c:	0f 84 8e 00 00 00    	je     805cdc0 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xe0>
 805cd32:	39 c5                	cmp    %eax,%ebp
 805cd34:	0f 82 86 00 00 00    	jb     805cdc0 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xe0>
 805cd3a:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805cd40:	3b 28                	cmp    (%eax),%ebp
 805cd42:	77 7c                	ja     805cdc0 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xe0>
 805cd44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805cd48:	8b 44 24 48          	mov    0x48(%esp),%eax
 805cd4c:	c1 ed 03             	shr    $0x3,%ebp
 805cd4f:	81 c5 00 00 00 20    	add    $0x20000000,%ebp
 805cd55:	85 c0                	test   %eax,%eax
 805cd57:	74 4f                	je     805cda8 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xc8>
 805cd59:	8b 74 24 44          	mov    0x44(%esp),%esi
 805cd5d:	31 ff                	xor    %edi,%edi
 805cd5f:	31 c9                	xor    %ecx,%ecx
 805cd61:	eb 1b                	jmp    805cd7e <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x9e>
 805cd63:	90                   	nop
 805cd64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805cd68:	77 04                	ja     805cd6e <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x8e>
 805cd6a:	39 c6                	cmp    %eax,%esi
 805cd6c:	72 1e                	jb     805cd8c <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xac>
 805cd6e:	c6 45 00 00          	movb   $0x0,0x0(%ebp)
 805cd72:	83 c1 08             	add    $0x8,%ecx
 805cd75:	83 c5 01             	add    $0x1,%ebp
 805cd78:	39 4c 24 48          	cmp    %ecx,0x48(%esp)
 805cd7c:	76 2a                	jbe    805cda8 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xc8>
 805cd7e:	89 c8                	mov    %ecx,%eax
 805cd80:	31 d2                	xor    %edx,%edx
 805cd82:	83 c0 08             	add    $0x8,%eax
 805cd85:	83 d2 00             	adc    $0x0,%edx
 805cd88:	39 d7                	cmp    %edx,%edi
 805cd8a:	73 dc                	jae    805cd68 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x88>
 805cd8c:	39 4c 24 44          	cmp    %ecx,0x44(%esp)
 805cd90:	77 1e                	ja     805cdb0 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xd0>
 805cd92:	0f b6 44 24 1f       	movzbl 0x1f(%esp),%eax
 805cd97:	83 c1 08             	add    $0x8,%ecx
 805cd9a:	83 c5 01             	add    $0x1,%ebp
 805cd9d:	88 45 ff             	mov    %al,-0x1(%ebp)
 805cda0:	39 4c 24 48          	cmp    %ecx,0x48(%esp)
 805cda4:	77 d8                	ja     805cd7e <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x9e>
 805cda6:	66 90                	xchg   %ax,%ax
 805cda8:	83 c4 2c             	add    $0x2c,%esp
 805cdab:	5b                   	pop    %ebx
 805cdac:	5e                   	pop    %esi
 805cdad:	5f                   	pop    %edi
 805cdae:	5d                   	pop    %ebp
 805cdaf:	c3                   	ret    
 805cdb0:	0f b6 44 24 44       	movzbl 0x44(%esp),%eax
 805cdb5:	29 c8                	sub    %ecx,%eax
 805cdb7:	88 45 00             	mov    %al,0x0(%ebp)
 805cdba:	eb b6                	jmp    805cd72 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x92>
 805cdbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805cdc0:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805cdc6:	8b 00                	mov    (%eax),%eax
 805cdc8:	89 c2                	mov    %eax,%edx
 805cdca:	c1 ea 03             	shr    $0x3,%edx
 805cdcd:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805cdd3:	39 d5                	cmp    %edx,%ebp
 805cdd5:	72 08                	jb     805cddf <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0xff>
 805cdd7:	39 c5                	cmp    %eax,%ebp
 805cdd9:	0f 86 69 ff ff ff    	jbe    805cd48 <_ZN6__asan31PoisonShadowPartialRightRedzoneEmmmh+0x68>
 805cddf:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805cde5:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cde9:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805cdef:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805cdf6:	00 
 805cdf7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805cdfe:	00 
 805cdff:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ce06:	00 
 805ce07:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ce0e:	00 
 805ce0f:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805ce16:	00 
 805ce17:	89 04 24             	mov    %eax,(%esp)
 805ce1a:	e8 91 55 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ce1f:	8d 83 8c 54 fd ff    	lea    -0x2ab74(%ebx),%eax
 805ce25:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ce29:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805ce2f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ce36:	00 
 805ce37:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ce3e:	00 
 805ce3f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ce46:	00 
 805ce47:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ce4e:	00 
 805ce4f:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)
 805ce56:	00 
 805ce57:	89 04 24             	mov    %eax,(%esp)
 805ce5a:	e8 51 55 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ce5f:	90                   	nop

0805ce60 <__asan_poison_memory_region>:
 805ce60:	55                   	push   %ebp
 805ce61:	57                   	push   %edi
 805ce62:	56                   	push   %esi
 805ce63:	53                   	push   %ebx
 805ce64:	e8 87 cc fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ce69:	81 c3 97 31 05 00    	add    $0x53197,%ebx
 805ce6f:	83 ec 3c             	sub    $0x3c,%esp
 805ce72:	8b 74 24 50          	mov    0x50(%esp),%esi
 805ce76:	e8 a5 b6 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805ce7b:	80 78 2c 00          	cmpb   $0x0,0x2c(%eax)
 805ce7f:	74 08                	je     805ce89 <__asan_poison_memory_region+0x29>
 805ce81:	8b 54 24 54          	mov    0x54(%esp),%edx
 805ce85:	85 d2                	test   %edx,%edx
 805ce87:	75 0f                	jne    805ce98 <__asan_poison_memory_region+0x38>
 805ce89:	83 c4 3c             	add    $0x3c,%esp
 805ce8c:	5b                   	pop    %ebx
 805ce8d:	5e                   	pop    %esi
 805ce8e:	5f                   	pop    %edi
 805ce8f:	5d                   	pop    %ebp
 805ce90:	c3                   	ret    
 805ce91:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805ce98:	8b 7c 24 54          	mov    0x54(%esp),%edi
 805ce9c:	e8 7f b6 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805cea1:	01 f7                	add    %esi,%edi
 805cea3:	8b 40 08             	mov    0x8(%eax),%eax
 805cea6:	85 c0                	test   %eax,%eax
 805cea8:	7e 16                	jle    805cec0 <__asan_poison_memory_region+0x60>
 805ceaa:	8d 83 20 55 fd ff    	lea    -0x2aae0(%ebx),%eax
 805ceb0:	89 7c 24 08          	mov    %edi,0x8(%esp)
 805ceb4:	89 74 24 04          	mov    %esi,0x4(%esp)
 805ceb8:	89 04 24             	mov    %eax,(%esp)
 805cebb:	e8 c0 47 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805cec0:	81 fe fe ff ff 1f    	cmp    $0x1ffffffe,%esi
 805cec6:	76 74                	jbe    805cf3c <__asan_poison_memory_region+0xdc>
 805cec8:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805cece:	8b 00                	mov    (%eax),%eax
 805ced0:	85 c0                	test   %eax,%eax
 805ced2:	74 08                	je     805cedc <__asan_poison_memory_region+0x7c>
 805ced4:	39 c6                	cmp    %eax,%esi
 805ced6:	0f 83 84 01 00 00    	jae    805d060 <__asan_poison_memory_region+0x200>
 805cedc:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805cee2:	8b 00                	mov    (%eax),%eax
 805cee4:	89 c2                	mov    %eax,%edx
 805cee6:	c1 ea 03             	shr    $0x3,%edx
 805cee9:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805ceef:	39 d6                	cmp    %edx,%esi
 805cef1:	73 45                	jae    805cf38 <__asan_poison_memory_region+0xd8>
 805cef3:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805cef9:	89 44 24 08          	mov    %eax,0x8(%esp)
 805cefd:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805cf03:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805cf0a:	00 
 805cf0b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805cf12:	00 
 805cf13:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805cf1a:	00 
 805cf1b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805cf22:	00 
 805cf23:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805cf2a:	00 
 805cf2b:	89 04 24             	mov    %eax,(%esp)
 805cf2e:	e8 7d 54 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805cf33:	90                   	nop
 805cf34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805cf38:	39 c6                	cmp    %eax,%esi
 805cf3a:	77 b7                	ja     805cef3 <__asan_poison_memory_region+0x93>
 805cf3c:	89 f2                	mov    %esi,%edx
 805cf3e:	89 f1                	mov    %esi,%ecx
 805cf40:	c1 ea 03             	shr    $0x3,%edx
 805cf43:	83 e1 07             	and    $0x7,%ecx
 805cf46:	89 54 24 28          	mov    %edx,0x28(%esp)
 805cf4a:	89 d0                	mov    %edx,%eax
 805cf4c:	89 ca                	mov    %ecx,%edx
 805cf4e:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 805cf52:	05 00 00 00 20       	add    $0x20000000,%eax
 805cf57:	81 ff fe ff ff 1f    	cmp    $0x1ffffffe,%edi
 805cf5d:	0f b6 89 00 00 00 20 	movzbl 0x20000000(%ecx),%ecx
 805cf64:	88 4c 24 2e          	mov    %cl,0x2e(%esp)
 805cf68:	76 37                	jbe    805cfa1 <__asan_poison_memory_region+0x141>
 805cf6a:	8d b3 04 bc 02 00    	lea    0x2bc04(%ebx),%esi
 805cf70:	8b 36                	mov    (%esi),%esi
 805cf72:	85 f6                	test   %esi,%esi
 805cf74:	74 08                	je     805cf7e <__asan_poison_memory_region+0x11e>
 805cf76:	39 f7                	cmp    %esi,%edi
 805cf78:	0f 83 ca 00 00 00    	jae    805d048 <__asan_poison_memory_region+0x1e8>
 805cf7e:	8d b3 08 bc 02 00    	lea    0x2bc08(%ebx),%esi
 805cf84:	8b 36                	mov    (%esi),%esi
 805cf86:	89 f5                	mov    %esi,%ebp
 805cf88:	c1 ed 03             	shr    $0x3,%ebp
 805cf8b:	81 c5 01 00 00 20    	add    $0x20000001,%ebp
 805cf91:	39 ef                	cmp    %ebp,%edi
 805cf93:	0f 82 5a ff ff ff    	jb     805cef3 <__asan_poison_memory_region+0x93>
 805cf99:	39 f7                	cmp    %esi,%edi
 805cf9b:	0f 87 52 ff ff ff    	ja     805cef3 <__asan_poison_memory_region+0x93>
 805cfa1:	89 fe                	mov    %edi,%esi
 805cfa3:	89 f9                	mov    %edi,%ecx
 805cfa5:	c1 ee 03             	shr    $0x3,%esi
 805cfa8:	83 e1 07             	and    $0x7,%ecx
 805cfab:	88 4c 24 2f          	mov    %cl,0x2f(%esp)
 805cfaf:	0f b6 8e 00 00 00 20 	movzbl 0x20000000(%esi),%ecx
 805cfb6:	8d ae 00 00 00 20    	lea    0x20000000(%esi),%ebp
 805cfbc:	39 e8                	cmp    %ebp,%eax
 805cfbe:	88 4c 24 2d          	mov    %cl,0x2d(%esp)
 805cfc2:	0f 84 b0 00 00 00    	je     805d078 <__asan_poison_memory_region+0x218>
 805cfc8:	0f 83 10 01 00 00    	jae    805d0de <__asan_poison_memory_region+0x27e>
 805cfce:	84 d2                	test   %dl,%dl
 805cfd0:	74 14                	je     805cfe6 <__asan_poison_memory_region+0x186>
 805cfd2:	80 7c 24 2e 00       	cmpb   $0x0,0x2e(%esp)
 805cfd7:	75 4f                	jne    805d028 <__asan_poison_memory_region+0x1c8>
 805cfd9:	8b 7c 24 28          	mov    0x28(%esp),%edi
 805cfdd:	88 97 00 00 00 20    	mov    %dl,0x20000000(%edi)
 805cfe3:	83 c0 01             	add    $0x1,%eax
 805cfe6:	29 c5                	sub    %eax,%ebp
 805cfe8:	89 04 24             	mov    %eax,(%esp)
 805cfeb:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 805cff1:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805cff5:	c7 44 24 04 f7 00 00 	movl   $0xf7,0x4(%esp)
 805cffc:	00 
 805cffd:	ff 10                	call   *(%eax)
 805cfff:	0f b6 44 24 2d       	movzbl 0x2d(%esp),%eax
 805d004:	84 c0                	test   %al,%al
 805d006:	0f 8e 7d fe ff ff    	jle    805ce89 <__asan_poison_memory_region+0x29>
 805d00c:	38 44 24 2f          	cmp    %al,0x2f(%esp)
 805d010:	0f 8c 73 fe ff ff    	jl     805ce89 <__asan_poison_memory_region+0x29>
 805d016:	c6 86 00 00 00 20 f7 	movb   $0xf7,0x20000000(%esi)
 805d01d:	83 c4 3c             	add    $0x3c,%esp
 805d020:	5b                   	pop    %ebx
 805d021:	5e                   	pop    %esi
 805d022:	5f                   	pop    %edi
 805d023:	5d                   	pop    %ebp
 805d024:	c3                   	ret    
 805d025:	8d 76 00             	lea    0x0(%esi),%esi
 805d028:	0f b6 4c 24 2e       	movzbl 0x2e(%esp),%ecx
 805d02d:	89 d7                	mov    %edx,%edi
 805d02f:	38 d1                	cmp    %dl,%cl
 805d031:	8b 54 24 28          	mov    0x28(%esp),%edx
 805d035:	0f 4e f9             	cmovle %ecx,%edi
 805d038:	89 f9                	mov    %edi,%ecx
 805d03a:	88 8a 00 00 00 20    	mov    %cl,0x20000000(%edx)
 805d040:	eb a1                	jmp    805cfe3 <__asan_poison_memory_region+0x183>
 805d042:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d048:	8d b3 00 bc 02 00    	lea    0x2bc00(%ebx),%esi
 805d04e:	3b 3e                	cmp    (%esi),%edi
 805d050:	0f 86 4b ff ff ff    	jbe    805cfa1 <__asan_poison_memory_region+0x141>
 805d056:	e9 23 ff ff ff       	jmp    805cf7e <__asan_poison_memory_region+0x11e>
 805d05b:	90                   	nop
 805d05c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805d060:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805d066:	3b 30                	cmp    (%eax),%esi
 805d068:	0f 86 ce fe ff ff    	jbe    805cf3c <__asan_poison_memory_region+0xdc>
 805d06e:	66 90                	xchg   %ax,%ax
 805d070:	e9 67 fe ff ff       	jmp    805cedc <__asan_poison_memory_region+0x7c>
 805d075:	8d 76 00             	lea    0x0(%esi),%esi
 805d078:	0f b6 44 24 2f       	movzbl 0x2f(%esp),%eax
 805d07d:	38 c2                	cmp    %al,%dl
 805d07f:	0f 8d d9 00 00 00    	jge    805d15e <__asan_poison_memory_region+0x2fe>
 805d085:	0f b6 44 24 2d       	movzbl 0x2d(%esp),%eax
 805d08a:	38 44 24 2e          	cmp    %al,0x2e(%esp)
 805d08e:	0f 85 8a 00 00 00    	jne    805d11e <__asan_poison_memory_region+0x2be>
 805d094:	0f b6 7c 24 2e       	movzbl 0x2e(%esp),%edi
 805d099:	89 f8                	mov    %edi,%eax
 805d09b:	84 c0                	test   %al,%al
 805d09d:	0f 8e e6 fd ff ff    	jle    805ce89 <__asan_poison_memory_region+0x29>
 805d0a3:	0f b6 44 24 2f       	movzbl 0x2f(%esp),%eax
 805d0a8:	89 f9                	mov    %edi,%ecx
 805d0aa:	38 c1                	cmp    %al,%cl
 805d0ac:	0f 8f d7 fd ff ff    	jg     805ce89 <__asan_poison_memory_region+0x29>
 805d0b2:	84 d2                	test   %dl,%dl
 805d0b4:	89 d1                	mov    %edx,%ecx
 805d0b6:	74 16                	je     805d0ce <__asan_poison_memory_region+0x26e>
 805d0b8:	89 f8                	mov    %edi,%eax
 805d0ba:	38 d0                	cmp    %dl,%al
 805d0bc:	0f 4e c8             	cmovle %eax,%ecx
 805d0bf:	8b 44 24 28          	mov    0x28(%esp),%eax
 805d0c3:	88 88 00 00 00 20    	mov    %cl,0x20000000(%eax)
 805d0c9:	e9 bb fd ff ff       	jmp    805ce89 <__asan_poison_memory_region+0x29>
 805d0ce:	8b 44 24 28          	mov    0x28(%esp),%eax
 805d0d2:	c6 80 00 00 00 20 f7 	movb   $0xf7,0x20000000(%eax)
 805d0d9:	e9 ab fd ff ff       	jmp    805ce89 <__asan_poison_memory_region+0x29>
 805d0de:	8d 83 70 55 fd ff    	lea    -0x2aa90(%ebx),%eax
 805d0e4:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d0e8:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d0ee:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d0f5:	00 
 805d0f6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d0fd:	00 
 805d0fe:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d105:	00 
 805d106:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d10d:	00 
 805d10e:	c7 44 24 04 66 00 00 	movl   $0x66,0x4(%esp)
 805d115:	00 
 805d116:	89 04 24             	mov    %eax,(%esp)
 805d119:	e8 92 52 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d11e:	8d 83 0e 56 fd ff    	lea    -0x2a9f2(%ebx),%eax
 805d124:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d128:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d12e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d135:	00 
 805d136:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d13d:	00 
 805d13e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d145:	00 
 805d146:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d14d:	00 
 805d14e:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)
 805d155:	00 
 805d156:	89 04 24             	mov    %eax,(%esp)
 805d159:	e8 52 52 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d15e:	8d 83 4c 55 fd ff    	lea    -0x2aab4(%ebx),%eax
 805d164:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d168:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d16e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d175:	00 
 805d176:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d17d:	00 
 805d17e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d185:	00 
 805d186:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d18d:	00 
 805d18e:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)
 805d195:	00 
 805d196:	89 04 24             	mov    %eax,(%esp)
 805d199:	e8 12 52 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d19e:	66 90                	xchg   %ax,%ax

0805d1a0 <__asan_unpoison_memory_region>:
 805d1a0:	55                   	push   %ebp
 805d1a1:	57                   	push   %edi
 805d1a2:	56                   	push   %esi
 805d1a3:	53                   	push   %ebx
 805d1a4:	e8 47 c9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805d1a9:	81 c3 57 2e 05 00    	add    $0x52e57,%ebx
 805d1af:	83 ec 2c             	sub    $0x2c,%esp
 805d1b2:	8b 74 24 40          	mov    0x40(%esp),%esi
 805d1b6:	e8 65 b3 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805d1bb:	80 78 2c 00          	cmpb   $0x0,0x2c(%eax)
 805d1bf:	74 08                	je     805d1c9 <__asan_unpoison_memory_region+0x29>
 805d1c1:	8b 54 24 44          	mov    0x44(%esp),%edx
 805d1c5:	85 d2                	test   %edx,%edx
 805d1c7:	75 0f                	jne    805d1d8 <__asan_unpoison_memory_region+0x38>
 805d1c9:	83 c4 2c             	add    $0x2c,%esp
 805d1cc:	5b                   	pop    %ebx
 805d1cd:	5e                   	pop    %esi
 805d1ce:	5f                   	pop    %edi
 805d1cf:	5d                   	pop    %ebp
 805d1d0:	c3                   	ret    
 805d1d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805d1d8:	8b 7c 24 44          	mov    0x44(%esp),%edi
 805d1dc:	e8 3f b3 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805d1e1:	01 f7                	add    %esi,%edi
 805d1e3:	8b 40 08             	mov    0x8(%eax),%eax
 805d1e6:	85 c0                	test   %eax,%eax
 805d1e8:	7e 16                	jle    805d200 <__asan_unpoison_memory_region+0x60>
 805d1ea:	8d 83 94 55 fd ff    	lea    -0x2aa6c(%ebx),%eax
 805d1f0:	89 7c 24 08          	mov    %edi,0x8(%esp)
 805d1f4:	89 74 24 04          	mov    %esi,0x4(%esp)
 805d1f8:	89 04 24             	mov    %eax,(%esp)
 805d1fb:	e8 80 44 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805d200:	81 fe fe ff ff 1f    	cmp    $0x1ffffffe,%esi
 805d206:	76 74                	jbe    805d27c <__asan_unpoison_memory_region+0xdc>
 805d208:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805d20e:	8b 00                	mov    (%eax),%eax
 805d210:	85 c0                	test   %eax,%eax
 805d212:	74 08                	je     805d21c <__asan_unpoison_memory_region+0x7c>
 805d214:	39 c6                	cmp    %eax,%esi
 805d216:	0f 83 54 01 00 00    	jae    805d370 <__asan_unpoison_memory_region+0x1d0>
 805d21c:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805d222:	8b 00                	mov    (%eax),%eax
 805d224:	89 c2                	mov    %eax,%edx
 805d226:	c1 ea 03             	shr    $0x3,%edx
 805d229:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805d22f:	39 d6                	cmp    %edx,%esi
 805d231:	73 45                	jae    805d278 <__asan_unpoison_memory_region+0xd8>
 805d233:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805d239:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d23d:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805d243:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d24a:	00 
 805d24b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d252:	00 
 805d253:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d25a:	00 
 805d25b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d262:	00 
 805d263:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805d26a:	00 
 805d26b:	89 04 24             	mov    %eax,(%esp)
 805d26e:	e8 3d 51 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d273:	90                   	nop
 805d274:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805d278:	39 c6                	cmp    %eax,%esi
 805d27a:	77 b7                	ja     805d233 <__asan_unpoison_memory_region+0x93>
 805d27c:	89 f2                	mov    %esi,%edx
 805d27e:	89 f1                	mov    %esi,%ecx
 805d280:	c1 ea 03             	shr    $0x3,%edx
 805d283:	83 e1 07             	and    $0x7,%ecx
 805d286:	88 4c 24 1e          	mov    %cl,0x1e(%esp)
 805d28a:	0f b6 8a 00 00 00 20 	movzbl 0x20000000(%edx),%ecx
 805d291:	81 ff fe ff ff 1f    	cmp    $0x1ffffffe,%edi
 805d297:	8d 82 00 00 00 20    	lea    0x20000000(%edx),%eax
 805d29d:	88 4c 24 1f          	mov    %cl,0x1f(%esp)
 805d2a1:	76 37                	jbe    805d2da <__asan_unpoison_memory_region+0x13a>
 805d2a3:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 805d2a9:	8b 09                	mov    (%ecx),%ecx
 805d2ab:	85 c9                	test   %ecx,%ecx
 805d2ad:	74 08                	je     805d2b7 <__asan_unpoison_memory_region+0x117>
 805d2af:	39 cf                	cmp    %ecx,%edi
 805d2b1:	0f 83 a1 00 00 00    	jae    805d358 <__asan_unpoison_memory_region+0x1b8>
 805d2b7:	8d 8b 08 bc 02 00    	lea    0x2bc08(%ebx),%ecx
 805d2bd:	8b 09                	mov    (%ecx),%ecx
 805d2bf:	89 ce                	mov    %ecx,%esi
 805d2c1:	c1 ee 03             	shr    $0x3,%esi
 805d2c4:	81 c6 01 00 00 20    	add    $0x20000001,%esi
 805d2ca:	39 f7                	cmp    %esi,%edi
 805d2cc:	0f 82 61 ff ff ff    	jb     805d233 <__asan_unpoison_memory_region+0x93>
 805d2d2:	39 cf                	cmp    %ecx,%edi
 805d2d4:	0f 87 59 ff ff ff    	ja     805d233 <__asan_unpoison_memory_region+0x93>
 805d2da:	89 fe                	mov    %edi,%esi
 805d2dc:	83 e7 07             	and    $0x7,%edi
 805d2df:	c1 ee 03             	shr    $0x3,%esi
 805d2e2:	8d 8e 00 00 00 20    	lea    0x20000000(%esi),%ecx
 805d2e8:	0f b6 ae 00 00 00 20 	movzbl 0x20000000(%esi),%ebp
 805d2ef:	39 c8                	cmp    %ecx,%eax
 805d2f1:	0f 84 91 00 00 00    	je     805d388 <__asan_unpoison_memory_region+0x1e8>
 805d2f7:	0f 83 c3 00 00 00    	jae    805d3c0 <__asan_unpoison_memory_region+0x220>
 805d2fd:	80 7c 24 1e 00       	cmpb   $0x0,0x1e(%esp)
 805d302:	74 0a                	je     805d30e <__asan_unpoison_memory_region+0x16e>
 805d304:	c6 82 00 00 00 20 00 	movb   $0x0,0x20000000(%edx)
 805d30b:	83 c0 01             	add    $0x1,%eax
 805d30e:	29 c1                	sub    %eax,%ecx
 805d310:	89 04 24             	mov    %eax,(%esp)
 805d313:	8d 83 34 bb 02 00    	lea    0x2bb34(%ebx),%eax
 805d319:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805d31d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 805d324:	00 
 805d325:	ff 10                	call   *(%eax)
 805d327:	89 f8                	mov    %edi,%eax
 805d329:	84 c0                	test   %al,%al
 805d32b:	0f 84 98 fe ff ff    	je     805d1c9 <__asan_unpoison_memory_region+0x29>
 805d331:	89 e8                	mov    %ebp,%eax
 805d333:	84 c0                	test   %al,%al
 805d335:	0f 84 8e fe ff ff    	je     805d1c9 <__asan_unpoison_memory_region+0x29>
 805d33b:	89 fa                	mov    %edi,%edx
 805d33d:	38 d0                	cmp    %dl,%al
 805d33f:	89 f8                	mov    %edi,%eax
 805d341:	0f 4d c5             	cmovge %ebp,%eax
 805d344:	88 86 00 00 00 20    	mov    %al,0x20000000(%esi)
 805d34a:	83 c4 2c             	add    $0x2c,%esp
 805d34d:	5b                   	pop    %ebx
 805d34e:	5e                   	pop    %esi
 805d34f:	5f                   	pop    %edi
 805d350:	5d                   	pop    %ebp
 805d351:	c3                   	ret    
 805d352:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d358:	8d 8b 00 bc 02 00    	lea    0x2bc00(%ebx),%ecx
 805d35e:	3b 39                	cmp    (%ecx),%edi
 805d360:	0f 86 74 ff ff ff    	jbe    805d2da <__asan_unpoison_memory_region+0x13a>
 805d366:	e9 4c ff ff ff       	jmp    805d2b7 <__asan_unpoison_memory_region+0x117>
 805d36b:	90                   	nop
 805d36c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805d370:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805d376:	3b 30                	cmp    (%eax),%esi
 805d378:	0f 86 fe fe ff ff    	jbe    805d27c <__asan_unpoison_memory_region+0xdc>
 805d37e:	66 90                	xchg   %ax,%ax
 805d380:	e9 97 fe ff ff       	jmp    805d21c <__asan_unpoison_memory_region+0x7c>
 805d385:	8d 76 00             	lea    0x0(%esi),%esi
 805d388:	89 f8                	mov    %edi,%eax
 805d38a:	38 44 24 1e          	cmp    %al,0x1e(%esp)
 805d38e:	0f 8d ac 00 00 00    	jge    805d440 <__asan_unpoison_memory_region+0x2a0>
 805d394:	89 e8                	mov    %ebp,%eax
 805d396:	38 44 24 1f          	cmp    %al,0x1f(%esp)
 805d39a:	75 64                	jne    805d400 <__asan_unpoison_memory_region+0x260>
 805d39c:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805d3a1:	0f 84 22 fe ff ff    	je     805d1c9 <__asan_unpoison_memory_region+0x29>
 805d3a7:	0f b6 4c 24 1f       	movzbl 0x1f(%esp),%ecx
 805d3ac:	89 f8                	mov    %edi,%eax
 805d3ae:	38 c1                	cmp    %al,%cl
 805d3b0:	89 c8                	mov    %ecx,%eax
 805d3b2:	0f 4c c7             	cmovl  %edi,%eax
 805d3b5:	88 82 00 00 00 20    	mov    %al,0x20000000(%edx)
 805d3bb:	e9 09 fe ff ff       	jmp    805d1c9 <__asan_unpoison_memory_region+0x29>
 805d3c0:	8d 83 70 55 fd ff    	lea    -0x2aa90(%ebx),%eax
 805d3c6:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d3ca:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d3d0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d3d7:	00 
 805d3d8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d3df:	00 
 805d3e0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d3e7:	00 
 805d3e8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d3ef:	00 
 805d3f0:	c7 44 24 04 8c 00 00 	movl   $0x8c,0x4(%esp)
 805d3f7:	00 
 805d3f8:	89 04 24             	mov    %eax,(%esp)
 805d3fb:	e8 b0 4f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d400:	8d 83 0e 56 fd ff    	lea    -0x2a9f2(%ebx),%eax
 805d406:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d40a:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d410:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d417:	00 
 805d418:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d41f:	00 
 805d420:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d427:	00 
 805d428:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d42f:	00 
 805d430:	c7 44 24 04 84 00 00 	movl   $0x84,0x4(%esp)
 805d437:	00 
 805d438:	89 04 24             	mov    %eax,(%esp)
 805d43b:	e8 70 4f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d440:	8d 83 4c 55 fd ff    	lea    -0x2aab4(%ebx),%eax
 805d446:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d44a:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d450:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d457:	00 
 805d458:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d45f:	00 
 805d460:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d467:	00 
 805d468:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d46f:	00 
 805d470:	c7 44 24 04 82 00 00 	movl   $0x82,0x4(%esp)
 805d477:	00 
 805d478:	89 04 24             	mov    %eax,(%esp)
 805d47b:	e8 30 4f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0805d480 <__asan_address_is_poisoned>:
 805d480:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 805d484:	89 c8                	mov    %ecx,%eax
 805d486:	c1 e8 03             	shr    $0x3,%eax
 805d489:	0f be 90 00 00 00 20 	movsbl 0x20000000(%eax),%edx
 805d490:	31 c0                	xor    %eax,%eax
 805d492:	84 d2                	test   %dl,%dl
 805d494:	74 08                	je     805d49e <__asan_address_is_poisoned+0x1e>
 805d496:	83 e1 07             	and    $0x7,%ecx
 805d499:	39 d1                	cmp    %edx,%ecx
 805d49b:	0f 9d c0             	setge  %al
 805d49e:	f3 c3                	repz ret 

0805d4a0 <__asan_region_is_poisoned>:
 805d4a0:	55                   	push   %ebp
 805d4a1:	57                   	push   %edi
 805d4a2:	56                   	push   %esi
 805d4a3:	53                   	push   %ebx
 805d4a4:	83 ec 2c             	sub    $0x2c,%esp
 805d4a7:	8b 7c 24 44          	mov    0x44(%esp),%edi
 805d4ab:	e8 40 c6 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805d4b0:	81 c3 50 2b 05 00    	add    $0x52b50,%ebx
 805d4b6:	8b 74 24 40          	mov    0x40(%esp),%esi
 805d4ba:	85 ff                	test   %edi,%edi
 805d4bc:	0f 84 86 01 00 00    	je     805d648 <__asan_region_is_poisoned+0x1a8>
 805d4c2:	81 fe fe ff ff 1f    	cmp    $0x1ffffffe,%esi
 805d4c8:	76 26                	jbe    805d4f0 <__asan_region_is_poisoned+0x50>
 805d4ca:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805d4d0:	8b 00                	mov    (%eax),%eax
 805d4d2:	85 c0                	test   %eax,%eax
 805d4d4:	0f 84 06 01 00 00    	je     805d5e0 <__asan_region_is_poisoned+0x140>
 805d4da:	39 c6                	cmp    %eax,%esi
 805d4dc:	0f 82 fe 00 00 00    	jb     805d5e0 <__asan_region_is_poisoned+0x140>
 805d4e2:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805d4e8:	3b 30                	cmp    (%eax),%esi
 805d4ea:	0f 87 f0 00 00 00    	ja     805d5e0 <__asan_region_is_poisoned+0x140>
 805d4f0:	01 f7                	add    %esi,%edi
 805d4f2:	81 ff fe ff ff 1f    	cmp    $0x1ffffffe,%edi
 805d4f8:	76 26                	jbe    805d520 <__asan_region_is_poisoned+0x80>
 805d4fa:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805d500:	8b 00                	mov    (%eax),%eax
 805d502:	85 c0                	test   %eax,%eax
 805d504:	0f 84 4e 01 00 00    	je     805d658 <__asan_region_is_poisoned+0x1b8>
 805d50a:	39 c7                	cmp    %eax,%edi
 805d50c:	0f 82 46 01 00 00    	jb     805d658 <__asan_region_is_poisoned+0x1b8>
 805d512:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805d518:	3b 38                	cmp    (%eax),%edi
 805d51a:	0f 87 38 01 00 00    	ja     805d658 <__asan_region_is_poisoned+0x1b8>
 805d520:	8d 46 07             	lea    0x7(%esi),%eax
 805d523:	89 fa                	mov    %edi,%edx
 805d525:	83 e0 f8             	and    $0xfffffff8,%eax
 805d528:	83 e2 f8             	and    $0xfffffff8,%edx
 805d52b:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805d530:	76 26                	jbe    805d558 <__asan_region_is_poisoned+0xb8>
 805d532:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 805d538:	8b 09                	mov    (%ecx),%ecx
 805d53a:	85 c9                	test   %ecx,%ecx
 805d53c:	0f 84 46 01 00 00    	je     805d688 <__asan_region_is_poisoned+0x1e8>
 805d542:	39 c8                	cmp    %ecx,%eax
 805d544:	0f 82 3e 01 00 00    	jb     805d688 <__asan_region_is_poisoned+0x1e8>
 805d54a:	8d 8b 00 bc 02 00    	lea    0x2bc00(%ebx),%ecx
 805d550:	3b 01                	cmp    (%ecx),%eax
 805d552:	0f 87 30 01 00 00    	ja     805d688 <__asan_region_is_poisoned+0x1e8>
 805d558:	81 fa fe ff ff 1f    	cmp    $0x1ffffffe,%edx
 805d55e:	76 28                	jbe    805d588 <__asan_region_is_poisoned+0xe8>
 805d560:	8d 8b 04 bc 02 00    	lea    0x2bc04(%ebx),%ecx
 805d566:	8b 09                	mov    (%ecx),%ecx
 805d568:	85 c9                	test   %ecx,%ecx
 805d56a:	0f 84 78 01 00 00    	je     805d6e8 <__asan_region_is_poisoned+0x248>
 805d570:	39 ca                	cmp    %ecx,%edx
 805d572:	0f 82 70 01 00 00    	jb     805d6e8 <__asan_region_is_poisoned+0x248>
 805d578:	8d 8b 00 bc 02 00    	lea    0x2bc00(%ebx),%ecx
 805d57e:	3b 11                	cmp    (%ecx),%edx
 805d580:	0f 87 62 01 00 00    	ja     805d6e8 <__asan_region_is_poisoned+0x248>
 805d586:	66 90                	xchg   %ax,%ax
 805d588:	89 f1                	mov    %esi,%ecx
 805d58a:	c1 e9 03             	shr    $0x3,%ecx
 805d58d:	0f be 89 00 00 00 20 	movsbl 0x20000000(%ecx),%ecx
 805d594:	84 c9                	test   %cl,%cl
 805d596:	74 68                	je     805d600 <__asan_region_is_poisoned+0x160>
 805d598:	89 f5                	mov    %esi,%ebp
 805d59a:	83 e5 07             	and    $0x7,%ebp
 805d59d:	39 cd                	cmp    %ecx,%ebp
 805d59f:	7c 5f                	jl     805d600 <__asan_region_is_poisoned+0x160>
 805d5a1:	39 fe                	cmp    %edi,%esi
 805d5a3:	72 16                	jb     805d5bb <__asan_region_is_poisoned+0x11b>
 805d5a5:	e9 7b 01 00 00       	jmp    805d725 <__asan_region_is_poisoned+0x285>
 805d5aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d5b0:	83 c6 01             	add    $0x1,%esi
 805d5b3:	39 f7                	cmp    %esi,%edi
 805d5b5:	0f 86 6a 01 00 00    	jbe    805d725 <__asan_region_is_poisoned+0x285>
 805d5bb:	89 f2                	mov    %esi,%edx
 805d5bd:	c1 ea 03             	shr    $0x3,%edx
 805d5c0:	0f be 92 00 00 00 20 	movsbl 0x20000000(%edx),%edx
 805d5c7:	84 d2                	test   %dl,%dl
 805d5c9:	74 e5                	je     805d5b0 <__asan_region_is_poisoned+0x110>
 805d5cb:	89 f0                	mov    %esi,%eax
 805d5cd:	83 e0 07             	and    $0x7,%eax
 805d5d0:	39 d0                	cmp    %edx,%eax
 805d5d2:	7c dc                	jl     805d5b0 <__asan_region_is_poisoned+0x110>
 805d5d4:	83 c4 2c             	add    $0x2c,%esp
 805d5d7:	89 f0                	mov    %esi,%eax
 805d5d9:	5b                   	pop    %ebx
 805d5da:	5e                   	pop    %esi
 805d5db:	5f                   	pop    %edi
 805d5dc:	5d                   	pop    %ebp
 805d5dd:	c3                   	ret    
 805d5de:	66 90                	xchg   %ax,%ax
 805d5e0:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805d5e6:	8b 00                	mov    (%eax),%eax
 805d5e8:	89 c2                	mov    %eax,%edx
 805d5ea:	c1 ea 03             	shr    $0x3,%edx
 805d5ed:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805d5f3:	39 d6                	cmp    %edx,%esi
 805d5f5:	72 dd                	jb     805d5d4 <__asan_region_is_poisoned+0x134>
 805d5f7:	39 c6                	cmp    %eax,%esi
 805d5f9:	77 d9                	ja     805d5d4 <__asan_region_is_poisoned+0x134>
 805d5fb:	e9 f0 fe ff ff       	jmp    805d4f0 <__asan_region_is_poisoned+0x50>
 805d600:	8d 6f ff             	lea    -0x1(%edi),%ebp
 805d603:	89 e9                	mov    %ebp,%ecx
 805d605:	c1 e9 03             	shr    $0x3,%ecx
 805d608:	0f be 89 00 00 00 20 	movsbl 0x20000000(%ecx),%ecx
 805d60f:	84 c9                	test   %cl,%cl
 805d611:	0f 85 f9 00 00 00    	jne    805d710 <__asan_region_is_poisoned+0x270>
 805d617:	c1 e8 03             	shr    $0x3,%eax
 805d61a:	c1 ea 03             	shr    $0x3,%edx
 805d61d:	05 00 00 00 20       	add    $0x20000000,%eax
 805d622:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 805d628:	39 d0                	cmp    %edx,%eax
 805d62a:	73 1c                	jae    805d648 <__asan_region_is_poisoned+0x1a8>
 805d62c:	29 c2                	sub    %eax,%edx
 805d62e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805d632:	89 04 24             	mov    %eax,(%esp)
 805d635:	e8 c6 48 00 00       	call   8061f00 <_ZN11__sanitizer11mem_is_zeroEPKcm>
 805d63a:	84 c0                	test   %al,%al
 805d63c:	0f 84 5f ff ff ff    	je     805d5a1 <__asan_region_is_poisoned+0x101>
 805d642:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d648:	83 c4 2c             	add    $0x2c,%esp
 805d64b:	31 c0                	xor    %eax,%eax
 805d64d:	5b                   	pop    %ebx
 805d64e:	5e                   	pop    %esi
 805d64f:	5f                   	pop    %edi
 805d650:	5d                   	pop    %ebp
 805d651:	c3                   	ret    
 805d652:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d658:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805d65e:	8b 00                	mov    (%eax),%eax
 805d660:	89 c2                	mov    %eax,%edx
 805d662:	c1 ea 03             	shr    $0x3,%edx
 805d665:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805d66b:	39 d7                	cmp    %edx,%edi
 805d66d:	72 08                	jb     805d677 <__asan_region_is_poisoned+0x1d7>
 805d66f:	39 c7                	cmp    %eax,%edi
 805d671:	0f 86 a9 fe ff ff    	jbe    805d520 <__asan_region_is_poisoned+0x80>
 805d677:	83 c4 2c             	add    $0x2c,%esp
 805d67a:	89 f8                	mov    %edi,%eax
 805d67c:	5b                   	pop    %ebx
 805d67d:	5e                   	pop    %esi
 805d67e:	5f                   	pop    %edi
 805d67f:	5d                   	pop    %ebp
 805d680:	c3                   	ret    
 805d681:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805d688:	8d 8b 08 bc 02 00    	lea    0x2bc08(%ebx),%ecx
 805d68e:	8b 09                	mov    (%ecx),%ecx
 805d690:	89 cd                	mov    %ecx,%ebp
 805d692:	c1 ed 03             	shr    $0x3,%ebp
 805d695:	81 c5 01 00 00 20    	add    $0x20000001,%ebp
 805d69b:	39 e8                	cmp    %ebp,%eax
 805d69d:	72 08                	jb     805d6a7 <__asan_region_is_poisoned+0x207>
 805d69f:	39 c8                	cmp    %ecx,%eax
 805d6a1:	0f 86 b1 fe ff ff    	jbe    805d558 <__asan_region_is_poisoned+0xb8>
 805d6a7:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805d6ad:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d6b1:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805d6b7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d6be:	00 
 805d6bf:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d6c6:	00 
 805d6c7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d6ce:	00 
 805d6cf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d6d6:	00 
 805d6d7:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805d6de:	00 
 805d6df:	89 04 24             	mov    %eax,(%esp)
 805d6e2:	e8 c9 4c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d6e7:	90                   	nop
 805d6e8:	8d 8b 08 bc 02 00    	lea    0x2bc08(%ebx),%ecx
 805d6ee:	8b 09                	mov    (%ecx),%ecx
 805d6f0:	89 cd                	mov    %ecx,%ebp
 805d6f2:	c1 ed 03             	shr    $0x3,%ebp
 805d6f5:	81 c5 01 00 00 20    	add    $0x20000001,%ebp
 805d6fb:	39 ea                	cmp    %ebp,%edx
 805d6fd:	72 a8                	jb     805d6a7 <__asan_region_is_poisoned+0x207>
 805d6ff:	39 ca                	cmp    %ecx,%edx
 805d701:	0f 86 81 fe ff ff    	jbe    805d588 <__asan_region_is_poisoned+0xe8>
 805d707:	eb 9e                	jmp    805d6a7 <__asan_region_is_poisoned+0x207>
 805d709:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805d710:	83 e5 07             	and    $0x7,%ebp
 805d713:	39 cd                	cmp    %ecx,%ebp
 805d715:	0f 8d 86 fe ff ff    	jge    805d5a1 <__asan_region_is_poisoned+0x101>
 805d71b:	90                   	nop
 805d71c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805d720:	e9 f2 fe ff ff       	jmp    805d617 <__asan_region_is_poisoned+0x177>
 805d725:	8d 83 c0 55 fd ff    	lea    -0x2aa40(%ebx),%eax
 805d72b:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d72f:	8d 83 b8 54 fd ff    	lea    -0x2ab48(%ebx),%eax
 805d735:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d73c:	00 
 805d73d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d744:	00 
 805d745:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d74c:	00 
 805d74d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d754:	00 
 805d755:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)
 805d75c:	00 
 805d75d:	89 04 24             	mov    %eax,(%esp)
 805d760:	e8 4b 4c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d765:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805d769:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805d770 <__asan_poison_stack_memory>:
 805d770:	55                   	push   %ebp
 805d771:	57                   	push   %edi
 805d772:	56                   	push   %esi
 805d773:	53                   	push   %ebx
 805d774:	e8 77 c3 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805d779:	81 c3 87 28 05 00    	add    $0x52887,%ebx
 805d77f:	83 ec 2c             	sub    $0x2c,%esp
 805d782:	8b 7c 24 40          	mov    0x40(%esp),%edi
 805d786:	8b 74 24 44          	mov    0x44(%esp),%esi
 805d78a:	e8 91 ad ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805d78f:	8b 40 08             	mov    0x8(%eax),%eax
 805d792:	85 c0                	test   %eax,%eax
 805d794:	7e 16                	jle    805d7ac <__asan_poison_stack_memory+0x3c>
 805d796:	8d 83 2e 56 fd ff    	lea    -0x2a9d2(%ebx),%eax
 805d79c:	89 74 24 08          	mov    %esi,0x8(%esp)
 805d7a0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805d7a4:	89 04 24             	mov    %eax,(%esp)
 805d7a7:	e8 94 3f 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805d7ac:	85 f6                	test   %esi,%esi
 805d7ae:	75 08                	jne    805d7b8 <__asan_poison_stack_memory+0x48>
 805d7b0:	83 c4 2c             	add    $0x2c,%esp
 805d7b3:	5b                   	pop    %ebx
 805d7b4:	5e                   	pop    %esi
 805d7b5:	5f                   	pop    %edi
 805d7b6:	5d                   	pop    %ebp
 805d7b7:	c3                   	ret    
 805d7b8:	89 f5                	mov    %esi,%ebp
 805d7ba:	83 e5 f8             	and    $0xfffffff8,%ebp
 805d7bd:	c7 44 24 08 f8 00 00 	movl   $0xf8,0x8(%esp)
 805d7c4:	00 
 805d7c5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805d7c9:	89 3c 24             	mov    %edi,(%esp)
 805d7cc:	e8 df f2 ff ff       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805d7d1:	39 ee                	cmp    %ebp,%esi
 805d7d3:	74 db                	je     805d7b0 <__asan_poison_stack_memory+0x40>
 805d7d5:	89 f2                	mov    %esi,%edx
 805d7d7:	89 e8                	mov    %ebp,%eax
 805d7d9:	01 ef                	add    %ebp,%edi
 805d7db:	29 c2                	sub    %eax,%edx
 805d7dd:	81 ff fe ff ff 1f    	cmp    $0x1ffffffe,%edi
 805d7e3:	76 6f                	jbe    805d854 <__asan_poison_stack_memory+0xe4>
 805d7e5:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805d7eb:	8b 00                	mov    (%eax),%eax
 805d7ed:	85 c0                	test   %eax,%eax
 805d7ef:	74 08                	je     805d7f9 <__asan_poison_stack_memory+0x89>
 805d7f1:	39 c7                	cmp    %eax,%edi
 805d7f3:	0f 83 87 00 00 00    	jae    805d880 <__asan_poison_stack_memory+0x110>
 805d7f9:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805d7ff:	8b 00                	mov    (%eax),%eax
 805d801:	89 c1                	mov    %eax,%ecx
 805d803:	c1 e9 03             	shr    $0x3,%ecx
 805d806:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805d80c:	39 cf                	cmp    %ecx,%edi
 805d80e:	73 40                	jae    805d850 <__asan_poison_stack_memory+0xe0>
 805d810:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805d816:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d81a:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805d820:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d827:	00 
 805d828:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d82f:	00 
 805d830:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d837:	00 
 805d838:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d83f:	00 
 805d840:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805d847:	00 
 805d848:	89 04 24             	mov    %eax,(%esp)
 805d84b:	e8 60 4b 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d850:	39 c7                	cmp    %eax,%edi
 805d852:	77 bc                	ja     805d810 <__asan_poison_stack_memory+0xa0>
 805d854:	c1 ef 03             	shr    $0x3,%edi
 805d857:	0f b6 87 00 00 00 20 	movzbl 0x20000000(%edi),%eax
 805d85e:	38 c2                	cmp    %al,%dl
 805d860:	0f 8c 4a ff ff ff    	jl     805d7b0 <__asan_poison_stack_memory+0x40>
 805d866:	84 c0                	test   %al,%al
 805d868:	0f 8e 42 ff ff ff    	jle    805d7b0 <__asan_poison_stack_memory+0x40>
 805d86e:	c6 87 00 00 00 20 f8 	movb   $0xf8,0x20000000(%edi)
 805d875:	83 c4 2c             	add    $0x2c,%esp
 805d878:	5b                   	pop    %ebx
 805d879:	5e                   	pop    %esi
 805d87a:	5f                   	pop    %edi
 805d87b:	5d                   	pop    %ebp
 805d87c:	c3                   	ret    
 805d87d:	8d 76 00             	lea    0x0(%esi),%esi
 805d880:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805d886:	3b 38                	cmp    (%eax),%edi
 805d888:	76 ca                	jbe    805d854 <__asan_poison_stack_memory+0xe4>
 805d88a:	e9 6a ff ff ff       	jmp    805d7f9 <__asan_poison_stack_memory+0x89>
 805d88f:	90                   	nop

0805d890 <__asan_unpoison_stack_memory>:
 805d890:	55                   	push   %ebp
 805d891:	57                   	push   %edi
 805d892:	56                   	push   %esi
 805d893:	53                   	push   %ebx
 805d894:	e8 57 c2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805d899:	81 c3 67 27 05 00    	add    $0x52767,%ebx
 805d89f:	83 ec 2c             	sub    $0x2c,%esp
 805d8a2:	8b 7c 24 40          	mov    0x40(%esp),%edi
 805d8a6:	8b 74 24 44          	mov    0x44(%esp),%esi
 805d8aa:	e8 71 ac ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805d8af:	8b 40 08             	mov    0x8(%eax),%eax
 805d8b2:	85 c0                	test   %eax,%eax
 805d8b4:	7e 16                	jle    805d8cc <__asan_unpoison_stack_memory+0x3c>
 805d8b6:	8d 83 2c 56 fd ff    	lea    -0x2a9d4(%ebx),%eax
 805d8bc:	89 74 24 08          	mov    %esi,0x8(%esp)
 805d8c0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805d8c4:	89 04 24             	mov    %eax,(%esp)
 805d8c7:	e8 74 3e 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805d8cc:	85 f6                	test   %esi,%esi
 805d8ce:	75 08                	jne    805d8d8 <__asan_unpoison_stack_memory+0x48>
 805d8d0:	83 c4 2c             	add    $0x2c,%esp
 805d8d3:	5b                   	pop    %ebx
 805d8d4:	5e                   	pop    %esi
 805d8d5:	5f                   	pop    %edi
 805d8d6:	5d                   	pop    %ebp
 805d8d7:	c3                   	ret    
 805d8d8:	89 f5                	mov    %esi,%ebp
 805d8da:	83 e5 f8             	and    $0xfffffff8,%ebp
 805d8dd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 805d8e4:	00 
 805d8e5:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 805d8e9:	89 3c 24             	mov    %edi,(%esp)
 805d8ec:	e8 bf f1 ff ff       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 805d8f1:	39 ee                	cmp    %ebp,%esi
 805d8f3:	74 db                	je     805d8d0 <__asan_unpoison_stack_memory+0x40>
 805d8f5:	01 ef                	add    %ebp,%edi
 805d8f7:	81 ff fe ff ff 1f    	cmp    $0x1ffffffe,%edi
 805d8fd:	76 75                	jbe    805d974 <__asan_unpoison_stack_memory+0xe4>
 805d8ff:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805d905:	8b 00                	mov    (%eax),%eax
 805d907:	85 c0                	test   %eax,%eax
 805d909:	74 08                	je     805d913 <__asan_unpoison_stack_memory+0x83>
 805d90b:	39 c7                	cmp    %eax,%edi
 805d90d:	0f 83 8d 00 00 00    	jae    805d9a0 <__asan_unpoison_stack_memory+0x110>
 805d913:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805d919:	8b 00                	mov    (%eax),%eax
 805d91b:	89 c2                	mov    %eax,%edx
 805d91d:	c1 ea 03             	shr    $0x3,%edx
 805d920:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805d926:	39 d7                	cmp    %edx,%edi
 805d928:	73 46                	jae    805d970 <__asan_unpoison_stack_memory+0xe0>
 805d92a:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805d930:	89 44 24 08          	mov    %eax,0x8(%esp)
 805d934:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805d93a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805d941:	00 
 805d942:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805d949:	00 
 805d94a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805d951:	00 
 805d952:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805d959:	00 
 805d95a:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805d961:	00 
 805d962:	89 04 24             	mov    %eax,(%esp)
 805d965:	e8 46 4a 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805d96a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d970:	39 c7                	cmp    %eax,%edi
 805d972:	77 b6                	ja     805d92a <__asan_unpoison_stack_memory+0x9a>
 805d974:	c1 ef 03             	shr    $0x3,%edi
 805d977:	0f b6 87 00 00 00 20 	movzbl 0x20000000(%edi),%eax
 805d97e:	84 c0                	test   %al,%al
 805d980:	0f 84 4a ff ff ff    	je     805d8d0 <__asan_unpoison_stack_memory+0x40>
 805d986:	89 f2                	mov    %esi,%edx
 805d988:	89 e9                	mov    %ebp,%ecx
 805d98a:	29 ca                	sub    %ecx,%edx
 805d98c:	38 d0                	cmp    %dl,%al
 805d98e:	0f 4c c2             	cmovl  %edx,%eax
 805d991:	88 87 00 00 00 20    	mov    %al,0x20000000(%edi)
 805d997:	83 c4 2c             	add    $0x2c,%esp
 805d99a:	5b                   	pop    %ebx
 805d99b:	5e                   	pop    %esi
 805d99c:	5f                   	pop    %edi
 805d99d:	5d                   	pop    %ebp
 805d99e:	c3                   	ret    
 805d99f:	90                   	nop
 805d9a0:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805d9a6:	3b 38                	cmp    (%eax),%edi
 805d9a8:	76 ca                	jbe    805d974 <__asan_unpoison_stack_memory+0xe4>
 805d9aa:	e9 64 ff ff ff       	jmp    805d913 <__asan_unpoison_stack_memory+0x83>
 805d9af:	90                   	nop

0805d9b0 <_ZN6__asanL19PrintZoneForPointerEmmPKc>:
 805d9b0:	53                   	push   %ebx
 805d9b1:	83 ec 18             	sub    $0x18,%esp
 805d9b4:	e8 37 c1 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805d9b9:	81 c3 47 26 05 00    	add    $0x52647,%ebx
 805d9bf:	85 d2                	test   %edx,%edx
 805d9c1:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 805d9c5:	74 29                	je     805d9f0 <_ZN6__asanL19PrintZoneForPointerEmmPKc+0x40>
 805d9c7:	85 c9                	test   %ecx,%ecx
 805d9c9:	74 3d                	je     805da08 <_ZN6__asanL19PrintZoneForPointerEmmPKc+0x58>
 805d9cb:	89 44 24 04          	mov    %eax,0x4(%esp)
 805d9cf:	8d 83 44 56 fd ff    	lea    -0x2a9bc(%ebx),%eax
 805d9d5:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 805d9d9:	89 54 24 08          	mov    %edx,0x8(%esp)
 805d9dd:	89 04 24             	mov    %eax,(%esp)
 805d9e0:	e8 9b 3c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805d9e5:	83 c4 18             	add    $0x18,%esp
 805d9e8:	5b                   	pop    %ebx
 805d9e9:	c3                   	ret    
 805d9ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805d9f0:	89 44 24 04          	mov    %eax,0x4(%esp)
 805d9f4:	8d 83 51 60 fd ff    	lea    -0x29faf(%ebx),%eax
 805d9fa:	89 04 24             	mov    %eax,(%esp)
 805d9fd:	e8 7e 3c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805da02:	83 c4 18             	add    $0x18,%esp
 805da05:	5b                   	pop    %ebx
 805da06:	c3                   	ret    
 805da07:	90                   	nop
 805da08:	89 44 24 04          	mov    %eax,0x4(%esp)
 805da0c:	8d 83 70 56 fd ff    	lea    -0x2a990(%ebx),%eax
 805da12:	89 54 24 08          	mov    %edx,0x8(%esp)
 805da16:	89 04 24             	mov    %eax,(%esp)
 805da19:	e8 62 3c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805da1e:	83 c4 18             	add    $0x18,%esp
 805da21:	5b                   	pop    %ebx
 805da22:	c3                   	ret    
 805da23:	90                   	nop
 805da24:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805da2a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0805da30 <_ZN6__asan18AsanThreadRegistry22GetCurrentTidOrInvalidEv.part.10>:
 805da30:	53                   	push   %ebx
 805da31:	e8 ba c0 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805da36:	81 c3 ca 25 05 00    	add    $0x525ca,%ebx
 805da3c:	83 ec 18             	sub    $0x18,%esp
 805da3f:	89 04 24             	mov    %eax,(%esp)
 805da42:	e8 39 c1 ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805da47:	85 c0                	test   %eax,%eax
 805da49:	74 0d                	je     805da58 <_ZN6__asan18AsanThreadRegistry22GetCurrentTidOrInvalidEv.part.10+0x28>
 805da4b:	8b 00                	mov    (%eax),%eax
 805da4d:	8b 00                	mov    (%eax),%eax
 805da4f:	83 c4 18             	add    $0x18,%esp
 805da52:	5b                   	pop    %ebx
 805da53:	c3                   	ret    
 805da54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805da58:	83 c4 18             	add    $0x18,%esp
 805da5b:	b8 ff ff ff 00       	mov    $0xffffff,%eax
 805da60:	5b                   	pop    %ebx
 805da61:	c3                   	ret    
 805da62:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805da69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>:
 805da70:	85 d2                	test   %edx,%edx
 805da72:	75 04                	jne    805da78 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11+0x8>
 805da74:	c3                   	ret    
 805da75:	8d 76 00             	lea    0x0(%esi),%esi
 805da78:	55                   	push   %ebp
 805da79:	57                   	push   %edi
 805da7a:	56                   	push   %esi
 805da7b:	89 c6                	mov    %eax,%esi
 805da7d:	53                   	push   %ebx
 805da7e:	e8 6d c0 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805da83:	81 c3 7d 25 05 00    	add    $0x5257d,%ebx
 805da89:	83 ec 3c             	sub    $0x3c,%esp
 805da8c:	e8 af 6a 00 00       	call   8064540 <_ZN11__sanitizer21IsSymbolizerAvailableEv>
 805da91:	84 c0                	test   %al,%al
 805da93:	74 6a                	je     805daff <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11+0x8f>
 805da95:	8d 7c 24 14          	lea    0x14(%esp),%edi
 805da99:	89 3c 24             	mov    %edi,(%esp)
 805da9c:	c7 44 24 08 1c 00 00 	movl   $0x1c,0x8(%esp)
 805daa3:	00 
 805daa4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 805daab:	00 
 805daac:	e8 8f 3e 00 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 805dab1:	8b 44 24 50          	mov    0x50(%esp),%eax
 805dab5:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805dab9:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 805dac0:	00 
 805dac1:	8b 00                	mov    (%eax),%eax
 805dac3:	89 04 24             	mov    %eax,(%esp)
 805dac6:	e8 75 5d 00 00       	call   8063840 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm>
 805dacb:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 805dacf:	8b 7c 24 28          	mov    0x28(%esp),%edi
 805dad3:	e8 48 aa ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805dad8:	8b 40 40             	mov    0x40(%eax),%eax
 805dadb:	89 44 24 04          	mov    %eax,0x4(%esp)
 805dadf:	8b 44 24 24          	mov    0x24(%esp),%eax
 805dae3:	89 04 24             	mov    %eax,(%esp)
 805dae6:	e8 d5 6a 00 00       	call   80645c0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 805daeb:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 805daef:	89 7c 24 08          	mov    %edi,0x8(%esp)
 805daf3:	89 34 24             	mov    %esi,(%esp)
 805daf6:	89 44 24 04          	mov    %eax,0x4(%esp)
 805dafa:	e8 71 4e 00 00       	call   8062970 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_iS1_>
 805daff:	83 c4 3c             	add    $0x3c,%esp
 805db02:	5b                   	pop    %ebx
 805db03:	5e                   	pop    %esi
 805db04:	5f                   	pop    %edi
 805db05:	5d                   	pop    %ebp
 805db06:	c3                   	ret    
 805db07:	89 f6                	mov    %esi,%esi
 805db09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805db10 <_ZN6__asan26AppendToErrorMessageBufferEPKc>:
 805db10:	55                   	push   %ebp
 805db11:	57                   	push   %edi
 805db12:	56                   	push   %esi
 805db13:	53                   	push   %ebx
 805db14:	e8 d7 bf fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805db19:	81 c3 e7 24 05 00    	add    $0x524e7,%ebx
 805db1f:	83 ec 3c             	sub    $0x3c,%esp
 805db22:	8b 83 f4 0e 1b 01    	mov    0x11b0ef4(%ebx),%eax
 805db28:	85 c0                	test   %eax,%eax
 805db2a:	74 6b                	je     805db97 <_ZN6__asan26AppendToErrorMessageBufferEPKc+0x87>
 805db2c:	8b 44 24 50          	mov    0x50(%esp),%eax
 805db30:	31 ff                	xor    %edi,%edi
 805db32:	89 04 24             	mov    %eax,(%esp)
 805db35:	e8 16 40 00 00       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 805db3a:	8b 93 f0 0e 1b 01    	mov    0x11b0ef0(%ebx),%edx
 805db40:	83 ff 00             	cmp    $0x0,%edi
 805db43:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 805db4a:	00 
 805db4b:	89 54 24 28          	mov    %edx,0x28(%esp)
 805db4f:	89 c5                	mov    %eax,%ebp
 805db51:	8b 83 ec 0e 1b 01    	mov    0x11b0eec(%ebx),%eax
 805db57:	89 c6                	mov    %eax,%esi
 805db59:	76 45                	jbe    805dba0 <_ZN6__asan26AppendToErrorMessageBufferEPKc+0x90>
 805db5b:	29 d0                	sub    %edx,%eax
 805db5d:	89 c6                	mov    %eax,%esi
 805db5f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805db63:	8b 44 24 50          	mov    0x50(%esp),%eax
 805db67:	03 93 f4 0e 1b 01    	add    0x11b0ef4(%ebx),%edx
 805db6d:	89 44 24 04          	mov    %eax,0x4(%esp)
 805db71:	89 14 24             	mov    %edx,(%esp)
 805db74:	e8 67 40 00 00       	call   8061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 805db79:	39 f5                	cmp    %esi,%ebp
 805db7b:	8b 83 ec 0e 1b 01    	mov    0x11b0eec(%ebx),%eax
 805db81:	8b 93 f4 0e 1b 01    	mov    0x11b0ef4(%ebx),%edx
 805db87:	89 f1                	mov    %esi,%ecx
 805db89:	0f 46 cd             	cmovbe %ebp,%ecx
 805db8c:	01 8b f0 0e 1b 01    	add    %ecx,0x11b0ef0(%ebx)
 805db92:	c6 44 02 ff 00       	movb   $0x0,-0x1(%edx,%eax,1)
 805db97:	83 c4 3c             	add    $0x3c,%esp
 805db9a:	5b                   	pop    %ebx
 805db9b:	5e                   	pop    %esi
 805db9c:	5f                   	pop    %edi
 805db9d:	5d                   	pop    %ebp
 805db9e:	c3                   	ret    
 805db9f:	90                   	nop
 805dba0:	72 04                	jb     805dba6 <_ZN6__asan26AppendToErrorMessageBufferEPKc+0x96>
 805dba2:	39 d0                	cmp    %edx,%eax
 805dba4:	73 b5                	jae    805db5b <_ZN6__asan26AppendToErrorMessageBufferEPKc+0x4b>
 805dba6:	8b 44 24 28          	mov    0x28(%esp),%eax
 805dbaa:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 805dbae:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805dbb2:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805dbb6:	89 44 24 14          	mov    %eax,0x14(%esp)
 805dbba:	8d 83 ac 56 fd ff    	lea    -0x2a954(%ebx),%eax
 805dbc0:	89 44 24 08          	mov    %eax,0x8(%esp)
 805dbc4:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805dbca:	89 54 24 18          	mov    %edx,0x18(%esp)
 805dbce:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)
 805dbd5:	00 
 805dbd6:	89 04 24             	mov    %eax,(%esp)
 805dbd9:	e8 d2 47 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805dbde:	66 90                	xchg   %ax,%ax

0805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>:
 805dbe0:	53                   	push   %ebx
 805dbe1:	e8 0a bf fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805dbe6:	81 c3 1a 24 05 00    	add    $0x5241a,%ebx
 805dbec:	83 ec 08             	sub    $0x8,%esp
 805dbef:	8b 83 e8 0e 1b 01    	mov    0x11b0ee8(%ebx),%eax
 805dbf5:	85 c0                	test   %eax,%eax
 805dbf7:	74 0f                	je     805dc08 <_ZN6__asan17PrintsToTtyCachedEv+0x28>
 805dbf9:	0f b6 83 e4 0e 1b 01 	movzbl 0x11b0ee4(%ebx),%eax
 805dc00:	83 c4 08             	add    $0x8,%esp
 805dc03:	5b                   	pop    %ebx
 805dc04:	c3                   	ret    
 805dc05:	8d 76 00             	lea    0x0(%esi),%esi
 805dc08:	e8 43 48 00 00       	call   8062450 <_ZN11__sanitizer11PrintsToTtyEv>
 805dc0d:	c7 83 e8 0e 1b 01 01 	movl   $0x1,0x11b0ee8(%ebx)
 805dc14:	00 00 00 
 805dc17:	88 83 e4 0e 1b 01    	mov    %al,0x11b0ee4(%ebx)
 805dc1d:	83 c4 08             	add    $0x8,%esp
 805dc20:	5b                   	pop    %ebx
 805dc21:	c3                   	ret    
 805dc22:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805dc29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>:
 805dc30:	55                   	push   %ebp
 805dc31:	57                   	push   %edi
 805dc32:	89 c7                	mov    %eax,%edi
 805dc34:	56                   	push   %esi
 805dc35:	89 d6                	mov    %edx,%esi
 805dc37:	53                   	push   %ebx
 805dc38:	89 f5                	mov    %esi,%ebp
 805dc3a:	e8 b1 be fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805dc3f:	81 c3 c1 23 05 00    	add    $0x523c1,%ebx
 805dc45:	83 ec 2c             	sub    $0x2c,%esp
 805dc48:	e8 93 ff ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805dc4d:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805dc53:	8d 8b 6f 60 fd ff    	lea    -0x29f91(%ebx),%ecx
 805dc59:	84 c0                	test   %al,%al
 805dc5b:	0f 44 ca             	cmove  %edx,%ecx
 805dc5e:	89 f2                	mov    %esi,%edx
 805dc60:	83 c6 0f             	add    $0xf,%esi
 805dc63:	0f b6 d2             	movzbl %dl,%edx
 805dc66:	88 44 24 1f          	mov    %al,0x1f(%esp)
 805dc6a:	89 f0                	mov    %esi,%eax
 805dc6c:	83 e5 0f             	and    $0xf,%ebp
 805dc6f:	c1 fa 04             	sar    $0x4,%edx
 805dc72:	3c 0d                	cmp    $0xd,%al
 805dc74:	0f 87 c6 00 00 00    	ja     805dd40 <.L35>
 805dc7a:	0f b6 f0             	movzbl %al,%esi
 805dc7d:	8b 84 b3 20 65 fd ff 	mov    -0x29ae0(%ebx,%esi,4),%eax
 805dc84:	8d 34 18             	lea    (%eax,%ebx,1),%esi
 805dc87:	ff e6                	jmp    *%esi
 805dc89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805dc90 <.L41>:
 805dc90:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805dc95:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805dc9b:	8d 83 82 60 fd ff    	lea    -0x29f7e(%ebx),%eax
 805dca1:	0f 45 f0             	cmovne %eax,%esi
 805dca4:	8b 44 24 40          	mov    0x40(%esp),%eax
 805dca8:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 805dcac:	89 74 24 08          	mov    %esi,0x8(%esp)
 805dcb0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805dcb4:	89 44 24 18          	mov    %eax,0x18(%esp)
 805dcb8:	8d 83 aa 60 fd ff    	lea    -0x29f56(%ebx),%eax
 805dcbe:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 805dcc2:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805dcc6:	89 04 24             	mov    %eax,(%esp)
 805dcc9:	e8 b2 39 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805dcce:	83 c4 2c             	add    $0x2c,%esp
 805dcd1:	5b                   	pop    %ebx
 805dcd2:	5e                   	pop    %esi
 805dcd3:	5f                   	pop    %edi
 805dcd4:	5d                   	pop    %ebp
 805dcd5:	c3                   	ret    
 805dcd6:	66 90                	xchg   %ax,%ax

0805dcd8 <.L42>:
 805dcd8:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805dcdd:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805dce3:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805dce9:	0f 45 f0             	cmovne %eax,%esi
 805dcec:	eb b6                	jmp    805dca4 <.L41+0x14>
 805dcee:	66 90                	xchg   %ax,%ax

0805dcf0 <.L40>:
 805dcf0:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805dcf5:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805dcfb:	8d 83 a0 60 fd ff    	lea    -0x29f60(%ebx),%eax
 805dd01:	0f 45 f0             	cmovne %eax,%esi
 805dd04:	eb 9e                	jmp    805dca4 <.L41+0x14>
 805dd06:	66 90                	xchg   %ax,%ax

0805dd08 <.L45>:
 805dd08:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805dd0d:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805dd13:	8d 83 8c 60 fd ff    	lea    -0x29f74(%ebx),%eax
 805dd19:	0f 45 f0             	cmovne %eax,%esi
 805dd1c:	eb 86                	jmp    805dca4 <.L41+0x14>
 805dd1e:	66 90                	xchg   %ax,%ax

0805dd20 <.L39>:
 805dd20:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805dd25:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805dd2b:	8d 83 96 60 fd ff    	lea    -0x29f6a(%ebx),%eax
 805dd31:	0f 45 f0             	cmovne %eax,%esi
 805dd34:	e9 6b ff ff ff       	jmp    805dca4 <.L41+0x14>
 805dd39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805dd40 <.L35>:
 805dd40:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 805dd45:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805dd4b:	8d 83 6f 60 fd ff    	lea    -0x29f91(%ebx),%eax
 805dd51:	0f 45 f0             	cmovne %eax,%esi
 805dd54:	e9 4b ff ff ff       	jmp    805dca4 <.L41+0x14>
 805dd59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805dd60 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global>:
 805dd60:	55                   	push   %ebp
 805dd61:	31 c0                	xor    %eax,%eax
 805dd63:	57                   	push   %edi
 805dd64:	56                   	push   %esi
 805dd65:	53                   	push   %ebx
 805dd66:	83 ec 2c             	sub    $0x2c,%esp
 805dd69:	8b 74 24 48          	mov    0x48(%esp),%esi
 805dd6d:	8b 54 24 40          	mov    0x40(%esp),%edx
 805dd71:	e8 7a bd fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805dd76:	81 c3 8a 22 05 00    	add    $0x5228a,%ebx
 805dd7c:	8b 0e                	mov    (%esi),%ecx
 805dd7e:	8d 79 c0             	lea    -0x40(%ecx),%edi
 805dd81:	39 d7                	cmp    %edx,%edi
 805dd83:	73 07                	jae    805dd8c <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x2c>
 805dd85:	03 4e 08             	add    0x8(%esi),%ecx
 805dd88:	39 ca                	cmp    %ecx,%edx
 805dd8a:	72 0c                	jb     805dd98 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x38>
 805dd8c:	83 c4 2c             	add    $0x2c,%esp
 805dd8f:	5b                   	pop    %ebx
 805dd90:	5e                   	pop    %esi
 805dd91:	5f                   	pop    %edi
 805dd92:	5d                   	pop    %ebp
 805dd93:	c3                   	ret    
 805dd94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805dd98:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 805dd9c:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805dda2:	e8 39 fe ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805dda7:	89 3c 24             	mov    %edi,(%esp)
 805ddaa:	89 c5                	mov    %eax,%ebp
 805ddac:	89 e9                	mov    %ebp,%ecx
 805ddae:	84 c9                	test   %cl,%cl
 805ddb0:	8d 83 b7 60 fd ff    	lea    -0x29f49(%ebx),%eax
 805ddb6:	8d 8b b7 61 fd ff    	lea    -0x29e49(%ebx),%ecx
 805ddbc:	0f 44 c1             	cmove  %ecx,%eax
 805ddbf:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ddc3:	e8 b8 38 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ddc8:	8b 06                	mov    (%esi),%eax
 805ddca:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 805ddce:	39 c2                	cmp    %eax,%edx
 805ddd0:	0f 82 e2 00 00 00    	jb     805deb8 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x158>
 805ddd6:	8b 4e 04             	mov    0x4(%esi),%ecx
 805ddd9:	01 c1                	add    %eax,%ecx
 805dddb:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 805dddf:	8b 4c 24 44          	mov    0x44(%esp),%ecx
 805dde3:	01 d1                	add    %edx,%ecx
 805dde5:	3b 4c 24 1c          	cmp    0x1c(%esp),%ecx
 805dde9:	0f 86 f9 00 00 00    	jbe    805dee8 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x188>
 805ddef:	3b 54 24 1c          	cmp    0x1c(%esp),%edx
 805ddf3:	0f 42 54 24 1c       	cmovb  0x1c(%esp),%edx
 805ddf8:	89 d0                	mov    %edx,%eax
 805ddfa:	2b 44 24 1c          	sub    0x1c(%esp),%eax
 805ddfe:	89 54 24 04          	mov    %edx,0x4(%esp)
 805de02:	89 44 24 08          	mov    %eax,0x8(%esp)
 805de06:	8d 83 44 57 fd ff    	lea    -0x2a8bc(%ebx),%eax
 805de0c:	89 04 24             	mov    %eax,(%esp)
 805de0f:	e8 6c 38 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805de14:	8b 46 04             	mov    0x4(%esi),%eax
 805de17:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805de1b:	8b 06                	mov    (%esi),%eax
 805de1d:	89 44 24 08          	mov    %eax,0x8(%esp)
 805de21:	8b 46 0c             	mov    0xc(%esi),%eax
 805de24:	89 44 24 04          	mov    %eax,0x4(%esp)
 805de28:	8d 83 8c 57 fd ff    	lea    -0x2a874(%ebx),%eax
 805de2e:	89 04 24             	mov    %eax,(%esp)
 805de31:	e8 4a 38 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805de36:	89 e9                	mov    %ebp,%ecx
 805de38:	84 c9                	test   %cl,%cl
 805de3a:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805de40:	8d 83 6f 60 fd ff    	lea    -0x29f91(%ebx),%eax
 805de46:	0f 44 c2             	cmove  %edx,%eax
 805de49:	89 3c 24             	mov    %edi,(%esp)
 805de4c:	89 44 24 04          	mov    %eax,0x4(%esp)
 805de50:	e8 2b 38 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805de55:	8b 0e                	mov    (%esi),%ecx
 805de57:	8b 7e 04             	mov    0x4(%esi),%edi
 805de5a:	01 cf                	add    %ecx,%edi
 805de5c:	8d 57 ff             	lea    -0x1(%edi),%edx
 805de5f:	39 d1                	cmp    %edx,%ecx
 805de61:	73 19                	jae    805de7c <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x11c>
 805de63:	80 39 00             	cmpb   $0x0,(%ecx)
 805de66:	78 70                	js     805ded8 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x178>
 805de68:	89 c8                	mov    %ecx,%eax
 805de6a:	eb 09                	jmp    805de75 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x115>
 805de6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805de70:	80 38 00             	cmpb   $0x0,(%eax)
 805de73:	78 63                	js     805ded8 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x178>
 805de75:	83 c0 01             	add    $0x1,%eax
 805de78:	39 d0                	cmp    %edx,%eax
 805de7a:	72 f4                	jb     805de70 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x110>
 805de7c:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)
 805de80:	b8 01 00 00 00       	mov    $0x1,%eax
 805de85:	0f 85 01 ff ff ff    	jne    805dd8c <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x2c>
 805de8b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805de8f:	8b 56 0c             	mov    0xc(%esi),%edx
 805de92:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 805de96:	89 54 24 04          	mov    %edx,0x4(%esp)
 805de9a:	8d 93 c1 60 fd ff    	lea    -0x29f3f(%ebx),%edx
 805dea0:	89 14 24             	mov    %edx,(%esp)
 805dea3:	e8 d8 37 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805dea8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 805deac:	e9 db fe ff ff       	jmp    805dd8c <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0x2c>
 805deb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805deb8:	29 d0                	sub    %edx,%eax
 805deba:	89 44 24 08          	mov    %eax,0x8(%esp)
 805debe:	8d 83 20 57 fd ff    	lea    -0x2a8e0(%ebx),%eax
 805dec4:	89 54 24 04          	mov    %edx,0x4(%esp)
 805dec8:	89 04 24             	mov    %eax,(%esp)
 805decb:	e8 b0 37 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ded0:	e9 3f ff ff ff       	jmp    805de14 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0xb4>
 805ded5:	8d 76 00             	lea    0x0(%esi),%esi
 805ded8:	83 c4 2c             	add    $0x2c,%esp
 805dedb:	b8 01 00 00 00       	mov    $0x1,%eax
 805dee0:	5b                   	pop    %ebx
 805dee1:	5e                   	pop    %esi
 805dee2:	5f                   	pop    %edi
 805dee3:	5d                   	pop    %ebp
 805dee4:	c3                   	ret    
 805dee5:	8d 76 00             	lea    0x0(%esi),%esi
 805dee8:	89 d1                	mov    %edx,%ecx
 805deea:	29 c1                	sub    %eax,%ecx
 805deec:	8d 83 6c 57 fd ff    	lea    -0x2a894(%ebx),%eax
 805def2:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805def6:	89 54 24 04          	mov    %edx,0x4(%esp)
 805defa:	89 04 24             	mov    %eax,(%esp)
 805defd:	e8 7e 37 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805df02:	e9 0d ff ff ff       	jmp    805de14 <_ZN6__asan31DescribeAddressRelativeToGlobalEmmRK13__asan_global+0xb4>
 805df07:	89 f6                	mov    %esi,%esi
 805df09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805df10 <_ZN6__asan23DescribeAddressIfShadowEm>:
 805df10:	55                   	push   %ebp
 805df11:	57                   	push   %edi
 805df12:	56                   	push   %esi
 805df13:	53                   	push   %ebx
 805df14:	83 ec 2c             	sub    $0x2c,%esp
 805df17:	8b 44 24 40          	mov    0x40(%esp),%eax
 805df1b:	e8 d0 bb fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805df20:	81 c3 e0 20 05 00    	add    $0x520e0,%ebx
 805df26:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 805df2b:	76 1b                	jbe    805df48 <_ZN6__asan23DescribeAddressIfShadowEm+0x38>
 805df2d:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 805df33:	8b 12                	mov    (%edx),%edx
 805df35:	85 d2                	test   %edx,%edx
 805df37:	74 1f                	je     805df58 <_ZN6__asan23DescribeAddressIfShadowEm+0x48>
 805df39:	39 d0                	cmp    %edx,%eax
 805df3b:	72 1b                	jb     805df58 <_ZN6__asan23DescribeAddressIfShadowEm+0x48>
 805df3d:	8d 8b 00 bc 02 00    	lea    0x2bc00(%ebx),%ecx
 805df43:	3b 01                	cmp    (%ecx),%eax
 805df45:	77 11                	ja     805df58 <_ZN6__asan23DescribeAddressIfShadowEm+0x48>
 805df47:	90                   	nop
 805df48:	83 c4 2c             	add    $0x2c,%esp
 805df4b:	31 c0                	xor    %eax,%eax
 805df4d:	5b                   	pop    %ebx
 805df4e:	5e                   	pop    %esi
 805df4f:	5f                   	pop    %edi
 805df50:	5d                   	pop    %ebp
 805df51:	c3                   	ret    
 805df52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805df58:	8d 8b 08 bc 02 00    	lea    0x2bc08(%ebx),%ecx
 805df5e:	8b 31                	mov    (%ecx),%esi
 805df60:	89 f1                	mov    %esi,%ecx
 805df62:	c1 e9 03             	shr    $0x3,%ecx
 805df65:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 805df6b:	39 c8                	cmp    %ecx,%eax
 805df6d:	72 04                	jb     805df73 <_ZN6__asan23DescribeAddressIfShadowEm+0x63>
 805df6f:	39 f0                	cmp    %esi,%eax
 805df71:	76 d5                	jbe    805df48 <_ZN6__asan23DescribeAddressIfShadowEm+0x38>
 805df73:	85 d2                	test   %edx,%edx
 805df75:	0f 84 85 00 00 00    	je     805e000 <_ZN6__asan23DescribeAddressIfShadowEm+0xf0>
 805df7b:	89 d7                	mov    %edx,%edi
 805df7d:	c1 ef 03             	shr    $0x3,%edi
 805df80:	81 c7 ff ff ff 1f    	add    $0x1fffffff,%edi
 805df86:	39 f8                	cmp    %edi,%eax
 805df88:	0f 86 9a 00 00 00    	jbe    805e028 <_ZN6__asan23DescribeAddressIfShadowEm+0x118>
 805df8e:	8d bb 00 bc 02 00    	lea    0x2bc00(%ebx),%edi
 805df94:	8b 3f                	mov    (%edi),%edi
 805df96:	89 fd                	mov    %edi,%ebp
 805df98:	c1 ed 03             	shr    $0x3,%ebp
 805df9b:	81 c5 01 00 00 20    	add    $0x20000001,%ebp
 805dfa1:	39 e8                	cmp    %ebp,%eax
 805dfa3:	0f 83 8b 00 00 00    	jae    805e034 <_ZN6__asan23DescribeAddressIfShadowEm+0x124>
 805dfa9:	83 c7 01             	add    $0x1,%edi
 805dfac:	c1 e9 03             	shr    $0x3,%ecx
 805dfaf:	39 f8                	cmp    %edi,%eax
 805dfb1:	73 57                	jae    805e00a <_ZN6__asan23DescribeAddressIfShadowEm+0xfa>
 805dfb3:	90                   	nop
 805dfb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805dfb8:	81 c1 00 00 00 20    	add    $0x20000000,%ecx
 805dfbe:	39 c8                	cmp    %ecx,%eax
 805dfc0:	72 04                	jb     805dfc6 <_ZN6__asan23DescribeAddressIfShadowEm+0xb6>
 805dfc2:	39 f0                	cmp    %esi,%eax
 805dfc4:	76 5a                	jbe    805e020 <_ZN6__asan23DescribeAddressIfShadowEm+0x110>
 805dfc6:	8d 90 00 00 00 e0    	lea    -0x20000000(%eax),%edx
 805dfcc:	81 fa ff ff ff 03    	cmp    $0x3ffffff,%edx
 805dfd2:	77 6c                	ja     805e040 <_ZN6__asan23DescribeAddressIfShadowEm+0x130>
 805dfd4:	8d 93 ee 60 fd ff    	lea    -0x29f12(%ebx),%edx
 805dfda:	89 44 24 04          	mov    %eax,0x4(%esp)
 805dfde:	8d 83 e0 65 fd ff    	lea    -0x29a20(%ebx),%eax
 805dfe4:	89 04 24             	mov    %eax,(%esp)
 805dfe7:	89 54 24 08          	mov    %edx,0x8(%esp)
 805dfeb:	e8 90 36 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805dff0:	83 c4 2c             	add    $0x2c,%esp
 805dff3:	b8 01 00 00 00       	mov    $0x1,%eax
 805dff8:	5b                   	pop    %ebx
 805dff9:	5e                   	pop    %esi
 805dffa:	5f                   	pop    %edi
 805dffb:	5d                   	pop    %ebp
 805dffc:	c3                   	ret    
 805dffd:	8d 76 00             	lea    0x0(%esi),%esi
 805e000:	c1 e9 03             	shr    $0x3,%ecx
 805e003:	3d ff ff ff 23       	cmp    $0x23ffffff,%eax
 805e008:	76 ae                	jbe    805dfb8 <_ZN6__asan23DescribeAddressIfShadowEm+0xa8>
 805e00a:	8d 91 ff ff ff 1f    	lea    0x1fffffff(%ecx),%edx
 805e010:	39 d0                	cmp    %edx,%eax
 805e012:	77 a4                	ja     805dfb8 <_ZN6__asan23DescribeAddressIfShadowEm+0xa8>
 805e014:	8d 93 de 60 fd ff    	lea    -0x29f22(%ebx),%edx
 805e01a:	eb be                	jmp    805dfda <_ZN6__asan23DescribeAddressIfShadowEm+0xca>
 805e01c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805e020:	8d 93 fe 60 fd ff    	lea    -0x29f02(%ebx),%edx
 805e026:	eb b2                	jmp    805dfda <_ZN6__asan23DescribeAddressIfShadowEm+0xca>
 805e028:	3d ff ff ff 23       	cmp    $0x23ffffff,%eax
 805e02d:	77 e5                	ja     805e014 <_ZN6__asan23DescribeAddressIfShadowEm+0x104>
 805e02f:	c1 e9 03             	shr    $0x3,%ecx
 805e032:	eb 84                	jmp    805dfb8 <_ZN6__asan23DescribeAddressIfShadowEm+0xa8>
 805e034:	83 ea 01             	sub    $0x1,%edx
 805e037:	39 d0                	cmp    %edx,%eax
 805e039:	76 d9                	jbe    805e014 <_ZN6__asan23DescribeAddressIfShadowEm+0x104>
 805e03b:	e9 69 ff ff ff       	jmp    805dfa9 <_ZN6__asan23DescribeAddressIfShadowEm+0x99>
 805e040:	8d 83 bc 57 fd ff    	lea    -0x2a844(%ebx),%eax
 805e046:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e04a:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805e050:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805e057:	00 
 805e058:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805e05f:	00 
 805e060:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805e067:	00 
 805e068:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805e06f:	00 
 805e070:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)
 805e077:	00 
 805e078:	89 04 24             	mov    %eax,(%esp)
 805e07b:	e8 30 43 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>:
 805e080:	57                   	push   %edi
 805e081:	56                   	push   %esi
 805e082:	53                   	push   %ebx
 805e083:	83 ec 10             	sub    $0x10,%esp
 805e086:	8b 7c 24 20          	mov    0x20(%esp),%edi
 805e08a:	e8 61 ba fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805e08f:	81 c3 71 1f 05 00    	add    $0x51f71,%ebx
 805e095:	8b 74 24 24          	mov    0x24(%esp),%esi
 805e099:	80 bf 18 04 00 00 00 	cmpb   $0x0,0x418(%edi)
 805e0a0:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805e0a6:	74 56                	je     805e0fe <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm+0x7e>
 805e0a8:	8d 83 0f 61 fd ff    	lea    -0x29ef1(%ebx),%eax
 805e0ae:	81 c7 18 04 00 00    	add    $0x418,%edi
 805e0b4:	c6 06 00             	movb   $0x0,(%esi)
 805e0b7:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 805e0be:	00 
 805e0bf:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e0c3:	89 34 24             	mov    %esi,(%esp)
 805e0c6:	e8 a5 3a 00 00       	call   8061b70 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 805e0cb:	8b 44 24 28          	mov    0x28(%esp),%eax
 805e0cf:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e0d3:	89 34 24             	mov    %esi,(%esp)
 805e0d6:	83 e8 04             	sub    $0x4,%eax
 805e0d9:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e0dd:	e8 8e 3a 00 00       	call   8061b70 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 805e0e2:	8d 83 5c 74 fd ff    	lea    -0x28ba4(%ebx),%eax
 805e0e8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 805e0ef:	00 
 805e0f0:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e0f4:	89 34 24             	mov    %esi,(%esp)
 805e0f7:	e8 74 3a 00 00       	call   8061b70 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 805e0fc:	89 f0                	mov    %esi,%eax
 805e0fe:	83 c4 10             	add    $0x10,%esp
 805e101:	5b                   	pop    %ebx
 805e102:	5e                   	pop    %esi
 805e103:	5f                   	pop    %edi
 805e104:	c3                   	ret    
 805e105:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805e109:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805e110 <_ZN6__asan25ThreadNameWithParenthesisEjPcm.part.13>:
 805e110:	57                   	push   %edi
 805e111:	89 d7                	mov    %edx,%edi
 805e113:	56                   	push   %esi
 805e114:	89 c6                	mov    %eax,%esi
 805e116:	53                   	push   %ebx
 805e117:	e8 d4 b9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805e11c:	81 c3 e4 1e 05 00    	add    $0x51ee4,%ebx
 805e122:	83 ec 10             	sub    $0x10,%esp
 805e125:	e8 46 b8 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805e12a:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e12e:	89 04 24             	mov    %eax,(%esp)
 805e131:	e8 5a bc ff ff       	call   8059d90 <_ZN6__asan18AsanThreadRegistry9FindByTidEj>
 805e136:	8b 54 24 20          	mov    0x20(%esp),%edx
 805e13a:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e13e:	89 54 24 08          	mov    %edx,0x8(%esp)
 805e142:	89 04 24             	mov    %eax,(%esp)
 805e145:	e8 36 ff ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e14a:	83 c4 10             	add    $0x10,%esp
 805e14d:	5b                   	pop    %ebx
 805e14e:	5e                   	pop    %esi
 805e14f:	5f                   	pop    %edi
 805e150:	c3                   	ret    
 805e151:	eb 0d                	jmp    805e160 <_ZN6__asan25ThreadNameWithParenthesisEjPcm>
 805e153:	90                   	nop
 805e154:	90                   	nop
 805e155:	90                   	nop
 805e156:	90                   	nop
 805e157:	90                   	nop
 805e158:	90                   	nop
 805e159:	90                   	nop
 805e15a:	90                   	nop
 805e15b:	90                   	nop
 805e15c:	90                   	nop
 805e15d:	90                   	nop
 805e15e:	90                   	nop
 805e15f:	90                   	nop

0805e160 <_ZN6__asan25ThreadNameWithParenthesisEjPcm>:
 805e160:	53                   	push   %ebx
 805e161:	8b 44 24 08          	mov    0x8(%esp),%eax
 805e165:	e8 86 b9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805e16a:	81 c3 96 1e 05 00    	add    $0x51e96,%ebx
 805e170:	8b 54 24 0c          	mov    0xc(%esp),%edx
 805e174:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 805e178:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 805e17d:	74 09                	je     805e188 <_ZN6__asan25ThreadNameWithParenthesisEjPcm+0x28>
 805e17f:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805e183:	5b                   	pop    %ebx
 805e184:	eb 8a                	jmp    805e110 <_ZN6__asan25ThreadNameWithParenthesisEjPcm.part.13>
 805e186:	66 90                	xchg   %ax,%ax
 805e188:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805e18e:	5b                   	pop    %ebx
 805e18f:	c3                   	ret    

0805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>:
 805e190:	56                   	push   %esi
 805e191:	53                   	push   %ebx
 805e192:	81 ec b4 00 00 00    	sub    $0xb4,%esp
 805e198:	8b b4 24 c0 00 00 00 	mov    0xc0(%esp),%esi
 805e19f:	e8 4c b9 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805e1a4:	81 c3 5c 1e 05 00    	add    $0x51e5c,%ebx
 805e1aa:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e1b0:	89 84 24 ac 00 00 00 	mov    %eax,0xac(%esp)
 805e1b7:	31 c0                	xor    %eax,%eax
 805e1b9:	85 f6                	test   %esi,%esi
 805e1bb:	0f 84 fc 00 00 00    	je     805e2bd <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x12d>
 805e1c1:	8b 06                	mov    (%esi),%eax
 805e1c3:	85 c0                	test   %eax,%eax
 805e1c5:	75 21                	jne    805e1e8 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x58>
 805e1c7:	8b 84 24 ac 00 00 00 	mov    0xac(%esp),%eax
 805e1ce:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805e1d5:	0f 85 dd 00 00 00    	jne    805e2b8 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x128>
 805e1db:	81 c4 b4 00 00 00    	add    $0xb4,%esp
 805e1e1:	5b                   	pop    %ebx
 805e1e2:	5e                   	pop    %esi
 805e1e3:	c3                   	ret    
 805e1e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805e1e8:	80 7e 08 00          	cmpb   $0x0,0x8(%esi)
 805e1ec:	75 d9                	jne    805e1c7 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x37>
 805e1ee:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 805e1f3:	c6 46 08 01          	movb   $0x1,0x8(%esi)
 805e1f7:	0f 84 ab 00 00 00    	je     805e2a8 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x118>
 805e1fd:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 805e201:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)
 805e208:	e8 03 ff ff ff       	call   805e110 <_ZN6__asan25ThreadNameWithParenthesisEjPcm.part.13>
 805e20d:	8b 16                	mov    (%esi),%edx
 805e20f:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e213:	8d 83 12 61 fd ff    	lea    -0x29eee(%ebx),%eax
 805e219:	89 04 24             	mov    %eax,(%esp)
 805e21c:	89 54 24 04          	mov    %edx,0x4(%esp)
 805e220:	e8 5b 34 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e225:	8b 46 04             	mov    0x4(%esi),%eax
 805e228:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 805e22d:	74 69                	je     805e298 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x108>
 805e22f:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 805e233:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)
 805e23a:	e8 d1 fe ff ff       	call   805e110 <_ZN6__asan25ThreadNameWithParenthesisEjPcm.part.13>
 805e23f:	8b 56 04             	mov    0x4(%esi),%edx
 805e242:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e246:	8d 83 1f 61 fd ff    	lea    -0x29ee1(%ebx),%eax
 805e24c:	89 54 24 04          	mov    %edx,0x4(%esp)
 805e250:	89 04 24             	mov    %eax,(%esp)
 805e253:	e8 28 34 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e258:	8d 46 0c             	lea    0xc(%esi),%eax
 805e25b:	89 04 24             	mov    %eax,(%esp)
 805e25e:	e8 7d 1f 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805e263:	e8 b8 a2 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805e268:	80 78 44 00          	cmpb   $0x0,0x44(%eax)
 805e26c:	0f 84 55 ff ff ff    	je     805e1c7 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x37>
 805e272:	8b 76 04             	mov    0x4(%esi),%esi
 805e275:	e8 f6 b6 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805e27a:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e27e:	89 04 24             	mov    %eax,(%esp)
 805e281:	e8 0a bb ff ff       	call   8059d90 <_ZN6__asan18AsanThreadRegistry9FindByTidEj>
 805e286:	89 04 24             	mov    %eax,(%esp)
 805e289:	e8 02 ff ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 805e28e:	e9 34 ff ff ff       	jmp    805e1c7 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x37>
 805e293:	90                   	nop
 805e294:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805e298:	ba ff ff ff 00       	mov    $0xffffff,%edx
 805e29d:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805e2a3:	eb 9d                	jmp    805e242 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0xb2>
 805e2a5:	8d 76 00             	lea    0x0(%esi),%esi
 805e2a8:	ba ff ff ff 00       	mov    $0xffffff,%edx
 805e2ad:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805e2b3:	e9 57 ff ff ff       	jmp    805e20f <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE+0x7f>
 805e2b8:	e8 03 49 02 00       	call   8082bc0 <__stack_chk_fail_local>
 805e2bd:	8d 83 0e 4e fd ff    	lea    -0x2b1f2(%ebx),%eax
 805e2c3:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e2c7:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805e2cd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805e2d4:	00 
 805e2d5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805e2dc:	00 
 805e2dd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805e2e4:	00 
 805e2e5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805e2ec:	00 
 805e2ed:	c7 44 24 04 88 01 00 	movl   $0x188,0x4(%esp)
 805e2f4:	00 
 805e2f5:	89 04 24             	mov    %eax,(%esp)
 805e2f8:	e8 b3 40 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805e2fd:	8d 76 00             	lea    0x0(%esi),%esi

0805e300 <_ZN6__asan19DescribeHeapAddressEmm>:
 805e300:	55                   	push   %ebp
 805e301:	89 e5                	mov    %esp,%ebp
 805e303:	57                   	push   %edi
 805e304:	56                   	push   %esi
 805e305:	53                   	push   %ebx
 805e306:	e8 e5 b7 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805e30b:	81 c3 f5 1c 05 00    	add    $0x51cf5,%ebx
 805e311:	81 ec ec 08 00 00    	sub    $0x8ec,%esp
 805e317:	8b 75 08             	mov    0x8(%ebp),%esi
 805e31a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e320:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 805e323:	31 c0                	xor    %eax,%eax
 805e325:	8d 85 4c f7 ff ff    	lea    -0x8b4(%ebp),%eax
 805e32b:	89 04 24             	mov    %eax,(%esp)
 805e32e:	89 85 44 f7 ff ff    	mov    %eax,-0x8bc(%ebp)
 805e334:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e338:	e8 73 d0 fe ff       	call   804b3b0 <_ZN6__asan22FindHeapChunkByAddressEm>
 805e33d:	8b 85 4c f7 ff ff    	mov    -0x8b4(%ebp),%eax
 805e343:	83 ec 04             	sub    $0x4,%esp
 805e346:	85 c0                	test   %eax,%eax
 805e348:	0f 84 fd 02 00 00    	je     805e64b <_ZN6__asan19DescribeHeapAddressEmm+0x34b>
 805e34e:	8b 85 4c f7 ff ff    	mov    -0x8b4(%ebp),%eax
 805e354:	8d bd 50 f7 ff ff    	lea    -0x8b0(%ebp),%edi
 805e35a:	89 85 50 f7 ff ff    	mov    %eax,-0x8b0(%ebp)
 805e360:	e8 7b f8 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805e365:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805e36b:	89 c1                	mov    %eax,%ecx
 805e36d:	84 c9                	test   %cl,%cl
 805e36f:	88 85 40 f7 ff ff    	mov    %al,-0x8c0(%ebp)
 805e375:	8d 83 b7 60 fd ff    	lea    -0x29f49(%ebx),%eax
 805e37b:	0f 44 c2             	cmove  %edx,%eax
 805e37e:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e382:	8d 83 1b 6b fd ff    	lea    -0x294e5(%ebx),%eax
 805e388:	89 04 24             	mov    %eax,(%esp)
 805e38b:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%ebp)
 805e391:	e8 ea 32 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e396:	89 3c 24             	mov    %edi,(%esp)
 805e399:	e8 82 c4 fe ff       	call   804a820 <_ZN6__asan13AsanChunkView3BegEv>
 805e39e:	39 c6                	cmp    %eax,%esi
 805e3a0:	72 46                	jb     805e3e8 <_ZN6__asan19DescribeHeapAddressEmm+0xe8>
 805e3a2:	8b 45 0c             	mov    0xc(%ebp),%eax
 805e3a5:	89 3c 24             	mov    %edi,(%esp)
 805e3a8:	01 f0                	add    %esi,%eax
 805e3aa:	89 85 38 f7 ff ff    	mov    %eax,-0x8c8(%ebp)
 805e3b0:	e8 7b c4 fe ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 805e3b5:	89 3c 24             	mov    %edi,(%esp)
 805e3b8:	39 85 38 f7 ff ff    	cmp    %eax,-0x8c8(%ebp)
 805e3be:	0f 87 ec 03 00 00    	ja     805e7b0 <_ZN6__asan19DescribeHeapAddressEmm+0x4b0>
 805e3c4:	e8 57 c4 fe ff       	call   804a820 <_ZN6__asan13AsanChunkView3BegEv>
 805e3c9:	39 c6                	cmp    %eax,%esi
 805e3cb:	0f 83 0f 04 00 00    	jae    805e7e0 <_ZN6__asan19DescribeHeapAddressEmm+0x4e0>
 805e3d1:	8d 83 f4 58 fd ff    	lea    -0x2a70c(%ebx),%eax
 805e3d7:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e3db:	89 04 24             	mov    %eax,(%esp)
 805e3de:	e8 9d 32 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e3e3:	eb 23                	jmp    805e408 <_ZN6__asan19DescribeHeapAddressEmm+0x108>
 805e3e5:	8d 76 00             	lea    0x0(%esi),%esi
 805e3e8:	89 3c 24             	mov    %edi,(%esp)
 805e3eb:	e8 30 c4 fe ff       	call   804a820 <_ZN6__asan13AsanChunkView3BegEv>
 805e3f0:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e3f4:	29 f0                	sub    %esi,%eax
 805e3f6:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e3fa:	8d 83 fc 57 fd ff    	lea    -0x2a804(%ebx),%eax
 805e400:	89 04 24             	mov    %eax,(%esp)
 805e403:	e8 78 32 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e408:	89 3c 24             	mov    %edi,(%esp)
 805e40b:	e8 20 c4 fe ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 805e410:	89 3c 24             	mov    %edi,(%esp)
 805e413:	89 85 38 f7 ff ff    	mov    %eax,-0x8c8(%ebp)
 805e419:	e8 02 c4 fe ff       	call   804a820 <_ZN6__asan13AsanChunkView3BegEv>
 805e41e:	89 3c 24             	mov    %edi,(%esp)
 805e421:	8d bb b7 61 fd ff    	lea    -0x29e49(%ebx),%edi
 805e427:	89 c6                	mov    %eax,%esi
 805e429:	e8 c2 c7 fe ff       	call   804abf0 <_ZN6__asan13AsanChunkView8UsedSizeEv>
 805e42e:	8b 95 38 f7 ff ff    	mov    -0x8c8(%ebp),%edx
 805e434:	89 74 24 08          	mov    %esi,0x8(%esp)
 805e438:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805e43c:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e440:	8d 83 38 61 fd ff    	lea    -0x29ec8(%ebx),%eax
 805e446:	89 04 24             	mov    %eax,(%esp)
 805e449:	e8 32 32 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e44e:	8d 83 6f 60 fd ff    	lea    -0x29f91(%ebx),%eax
 805e454:	80 bd 40 f7 ff ff 00 	cmpb   $0x0,-0x8c0(%ebp)
 805e45b:	89 85 30 f7 ff ff    	mov    %eax,-0x8d0(%ebp)
 805e461:	0f 44 c7             	cmove  %edi,%eax
 805e464:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e468:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 805e46e:	89 04 24             	mov    %eax,(%esp)
 805e471:	e8 0a 32 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e476:	8b 85 44 f7 ff ff    	mov    -0x8bc(%ebp),%eax
 805e47c:	89 04 24             	mov    %eax,(%esp)
 805e47f:	e8 1c cb fe ff       	call   804afa0 <_ZN6__asan13AsanChunkView8AllocTidEv>
 805e484:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 805e489:	0f 84 d1 03 00 00    	je     805e860 <_ZN6__asan19DescribeHeapAddressEmm+0x560>
 805e48f:	8b 85 44 f7 ff ff    	mov    -0x8bc(%ebp),%eax
 805e495:	89 04 24             	mov    %eax,(%esp)
 805e498:	e8 03 cb fe ff       	call   804afa0 <_ZN6__asan13AsanChunkView8AllocTidEv>
 805e49d:	89 c6                	mov    %eax,%esi
 805e49f:	e8 cc b4 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805e4a4:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e4a8:	89 04 24             	mov    %eax,(%esp)
 805e4ab:	e8 e0 b8 ff ff       	call   8059d90 <_ZN6__asan18AsanThreadRegistry9FindByTidEj>
 805e4b0:	8d 8d 54 f7 ff ff    	lea    -0x8ac(%ebp),%ecx
 805e4b6:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e4ba:	89 8d 38 f7 ff ff    	mov    %ecx,-0x8c8(%ebp)
 805e4c0:	89 85 40 f7 ff ff    	mov    %eax,-0x8c0(%ebp)
 805e4c6:	8b 85 44 f7 ff ff    	mov    -0x8bc(%ebp),%eax
 805e4cc:	89 04 24             	mov    %eax,(%esp)
 805e4cf:	e8 ec ca fe ff       	call   804afc0 <_ZN6__asan13AsanChunkView13GetAllocStackEPN11__sanitizer10StackTraceE>
 805e4d4:	e8 97 b4 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805e4d9:	89 04 24             	mov    %eax,(%esp)
 805e4dc:	e8 9f b6 ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805e4e1:	85 c0                	test   %eax,%eax
 805e4e3:	89 c6                	mov    %eax,%esi
 805e4e5:	0f 84 35 03 00 00    	je     805e820 <_ZN6__asan19DescribeHeapAddressEmm+0x520>
 805e4eb:	e8 f0 f6 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805e4f0:	8b 95 44 f7 ff ff    	mov    -0x8bc(%ebp),%edx
 805e4f6:	89 14 24             	mov    %edx,(%esp)
 805e4f9:	88 85 34 f7 ff ff    	mov    %al,-0x8cc(%ebp)
 805e4ff:	e8 ac ca fe ff       	call   804afb0 <_ZN6__asan13AsanChunkView7FreeTidEv>
 805e504:	3d ff ff ff 00       	cmp    $0xffffff,%eax
 805e509:	0f 84 59 01 00 00    	je     805e668 <_ZN6__asan19DescribeHeapAddressEmm+0x368>
 805e50f:	8b 95 44 f7 ff ff    	mov    -0x8bc(%ebp),%edx
 805e515:	89 14 24             	mov    %edx,(%esp)
 805e518:	e8 93 ca fe ff       	call   804afb0 <_ZN6__asan13AsanChunkView7FreeTidEv>
 805e51d:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%ebp)
 805e523:	e8 48 b4 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805e528:	8b 95 3c f7 ff ff    	mov    -0x8c4(%ebp),%edx
 805e52e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805e532:	89 04 24             	mov    %eax,(%esp)
 805e535:	e8 56 b8 ff ff       	call   8059d90 <_ZN6__asan18AsanThreadRegistry9FindByTidEj>
 805e53a:	80 bd 34 f7 ff ff 00 	cmpb   $0x0,-0x8cc(%ebp)
 805e541:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%ebp)
 805e547:	0f 84 8b 01 00 00    	je     805e6d8 <_ZN6__asan19DescribeHeapAddressEmm+0x3d8>
 805e54d:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 805e553:	8d bd 64 ff ff ff    	lea    -0x9c(%ebp),%edi
 805e559:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e55d:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 805e564:	00 
 805e565:	89 04 24             	mov    %eax,(%esp)
 805e568:	e8 13 fb ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e56d:	8b 8d 30 f7 ff ff    	mov    -0x8d0(%ebp),%ecx
 805e573:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 805e577:	8d 8b 82 60 fd ff    	lea    -0x29f7e(%ebx),%ecx
 805e57d:	89 8d 2c f7 ff ff    	mov    %ecx,-0x8d4(%ebp)
 805e583:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805e587:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 805e58d:	8b 00                	mov    (%eax),%eax
 805e58f:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e593:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e597:	8d 83 34 59 fd ff    	lea    -0x2a6cc(%ebx),%eax
 805e59d:	89 04 24             	mov    %eax,(%esp)
 805e5a0:	e8 db 30 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e5a5:	8d 85 5c fb ff ff    	lea    -0x4a4(%ebp),%eax
 805e5ab:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e5af:	89 85 34 f7 ff ff    	mov    %eax,-0x8cc(%ebp)
 805e5b5:	8b 85 44 f7 ff ff    	mov    -0x8bc(%ebp),%eax
 805e5bb:	89 04 24             	mov    %eax,(%esp)
 805e5be:	e8 ad ca fe ff       	call   804b070 <_ZN6__asan13AsanChunkView12GetFreeStackEPN11__sanitizer10StackTraceE>
 805e5c3:	8b 85 34 f7 ff ff    	mov    -0x8cc(%ebp),%eax
 805e5c9:	89 04 24             	mov    %eax,(%esp)
 805e5cc:	e8 0f 1c 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805e5d1:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e5d5:	8b bd 40 f7 ff ff    	mov    -0x8c0(%ebp),%edi
 805e5db:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 805e5e2:	00 
 805e5e3:	89 3c 24             	mov    %edi,(%esp)
 805e5e6:	e8 95 fa ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e5eb:	8b 17                	mov    (%edi),%edx
 805e5ed:	8b 8d 2c f7 ff ff    	mov    -0x8d4(%ebp),%ecx
 805e5f3:	8b bd 30 f7 ff ff    	mov    -0x8d0(%ebp),%edi
 805e5f9:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805e5fd:	8d 83 78 58 fd ff    	lea    -0x2a788(%ebx),%eax
 805e603:	89 54 24 08          	mov    %edx,0x8(%esp)
 805e607:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e60b:	89 04 24             	mov    %eax,(%esp)
 805e60e:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805e612:	e8 69 30 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e617:	8b 85 38 f7 ff ff    	mov    -0x8c8(%ebp),%eax
 805e61d:	89 04 24             	mov    %eax,(%esp)
 805e620:	e8 bb 1b 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805e625:	8b 06                	mov    (%esi),%eax
 805e627:	89 04 24             	mov    %eax,(%esp)
 805e62a:	e8 61 fb ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 805e62f:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 805e635:	89 04 24             	mov    %eax,(%esp)
 805e638:	e8 53 fb ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 805e63d:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 805e643:	89 04 24             	mov    %eax,(%esp)
 805e646:	e8 45 fb ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 805e64b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 805e64e:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 805e655:	0f 85 c0 01 00 00    	jne    805e81b <_ZN6__asan19DescribeHeapAddressEmm+0x51b>
 805e65b:	8d 65 f4             	lea    -0xc(%ebp),%esp
 805e65e:	5b                   	pop    %ebx
 805e65f:	5e                   	pop    %esi
 805e660:	5f                   	pop    %edi
 805e661:	5d                   	pop    %ebp
 805e662:	c3                   	ret    
 805e663:	90                   	nop
 805e664:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805e668:	80 bd 34 f7 ff ff 00 	cmpb   $0x0,-0x8cc(%ebp)
 805e66f:	0f 84 0b 01 00 00    	je     805e780 <_ZN6__asan19DescribeHeapAddressEmm+0x480>
 805e675:	8b bd 40 f7 ff ff    	mov    -0x8c0(%ebp),%edi
 805e67b:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax
 805e681:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 805e688:	00 
 805e689:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e68d:	89 3c 24             	mov    %edi,(%esp)
 805e690:	e8 eb f9 ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e695:	8b 17                	mov    (%edi),%edx
 805e697:	8d 8b 82 60 fd ff    	lea    -0x29f7e(%ebx),%ecx
 805e69d:	8b bd 30 f7 ff ff    	mov    -0x8d0(%ebp),%edi
 805e6a3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805e6a7:	8d 83 a8 58 fd ff    	lea    -0x2a758(%ebx),%eax
 805e6ad:	89 54 24 08          	mov    %edx,0x8(%esp)
 805e6b1:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e6b5:	89 04 24             	mov    %eax,(%esp)
 805e6b8:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805e6bc:	e8 bf 2f 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e6c1:	8b 85 38 f7 ff ff    	mov    -0x8c8(%ebp),%eax
 805e6c7:	89 04 24             	mov    %eax,(%esp)
 805e6ca:	e8 11 1b 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805e6cf:	8b 06                	mov    (%esi),%eax
 805e6d1:	e9 5f ff ff ff       	jmp    805e635 <_ZN6__asan19DescribeHeapAddressEmm+0x335>
 805e6d6:	66 90                	xchg   %ax,%ax
 805e6d8:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 805e6de:	8d 95 64 ff ff ff    	lea    -0x9c(%ebp),%edx
 805e6e4:	89 54 24 04          	mov    %edx,0x4(%esp)
 805e6e8:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 805e6ef:	00 
 805e6f0:	89 95 30 f7 ff ff    	mov    %edx,-0x8d0(%ebp)
 805e6f6:	89 04 24             	mov    %eax,(%esp)
 805e6f9:	e8 82 f9 ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e6fe:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805e702:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805e706:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 805e70c:	8b 00                	mov    (%eax),%eax
 805e70e:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e712:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e716:	8d 83 34 59 fd ff    	lea    -0x2a6cc(%ebx),%eax
 805e71c:	89 04 24             	mov    %eax,(%esp)
 805e71f:	e8 5c 2f 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e724:	8d 85 5c fb ff ff    	lea    -0x4a4(%ebp),%eax
 805e72a:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e72e:	89 85 34 f7 ff ff    	mov    %eax,-0x8cc(%ebp)
 805e734:	8b 85 44 f7 ff ff    	mov    -0x8bc(%ebp),%eax
 805e73a:	89 04 24             	mov    %eax,(%esp)
 805e73d:	e8 2e c9 fe ff       	call   804b070 <_ZN6__asan13AsanChunkView12GetFreeStackEPN11__sanitizer10StackTraceE>
 805e742:	8b 85 34 f7 ff ff    	mov    -0x8cc(%ebp),%eax
 805e748:	89 04 24             	mov    %eax,(%esp)
 805e74b:	e8 90 1a 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805e750:	8b 95 30 f7 ff ff    	mov    -0x8d0(%ebp),%edx
 805e756:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 805e75c:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 805e763:	00 
 805e764:	89 54 24 04          	mov    %edx,0x4(%esp)
 805e768:	89 04 24             	mov    %eax,(%esp)
 805e76b:	e8 10 f9 ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e770:	8b 8d 40 f7 ff ff    	mov    -0x8c0(%ebp),%ecx
 805e776:	8b 11                	mov    (%ecx),%edx
 805e778:	89 f9                	mov    %edi,%ecx
 805e77a:	e9 7a fe ff ff       	jmp    805e5f9 <_ZN6__asan19DescribeHeapAddressEmm+0x2f9>
 805e77f:	90                   	nop
 805e780:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax
 805e786:	89 44 24 04          	mov    %eax,0x4(%esp)
 805e78a:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 805e790:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 805e797:	00 
 805e798:	89 04 24             	mov    %eax,(%esp)
 805e79b:	e8 e0 f8 ff ff       	call   805e080 <_ZN6__asan25ThreadNameWithParenthesisEPNS_17AsanThreadSummaryEPcm>
 805e7a0:	8b 8d 40 f7 ff ff    	mov    -0x8c0(%ebp),%ecx
 805e7a6:	8b 11                	mov    (%ecx),%edx
 805e7a8:	89 f9                	mov    %edi,%ecx
 805e7aa:	e9 f4 fe ff ff       	jmp    805e6a3 <_ZN6__asan19DescribeHeapAddressEmm+0x3a3>
 805e7af:	90                   	nop
 805e7b0:	e8 7b c0 fe ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 805e7b5:	89 f2                	mov    %esi,%edx
 805e7b7:	29 c2                	sub    %eax,%edx
 805e7b9:	79 04                	jns    805e7bf <_ZN6__asan19DescribeHeapAddressEmm+0x4bf>
 805e7bb:	89 c6                	mov    %eax,%esi
 805e7bd:	31 d2                	xor    %edx,%edx
 805e7bf:	8d 83 24 58 fd ff    	lea    -0x2a7dc(%ebx),%eax
 805e7c5:	89 54 24 08          	mov    %edx,0x8(%esp)
 805e7c9:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e7cd:	89 04 24             	mov    %eax,(%esp)
 805e7d0:	e8 ab 2e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e7d5:	e9 2e fc ff ff       	jmp    805e408 <_ZN6__asan19DescribeHeapAddressEmm+0x108>
 805e7da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805e7e0:	89 3c 24             	mov    %edi,(%esp)
 805e7e3:	e8 48 c0 fe ff       	call   804a830 <_ZN6__asan13AsanChunkView3EndEv>
 805e7e8:	39 85 38 f7 ff ff    	cmp    %eax,-0x8c8(%ebp)
 805e7ee:	0f 87 dd fb ff ff    	ja     805e3d1 <_ZN6__asan19DescribeHeapAddressEmm+0xd1>
 805e7f4:	89 3c 24             	mov    %edi,(%esp)
 805e7f7:	e8 24 c0 fe ff       	call   804a820 <_ZN6__asan13AsanChunkView3BegEv>
 805e7fc:	89 f1                	mov    %esi,%ecx
 805e7fe:	89 74 24 04          	mov    %esi,0x4(%esp)
 805e802:	29 c1                	sub    %eax,%ecx
 805e804:	8d 83 d0 58 fd ff    	lea    -0x2a730(%ebx),%eax
 805e80a:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805e80e:	89 04 24             	mov    %eax,(%esp)
 805e811:	e8 6a 2e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e816:	e9 ed fb ff ff       	jmp    805e408 <_ZN6__asan19DescribeHeapAddressEmm+0x108>
 805e81b:	e8 a0 43 02 00       	call   8082bc0 <__stack_chk_fail_local>
 805e820:	8d 83 52 61 fd ff    	lea    -0x29eae(%ebx),%eax
 805e826:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e82a:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805e830:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805e837:	00 
 805e838:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805e83f:	00 
 805e840:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805e847:	00 
 805e848:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805e84f:	00 
 805e850:	c7 44 24 04 58 01 00 	movl   $0x158,0x4(%esp)
 805e857:	00 
 805e858:	89 04 24             	mov    %eax,(%esp)
 805e85b:	e8 50 3b 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805e860:	8d 83 4c 58 fd ff    	lea    -0x2a7b4(%ebx),%eax
 805e866:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e86a:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805e870:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805e877:	00 
 805e878:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805e87f:	00 
 805e880:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805e887:	00 
 805e888:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805e88f:	00 
 805e890:	c7 44 24 04 52 01 00 	movl   $0x152,0x4(%esp)
 805e897:	00 
 805e898:	89 04 24             	mov    %eax,(%esp)
 805e89b:	e8 10 3b 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0805e8a0 <_ZN6__asan22DescribeAddressIfStackEmm>:
 805e8a0:	55                   	push   %ebp
 805e8a1:	57                   	push   %edi
 805e8a2:	56                   	push   %esi
 805e8a3:	53                   	push   %ebx
 805e8a4:	e8 47 b2 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805e8a9:	81 c3 57 17 05 00    	add    $0x51757,%ebx
 805e8af:	81 ec 5c 10 00 00    	sub    $0x105c,%esp
 805e8b5:	8b bc 24 70 10 00 00 	mov    0x1070(%esp),%edi
 805e8bc:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805e8c2:	89 84 24 4c 10 00 00 	mov    %eax,0x104c(%esp)
 805e8c9:	31 c0                	xor    %eax,%eax
 805e8cb:	e8 a0 b0 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805e8d0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e8d4:	89 04 24             	mov    %eax,(%esp)
 805e8d7:	e8 64 b5 ff ff       	call   8059e40 <_ZN6__asan18AsanThreadRegistry24FindThreadByStackAddressEm>
 805e8dc:	85 c0                	test   %eax,%eax
 805e8de:	89 c1                	mov    %eax,%ecx
 805e8e0:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 805e8e4:	0f 84 d6 02 00 00    	je     805ebc0 <_ZN6__asan22DescribeAddressIfStackEmm+0x320>
 805e8ea:	8d 44 24 44          	lea    0x44(%esp),%eax
 805e8ee:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e8f2:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e8f6:	89 0c 24             	mov    %ecx,(%esp)
 805e8f9:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 805e900:	00 
 805e901:	e8 8a 1f 00 00       	call   8060890 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm>
 805e906:	85 c0                	test   %eax,%eax
 805e908:	89 44 24 38          	mov    %eax,0x38(%esp)
 805e90c:	0f 84 fa 02 00 00    	je     805ec0c <_ZN6__asan22DescribeAddressIfStackEmm+0x36c>
 805e912:	8b 44 24 38          	mov    0x38(%esp),%eax
 805e916:	c7 44 24 04 20 00 00 	movl   $0x20,0x4(%esp)
 805e91d:	00 
 805e91e:	89 04 24             	mov    %eax,(%esp)
 805e921:	e8 ba 31 00 00       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 805e926:	85 c0                	test   %eax,%eax
 805e928:	89 c6                	mov    %eax,%esi
 805e92a:	0f 84 9c 02 00 00    	je     805ebcc <_ZN6__asan22DescribeAddressIfStackEmm+0x32c>
 805e930:	8b 4c 24 38          	mov    0x38(%esp),%ecx
 805e934:	ba ff 0f 00 00       	mov    $0xfff,%edx
 805e939:	c6 44 24 4d 00       	movb   $0x0,0x4d(%esp)
 805e93e:	29 c8                	sub    %ecx,%eax
 805e940:	3d ff 0f 00 00       	cmp    $0xfff,%eax
 805e945:	0f 4f c2             	cmovg  %edx,%eax
 805e948:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e94c:	8d 44 24 4d          	lea    0x4d(%esp),%eax
 805e950:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e954:	89 04 24             	mov    %eax,(%esp)
 805e957:	89 44 24 24          	mov    %eax,0x24(%esp)
 805e95b:	e8 10 32 00 00       	call   8061b70 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 805e960:	e8 7b f2 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805e965:	84 c0                	test   %al,%al
 805e967:	0f 85 eb 01 00 00    	jne    805eb58 <_ZN6__asan22DescribeAddressIfStackEmm+0x2b8>
 805e96d:	8d 8b b7 61 fd ff    	lea    -0x29e49(%ebx),%ecx
 805e973:	8d ab 1b 6b fd ff    	lea    -0x294e5(%ebx),%ebp
 805e979:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e97d:	89 2c 24             	mov    %ebp,(%esp)
 805e980:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 805e984:	e8 f7 2c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e989:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 805e98d:	8b 00                	mov    (%eax),%eax
 805e98f:	8b 10                	mov    (%eax),%edx
 805e991:	8b 44 24 24          	mov    0x24(%esp),%eax
 805e995:	89 54 24 28          	mov    %edx,0x28(%esp)
 805e999:	89 04 24             	mov    %eax,(%esp)
 805e99c:	e8 3f 36 00 00       	call   8061fe0 <_ZN11__sanitizer8DemangleEPKc>
 805e9a1:	8b 54 24 28          	mov    0x28(%esp),%edx
 805e9a5:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e9a9:	89 54 24 10          	mov    %edx,0x10(%esp)
 805e9ad:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805e9b1:	8b 44 24 44          	mov    0x44(%esp),%eax
 805e9b5:	89 44 24 08          	mov    %eax,0x8(%esp)
 805e9b9:	8d 83 5c 5a fd ff    	lea    -0x2a5a4(%ebx),%eax
 805e9bf:	89 04 24             	mov    %eax,(%esp)
 805e9c2:	e8 b9 2c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e9c7:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 805e9cb:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805e9cf:	8d 7c 24 48          	lea    0x48(%esp),%edi
 805e9d3:	89 2c 24             	mov    %ebp,(%esp)
 805e9d6:	e8 a5 2c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805e9db:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 805e9e2:	00 
 805e9e3:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805e9e7:	89 34 24             	mov    %esi,(%esp)
 805e9ea:	e8 11 33 00 00       	call   8061d00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci>
 805e9ef:	85 c0                	test   %eax,%eax
 805e9f1:	89 44 24 30          	mov    %eax,0x30(%esp)
 805e9f5:	0f 84 51 02 00 00    	je     805ec4c <_ZN6__asan22DescribeAddressIfStackEmm+0x3ac>
 805e9fb:	8b 44 24 30          	mov    0x30(%esp),%eax
 805e9ff:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ea03:	8d 83 58 59 fd ff    	lea    -0x2a6a8(%ebx),%eax
 805ea09:	89 04 24             	mov    %eax,(%esp)
 805ea0c:	e8 6f 2c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ea11:	8d 83 a3 61 fd ff    	lea    -0x29e5d(%ebx),%eax
 805ea17:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 805ea1e:	00 
 805ea1f:	89 44 24 34          	mov    %eax,0x34(%esp)
 805ea23:	e9 84 00 00 00       	jmp    805eaac <_ZN6__asan22DescribeAddressIfStackEmm+0x20c>
 805ea28:	85 ed                	test   %ebp,%ebp
 805ea2a:	0f 84 d2 00 00 00    	je     805eb02 <_ZN6__asan22DescribeAddressIfStackEmm+0x262>
 805ea30:	85 c0                	test   %eax,%eax
 805ea32:	0f 88 ca 00 00 00    	js     805eb02 <_ZN6__asan22DescribeAddressIfStackEmm+0x262>
 805ea38:	8b 44 24 48          	mov    0x48(%esp),%eax
 805ea3c:	80 38 20             	cmpb   $0x20,(%eax)
 805ea3f:	0f 85 bd 00 00 00    	jne    805eb02 <_ZN6__asan22DescribeAddressIfStackEmm+0x262>
 805ea45:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx
 805ea4b:	8d 48 01             	lea    0x1(%eax),%ecx
 805ea4e:	b8 ff 0f 00 00       	mov    $0xfff,%eax
 805ea53:	0f 4e c2             	cmovle %edx,%eax
 805ea56:	01 f5                	add    %esi,%ebp
 805ea58:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ea5c:	8b 44 24 24          	mov    0x24(%esp),%eax
 805ea60:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805ea64:	89 4c 24 48          	mov    %ecx,0x48(%esp)
 805ea68:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 805ea6c:	89 04 24             	mov    %eax,(%esp)
 805ea6f:	c6 44 24 4d 00       	movb   $0x0,0x4d(%esp)
 805ea74:	e8 f7 30 00 00       	call   8061b70 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 805ea79:	8b 44 24 24          	mov    0x24(%esp),%eax
 805ea7d:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 805ea81:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805ea85:	89 74 24 04          	mov    %esi,0x4(%esp)
 805ea89:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805ea8d:	8b 44 24 34          	mov    0x34(%esp),%eax
 805ea91:	01 54 24 48          	add    %edx,0x48(%esp)
 805ea95:	89 04 24             	mov    %eax,(%esp)
 805ea98:	e8 e3 2b 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ea9d:	83 44 24 28 01       	addl   $0x1,0x28(%esp)
 805eaa2:	8b 44 24 28          	mov    0x28(%esp),%eax
 805eaa6:	39 44 24 30          	cmp    %eax,0x30(%esp)
 805eaaa:	76 6c                	jbe    805eb18 <_ZN6__asan22DescribeAddressIfStackEmm+0x278>
 805eaac:	8b 44 24 48          	mov    0x48(%esp),%eax
 805eab0:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 805eab7:	00 
 805eab8:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805eabc:	89 04 24             	mov    %eax,(%esp)
 805eabf:	e8 3c 32 00 00       	call   8061d00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci>
 805eac4:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 805eacb:	00 
 805eacc:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805ead0:	89 c6                	mov    %eax,%esi
 805ead2:	8b 44 24 48          	mov    0x48(%esp),%eax
 805ead6:	89 04 24             	mov    %eax,(%esp)
 805ead9:	e8 22 32 00 00       	call   8061d00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci>
 805eade:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 805eae5:	00 
 805eae6:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805eaea:	89 c5                	mov    %eax,%ebp
 805eaec:	8b 44 24 48          	mov    0x48(%esp),%eax
 805eaf0:	89 04 24             	mov    %eax,(%esp)
 805eaf3:	e8 08 32 00 00       	call   8061d00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci>
 805eaf8:	85 f6                	test   %esi,%esi
 805eafa:	89 c2                	mov    %eax,%edx
 805eafc:	0f 85 26 ff ff ff    	jne    805ea28 <_ZN6__asan22DescribeAddressIfStackEmm+0x188>
 805eb02:	8b 44 24 38          	mov    0x38(%esp),%eax
 805eb06:	89 44 24 04          	mov    %eax,0x4(%esp)
 805eb0a:	8d 83 7c 59 fd ff    	lea    -0x2a684(%ebx),%eax
 805eb10:	89 04 24             	mov    %eax,(%esp)
 805eb13:	e8 68 2b 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805eb18:	8d 83 bc 59 fd ff    	lea    -0x2a644(%ebx),%eax
 805eb1e:	89 04 24             	mov    %eax,(%esp)
 805eb21:	e8 5a 2b 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805eb26:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 805eb2a:	8b 00                	mov    (%eax),%eax
 805eb2c:	89 04 24             	mov    %eax,(%esp)
 805eb2f:	e8 5c f6 ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 805eb34:	b8 01 00 00 00       	mov    $0x1,%eax
 805eb39:	8b bc 24 4c 10 00 00 	mov    0x104c(%esp),%edi
 805eb40:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 805eb47:	75 7e                	jne    805ebc7 <_ZN6__asan22DescribeAddressIfStackEmm+0x327>
 805eb49:	81 c4 5c 10 00 00    	add    $0x105c,%esp
 805eb4f:	5b                   	pop    %ebx
 805eb50:	5e                   	pop    %esi
 805eb51:	5f                   	pop    %edi
 805eb52:	5d                   	pop    %ebp
 805eb53:	c3                   	ret    
 805eb54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805eb58:	8d 83 b7 60 fd ff    	lea    -0x29f49(%ebx),%eax
 805eb5e:	8d ab 1b 6b fd ff    	lea    -0x294e5(%ebx),%ebp
 805eb64:	89 44 24 04          	mov    %eax,0x4(%esp)
 805eb68:	89 2c 24             	mov    %ebp,(%esp)
 805eb6b:	e8 10 2b 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805eb70:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 805eb74:	8b 00                	mov    (%eax),%eax
 805eb76:	8b 10                	mov    (%eax),%edx
 805eb78:	8b 44 24 24          	mov    0x24(%esp),%eax
 805eb7c:	89 54 24 28          	mov    %edx,0x28(%esp)
 805eb80:	89 04 24             	mov    %eax,(%esp)
 805eb83:	e8 58 34 00 00       	call   8061fe0 <_ZN11__sanitizer8DemangleEPKc>
 805eb88:	8b 54 24 28          	mov    0x28(%esp),%edx
 805eb8c:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805eb90:	89 54 24 10          	mov    %edx,0x10(%esp)
 805eb94:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805eb98:	8b 44 24 44          	mov    0x44(%esp),%eax
 805eb9c:	89 44 24 08          	mov    %eax,0x8(%esp)
 805eba0:	8d 83 5c 5a fd ff    	lea    -0x2a5a4(%ebx),%eax
 805eba6:	89 04 24             	mov    %eax,(%esp)
 805eba9:	e8 d2 2a 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ebae:	8d 8b 6f 60 fd ff    	lea    -0x29f91(%ebx),%ecx
 805ebb4:	e9 12 fe ff ff       	jmp    805e9cb <_ZN6__asan22DescribeAddressIfStackEmm+0x12b>
 805ebb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805ebc0:	31 c0                	xor    %eax,%eax
 805ebc2:	e9 72 ff ff ff       	jmp    805eb39 <_ZN6__asan22DescribeAddressIfStackEmm+0x299>
 805ebc7:	e8 f4 3f 02 00       	call   8082bc0 <__stack_chk_fail_local>
 805ebcc:	8d 83 76 61 fd ff    	lea    -0x29e8a(%ebx),%eax
 805ebd2:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ebd6:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805ebdc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ebe3:	00 
 805ebe4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ebeb:	00 
 805ebec:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ebf3:	00 
 805ebf4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ebfb:	00 
 805ebfc:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)
 805ec03:	00 
 805ec04:	89 04 24             	mov    %eax,(%esp)
 805ec07:	e8 a4 37 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ec0c:	8d 83 5f 61 fd ff    	lea    -0x29ea1(%ebx),%eax
 805ec12:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ec16:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805ec1c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ec23:	00 
 805ec24:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ec2b:	00 
 805ec2c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ec33:	00 
 805ec34:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ec3b:	00 
 805ec3c:	c7 44 24 04 f7 00 00 	movl   $0xf7,0x4(%esp)
 805ec43:	00 
 805ec44:	89 04 24             	mov    %eax,(%esp)
 805ec47:	e8 64 37 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ec4c:	8d 83 8a 61 fd ff    	lea    -0x29e76(%ebx),%eax
 805ec52:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ec56:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805ec5c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ec63:	00 
 805ec64:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ec6b:	00 
 805ec6c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ec73:	00 
 805ec74:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ec7b:	00 
 805ec7c:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)
 805ec83:	00 
 805ec84:	89 04 24             	mov    %eax,(%esp)
 805ec87:	e8 24 37 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ec8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0805ec90 <_ZN6__asan15DescribeAddressEmm>:
 805ec90:	57                   	push   %edi
 805ec91:	56                   	push   %esi
 805ec92:	53                   	push   %ebx
 805ec93:	83 ec 20             	sub    $0x20,%esp
 805ec96:	e8 55 ae fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ec9b:	81 c3 65 13 05 00    	add    $0x51365,%ebx
 805eca1:	8b 74 24 30          	mov    0x30(%esp),%esi
 805eca5:	8b 7c 24 34          	mov    0x34(%esp),%edi
 805eca9:	89 34 24             	mov    %esi,(%esp)
 805ecac:	e8 5f f2 ff ff       	call   805df10 <_ZN6__asan23DescribeAddressIfShadowEm>
 805ecb1:	84 c0                	test   %al,%al
 805ecb3:	75 33                	jne    805ece8 <_ZN6__asan15DescribeAddressEmm+0x58>
 805ecb5:	81 fe fe ff ff 1f    	cmp    $0x1ffffffe,%esi
 805ecbb:	76 1b                	jbe    805ecd8 <_ZN6__asan15DescribeAddressEmm+0x48>
 805ecbd:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805ecc3:	8b 00                	mov    (%eax),%eax
 805ecc5:	85 c0                	test   %eax,%eax
 805ecc7:	74 4f                	je     805ed18 <_ZN6__asan15DescribeAddressEmm+0x88>
 805ecc9:	39 c6                	cmp    %eax,%esi
 805eccb:	72 4b                	jb     805ed18 <_ZN6__asan15DescribeAddressEmm+0x88>
 805eccd:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805ecd3:	3b 30                	cmp    (%eax),%esi
 805ecd5:	77 41                	ja     805ed18 <_ZN6__asan15DescribeAddressEmm+0x88>
 805ecd7:	90                   	nop
 805ecd8:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805ecdc:	89 34 24             	mov    %esi,(%esp)
 805ecdf:	e8 3c cb ff ff       	call   805b820 <_ZN6__asan23DescribeAddressIfGlobalEmm>
 805ece4:	84 c0                	test   %al,%al
 805ece6:	74 08                	je     805ecf0 <_ZN6__asan15DescribeAddressEmm+0x60>
 805ece8:	83 c4 20             	add    $0x20,%esp
 805eceb:	5b                   	pop    %ebx
 805ecec:	5e                   	pop    %esi
 805eced:	5f                   	pop    %edi
 805ecee:	c3                   	ret    
 805ecef:	90                   	nop
 805ecf0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805ecf4:	89 34 24             	mov    %esi,(%esp)
 805ecf7:	e8 a4 fb ff ff       	call   805e8a0 <_ZN6__asan22DescribeAddressIfStackEmm>
 805ecfc:	84 c0                	test   %al,%al
 805ecfe:	75 e8                	jne    805ece8 <_ZN6__asan15DescribeAddressEmm+0x58>
 805ed00:	89 7c 24 34          	mov    %edi,0x34(%esp)
 805ed04:	89 74 24 30          	mov    %esi,0x30(%esp)
 805ed08:	83 c4 20             	add    $0x20,%esp
 805ed0b:	5b                   	pop    %ebx
 805ed0c:	5e                   	pop    %esi
 805ed0d:	5f                   	pop    %edi
 805ed0e:	e9 ed f5 ff ff       	jmp    805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805ed13:	90                   	nop
 805ed14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805ed18:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805ed1e:	8b 00                	mov    (%eax),%eax
 805ed20:	89 c2                	mov    %eax,%edx
 805ed22:	c1 ea 03             	shr    $0x3,%edx
 805ed25:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805ed2b:	39 d6                	cmp    %edx,%esi
 805ed2d:	72 04                	jb     805ed33 <_ZN6__asan15DescribeAddressEmm+0xa3>
 805ed2f:	39 c6                	cmp    %eax,%esi
 805ed31:	76 a5                	jbe    805ecd8 <_ZN6__asan15DescribeAddressEmm+0x48>
 805ed33:	8d 83 b8 61 fd ff    	lea    -0x29e48(%ebx),%eax
 805ed39:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ed3d:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805ed43:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805ed4a:	00 
 805ed4b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805ed52:	00 
 805ed53:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805ed5a:	00 
 805ed5b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805ed62:	00 
 805ed63:	c7 44 24 04 7c 01 00 	movl   $0x17c,0x4(%esp)
 805ed6a:	00 
 805ed6b:	89 04 24             	mov    %eax,(%esp)
 805ed6e:	e8 3d 36 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805ed73:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805ed79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805ed80 <_ZN6__asan13ReportSIGSEGVEmmmm>:
 805ed80:	55                   	push   %ebp
 805ed81:	57                   	push   %edi
 805ed82:	56                   	push   %esi
 805ed83:	53                   	push   %ebx
 805ed84:	e8 67 ad fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ed89:	81 c3 77 12 05 00    	add    $0x51277,%ebx
 805ed8f:	81 ec 3c 04 00 00    	sub    $0x43c,%esp
 805ed95:	8d 74 24 27          	lea    0x27(%esp),%esi
 805ed99:	89 34 24             	mov    %esi,(%esp)
 805ed9c:	e8 4f 12 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805eda1:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805eda7:	e8 34 ee ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805edac:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805edb2:	89 3c 24             	mov    %edi,(%esp)
 805edb5:	89 c5                	mov    %eax,%ebp
 805edb7:	89 e9                	mov    %ebp,%ecx
 805edb9:	84 c9                	test   %cl,%cl
 805edbb:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805edc1:	0f 44 c2             	cmove  %edx,%eax
 805edc4:	89 44 24 04          	mov    %eax,0x4(%esp)
 805edc8:	e8 b3 28 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805edcd:	e8 9e ab ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805edd2:	31 d2                	xor    %edx,%edx
 805edd4:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 805eddb:	0f 85 c8 00 00 00    	jne    805eea9 <_ZN6__asan13ReportSIGSEGVEmmmm+0x129>
 805ede1:	8b 84 24 58 04 00 00 	mov    0x458(%esp),%eax
 805ede8:	89 54 24 14          	mov    %edx,0x14(%esp)
 805edec:	89 44 24 10          	mov    %eax,0x10(%esp)
 805edf0:	8b 84 24 54 04 00 00 	mov    0x454(%esp),%eax
 805edf7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805edfb:	8b 84 24 50 04 00 00 	mov    0x450(%esp),%eax
 805ee02:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ee06:	8b 84 24 5c 04 00 00 	mov    0x45c(%esp),%eax
 805ee0d:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ee11:	8d 83 2c 5b fd ff    	lea    -0x2a4d4(%ebx),%eax
 805ee17:	89 04 24             	mov    %eax,(%esp)
 805ee1a:	e8 21 29 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805ee1f:	89 e9                	mov    %ebp,%ecx
 805ee21:	84 c9                	test   %cl,%cl
 805ee23:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805ee29:	8d 83 6f 60 fd ff    	lea    -0x29f91(%ebx),%eax
 805ee2f:	0f 44 c2             	cmove  %edx,%eax
 805ee32:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ee36:	89 3c 24             	mov    %edi,(%esp)
 805ee39:	8d 7c 24 28          	lea    0x28(%esp),%edi
 805ee3d:	e8 3e 28 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ee42:	8d 83 7c 5b fd ff    	lea    -0x2a484(%ebx),%eax
 805ee48:	89 04 24             	mov    %eax,(%esp)
 805ee4b:	e8 30 28 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ee50:	e8 cb 96 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805ee55:	0f b6 40 4c          	movzbl 0x4c(%eax),%eax
 805ee59:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 805ee60:	00 
 805ee61:	89 3c 24             	mov    %edi,(%esp)
 805ee64:	89 44 24 10          	mov    %eax,0x10(%esp)
 805ee68:	8b 84 24 58 04 00 00 	mov    0x458(%esp),%eax
 805ee6f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805ee73:	8b 84 24 50 04 00 00 	mov    0x450(%esp),%eax
 805ee7a:	89 44 24 08          	mov    %eax,0x8(%esp)
 805ee7e:	e8 ed d5 ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805ee83:	89 3c 24             	mov    %edi,(%esp)
 805ee86:	e8 55 13 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805ee8b:	8b 54 24 28          	mov    0x28(%esp),%edx
 805ee8f:	8d 44 24 30          	lea    0x30(%esp),%eax
 805ee93:	89 04 24             	mov    %eax,(%esp)
 805ee96:	8d 83 df 61 fd ff    	lea    -0x29e21(%ebx),%eax
 805ee9c:	e8 cf eb ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805eea1:	89 34 24             	mov    %esi,(%esp)
 805eea4:	e8 87 12 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805eea9:	e8 82 eb ff ff       	call   805da30 <_ZN6__asan18AsanThreadRegistry22GetCurrentTidOrInvalidEv.part.10>
 805eeae:	89 c2                	mov    %eax,%edx
 805eeb0:	e9 2c ff ff ff       	jmp    805ede1 <_ZN6__asan13ReportSIGSEGVEmmmm+0x61>
 805eeb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805eeb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805eec0 <_ZN6__asan16ReportDoubleFreeEmPN11__sanitizer10StackTraceE>:
 805eec0:	55                   	push   %ebp
 805eec1:	57                   	push   %edi
 805eec2:	56                   	push   %esi
 805eec3:	53                   	push   %ebx
 805eec4:	e8 27 ac fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805eec9:	81 c3 37 11 05 00    	add    $0x51137,%ebx
 805eecf:	83 ec 2c             	sub    $0x2c,%esp
 805eed2:	8d 6c 24 1f          	lea    0x1f(%esp),%ebp
 805eed6:	8b 74 24 44          	mov    0x44(%esp),%esi
 805eeda:	89 2c 24             	mov    %ebp,(%esp)
 805eedd:	e8 0e 11 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805eee2:	e8 f9 ec ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805eee7:	84 c0                	test   %al,%al
 805eee9:	74 77                	je     805ef62 <_ZN6__asan16ReportDoubleFreeEmPN11__sanitizer10StackTraceE+0xa2>
 805eeeb:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805eef1:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805eef7:	89 44 24 04          	mov    %eax,0x4(%esp)
 805eefb:	89 3c 24             	mov    %edi,(%esp)
 805eefe:	e8 7d 27 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ef03:	8b 44 24 40          	mov    0x40(%esp),%eax
 805ef07:	8d 93 b0 5b fd ff    	lea    -0x2a450(%ebx),%edx
 805ef0d:	89 14 24             	mov    %edx,(%esp)
 805ef10:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ef14:	e8 27 28 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805ef19:	8d 93 6f 60 fd ff    	lea    -0x29f91(%ebx),%edx
 805ef1f:	89 54 24 04          	mov    %edx,0x4(%esp)
 805ef23:	89 3c 24             	mov    %edi,(%esp)
 805ef26:	e8 55 27 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ef2b:	89 34 24             	mov    %esi,(%esp)
 805ef2e:	e8 ad 12 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805ef33:	8b 44 24 40          	mov    0x40(%esp),%eax
 805ef37:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805ef3e:	00 
 805ef3f:	89 04 24             	mov    %eax,(%esp)
 805ef42:	e8 b9 f3 ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805ef47:	8d 46 08             	lea    0x8(%esi),%eax
 805ef4a:	89 04 24             	mov    %eax,(%esp)
 805ef4d:	8b 16                	mov    (%esi),%edx
 805ef4f:	8d 83 e4 61 fd ff    	lea    -0x29e1c(%ebx),%eax
 805ef55:	e8 16 eb ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805ef5a:	89 2c 24             	mov    %ebp,(%esp)
 805ef5d:	e8 ce 11 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805ef62:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805ef68:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805ef6e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805ef72:	89 3c 24             	mov    %edi,(%esp)
 805ef75:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805ef79:	e8 02 27 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805ef7e:	8b 44 24 40          	mov    0x40(%esp),%eax
 805ef82:	8d 8b b0 5b fd ff    	lea    -0x2a450(%ebx),%ecx
 805ef88:	89 0c 24             	mov    %ecx,(%esp)
 805ef8b:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ef8f:	e8 ac 27 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805ef94:	8b 54 24 0c          	mov    0xc(%esp),%edx
 805ef98:	eb 85                	jmp    805ef1f <_ZN6__asan16ReportDoubleFreeEmPN11__sanitizer10StackTraceE+0x5f>
 805ef9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805efa0 <_ZN6__asan21ReportFreeNotMallocedEmPN11__sanitizer10StackTraceE>:
 805efa0:	55                   	push   %ebp
 805efa1:	57                   	push   %edi
 805efa2:	56                   	push   %esi
 805efa3:	53                   	push   %ebx
 805efa4:	e8 47 ab fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805efa9:	81 c3 57 10 05 00    	add    $0x51057,%ebx
 805efaf:	83 ec 2c             	sub    $0x2c,%esp
 805efb2:	8d 6c 24 1f          	lea    0x1f(%esp),%ebp
 805efb6:	8b 74 24 44          	mov    0x44(%esp),%esi
 805efba:	89 2c 24             	mov    %ebp,(%esp)
 805efbd:	e8 2e 10 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805efc2:	e8 19 ec ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805efc7:	84 c0                	test   %al,%al
 805efc9:	74 77                	je     805f042 <_ZN6__asan21ReportFreeNotMallocedEmPN11__sanitizer10StackTraceE+0xa2>
 805efcb:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805efd1:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805efd7:	89 44 24 04          	mov    %eax,0x4(%esp)
 805efdb:	89 3c 24             	mov    %edi,(%esp)
 805efde:	e8 9d 26 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805efe3:	8b 44 24 40          	mov    0x40(%esp),%eax
 805efe7:	8d 93 e8 5b fd ff    	lea    -0x2a418(%ebx),%edx
 805efed:	89 14 24             	mov    %edx,(%esp)
 805eff0:	89 44 24 04          	mov    %eax,0x4(%esp)
 805eff4:	e8 47 27 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805eff9:	8d 93 6f 60 fd ff    	lea    -0x29f91(%ebx),%edx
 805efff:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f003:	89 3c 24             	mov    %edi,(%esp)
 805f006:	e8 75 26 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f00b:	89 34 24             	mov    %esi,(%esp)
 805f00e:	e8 cd 11 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f013:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f017:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805f01e:	00 
 805f01f:	89 04 24             	mov    %eax,(%esp)
 805f022:	e8 d9 f2 ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f027:	8d 46 08             	lea    0x8(%esi),%eax
 805f02a:	89 04 24             	mov    %eax,(%esp)
 805f02d:	8b 16                	mov    (%esi),%edx
 805f02f:	8d 83 f0 61 fd ff    	lea    -0x29e10(%ebx),%eax
 805f035:	e8 36 ea ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805f03a:	89 2c 24             	mov    %ebp,(%esp)
 805f03d:	e8 ee 10 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f042:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805f048:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f04e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f052:	89 3c 24             	mov    %edi,(%esp)
 805f055:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805f059:	e8 22 26 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f05e:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f062:	8d 8b e8 5b fd ff    	lea    -0x2a418(%ebx),%ecx
 805f068:	89 0c 24             	mov    %ecx,(%esp)
 805f06b:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f06f:	e8 cc 26 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f074:	8b 54 24 0c          	mov    0xc(%esp),%edx
 805f078:	eb 85                	jmp    805efff <_ZN6__asan21ReportFreeNotMallocedEmPN11__sanitizer10StackTraceE+0x5f>
 805f07a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805f080 <_ZN6__asan23ReportAllocTypeMismatchEmPN11__sanitizer10StackTraceENS_9AllocTypeES3_>:
 805f080:	55                   	push   %ebp
 805f081:	31 d2                	xor    %edx,%edx
 805f083:	57                   	push   %edi
 805f084:	56                   	push   %esi
 805f085:	53                   	push   %ebx
 805f086:	83 ec 3c             	sub    $0x3c,%esp
 805f089:	8b 74 24 58          	mov    0x58(%esp),%esi
 805f08d:	e8 5e aa fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f092:	81 c3 6e 0f 05 00    	add    $0x50f6e,%ebx
 805f098:	3b 74 24 5c          	cmp    0x5c(%esp),%esi
 805f09c:	0f 84 19 01 00 00    	je     805f1bb <_ZN6__asan23ReportAllocTypeMismatchEmPN11__sanitizer10StackTraceENS_9AllocTypeES3_+0x13b>
 805f0a2:	8d 6c 24 2f          	lea    0x2f(%esp),%ebp
 805f0a6:	89 2c 24             	mov    %ebp,(%esp)
 805f0a9:	e8 42 0f 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805f0ae:	e8 2d eb ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805f0b3:	84 c0                	test   %al,%al
 805f0b5:	0f 85 ad 00 00 00    	jne    805f168 <_ZN6__asan23ReportAllocTypeMismatchEmPN11__sanitizer10StackTraceENS_9AllocTypeES3_+0xe8>
 805f0bb:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805f0c1:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f0c7:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f0cb:	89 3c 24             	mov    %edi,(%esp)
 805f0ce:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 805f0d2:	e8 a9 25 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f0d7:	8b 44 24 50          	mov    0x50(%esp),%eax
 805f0db:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805f0df:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 805f0e3:	8b 8c 83 ac fe ff ff 	mov    -0x154(%ebx,%eax,4),%ecx
 805f0ea:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805f0ee:	8b 8c b3 9c fe ff ff 	mov    -0x164(%ebx,%esi,4),%ecx
 805f0f5:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 805f0f9:	8d 8b c0 5c fd ff    	lea    -0x2a340(%ebx),%ecx
 805f0ff:	89 0c 24             	mov    %ecx,(%esp)
 805f102:	e8 39 26 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f107:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 805f10b:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f10f:	89 3c 24             	mov    %edi,(%esp)
 805f112:	e8 69 25 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f117:	8b 44 24 54          	mov    0x54(%esp),%eax
 805f11b:	89 04 24             	mov    %eax,(%esp)
 805f11e:	e8 bd 10 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f123:	8b 44 24 50          	mov    0x50(%esp),%eax
 805f127:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805f12e:	00 
 805f12f:	89 04 24             	mov    %eax,(%esp)
 805f132:	e8 c9 f1 ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f137:	8b 44 24 54          	mov    0x54(%esp),%eax
 805f13b:	83 c0 08             	add    $0x8,%eax
 805f13e:	89 04 24             	mov    %eax,(%esp)
 805f141:	8b 44 24 54          	mov    0x54(%esp),%eax
 805f145:	8b 10                	mov    (%eax),%edx
 805f147:	8d 83 f9 61 fd ff    	lea    -0x29e07(%ebx),%eax
 805f14d:	e8 1e e9 ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805f152:	8d 83 60 5c fd ff    	lea    -0x2a3a0(%ebx),%eax
 805f158:	89 04 24             	mov    %eax,(%esp)
 805f15b:	e8 e0 25 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f160:	89 2c 24             	mov    %ebp,(%esp)
 805f163:	e8 c8 0f 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f168:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805f16e:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f174:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f178:	89 3c 24             	mov    %edi,(%esp)
 805f17b:	e8 00 25 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f180:	8b 44 24 50          	mov    0x50(%esp),%eax
 805f184:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805f188:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 805f18c:	8b 94 83 ac fe ff ff 	mov    -0x154(%ebx,%eax,4),%edx
 805f193:	89 54 24 08          	mov    %edx,0x8(%esp)
 805f197:	8b 94 b3 9c fe ff ff 	mov    -0x164(%ebx,%esi,4),%edx
 805f19e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f1a2:	8d 93 c0 5c fd ff    	lea    -0x2a340(%ebx),%edx
 805f1a8:	89 14 24             	mov    %edx,(%esp)
 805f1ab:	e8 90 25 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f1b0:	8d 93 6f 60 fd ff    	lea    -0x29f91(%ebx),%edx
 805f1b6:	e9 50 ff ff ff       	jmp    805f10b <_ZN6__asan23ReportAllocTypeMismatchEmPN11__sanitizer10StackTraceENS_9AllocTypeES3_+0x8b>
 805f1bb:	8d 83 3c 5c fd ff    	lea    -0x2a3c4(%ebx),%eax
 805f1c1:	89 44 24 08          	mov    %eax,0x8(%esp)
 805f1c5:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805f1cb:	89 74 24 14          	mov    %esi,0x14(%esp)
 805f1cf:	89 54 24 18          	mov    %edx,0x18(%esp)
 805f1d3:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805f1d7:	89 54 24 10          	mov    %edx,0x10(%esp)
 805f1db:	c7 44 24 04 11 02 00 	movl   $0x211,0x4(%esp)
 805f1e2:	00 
 805f1e3:	89 04 24             	mov    %eax,(%esp)
 805f1e6:	e8 c5 31 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805f1eb:	90                   	nop
 805f1ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0805f1f0 <_ZN6__asan30ReportMallocUsableSizeNotOwnedEmPN11__sanitizer10StackTraceE>:
 805f1f0:	55                   	push   %ebp
 805f1f1:	57                   	push   %edi
 805f1f2:	56                   	push   %esi
 805f1f3:	53                   	push   %ebx
 805f1f4:	e8 f7 a8 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f1f9:	81 c3 07 0e 05 00    	add    $0x50e07,%ebx
 805f1ff:	83 ec 2c             	sub    $0x2c,%esp
 805f202:	8d 6c 24 1f          	lea    0x1f(%esp),%ebp
 805f206:	8b 74 24 44          	mov    0x44(%esp),%esi
 805f20a:	89 2c 24             	mov    %ebp,(%esp)
 805f20d:	e8 de 0d 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805f212:	e8 c9 e9 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805f217:	84 c0                	test   %al,%al
 805f219:	74 77                	je     805f292 <_ZN6__asan30ReportMallocUsableSizeNotOwnedEmPN11__sanitizer10StackTraceE+0xa2>
 805f21b:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805f221:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f227:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f22b:	89 3c 24             	mov    %edi,(%esp)
 805f22e:	e8 4d 24 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f233:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f237:	8d 93 04 5d fd ff    	lea    -0x2a2fc(%ebx),%edx
 805f23d:	89 14 24             	mov    %edx,(%esp)
 805f240:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f244:	e8 f7 24 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f249:	8d 93 6f 60 fd ff    	lea    -0x29f91(%ebx),%edx
 805f24f:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f253:	89 3c 24             	mov    %edi,(%esp)
 805f256:	e8 25 24 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f25b:	89 34 24             	mov    %esi,(%esp)
 805f25e:	e8 7d 0f 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f263:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f267:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805f26e:	00 
 805f26f:	89 04 24             	mov    %eax,(%esp)
 805f272:	e8 89 f0 ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f277:	8d 46 08             	lea    0x8(%esi),%eax
 805f27a:	89 04 24             	mov    %eax,(%esp)
 805f27d:	8b 16                	mov    (%esi),%edx
 805f27f:	8d 83 10 62 fd ff    	lea    -0x29df0(%ebx),%eax
 805f285:	e8 e6 e7 ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805f28a:	89 2c 24             	mov    %ebp,(%esp)
 805f28d:	e8 9e 0e 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f292:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805f298:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f29e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f2a2:	89 3c 24             	mov    %edi,(%esp)
 805f2a5:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805f2a9:	e8 d2 23 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f2ae:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f2b2:	8d 8b 04 5d fd ff    	lea    -0x2a2fc(%ebx),%ecx
 805f2b8:	89 0c 24             	mov    %ecx,(%esp)
 805f2bb:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f2bf:	e8 7c 24 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f2c4:	8b 54 24 0c          	mov    0xc(%esp),%edx
 805f2c8:	eb 85                	jmp    805f24f <_ZN6__asan30ReportMallocUsableSizeNotOwnedEmPN11__sanitizer10StackTraceE+0x5f>
 805f2ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805f2d0 <_ZN6__asan34ReportAsanGetAllocatedSizeNotOwnedEmPN11__sanitizer10StackTraceE>:
 805f2d0:	55                   	push   %ebp
 805f2d1:	57                   	push   %edi
 805f2d2:	56                   	push   %esi
 805f2d3:	53                   	push   %ebx
 805f2d4:	e8 17 a8 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f2d9:	81 c3 27 0d 05 00    	add    $0x50d27,%ebx
 805f2df:	83 ec 2c             	sub    $0x2c,%esp
 805f2e2:	8d 6c 24 1f          	lea    0x1f(%esp),%ebp
 805f2e6:	8b 74 24 44          	mov    0x44(%esp),%esi
 805f2ea:	89 2c 24             	mov    %ebp,(%esp)
 805f2ed:	e8 fe 0c 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805f2f2:	e8 e9 e8 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805f2f7:	84 c0                	test   %al,%al
 805f2f9:	74 77                	je     805f372 <_ZN6__asan34ReportAsanGetAllocatedSizeNotOwnedEmPN11__sanitizer10StackTraceE+0xa2>
 805f2fb:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805f301:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f307:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f30b:	89 3c 24             	mov    %edi,(%esp)
 805f30e:	e8 6d 23 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f313:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f317:	8d 93 6c 5d fd ff    	lea    -0x2a294(%ebx),%edx
 805f31d:	89 14 24             	mov    %edx,(%esp)
 805f320:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f324:	e8 17 24 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f329:	8d 93 6f 60 fd ff    	lea    -0x29f91(%ebx),%edx
 805f32f:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f333:	89 3c 24             	mov    %edi,(%esp)
 805f336:	e8 45 23 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f33b:	89 34 24             	mov    %esi,(%esp)
 805f33e:	e8 9d 0e 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f343:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f347:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805f34e:	00 
 805f34f:	89 04 24             	mov    %eax,(%esp)
 805f352:	e8 a9 ef ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f357:	8d 46 08             	lea    0x8(%esi),%eax
 805f35a:	89 04 24             	mov    %eax,(%esp)
 805f35d:	8b 16                	mov    (%esi),%edx
 805f35f:	8d 83 27 62 fd ff    	lea    -0x29dd9(%ebx),%eax
 805f365:	e8 06 e7 ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805f36a:	89 2c 24             	mov    %ebp,(%esp)
 805f36d:	e8 be 0d 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f372:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805f378:	8d bb 1b 6b fd ff    	lea    -0x294e5(%ebx),%edi
 805f37e:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f382:	89 3c 24             	mov    %edi,(%esp)
 805f385:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805f389:	e8 f2 22 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f38e:	8b 44 24 40          	mov    0x40(%esp),%eax
 805f392:	8d 8b 6c 5d fd ff    	lea    -0x2a294(%ebx),%ecx
 805f398:	89 0c 24             	mov    %ecx,(%esp)
 805f39b:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f39f:	e8 9c 23 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f3a4:	8b 54 24 0c          	mov    0xc(%esp),%edx
 805f3a8:	eb 85                	jmp    805f32f <_ZN6__asan34ReportAsanGetAllocatedSizeNotOwnedEmPN11__sanitizer10StackTraceE+0x5f>
 805f3aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805f3b0 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE>:
 805f3b0:	55                   	push   %ebp
 805f3b1:	57                   	push   %edi
 805f3b2:	56                   	push   %esi
 805f3b3:	53                   	push   %ebx
 805f3b4:	81 ec ac 00 00 00    	sub    $0xac,%esp
 805f3ba:	e8 31 a7 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f3bf:	81 c3 41 0c 05 00    	add    $0x50c41,%ebx
 805f3c5:	8b 84 24 c4 00 00 00 	mov    0xc4(%esp),%eax
 805f3cc:	8b b4 24 c0 00 00 00 	mov    0xc0(%esp),%esi
 805f3d3:	8b bc 24 cc 00 00 00 	mov    0xcc(%esp),%edi
 805f3da:	8b ac 24 d4 00 00 00 	mov    0xd4(%esp),%ebp
 805f3e1:	89 44 24 20          	mov    %eax,0x20(%esp)
 805f3e5:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f3eb:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%esp)
 805f3f2:	31 c0                	xor    %eax,%eax
 805f3f4:	8d 44 24 37          	lea    0x37(%esp),%eax
 805f3f8:	89 04 24             	mov    %eax,(%esp)
 805f3fb:	89 44 24 24          	mov    %eax,0x24(%esp)
 805f3ff:	e8 ec 0b 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805f404:	e8 d7 e7 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805f409:	89 74 24 0c          	mov    %esi,0xc(%esp)
 805f40d:	8d 74 24 38          	lea    0x38(%esp),%esi
 805f411:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)
 805f418:	00 
 805f419:	89 34 24             	mov    %esi,(%esp)
 805f41c:	89 c2                	mov    %eax,%edx
 805f41e:	8d 83 45 62 fd ff    	lea    -0x29dbb(%ebx),%eax
 805f424:	89 44 24 08          	mov    %eax,0x8(%esp)
 805f428:	89 54 24 28          	mov    %edx,0x28(%esp)
 805f42c:	e8 df 22 00 00       	call   8061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 805f431:	8b 54 24 28          	mov    0x28(%esp),%edx
 805f435:	84 d2                	test   %dl,%dl
 805f437:	0f 84 b8 00 00 00    	je     805f4f5 <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE+0x145>
 805f43d:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805f443:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f447:	8d 83 1b 6b fd ff    	lea    -0x294e5(%ebx),%eax
 805f44d:	89 04 24             	mov    %eax,(%esp)
 805f450:	89 44 24 28          	mov    %eax,0x28(%esp)
 805f454:	e8 27 22 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f459:	8b 94 24 d0 00 00 00 	mov    0xd0(%esp),%edx
 805f460:	8b 44 24 20          	mov    0x20(%esp),%eax
 805f464:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805f468:	89 74 24 04          	mov    %esi,0x4(%esp)
 805f46c:	01 fa                	add    %edi,%edx
 805f46e:	89 54 24 14          	mov    %edx,0x14(%esp)
 805f472:	8b 94 24 c8 00 00 00 	mov    0xc8(%esp),%edx
 805f479:	89 44 24 08          	mov    %eax,0x8(%esp)
 805f47d:	01 c2                	add    %eax,%edx
 805f47f:	89 54 24 0c          	mov    %edx,0xc(%esp)
 805f483:	8d 93 d8 5d fd ff    	lea    -0x2a228(%ebx),%edx
 805f489:	89 14 24             	mov    %edx,(%esp)
 805f48c:	e8 af 22 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f491:	8b 44 24 28          	mov    0x28(%esp),%eax
 805f495:	8d 93 6f 60 fd ff    	lea    -0x29f91(%ebx),%edx
 805f49b:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f49f:	89 04 24             	mov    %eax,(%esp)
 805f4a2:	e8 d9 21 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f4a7:	89 2c 24             	mov    %ebp,(%esp)
 805f4aa:	e8 31 0d 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f4af:	8b 84 24 c8 00 00 00 	mov    0xc8(%esp),%eax
 805f4b6:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f4ba:	8b 44 24 20          	mov    0x20(%esp),%eax
 805f4be:	89 04 24             	mov    %eax,(%esp)
 805f4c1:	e8 ca f7 ff ff       	call   805ec90 <_ZN6__asan15DescribeAddressEmm>
 805f4c6:	8b 84 24 d0 00 00 00 	mov    0xd0(%esp),%eax
 805f4cd:	89 3c 24             	mov    %edi,(%esp)
 805f4d0:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f4d4:	e8 b7 f7 ff ff       	call   805ec90 <_ZN6__asan15DescribeAddressEmm>
 805f4d9:	8d 45 08             	lea    0x8(%ebp),%eax
 805f4dc:	89 04 24             	mov    %eax,(%esp)
 805f4df:	8b 55 00             	mov    0x0(%ebp),%edx
 805f4e2:	89 f0                	mov    %esi,%eax
 805f4e4:	e8 87 e5 ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805f4e9:	8b 44 24 24          	mov    0x24(%esp),%eax
 805f4ed:	89 04 24             	mov    %eax,(%esp)
 805f4f0:	e8 3b 0c 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f4f5:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 805f4fb:	8d 83 1b 6b fd ff    	lea    -0x294e5(%ebx),%eax
 805f501:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f505:	89 04 24             	mov    %eax,(%esp)
 805f508:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 805f50c:	89 44 24 28          	mov    %eax,0x28(%esp)
 805f510:	e8 6b 21 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f515:	8b 8c 24 d0 00 00 00 	mov    0xd0(%esp),%ecx
 805f51c:	8b 44 24 20          	mov    0x20(%esp),%eax
 805f520:	89 7c 24 10          	mov    %edi,0x10(%esp)
 805f524:	89 74 24 04          	mov    %esi,0x4(%esp)
 805f528:	01 f9                	add    %edi,%ecx
 805f52a:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 805f52e:	8b 8c 24 c8 00 00 00 	mov    0xc8(%esp),%ecx
 805f535:	89 44 24 08          	mov    %eax,0x8(%esp)
 805f539:	01 c1                	add    %eax,%ecx
 805f53b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 805f53f:	8d 8b d8 5d fd ff    	lea    -0x2a228(%ebx),%ecx
 805f545:	89 0c 24             	mov    %ecx,(%esp)
 805f548:	e8 f3 21 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f54d:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 805f551:	8b 44 24 28          	mov    0x28(%esp),%eax
 805f555:	e9 41 ff ff ff       	jmp    805f49b <_ZN6__asan39ReportStringFunctionMemoryRangesOverlapEPKcS1_mS1_mPN11__sanitizer10StackTraceE+0xeb>
 805f55a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0805f560 <_ZN6__asan22WarnMacFreeUnallocatedEmmPKcPN11__sanitizer10StackTraceE>:
 805f560:	55                   	push   %ebp
 805f561:	57                   	push   %edi
 805f562:	56                   	push   %esi
 805f563:	53                   	push   %ebx
 805f564:	e8 87 a5 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f569:	81 c3 97 0a 05 00    	add    $0x50a97,%ebx
 805f56f:	83 ec 1c             	sub    $0x1c,%esp
 805f572:	8b 74 24 30          	mov    0x30(%esp),%esi
 805f576:	8b 44 24 34          	mov    0x34(%esp),%eax
 805f57a:	8b 6c 24 38          	mov    0x38(%esp),%ebp
 805f57e:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
 805f582:	89 74 24 04          	mov    %esi,0x4(%esp)
 805f586:	8d 93 24 5e fd ff    	lea    -0x2a1dc(%ebx),%edx
 805f58c:	89 14 24             	mov    %edx,(%esp)
 805f58f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805f593:	e8 e8 20 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f598:	8b 54 24 0c          	mov    0xc(%esp),%edx
 805f59c:	89 f0                	mov    %esi,%eax
 805f59e:	89 2c 24             	mov    %ebp,(%esp)
 805f5a1:	e8 0a e4 ff ff       	call   805d9b0 <_ZN6__asanL19PrintZoneForPointerEmmPKc>
 805f5a6:	89 3c 24             	mov    %edi,(%esp)
 805f5a9:	e8 32 0c 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f5ae:	89 74 24 30          	mov    %esi,0x30(%esp)
 805f5b2:	c7 44 24 34 01 00 00 	movl   $0x1,0x34(%esp)
 805f5b9:	00 
 805f5ba:	83 c4 1c             	add    $0x1c,%esp
 805f5bd:	5b                   	pop    %ebx
 805f5be:	5e                   	pop    %esi
 805f5bf:	5f                   	pop    %edi
 805f5c0:	5d                   	pop    %ebp
 805f5c1:	e9 3a ed ff ff       	jmp    805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f5c6:	8d 76 00             	lea    0x0(%esi),%esi
 805f5c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805f5d0 <_ZN6__asan25ReportMacMzReallocUnknownEmmPKcPN11__sanitizer10StackTraceE>:
 805f5d0:	57                   	push   %edi
 805f5d1:	56                   	push   %esi
 805f5d2:	53                   	push   %ebx
 805f5d3:	e8 18 a5 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f5d8:	81 c3 28 0a 05 00    	add    $0x50a28,%ebx
 805f5de:	83 ec 20             	sub    $0x20,%esp
 805f5e1:	8b 74 24 30          	mov    0x30(%esp),%esi
 805f5e5:	8d 7c 24 1f          	lea    0x1f(%esp),%edi
 805f5e9:	89 3c 24             	mov    %edi,(%esp)
 805f5ec:	e8 ff 09 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805f5f1:	8d 83 98 5e fd ff    	lea    -0x2a168(%ebx),%eax
 805f5f7:	89 04 24             	mov    %eax,(%esp)
 805f5fa:	89 74 24 04          	mov    %esi,0x4(%esp)
 805f5fe:	e8 7d 20 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f603:	8b 44 24 38          	mov    0x38(%esp),%eax
 805f607:	8b 54 24 34          	mov    0x34(%esp),%edx
 805f60b:	89 04 24             	mov    %eax,(%esp)
 805f60e:	89 f0                	mov    %esi,%eax
 805f610:	e8 9b e3 ff ff       	call   805d9b0 <_ZN6__asanL19PrintZoneForPointerEmmPKc>
 805f615:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 805f619:	89 04 24             	mov    %eax,(%esp)
 805f61c:	e8 bf 0b 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f621:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805f628:	00 
 805f629:	89 34 24             	mov    %esi,(%esp)
 805f62c:	e8 cf ec ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f631:	89 3c 24             	mov    %edi,(%esp)
 805f634:	e8 f7 0a 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f639:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805f640 <_ZN6__asan25ReportMacCfReallocUnknownEmmPKcPN11__sanitizer10StackTraceE>:
 805f640:	57                   	push   %edi
 805f641:	56                   	push   %esi
 805f642:	53                   	push   %ebx
 805f643:	e8 a8 a4 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f648:	81 c3 b8 09 05 00    	add    $0x509b8,%ebx
 805f64e:	83 ec 20             	sub    $0x20,%esp
 805f651:	8b 74 24 30          	mov    0x30(%esp),%esi
 805f655:	8d 7c 24 1f          	lea    0x1f(%esp),%edi
 805f659:	89 3c 24             	mov    %edi,(%esp)
 805f65c:	e8 8f 09 00 00       	call   805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>
 805f661:	8d 83 04 5f fd ff    	lea    -0x2a0fc(%ebx),%eax
 805f667:	89 04 24             	mov    %eax,(%esp)
 805f66a:	89 74 24 04          	mov    %esi,0x4(%esp)
 805f66e:	e8 0d 20 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f673:	8b 44 24 38          	mov    0x38(%esp),%eax
 805f677:	8b 54 24 34          	mov    0x34(%esp),%edx
 805f67b:	89 04 24             	mov    %eax,(%esp)
 805f67e:	89 f0                	mov    %esi,%eax
 805f680:	e8 2b e3 ff ff       	call   805d9b0 <_ZN6__asanL19PrintZoneForPointerEmmPKc>
 805f685:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 805f689:	89 04 24             	mov    %eax,(%esp)
 805f68c:	e8 4f 0b 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f691:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805f698:	00 
 805f699:	89 34 24             	mov    %esi,(%esp)
 805f69c:	e8 5f ec ff ff       	call   805e300 <_ZN6__asan19DescribeHeapAddressEmm>
 805f6a1:	89 3c 24             	mov    %edi,(%esp)
 805f6a4:	e8 87 0a 00 00       	call   8060130 <_ZN6__asan19ScopedInErrorReportD1Ev>
 805f6a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0805f6b0 <__asan_report_error>:
 805f6b0:	55                   	push   %ebp
 805f6b1:	57                   	push   %edi
 805f6b2:	56                   	push   %esi
 805f6b3:	53                   	push   %ebx
 805f6b4:	81 ec dc 04 00 00    	sub    $0x4dc,%esp
 805f6ba:	8b 84 24 00 05 00 00 	mov    0x500(%esp),%eax
 805f6c1:	e8 2a a4 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805f6c6:	81 c3 3a 09 05 00    	add    $0x5093a,%ebx
 805f6cc:	8b ac 24 fc 04 00 00 	mov    0x4fc(%esp),%ebp
 805f6d3:	89 44 24 34          	mov    %eax,0x34(%esp)
 805f6d7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 805f6dd:	89 84 24 cc 04 00 00 	mov    %eax,0x4cc(%esp)
 805f6e4:	31 c0                	xor    %eax,%eax
 805f6e6:	b0 01                	mov    $0x1,%al
 805f6e8:	f0 0f c1 83 00 0f 1b 	lock xadd %eax,0x11b0f00(%ebx)
 805f6ef:	01 
 805f6f0:	85 c0                	test   %eax,%eax
 805f6f2:	0f 85 06 08 00 00    	jne    805fefe <.L373+0x88>
 805f6f8:	8b 8b d8 ff ff ff    	mov    -0x28(%ebx),%ecx
 805f6fe:	85 c9                	test   %ecx,%ecx
 805f700:	74 05                	je     805f707 <__asan_report_error+0x57>
 805f702:	e8 59 a0 fe ff       	call   8049760 <__asan_on_error@plt>
 805f707:	e8 64 a2 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805f70c:	31 d2                	xor    %edx,%edx
 805f70e:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 805f715:	0f 85 0f 06 00 00    	jne    805fd2a <.L410+0x537>
 805f71b:	8d 83 e8 5a fd ff    	lea    -0x2a518(%ebx),%eax
 805f721:	89 04 24             	mov    %eax,(%esp)
 805f724:	89 93 fc 0e 1b 01    	mov    %edx,0x11b0efc(%ebx)
 805f72a:	e8 51 1f 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f72f:	81 bb fc 0e 1b 01 ff 	cmpl   $0xffffff,0x11b0efc(%ebx)
 805f736:	ff ff 00 
 805f739:	74 19                	je     805f754 <__asan_report_error+0xa4>
 805f73b:	e8 30 a2 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805f740:	89 04 24             	mov    %eax,(%esp)
 805f743:	e8 38 a4 ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805f748:	85 c0                	test   %eax,%eax
 805f74a:	0f 84 63 07 00 00    	je     805feb3 <.L373+0x3d>
 805f750:	c6 40 18 00          	movb   $0x0,0x18(%eax)
 805f754:	81 fd fe ff ff 1f    	cmp    $0x1ffffffe,%ebp
 805f75a:	76 44                	jbe    805f7a0 <__asan_report_error+0xf0>
 805f75c:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805f762:	8b 10                	mov    (%eax),%edx
 805f764:	85 d2                	test   %edx,%edx
 805f766:	74 70                	je     805f7d8 <__asan_report_error+0x128>
 805f768:	39 d5                	cmp    %edx,%ebp
 805f76a:	72 6c                	jb     805f7d8 <__asan_report_error+0x128>
 805f76c:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805f772:	3b 28                	cmp    (%eax),%ebp
 805f774:	77 62                	ja     805f7d8 <__asan_report_error+0x128>
 805f776:	3b 28                	cmp    (%eax),%ebp
 805f778:	76 26                	jbe    805f7a0 <__asan_report_error+0xf0>
 805f77a:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805f780:	8b 00                	mov    (%eax),%eax
 805f782:	89 c2                	mov    %eax,%edx
 805f784:	c1 ea 03             	shr    $0x3,%edx
 805f787:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805f78d:	39 d5                	cmp    %edx,%ebp
 805f78f:	0f 82 21 06 00 00    	jb     805fdb6 <.L410+0x5c3>
 805f795:	39 c5                	cmp    %eax,%ebp
 805f797:	0f 87 19 06 00 00    	ja     805fdb6 <.L410+0x5c3>
 805f79d:	8d 76 00             	lea    0x0(%esi),%esi
 805f7a0:	89 e8                	mov    %ebp,%eax
 805f7a2:	c1 e8 03             	shr    $0x3,%eax
 805f7a5:	0f b6 90 00 00 00 20 	movzbl 0x20000000(%eax),%edx
 805f7ac:	8d 88 00 00 00 20    	lea    0x20000000(%eax),%ecx
 805f7b2:	84 d2                	test   %dl,%dl
 805f7b4:	0f 84 b6 05 00 00    	je     805fd70 <.L410+0x57d>
 805f7ba:	84 d2                	test   %dl,%dl
 805f7bc:	7e 04                	jle    805f7c2 <__asan_report_error+0x112>
 805f7be:	0f b6 51 01          	movzbl 0x1(%ecx),%edx
 805f7c2:	83 c2 0f             	add    $0xf,%edx
 805f7c5:	80 fa 0c             	cmp    $0xc,%dl
 805f7c8:	77 29                	ja     805f7f3 <.L410>
 805f7ca:	0f b6 d2             	movzbl %dl,%edx
 805f7cd:	8b 84 93 58 65 fd ff 	mov    -0x29aa8(%ebx,%edx,4),%eax
 805f7d4:	01 d8                	add    %ebx,%eax
 805f7d6:	ff e0                	jmp    *%eax
 805f7d8:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805f7de:	8b 08                	mov    (%eax),%ecx
 805f7e0:	89 ce                	mov    %ecx,%esi
 805f7e2:	c1 ee 03             	shr    $0x3,%esi
 805f7e5:	81 c6 01 00 00 20    	add    $0x20000001,%esi
 805f7eb:	39 f5                	cmp    %esi,%ebp
 805f7ed:	0f 83 53 05 00 00    	jae    805fd46 <.L410+0x553>

0805f7f3 <.L410>:
 805f7f3:	8d 83 56 62 fd ff    	lea    -0x29daa(%ebx),%eax
 805f7f9:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805f7fd:	e8 de e3 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805f802:	84 c0                	test   %al,%al
 805f804:	88 44 24 28          	mov    %al,0x28(%esp)
 805f808:	0f 84 22 03 00 00    	je     805fb30 <.L410+0x33d>
 805f80e:	8d 83 78 60 fd ff    	lea    -0x29f88(%ebx),%eax
 805f814:	8d b3 1b 6b fd ff    	lea    -0x294e5(%ebx),%esi
 805f81a:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f81e:	89 34 24             	mov    %esi,(%esp)
 805f821:	e8 5a 1e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f826:	8b 84 24 f8 04 00 00 	mov    0x4f8(%esp),%eax
 805f82d:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805f831:	89 44 24 14          	mov    %eax,0x14(%esp)
 805f835:	8b 84 24 f4 04 00 00 	mov    0x4f4(%esp),%eax
 805f83c:	89 44 24 10          	mov    %eax,0x10(%esp)
 805f840:	8b 84 24 f0 04 00 00 	mov    0x4f0(%esp),%eax
 805f847:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805f84b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 805f84f:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f853:	8d 83 08 60 fd ff    	lea    -0x29ff8(%ebx),%eax
 805f859:	89 04 24             	mov    %eax,(%esp)
 805f85c:	e8 df 1e 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805f861:	8d 83 6f 60 fd ff    	lea    -0x29f91(%ebx),%eax
 805f867:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f86b:	31 ff                	xor    %edi,%edi
 805f86d:	89 34 24             	mov    %esi,(%esp)
 805f870:	e8 0b 1e 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f875:	e8 f6 a0 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805f87a:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 805f881:	0f 85 7d 04 00 00    	jne    805fd04 <.L410+0x511>
 805f887:	80 7c 24 28 00       	cmpb   $0x0,0x28(%esp)
 805f88c:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805f892:	8d b3 6f 60 fd ff    	lea    -0x29f91(%ebx),%esi
 805f898:	0f 44 f0             	cmove  %eax,%esi
 805f89b:	81 ff ff ff ff 00    	cmp    $0xffffff,%edi
 805f8a1:	89 44 24 30          	mov    %eax,0x30(%esp)
 805f8a5:	74 19                	je     805f8c0 <.L410+0xcd>
 805f8a7:	8d 94 24 4c 04 00 00 	lea    0x44c(%esp),%edx
 805f8ae:	89 f8                	mov    %edi,%eax
 805f8b0:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)
 805f8b7:	e8 54 e8 ff ff       	call   805e110 <_ZN6__asan25ThreadNameWithParenthesisEjPcm.part.13>
 805f8bc:	89 44 24 30          	mov    %eax,0x30(%esp)
 805f8c0:	8b 94 24 04 05 00 00 	mov    0x504(%esp),%edx
 805f8c7:	8d 8b 30 63 fd ff    	lea    -0x29cd0(%ebx),%ecx
 805f8cd:	85 d2                	test   %edx,%edx
 805f8cf:	74 14                	je     805f8e5 <.L410+0xf2>
 805f8d1:	80 7c 24 34 00       	cmpb   $0x0,0x34(%esp)
 805f8d6:	8d 8b 37 63 fd ff    	lea    -0x29cc9(%ebx),%ecx
 805f8dc:	8d 93 2b 63 fd ff    	lea    -0x29cd5(%ebx),%edx
 805f8e2:	0f 44 ca             	cmove  %edx,%ecx
 805f8e5:	80 7c 24 28 00       	cmpb   $0x0,0x28(%esp)
 805f8ea:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805f8f0:	8d 93 a0 60 fd ff    	lea    -0x29f60(%ebx),%edx
 805f8f6:	0f 44 d0             	cmove  %eax,%edx
 805f8f9:	8b 44 24 30          	mov    0x30(%esp),%eax
 805f8fd:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 805f901:	89 54 24 04          	mov    %edx,0x4(%esp)
 805f905:	89 74 24 1c          	mov    %esi,0x1c(%esp)
 805f909:	8d 74 24 44          	lea    0x44(%esp),%esi
 805f90d:	89 44 24 18          	mov    %eax,0x18(%esp)
 805f911:	8b 84 24 04 05 00 00 	mov    0x504(%esp),%eax
 805f918:	89 7c 24 14          	mov    %edi,0x14(%esp)
 805f91c:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 805f920:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805f924:	8d 83 70 5f fd ff    	lea    -0x2a090(%ebx),%eax
 805f92a:	89 04 24             	mov    %eax,(%esp)
 805f92d:	e8 4e 1d 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f932:	e8 e9 8b ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805f937:	0f b6 40 4c          	movzbl 0x4c(%eax),%eax
 805f93b:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)
 805f942:	00 
 805f943:	89 34 24             	mov    %esi,(%esp)
 805f946:	89 44 24 10          	mov    %eax,0x10(%esp)
 805f94a:	8b 84 24 f4 04 00 00 	mov    0x4f4(%esp),%eax
 805f951:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805f955:	8b 84 24 f0 04 00 00 	mov    0x4f0(%esp),%eax
 805f95c:	89 44 24 08          	mov    %eax,0x8(%esp)
 805f960:	e8 0b cb ff ff       	call   805c470 <_ZN6__asan13GetStackTraceEPN11__sanitizer10StackTraceEmmmb>
 805f965:	89 34 24             	mov    %esi,(%esp)
 805f968:	e8 73 08 00 00       	call   80601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>
 805f96d:	8b 84 24 04 05 00 00 	mov    0x504(%esp),%eax
 805f974:	89 2c 24             	mov    %ebp,(%esp)
 805f977:	89 44 24 04          	mov    %eax,0x4(%esp)
 805f97b:	e8 10 f3 ff ff       	call   805ec90 <_ZN6__asan15DescribeAddressEmm>
 805f980:	8d 44 24 4c          	lea    0x4c(%esp),%eax
 805f984:	8b 54 24 44          	mov    0x44(%esp),%edx
 805f988:	89 04 24             	mov    %eax,(%esp)
 805f98b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 805f98f:	e8 dc e0 ff ff       	call   805da70 <_ZN6__asanL13ReportSummaryEPKcPN11__sanitizer10StackTraceE.isra.11>
 805f994:	81 fd fe ff ff 1f    	cmp    $0x1ffffffe,%ebp
 805f99a:	0f 86 30 00 00 00    	jbe    805f9d0 <.L410+0x1dd>
 805f9a0:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 805f9a6:	8b 10                	mov    (%eax),%edx
 805f9a8:	85 d2                	test   %edx,%edx
 805f9aa:	0f 84 08 01 00 00    	je     805fab8 <.L410+0x2c5>
 805f9b0:	39 d5                	cmp    %edx,%ebp
 805f9b2:	0f 82 00 01 00 00    	jb     805fab8 <.L410+0x2c5>
 805f9b8:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805f9be:	3b 28                	cmp    (%eax),%ebp
 805f9c0:	0f 87 f2 00 00 00    	ja     805fab8 <.L410+0x2c5>
 805f9c6:	3b 28                	cmp    (%eax),%ebp
 805f9c8:	0f 87 28 04 00 00    	ja     805fdf6 <.L410+0x603>
 805f9ce:	66 90                	xchg   %ax,%ax
 805f9d0:	8d 83 98 5f fd ff    	lea    -0x2a068(%ebx),%eax
 805f9d6:	89 ef                	mov    %ebp,%edi
 805f9d8:	89 04 24             	mov    %eax,(%esp)
 805f9db:	c1 ef 03             	shr    $0x3,%edi
 805f9de:	e8 9d 1c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805f9e3:	8d 83 5d 63 fd ff    	lea    -0x29ca3(%ebx),%eax
 805f9e9:	81 c7 00 00 00 20    	add    $0x20000000,%edi
 805f9ef:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 805f9f3:	89 c2                	mov    %eax,%edx
 805f9f5:	89 fe                	mov    %edi,%esi
 805f9f7:	8d 83 40 63 fd ff    	lea    -0x29cc0(%ebx),%eax
 805f9fd:	83 e6 f0             	and    $0xfffffff0,%esi
 805fa00:	89 44 24 38          	mov    %eax,0x38(%esp)
 805fa04:	8d 83 b6 61 fd ff    	lea    -0x29e4a(%ebx),%eax
 805fa0a:	83 ee 50             	sub    $0x50,%esi
 805fa0d:	89 44 24 34          	mov    %eax,0x34(%esp)
 805fa11:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 805fa17:	c7 44 24 2c fb ff ff 	movl   $0xfffffffb,0x2c(%esp)
 805fa1e:	ff 
 805fa1f:	89 44 24 28          	mov    %eax,0x28(%esp)
 805fa23:	90                   	nop
 805fa24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805fa28:	89 54 24 30          	mov    %edx,0x30(%esp)
 805fa2c:	8d 6e 10             	lea    0x10(%esi),%ebp
 805fa2f:	e8 ac e1 ff ff       	call   805dbe0 <_ZN6__asan17PrintsToTtyCachedEv>
 805fa34:	8b 54 24 30          	mov    0x30(%esp),%edx
 805fa38:	8b 44 24 38          	mov    0x38(%esp),%eax
 805fa3c:	89 74 24 08          	mov    %esi,0x8(%esp)
 805fa40:	89 54 24 04          	mov    %edx,0x4(%esp)
 805fa44:	89 04 24             	mov    %eax,(%esp)
 805fa47:	e8 34 1c 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805fa4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 805fa50:	39 f7                	cmp    %esi,%edi
 805fa52:	0f 84 4a 04 00 00    	je     805fea2 <.L373+0x2c>
 805fa58:	8d 46 ff             	lea    -0x1(%esi),%eax
 805fa5b:	39 c7                	cmp    %eax,%edi
 805fa5d:	0f 84 36 04 00 00    	je     805fe99 <.L373+0x23>
 805fa63:	8d 83 5e 63 fd ff    	lea    -0x29ca2(%ebx),%eax
 805fa69:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 805fa6d:	0f b6 16             	movzbl (%esi),%edx
 805fa70:	83 c6 01             	add    $0x1,%esi
 805fa73:	89 0c 24             	mov    %ecx,(%esp)
 805fa76:	e8 b5 e1 ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fa7b:	39 ee                	cmp    %ebp,%esi
 805fa7d:	75 d1                	jne    805fa50 <.L410+0x25d>
 805fa7f:	8b 44 24 34          	mov    0x34(%esp),%eax
 805fa83:	89 04 24             	mov    %eax,(%esp)
 805fa86:	e8 f5 1b 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805fa8b:	83 44 24 2c 01       	addl   $0x1,0x2c(%esp)
 805fa90:	83 7c 24 2c 06       	cmpl   $0x6,0x2c(%esp)
 805fa95:	0f 84 ef 00 00 00    	je     805fb8a <.L410+0x397>
 805fa9b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 805fa9f:	85 c0                	test   %eax,%eax
 805faa1:	0f 84 b2 04 00 00    	je     805ff59 <.L373+0xe3>
 805faa7:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 805faab:	89 ee                	mov    %ebp,%esi
 805faad:	e9 76 ff ff ff       	jmp    805fa28 <.L410+0x235>
 805fab2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805fab8:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805fabe:	8b 08                	mov    (%eax),%ecx
 805fac0:	89 ce                	mov    %ecx,%esi
 805fac2:	c1 ee 03             	shr    $0x3,%esi
 805fac5:	81 c6 01 00 00 20    	add    $0x20000001,%esi
 805facb:	39 f5                	cmp    %esi,%ebp
 805facd:	72 09                	jb     805fad8 <.L410+0x2e5>
 805facf:	39 cd                	cmp    %ecx,%ebp
 805fad1:	0f 86 b6 02 00 00    	jbe    805fd8d <.L410+0x59a>
 805fad7:	90                   	nop
 805fad8:	e8 93 9e ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805fadd:	89 04 24             	mov    %eax,(%esp)
 805fae0:	e8 9b a0 ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805fae5:	85 c0                	test   %eax,%eax
 805fae7:	74 0a                	je     805faf3 <.L410+0x300>
 805fae9:	8b 00                	mov    (%eax),%eax
 805faeb:	89 04 24             	mov    %eax,(%esp)
 805faee:	e8 9d e6 ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 805faf3:	e8 28 8a ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805faf8:	80 78 39 00          	cmpb   $0x0,0x39(%eax)
 805fafc:	0f 85 1d 02 00 00    	jne    805fd1f <.L410+0x52c>
 805fb02:	8b 83 f8 0e 1b 01    	mov    0x11b0ef8(%ebx),%eax
 805fb08:	85 c0                	test   %eax,%eax
 805fb0a:	74 0b                	je     805fb17 <.L410+0x324>
 805fb0c:	8b 93 f4 0e 1b 01    	mov    0x11b0ef4(%ebx),%edx
 805fb12:	89 14 24             	mov    %edx,(%esp)
 805fb15:	ff d0                	call   *%eax
 805fb17:	8d 83 d5 61 fd ff    	lea    -0x29e2b(%ebx),%eax
 805fb1d:	89 04 24             	mov    %eax,(%esp)
 805fb20:	e8 1b 1c 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805fb25:	e8 36 27 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 805fb2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805fb30:	8d bb b7 61 fd ff    	lea    -0x29e49(%ebx),%edi
 805fb36:	8d b3 1b 6b fd ff    	lea    -0x294e5(%ebx),%esi
 805fb3c:	89 7c 24 04          	mov    %edi,0x4(%esp)
 805fb40:	89 34 24             	mov    %esi,(%esp)
 805fb43:	e8 38 1b 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805fb48:	8b 84 24 f8 04 00 00 	mov    0x4f8(%esp),%eax
 805fb4f:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 805fb53:	89 44 24 14          	mov    %eax,0x14(%esp)
 805fb57:	8b 84 24 f4 04 00 00 	mov    0x4f4(%esp),%eax
 805fb5e:	89 44 24 10          	mov    %eax,0x10(%esp)
 805fb62:	8b 84 24 f0 04 00 00 	mov    0x4f0(%esp),%eax
 805fb69:	89 44 24 0c          	mov    %eax,0xc(%esp)
 805fb6d:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 805fb71:	89 44 24 04          	mov    %eax,0x4(%esp)
 805fb75:	8d 83 08 60 fd ff    	lea    -0x29ff8(%ebx),%eax
 805fb7b:	89 04 24             	mov    %eax,(%esp)
 805fb7e:	e8 bd 1b 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805fb83:	89 f8                	mov    %edi,%eax
 805fb85:	e9 dd fc ff ff       	jmp    805f867 <.L410+0x74>
 805fb8a:	e8 91 89 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805fb8f:	80 78 3a 00          	cmpb   $0x0,0x3a(%eax)
 805fb93:	0f 84 3f ff ff ff    	je     805fad8 <.L410+0x2e5>
 805fb99:	8d 83 c0 5f fd ff    	lea    -0x2a040(%ebx),%eax
 805fb9f:	bd 01 00 00 00       	mov    $0x1,%ebp
 805fba4:	89 04 24             	mov    %eax,(%esp)
 805fba7:	8d bb 5e 63 fd ff    	lea    -0x29ca2(%ebx),%edi
 805fbad:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 805fbb4:	00 
 805fbb5:	8d b3 b7 61 fd ff    	lea    -0x29e49(%ebx),%esi
 805fbbb:	e8 c0 1a 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805fbc0:	8b 44 24 34          	mov    0x34(%esp),%eax
 805fbc4:	31 d2                	xor    %edx,%edx
 805fbc6:	89 04 24             	mov    %eax,(%esp)
 805fbc9:	8d 83 46 63 fd ff    	lea    -0x29cba(%ebx),%eax
 805fbcf:	e8 5c e0 ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fbd4:	8d 83 60 63 fd ff    	lea    -0x29ca0(%ebx),%eax
 805fbda:	89 04 24             	mov    %eax,(%esp)
 805fbdd:	e8 9e 1a 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805fbe2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 805fbe8:	89 ea                	mov    %ebp,%edx
 805fbea:	89 f0                	mov    %esi,%eax
 805fbec:	89 3c 24             	mov    %edi,(%esp)
 805fbef:	83 c5 01             	add    $0x1,%ebp
 805fbf2:	e8 39 e0 ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fbf7:	83 fd 08             	cmp    $0x8,%ebp
 805fbfa:	75 ec                	jne    805fbe8 <.L410+0x3f5>
 805fbfc:	8b 7c 24 34          	mov    0x34(%esp),%edi
 805fc00:	89 3c 24             	mov    %edi,(%esp)
 805fc03:	e8 78 1a 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 805fc08:	8d 83 7a 63 fd ff    	lea    -0x29c86(%ebx),%eax
 805fc0e:	ba fa 00 00 00       	mov    $0xfa,%edx
 805fc13:	89 3c 24             	mov    %edi,(%esp)
 805fc16:	e8 15 e0 ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc1b:	8d 83 94 63 fd ff    	lea    -0x29c6c(%ebx),%eax
 805fc21:	ba fb 00 00 00       	mov    $0xfb,%edx
 805fc26:	89 3c 24             	mov    %edi,(%esp)
 805fc29:	e8 02 e0 ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc2e:	8d 83 ae 63 fd ff    	lea    -0x29c52(%ebx),%eax
 805fc34:	ba fd 00 00 00       	mov    $0xfd,%edx
 805fc39:	89 3c 24             	mov    %edi,(%esp)
 805fc3c:	e8 ef df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc41:	8d 83 c8 63 fd ff    	lea    -0x29c38(%ebx),%eax
 805fc47:	ba f1 00 00 00       	mov    $0xf1,%edx
 805fc4c:	89 3c 24             	mov    %edi,(%esp)
 805fc4f:	e8 dc df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc54:	8d 83 e2 63 fd ff    	lea    -0x29c1e(%ebx),%eax
 805fc5a:	ba f2 00 00 00       	mov    $0xf2,%edx
 805fc5f:	89 3c 24             	mov    %edi,(%esp)
 805fc62:	e8 c9 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc67:	8d 83 fc 63 fd ff    	lea    -0x29c04(%ebx),%eax
 805fc6d:	ba f3 00 00 00       	mov    $0xf3,%edx
 805fc72:	89 3c 24             	mov    %edi,(%esp)
 805fc75:	e8 b6 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc7a:	8d 83 16 64 fd ff    	lea    -0x29bea(%ebx),%eax
 805fc80:	ba f4 00 00 00       	mov    $0xf4,%edx
 805fc85:	89 3c 24             	mov    %edi,(%esp)
 805fc88:	e8 a3 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fc8d:	8d 83 30 64 fd ff    	lea    -0x29bd0(%ebx),%eax
 805fc93:	ba f5 00 00 00       	mov    $0xf5,%edx
 805fc98:	89 3c 24             	mov    %edi,(%esp)
 805fc9b:	e8 90 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fca0:	8d 83 4a 64 fd ff    	lea    -0x29bb6(%ebx),%eax
 805fca6:	ba f8 00 00 00       	mov    $0xf8,%edx
 805fcab:	89 3c 24             	mov    %edi,(%esp)
 805fcae:	e8 7d df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fcb3:	8d 83 64 64 fd ff    	lea    -0x29b9c(%ebx),%eax
 805fcb9:	ba f9 00 00 00       	mov    $0xf9,%edx
 805fcbe:	89 3c 24             	mov    %edi,(%esp)
 805fcc1:	e8 6a df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fcc6:	8d 83 7e 64 fd ff    	lea    -0x29b82(%ebx),%eax
 805fccc:	ba f6 00 00 00       	mov    $0xf6,%edx
 805fcd1:	89 3c 24             	mov    %edi,(%esp)
 805fcd4:	e8 57 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fcd9:	8d 83 98 64 fd ff    	lea    -0x29b68(%ebx),%eax
 805fcdf:	ba f7 00 00 00       	mov    $0xf7,%edx
 805fce4:	89 3c 24             	mov    %edi,(%esp)
 805fce7:	e8 44 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fcec:	ba fe 00 00 00       	mov    $0xfe,%edx
 805fcf1:	89 3c 24             	mov    %edi,(%esp)
 805fcf4:	8d 83 b2 64 fd ff    	lea    -0x29b4e(%ebx),%eax
 805fcfa:	e8 31 df ff ff       	call   805dc30 <_ZN6__asanL15PrintShadowByteEPKchS1_>
 805fcff:	e9 d4 fd ff ff       	jmp    805fad8 <.L410+0x2e5>
 805fd04:	89 04 24             	mov    %eax,(%esp)
 805fd07:	e8 74 9e ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805fd0c:	85 c0                	test   %eax,%eax
 805fd0e:	66 90                	xchg   %ax,%ax
 805fd10:	0f 84 6f 01 00 00    	je     805fe85 <.L373+0xf>
 805fd16:	8b 00                	mov    (%eax),%eax
 805fd18:	8b 38                	mov    (%eax),%edi
 805fd1a:	e9 68 fb ff ff       	jmp    805f887 <.L410+0x94>
 805fd1f:	90                   	nop
 805fd20:	e8 3b 9c ff ff       	call   8059960 <__asan_print_accumulated_stats>
 805fd25:	e9 d8 fd ff ff       	jmp    805fb02 <.L410+0x30f>
 805fd2a:	89 04 24             	mov    %eax,(%esp)
 805fd2d:	8d 76 00             	lea    0x0(%esi),%esi
 805fd30:	e8 4b 9e ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 805fd35:	85 c0                	test   %eax,%eax
 805fd37:	0f 84 52 01 00 00    	je     805fe8f <.L373+0x19>
 805fd3d:	8b 00                	mov    (%eax),%eax
 805fd3f:	8b 10                	mov    (%eax),%edx
 805fd41:	e9 d5 f9 ff ff       	jmp    805f71b <__asan_report_error+0x6b>
 805fd46:	39 cd                	cmp    %ecx,%ebp
 805fd48:	0f 87 a5 fa ff ff    	ja     805f7f3 <.L410>
 805fd4e:	85 d2                	test   %edx,%edx
 805fd50:	0f 84 4a fa ff ff    	je     805f7a0 <__asan_report_error+0xf0>
 805fd56:	39 d5                	cmp    %edx,%ebp
 805fd58:	0f 82 22 fa ff ff    	jb     805f780 <__asan_report_error+0xd0>
 805fd5e:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805fd64:	e9 0d fa ff ff       	jmp    805f776 <__asan_report_error+0xc6>
 805fd69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805fd70:	83 bc 24 04 05 00 00 	cmpl   $0x8,0x504(%esp)
 805fd77:	08 
 805fd78:	0f 86 75 fa ff ff    	jbe    805f7f3 <.L410>
 805fd7e:	0f b6 51 01          	movzbl 0x1(%ecx),%edx
 805fd82:	8d 88 01 00 00 20    	lea    0x20000001(%eax),%ecx
 805fd88:	e9 2d fa ff ff       	jmp    805f7ba <__asan_report_error+0x10a>
 805fd8d:	85 d2                	test   %edx,%edx
 805fd8f:	0f 84 3b fc ff ff    	je     805f9d0 <.L410+0x1dd>
 805fd95:	39 d5                	cmp    %edx,%ebp
 805fd97:	0f 83 56 01 00 00    	jae    805fef3 <.L373+0x7d>
 805fd9d:	8b 00                	mov    (%eax),%eax
 805fd9f:	89 c2                	mov    %eax,%edx
 805fda1:	c1 ea 03             	shr    $0x3,%edx
 805fda4:	81 c2 01 00 00 20    	add    $0x20000001,%edx
 805fdaa:	39 d5                	cmp    %edx,%ebp
 805fdac:	72 08                	jb     805fdb6 <.L410+0x5c3>
 805fdae:	39 c5                	cmp    %eax,%ebp
 805fdb0:	0f 86 1a fc ff ff    	jbe    805f9d0 <.L410+0x1dd>
 805fdb6:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 805fdbc:	89 44 24 08          	mov    %eax,0x8(%esp)
 805fdc0:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 805fdc6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805fdcd:	00 
 805fdce:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805fdd5:	00 
 805fdd6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805fddd:	00 
 805fdde:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805fde5:	00 
 805fde6:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 805fded:	00 
 805fdee:	89 04 24             	mov    %eax,(%esp)
 805fdf1:	e8 ba 25 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805fdf6:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 805fdfc:	eb 9f                	jmp    805fd9d <.L410+0x5aa>

0805fdfe <.L325>:
 805fdfe:	8d 83 ce 62 fd ff    	lea    -0x29d32(%ebx),%eax
 805fe04:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe08:	e9 f0 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe0d <.L326>:
 805fe0d:	8d 83 b7 62 fd ff    	lea    -0x29d49(%ebx),%eax
 805fe13:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe17:	e9 e1 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe1c <.L327>:
 805fe1c:	8d 83 e4 62 fd ff    	lea    -0x29d1c(%ebx),%eax
 805fe22:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe26:	e9 d2 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe2b <.L328>:
 805fe2b:	8d 83 a6 62 fd ff    	lea    -0x29d5a(%ebx),%eax
 805fe31:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe35:	e9 c3 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe3a <.L329>:
 805fe3a:	8d 83 90 62 fd ff    	lea    -0x29d70(%ebx),%eax
 805fe40:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe44:	e9 b4 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe49 <.L330>:
 805fe49:	8d 83 79 62 fd ff    	lea    -0x29d87(%ebx),%eax
 805fe4f:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe53:	e9 a5 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe58 <.L331>:
 805fe58:	8d 83 17 63 fd ff    	lea    -0x29ce9(%ebx),%eax
 805fe5e:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe62:	e9 96 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe67 <.L323>:
 805fe67:	8d 83 00 63 fd ff    	lea    -0x29d00(%ebx),%eax
 805fe6d:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe71:	e9 87 f9 ff ff       	jmp    805f7fd <.L410+0xa>

0805fe76 <.L373>:
 805fe76:	8d 83 64 62 fd ff    	lea    -0x29d9c(%ebx),%eax
 805fe7c:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 805fe80:	e9 78 f9 ff ff       	jmp    805f7fd <.L410+0xa>
 805fe85:	bf ff ff ff 00       	mov    $0xffffff,%edi
 805fe8a:	e9 f8 f9 ff ff       	jmp    805f887 <.L410+0x94>
 805fe8f:	ba ff ff ff 00       	mov    $0xffffff,%edx
 805fe94:	e9 82 f8 ff ff       	jmp    805f71b <__asan_report_error+0x6b>
 805fe99:	8b 44 24 28          	mov    0x28(%esp),%eax
 805fe9d:	e9 c7 fb ff ff       	jmp    805fa69 <.L410+0x276>
 805fea2:	8d 83 7e 3e fd ff    	lea    -0x2c182(%ebx),%eax
 805fea8:	8d 8b 12 65 fd ff    	lea    -0x29aee(%ebx),%ecx
 805feae:	e9 ba fb ff ff       	jmp    805fa6d <.L410+0x27a>
 805feb3:	8d 83 e9 44 fd ff    	lea    -0x2bb17(%ebx),%eax
 805feb9:	89 44 24 08          	mov    %eax,0x8(%esp)
 805febd:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 805fec3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 805feca:	00 
 805fecb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 805fed2:	00 
 805fed3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 805feda:	00 
 805fedb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 805fee2:	00 
 805fee3:	c7 44 24 04 c0 01 00 	movl   $0x1c0,0x4(%esp)
 805feea:	00 
 805feeb:	89 04 24             	mov    %eax,(%esp)
 805feee:	e8 bd 24 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 805fef3:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 805fef9:	e9 c8 fa ff ff       	jmp    805f9c6 <.L410+0x1d3>
 805fefe:	8d 83 a0 5a fd ff    	lea    -0x2a560(%ebx),%eax
 805ff04:	89 04 24             	mov    %eax,(%esp)
 805ff07:	e8 34 18 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 805ff0c:	e8 5f 9a ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 805ff11:	31 d2                	xor    %edx,%edx
 805ff13:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 805ff1a:	74 07                	je     805ff23 <.L373+0xad>
 805ff1c:	e8 0f db ff ff       	call   805da30 <_ZN6__asan18AsanThreadRegistry22GetCurrentTidOrInvalidEv.part.10>
 805ff21:	89 c2                	mov    %eax,%edx
 805ff23:	39 93 fc 0e 1b 01    	cmp    %edx,0x11b0efc(%ebx)
 805ff29:	74 1e                	je     805ff49 <.L373+0xd3>
 805ff2b:	e8 f0 85 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805ff30:	8b 50 30             	mov    0x30(%eax),%edx
 805ff33:	b8 64 00 00 00       	mov    $0x64,%eax
 805ff38:	83 c2 01             	add    $0x1,%edx
 805ff3b:	83 fa 63             	cmp    $0x63,%edx
 805ff3e:	0f 4f c2             	cmovg  %edx,%eax
 805ff41:	89 04 24             	mov    %eax,(%esp)
 805ff44:	e8 a7 35 00 00       	call   80634f0 <_ZN11__sanitizer15SleepForSecondsEi>
 805ff49:	e8 d2 85 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 805ff4e:	8b 40 28             	mov    0x28(%eax),%eax
 805ff51:	89 04 24             	mov    %eax,(%esp)
 805ff54:	e8 c7 53 00 00       	call   8065320 <_ZN11__sanitizer14internal__exitEi>
 805ff59:	8d 93 3d 63 fd ff    	lea    -0x29cc3(%ebx),%edx
 805ff5f:	89 ee                	mov    %ebp,%esi
 805ff61:	e9 c2 fa ff ff       	jmp    805fa28 <.L410+0x235>
 805ff66:	8d 76 00             	lea    0x0(%esi),%esi
 805ff69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805ff70 <__asan_set_error_report_callback>:
 805ff70:	53                   	push   %ebx
 805ff71:	83 ec 18             	sub    $0x18,%esp
 805ff74:	e8 77 9b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805ff79:	81 c3 87 00 05 00    	add    $0x50087,%ebx
 805ff7f:	8b 44 24 20          	mov    0x20(%esp),%eax
 805ff83:	85 c0                	test   %eax,%eax
 805ff85:	89 83 f8 0e 1b 01    	mov    %eax,0x11b0ef8(%ebx)
 805ff8b:	74 30                	je     805ffbd <__asan_set_error_report_callback+0x4d>
 805ff8d:	8d 83 a0 65 fd ff    	lea    -0x29a60(%ebx),%eax
 805ff93:	89 44 24 04          	mov    %eax,0x4(%esp)
 805ff97:	c7 04 24 00 00 01 00 	movl   $0x10000,(%esp)
 805ff9e:	c7 83 ec 0e 1b 01 00 	movl   $0x10000,0x11b0eec(%ebx)
 805ffa5:	00 01 00 
 805ffa8:	e8 33 32 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 805ffad:	c7 83 f0 0e 1b 01 00 	movl   $0x0,0x11b0ef0(%ebx)
 805ffb4:	00 00 00 
 805ffb7:	89 83 f4 0e 1b 01    	mov    %eax,0x11b0ef4(%ebx)
 805ffbd:	83 c4 18             	add    $0x18,%esp
 805ffc0:	5b                   	pop    %ebx
 805ffc1:	c3                   	ret    
 805ffc2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 805ffc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0805ffd0 <__asan_describe_address>:
 805ffd0:	83 ec 1c             	sub    $0x1c,%esp
 805ffd3:	8b 44 24 20          	mov    0x20(%esp),%eax
 805ffd7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 805ffde:	00 
 805ffdf:	89 04 24             	mov    %eax,(%esp)
 805ffe2:	e8 a9 ec ff ff       	call   805ec90 <_ZN6__asan15DescribeAddressEmm>
 805ffe7:	83 c4 1c             	add    $0x1c,%esp
 805ffea:	c3                   	ret    
 805ffeb:	66 90                	xchg   %ax,%ax
 805ffed:	66 90                	xchg   %ax,%ax
 805ffef:	90                   	nop

0805fff0 <_ZN6__asan19ScopedInErrorReportC1Ev>:
 805fff0:	53                   	push   %ebx
 805fff1:	b8 01 00 00 00       	mov    $0x1,%eax
 805fff6:	e8 f5 9a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 805fffb:	81 c3 05 00 05 00    	add    $0x50005,%ebx
 8060001:	83 ec 28             	sub    $0x28,%esp
 8060004:	f0 0f c1 83 00 0f 1b 	lock xadd %eax,0x11b0f00(%ebx)
 806000b:	01 
 806000c:	85 c0                	test   %eax,%eax
 806000e:	75 7f                	jne    806008f <_ZN6__asan19ScopedInErrorReportC1Ev+0x9f>
 8060010:	8b 83 d8 ff ff ff    	mov    -0x28(%ebx),%eax
 8060016:	85 c0                	test   %eax,%eax
 8060018:	74 05                	je     806001f <_ZN6__asan19ScopedInErrorReportC1Ev+0x2f>
 806001a:	e8 41 97 fe ff       	call   8049760 <__asan_on_error@plt>
 806001f:	e8 4c 99 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8060024:	31 d2                	xor    %edx,%edx
 8060026:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 806002d:	75 41                	jne    8060070 <_ZN6__asan19ScopedInErrorReportC1Ev+0x80>
 806002f:	8d 83 e8 5a fd ff    	lea    -0x2a518(%ebx),%eax
 8060035:	89 04 24             	mov    %eax,(%esp)
 8060038:	89 93 fc 0e 1b 01    	mov    %edx,0x11b0efc(%ebx)
 806003e:	e8 3d 16 00 00       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8060043:	81 bb fc 0e 1b 01 ff 	cmpl   $0xffffff,0x11b0efc(%ebx)
 806004a:	ff ff 00 
 806004d:	74 19                	je     8060068 <_ZN6__asan19ScopedInErrorReportC1Ev+0x78>
 806004f:	e8 1c 99 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8060054:	89 04 24             	mov    %eax,(%esp)
 8060057:	e8 24 9b ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 806005c:	85 c0                	test   %eax,%eax
 806005e:	0f 84 7f 00 00 00    	je     80600e3 <_ZN6__asan19ScopedInErrorReportC1Ev+0xf3>
 8060064:	c6 40 18 00          	movb   $0x0,0x18(%eax)
 8060068:	83 c4 28             	add    $0x28,%esp
 806006b:	5b                   	pop    %ebx
 806006c:	c3                   	ret    
 806006d:	8d 76 00             	lea    0x0(%esi),%esi
 8060070:	89 04 24             	mov    %eax,(%esp)
 8060073:	e8 08 9b ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 8060078:	85 c0                	test   %eax,%eax
 806007a:	74 0c                	je     8060088 <_ZN6__asan19ScopedInErrorReportC1Ev+0x98>
 806007c:	8b 00                	mov    (%eax),%eax
 806007e:	8b 10                	mov    (%eax),%edx
 8060080:	eb ad                	jmp    806002f <_ZN6__asan19ScopedInErrorReportC1Ev+0x3f>
 8060082:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8060088:	ba ff ff ff 00       	mov    $0xffffff,%edx
 806008d:	eb a0                	jmp    806002f <_ZN6__asan19ScopedInErrorReportC1Ev+0x3f>
 806008f:	8d 83 a0 5a fd ff    	lea    -0x2a560(%ebx),%eax
 8060095:	89 04 24             	mov    %eax,(%esp)
 8060098:	e8 a3 16 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 806009d:	e8 ce 98 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 80600a2:	31 d2                	xor    %edx,%edx
 80600a4:	80 b8 ec 3d 18 01 00 	cmpb   $0x0,0x1183dec(%eax)
 80600ab:	75 76                	jne    8060123 <_ZN6__asan19ScopedInErrorReportC1Ev+0x133>
 80600ad:	39 93 fc 0e 1b 01    	cmp    %edx,0x11b0efc(%ebx)
 80600b3:	74 1e                	je     80600d3 <_ZN6__asan19ScopedInErrorReportC1Ev+0xe3>
 80600b5:	e8 66 84 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80600ba:	8b 50 30             	mov    0x30(%eax),%edx
 80600bd:	b8 64 00 00 00       	mov    $0x64,%eax
 80600c2:	83 c2 01             	add    $0x1,%edx
 80600c5:	83 fa 63             	cmp    $0x63,%edx
 80600c8:	0f 4f c2             	cmovg  %edx,%eax
 80600cb:	89 04 24             	mov    %eax,(%esp)
 80600ce:	e8 1d 34 00 00       	call   80634f0 <_ZN11__sanitizer15SleepForSecondsEi>
 80600d3:	e8 48 84 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80600d8:	8b 40 28             	mov    0x28(%eax),%eax
 80600db:	89 04 24             	mov    %eax,(%esp)
 80600de:	e8 3d 52 00 00       	call   8065320 <_ZN11__sanitizer14internal__exitEi>
 80600e3:	8d 83 e9 44 fd ff    	lea    -0x2bb17(%ebx),%eax
 80600e9:	89 44 24 08          	mov    %eax,0x8(%esp)
 80600ed:	8d 83 ec 56 fd ff    	lea    -0x2a914(%ebx),%eax
 80600f3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80600fa:	00 
 80600fb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060102:	00 
 8060103:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806010a:	00 
 806010b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060112:	00 
 8060113:	c7 44 24 04 c0 01 00 	movl   $0x1c0,0x4(%esp)
 806011a:	00 
 806011b:	89 04 24             	mov    %eax,(%esp)
 806011e:	e8 8d 22 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060123:	e8 08 d9 ff ff       	call   805da30 <_ZN6__asan18AsanThreadRegistry22GetCurrentTidOrInvalidEv.part.10>
 8060128:	89 c2                	mov    %eax,%edx
 806012a:	eb 81                	jmp    80600ad <_ZN6__asan19ScopedInErrorReportC1Ev+0xbd>
 806012c:	66 90                	xchg   %ax,%ax
 806012e:	66 90                	xchg   %ax,%ax

08060130 <_ZN6__asan19ScopedInErrorReportD1Ev>:
 8060130:	53                   	push   %ebx
 8060131:	e8 ba 99 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8060136:	81 c3 ca fe 04 00    	add    $0x4feca,%ebx
 806013c:	83 ec 18             	sub    $0x18,%esp
 806013f:	e8 2c 98 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 8060144:	89 04 24             	mov    %eax,(%esp)
 8060147:	e8 34 9a ff ff       	call   8059b80 <_ZN6__asan18AsanThreadRegistry10GetCurrentEv>
 806014c:	85 c0                	test   %eax,%eax
 806014e:	74 0a                	je     806015a <_ZN6__asan19ScopedInErrorReportD1Ev+0x2a>
 8060150:	8b 00                	mov    (%eax),%eax
 8060152:	89 04 24             	mov    %eax,(%esp)
 8060155:	e8 36 e0 ff ff       	call   805e190 <_ZN6__asan14DescribeThreadEPNS_17AsanThreadSummaryE>
 806015a:	e8 c1 83 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 806015f:	80 78 39 00          	cmpb   $0x0,0x39(%eax)
 8060163:	75 28                	jne    806018d <_ZN6__asan19ScopedInErrorReportD1Ev+0x5d>
 8060165:	8b 83 f8 0e 1b 01    	mov    0x11b0ef8(%ebx),%eax
 806016b:	85 c0                	test   %eax,%eax
 806016d:	74 0b                	je     806017a <_ZN6__asan19ScopedInErrorReportD1Ev+0x4a>
 806016f:	8b 93 f4 0e 1b 01    	mov    0x11b0ef4(%ebx),%edx
 8060175:	89 14 24             	mov    %edx,(%esp)
 8060178:	ff d0                	call   *%eax
 806017a:	8d 83 d5 61 fd ff    	lea    -0x29e2b(%ebx),%eax
 8060180:	89 04 24             	mov    %eax,(%esp)
 8060183:	e8 b8 15 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8060188:	e8 d3 20 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 806018d:	e8 ce 97 ff ff       	call   8059960 <__asan_print_accumulated_stats>
 8060192:	eb d1                	jmp    8060165 <_ZN6__asan19ScopedInErrorReportD1Ev+0x35>
 8060194:	66 90                	xchg   %ax,%ax
 8060196:	66 90                	xchg   %ax,%ax
 8060198:	66 90                	xchg   %ax,%ax
 806019a:	66 90                	xchg   %ax,%ax
 806019c:	66 90                	xchg   %ax,%ax
 806019e:	66 90                	xchg   %ax,%ax

080601a0 <_ZN6__asanL22MaybeCallAsanSymbolizeEPKvPci>:
 80601a0:	53                   	push   %ebx
 80601a1:	e8 4a 99 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80601a6:	81 c3 5a fe 04 00    	add    $0x4fe5a,%ebx
 80601ac:	83 ec 18             	sub    $0x18,%esp
 80601af:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80601b5:	85 c0                	test   %eax,%eax
 80601b7:	74 21                	je     80601da <_ZN6__asanL22MaybeCallAsanSymbolizeEPKvPci+0x3a>
 80601b9:	8b 44 24 28          	mov    0x28(%esp),%eax
 80601bd:	89 44 24 08          	mov    %eax,0x8(%esp)
 80601c1:	8b 44 24 24          	mov    0x24(%esp),%eax
 80601c5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80601c9:	8b 44 24 20          	mov    0x20(%esp),%eax
 80601cd:	89 04 24             	mov    %eax,(%esp)
 80601d0:	e8 bb 97 fe ff       	call   8049990 <__asan_symbolize@plt>
 80601d5:	83 c4 18             	add    $0x18,%esp
 80601d8:	5b                   	pop    %ebx
 80601d9:	c3                   	ret    
 80601da:	31 c0                	xor    %eax,%eax
 80601dc:	eb f7                	jmp    80601d5 <_ZN6__asanL22MaybeCallAsanSymbolizeEPKvPci+0x35>
 80601de:	66 90                	xchg   %ax,%ax

080601e0 <_ZN6__asan10PrintStackEPN11__sanitizer10StackTraceE>:
 80601e0:	57                   	push   %edi
 80601e1:	56                   	push   %esi
 80601e2:	53                   	push   %ebx
 80601e3:	e8 08 99 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80601e8:	81 c3 18 fe 04 00    	add    $0x4fe18,%ebx
 80601ee:	83 ec 20             	sub    $0x20,%esp
 80601f1:	8b 74 24 30          	mov    0x30(%esp),%esi
 80601f5:	83 c6 08             	add    $0x8,%esi
 80601f8:	e8 23 83 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80601fd:	8b 78 40             	mov    0x40(%eax),%edi
 8060200:	e8 1b 83 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 8060205:	8d 93 a0 01 fb ff    	lea    -0x4fe60(%ebx),%edx
 806020b:	89 54 24 10          	mov    %edx,0x10(%esp)
 806020f:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8060213:	0f b6 40 04          	movzbl 0x4(%eax),%eax
 8060217:	89 44 24 08          	mov    %eax,0x8(%esp)
 806021b:	8b 46 f8             	mov    -0x8(%esi),%eax
 806021e:	89 34 24             	mov    %esi,(%esp)
 8060221:	89 44 24 04          	mov    %eax,0x4(%esp)
 8060225:	e8 f6 43 00 00       	call   8064620 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE>
 806022a:	83 c4 20             	add    $0x20,%esp
 806022d:	5b                   	pop    %ebx
 806022e:	5e                   	pop    %esi
 806022f:	5f                   	pop    %edi
 8060230:	c3                   	ret    
 8060231:	66 90                	xchg   %ax,%ax
 8060233:	66 90                	xchg   %ax,%ax
 8060235:	66 90                	xchg   %ax,%ax
 8060237:	66 90                	xchg   %ax,%ax
 8060239:	66 90                	xchg   %ax,%ax
 806023b:	66 90                	xchg   %ax,%ax
 806023d:	66 90                	xchg   %ax,%ax
 806023f:	90                   	nop

08060240 <_ZN6__asan10AsanThreadC1E17LinkerInitialized>:
 8060240:	f3 c3                	repz ret 
 8060242:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060249:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08060250 <_ZN6__asan10AsanThread6CreateEjPFPvS1_ES1_PN11__sanitizer10StackTraceE>:
 8060250:	55                   	push   %ebp
 8060251:	57                   	push   %edi
 8060252:	56                   	push   %esi
 8060253:	53                   	push   %ebx
 8060254:	e8 97 98 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8060259:	81 c3 a7 fd 04 00    	add    $0x4fda7,%ebx
 806025f:	83 ec 2c             	sub    $0x2c,%esp
 8060262:	8b 7c 24 4c          	mov    0x4c(%esp),%edi
 8060266:	e8 a5 1f 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 806026b:	89 c6                	mov    %eax,%esi
 806026d:	8d 40 ff             	lea    -0x1(%eax),%eax
 8060270:	85 f0                	test   %esi,%eax
 8060272:	0f 85 ca 00 00 00    	jne    8060342 <_ZN6__asan10AsanThread6CreateEjPFPvS1_ES1_PN11__sanitizer10StackTraceE+0xf2>
 8060278:	8d 83 c0 67 fd ff    	lea    -0x29840(%ebx),%eax
 806027e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8060282:	89 f0                	mov    %esi,%eax
 8060284:	f7 d8                	neg    %eax
 8060286:	8d 8e ef 28 18 00    	lea    0x1828ef(%esi),%ecx
 806028c:	21 c8                	and    %ecx,%eax
 806028e:	89 04 24             	mov    %eax,(%esp)
 8060291:	e8 4a 2f 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8060296:	31 d2                	xor    %edx,%edx
 8060298:	81 fe 97 04 00 00    	cmp    $0x497,%esi
 806029e:	89 c5                	mov    %eax,%ebp
 80602a0:	8b 44 24 44          	mov    0x44(%esp),%eax
 80602a4:	89 45 04             	mov    %eax,0x4(%ebp)
 80602a7:	8b 44 24 48          	mov    0x48(%esp),%eax
 80602ab:	89 45 08             	mov    %eax,0x8(%ebp)
 80602ae:	76 5a                	jbe    806030a <_ZN6__asan10AsanThread6CreateEjPFPvS1_ES1_PN11__sanitizer10StackTraceE+0xba>
 80602b0:	8d 83 65 67 fd ff    	lea    -0x2989b(%ebx),%eax
 80602b6:	89 34 24             	mov    %esi,(%esp)
 80602b9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80602bd:	e8 1e 2f 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 80602c2:	85 ff                	test   %edi,%edi
 80602c4:	89 c6                	mov    %eax,%esi
 80602c6:	8b 44 24 40          	mov    0x40(%esp),%eax
 80602ca:	c6 46 08 00          	movb   $0x0,0x8(%esi)
 80602ce:	c7 06 ff ff ff 00    	movl   $0xffffff,(%esi)
 80602d4:	89 46 04             	mov    %eax,0x4(%esi)
 80602d7:	74 17                	je     80602f0 <_ZN6__asan10AsanThread6CreateEjPFPvS1_ES1_PN11__sanitizer10StackTraceE+0xa0>
 80602d9:	8d 46 0c             	lea    0xc(%esi),%eax
 80602dc:	c7 44 24 08 08 04 00 	movl   $0x408,0x8(%esp)
 80602e3:	00 
 80602e4:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80602e8:	89 04 24             	mov    %eax,(%esp)
 80602eb:	e8 c0 15 00 00       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 80602f0:	c6 86 18 04 00 00 00 	movb   $0x0,0x418(%esi)
 80602f7:	89 e8                	mov    %ebp,%eax
 80602f9:	89 ae 14 04 00 00    	mov    %ebp,0x414(%esi)
 80602ff:	89 75 00             	mov    %esi,0x0(%ebp)
 8060302:	83 c4 2c             	add    $0x2c,%esp
 8060305:	5b                   	pop    %ebx
 8060306:	5e                   	pop    %esi
 8060307:	5f                   	pop    %edi
 8060308:	5d                   	pop    %ebp
 8060309:	c3                   	ret    
 806030a:	8d 83 04 66 fd ff    	lea    -0x299fc(%ebx),%eax
 8060310:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060314:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 806031a:	89 74 24 14          	mov    %esi,0x14(%esp)
 806031e:	89 54 24 18          	mov    %edx,0x18(%esp)
 8060322:	c7 44 24 0c 98 04 00 	movl   $0x498,0xc(%esp)
 8060329:	00 
 806032a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060331:	00 
 8060332:	c7 44 24 04 24 00 00 	movl   $0x24,0x4(%esp)
 8060339:	00 
 806033a:	89 04 24             	mov    %eax,(%esp)
 806033d:	e8 6e 20 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060342:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 8060348:	89 44 24 08          	mov    %eax,0x8(%esp)
 806034c:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 8060352:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060359:	00 
 806035a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060361:	00 
 8060362:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8060369:	00 
 806036a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060371:	00 
 8060372:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 8060379:	00 
 806037a:	89 04 24             	mov    %eax,(%esp)
 806037d:	e8 2e 20 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060382:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08060390 <_ZN6__asan10AsanThread7DestroyEv>:
 8060390:	56                   	push   %esi
 8060391:	53                   	push   %ebx
 8060392:	e8 59 97 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8060397:	81 c3 69 fc 04 00    	add    $0x4fc69,%ebx
 806039d:	83 ec 24             	sub    $0x24,%esp
 80603a0:	8b 74 24 30          	mov    0x30(%esp),%esi
 80603a4:	e8 77 81 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80603a9:	8b 50 08             	mov    0x8(%eax),%edx
 80603ac:	85 d2                	test   %edx,%edx
 80603ae:	7e 16                	jle    80603c6 <_ZN6__asan10AsanThread7DestroyEv+0x36>
 80603b0:	8b 06                	mov    (%esi),%eax
 80603b2:	8b 00                	mov    (%eax),%eax
 80603b4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80603b8:	8d 83 77 67 fd ff    	lea    -0x29889(%ebx),%eax
 80603be:	89 04 24             	mov    %eax,(%esp)
 80603c1:	e8 7a 13 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80603c6:	e8 a5 95 ff ff       	call   8059970 <_ZN6__asan18asanThreadRegistryEv>
 80603cb:	89 74 24 04          	mov    %esi,0x4(%esp)
 80603cf:	89 04 24             	mov    %eax,(%esp)
 80603d2:	e8 e9 96 ff ff       	call   8059ac0 <_ZN6__asan18AsanThreadRegistry16UnregisterThreadEPNS_10AsanThreadE>
 80603d7:	8b 06                	mov    (%esi),%eax
 80603d9:	8b 80 14 04 00 00    	mov    0x414(%eax),%eax
 80603df:	85 c0                	test   %eax,%eax
 80603e1:	75 50                	jne    8060433 <_ZN6__asan10AsanThread7DestroyEv+0xa3>
 80603e3:	8b 56 10             	mov    0x10(%esi),%edx
 80603e6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 80603ed:	00 
 80603ee:	8b 46 0c             	mov    0xc(%esi),%eax
 80603f1:	89 14 24             	mov    %edx,(%esp)
 80603f4:	29 d0                	sub    %edx,%eax
 80603f6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80603fa:	e8 b1 c6 ff ff       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 80603ff:	8d 46 14             	lea    0x14(%esi),%eax
 8060402:	89 04 24             	mov    %eax,(%esp)
 8060405:	e8 a6 a1 ff ff       	call   805a5b0 <_ZN6__asan9FakeStack7CleanupEv>
 806040a:	e8 01 1e 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 806040f:	8d 50 ff             	lea    -0x1(%eax),%edx
 8060412:	85 c2                	test   %eax,%edx
 8060414:	75 5d                	jne    8060473 <_ZN6__asan10AsanThread7DestroyEv+0xe3>
 8060416:	89 c2                	mov    %eax,%edx
 8060418:	05 ef 28 18 00       	add    $0x1828ef,%eax
 806041d:	f7 da                	neg    %edx
 806041f:	21 c2                	and    %eax,%edx
 8060421:	89 34 24             	mov    %esi,(%esp)
 8060424:	89 54 24 04          	mov    %edx,0x4(%esp)
 8060428:	e8 83 26 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 806042d:	83 c4 24             	add    $0x24,%esp
 8060430:	5b                   	pop    %ebx
 8060431:	5e                   	pop    %esi
 8060432:	c3                   	ret    
 8060433:	8d 83 70 66 fd ff    	lea    -0x29990(%ebx),%eax
 8060439:	89 44 24 08          	mov    %eax,0x8(%esp)
 806043d:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 8060443:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806044a:	00 
 806044b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060452:	00 
 8060453:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806045a:	00 
 806045b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060462:	00 
 8060463:	c7 44 24 04 3e 00 00 	movl   $0x3e,0x4(%esp)
 806046a:	00 
 806046b:	89 04 24             	mov    %eax,(%esp)
 806046e:	e8 3d 1f 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060473:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 8060479:	89 44 24 08          	mov    %eax,0x8(%esp)
 806047d:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 8060483:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806048a:	00 
 806048b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060492:	00 
 8060493:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806049a:	00 
 806049b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80604a2:	00 
 80604a3:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 80604aa:	00 
 80604ab:	89 04 24             	mov    %eax,(%esp)
 80604ae:	e8 fd 1e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80604b3:	90                   	nop
 80604b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80604ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

080604c0 <_ZN6__asan17AsanThreadSummary7TSDDtorEPv>:
 80604c0:	56                   	push   %esi
 80604c1:	53                   	push   %ebx
 80604c2:	e8 29 96 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80604c7:	81 c3 39 fb 04 00    	add    $0x4fb39,%ebx
 80604cd:	83 ec 14             	sub    $0x14,%esp
 80604d0:	8b 74 24 20          	mov    0x20(%esp),%esi
 80604d4:	e8 47 80 ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80604d9:	8b 40 08             	mov    0x8(%eax),%eax
 80604dc:	85 c0                	test   %eax,%eax
 80604de:	7e 14                	jle    80604f4 <_ZN6__asan17AsanThreadSummary7TSDDtorEPv+0x34>
 80604e0:	8b 06                	mov    (%esi),%eax
 80604e2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80604e6:	8d 83 83 67 fd ff    	lea    -0x2987d(%ebx),%eax
 80604ec:	89 04 24             	mov    %eax,(%esp)
 80604ef:	e8 4c 12 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80604f4:	8b 86 14 04 00 00    	mov    0x414(%esi),%eax
 80604fa:	85 c0                	test   %eax,%eax
 80604fc:	74 12                	je     8060510 <_ZN6__asan17AsanThreadSummary7TSDDtorEPv+0x50>
 80604fe:	89 44 24 20          	mov    %eax,0x20(%esp)
 8060502:	83 c4 14             	add    $0x14,%esp
 8060505:	5b                   	pop    %ebx
 8060506:	5e                   	pop    %esi
 8060507:	e9 84 fe ff ff       	jmp    8060390 <_ZN6__asan10AsanThread7DestroyEv>
 806050c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060510:	83 c4 14             	add    $0x14,%esp
 8060513:	5b                   	pop    %ebx
 8060514:	5e                   	pop    %esi
 8060515:	c3                   	ret    
 8060516:	8d 76 00             	lea    0x0(%esi),%esi
 8060519:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08060520 <_ZN6__asan10AsanThread26SetThreadStackTopAndBottomEv>:
 8060520:	56                   	push   %esi
 8060521:	53                   	push   %ebx
 8060522:	83 ec 34             	sub    $0x34,%esp
 8060525:	8b 74 24 40          	mov    0x40(%esp),%esi
 8060529:	e8 c2 95 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806052e:	81 c3 d2 fa 04 00    	add    $0x4fad2,%ebx
 8060534:	8d 46 10             	lea    0x10(%esi),%eax
 8060537:	89 44 24 08          	mov    %eax,0x8(%esp)
 806053b:	8d 46 0c             	lea    0xc(%esi),%eax
 806053e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8060542:	8b 06                	mov    (%esi),%eax
 8060544:	8b 00                	mov    (%eax),%eax
 8060546:	85 c0                	test   %eax,%eax
 8060548:	0f 94 c0             	sete   %al
 806054b:	0f b6 c0             	movzbl %al,%eax
 806054e:	89 04 24             	mov    %eax,(%esp)
 8060551:	e8 5a 57 00 00       	call   8065cb0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
 8060556:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 806055a:	8b 56 0c             	mov    0xc(%esi),%edx
 806055d:	3b 46 10             	cmp    0x10(%esi),%eax
 8060560:	72 0e                	jb     8060570 <_ZN6__asan10AsanThread26SetThreadStackTopAndBottomEv+0x50>
 8060562:	39 d0                	cmp    %edx,%eax
 8060564:	73 0a                	jae    8060570 <_ZN6__asan10AsanThread26SetThreadStackTopAndBottomEv+0x50>
 8060566:	83 c4 34             	add    $0x34,%esp
 8060569:	5b                   	pop    %ebx
 806056a:	5e                   	pop    %esi
 806056b:	c3                   	ret    
 806056c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060570:	8d 83 94 66 fd ff    	lea    -0x2996c(%ebx),%eax
 8060576:	89 44 24 08          	mov    %eax,0x8(%esp)
 806057a:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 8060580:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060587:	00 
 8060588:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806058f:	00 
 8060590:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8060597:	00 
 8060598:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806059f:	00 
 80605a0:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)
 80605a7:	00 
 80605a8:	89 04 24             	mov    %eax,(%esp)
 80605ab:	e8 00 1e 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

080605b0 <_ZN6__asan10AsanThread4InitEv>:
 80605b0:	55                   	push   %ebp
 80605b1:	57                   	push   %edi
 80605b2:	56                   	push   %esi
 80605b3:	53                   	push   %ebx
 80605b4:	83 ec 3c             	sub    $0x3c,%esp
 80605b7:	e8 34 95 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80605bc:	81 c3 44 fa 04 00    	add    $0x4fa44,%ebx
 80605c2:	8b 74 24 50          	mov    0x50(%esp),%esi
 80605c6:	89 34 24             	mov    %esi,(%esp)
 80605c9:	e8 52 ff ff ff       	call   8060520 <_ZN6__asan10AsanThread26SetThreadStackTopAndBottomEv>
 80605ce:	8b 46 10             	mov    0x10(%esi),%eax
 80605d1:	3d fe ff ff 1f       	cmp    $0x1ffffffe,%eax
 80605d6:	76 28                	jbe    8060600 <_ZN6__asan10AsanThread4InitEv+0x50>
 80605d8:	8d 93 04 bc 02 00    	lea    0x2bc04(%ebx),%edx
 80605de:	8b 12                	mov    (%edx),%edx
 80605e0:	85 d2                	test   %edx,%edx
 80605e2:	0f 84 d0 00 00 00    	je     80606b8 <_ZN6__asan10AsanThread4InitEv+0x108>
 80605e8:	39 d0                	cmp    %edx,%eax
 80605ea:	0f 82 c8 00 00 00    	jb     80606b8 <_ZN6__asan10AsanThread4InitEv+0x108>
 80605f0:	8d 93 00 bc 02 00    	lea    0x2bc00(%ebx),%edx
 80605f6:	3b 02                	cmp    (%edx),%eax
 80605f8:	0f 87 ba 00 00 00    	ja     80606b8 <_ZN6__asan10AsanThread4InitEv+0x108>
 80605fe:	66 90                	xchg   %ax,%ax
 8060600:	8b 4e 0c             	mov    0xc(%esi),%ecx
 8060603:	8d 51 ff             	lea    -0x1(%ecx),%edx
 8060606:	81 fa fe ff ff 1f    	cmp    $0x1ffffffe,%edx
 806060c:	76 2a                	jbe    8060638 <_ZN6__asan10AsanThread4InitEv+0x88>
 806060e:	8d bb 04 bc 02 00    	lea    0x2bc04(%ebx),%edi
 8060614:	8b 3f                	mov    (%edi),%edi
 8060616:	85 ff                	test   %edi,%edi
 8060618:	0f 84 fa 00 00 00    	je     8060718 <_ZN6__asan10AsanThread4InitEv+0x168>
 806061e:	39 fa                	cmp    %edi,%edx
 8060620:	0f 82 f2 00 00 00    	jb     8060718 <_ZN6__asan10AsanThread4InitEv+0x168>
 8060626:	8d bb 00 bc 02 00    	lea    0x2bc00(%ebx),%edi
 806062c:	3b 17                	cmp    (%edi),%edx
 806062e:	0f 87 e4 00 00 00    	ja     8060718 <_ZN6__asan10AsanThread4InitEv+0x168>
 8060634:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060638:	29 c1                	sub    %eax,%ecx
 806063a:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 806063e:	89 04 24             	mov    %eax,(%esp)
 8060641:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8060648:	00 
 8060649:	e8 62 c4 ff ff       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 806064e:	e8 cd 7e ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 8060653:	8b 40 08             	mov    0x8(%eax),%eax
 8060656:	85 c0                	test   %eax,%eax
 8060658:	7e 3c                	jle    8060696 <_ZN6__asan10AsanThread4InitEv+0xe6>
 806065a:	8b 56 0c             	mov    0xc(%esi),%edx
 806065d:	8d 4c 24 2c          	lea    0x2c(%esp),%ecx
 8060661:	8b 46 10             	mov    0x10(%esi),%eax
 8060664:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 8060668:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 806066f:	00 
 8060670:	89 d1                	mov    %edx,%ecx
 8060672:	29 c1                	sub    %eax,%ecx
 8060674:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 8060678:	89 54 24 0c          	mov    %edx,0xc(%esp)
 806067c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060680:	8b 06                	mov    (%esi),%eax
 8060682:	8b 00                	mov    (%eax),%eax
 8060684:	89 44 24 04          	mov    %eax,0x4(%esp)
 8060688:	8d 83 0c 67 fd ff    	lea    -0x298f4(%ebx),%eax
 806068e:	89 04 24             	mov    %eax,(%esp)
 8060691:	e8 aa 10 00 00       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8060696:	8b 46 0c             	mov    0xc(%esi),%eax
 8060699:	83 c6 14             	add    $0x14,%esi
 806069c:	2b 46 fc             	sub    -0x4(%esi),%eax
 806069f:	89 34 24             	mov    %esi,(%esp)
 80606a2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80606a6:	e8 f5 9e ff ff       	call   805a5a0 <_ZN6__asan9FakeStack4InitEm>
 80606ab:	e8 b0 bd ff ff       	call   805c460 <_ZN6__asan22AsanPlatformThreadInitEv>
 80606b0:	83 c4 3c             	add    $0x3c,%esp
 80606b3:	5b                   	pop    %ebx
 80606b4:	5e                   	pop    %esi
 80606b5:	5f                   	pop    %edi
 80606b6:	5d                   	pop    %ebp
 80606b7:	c3                   	ret    
 80606b8:	8d 93 08 bc 02 00    	lea    0x2bc08(%ebx),%edx
 80606be:	8b 12                	mov    (%edx),%edx
 80606c0:	89 d1                	mov    %edx,%ecx
 80606c2:	c1 e9 03             	shr    $0x3,%ecx
 80606c5:	81 c1 01 00 00 20    	add    $0x20000001,%ecx
 80606cb:	39 c8                	cmp    %ecx,%eax
 80606cd:	72 08                	jb     80606d7 <_ZN6__asan10AsanThread4InitEv+0x127>
 80606cf:	39 d0                	cmp    %edx,%eax
 80606d1:	0f 86 29 ff ff ff    	jbe    8060600 <_ZN6__asan10AsanThread4InitEv+0x50>
 80606d7:	8d 83 bc 66 fd ff    	lea    -0x29944(%ebx),%eax
 80606dd:	89 44 24 08          	mov    %eax,0x8(%esp)
 80606e1:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 80606e7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80606ee:	00 
 80606ef:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80606f6:	00 
 80606f7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80606fe:	00 
 80606ff:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060706:	00 
 8060707:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)
 806070e:	00 
 806070f:	89 04 24             	mov    %eax,(%esp)
 8060712:	e8 99 1c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060717:	90                   	nop
 8060718:	8d bb 08 bc 02 00    	lea    0x2bc08(%ebx),%edi
 806071e:	8b 3f                	mov    (%edi),%edi
 8060720:	89 fd                	mov    %edi,%ebp
 8060722:	c1 ed 03             	shr    $0x3,%ebp
 8060725:	81 c5 01 00 00 20    	add    $0x20000001,%ebp
 806072b:	39 ea                	cmp    %ebp,%edx
 806072d:	72 08                	jb     8060737 <_ZN6__asan10AsanThread4InitEv+0x187>
 806072f:	39 fa                	cmp    %edi,%edx
 8060731:	0f 86 01 ff ff ff    	jbe    8060638 <_ZN6__asan10AsanThread4InitEv+0x88>
 8060737:	8d 83 e4 66 fd ff    	lea    -0x2991c(%ebx),%eax
 806073d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060741:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 8060747:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806074e:	00 
 806074f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060756:	00 
 8060757:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806075e:	00 
 806075f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060766:	00 
 8060767:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)
 806076e:	00 
 806076f:	89 04 24             	mov    %eax,(%esp)
 8060772:	e8 39 1c 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060777:	90                   	nop
 8060778:	90                   	nop
 8060779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08060780 <_ZN6__asan10AsanThread11ThreadStartEv>:
 8060780:	57                   	push   %edi
 8060781:	56                   	push   %esi
 8060782:	53                   	push   %ebx
 8060783:	83 ec 20             	sub    $0x20,%esp
 8060786:	e8 65 93 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806078b:	81 c3 75 f8 04 00    	add    $0x4f875,%ebx
 8060791:	8b 74 24 30          	mov    0x30(%esp),%esi
 8060795:	89 34 24             	mov    %esi,(%esp)
 8060798:	e8 13 fe ff ff       	call   80605b0 <_ZN6__asan10AsanThread4InitEv>
 806079d:	e8 7e 7d ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80607a2:	80 78 35 00          	cmpb   $0x0,0x35(%eax)
 80607a6:	75 60                	jne    8060808 <_ZN6__asan10AsanThread11ThreadStartEv+0x88>
 80607a8:	8b 46 04             	mov    0x4(%esi),%eax
 80607ab:	85 c0                	test   %eax,%eax
 80607ad:	74 41                	je     80607f0 <_ZN6__asan10AsanThread11ThreadStartEv+0x70>
 80607af:	8b 56 08             	mov    0x8(%esi),%edx
 80607b2:	89 14 24             	mov    %edx,(%esp)
 80607b5:	ff d0                	call   *%eax
 80607b7:	89 c7                	mov    %eax,%edi
 80607b9:	8d 86 80 00 00 00    	lea    0x80(%esi),%eax
 80607bf:	89 04 24             	mov    %eax,(%esp)
 80607c2:	e8 c9 c2 fe ff       	call   804ca90 <_ZN6__asan28AsanThreadLocalMallocStorage10CommitBackEv>
 80607c7:	e8 54 7d ff ff       	call   8058520 <_ZN6__asan5flagsEv>
 80607cc:	80 78 35 00          	cmpb   $0x0,0x35(%eax)
 80607d0:	75 16                	jne    80607e8 <_ZN6__asan10AsanThread11ThreadStartEv+0x68>
 80607d2:	89 34 24             	mov    %esi,(%esp)
 80607d5:	e8 b6 fb ff ff       	call   8060390 <_ZN6__asan10AsanThread7DestroyEv>
 80607da:	83 c4 20             	add    $0x20,%esp
 80607dd:	89 f8                	mov    %edi,%eax
 80607df:	5b                   	pop    %ebx
 80607e0:	5e                   	pop    %esi
 80607e1:	5f                   	pop    %edi
 80607e2:	c3                   	ret    
 80607e3:	90                   	nop
 80607e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80607e8:	e8 b3 72 ff ff       	call   8057aa0 <_ZN6__asan25UnsetAlternateSignalStackEv>
 80607ed:	eb e3                	jmp    80607d2 <_ZN6__asan10AsanThread11ThreadStartEv+0x52>
 80607ef:	90                   	nop
 80607f0:	8b 06                	mov    (%esi),%eax
 80607f2:	8b 00                	mov    (%eax),%eax
 80607f4:	85 c0                	test   %eax,%eax
 80607f6:	75 17                	jne    806080f <_ZN6__asan10AsanThread11ThreadStartEv+0x8f>
 80607f8:	83 c4 20             	add    $0x20,%esp
 80607fb:	31 c0                	xor    %eax,%eax
 80607fd:	5b                   	pop    %ebx
 80607fe:	5e                   	pop    %esi
 80607ff:	5f                   	pop    %edi
 8060800:	c3                   	ret    
 8060801:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060808:	e8 23 71 ff ff       	call   8057930 <_ZN6__asan23SetAlternateSignalStackEv>
 806080d:	eb 99                	jmp    80607a8 <_ZN6__asan10AsanThread11ThreadStartEv+0x28>
 806080f:	8d 83 90 67 fd ff    	lea    -0x29870(%ebx),%eax
 8060815:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060819:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 806081f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060826:	00 
 8060827:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806082e:	00 
 806082f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8060836:	00 
 8060837:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806083e:	00 
 806083f:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)
 8060846:	00 
 8060847:	89 04 24             	mov    %eax,(%esp)
 806084a:	e8 61 1b 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 806084f:	90                   	nop

08060850 <_ZN6__asan10AsanThread25ClearShadowForThreadStackEv>:
 8060850:	53                   	push   %ebx
 8060851:	83 ec 18             	sub    $0x18,%esp
 8060854:	8b 44 24 20          	mov    0x20(%esp),%eax
 8060858:	e8 93 92 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806085d:	81 c3 a3 f7 04 00    	add    $0x4f7a3,%ebx
 8060863:	8b 50 10             	mov    0x10(%eax),%edx
 8060866:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 806086d:	00 
 806086e:	8b 40 0c             	mov    0xc(%eax),%eax
 8060871:	89 14 24             	mov    %edx,(%esp)
 8060874:	29 d0                	sub    %edx,%eax
 8060876:	89 44 24 04          	mov    %eax,0x4(%esp)
 806087a:	e8 31 c2 ff ff       	call   805cab0 <_ZN6__asan12PoisonShadowEmmh>
 806087f:	83 c4 18             	add    $0x18,%esp
 8060882:	5b                   	pop    %ebx
 8060883:	c3                   	ret    
 8060884:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806088a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08060890 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm>:
 8060890:	55                   	push   %ebp
 8060891:	57                   	push   %edi
 8060892:	56                   	push   %esi
 8060893:	53                   	push   %ebx
 8060894:	83 ec 2c             	sub    $0x2c,%esp
 8060897:	8b 44 24 40          	mov    0x40(%esp),%eax
 806089b:	8b 74 24 44          	mov    0x44(%esp),%esi
 806089f:	e8 4c 92 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80608a4:	81 c3 5c f7 04 00    	add    $0x4f75c,%ebx
 80608aa:	8b 50 10             	mov    0x10(%eax),%edx
 80608ad:	8b 48 0c             	mov    0xc(%eax),%ecx
 80608b0:	39 f2                	cmp    %esi,%edx
 80608b2:	77 04                	ja     80608b8 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x28>
 80608b4:	39 f1                	cmp    %esi,%ecx
 80608b6:	77 30                	ja     80608e8 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x58>
 80608b8:	83 c0 14             	add    $0x14,%eax
 80608bb:	89 74 24 04          	mov    %esi,0x4(%esp)
 80608bf:	89 04 24             	mov    %eax,(%esp)
 80608c2:	e8 e9 9a ff ff       	call   805a3b0 <_ZN6__asan9FakeStack17AddrIsInFakeStackEm>
 80608c7:	85 c0                	test   %eax,%eax
 80608c9:	0f 84 e1 01 00 00    	je     8060ab0 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x220>
 80608cf:	8b 7c 24 48          	mov    0x48(%esp),%edi
 80608d3:	29 c6                	sub    %eax,%esi
 80608d5:	89 37                	mov    %esi,(%edi)
 80608d7:	8b 40 04             	mov    0x4(%eax),%eax
 80608da:	83 c4 2c             	add    $0x2c,%esp
 80608dd:	5b                   	pop    %ebx
 80608de:	5e                   	pop    %esi
 80608df:	5f                   	pop    %edi
 80608e0:	5d                   	pop    %ebp
 80608e1:	c3                   	ret    
 80608e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80608e8:	89 f1                	mov    %esi,%ecx
 80608ea:	83 e1 fc             	and    $0xfffffffc,%ecx
 80608ed:	81 f9 fe ff ff 1f    	cmp    $0x1ffffffe,%ecx
 80608f3:	76 2b                	jbe    8060920 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x90>
 80608f5:	8d 83 04 bc 02 00    	lea    0x2bc04(%ebx),%eax
 80608fb:	8b 00                	mov    (%eax),%eax
 80608fd:	85 c0                	test   %eax,%eax
 80608ff:	0f 84 9b 00 00 00    	je     80609a0 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x110>
 8060905:	39 c1                	cmp    %eax,%ecx
 8060907:	0f 82 93 00 00 00    	jb     80609a0 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x110>
 806090d:	8d 83 00 bc 02 00    	lea    0x2bc00(%ebx),%eax
 8060913:	3b 08                	cmp    (%eax),%ecx
 8060915:	0f 87 85 00 00 00    	ja     80609a0 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x110>
 806091b:	90                   	nop
 806091c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060920:	c1 e9 03             	shr    $0x3,%ecx
 8060923:	81 fa fe ff ff 1f    	cmp    $0x1ffffffe,%edx
 8060929:	8d 81 00 00 00 20    	lea    0x20000000(%ecx),%eax
 806092f:	76 27                	jbe    8060958 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0xc8>
 8060931:	8d bb 04 bc 02 00    	lea    0x2bc04(%ebx),%edi
 8060937:	8b 3f                	mov    (%edi),%edi
 8060939:	85 ff                	test   %edi,%edi
 806093b:	0f 84 bf 00 00 00    	je     8060a00 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x170>
 8060941:	39 fa                	cmp    %edi,%edx
 8060943:	0f 82 b7 00 00 00    	jb     8060a00 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x170>
 8060949:	8d bb 00 bc 02 00    	lea    0x2bc00(%ebx),%edi
 806094f:	3b 17                	cmp    (%edi),%edx
 8060951:	0f 87 a9 00 00 00    	ja     8060a00 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x170>
 8060957:	90                   	nop
 8060958:	c1 ea 03             	shr    $0x3,%edx
 806095b:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8060961:	39 d0                	cmp    %edx,%eax
 8060963:	72 23                	jb     8060988 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0xf8>
 8060965:	80 b9 00 00 00 20 f1 	cmpb   $0xf1,0x20000000(%ecx)
 806096c:	75 13                	jne    8060981 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0xf1>
 806096e:	e9 bf 00 00 00       	jmp    8060a32 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x1a2>
 8060973:	90                   	nop
 8060974:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060978:	80 38 f1             	cmpb   $0xf1,(%eax)
 806097b:	0f 84 b1 00 00 00    	je     8060a32 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x1a2>
 8060981:	83 e8 01             	sub    $0x1,%eax
 8060984:	39 c2                	cmp    %eax,%edx
 8060986:	76 f0                	jbe    8060978 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0xe8>
 8060988:	8b 44 24 48          	mov    0x48(%esp),%eax
 806098c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8060992:	83 c4 2c             	add    $0x2c,%esp
 8060995:	8d 83 a6 67 fd ff    	lea    -0x2985a(%ebx),%eax
 806099b:	5b                   	pop    %ebx
 806099c:	5e                   	pop    %esi
 806099d:	5f                   	pop    %edi
 806099e:	5d                   	pop    %ebp
 806099f:	c3                   	ret    
 80609a0:	8d 83 08 bc 02 00    	lea    0x2bc08(%ebx),%eax
 80609a6:	8b 00                	mov    (%eax),%eax
 80609a8:	89 c7                	mov    %eax,%edi
 80609aa:	c1 ef 03             	shr    $0x3,%edi
 80609ad:	81 c7 01 00 00 20    	add    $0x20000001,%edi
 80609b3:	39 f9                	cmp    %edi,%ecx
 80609b5:	72 08                	jb     80609bf <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x12f>
 80609b7:	39 c1                	cmp    %eax,%ecx
 80609b9:	0f 86 61 ff ff ff    	jbe    8060920 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x90>
 80609bf:	8d 83 4d 2d fd ff    	lea    -0x2d2b3(%ebx),%eax
 80609c5:	89 44 24 08          	mov    %eax,0x8(%esp)
 80609c9:	8d 83 cc 32 fd ff    	lea    -0x2cd34(%ebx),%eax
 80609cf:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80609d6:	00 
 80609d7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80609de:	00 
 80609df:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80609e6:	00 
 80609e7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80609ee:	00 
 80609ef:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 80609f6:	00 
 80609f7:	89 04 24             	mov    %eax,(%esp)
 80609fa:	e8 b1 19 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80609ff:	90                   	nop
 8060a00:	8d bb 08 bc 02 00    	lea    0x2bc08(%ebx),%edi
 8060a06:	8b 3f                	mov    (%edi),%edi
 8060a08:	89 fd                	mov    %edi,%ebp
 8060a0a:	c1 ed 03             	shr    $0x3,%ebp
 8060a0d:	81 c5 01 00 00 20    	add    $0x20000001,%ebp
 8060a13:	39 ea                	cmp    %ebp,%edx
 8060a15:	72 a8                	jb     80609bf <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x12f>
 8060a17:	39 fa                	cmp    %edi,%edx
 8060a19:	0f 86 39 ff ff ff    	jbe    8060958 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0xc8>
 8060a1f:	eb 9e                	jmp    80609bf <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x12f>
 8060a21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060a28:	80 38 f1             	cmpb   $0xf1,(%eax)
 8060a2b:	90                   	nop
 8060a2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060a30:	75 0e                	jne    8060a40 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x1b0>
 8060a32:	83 e8 01             	sub    $0x1,%eax
 8060a35:	39 c2                	cmp    %eax,%edx
 8060a37:	76 ef                	jbe    8060a28 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x198>
 8060a39:	e9 4a ff ff ff       	jmp    8060988 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0xf8>
 8060a3e:	66 90                	xchg   %ax,%ax
 8060a40:	2d ff ff ff 1f       	sub    $0x1fffffff,%eax
 8060a45:	81 3c c5 00 00 00 00 	cmpl   $0x41b58ab3,0x0(,%eax,8)
 8060a4c:	b3 8a b5 41 
 8060a50:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
 8060a57:	75 17                	jne    8060a70 <_ZN6__asan10AsanThread18GetFrameNameByAddrEmPm+0x1e0>
 8060a59:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 8060a5d:	29 d6                	sub    %edx,%esi
 8060a5f:	89 31                	mov    %esi,(%ecx)
 8060a61:	8b 04 c5 04 00 00 00 	mov    0x4(,%eax,8),%eax
 8060a68:	83 c4 2c             	add    $0x2c,%esp
 8060a6b:	5b                   	pop    %ebx
 8060a6c:	5e                   	pop    %esi
 8060a6d:	5f                   	pop    %edi
 8060a6e:	5d                   	pop    %ebp
 8060a6f:	c3                   	ret    
 8060a70:	8d 83 38 67 fd ff    	lea    -0x298c8(%ebx),%eax
 8060a76:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060a7a:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 8060a80:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060a87:	00 
 8060a88:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060a8f:	00 
 8060a90:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8060a97:	00 
 8060a98:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060a9f:	00 
 8060aa0:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)
 8060aa7:	00 
 8060aa8:	89 04 24             	mov    %eax,(%esp)
 8060aab:	e8 00 19 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060ab0:	8d 83 ae 67 fd ff    	lea    -0x29852(%ebx),%eax
 8060ab6:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060aba:	8d 83 3c 66 fd ff    	lea    -0x299c4(%ebx),%eax
 8060ac0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060ac7:	00 
 8060ac8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060acf:	00 
 8060ad0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8060ad7:	00 
 8060ad8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060adf:	00 
 8060ae0:	c7 44 24 04 7c 00 00 	movl   $0x7c,0x4(%esp)
 8060ae7:	00 
 8060ae8:	89 04 24             	mov    %eax,(%esp)
 8060aeb:	e8 c0 18 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

08060af0 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj>:
 8060af0:	55                   	push   %ebp
 8060af1:	85 c0                	test   %eax,%eax
 8060af3:	57                   	push   %edi
 8060af4:	56                   	push   %esi
 8060af5:	8b 74 24 10          	mov    0x10(%esp),%esi
 8060af9:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8060afd:	75 0f                	jne    8060b0e <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x1e>
 8060aff:	eb 3f                	jmp    8060b40 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x50>
 8060b01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060b08:	8b 00                	mov    (%eax),%eax
 8060b0a:	85 c0                	test   %eax,%eax
 8060b0c:	74 32                	je     8060b40 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x50>
 8060b0e:	39 78 08             	cmp    %edi,0x8(%eax)
 8060b11:	75 f5                	jne    8060b08 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x18>
 8060b13:	39 70 0c             	cmp    %esi,0xc(%eax)
 8060b16:	75 f0                	jne    8060b08 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x18>
 8060b18:	85 f6                	test   %esi,%esi
 8060b1a:	74 1c                	je     8060b38 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x48>
 8060b1c:	8b 48 10             	mov    0x10(%eax),%ecx
 8060b1f:	39 0a                	cmp    %ecx,(%edx)
 8060b21:	75 e5                	jne    8060b08 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x18>
 8060b23:	31 c9                	xor    %ecx,%ecx
 8060b25:	eb 0a                	jmp    8060b31 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x41>
 8060b27:	90                   	nop
 8060b28:	8b 6c 88 10          	mov    0x10(%eax,%ecx,4),%ebp
 8060b2c:	39 2c 8a             	cmp    %ebp,(%edx,%ecx,4)
 8060b2f:	75 17                	jne    8060b48 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x58>
 8060b31:	83 c1 01             	add    $0x1,%ecx
 8060b34:	39 f1                	cmp    %esi,%ecx
 8060b36:	75 f0                	jne    8060b28 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x38>
 8060b38:	8b 40 04             	mov    0x4(%eax),%eax
 8060b3b:	eb 05                	jmp    8060b42 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x52>
 8060b3d:	8d 76 00             	lea    0x0(%esi),%esi
 8060b40:	31 c0                	xor    %eax,%eax
 8060b42:	5e                   	pop    %esi
 8060b43:	5f                   	pop    %edi
 8060b44:	5d                   	pop    %ebp
 8060b45:	c3                   	ret    
 8060b46:	66 90                	xchg   %ax,%ax
 8060b48:	39 ce                	cmp    %ecx,%esi
 8060b4a:	75 bc                	jne    8060b08 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x18>
 8060b4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060b50:	eb e6                	jmp    8060b38 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj+0x48>
 8060b52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060b59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08060b60 <_ZN11__sanitizerL12tryallocDescEm>:
 8060b60:	55                   	push   %ebp
 8060b61:	89 c5                	mov    %eax,%ebp
 8060b63:	57                   	push   %edi
 8060b64:	56                   	push   %esi
 8060b65:	53                   	push   %ebx
 8060b66:	e8 85 8f fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8060b6b:	81 c3 95 f4 04 00    	add    $0x4f495,%ebx
 8060b71:	8d 3d 44 0f 1b 01    	lea    0x11b0f44,%edi
 8060b77:	8d 35 48 0f 1b 01    	lea    0x11b0f48,%esi
 8060b7d:	8d 76 00             	lea    0x0(%esi),%esi
 8060b80:	8b 14 1f             	mov    (%edi,%ebx,1),%edx
 8060b83:	8b 04 1e             	mov    (%esi,%ebx,1),%eax
 8060b86:	85 d2                	test   %edx,%edx
 8060b88:	74 1e                	je     8060ba8 <_ZN11__sanitizerL12tryallocDescEm+0x48>
 8060b8a:	8d 4c 15 00          	lea    0x0(%ebp,%edx,1),%ecx
 8060b8e:	39 c1                	cmp    %eax,%ecx
 8060b90:	77 16                	ja     8060ba8 <_ZN11__sanitizerL12tryallocDescEm+0x48>
 8060b92:	89 d0                	mov    %edx,%eax
 8060b94:	f0 0f b1 8b 44 0f 1b 	lock cmpxchg %ecx,0x11b0f44(%ebx)
 8060b9b:	01 
 8060b9c:	39 c2                	cmp    %eax,%edx
 8060b9e:	75 e0                	jne    8060b80 <_ZN11__sanitizerL12tryallocDescEm+0x20>
 8060ba0:	5b                   	pop    %ebx
 8060ba1:	89 d0                	mov    %edx,%eax
 8060ba3:	5e                   	pop    %esi
 8060ba4:	5f                   	pop    %edi
 8060ba5:	5d                   	pop    %ebp
 8060ba6:	c3                   	ret    
 8060ba7:	90                   	nop
 8060ba8:	5b                   	pop    %ebx
 8060ba9:	31 c0                	xor    %eax,%eax
 8060bab:	5e                   	pop    %esi
 8060bac:	5f                   	pop    %edi
 8060bad:	5d                   	pop    %ebp
 8060bae:	c3                   	ret    
 8060baf:	90                   	nop

08060bb0 <_ZN11__sanitizer18StackDepotGetStatsEv>:
 8060bb0:	e8 e0 f3 fe ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8060bb5:	81 c1 4b f4 04 00    	add    $0x4f44b,%ecx
 8060bbb:	8d 81 20 0f 1b 01    	lea    0x11b0f20(%ecx),%eax
 8060bc1:	c3                   	ret    
 8060bc2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08060bd0 <_ZN11__sanitizer13StackDepotPutEPKmm>:
 8060bd0:	55                   	push   %ebp
 8060bd1:	57                   	push   %edi
 8060bd2:	56                   	push   %esi
 8060bd3:	53                   	push   %ebx
 8060bd4:	83 ec 4c             	sub    $0x4c,%esp
 8060bd7:	8b 54 24 60          	mov    0x60(%esp),%edx
 8060bdb:	e8 10 8f fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8060be0:	81 c3 20 f4 04 00    	add    $0x4f420,%ebx
 8060be6:	85 d2                	test   %edx,%edx
 8060be8:	75 0e                	jne    8060bf8 <_ZN11__sanitizer13StackDepotPutEPKmm+0x28>
 8060bea:	31 c0                	xor    %eax,%eax
 8060bec:	83 c4 4c             	add    $0x4c,%esp
 8060bef:	5b                   	pop    %ebx
 8060bf0:	5e                   	pop    %esi
 8060bf1:	5f                   	pop    %edi
 8060bf2:	5d                   	pop    %ebp
 8060bf3:	c3                   	ret    
 8060bf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8060bf8:	8b 44 24 64          	mov    0x64(%esp),%eax
 8060bfc:	85 c0                	test   %eax,%eax
 8060bfe:	74 ea                	je     8060bea <_ZN11__sanitizer13StackDepotPutEPKmm+0x1a>
 8060c00:	8b 44 24 64          	mov    0x64(%esp),%eax
 8060c04:	8b 54 24 60          	mov    0x60(%esp),%edx
 8060c08:	c1 e0 02             	shl    $0x2,%eax
 8060c0b:	89 c7                	mov    %eax,%edi
 8060c0d:	89 44 24 30          	mov    %eax,0x30(%esp)
 8060c11:	01 d7                	add    %edx,%edi
 8060c13:	35 8c b2 47 97       	xor    $0x9747b28c,%eax
 8060c18:	69 32 95 e9 d1 5b    	imul   $0x5bd1e995,(%edx),%esi
 8060c1e:	83 c2 04             	add    $0x4,%edx
 8060c21:	89 f1                	mov    %esi,%ecx
 8060c23:	c1 e9 18             	shr    $0x18,%ecx
 8060c26:	31 f1                	xor    %esi,%ecx
 8060c28:	69 f0 95 e9 d1 5b    	imul   $0x5bd1e995,%eax,%esi
 8060c2e:	69 c1 95 e9 d1 5b    	imul   $0x5bd1e995,%ecx,%eax
 8060c34:	31 f0                	xor    %esi,%eax
 8060c36:	39 fa                	cmp    %edi,%edx
 8060c38:	75 de                	jne    8060c18 <_ZN11__sanitizer13StackDepotPutEPKmm+0x48>
 8060c3a:	89 c2                	mov    %eax,%edx
 8060c3c:	c1 ea 0d             	shr    $0xd,%edx
 8060c3f:	31 c2                	xor    %eax,%edx
 8060c41:	69 d2 95 e9 d1 5b    	imul   $0x5bd1e995,%edx,%edx
 8060c47:	89 d0                	mov    %edx,%eax
 8060c49:	c1 e8 0f             	shr    $0xf,%eax
 8060c4c:	89 44 24 28          	mov    %eax,0x28(%esp)
 8060c50:	31 54 24 28          	xor    %edx,0x28(%esp)
 8060c54:	8b 54 24 28          	mov    0x28(%esp),%edx
 8060c58:	89 d0                	mov    %edx,%eax
 8060c5a:	25 ff ff 0f 00       	and    $0xfffff,%eax
 8060c5f:	89 c7                	mov    %eax,%edi
 8060c61:	89 44 24 38          	mov    %eax,0x38(%esp)
 8060c65:	8d 83 40 0f 1b 01    	lea    0x11b0f40(%ebx),%eax
 8060c6b:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 8060c6f:	8d 04 b8             	lea    (%eax,%edi,4),%eax
 8060c72:	89 44 24 34          	mov    %eax,0x34(%esp)
 8060c76:	8d 68 0c             	lea    0xc(%eax),%ebp
 8060c79:	8b 40 0c             	mov    0xc(%eax),%eax
 8060c7c:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8060c80:	8b 44 24 64          	mov    0x64(%esp),%eax
 8060c84:	83 64 24 2c fe       	andl   $0xfffffffe,0x2c(%esp)
 8060c89:	89 54 24 04          	mov    %edx,0x4(%esp)
 8060c8d:	8b 54 24 60          	mov    0x60(%esp),%edx
 8060c91:	89 04 24             	mov    %eax,(%esp)
 8060c94:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8060c98:	e8 53 fe ff ff       	call   8060af0 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj>
 8060c9d:	85 c0                	test   %eax,%eax
 8060c9f:	0f 85 47 ff ff ff    	jne    8060bec <_ZN11__sanitizer13StackDepotPutEPKmm+0x1c>
 8060ca5:	8b 75 00             	mov    0x0(%ebp),%esi
 8060ca8:	31 ff                	xor    %edi,%edi
 8060caa:	f7 c6 01 00 00 00    	test   $0x1,%esi
 8060cb0:	74 2b                	je     8060cdd <_ZN11__sanitizer13StackDepotPutEPKmm+0x10d>
 8060cb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8060cb8:	83 ff 09             	cmp    $0x9,%edi
 8060cbb:	0f 8f bf 00 00 00    	jg     8060d80 <_ZN11__sanitizer13StackDepotPutEPKmm+0x1b0>
 8060cc1:	b8 0a 00 00 00       	mov    $0xa,%eax
 8060cc6:	66 90                	xchg   %ax,%ax
 8060cc8:	f3 90                	pause  
 8060cca:	83 e8 01             	sub    $0x1,%eax
 8060ccd:	75 f9                	jne    8060cc8 <_ZN11__sanitizer13StackDepotPutEPKmm+0xf8>
 8060ccf:	8b 75 00             	mov    0x0(%ebp),%esi
 8060cd2:	83 c7 01             	add    $0x1,%edi
 8060cd5:	f7 c6 01 00 00 00    	test   $0x1,%esi
 8060cdb:	75 db                	jne    8060cb8 <_ZN11__sanitizer13StackDepotPutEPKmm+0xe8>
 8060cdd:	89 f2                	mov    %esi,%edx
 8060cdf:	89 f0                	mov    %esi,%eax
 8060ce1:	83 ca 01             	or     $0x1,%edx
 8060ce4:	f0 0f b1 55 00       	lock cmpxchg %edx,0x0(%ebp)
 8060ce9:	39 c6                	cmp    %eax,%esi
 8060ceb:	75 cb                	jne    8060cb8 <_ZN11__sanitizer13StackDepotPutEPKmm+0xe8>
 8060ced:	39 74 24 2c          	cmp    %esi,0x2c(%esp)
 8060cf1:	74 22                	je     8060d15 <_ZN11__sanitizer13StackDepotPutEPKmm+0x145>
 8060cf3:	8b 44 24 28          	mov    0x28(%esp),%eax
 8060cf7:	8b 54 24 60          	mov    0x60(%esp),%edx
 8060cfb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8060cff:	8b 44 24 64          	mov    0x64(%esp),%eax
 8060d03:	89 04 24             	mov    %eax,(%esp)
 8060d06:	89 f0                	mov    %esi,%eax
 8060d08:	e8 e3 fd ff ff       	call   8060af0 <_ZN11__sanitizerL4findEPNS_9StackDescEPKmmj>
 8060d0d:	85 c0                	test   %eax,%eax
 8060d0f:	0f 85 ef 00 00 00    	jne    8060e04 <_ZN11__sanitizer13StackDepotPutEPKmm+0x234>
 8060d15:	8b 7c 24 38          	mov    0x38(%esp),%edi
 8060d19:	b9 01 00 00 00       	mov    $0x1,%ecx
 8060d1e:	c1 ef 0c             	shr    $0xc,%edi
 8060d21:	8d 04 bd 00 00 40 00 	lea    0x400000(,%edi,4),%eax
 8060d28:	f0 0f c1 8c 18 4c 0f 	lock xadd %ecx,0x11b0f4c(%eax,%ebx,1)
 8060d2f:	1b 01 
 8060d31:	31 d2                	xor    %edx,%edx
 8060d33:	83 83 20 0f 1b 01 01 	addl   $0x1,0x11b0f20(%ebx)
 8060d3a:	83 c1 01             	add    $0x1,%ecx
 8060d3d:	81 f9 ff ff 7f 00    	cmp    $0x7fffff,%ecx
 8060d43:	76 45                	jbe    8060d8a <_ZN11__sanitizer13StackDepotPutEPKmm+0x1ba>
 8060d45:	8d 83 c7 67 fd ff    	lea    -0x29839(%ebx),%eax
 8060d4b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060d4f:	8d 83 2c 68 fd ff    	lea    -0x297d4(%ebx),%eax
 8060d55:	c7 44 24 14 00 00 80 	movl   $0x800000,0x14(%esp)
 8060d5c:	00 
 8060d5d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060d64:	00 
 8060d65:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8060d69:	89 54 24 10          	mov    %edx,0x10(%esp)
 8060d6d:	c7 44 24 04 a5 00 00 	movl   $0xa5,0x4(%esp)
 8060d74:	00 
 8060d75:	89 04 24             	mov    %eax,(%esp)
 8060d78:	e8 33 16 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060d7d:	8d 76 00             	lea    0x0(%esi),%esi
 8060d80:	e8 7b 45 00 00       	call   8065300 <_ZN11__sanitizer20internal_sched_yieldEv>
 8060d85:	e9 45 ff ff ff       	jmp    8060ccf <_ZN11__sanitizer13StackDepotPutEPKmm+0xff>
 8060d8a:	c1 e7 17             	shl    $0x17,%edi
 8060d8d:	89 fd                	mov    %edi,%ebp
 8060d8f:	09 cd                	or     %ecx,%ebp
 8060d91:	0f 84 3b 01 00 00    	je     8060ed2 <_ZN11__sanitizer13StackDepotPutEPKmm+0x302>
 8060d97:	89 e9                	mov    %ebp,%ecx
 8060d99:	31 d2                	xor    %edx,%edx
 8060d9b:	81 e1 00 00 00 80    	and    $0x80000000,%ecx
 8060da1:	85 c9                	test   %ecx,%ecx
 8060da3:	0f 85 f1 00 00 00    	jne    8060e9a <_ZN11__sanitizer13StackDepotPutEPKmm+0x2ca>
 8060da9:	8b 44 24 30          	mov    0x30(%esp),%eax
 8060dad:	8d 78 10             	lea    0x10(%eax),%edi
 8060db0:	89 f8                	mov    %edi,%eax
 8060db2:	e8 a9 fd ff ff       	call   8060b60 <_ZN11__sanitizerL12tryallocDescEm>
 8060db7:	85 c0                	test   %eax,%eax
 8060db9:	89 c2                	mov    %eax,%edx
 8060dbb:	74 53                	je     8060e10 <_ZN11__sanitizer13StackDepotPutEPKmm+0x240>
 8060dbd:	8b 44 24 28          	mov    0x28(%esp),%eax
 8060dc1:	89 6a 04             	mov    %ebp,0x4(%edx)
 8060dc4:	89 54 24 28          	mov    %edx,0x28(%esp)
 8060dc8:	89 42 08             	mov    %eax,0x8(%edx)
 8060dcb:	8b 44 24 64          	mov    0x64(%esp),%eax
 8060dcf:	89 42 0c             	mov    %eax,0xc(%edx)
 8060dd2:	8b 44 24 30          	mov    0x30(%esp),%eax
 8060dd6:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060dda:	8b 44 24 60          	mov    0x60(%esp),%eax
 8060dde:	89 44 24 04          	mov    %eax,0x4(%esp)
 8060de2:	8d 42 10             	lea    0x10(%edx),%eax
 8060de5:	89 04 24             	mov    %eax,(%esp)
 8060de8:	e8 c3 0a 00 00       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8060ded:	8b 54 24 28          	mov    0x28(%esp),%edx
 8060df1:	89 32                	mov    %esi,(%edx)
 8060df3:	8b 44 24 34          	mov    0x34(%esp),%eax
 8060df7:	89 50 0c             	mov    %edx,0xc(%eax)
 8060dfa:	83 c4 4c             	add    $0x4c,%esp
 8060dfd:	89 e8                	mov    %ebp,%eax
 8060dff:	5b                   	pop    %ebx
 8060e00:	5e                   	pop    %esi
 8060e01:	5f                   	pop    %edi
 8060e02:	5d                   	pop    %ebp
 8060e03:	c3                   	ret    
 8060e04:	8b 7c 24 34          	mov    0x34(%esp),%edi
 8060e08:	89 77 0c             	mov    %esi,0xc(%edi)
 8060e0b:	e9 dc fd ff ff       	jmp    8060bec <_ZN11__sanitizer13StackDepotPutEPKmm+0x1c>
 8060e10:	b8 01 00 00 00       	mov    $0x1,%eax
 8060e15:	86 83 40 0f 1b 01    	xchg   %al,0x11b0f40(%ebx)
 8060e1b:	84 c0                	test   %al,%al
 8060e1d:	74 0c                	je     8060e2b <_ZN11__sanitizer13StackDepotPutEPKmm+0x25b>
 8060e1f:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8060e23:	89 04 24             	mov    %eax,(%esp)
 8060e26:	e8 05 e6 fe ff       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 8060e2b:	8d 83 08 68 fd ff    	lea    -0x297f8(%ebx),%eax
 8060e31:	89 6c 24 2c          	mov    %ebp,0x2c(%esp)
 8060e35:	89 c5                	mov    %eax,%ebp
 8060e37:	89 74 24 38          	mov    %esi,0x38(%esp)
 8060e3b:	eb 3c                	jmp    8060e79 <_ZN11__sanitizer13StackDepotPutEPKmm+0x2a9>
 8060e3d:	8d 76 00             	lea    0x0(%esi),%esi
 8060e40:	81 ff 00 00 01 00    	cmp    $0x10000,%edi
 8060e46:	be 00 00 01 00       	mov    $0x10000,%esi
 8060e4b:	0f 43 f7             	cmovae %edi,%esi
 8060e4e:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8060e52:	89 34 24             	mov    %esi,(%esp)
 8060e55:	c7 83 44 0f 1b 01 00 	movl   $0x0,0x11b0f44(%ebx)
 8060e5c:	00 00 00 
 8060e5f:	e8 7c 23 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8060e64:	01 b3 24 0f 1b 01    	add    %esi,0x11b0f24(%ebx)
 8060e6a:	8d 14 30             	lea    (%eax,%esi,1),%edx
 8060e6d:	89 93 48 0f 1b 01    	mov    %edx,0x11b0f48(%ebx)
 8060e73:	89 83 44 0f 1b 01    	mov    %eax,0x11b0f44(%ebx)
 8060e79:	89 f8                	mov    %edi,%eax
 8060e7b:	e8 e0 fc ff ff       	call   8060b60 <_ZN11__sanitizerL12tryallocDescEm>
 8060e80:	85 c0                	test   %eax,%eax
 8060e82:	74 bc                	je     8060e40 <_ZN11__sanitizer13StackDepotPutEPKmm+0x270>
 8060e84:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp
 8060e88:	8b 74 24 38          	mov    0x38(%esp),%esi
 8060e8c:	c6 83 40 0f 1b 01 00 	movb   $0x0,0x11b0f40(%ebx)
 8060e93:	89 c2                	mov    %eax,%edx
 8060e95:	e9 23 ff ff ff       	jmp    8060dbd <_ZN11__sanitizer13StackDepotPutEPKmm+0x1ed>
 8060e9a:	8d 83 eb 67 fd ff    	lea    -0x29815(%ebx),%eax
 8060ea0:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060ea4:	8d 83 2c 68 fd ff    	lea    -0x297d4(%ebx),%eax
 8060eaa:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060eb1:	00 
 8060eb2:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060eb9:	00 
 8060eba:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 8060ebe:	89 54 24 10          	mov    %edx,0x10(%esp)
 8060ec2:	c7 44 24 04 a8 00 00 	movl   $0xa8,0x4(%esp)
 8060ec9:	00 
 8060eca:	89 04 24             	mov    %eax,(%esp)
 8060ecd:	e8 de 14 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060ed2:	8d 83 db 67 fd ff    	lea    -0x29825(%ebx),%eax
 8060ed8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060edc:	8d 83 2c 68 fd ff    	lea    -0x297d4(%ebx),%eax
 8060ee2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8060ee9:	00 
 8060eea:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060ef1:	00 
 8060ef2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8060ef9:	00 
 8060efa:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8060f01:	00 
 8060f02:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)
 8060f09:	00 
 8060f0a:	89 04 24             	mov    %eax,(%esp)
 8060f0d:	e8 9e 14 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060f12:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060f19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08060f20 <_ZN11__sanitizer13StackDepotGetEjPm>:
 8060f20:	57                   	push   %edi
 8060f21:	56                   	push   %esi
 8060f22:	53                   	push   %ebx
 8060f23:	83 ec 30             	sub    $0x30,%esp
 8060f26:	8b 54 24 40          	mov    0x40(%esp),%edx
 8060f2a:	e8 c1 8b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8060f2f:	81 c3 d1 f0 04 00    	add    $0x4f0d1,%ebx
 8060f35:	85 d2                	test   %edx,%edx
 8060f37:	0f 84 cb 00 00 00    	je     8061008 <_ZN11__sanitizer13StackDepotGetEjPm+0xe8>
 8060f3d:	89 d0                	mov    %edx,%eax
 8060f3f:	31 ff                	xor    %edi,%edi
 8060f41:	25 00 00 00 80       	and    $0x80000000,%eax
 8060f46:	85 c0                	test   %eax,%eax
 8060f48:	0f 85 c3 00 00 00    	jne    8061011 <_ZN11__sanitizer13StackDepotGetEjPm+0xf1>
 8060f4e:	89 d6                	mov    %edx,%esi
 8060f50:	31 c9                	xor    %ecx,%ecx
 8060f52:	c1 ee 17             	shr    $0x17,%esi
 8060f55:	c1 e6 0c             	shl    $0xc,%esi
 8060f58:	8d bc b3 4c 0f 1b 01 	lea    0x11b0f4c(%ebx,%esi,4),%edi
 8060f5f:	8d 04 31             	lea    (%ecx,%esi,1),%eax
 8060f62:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
 8060f67:	89 44 24 28          	mov    %eax,0x28(%esp)
 8060f6b:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8060f72:	00 
 8060f73:	76 43                	jbe    8060fb8 <_ZN11__sanitizer13StackDepotGetEjPm+0x98>
 8060f75:	8b 44 24 28          	mov    0x28(%esp),%eax
 8060f79:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8060f7d:	c7 44 24 14 00 00 10 	movl   $0x100000,0x14(%esp)
 8060f84:	00 
 8060f85:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8060f8c:	00 
 8060f8d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8060f91:	8d 83 14 68 fd ff    	lea    -0x297ec(%ebx),%eax
 8060f97:	89 44 24 08          	mov    %eax,0x8(%esp)
 8060f9b:	8d 83 2c 68 fd ff    	lea    -0x297d4(%ebx),%eax
 8060fa1:	89 54 24 10          	mov    %edx,0x10(%esp)
 8060fa5:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)
 8060fac:	00 
 8060fad:	89 04 24             	mov    %eax,(%esp)
 8060fb0:	e8 fb 13 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8060fb5:	8d 76 00             	lea    0x0(%esi),%esi
 8060fb8:	8b 07                	mov    (%edi),%eax
 8060fba:	83 e0 fe             	and    $0xfffffffe,%eax
 8060fbd:	75 0f                	jne    8060fce <_ZN11__sanitizer13StackDepotGetEjPm+0xae>
 8060fbf:	eb 27                	jmp    8060fe8 <_ZN11__sanitizer13StackDepotGetEjPm+0xc8>
 8060fc1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8060fc8:	8b 00                	mov    (%eax),%eax
 8060fca:	85 c0                	test   %eax,%eax
 8060fcc:	74 1a                	je     8060fe8 <_ZN11__sanitizer13StackDepotGetEjPm+0xc8>
 8060fce:	39 50 04             	cmp    %edx,0x4(%eax)
 8060fd1:	75 f5                	jne    8060fc8 <_ZN11__sanitizer13StackDepotGetEjPm+0xa8>
 8060fd3:	8b 50 0c             	mov    0xc(%eax),%edx
 8060fd6:	83 c0 10             	add    $0x10,%eax
 8060fd9:	8b 7c 24 44          	mov    0x44(%esp),%edi
 8060fdd:	89 17                	mov    %edx,(%edi)
 8060fdf:	83 c4 30             	add    $0x30,%esp
 8060fe2:	5b                   	pop    %ebx
 8060fe3:	5e                   	pop    %esi
 8060fe4:	5f                   	pop    %edi
 8060fe5:	c3                   	ret    
 8060fe6:	66 90                	xchg   %ax,%ax
 8060fe8:	83 c1 01             	add    $0x1,%ecx
 8060feb:	83 c7 04             	add    $0x4,%edi
 8060fee:	81 f9 00 10 00 00    	cmp    $0x1000,%ecx
 8060ff4:	0f 85 65 ff ff ff    	jne    8060f5f <_ZN11__sanitizer13StackDepotGetEjPm+0x3f>
 8060ffa:	8b 44 24 44          	mov    0x44(%esp),%eax
 8060ffe:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8061004:	31 c0                	xor    %eax,%eax
 8061006:	eb d7                	jmp    8060fdf <_ZN11__sanitizer13StackDepotGetEjPm+0xbf>
 8061008:	83 c4 30             	add    $0x30,%esp
 806100b:	31 c0                	xor    %eax,%eax
 806100d:	5b                   	pop    %ebx
 806100e:	5e                   	pop    %esi
 806100f:	5f                   	pop    %edi
 8061010:	c3                   	ret    
 8061011:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8061015:	8d 83 eb 67 fd ff    	lea    -0x29815(%ebx),%eax
 806101b:	89 44 24 08          	mov    %eax,0x8(%esp)
 806101f:	8d 83 2c 68 fd ff    	lea    -0x297d4(%ebx),%eax
 8061025:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806102c:	00 
 806102d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8061034:	00 
 8061035:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8061039:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)
 8061040:	00 
 8061041:	89 04 24             	mov    %eax,(%esp)
 8061044:	e8 67 13 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8061049:	66 90                	xchg   %ax,%ax
 806104b:	66 90                	xchg   %ax,%ax
 806104d:	66 90                	xchg   %ax,%ax
 806104f:	90                   	nop

08061050 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh>:
 8061050:	55                   	push   %ebp
 8061051:	89 c1                	mov    %eax,%ecx
 8061053:	57                   	push   %edi
 8061054:	56                   	push   %esi
 8061055:	53                   	push   %ebx
 8061056:	81 ec bc 00 00 00    	sub    $0xbc,%esp
 806105c:	8b 84 24 d8 00 00 00 	mov    0xd8(%esp),%eax
 8061063:	8b b4 24 dc 00 00 00 	mov    0xdc(%esp),%esi
 806106a:	e8 81 8a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806106f:	81 c3 91 ef 04 00    	add    $0x4ef91,%ebx
 8061075:	8b bc 24 d0 00 00 00 	mov    0xd0(%esp),%edi
 806107c:	89 54 24 28          	mov    %edx,0x28(%esp)
 8061080:	8b ac 24 d4 00 00 00 	mov    0xd4(%esp),%ebp
 8061087:	3c 10                	cmp    $0x10,%al
 8061089:	89 74 24 24          	mov    %esi,0x24(%esp)
 806108d:	0f 85 49 01 00 00    	jne    80611dc <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x18c>
 8061093:	80 7c 24 24 1d       	cmpb   $0x1d,0x24(%esp)
 8061098:	0f 87 59 01 00 00    	ja     80611f7 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x1a7>
 806109e:	0f b6 c0             	movzbl %al,%eax
 80610a1:	31 f6                	xor    %esi,%esi
 80610a3:	89 44 24 18          	mov    %eax,0x18(%esp)
 80610a7:	8d 44 24 38          	lea    0x38(%esp),%eax
 80610ab:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 80610b2:	00 
 80610b3:	89 44 24 20          	mov    %eax,0x20(%esp)
 80610b7:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 80610bb:	eb 0c                	jmp    80610c9 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x79>
 80610bd:	8d 76 00             	lea    0x0(%esi),%esi
 80610c0:	83 fe 1e             	cmp    $0x1e,%esi
 80610c3:	0f 84 cf 00 00 00    	je     8061198 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x148>
 80610c9:	8b 44 24 18          	mov    0x18(%esp),%eax
 80610cd:	83 c6 01             	add    $0x1,%esi
 80610d0:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80610d4:	89 3c 24             	mov    %edi,(%esp)
 80610d7:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80610db:	89 44 24 08          	mov    %eax,0x8(%esp)
 80610df:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80610e3:	e8 b8 18 02 00       	call   80829a0 <__umoddi3>
 80610e8:	8b 4c 24 20          	mov    0x20(%esp),%ecx
 80610ec:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80610f0:	89 44 b1 fc          	mov    %eax,-0x4(%ecx,%esi,4)
 80610f4:	8b 44 24 18          	mov    0x18(%esp),%eax
 80610f8:	89 3c 24             	mov    %edi,(%esp)
 80610fb:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80610ff:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8061103:	89 44 24 08          	mov    %eax,0x8(%esp)
 8061107:	e8 64 17 02 00       	call   8082870 <__udivdi3>
 806110c:	89 c7                	mov    %eax,%edi
 806110e:	89 d0                	mov    %edx,%eax
 8061110:	09 f8                	or     %edi,%eax
 8061112:	89 d5                	mov    %edx,%ebp
 8061114:	75 aa                	jne    80610c0 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x70>
 8061116:	0f b6 7c 24 24       	movzbl 0x24(%esp),%edi
 806111b:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 806111f:	39 f7                	cmp    %esi,%edi
 8061121:	0f 87 84 00 00 00    	ja     80611ab <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x15b>
 8061127:	8b 44 24 20          	mov    0x20(%esp),%eax
 806112b:	8d 6c 24 34          	lea    0x34(%esp),%ebp
 806112f:	89 74 24 20          	mov    %esi,0x20(%esp)
 8061133:	8b 7c 24 28          	mov    0x28(%esp),%edi
 8061137:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 806113b:	8d 44 b0 fc          	lea    -0x4(%eax,%esi,4),%eax
 806113f:	eb 29                	jmp    806116a <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x11a>
 8061141:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061148:	8d 56 30             	lea    0x30(%esi),%edx
 806114b:	0f b6 f2             	movzbl %dl,%esi
 806114e:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 8061152:	8b 11                	mov    (%ecx),%edx
 8061154:	39 d7                	cmp    %edx,%edi
 8061156:	76 0b                	jbe    8061163 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x113>
 8061158:	89 f1                	mov    %esi,%ecx
 806115a:	88 0a                	mov    %cl,(%edx)
 806115c:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 8061160:	83 01 01             	addl   $0x1,(%ecx)
 8061163:	83 e8 04             	sub    $0x4,%eax
 8061166:	39 e8                	cmp    %ebp,%eax
 8061168:	74 16                	je     8061180 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x130>
 806116a:	8b 30                	mov    (%eax),%esi
 806116c:	83 fe 09             	cmp    $0x9,%esi
 806116f:	76 d7                	jbe    8061148 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0xf8>
 8061171:	8d 56 57             	lea    0x57(%esi),%edx
 8061174:	0f be f2             	movsbl %dl,%esi
 8061177:	eb d5                	jmp    806114e <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0xfe>
 8061179:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061180:	8b 74 24 20          	mov    0x20(%esp),%esi
 8061184:	81 c4 bc 00 00 00    	add    $0xbc,%esp
 806118a:	5b                   	pop    %ebx
 806118b:	89 f0                	mov    %esi,%eax
 806118d:	5e                   	pop    %esi
 806118e:	5f                   	pop    %edi
 806118f:	5d                   	pop    %ebp
 8061190:	c3                   	ret    
 8061191:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061198:	8d 83 a8 68 fd ff    	lea    -0x29758(%ebx),%eax
 806119e:	89 04 24             	mov    %eax,(%esp)
 80611a1:	e8 da 12 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 80611a6:	e8 b5 10 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 80611ab:	89 f8                	mov    %edi,%eax
 80611ad:	29 f0                	sub    %esi,%eax
 80611af:	c1 e0 02             	shl    $0x2,%eax
 80611b2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80611b6:	8b 44 24 20          	mov    0x20(%esp),%eax
 80611ba:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 80611c1:	00 
 80611c2:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 80611c6:	8d 04 b0             	lea    (%eax,%esi,4),%eax
 80611c9:	89 fe                	mov    %edi,%esi
 80611cb:	89 04 24             	mov    %eax,(%esp)
 80611ce:	e8 6d 07 00 00       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 80611d3:	8b 4c 24 18          	mov    0x18(%esp),%ecx
 80611d7:	e9 4b ff ff ff       	jmp    8061127 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0xd7>
 80611dc:	3c 0a                	cmp    $0xa,%al
 80611de:	0f 84 af fe ff ff    	je     8061093 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh+0x43>
 80611e4:	8d 83 72 68 fd ff    	lea    -0x2978e(%ebx),%eax
 80611ea:	89 04 24             	mov    %eax,(%esp)
 80611ed:	e8 8e 12 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 80611f2:	e8 69 10 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 80611f7:	8d 83 8b 68 fd ff    	lea    -0x29775(%ebx),%eax
 80611fd:	89 04 24             	mov    %eax,(%esp)
 8061200:	e8 7b 12 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8061205:	e8 56 10 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 806120a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08061210 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_>:
 8061210:	55                   	push   %ebp
 8061211:	57                   	push   %edi
 8061212:	56                   	push   %esi
 8061213:	53                   	push   %ebx
 8061214:	83 ec 3c             	sub    $0x3c,%esp
 8061217:	8b 44 24 58          	mov    0x58(%esp),%eax
 806121b:	e8 d0 88 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8061220:	81 c3 e0 ed 04 00    	add    $0x4ede0,%ebx
 8061226:	8b 54 24 54          	mov    0x54(%esp),%edx
 806122a:	85 c0                	test   %eax,%eax
 806122c:	0f 84 05 04 00 00    	je     8061637 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x427>
 8061232:	85 d2                	test   %edx,%edx
 8061234:	0f 8e 10 04 00 00    	jle    806164a <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x43a>
 806123a:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 806123e:	31 ed                	xor    %ebp,%ebp
 8061240:	8d 7c 11 ff          	lea    -0x1(%ecx,%edx,1),%edi
 8061244:	0f b6 10             	movzbl (%eax),%edx
 8061247:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
 806124b:	84 d2                	test   %dl,%dl
 806124d:	0f 84 79 01 00 00    	je     80613cc <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x1bc>
 8061253:	8d bb c8 68 fd ff    	lea    -0x29738(%ebx),%edi
 8061259:	89 7c 24 2c          	mov    %edi,0x2c(%esp)
 806125d:	8b 7c 24 5c          	mov    0x5c(%esp),%edi
 8061261:	eb 2a                	jmp    806128d <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x7d>
 8061263:	90                   	nop
 8061264:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061268:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 806126c:	39 4c 24 1c          	cmp    %ecx,0x1c(%esp)
 8061270:	76 07                	jbe    8061279 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x69>
 8061272:	88 11                	mov    %dl,(%ecx)
 8061274:	83 44 24 50 01       	addl   $0x1,0x50(%esp)
 8061279:	83 c5 01             	add    $0x1,%ebp
 806127c:	89 c6                	mov    %eax,%esi
 806127e:	0f b6 56 01          	movzbl 0x1(%esi),%edx
 8061282:	8d 46 01             	lea    0x1(%esi),%eax
 8061285:	84 d2                	test   %dl,%dl
 8061287:	0f 84 3b 01 00 00    	je     80613c8 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x1b8>
 806128d:	80 fa 25             	cmp    $0x25,%dl
 8061290:	75 d6                	jne    8061268 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x58>
 8061292:	0f be 48 01          	movsbl 0x1(%eax),%ecx
 8061296:	8d 50 01             	lea    0x1(%eax),%edx
 8061299:	80 f9 30             	cmp    $0x30,%cl
 806129c:	74 6a                	je     8061308 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xf8>
 806129e:	80 f9 7a             	cmp    $0x7a,%cl
 80612a1:	0f 94 c1             	sete   %cl
 80612a4:	31 c0                	xor    %eax,%eax
 80612a6:	88 4c 24 10          	mov    %cl,0x10(%esp)
 80612aa:	0f b6 f1             	movzbl %cl,%esi
 80612ad:	01 d6                	add    %edx,%esi
 80612af:	84 c9                	test   %cl,%cl
 80612b1:	75 09                	jne    80612bc <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xac>
 80612b3:	80 3e 6c             	cmpb   $0x6c,(%esi)
 80612b6:	0f 84 dc 02 00 00    	je     8061598 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x388>
 80612bc:	31 d2                	xor    %edx,%edx
 80612be:	c6 44 24 28 00       	movb   $0x0,0x28(%esp)
 80612c3:	01 d6                	add    %edx,%esi
 80612c5:	0f b6 16             	movzbl (%esi),%edx
 80612c8:	80 fa 70             	cmp    $0x70,%dl
 80612cb:	88 54 24 20          	mov    %dl,0x20(%esp)
 80612cf:	0f 84 7b 01 00 00    	je     8061450 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x240>
 80612d5:	7f 71                	jg     8061348 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x138>
 80612d7:	80 fa 63             	cmp    $0x63,%dl
 80612da:	0f 84 88 02 00 00    	je     8061568 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x358>
 80612e0:	80 fa 64             	cmp    $0x64,%dl
 80612e3:	0f 84 27 02 00 00    	je     8061510 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x300>
 80612e9:	80 fa 25             	cmp    $0x25,%dl
 80612ec:	0f 84 f6 01 00 00    	je     80614e8 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x2d8>
 80612f2:	8d 83 14 69 fd ff    	lea    -0x296ec(%ebx),%eax
 80612f8:	89 04 24             	mov    %eax,(%esp)
 80612fb:	e8 80 11 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8061300:	e8 5b 0f 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 8061305:	8d 76 00             	lea    0x0(%esi),%esi
 8061308:	31 c0                	xor    %eax,%eax
 806130a:	89 44 24 10          	mov    %eax,0x10(%esp)
 806130e:	66 90                	xchg   %ax,%ax
 8061310:	8b 44 24 10          	mov    0x10(%esp),%eax
 8061314:	83 c2 01             	add    $0x1,%edx
 8061317:	8d 04 80             	lea    (%eax,%eax,4),%eax
 806131a:	8d 44 41 d0          	lea    -0x30(%ecx,%eax,2),%eax
 806131e:	0f be 0a             	movsbl (%edx),%ecx
 8061321:	89 44 24 10          	mov    %eax,0x10(%esp)
 8061325:	8d 71 d0             	lea    -0x30(%ecx),%esi
 8061328:	89 f0                	mov    %esi,%eax
 806132a:	3c 09                	cmp    $0x9,%al
 806132c:	76 e2                	jbe    8061310 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x100>
 806132e:	80 f9 7a             	cmp    $0x7a,%cl
 8061331:	8b 44 24 10          	mov    0x10(%esp),%eax
 8061335:	0f 94 c1             	sete   %cl
 8061338:	c6 44 24 10 01       	movb   $0x1,0x10(%esp)
 806133d:	e9 68 ff ff ff       	jmp    80612aa <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x9a>
 8061342:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061348:	0f b6 54 24 20       	movzbl 0x20(%esp),%edx
 806134d:	80 fa 75             	cmp    $0x75,%dl
 8061350:	0f 84 9a 00 00 00    	je     80613f0 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x1e0>
 8061356:	80 fa 78             	cmp    $0x78,%dl
 8061359:	0f 84 91 00 00 00    	je     80613f0 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x1e0>
 806135f:	80 fa 73             	cmp    $0x73,%dl
 8061362:	75 8e                	jne    80612f2 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xe2>
 8061364:	80 7c 24 10 00       	cmpb   $0x0,0x10(%esp)
 8061369:	75 87                	jne    80612f2 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xe2>
 806136b:	8d 47 04             	lea    0x4(%edi),%eax
 806136e:	8b 3f                	mov    (%edi),%edi
 8061370:	89 44 24 10          	mov    %eax,0x10(%esp)
 8061374:	85 ff                	test   %edi,%edi
 8061376:	0f 44 7c 24 2c       	cmove  0x2c(%esp),%edi
 806137b:	31 c0                	xor    %eax,%eax
 806137d:	0f b6 17             	movzbl (%edi),%edx
 8061380:	84 d2                	test   %dl,%dl
 8061382:	74 2a                	je     80613ae <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x19e>
 8061384:	89 74 24 20          	mov    %esi,0x20(%esp)
 8061388:	8b 74 24 1c          	mov    0x1c(%esp),%esi
 806138c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061390:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 8061394:	39 ce                	cmp    %ecx,%esi
 8061396:	76 07                	jbe    806139f <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x18f>
 8061398:	88 11                	mov    %dl,(%ecx)
 806139a:	83 44 24 50 01       	addl   $0x1,0x50(%esp)
 806139f:	83 c0 01             	add    $0x1,%eax
 80613a2:	0f b6 14 07          	movzbl (%edi,%eax,1),%edx
 80613a6:	84 d2                	test   %dl,%dl
 80613a8:	75 e6                	jne    8061390 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x180>
 80613aa:	8b 74 24 20          	mov    0x20(%esp),%esi
 80613ae:	0f b6 56 01          	movzbl 0x1(%esi),%edx
 80613b2:	01 c5                	add    %eax,%ebp
 80613b4:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80613b8:	8d 46 01             	lea    0x1(%esi),%eax
 80613bb:	84 d2                	test   %dl,%dl
 80613bd:	0f 85 ca fe ff ff    	jne    806128d <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x7d>
 80613c3:	90                   	nop
 80613c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80613c8:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 80613cc:	39 4c 24 1c          	cmp    %ecx,0x1c(%esp)
 80613d0:	0f 82 4e 02 00 00    	jb     8061624 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x414>
 80613d6:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 80613da:	83 c0 01             	add    $0x1,%eax
 80613dd:	39 c1                	cmp    %eax,%ecx
 80613df:	73 03                	jae    80613e4 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x1d4>
 80613e1:	c6 01 00             	movb   $0x0,(%ecx)
 80613e4:	83 c4 3c             	add    $0x3c,%esp
 80613e7:	89 e8                	mov    %ebp,%eax
 80613e9:	5b                   	pop    %ebx
 80613ea:	5e                   	pop    %esi
 80613eb:	5f                   	pop    %edi
 80613ec:	5d                   	pop    %ebp
 80613ed:	c3                   	ret    
 80613ee:	66 90                	xchg   %ax,%ax
 80613f0:	80 7c 24 28 00       	cmpb   $0x0,0x28(%esp)
 80613f5:	8b 17                	mov    (%edi),%edx
 80613f7:	0f 85 cb 01 00 00    	jne    80615c8 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x3b8>
 80613fd:	31 c9                	xor    %ecx,%ecx
 80613ff:	83 c7 04             	add    $0x4,%edi
 8061402:	89 54 24 10          	mov    %edx,0x10(%esp)
 8061406:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 806140a:	80 7c 24 20 75       	cmpb   $0x75,0x20(%esp)
 806140f:	ba 10 00 00 00       	mov    $0x10,%edx
 8061414:	b9 0a 00 00 00       	mov    $0xa,%ecx
 8061419:	0f b6 c0             	movzbl %al,%eax
 806141c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8061420:	8b 44 24 10          	mov    0x10(%esp),%eax
 8061424:	0f 45 ca             	cmovne %edx,%ecx
 8061427:	8b 54 24 14          	mov    0x14(%esp),%edx
 806142b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 806142f:	89 04 24             	mov    %eax,(%esp)
 8061432:	8d 44 24 50          	lea    0x50(%esp),%eax
 8061436:	89 54 24 04          	mov    %edx,0x4(%esp)
 806143a:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 806143e:	e8 0d fc ff ff       	call   8061050 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh>
 8061443:	01 c5                	add    %eax,%ebp
 8061445:	e9 34 fe ff ff       	jmp    806127e <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x6e>
 806144a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061450:	80 7c 24 10 00       	cmpb   $0x0,0x10(%esp)
 8061455:	0f 85 97 fe ff ff    	jne    80612f2 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xe2>
 806145b:	8d 47 04             	lea    0x4(%edi),%eax
 806145e:	31 d2                	xor    %edx,%edx
 8061460:	89 44 24 10          	mov    %eax,0x10(%esp)
 8061464:	8b 07                	mov    (%edi),%eax
 8061466:	31 ff                	xor    %edi,%edi
 8061468:	89 74 24 28          	mov    %esi,0x28(%esp)
 806146c:	8b 74 24 1c          	mov    0x1c(%esp),%esi
 8061470:	89 54 24 24          	mov    %edx,0x24(%esp)
 8061474:	ba 30 00 00 00       	mov    $0x30,%edx
 8061479:	89 44 24 20          	mov    %eax,0x20(%esp)
 806147d:	8d 83 c5 68 fd ff    	lea    -0x2973b(%ebx),%eax
 8061483:	90                   	nop
 8061484:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061488:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 806148c:	39 ce                	cmp    %ecx,%esi
 806148e:	76 07                	jbe    8061497 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x287>
 8061490:	88 11                	mov    %dl,(%ecx)
 8061492:	83 44 24 50 01       	addl   $0x1,0x50(%esp)
 8061497:	83 c0 01             	add    $0x1,%eax
 806149a:	0f b6 10             	movzbl (%eax),%edx
 806149d:	83 c7 01             	add    $0x1,%edi
 80614a0:	84 d2                	test   %dl,%dl
 80614a2:	75 e4                	jne    8061488 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x278>
 80614a4:	8b 54 24 24          	mov    0x24(%esp),%edx
 80614a8:	8b 44 24 20          	mov    0x20(%esp),%eax
 80614ac:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)
 80614b3:	00 
 80614b4:	8b 74 24 28          	mov    0x28(%esp),%esi
 80614b8:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 80614bf:	00 
 80614c0:	89 54 24 04          	mov    %edx,0x4(%esp)
 80614c4:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80614c8:	89 04 24             	mov    %eax,(%esp)
 80614cb:	8d 44 24 50          	lea    0x50(%esp),%eax
 80614cf:	e8 7c fb ff ff       	call   8061050 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh>
 80614d4:	01 c7                	add    %eax,%edi
 80614d6:	01 fd                	add    %edi,%ebp
 80614d8:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80614dc:	e9 9d fd ff ff       	jmp    806127e <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x6e>
 80614e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80614e8:	80 7c 24 10 00       	cmpb   $0x0,0x10(%esp)
 80614ed:	0f 85 ff fd ff ff    	jne    80612f2 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xe2>
 80614f3:	8b 44 24 50          	mov    0x50(%esp),%eax
 80614f7:	39 44 24 1c          	cmp    %eax,0x1c(%esp)
 80614fb:	76 08                	jbe    8061505 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x2f5>
 80614fd:	c6 00 25             	movb   $0x25,(%eax)
 8061500:	83 44 24 50 01       	addl   $0x1,0x50(%esp)
 8061505:	83 c5 01             	add    $0x1,%ebp
 8061508:	e9 71 fd ff ff       	jmp    806127e <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x6e>
 806150d:	8d 76 00             	lea    0x0(%esi),%esi
 8061510:	80 7c 24 28 00       	cmpb   $0x0,0x28(%esp)
 8061515:	8b 17                	mov    (%edi),%edx
 8061517:	0f 85 9b 00 00 00    	jne    80615b8 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x3a8>
 806151d:	89 d1                	mov    %edx,%ecx
 806151f:	83 c7 04             	add    $0x4,%edi
 8061522:	c1 f9 1f             	sar    $0x1f,%ecx
 8061525:	0f b6 c0             	movzbl %al,%eax
 8061528:	85 c9                	test   %ecx,%ecx
 806152a:	88 44 24 20          	mov    %al,0x20(%esp)
 806152e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8061535:	00 
 8061536:	0f 88 a4 00 00 00    	js     80615e0 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x3d0>
 806153c:	89 14 24             	mov    %edx,(%esp)
 806153f:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8061543:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8061547:	8d 44 24 50          	lea    0x50(%esp),%eax
 806154b:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 8061552:	00 
 8061553:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8061557:	e8 f4 fa ff ff       	call   8061050 <_ZN11__sanitizerL14AppendUnsignedEPPcPKcyhh>
 806155c:	03 44 24 10          	add    0x10(%esp),%eax
 8061560:	01 c5                	add    %eax,%ebp
 8061562:	e9 17 fd ff ff       	jmp    806127e <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x6e>
 8061567:	90                   	nop
 8061568:	80 7c 24 10 00       	cmpb   $0x0,0x10(%esp)
 806156d:	0f 85 7f fd ff ff    	jne    80612f2 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xe2>
 8061573:	8b 44 24 50          	mov    0x50(%esp),%eax
 8061577:	8d 57 04             	lea    0x4(%edi),%edx
 806157a:	39 44 24 1c          	cmp    %eax,0x1c(%esp)
 806157e:	8b 0f                	mov    (%edi),%ecx
 8061580:	76 07                	jbe    8061589 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x379>
 8061582:	88 08                	mov    %cl,(%eax)
 8061584:	83 44 24 50 01       	addl   $0x1,0x50(%esp)
 8061589:	83 c5 01             	add    $0x1,%ebp
 806158c:	89 d7                	mov    %edx,%edi
 806158e:	e9 eb fc ff ff       	jmp    806127e <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x6e>
 8061593:	90                   	nop
 8061594:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061598:	80 7e 01 6c          	cmpb   $0x6c,0x1(%esi)
 806159c:	0f 85 1a fd ff ff    	jne    80612bc <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xac>
 80615a2:	ba 02 00 00 00       	mov    $0x2,%edx
 80615a7:	c6 44 24 10 01       	movb   $0x1,0x10(%esp)
 80615ac:	c6 44 24 28 01       	movb   $0x1,0x28(%esp)
 80615b1:	e9 0d fd ff ff       	jmp    80612c3 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0xb3>
 80615b6:	66 90                	xchg   %ax,%ax
 80615b8:	8b 4f 04             	mov    0x4(%edi),%ecx
 80615bb:	83 c7 08             	add    $0x8,%edi
 80615be:	e9 62 ff ff ff       	jmp    8061525 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x315>
 80615c3:	90                   	nop
 80615c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80615c8:	8b 4f 04             	mov    0x4(%edi),%ecx
 80615cb:	83 c7 08             	add    $0x8,%edi
 80615ce:	89 54 24 10          	mov    %edx,0x10(%esp)
 80615d2:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 80615d6:	e9 2f fe ff ff       	jmp    806140a <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x1fa>
 80615db:	90                   	nop
 80615dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80615e0:	8b 44 24 50          	mov    0x50(%esp),%eax
 80615e4:	39 44 24 1c          	cmp    %eax,0x1c(%esp)
 80615e8:	76 08                	jbe    80615f2 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x3e2>
 80615ea:	c6 00 2d             	movb   $0x2d,(%eax)
 80615ed:	83 44 24 50 01       	addl   $0x1,0x50(%esp)
 80615f2:	0f b6 44 24 20       	movzbl 0x20(%esp),%eax
 80615f7:	f7 da                	neg    %edx
 80615f9:	83 d1 00             	adc    $0x0,%ecx
 80615fc:	f7 d9                	neg    %ecx
 80615fe:	84 c0                	test   %al,%al
 8061600:	74 13                	je     8061615 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x405>
 8061602:	83 e8 01             	sub    $0x1,%eax
 8061605:	0f b6 c0             	movzbl %al,%eax
 8061608:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 806160f:	00 
 8061610:	e9 27 ff ff ff       	jmp    806153c <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x32c>
 8061615:	31 c0                	xor    %eax,%eax
 8061617:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 806161e:	00 
 806161f:	e9 18 ff ff ff       	jmp    806153c <_ZN11__sanitizer9VSNPrintfEPciPKcS0_+0x32c>
 8061624:	8d 83 e6 68 fd ff    	lea    -0x2971a(%ebx),%eax
 806162a:	89 04 24             	mov    %eax,(%esp)
 806162d:	e8 4e 0e 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8061632:	e8 29 0c 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 8061637:	8d 83 cf 68 fd ff    	lea    -0x29731(%ebx),%eax
 806163d:	89 04 24             	mov    %eax,(%esp)
 8061640:	e8 3b 0e 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8061645:	e8 16 0c 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 806164a:	8d 83 d6 68 fd ff    	lea    -0x2972a(%ebx),%eax
 8061650:	89 04 24             	mov    %eax,(%esp)
 8061653:	e8 28 0e 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8061658:	e8 03 0c 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 806165d:	8d 76 00             	lea    0x0(%esi),%esi

08061660 <_ZN11__sanitizer26SetPrintfAndReportCallbackEPFvPKcE>:
 8061660:	e8 30 e9 fe ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8061665:	81 c1 9b e9 04 00    	add    $0x4e99b,%ecx
 806166b:	8b 44 24 04          	mov    0x4(%esp),%eax
 806166f:	89 81 4c 13 5b 01    	mov    %eax,0x15b134c(%ecx)
 8061675:	c3                   	ret    
 8061676:	8d 76 00             	lea    0x0(%esi),%esi
 8061679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061680 <_ZN11__sanitizer6PrintfEPKcz>:
 8061680:	56                   	push   %esi
 8061681:	53                   	push   %ebx
 8061682:	e8 69 84 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8061687:	81 c3 79 e9 04 00    	add    $0x4e979,%ebx
 806168d:	83 ec 14             	sub    $0x14,%esp
 8061690:	c7 04 24 00 40 00 00 	movl   $0x4000,(%esp)
 8061697:	8d 83 f7 68 fd ff    	lea    -0x29709(%ebx),%eax
 806169d:	89 44 24 04          	mov    %eax,0x4(%esp)
 80616a1:	e8 3a 1b 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 80616a6:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 80616ad:	00 
 80616ae:	89 c6                	mov    %eax,%esi
 80616b0:	8d 44 24 24          	lea    0x24(%esp),%eax
 80616b4:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80616b8:	8b 44 24 20          	mov    0x20(%esp),%eax
 80616bc:	89 34 24             	mov    %esi,(%esp)
 80616bf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80616c3:	e8 48 fb ff ff       	call   8061210 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_>
 80616c8:	3d ff 3f 00 00       	cmp    $0x3fff,%eax
 80616cd:	7f 2d                	jg     80616fc <_ZN11__sanitizer6PrintfEPKcz+0x7c>
 80616cf:	89 34 24             	mov    %esi,(%esp)
 80616d2:	e8 a9 0d 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 80616d7:	8b 83 4c 13 5b 01    	mov    0x15b134c(%ebx),%eax
 80616dd:	85 c0                	test   %eax,%eax
 80616df:	74 05                	je     80616e6 <_ZN11__sanitizer6PrintfEPKcz+0x66>
 80616e1:	89 34 24             	mov    %esi,(%esp)
 80616e4:	ff d0                	call   *%eax
 80616e6:	89 34 24             	mov    %esi,(%esp)
 80616e9:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 80616f0:	00 
 80616f1:	e8 ba 13 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 80616f6:	83 c4 14             	add    $0x14,%esp
 80616f9:	5b                   	pop    %ebx
 80616fa:	5e                   	pop    %esi
 80616fb:	c3                   	ret    
 80616fc:	8d 83 58 69 fd ff    	lea    -0x296a8(%ebx),%eax
 8061702:	89 04 24             	mov    %eax,(%esp)
 8061705:	e8 76 0d 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 806170a:	e8 51 0b 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 806170f:	90                   	nop

08061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>:
 8061710:	83 ec 1c             	sub    $0x1c,%esp
 8061713:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 8061717:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806171b:	8b 44 24 28          	mov    0x28(%esp),%eax
 806171f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8061723:	8b 44 24 24          	mov    0x24(%esp),%eax
 8061727:	89 44 24 04          	mov    %eax,0x4(%esp)
 806172b:	8b 44 24 20          	mov    0x20(%esp),%eax
 806172f:	89 04 24             	mov    %eax,(%esp)
 8061732:	e8 d9 fa ff ff       	call   8061210 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_>
 8061737:	83 c4 1c             	add    $0x1c,%esp
 806173a:	c3                   	ret    
 806173b:	90                   	nop
 806173c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08061740 <_ZN11__sanitizer6ReportEPKcz>:
 8061740:	57                   	push   %edi
 8061741:	56                   	push   %esi
 8061742:	53                   	push   %ebx
 8061743:	e8 a8 83 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8061748:	81 c3 b8 e8 04 00    	add    $0x4e8b8,%ebx
 806174e:	83 ec 10             	sub    $0x10,%esp
 8061751:	c7 04 24 00 40 00 00 	movl   $0x4000,(%esp)
 8061758:	8d 83 f7 68 fd ff    	lea    -0x29709(%ebx),%eax
 806175e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8061762:	e8 79 1a 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8061767:	89 c6                	mov    %eax,%esi
 8061769:	e8 e2 12 00 00       	call   8062a50 <_ZN11__sanitizer6GetPidEv>
 806176e:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8061775:	00 
 8061776:	89 34 24             	mov    %esi,(%esp)
 8061779:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806177d:	8d 83 0c 69 fd ff    	lea    -0x296f4(%ebx),%eax
 8061783:	89 44 24 08          	mov    %eax,0x8(%esp)
 8061787:	e8 84 ff ff ff       	call   8061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 806178c:	3d ff 3f 00 00       	cmp    $0x3fff,%eax
 8061791:	89 c7                	mov    %eax,%edi
 8061793:	7f 5e                	jg     80617f3 <_ZN11__sanitizer6ReportEPKcz+0xb3>
 8061795:	8d 44 24 24          	lea    0x24(%esp),%eax
 8061799:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806179d:	8b 44 24 20          	mov    0x20(%esp),%eax
 80617a1:	89 44 24 08          	mov    %eax,0x8(%esp)
 80617a5:	b8 00 40 00 00       	mov    $0x4000,%eax
 80617aa:	29 f8                	sub    %edi,%eax
 80617ac:	89 44 24 04          	mov    %eax,0x4(%esp)
 80617b0:	8d 04 3e             	lea    (%esi,%edi,1),%eax
 80617b3:	89 04 24             	mov    %eax,(%esp)
 80617b6:	e8 55 fa ff ff       	call   8061210 <_ZN11__sanitizer9VSNPrintfEPciPKcS0_>
 80617bb:	01 c7                	add    %eax,%edi
 80617bd:	81 ff ff 3f 00 00    	cmp    $0x3fff,%edi
 80617c3:	7f 2e                	jg     80617f3 <_ZN11__sanitizer6ReportEPKcz+0xb3>
 80617c5:	89 34 24             	mov    %esi,(%esp)
 80617c8:	e8 b3 0c 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 80617cd:	8b 83 4c 13 5b 01    	mov    0x15b134c(%ebx),%eax
 80617d3:	85 c0                	test   %eax,%eax
 80617d5:	74 05                	je     80617dc <_ZN11__sanitizer6ReportEPKcz+0x9c>
 80617d7:	89 34 24             	mov    %esi,(%esp)
 80617da:	ff d0                	call   *%eax
 80617dc:	89 34 24             	mov    %esi,(%esp)
 80617df:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 80617e6:	00 
 80617e7:	e8 c4 12 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 80617ec:	83 c4 10             	add    $0x10,%esp
 80617ef:	5b                   	pop    %ebx
 80617f0:	5e                   	pop    %esi
 80617f1:	5f                   	pop    %edi
 80617f2:	c3                   	ret    
 80617f3:	8d 83 78 69 fd ff    	lea    -0x29688(%ebx),%eax
 80617f9:	89 04 24             	mov    %eax,(%esp)
 80617fc:	e8 7f 0c 00 00       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8061801:	e8 5a 0a 00 00       	call   8062260 <_ZN11__sanitizer3DieEv>
 8061806:	66 90                	xchg   %ax,%ax
 8061808:	66 90                	xchg   %ax,%ax
 806180a:	66 90                	xchg   %ax,%ax
 806180c:	66 90                	xchg   %ax,%ax
 806180e:	66 90                	xchg   %ax,%ax

08061810 <_ZN11__sanitizer15internal_memchrEPKvim>:
 8061810:	56                   	push   %esi
 8061811:	8b 74 24 10          	mov    0x10(%esp),%esi
 8061815:	8b 44 24 08          	mov    0x8(%esp),%eax
 8061819:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 806181d:	85 f6                	test   %esi,%esi
 806181f:	74 1d                	je     806183e <_ZN11__sanitizer15internal_memchrEPKvim+0x2e>
 8061821:	0f be 10             	movsbl (%eax),%edx
 8061824:	39 ca                	cmp    %ecx,%edx
 8061826:	74 18                	je     8061840 <_ZN11__sanitizer15internal_memchrEPKvim+0x30>
 8061828:	01 c6                	add    %eax,%esi
 806182a:	eb 0b                	jmp    8061837 <_ZN11__sanitizer15internal_memchrEPKvim+0x27>
 806182c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061830:	0f be 10             	movsbl (%eax),%edx
 8061833:	39 ca                	cmp    %ecx,%edx
 8061835:	74 09                	je     8061840 <_ZN11__sanitizer15internal_memchrEPKvim+0x30>
 8061837:	83 c0 01             	add    $0x1,%eax
 806183a:	39 f0                	cmp    %esi,%eax
 806183c:	75 f2                	jne    8061830 <_ZN11__sanitizer15internal_memchrEPKvim+0x20>
 806183e:	31 c0                	xor    %eax,%eax
 8061840:	5e                   	pop    %esi
 8061841:	c3                   	ret    
 8061842:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061849:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061850 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>:
 8061850:	55                   	push   %ebp
 8061851:	57                   	push   %edi
 8061852:	56                   	push   %esi
 8061853:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8061857:	8b 44 24 10          	mov    0x10(%esp),%eax
 806185b:	8b 6c 24 14          	mov    0x14(%esp),%ebp
 806185f:	85 ff                	test   %edi,%edi
 8061861:	74 2c                	je     806188f <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x3f>
 8061863:	0f b6 30             	movzbl (%eax),%esi
 8061866:	01 c7                	add    %eax,%edi
 8061868:	0f b6 4d 00          	movzbl 0x0(%ebp),%ecx
 806186c:	89 f2                	mov    %esi,%edx
 806186e:	38 ca                	cmp    %cl,%dl
 8061870:	74 13                	je     8061885 <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x35>
 8061872:	eb 24                	jmp    8061898 <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x48>
 8061874:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061878:	0f b6 30             	movzbl (%eax),%esi
 806187b:	0f b6 4d 00          	movzbl 0x0(%ebp),%ecx
 806187f:	89 f2                	mov    %esi,%edx
 8061881:	38 ca                	cmp    %cl,%dl
 8061883:	75 13                	jne    8061898 <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x48>
 8061885:	83 c0 01             	add    $0x1,%eax
 8061888:	83 c5 01             	add    $0x1,%ebp
 806188b:	39 f8                	cmp    %edi,%eax
 806188d:	75 e9                	jne    8061878 <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x28>
 806188f:	5e                   	pop    %esi
 8061890:	31 c0                	xor    %eax,%eax
 8061892:	5f                   	pop    %edi
 8061893:	5d                   	pop    %ebp
 8061894:	c3                   	ret    
 8061895:	8d 76 00             	lea    0x0(%esi),%esi
 8061898:	89 f0                	mov    %esi,%eax
 806189a:	38 c8                	cmp    %cl,%al
 806189c:	0f 9d c0             	setge  %al
 806189f:	0f b6 c0             	movzbl %al,%eax
 80618a2:	5e                   	pop    %esi
 80618a3:	8d 44 00 ff          	lea    -0x1(%eax,%eax,1),%eax
 80618a7:	5f                   	pop    %edi
 80618a8:	5d                   	pop    %ebp
 80618a9:	c3                   	ret    
 80618aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>:
 80618b0:	57                   	push   %edi
 80618b1:	31 d2                	xor    %edx,%edx
 80618b3:	56                   	push   %esi
 80618b4:	8b 74 24 14          	mov    0x14(%esp),%esi
 80618b8:	8b 44 24 0c          	mov    0xc(%esp),%eax
 80618bc:	8b 7c 24 10          	mov    0x10(%esp),%edi
 80618c0:	85 f6                	test   %esi,%esi
 80618c2:	74 12                	je     80618d6 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x26>
 80618c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80618c8:	0f b6 0c 17          	movzbl (%edi,%edx,1),%ecx
 80618cc:	88 0c 10             	mov    %cl,(%eax,%edx,1)
 80618cf:	83 c2 01             	add    $0x1,%edx
 80618d2:	39 f2                	cmp    %esi,%edx
 80618d4:	75 f2                	jne    80618c8 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x18>
 80618d6:	5e                   	pop    %esi
 80618d7:	5f                   	pop    %edi
 80618d8:	c3                   	ret    
 80618d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080618e0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>:
 80618e0:	57                   	push   %edi
 80618e1:	56                   	push   %esi
 80618e2:	8b 44 24 0c          	mov    0xc(%esp),%eax
 80618e6:	8b 74 24 10          	mov    0x10(%esp),%esi
 80618ea:	8b 7c 24 14          	mov    0x14(%esp),%edi
 80618ee:	39 f0                	cmp    %esi,%eax
 80618f0:	73 1e                	jae    8061910 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x30>
 80618f2:	31 d2                	xor    %edx,%edx
 80618f4:	85 ff                	test   %edi,%edi
 80618f6:	7e 0e                	jle    8061906 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x26>
 80618f8:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
 80618fc:	88 0c 10             	mov    %cl,(%eax,%edx,1)
 80618ff:	83 c2 01             	add    $0x1,%edx
 8061902:	39 d7                	cmp    %edx,%edi
 8061904:	75 f2                	jne    80618f8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x18>
 8061906:	5e                   	pop    %esi
 8061907:	5f                   	pop    %edi
 8061908:	c3                   	ret    
 8061909:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061910:	76 f4                	jbe    8061906 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x26>
 8061912:	85 ff                	test   %edi,%edi
 8061914:	7e f0                	jle    8061906 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x26>
 8061916:	8d 57 ff             	lea    -0x1(%edi),%edx
 8061919:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061920:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
 8061924:	88 0c 10             	mov    %cl,(%eax,%edx,1)
 8061927:	83 ea 01             	sub    $0x1,%edx
 806192a:	83 fa ff             	cmp    $0xffffffff,%edx
 806192d:	75 f1                	jne    8061920 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x40>
 806192f:	5e                   	pop    %esi
 8061930:	5f                   	pop    %edi
 8061931:	c3                   	ret    
 8061932:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061939:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061940 <_ZN11__sanitizer15internal_memsetEPvim>:
 8061940:	57                   	push   %edi
 8061941:	56                   	push   %esi
 8061942:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8061946:	8b 74 24 0c          	mov    0xc(%esp),%esi
 806194a:	0f b6 44 24 10       	movzbl 0x10(%esp),%eax
 806194f:	85 ff                	test   %edi,%edi
 8061951:	8d 0c 3e             	lea    (%esi,%edi,1),%ecx
 8061954:	89 f2                	mov    %esi,%edx
 8061956:	74 09                	je     8061961 <_ZN11__sanitizer15internal_memsetEPvim+0x21>
 8061958:	88 02                	mov    %al,(%edx)
 806195a:	83 c2 01             	add    $0x1,%edx
 806195d:	39 ca                	cmp    %ecx,%edx
 806195f:	75 f7                	jne    8061958 <_ZN11__sanitizer15internal_memsetEPvim+0x18>
 8061961:	89 f0                	mov    %esi,%eax
 8061963:	5e                   	pop    %esi
 8061964:	5f                   	pop    %edi
 8061965:	c3                   	ret    
 8061966:	8d 76 00             	lea    0x0(%esi),%esi
 8061969:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061970 <_ZN11__sanitizer16internal_strcspnEPKcS1_>:
 8061970:	55                   	push   %ebp
 8061971:	57                   	push   %edi
 8061972:	31 ff                	xor    %edi,%edi
 8061974:	56                   	push   %esi
 8061975:	8b 44 24 10          	mov    0x10(%esp),%eax
 8061979:	8b 6c 24 14          	mov    0x14(%esp),%ebp
 806197d:	0f b6 00             	movzbl (%eax),%eax
 8061980:	84 c0                	test   %al,%al
 8061982:	74 2a                	je     80619ae <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x3e>
 8061984:	0f b6 75 00          	movzbl 0x0(%ebp),%esi
 8061988:	31 ff                	xor    %edi,%edi
 806198a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061990:	89 f2                	mov    %esi,%edx
 8061992:	38 c2                	cmp    %al,%dl
 8061994:	74 18                	je     80619ae <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x3e>
 8061996:	89 f2                	mov    %esi,%edx
 8061998:	84 d2                	test   %dl,%dl
 806199a:	74 1c                	je     80619b8 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x48>
 806199c:	89 ea                	mov    %ebp,%edx
 806199e:	eb 04                	jmp    80619a4 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x34>
 80619a0:	84 c9                	test   %cl,%cl
 80619a2:	74 14                	je     80619b8 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x48>
 80619a4:	83 c2 01             	add    $0x1,%edx
 80619a7:	0f b6 0a             	movzbl (%edx),%ecx
 80619aa:	38 c8                	cmp    %cl,%al
 80619ac:	75 f2                	jne    80619a0 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x30>
 80619ae:	89 f8                	mov    %edi,%eax
 80619b0:	5e                   	pop    %esi
 80619b1:	5f                   	pop    %edi
 80619b2:	5d                   	pop    %ebp
 80619b3:	c3                   	ret    
 80619b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80619b8:	8b 44 24 10          	mov    0x10(%esp),%eax
 80619bc:	83 c7 01             	add    $0x1,%edi
 80619bf:	0f b6 04 38          	movzbl (%eax,%edi,1),%eax
 80619c3:	84 c0                	test   %al,%al
 80619c5:	75 c9                	jne    8061990 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x20>
 80619c7:	89 f8                	mov    %edi,%eax
 80619c9:	5e                   	pop    %esi
 80619ca:	5f                   	pop    %edi
 80619cb:	5d                   	pop    %ebp
 80619cc:	c3                   	ret    
 80619cd:	8d 76 00             	lea    0x0(%esi),%esi

080619d0 <_ZN11__sanitizer15internal_strdupEPKc>:
 80619d0:	57                   	push   %edi
 80619d1:	56                   	push   %esi
 80619d2:	53                   	push   %ebx
 80619d3:	83 ec 10             	sub    $0x10,%esp
 80619d6:	8b 7c 24 20          	mov    0x20(%esp),%edi
 80619da:	e8 11 81 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80619df:	81 c3 21 e6 04 00    	add    $0x4e621,%ebx
 80619e5:	80 3f 00             	cmpb   $0x0,(%edi)
 80619e8:	74 3f                	je     8061a29 <_ZN11__sanitizer15internal_strdupEPKc+0x59>
 80619ea:	31 c0                	xor    %eax,%eax
 80619ec:	eb 04                	jmp    80619f2 <_ZN11__sanitizer15internal_strdupEPKc+0x22>
 80619ee:	66 90                	xchg   %ax,%ax
 80619f0:	89 f0                	mov    %esi,%eax
 80619f2:	80 7c 07 01 00       	cmpb   $0x0,0x1(%edi,%eax,1)
 80619f7:	8d 70 01             	lea    0x1(%eax),%esi
 80619fa:	75 f4                	jne    80619f0 <_ZN11__sanitizer15internal_strdupEPKc+0x20>
 80619fc:	83 c0 02             	add    $0x2,%eax
 80619ff:	89 04 24             	mov    %eax,(%esp)
 8061a02:	e8 29 06 00 00       	call   8062030 <_ZN11__sanitizer13InternalAllocEm>
 8061a07:	31 d2                	xor    %edx,%edx
 8061a09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061a10:	0f b6 0c 17          	movzbl (%edi,%edx,1),%ecx
 8061a14:	88 0c 10             	mov    %cl,(%eax,%edx,1)
 8061a17:	83 c2 01             	add    $0x1,%edx
 8061a1a:	39 f2                	cmp    %esi,%edx
 8061a1c:	75 f2                	jne    8061a10 <_ZN11__sanitizer15internal_strdupEPKc+0x40>
 8061a1e:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)
 8061a22:	83 c4 10             	add    $0x10,%esp
 8061a25:	5b                   	pop    %ebx
 8061a26:	5e                   	pop    %esi
 8061a27:	5f                   	pop    %edi
 8061a28:	c3                   	ret    
 8061a29:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8061a30:	31 f6                	xor    %esi,%esi
 8061a32:	e8 f9 05 00 00       	call   8062030 <_ZN11__sanitizer13InternalAllocEm>
 8061a37:	eb e5                	jmp    8061a1e <_ZN11__sanitizer15internal_strdupEPKc+0x4e>
 8061a39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08061a40 <_ZN11__sanitizer15internal_strcmpEPKcS1_>:
 8061a40:	56                   	push   %esi
 8061a41:	8b 54 24 08          	mov    0x8(%esp),%edx
 8061a45:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 8061a49:	0f be 02             	movsbl (%edx),%eax
 8061a4c:	0f be 31             	movsbl (%ecx),%esi
 8061a4f:	39 f0                	cmp    %esi,%eax
 8061a51:	74 15                	je     8061a68 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x28>
 8061a53:	eb 1b                	jmp    8061a70 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x30>
 8061a55:	8d 76 00             	lea    0x0(%esi),%esi
 8061a58:	83 c2 01             	add    $0x1,%edx
 8061a5b:	83 c1 01             	add    $0x1,%ecx
 8061a5e:	0f be 02             	movsbl (%edx),%eax
 8061a61:	0f be 31             	movsbl (%ecx),%esi
 8061a64:	39 f0                	cmp    %esi,%eax
 8061a66:	75 08                	jne    8061a70 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x30>
 8061a68:	85 c0                	test   %eax,%eax
 8061a6a:	75 ec                	jne    8061a58 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x18>
 8061a6c:	31 c0                	xor    %eax,%eax
 8061a6e:	5e                   	pop    %esi
 8061a6f:	c3                   	ret    
 8061a70:	39 f0                	cmp    %esi,%eax
 8061a72:	19 c0                	sbb    %eax,%eax
 8061a74:	83 c8 01             	or     $0x1,%eax
 8061a77:	5e                   	pop    %esi
 8061a78:	c3                   	ret    
 8061a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08061a80 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>:
 8061a80:	57                   	push   %edi
 8061a81:	56                   	push   %esi
 8061a82:	8b 7c 24 14          	mov    0x14(%esp),%edi
 8061a86:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8061a8a:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 8061a8e:	85 ff                	test   %edi,%edi
 8061a90:	74 2e                	je     8061ac0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x40>
 8061a92:	0f be 10             	movsbl (%eax),%edx
 8061a95:	0f be 31             	movsbl (%ecx),%esi
 8061a98:	39 f2                	cmp    %esi,%edx
 8061a9a:	75 2c                	jne    8061ac8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x48>
 8061a9c:	85 d2                	test   %edx,%edx
 8061a9e:	74 20                	je     8061ac0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x40>
 8061aa0:	01 c7                	add    %eax,%edi
 8061aa2:	eb 12                	jmp    8061ab6 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x36>
 8061aa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061aa8:	0f be 10             	movsbl (%eax),%edx
 8061aab:	0f be 31             	movsbl (%ecx),%esi
 8061aae:	39 f2                	cmp    %esi,%edx
 8061ab0:	75 16                	jne    8061ac8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x48>
 8061ab2:	85 d2                	test   %edx,%edx
 8061ab4:	74 0a                	je     8061ac0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x40>
 8061ab6:	83 c0 01             	add    $0x1,%eax
 8061ab9:	83 c1 01             	add    $0x1,%ecx
 8061abc:	39 f8                	cmp    %edi,%eax
 8061abe:	75 e8                	jne    8061aa8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x28>
 8061ac0:	31 c0                	xor    %eax,%eax
 8061ac2:	5e                   	pop    %esi
 8061ac3:	5f                   	pop    %edi
 8061ac4:	c3                   	ret    
 8061ac5:	8d 76 00             	lea    0x0(%esi),%esi
 8061ac8:	39 f2                	cmp    %esi,%edx
 8061aca:	19 c0                	sbb    %eax,%eax
 8061acc:	83 c8 01             	or     $0x1,%eax
 8061acf:	5e                   	pop    %esi
 8061ad0:	5f                   	pop    %edi
 8061ad1:	c3                   	ret    
 8061ad2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061ad9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061ae0 <_ZN11__sanitizer15internal_strchrEPKci>:
 8061ae0:	57                   	push   %edi
 8061ae1:	56                   	push   %esi
 8061ae2:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8061ae6:	8b 74 24 10          	mov    0x10(%esp),%esi
 8061aea:	0f b6 10             	movzbl (%eax),%edx
 8061aed:	89 f1                	mov    %esi,%ecx
 8061aef:	38 ca                	cmp    %cl,%dl
 8061af1:	74 1d                	je     8061b10 <_ZN11__sanitizer15internal_strchrEPKci+0x30>
 8061af3:	84 d2                	test   %dl,%dl
 8061af5:	89 f7                	mov    %esi,%edi
 8061af7:	75 0b                	jne    8061b04 <_ZN11__sanitizer15internal_strchrEPKci+0x24>
 8061af9:	eb 1d                	jmp    8061b18 <_ZN11__sanitizer15internal_strchrEPKci+0x38>
 8061afb:	90                   	nop
 8061afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061b00:	84 d2                	test   %dl,%dl
 8061b02:	74 14                	je     8061b18 <_ZN11__sanitizer15internal_strchrEPKci+0x38>
 8061b04:	83 c0 01             	add    $0x1,%eax
 8061b07:	0f b6 10             	movzbl (%eax),%edx
 8061b0a:	89 f9                	mov    %edi,%ecx
 8061b0c:	38 ca                	cmp    %cl,%dl
 8061b0e:	75 f0                	jne    8061b00 <_ZN11__sanitizer15internal_strchrEPKci+0x20>
 8061b10:	5e                   	pop    %esi
 8061b11:	5f                   	pop    %edi
 8061b12:	c3                   	ret    
 8061b13:	90                   	nop
 8061b14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061b18:	31 c0                	xor    %eax,%eax
 8061b1a:	5e                   	pop    %esi
 8061b1b:	5f                   	pop    %edi
 8061b1c:	c3                   	ret    
 8061b1d:	8d 76 00             	lea    0x0(%esi),%esi

08061b20 <_ZN11__sanitizer16internal_strrchrEPKci>:
 8061b20:	57                   	push   %edi
 8061b21:	56                   	push   %esi
 8061b22:	8b 74 24 0c          	mov    0xc(%esp),%esi
 8061b26:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8061b2a:	0f be 0e             	movsbl (%esi),%ecx
 8061b2d:	84 c9                	test   %cl,%cl
 8061b2f:	74 1b                	je     8061b4c <_ZN11__sanitizer16internal_strrchrEPKci+0x2c>
 8061b31:	8d 56 01             	lea    0x1(%esi),%edx
 8061b34:	31 c0                	xor    %eax,%eax
 8061b36:	66 90                	xchg   %ax,%ax
 8061b38:	39 f9                	cmp    %edi,%ecx
 8061b3a:	0f 44 c6             	cmove  %esi,%eax
 8061b3d:	89 d6                	mov    %edx,%esi
 8061b3f:	0f be 0a             	movsbl (%edx),%ecx
 8061b42:	83 c2 01             	add    $0x1,%edx
 8061b45:	84 c9                	test   %cl,%cl
 8061b47:	75 ef                	jne    8061b38 <_ZN11__sanitizer16internal_strrchrEPKci+0x18>
 8061b49:	5e                   	pop    %esi
 8061b4a:	5f                   	pop    %edi
 8061b4b:	c3                   	ret    
 8061b4c:	31 c0                	xor    %eax,%eax
 8061b4e:	eb f9                	jmp    8061b49 <_ZN11__sanitizer16internal_strrchrEPKci+0x29>

08061b50 <_ZN11__sanitizer15internal_strlenEPKc>:
 8061b50:	8b 54 24 04          	mov    0x4(%esp),%edx
 8061b54:	31 c0                	xor    %eax,%eax
 8061b56:	80 3a 00             	cmpb   $0x0,(%edx)
 8061b59:	74 10                	je     8061b6b <_ZN11__sanitizer15internal_strlenEPKc+0x1b>
 8061b5b:	90                   	nop
 8061b5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061b60:	83 c0 01             	add    $0x1,%eax
 8061b63:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8061b67:	75 f7                	jne    8061b60 <_ZN11__sanitizer15internal_strlenEPKc+0x10>
 8061b69:	f3 c3                	repz ret 
 8061b6b:	f3 c3                	repz ret 
 8061b6d:	8d 76 00             	lea    0x0(%esi),%esi

08061b70 <_ZN11__sanitizer16internal_strncatEPcPKcm>:
 8061b70:	55                   	push   %ebp
 8061b71:	31 c9                	xor    %ecx,%ecx
 8061b73:	57                   	push   %edi
 8061b74:	56                   	push   %esi
 8061b75:	83 ec 04             	sub    $0x4,%esp
 8061b78:	8b 74 24 14          	mov    0x14(%esp),%esi
 8061b7c:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8061b80:	80 3e 00             	cmpb   $0x0,(%esi)
 8061b83:	74 0c                	je     8061b91 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x21>
 8061b85:	8d 76 00             	lea    0x0(%esi),%esi
 8061b88:	83 c1 01             	add    $0x1,%ecx
 8061b8b:	80 3c 0e 00          	cmpb   $0x0,(%esi,%ecx,1)
 8061b8f:	75 f7                	jne    8061b88 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x18>
 8061b91:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8061b95:	85 c0                	test   %eax,%eax
 8061b97:	74 2f                	je     8061bc8 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x58>
 8061b99:	0f b6 07             	movzbl (%edi),%eax
 8061b9c:	84 c0                	test   %al,%al
 8061b9e:	74 28                	je     8061bc8 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x58>
 8061ba0:	8d 2c 0e             	lea    (%esi,%ecx,1),%ebp
 8061ba3:	31 d2                	xor    %edx,%edx
 8061ba5:	89 0c 24             	mov    %ecx,(%esp)
 8061ba8:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 8061bac:	eb 0a                	jmp    8061bb8 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x48>
 8061bae:	66 90                	xchg   %ax,%ax
 8061bb0:	0f b6 04 17          	movzbl (%edi,%edx,1),%eax
 8061bb4:	84 c0                	test   %al,%al
 8061bb6:	74 0b                	je     8061bc3 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x53>
 8061bb8:	88 44 15 00          	mov    %al,0x0(%ebp,%edx,1)
 8061bbc:	83 c2 01             	add    $0x1,%edx
 8061bbf:	39 ca                	cmp    %ecx,%edx
 8061bc1:	75 ed                	jne    8061bb0 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x40>
 8061bc3:	8b 0c 24             	mov    (%esp),%ecx
 8061bc6:	01 d1                	add    %edx,%ecx
 8061bc8:	c6 04 0e 00          	movb   $0x0,(%esi,%ecx,1)
 8061bcc:	83 c4 04             	add    $0x4,%esp
 8061bcf:	89 f0                	mov    %esi,%eax
 8061bd1:	5e                   	pop    %esi
 8061bd2:	5f                   	pop    %edi
 8061bd3:	5d                   	pop    %ebp
 8061bd4:	c3                   	ret    
 8061bd5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061bd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>:
 8061be0:	57                   	push   %edi
 8061be1:	56                   	push   %esi
 8061be2:	8b 74 24 14          	mov    0x14(%esp),%esi
 8061be6:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8061bea:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8061bee:	85 f6                	test   %esi,%esi
 8061bf0:	74 20                	je     8061c12 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x32>
 8061bf2:	0f b6 0f             	movzbl (%edi),%ecx
 8061bf5:	31 d2                	xor    %edx,%edx
 8061bf7:	84 c9                	test   %cl,%cl
 8061bf9:	75 0d                	jne    8061c08 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x28>
 8061bfb:	eb 1b                	jmp    8061c18 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x38>
 8061bfd:	8d 76 00             	lea    0x0(%esi),%esi
 8061c00:	0f b6 0c 17          	movzbl (%edi,%edx,1),%ecx
 8061c04:	84 c9                	test   %cl,%cl
 8061c06:	74 10                	je     8061c18 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x38>
 8061c08:	88 0c 10             	mov    %cl,(%eax,%edx,1)
 8061c0b:	83 c2 01             	add    $0x1,%edx
 8061c0e:	39 f2                	cmp    %esi,%edx
 8061c10:	75 ee                	jne    8061c00 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x20>
 8061c12:	5e                   	pop    %esi
 8061c13:	5f                   	pop    %edi
 8061c14:	c3                   	ret    
 8061c15:	8d 76 00             	lea    0x0(%esi),%esi
 8061c18:	c6 04 10 00          	movb   $0x0,(%eax,%edx,1)
 8061c1c:	83 c2 01             	add    $0x1,%edx
 8061c1f:	39 d6                	cmp    %edx,%esi
 8061c21:	76 ef                	jbe    8061c12 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x32>
 8061c23:	c6 04 10 00          	movb   $0x0,(%eax,%edx,1)
 8061c27:	83 c2 01             	add    $0x1,%edx
 8061c2a:	39 d6                	cmp    %edx,%esi
 8061c2c:	77 ea                	ja     8061c18 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x38>
 8061c2e:	eb e2                	jmp    8061c12 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x32>

08061c30 <_ZN11__sanitizer16internal_strnlenEPKcm>:
 8061c30:	8b 54 24 08          	mov    0x8(%esp),%edx
 8061c34:	31 c0                	xor    %eax,%eax
 8061c36:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 8061c3a:	85 d2                	test   %edx,%edx
 8061c3c:	74 24                	je     8061c62 <_ZN11__sanitizer16internal_strnlenEPKcm+0x32>
 8061c3e:	80 39 00             	cmpb   $0x0,(%ecx)
 8061c41:	75 0f                	jne    8061c52 <_ZN11__sanitizer16internal_strnlenEPKcm+0x22>
 8061c43:	eb 14                	jmp    8061c59 <_ZN11__sanitizer16internal_strnlenEPKcm+0x29>
 8061c45:	8d 76 00             	lea    0x0(%esi),%esi
 8061c48:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)
 8061c4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061c50:	74 0e                	je     8061c60 <_ZN11__sanitizer16internal_strnlenEPKcm+0x30>
 8061c52:	83 c0 01             	add    $0x1,%eax
 8061c55:	39 d0                	cmp    %edx,%eax
 8061c57:	75 ef                	jne    8061c48 <_ZN11__sanitizer16internal_strnlenEPKcm+0x18>
 8061c59:	f3 c3                	repz ret 
 8061c5b:	90                   	nop
 8061c5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061c60:	f3 c3                	repz ret 
 8061c62:	f3 c3                	repz ret 
 8061c64:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061c6a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08061c70 <_ZN11__sanitizer15internal_strstrEPKcS1_>:
 8061c70:	55                   	push   %ebp
 8061c71:	57                   	push   %edi
 8061c72:	31 ff                	xor    %edi,%edi
 8061c74:	56                   	push   %esi
 8061c75:	83 ec 0c             	sub    $0xc,%esp
 8061c78:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8061c7c:	8b 74 24 20          	mov    0x20(%esp),%esi
 8061c80:	0f b6 10             	movzbl (%eax),%edx
 8061c83:	84 d2                	test   %dl,%dl
 8061c85:	74 0a                	je     8061c91 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x21>
 8061c87:	90                   	nop
 8061c88:	83 c7 01             	add    $0x1,%edi
 8061c8b:	80 3c 38 00          	cmpb   $0x0,(%eax,%edi,1)
 8061c8f:	75 f7                	jne    8061c88 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x18>
 8061c91:	0f b6 0e             	movzbl (%esi),%ecx
 8061c94:	84 c9                	test   %cl,%cl
 8061c96:	88 4c 24 07          	mov    %cl,0x7(%esp)
 8061c9a:	74 3d                	je     8061cd9 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x69>
 8061c9c:	31 c9                	xor    %ecx,%ecx
 8061c9e:	66 90                	xchg   %ax,%ax
 8061ca0:	83 c1 01             	add    $0x1,%ecx
 8061ca3:	80 3c 0e 00          	cmpb   $0x0,(%esi,%ecx,1)
 8061ca7:	75 f7                	jne    8061ca0 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x30>
 8061ca9:	39 cf                	cmp    %ecx,%edi
 8061cab:	72 49                	jb     8061cf6 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x86>
 8061cad:	29 cf                	sub    %ecx,%edi
 8061caf:	31 ed                	xor    %ebp,%ebp
 8061cb1:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8061cb5:	8d 78 01             	lea    0x1(%eax),%edi
 8061cb8:	3a 54 24 07          	cmp    0x7(%esp),%dl
 8061cbc:	75 25                	jne    8061ce3 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x73>
 8061cbe:	31 d2                	xor    %edx,%edx
 8061cc0:	89 0c 24             	mov    %ecx,(%esp)
 8061cc3:	eb 0c                	jmp    8061cd1 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x61>
 8061cc5:	8d 76 00             	lea    0x0(%esi),%esi
 8061cc8:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx
 8061ccc:	38 0c 10             	cmp    %cl,(%eax,%edx,1)
 8061ccf:	75 0f                	jne    8061ce0 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x70>
 8061cd1:	83 c2 01             	add    $0x1,%edx
 8061cd4:	3b 14 24             	cmp    (%esp),%edx
 8061cd7:	75 ef                	jne    8061cc8 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x58>
 8061cd9:	83 c4 0c             	add    $0xc,%esp
 8061cdc:	5e                   	pop    %esi
 8061cdd:	5f                   	pop    %edi
 8061cde:	5d                   	pop    %ebp
 8061cdf:	c3                   	ret    
 8061ce0:	8b 0c 24             	mov    (%esp),%ecx
 8061ce3:	83 c5 01             	add    $0x1,%ebp
 8061ce6:	39 6c 24 08          	cmp    %ebp,0x8(%esp)
 8061cea:	72 0a                	jb     8061cf6 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x86>
 8061cec:	89 f8                	mov    %edi,%eax
 8061cee:	0f b6 17             	movzbl (%edi),%edx
 8061cf1:	83 c7 01             	add    $0x1,%edi
 8061cf4:	eb c2                	jmp    8061cb8 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x48>
 8061cf6:	83 c4 0c             	add    $0xc,%esp
 8061cf9:	31 c0                	xor    %eax,%eax
 8061cfb:	5e                   	pop    %esi
 8061cfc:	5f                   	pop    %edi
 8061cfd:	5d                   	pop    %ebp
 8061cfe:	c3                   	ret    
 8061cff:	90                   	nop

08061d00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci>:
 8061d00:	55                   	push   %ebp
 8061d01:	57                   	push   %edi
 8061d02:	56                   	push   %esi
 8061d03:	53                   	push   %ebx
 8061d04:	83 ec 3c             	sub    $0x3c,%esp
 8061d07:	8b 74 24 58          	mov    0x58(%esp),%esi
 8061d0b:	e8 e0 7d fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8061d10:	81 c3 f0 e2 04 00    	add    $0x4e2f0,%ebx
 8061d16:	8b 4c 24 50          	mov    0x50(%esp),%ecx
 8061d1a:	89 f0                	mov    %esi,%eax
 8061d1c:	83 f6 0a             	xor    $0xa,%esi
 8061d1f:	99                   	cltd   
 8061d20:	09 d6                	or     %edx,%esi
 8061d22:	0f 85 67 01 00 00    	jne    8061e8f <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x18f>
 8061d28:	0f b6 01             	movzbl (%ecx),%eax
 8061d2b:	3c 20                	cmp    $0x20,%al
 8061d2d:	0f 84 ad 00 00 00    	je     8061de0 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xe0>
 8061d33:	8d 50 f7             	lea    -0x9(%eax),%edx
 8061d36:	80 fa 04             	cmp    $0x4,%dl
 8061d39:	0f 86 a1 00 00 00    	jbe    8061de0 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xe0>
 8061d3f:	3c 2b                	cmp    $0x2b,%al
 8061d41:	0f 84 f9 00 00 00    	je     8061e40 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x140>
 8061d47:	3c 2d                	cmp    $0x2d,%al
 8061d49:	0f 84 21 01 00 00    	je     8061e70 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x170>
 8061d4f:	89 cf                	mov    %ecx,%edi
 8061d51:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%esp)
 8061d58:	00 
 8061d59:	0f be e8             	movsbl %al,%ebp
 8061d5c:	ba 00 00 00 00       	mov    $0x0,%edx
 8061d61:	8d 45 d0             	lea    -0x30(%ebp),%eax
 8061d64:	83 f8 09             	cmp    $0x9,%eax
 8061d67:	b8 00 00 00 00       	mov    $0x0,%eax
 8061d6c:	0f 87 8e 00 00 00    	ja     8061e00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x100>
 8061d72:	89 f9                	mov    %edi,%ecx
 8061d74:	eb 50                	jmp    8061dc6 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xc6>
 8061d76:	66 90                	xchg   %ax,%ax
 8061d78:	72 08                	jb     8061d82 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x82>
 8061d7a:	3d 99 99 99 99       	cmp    $0x99999999,%eax
 8061d7f:	90                   	nop
 8061d80:	77 4c                	ja     8061dce <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xce>
 8061d82:	bf 0a 00 00 00       	mov    $0xa,%edi
 8061d87:	6b f2 0a             	imul   $0xa,%edx,%esi
 8061d8a:	f7 e7                	mul    %edi
 8061d8c:	01 f2                	add    %esi,%edx
 8061d8e:	8d 7d d0             	lea    -0x30(%ebp),%edi
 8061d91:	89 fe                	mov    %edi,%esi
 8061d93:	c1 fe 1f             	sar    $0x1f,%esi
 8061d96:	89 74 24 24          	mov    %esi,0x24(%esp)
 8061d9a:	8b 74 24 24          	mov    0x24(%esp),%esi
 8061d9e:	89 7c 24 20          	mov    %edi,0x20(%esp)
 8061da2:	f7 d7                	not    %edi
 8061da4:	f7 d6                	not    %esi
 8061da6:	39 f2                	cmp    %esi,%edx
 8061da8:	77 3e                	ja     8061de8 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xe8>
 8061daa:	72 04                	jb     8061db0 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xb0>
 8061dac:	39 f8                	cmp    %edi,%eax
 8061dae:	77 38                	ja     8061de8 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xe8>
 8061db0:	03 44 24 20          	add    0x20(%esp),%eax
 8061db4:	13 54 24 24          	adc    0x24(%esp),%edx
 8061db8:	83 c1 01             	add    $0x1,%ecx
 8061dbb:	0f be 29             	movsbl (%ecx),%ebp
 8061dbe:	8d 75 d0             	lea    -0x30(%ebp),%esi
 8061dc1:	83 fe 09             	cmp    $0x9,%esi
 8061dc4:	77 3a                	ja     8061e00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x100>
 8061dc6:	81 fa 99 99 99 19    	cmp    $0x19999999,%edx
 8061dcc:	76 aa                	jbe    8061d78 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x78>
 8061dce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8061dd3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 8061dd8:	eb b4                	jmp    8061d8e <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x8e>
 8061dda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061de0:	83 c1 01             	add    $0x1,%ecx
 8061de3:	e9 40 ff ff ff       	jmp    8061d28 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x28>
 8061de8:	83 c1 01             	add    $0x1,%ecx
 8061deb:	0f be 29             	movsbl (%ecx),%ebp
 8061dee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8061df3:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 8061df8:	8d 75 d0             	lea    -0x30(%ebp),%esi
 8061dfb:	83 fe 09             	cmp    $0x9,%esi
 8061dfe:	76 c6                	jbe    8061dc6 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0xc6>
 8061e00:	8b 74 24 54          	mov    0x54(%esp),%esi
 8061e04:	85 f6                	test   %esi,%esi
 8061e06:	74 06                	je     8061e0e <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x10e>
 8061e08:	8b 7c 24 54          	mov    0x54(%esp),%edi
 8061e0c:	89 0f                	mov    %ecx,(%edi)
 8061e0e:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%esp)
 8061e13:	75 43                	jne    8061e58 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x158>
 8061e15:	81 fa ff ff ff 7f    	cmp    $0x7fffffff,%edx
 8061e1b:	77 0b                	ja     8061e28 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x128>
 8061e1d:	83 c4 3c             	add    $0x3c,%esp
 8061e20:	5b                   	pop    %ebx
 8061e21:	5e                   	pop    %esi
 8061e22:	5f                   	pop    %edi
 8061e23:	5d                   	pop    %ebp
 8061e24:	c3                   	ret    
 8061e25:	8d 76 00             	lea    0x0(%esi),%esi
 8061e28:	83 c4 3c             	add    $0x3c,%esp
 8061e2b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8061e30:	5b                   	pop    %ebx
 8061e31:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
 8061e36:	5e                   	pop    %esi
 8061e37:	5f                   	pop    %edi
 8061e38:	5d                   	pop    %ebp
 8061e39:	c3                   	ret    
 8061e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061e40:	8d 41 01             	lea    0x1(%ecx),%eax
 8061e43:	89 c7                	mov    %eax,%edi
 8061e45:	0f b6 41 01          	movzbl 0x1(%ecx),%eax
 8061e49:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%esp)
 8061e50:	00 
 8061e51:	e9 03 ff ff ff       	jmp    8061d59 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x59>
 8061e56:	66 90                	xchg   %ax,%ax
 8061e58:	85 d2                	test   %edx,%edx
 8061e5a:	78 2a                	js     8061e86 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x186>
 8061e5c:	f7 d8                	neg    %eax
 8061e5e:	83 d2 00             	adc    $0x0,%edx
 8061e61:	83 c4 3c             	add    $0x3c,%esp
 8061e64:	5b                   	pop    %ebx
 8061e65:	f7 da                	neg    %edx
 8061e67:	5e                   	pop    %esi
 8061e68:	5f                   	pop    %edi
 8061e69:	5d                   	pop    %ebp
 8061e6a:	c3                   	ret    
 8061e6b:	90                   	nop
 8061e6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061e70:	8d 41 01             	lea    0x1(%ecx),%eax
 8061e73:	89 c7                	mov    %eax,%edi
 8061e75:	0f b6 41 01          	movzbl 0x1(%ecx),%eax
 8061e79:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%esp)
 8061e80:	ff 
 8061e81:	e9 d3 fe ff ff       	jmp    8061d59 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x59>
 8061e86:	31 c0                	xor    %eax,%eax
 8061e88:	ba 00 00 00 80       	mov    $0x80000000,%edx
 8061e8d:	eb 8e                	jmp    8061e1d <_ZN11__sanitizer23internal_simple_strtollEPKcPPci+0x11d>
 8061e8f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8061e93:	8d 83 98 69 fd ff    	lea    -0x29668(%ebx),%eax
 8061e99:	89 44 24 08          	mov    %eax,0x8(%esp)
 8061e9d:	8d 83 c8 69 fd ff    	lea    -0x29638(%ebx),%eax
 8061ea3:	c7 44 24 14 0a 00 00 	movl   $0xa,0x14(%esp)
 8061eaa:	00 
 8061eab:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8061eb2:	00 
 8061eb3:	89 54 24 10          	mov    %edx,0x10(%esp)
 8061eb7:	c7 44 24 04 b0 00 00 	movl   $0xb0,0x4(%esp)
 8061ebe:	00 
 8061ebf:	89 04 24             	mov    %eax,(%esp)
 8061ec2:	e8 e9 04 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8061ec7:	89 f6                	mov    %esi,%esi
 8061ec9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061ed0 <_ZN11__sanitizer14internal_atollEPKc>:
 8061ed0:	83 ec 1c             	sub    $0x1c,%esp
 8061ed3:	8b 44 24 20          	mov    0x20(%esp),%eax
 8061ed7:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 8061ede:	00 
 8061edf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8061ee6:	00 
 8061ee7:	89 04 24             	mov    %eax,(%esp)
 8061eea:	e8 11 fe ff ff       	call   8061d00 <_ZN11__sanitizer23internal_simple_strtollEPKcPPci>
 8061eef:	83 c4 1c             	add    $0x1c,%esp
 8061ef2:	c3                   	ret    
 8061ef3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8061ef9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08061f00 <_ZN11__sanitizer11mem_is_zeroEPKcm>:
 8061f00:	55                   	push   %ebp
 8061f01:	31 d2                	xor    %edx,%edx
 8061f03:	57                   	push   %edi
 8061f04:	56                   	push   %esi
 8061f05:	53                   	push   %ebx
 8061f06:	83 ec 2c             	sub    $0x2c,%esp
 8061f09:	8b 6c 24 44          	mov    0x44(%esp),%ebp
 8061f0d:	e8 de 7b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8061f12:	81 c3 ee e0 04 00    	add    $0x4e0ee,%ebx
 8061f18:	81 fd 00 00 00 40    	cmp    $0x40000000,%ebp
 8061f1e:	76 38                	jbe    8061f58 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x58>
 8061f20:	8d 83 ab 69 fd ff    	lea    -0x29655(%ebx),%eax
 8061f26:	89 44 24 08          	mov    %eax,0x8(%esp)
 8061f2a:	8d 83 c8 69 fd ff    	lea    -0x29638(%ebx),%eax
 8061f30:	c7 44 24 14 00 00 00 	movl   $0x40000000,0x14(%esp)
 8061f37:	40 
 8061f38:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8061f3f:	00 
 8061f40:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8061f44:	89 54 24 10          	mov    %edx,0x10(%esp)
 8061f48:	c7 44 24 04 cf 00 00 	movl   $0xcf,0x4(%esp)
 8061f4f:	00 
 8061f50:	89 04 24             	mov    %eax,(%esp)
 8061f53:	e8 58 04 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8061f58:	8b 44 24 40          	mov    0x40(%esp),%eax
 8061f5c:	03 6c 24 40          	add    0x40(%esp),%ebp
 8061f60:	8d 50 03             	lea    0x3(%eax),%edx
 8061f63:	89 ee                	mov    %ebp,%esi
 8061f65:	83 e2 fc             	and    $0xfffffffc,%edx
 8061f68:	83 e6 fc             	and    $0xfffffffc,%esi
 8061f6b:	39 d0                	cmp    %edx,%eax
 8061f6d:	73 61                	jae    8061fd0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xd0>
 8061f6f:	39 e8                	cmp    %ebp,%eax
 8061f71:	73 5d                	jae    8061fd0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xd0>
 8061f73:	89 c1                	mov    %eax,%ecx
 8061f75:	31 c0                	xor    %eax,%eax
 8061f77:	eb 0b                	jmp    8061f84 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x84>
 8061f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061f80:	39 ca                	cmp    %ecx,%edx
 8061f82:	76 0c                	jbe    8061f90 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x90>
 8061f84:	0f be 39             	movsbl (%ecx),%edi
 8061f87:	83 c1 01             	add    $0x1,%ecx
 8061f8a:	09 f8                	or     %edi,%eax
 8061f8c:	39 cd                	cmp    %ecx,%ebp
 8061f8e:	77 f0                	ja     8061f80 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x80>
 8061f90:	39 f2                	cmp    %esi,%edx
 8061f92:	73 0d                	jae    8061fa1 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xa1>
 8061f94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061f98:	0b 02                	or     (%edx),%eax
 8061f9a:	83 c2 04             	add    $0x4,%edx
 8061f9d:	39 d6                	cmp    %edx,%esi
 8061f9f:	77 f7                	ja     8061f98 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x98>
 8061fa1:	39 74 24 40          	cmp    %esi,0x40(%esp)
 8061fa5:	77 15                	ja     8061fbc <_ZN11__sanitizer11mem_is_zeroEPKcm+0xbc>
 8061fa7:	39 f5                	cmp    %esi,%ebp
 8061fa9:	76 11                	jbe    8061fbc <_ZN11__sanitizer11mem_is_zeroEPKcm+0xbc>
 8061fab:	90                   	nop
 8061fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8061fb0:	0f be 16             	movsbl (%esi),%edx
 8061fb3:	83 c6 01             	add    $0x1,%esi
 8061fb6:	09 d0                	or     %edx,%eax
 8061fb8:	39 ee                	cmp    %ebp,%esi
 8061fba:	75 f4                	jne    8061fb0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xb0>
 8061fbc:	85 c0                	test   %eax,%eax
 8061fbe:	0f 94 c0             	sete   %al
 8061fc1:	83 c4 2c             	add    $0x2c,%esp
 8061fc4:	5b                   	pop    %ebx
 8061fc5:	5e                   	pop    %esi
 8061fc6:	5f                   	pop    %edi
 8061fc7:	5d                   	pop    %ebp
 8061fc8:	c3                   	ret    
 8061fc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8061fd0:	31 c0                	xor    %eax,%eax
 8061fd2:	eb bc                	jmp    8061f90 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x90>
 8061fd4:	66 90                	xchg   %ax,%ax
 8061fd6:	66 90                	xchg   %ax,%ax
 8061fd8:	66 90                	xchg   %ax,%ax
 8061fda:	66 90                	xchg   %ax,%ax
 8061fdc:	66 90                	xchg   %ax,%ax
 8061fde:	66 90                	xchg   %ax,%ax

08061fe0 <_ZN11__sanitizer8DemangleEPKc>:
 8061fe0:	56                   	push   %esi
 8061fe1:	53                   	push   %ebx
 8061fe2:	e8 09 7b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8061fe7:	81 c3 19 e0 04 00    	add    $0x4e019,%ebx
 8061fed:	83 ec 14             	sub    $0x14,%esp
 8061ff0:	8b 74 24 20          	mov    0x20(%esp),%esi
 8061ff4:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
 8061ffa:	85 c0                	test   %eax,%eax
 8061ffc:	74 2a                	je     8062028 <_ZN11__sanitizer8DemangleEPKc+0x48>
 8061ffe:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062005:	00 
 8062006:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 806200d:	00 
 806200e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8062015:	00 
 8062016:	89 34 24             	mov    %esi,(%esp)
 8062019:	e8 22 79 fe ff       	call   8049940 <__cxa_demangle@plt>
 806201e:	85 c0                	test   %eax,%eax
 8062020:	74 06                	je     8062028 <_ZN11__sanitizer8DemangleEPKc+0x48>
 8062022:	83 c4 14             	add    $0x14,%esp
 8062025:	5b                   	pop    %ebx
 8062026:	5e                   	pop    %esi
 8062027:	c3                   	ret    
 8062028:	83 c4 14             	add    $0x14,%esp
 806202b:	89 f0                	mov    %esi,%eax
 806202d:	5b                   	pop    %ebx
 806202e:	5e                   	pop    %esi
 806202f:	c3                   	ret    

08062030 <_ZN11__sanitizer13InternalAllocEm>:
 8062030:	53                   	push   %ebx
 8062031:	83 ec 18             	sub    $0x18,%esp
 8062034:	8b 44 24 20          	mov    0x20(%esp),%eax
 8062038:	e8 b3 7a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806203d:	81 c3 c3 df 04 00    	add    $0x4dfc3,%ebx
 8062043:	8d 50 08             	lea    0x8(%eax),%edx
 8062046:	39 d0                	cmp    %edx,%eax
 8062048:	77 26                	ja     8062070 <_ZN11__sanitizer13InternalAllocEm+0x40>
 806204a:	89 14 24             	mov    %edx,(%esp)
 806204d:	e8 0e 78 fe ff       	call   8049860 <__libc_malloc@plt>
 8062052:	85 c0                	test   %eax,%eax
 8062054:	74 1a                	je     8062070 <_ZN11__sanitizer13InternalAllocEm+0x40>
 8062056:	c7 00 41 c0 eb bc    	movl   $0xbcebc041,(%eax)
 806205c:	83 c0 08             	add    $0x8,%eax
 806205f:	c7 40 fc 3a b0 6c 6a 	movl   $0x6a6cb03a,-0x4(%eax)
 8062066:	83 c4 18             	add    $0x18,%esp
 8062069:	5b                   	pop    %ebx
 806206a:	c3                   	ret    
 806206b:	90                   	nop
 806206c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8062070:	83 c4 18             	add    $0x18,%esp
 8062073:	31 c0                	xor    %eax,%eax
 8062075:	5b                   	pop    %ebx
 8062076:	c3                   	ret    
 8062077:	89 f6                	mov    %esi,%esi
 8062079:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062080 <_ZN11__sanitizer12InternalFreeEPv>:
 8062080:	55                   	push   %ebp
 8062081:	57                   	push   %edi
 8062082:	56                   	push   %esi
 8062083:	53                   	push   %ebx
 8062084:	83 ec 2c             	sub    $0x2c,%esp
 8062087:	8b 44 24 40          	mov    0x40(%esp),%eax
 806208b:	e8 60 7a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062090:	81 c3 70 df 04 00    	add    $0x4df70,%ebx
 8062096:	85 c0                	test   %eax,%eax
 8062098:	74 33                	je     80620cd <_ZN11__sanitizer12InternalFreeEPv+0x4d>
 806209a:	8b 48 f8             	mov    -0x8(%eax),%ecx
 806209d:	8d 70 f8             	lea    -0x8(%eax),%esi
 80620a0:	8b 50 fc             	mov    -0x4(%eax),%edx
 80620a3:	89 cf                	mov    %ecx,%edi
 80620a5:	89 d5                	mov    %edx,%ebp
 80620a7:	81 f7 41 c0 eb bc    	xor    $0xbcebc041,%edi
 80620ad:	81 f5 3a b0 6c 6a    	xor    $0x6a6cb03a,%ebp
 80620b3:	09 fd                	or     %edi,%ebp
 80620b5:	75 1e                	jne    80620d5 <_ZN11__sanitizer12InternalFreeEPv+0x55>
 80620b7:	c7 40 f8 00 00 00 00 	movl   $0x0,-0x8(%eax)
 80620be:	c7 40 fc 00 00 00 00 	movl   $0x0,-0x4(%eax)
 80620c5:	89 34 24             	mov    %esi,(%esp)
 80620c8:	e8 f3 75 fe ff       	call   80496c0 <__libc_free@plt>
 80620cd:	83 c4 2c             	add    $0x2c,%esp
 80620d0:	5b                   	pop    %ebx
 80620d1:	5e                   	pop    %esi
 80620d2:	5f                   	pop    %edi
 80620d3:	5d                   	pop    %ebp
 80620d4:	c3                   	ret    
 80620d5:	8d 83 08 6a fd ff    	lea    -0x295f8(%ebx),%eax
 80620db:	89 44 24 08          	mov    %eax,0x8(%esp)
 80620df:	8d 83 30 6a fd ff    	lea    -0x295d0(%ebx),%eax
 80620e5:	c7 44 24 14 41 c0 eb 	movl   $0xbcebc041,0x14(%esp)
 80620ec:	bc 
 80620ed:	c7 44 24 18 3a b0 6c 	movl   $0x6a6cb03a,0x18(%esp)
 80620f4:	6a 
 80620f5:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80620f9:	89 54 24 10          	mov    %edx,0x10(%esp)
 80620fd:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)
 8062104:	00 
 8062105:	89 04 24             	mov    %eax,(%esp)
 8062108:	e8 a3 02 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 806210d:	90                   	nop
 806210e:	66 90                	xchg   %ax,%ax

08062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>:
 8062110:	55                   	push   %ebp
 8062111:	57                   	push   %edi
 8062112:	56                   	push   %esi
 8062113:	53                   	push   %ebx
 8062114:	83 ec 2c             	sub    $0x2c,%esp
 8062117:	8b 7c 24 40          	mov    0x40(%esp),%edi
 806211b:	8b 44 24 44          	mov    0x44(%esp),%eax
 806211f:	e8 cc 79 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062124:	81 c3 dc de 04 00    	add    $0x4dedc,%ebx
 806212a:	8b 17                	mov    (%edi),%edx
 806212c:	8d 70 07             	lea    0x7(%eax),%esi
 806212f:	8b 47 04             	mov    0x4(%edi),%eax
 8062132:	83 e6 f8             	and    $0xfffffff8,%esi
 8062135:	29 c2                	sub    %eax,%edx
 8062137:	39 f2                	cmp    %esi,%edx
 8062139:	7c 0d                	jl     8062148 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0x38>
 806213b:	01 c6                	add    %eax,%esi
 806213d:	89 77 04             	mov    %esi,0x4(%edi)
 8062140:	83 c4 2c             	add    $0x2c,%esp
 8062143:	5b                   	pop    %ebx
 8062144:	5e                   	pop    %esi
 8062145:	5f                   	pop    %edi
 8062146:	5d                   	pop    %ebp
 8062147:	c3                   	ret    
 8062148:	e8 c3 00 00 00       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 806214d:	39 f0                	cmp    %esi,%eax
 806214f:	0f 42 c6             	cmovb  %esi,%eax
 8062152:	89 c5                	mov    %eax,%ebp
 8062154:	8d 83 b5 6a fd ff    	lea    -0x2954b(%ebx),%eax
 806215a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806215e:	89 2c 24             	mov    %ebp,(%esp)
 8062161:	e8 7a 10 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8062166:	8b 8b 50 13 5b 01    	mov    0x15b1350(%ebx),%ecx
 806216c:	85 c9                	test   %ecx,%ecx
 806216e:	8d 14 28             	lea    (%eax,%ebp,1),%edx
 8062171:	89 47 04             	mov    %eax,0x4(%edi)
 8062174:	89 17                	mov    %edx,(%edi)
 8062176:	74 0e                	je     8062186 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0x76>
 8062178:	89 04 24             	mov    %eax,(%esp)
 806217b:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 806217f:	ff d1                	call   *%ecx
 8062181:	8b 47 04             	mov    0x4(%edi),%eax
 8062184:	8b 17                	mov    (%edi),%edx
 8062186:	29 c2                	sub    %eax,%edx
 8062188:	39 d6                	cmp    %edx,%esi
 806218a:	7e af                	jle    806213b <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0x2b>
 806218c:	8d 83 78 6a fd ff    	lea    -0x29588(%ebx),%eax
 8062192:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062196:	8d 83 30 6a fd ff    	lea    -0x295d0(%ebx),%eax
 806219c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80621a3:	00 
 80621a4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80621ab:	00 
 80621ac:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80621b3:	00 
 80621b4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80621bb:	00 
 80621bc:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)
 80621c3:	00 
 80621c4:	89 04 24             	mov    %eax,(%esp)
 80621c7:	e8 e4 01 00 00       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80621cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080621d0 <_ZN11__sanitizer27SetLowLevelAllocateCallbackEPFvmmE>:
 80621d0:	e8 c0 dd fe ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 80621d5:	81 c1 2b de 04 00    	add    $0x4de2b,%ecx
 80621db:	8b 44 24 04          	mov    0x4(%esp),%eax
 80621df:	89 81 50 13 5b 01    	mov    %eax,0x15b1350(%ecx)
 80621e5:	c3                   	ret    
 80621e6:	8d 76 00             	lea    0x0(%esi),%esi
 80621e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080621f0 <_ZN11__sanitizer35CallocShouldReturnNullDueToOverflowEmm>:
 80621f0:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 80621f4:	31 c0                	xor    %eax,%eax
 80621f6:	85 c9                	test   %ecx,%ecx
 80621f8:	74 10                	je     806220a <_ZN11__sanitizer35CallocShouldReturnNullDueToOverflowEmm+0x1a>
 80621fa:	31 d2                	xor    %edx,%edx
 80621fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8062201:	f7 f1                	div    %ecx
 8062203:	3b 44 24 08          	cmp    0x8(%esp),%eax
 8062207:	0f 92 c0             	setb   %al
 806220a:	f3 c3                	repz ret 
 806220c:	66 90                	xchg   %ax,%ax
 806220e:	66 90                	xchg   %ax,%ax

08062210 <_ZN11__sanitizer17GetPageSizeCachedEv>:
 8062210:	53                   	push   %ebx
 8062211:	e8 da 78 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062216:	81 c3 ea dd 04 00    	add    $0x4ddea,%ebx
 806221c:	83 ec 08             	sub    $0x8,%esp
 806221f:	8b 83 60 13 5b 01    	mov    0x15b1360(%ebx),%eax
 8062225:	85 c0                	test   %eax,%eax
 8062227:	75 0b                	jne    8062234 <_ZN11__sanitizer17GetPageSizeCachedEv+0x24>
 8062229:	e8 e2 07 00 00       	call   8062a10 <_ZN11__sanitizer11GetPageSizeEv>
 806222e:	89 83 60 13 5b 01    	mov    %eax,0x15b1360(%ebx)
 8062234:	83 c4 08             	add    $0x8,%esp
 8062237:	5b                   	pop    %ebx
 8062238:	c3                   	ret    
 8062239:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08062240 <_ZN11__sanitizer14SetDieCallbackEPFvvE>:
 8062240:	e8 50 dd fe ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8062245:	81 c1 bb dd 04 00    	add    $0x4ddbb,%ecx
 806224b:	8b 44 24 04          	mov    0x4(%esp),%eax
 806224f:	89 81 68 13 5b 01    	mov    %eax,0x15b1368(%ecx)
 8062255:	c3                   	ret    
 8062256:	8d 76 00             	lea    0x0(%esi),%esi
 8062259:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062260 <_ZN11__sanitizer3DieEv>:
 8062260:	53                   	push   %ebx
 8062261:	e8 8a 78 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062266:	81 c3 9a dd 04 00    	add    $0x4dd9a,%ebx
 806226c:	83 ec 18             	sub    $0x18,%esp
 806226f:	8b 83 68 13 5b 01    	mov    0x15b1368(%ebx),%eax
 8062275:	85 c0                	test   %eax,%eax
 8062277:	74 02                	je     806227b <_ZN11__sanitizer3DieEv+0x1b>
 8062279:	ff d0                	call   *%eax
 806227b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8062282:	e8 99 30 00 00       	call   8065320 <_ZN11__sanitizer14internal__exitEi>
 8062287:	89 f6                	mov    %esi,%esi
 8062289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062290 <_ZN11__sanitizerL19MaybeOpenReportFileEv>:
 8062290:	57                   	push   %edi
 8062291:	56                   	push   %esi
 8062292:	53                   	push   %ebx
 8062293:	e8 58 78 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062298:	81 c3 68 dd 04 00    	add    $0x4dd68,%ebx
 806229e:	83 ec 20             	sub    $0x20,%esp
 80622a1:	80 bb 80 23 5b 01 00 	cmpb   $0x0,0x15b2380(%ebx)
 80622a8:	75 0e                	jne    80622b8 <_ZN11__sanitizerL19MaybeOpenReportFileEv+0x28>
 80622aa:	83 c4 20             	add    $0x20,%esp
 80622ad:	5b                   	pop    %ebx
 80622ae:	5e                   	pop    %esi
 80622af:	5f                   	pop    %edi
 80622b0:	c3                   	ret    
 80622b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80622b8:	e8 93 07 00 00       	call   8062a50 <_ZN11__sanitizer6GetPidEv>
 80622bd:	3b 83 6c 13 5b 01    	cmp    0x15b136c(%ebx),%eax
 80622c3:	74 e5                	je     80622aa <_ZN11__sanitizerL19MaybeOpenReportFileEv+0x1a>
 80622c5:	8d 83 f7 68 fd ff    	lea    -0x29709(%ebx),%eax
 80622cb:	89 44 24 04          	mov    %eax,0x4(%esp)
 80622cf:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)
 80622d6:	e8 05 0f 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 80622db:	89 c6                	mov    %eax,%esi
 80622dd:	e8 6e 07 00 00       	call   8062a50 <_ZN11__sanitizer6GetPidEv>
 80622e2:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 80622e9:	00 
 80622ea:	89 34 24             	mov    %esi,(%esp)
 80622ed:	89 44 24 10          	mov    %eax,0x10(%esp)
 80622f1:	8d 83 80 13 5b 01    	lea    0x15b1380(%ebx),%eax
 80622f7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80622fb:	8d 83 da 6a fd ff    	lea    -0x29526(%ebx),%eax
 8062301:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062305:	e8 06 f4 ff ff       	call   8061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 806230a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8062311:	00 
 8062312:	89 34 24             	mov    %esi,(%esp)
 8062315:	e8 96 2d 00 00       	call   80650b0 <_ZN11__sanitizer8OpenFileEPKcb>
 806231a:	83 f8 ff             	cmp    $0xffffffff,%eax
 806231d:	89 c7                	mov    %eax,%edi
 806231f:	74 3b                	je     806235c <_ZN11__sanitizerL19MaybeOpenReportFileEv+0xcc>
 8062321:	8b 93 e8 00 00 00    	mov    0xe8(%ebx),%edx
 8062327:	83 fa ff             	cmp    $0xffffffff,%edx
 806232a:	74 08                	je     8062334 <_ZN11__sanitizerL19MaybeOpenReportFileEv+0xa4>
 806232c:	89 14 24             	mov    %edx,(%esp)
 806232f:	e8 dc 2c 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8062334:	89 bb e8 00 00 00    	mov    %edi,0xe8(%ebx)
 806233a:	e8 11 07 00 00       	call   8062a50 <_ZN11__sanitizer6GetPidEv>
 806233f:	89 34 24             	mov    %esi,(%esp)
 8062342:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 8062349:	00 
 806234a:	89 83 6c 13 5b 01    	mov    %eax,0x15b136c(%ebx)
 8062350:	e8 5b 07 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8062355:	83 c4 20             	add    $0x20,%esp
 8062358:	5b                   	pop    %ebx
 8062359:	5e                   	pop    %esi
 806235a:	5f                   	pop    %edi
 806235b:	c3                   	ret    
 806235c:	8d 83 be 6a fd ff    	lea    -0x29542(%ebx),%eax
 8062362:	89 04 24             	mov    %eax,(%esp)
 8062365:	89 74 24 04          	mov    %esi,0x4(%esp)
 8062369:	c7 83 e8 00 00 00 02 	movl   $0x2,0xe8(%ebx)
 8062370:	00 00 00 
 8062373:	c6 83 80 23 5b 01 00 	movb   $0x0,0x15b2380(%ebx)
 806237a:	e8 c1 f3 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 806237f:	e8 dc fe ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 8062384:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806238a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08062390 <_ZN11__sanitizer22SetCheckFailedCallbackEPFvPKciS1_yyE>:
 8062390:	e8 00 dc fe ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8062395:	81 c1 6b dc 04 00    	add    $0x4dc6b,%ecx
 806239b:	8b 44 24 04          	mov    0x4(%esp),%eax
 806239f:	89 81 64 13 5b 01    	mov    %eax,0x15b1364(%ecx)
 80623a5:	c3                   	ret    
 80623a6:	8d 76 00             	lea    0x0(%esi),%esi
 80623a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>:
 80623b0:	55                   	push   %ebp
 80623b1:	57                   	push   %edi
 80623b2:	56                   	push   %esi
 80623b3:	53                   	push   %ebx
 80623b4:	e8 37 77 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80623b9:	81 c3 47 dc 04 00    	add    $0x4dc47,%ebx
 80623bf:	83 ec 3c             	sub    $0x3c,%esp
 80623c2:	8b 6c 24 58          	mov    0x58(%esp),%ebp
 80623c6:	8b 74 24 5c          	mov    0x5c(%esp),%esi
 80623ca:	8b 7c 24 60          	mov    0x60(%esp),%edi
 80623ce:	8b 44 24 64          	mov    0x64(%esp),%eax
 80623d2:	8b 54 24 68          	mov    0x68(%esp),%edx
 80623d6:	8b 8b 64 13 5b 01    	mov    0x15b1364(%ebx),%ecx
 80623dc:	85 c9                	test   %ecx,%ecx
 80623de:	74 35                	je     8062415 <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x65>
 80623e0:	89 44 24 14          	mov    %eax,0x14(%esp)
 80623e4:	89 44 24 28          	mov    %eax,0x28(%esp)
 80623e8:	8b 44 24 54          	mov    0x54(%esp),%eax
 80623ec:	89 54 24 18          	mov    %edx,0x18(%esp)
 80623f0:	89 54 24 2c          	mov    %edx,0x2c(%esp)
 80623f4:	89 74 24 0c          	mov    %esi,0xc(%esp)
 80623f8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80623fc:	8b 44 24 50          	mov    0x50(%esp),%eax
 8062400:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8062404:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 8062408:	89 04 24             	mov    %eax,(%esp)
 806240b:	ff d1                	call   *%ecx
 806240d:	8b 44 24 28          	mov    0x28(%esp),%eax
 8062411:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8062415:	89 44 24 18          	mov    %eax,0x18(%esp)
 8062419:	8b 44 24 54          	mov    0x54(%esp),%eax
 806241d:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 8062421:	89 74 24 10          	mov    %esi,0x10(%esp)
 8062425:	89 7c 24 14          	mov    %edi,0x14(%esp)
 8062429:	89 44 24 08          	mov    %eax,0x8(%esp)
 806242d:	8b 44 24 50          	mov    0x50(%esp),%eax
 8062431:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8062435:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062439:	8d 83 2c 6b fd ff    	lea    -0x294d4(%ebx),%eax
 806243f:	89 04 24             	mov    %eax,(%esp)
 8062442:	e8 f9 f2 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8062447:	e8 14 fe ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 806244c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08062450 <_ZN11__sanitizer11PrintsToTtyEv>:
 8062450:	53                   	push   %ebx
 8062451:	e8 9a 76 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062456:	81 c3 aa db 04 00    	add    $0x4dbaa,%ebx
 806245c:	83 ec 18             	sub    $0x18,%esp
 806245f:	e8 2c fe ff ff       	call   8062290 <_ZN11__sanitizerL19MaybeOpenReportFileEv>
 8062464:	8b 83 e8 00 00 00    	mov    0xe8(%ebx),%eax
 806246a:	89 04 24             	mov    %eax,(%esp)
 806246d:	e8 0e 11 00 00       	call   8063580 <_ZN11__sanitizer15internal_isattyEi>
 8062472:	85 c0                	test   %eax,%eax
 8062474:	0f 95 c0             	setne  %al
 8062477:	83 c4 18             	add    $0x18,%esp
 806247a:	5b                   	pop    %ebx
 806247b:	c3                   	ret    
 806247c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08062480 <_ZN11__sanitizer8RawWriteEPKc>:
 8062480:	57                   	push   %edi
 8062481:	56                   	push   %esi
 8062482:	53                   	push   %ebx
 8062483:	83 ec 10             	sub    $0x10,%esp
 8062486:	e8 65 76 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806248b:	81 c3 75 db 04 00    	add    $0x4db75,%ebx
 8062491:	8b 7c 24 20          	mov    0x20(%esp),%edi
 8062495:	89 3c 24             	mov    %edi,(%esp)
 8062498:	e8 b3 f6 ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 806249d:	89 c6                	mov    %eax,%esi
 806249f:	e8 ec fd ff ff       	call   8062290 <_ZN11__sanitizerL19MaybeOpenReportFileEv>
 80624a4:	8b 83 e8 00 00 00    	mov    0xe8(%ebx),%eax
 80624aa:	89 74 24 08          	mov    %esi,0x8(%esp)
 80624ae:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80624b2:	89 04 24             	mov    %eax,(%esp)
 80624b5:	e8 96 2c 00 00       	call   8065150 <_ZN11__sanitizer14internal_writeEiPKvm>
 80624ba:	39 c6                	cmp    %eax,%esi
 80624bc:	75 07                	jne    80624c5 <_ZN11__sanitizer8RawWriteEPKc+0x45>
 80624be:	83 c4 10             	add    $0x10,%esp
 80624c1:	5b                   	pop    %ebx
 80624c2:	5e                   	pop    %esi
 80624c3:	5f                   	pop    %edi
 80624c4:	c3                   	ret    
 80624c5:	8d b3 5c 6b fd ff    	lea    -0x294a4(%ebx),%esi
 80624cb:	89 34 24             	mov    %esi,(%esp)
 80624ce:	e8 7d f6 ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 80624d3:	89 74 24 04          	mov    %esi,0x4(%esp)
 80624d7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80624db:	8b 83 e8 00 00 00    	mov    0xe8(%ebx),%eax
 80624e1:	89 04 24             	mov    %eax,(%esp)
 80624e4:	e8 67 2c 00 00       	call   8065150 <_ZN11__sanitizer14internal_writeEiPKvm>
 80624e9:	e8 72 fd ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 80624ee:	66 90                	xchg   %ax,%ax

080624f0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm>:
 80624f0:	55                   	push   %ebp
 80624f1:	57                   	push   %edi
 80624f2:	56                   	push   %esi
 80624f3:	53                   	push   %ebx
 80624f4:	e8 f7 75 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80624f9:	81 c3 07 db 04 00    	add    $0x4db07,%ebx
 80624ff:	83 ec 2c             	sub    $0x2c,%esp
 8062502:	8b b3 60 13 5b 01    	mov    0x15b1360(%ebx),%esi
 8062508:	85 f6                	test   %esi,%esi
 806250a:	0f 84 06 01 00 00    	je     8062616 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0x126>
 8062510:	8b 44 24 44          	mov    0x44(%esp),%eax
 8062514:	3b 74 24 4c          	cmp    0x4c(%esp),%esi
 8062518:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 806251e:	8b 44 24 48          	mov    0x48(%esp),%eax
 8062522:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8062528:	0f 87 de 00 00 00    	ja     806260c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0x11c>
 806252e:	8d 83 f6 6b fd ff    	lea    -0x2940a(%ebx),%eax
 8062534:	89 74 24 18          	mov    %esi,0x18(%esp)
 8062538:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 806253c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8062540:	8b 44 24 40          	mov    0x40(%esp),%eax
 8062544:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 806254b:	00 
 806254c:	89 04 24             	mov    %eax,(%esp)
 806254f:	e8 5c 2b 00 00       	call   80650b0 <_ZN11__sanitizer8OpenFileEPKcb>
 8062554:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062557:	89 c7                	mov    %eax,%edi
 8062559:	0f 84 ad 00 00 00    	je     806260c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0x11c>
 806255f:	8b 44 24 48          	mov    0x48(%esp),%eax
 8062563:	8b 00                	mov    (%eax),%eax
 8062565:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062569:	8b 44 24 44          	mov    0x44(%esp),%eax
 806256d:	8b 00                	mov    (%eax),%eax
 806256f:	89 04 24             	mov    %eax,(%esp)
 8062572:	e8 39 05 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8062577:	8b 6c 24 18          	mov    0x18(%esp),%ebp
 806257b:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 806257f:	89 2c 24             	mov    %ebp,(%esp)
 8062582:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062586:	e8 55 0c 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 806258b:	8b 4c 24 44          	mov    0x44(%esp),%ecx
 806258f:	39 ee                	cmp    %ebp,%esi
 8062591:	89 01                	mov    %eax,(%ecx)
 8062593:	8b 4c 24 48          	mov    0x48(%esp),%ecx
 8062597:	89 29                	mov    %ebp,(%ecx)
 8062599:	bd 00 00 00 00       	mov    $0x0,%ebp
 806259e:	76 1a                	jbe    80625ba <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0xca>
 80625a0:	eb 46                	jmp    80625e8 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0xf8>
 80625a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80625a8:	01 c5                	add    %eax,%ebp
 80625aa:	8d 44 35 00          	lea    0x0(%ebp,%esi,1),%eax
 80625ae:	39 44 24 18          	cmp    %eax,0x18(%esp)
 80625b2:	72 34                	jb     80625e8 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0xf8>
 80625b4:	8b 44 24 44          	mov    0x44(%esp),%eax
 80625b8:	8b 00                	mov    (%eax),%eax
 80625ba:	01 e8                	add    %ebp,%eax
 80625bc:	89 74 24 08          	mov    %esi,0x8(%esp)
 80625c0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80625c4:	89 3c 24             	mov    %edi,(%esp)
 80625c7:	e8 24 2b 00 00       	call   80650f0 <_ZN11__sanitizer13internal_readEiPvm>
 80625cc:	85 c0                	test   %eax,%eax
 80625ce:	75 d8                	jne    80625a8 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0xb8>
 80625d0:	89 3c 24             	mov    %edi,(%esp)
 80625d3:	e8 38 2a 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80625d8:	83 c4 2c             	add    $0x2c,%esp
 80625db:	89 e8                	mov    %ebp,%eax
 80625dd:	5b                   	pop    %ebx
 80625de:	5e                   	pop    %esi
 80625df:	5f                   	pop    %edi
 80625e0:	5d                   	pop    %ebp
 80625e1:	c3                   	ret    
 80625e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80625e8:	89 3c 24             	mov    %edi,(%esp)
 80625eb:	e8 20 2a 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80625f0:	d1 64 24 18          	shll   0x18(%esp)
 80625f4:	8b 44 24 18          	mov    0x18(%esp),%eax
 80625f8:	39 44 24 4c          	cmp    %eax,0x4c(%esp)
 80625fc:	0f 83 3e ff ff ff    	jae    8062540 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0x50>
 8062602:	83 c4 2c             	add    $0x2c,%esp
 8062605:	89 e8                	mov    %ebp,%eax
 8062607:	5b                   	pop    %ebx
 8062608:	5e                   	pop    %esi
 8062609:	5f                   	pop    %edi
 806260a:	5d                   	pop    %ebp
 806260b:	c3                   	ret    
 806260c:	83 c4 2c             	add    $0x2c,%esp
 806260f:	31 c0                	xor    %eax,%eax
 8062611:	5b                   	pop    %ebx
 8062612:	5e                   	pop    %esi
 8062613:	5f                   	pop    %edi
 8062614:	5d                   	pop    %ebp
 8062615:	c3                   	ret    
 8062616:	e8 f5 03 00 00       	call   8062a10 <_ZN11__sanitizer11GetPageSizeEv>
 806261b:	89 83 60 13 5b 01    	mov    %eax,0x15b1360(%ebx)
 8062621:	89 c6                	mov    %eax,%esi
 8062623:	e9 e8 fe ff ff       	jmp    8062510 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm+0x20>
 8062628:	90                   	nop
 8062629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08062630 <_ZN11__sanitizer9SortArrayEPmm>:
 8062630:	55                   	push   %ebp
 8062631:	57                   	push   %edi
 8062632:	56                   	push   %esi
 8062633:	83 ec 04             	sub    $0x4,%esp
 8062636:	83 7c 24 18 01       	cmpl   $0x1,0x18(%esp)
 806263b:	8b 44 24 14          	mov    0x14(%esp),%eax
 806263f:	0f 86 a0 00 00 00    	jbe    80626e5 <_ZN11__sanitizer9SortArrayEPmm+0xb5>
 8062645:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 806264c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8062650:	8b 0c 24             	mov    (%esp),%ecx
 8062653:	8b 3c 88             	mov    (%eax,%ecx,4),%edi
 8062656:	eb 02                	jmp    806265a <_ZN11__sanitizer9SortArrayEPmm+0x2a>
 8062658:	89 d1                	mov    %edx,%ecx
 806265a:	8d 51 ff             	lea    -0x1(%ecx),%edx
 806265d:	d1 ea                	shr    %edx
 806265f:	8d 2c 88             	lea    (%eax,%ecx,4),%ebp
 8062662:	8d 0c 90             	lea    (%eax,%edx,4),%ecx
 8062665:	8b 31                	mov    (%ecx),%esi
 8062667:	39 fe                	cmp    %edi,%esi
 8062669:	73 09                	jae    8062674 <_ZN11__sanitizer9SortArrayEPmm+0x44>
 806266b:	85 d2                	test   %edx,%edx
 806266d:	89 75 00             	mov    %esi,0x0(%ebp)
 8062670:	89 39                	mov    %edi,(%ecx)
 8062672:	75 e4                	jne    8062658 <_ZN11__sanitizer9SortArrayEPmm+0x28>
 8062674:	83 04 24 01          	addl   $0x1,(%esp)
 8062678:	8b 0c 24             	mov    (%esp),%ecx
 806267b:	3b 4c 24 18          	cmp    0x18(%esp),%ecx
 806267f:	75 cf                	jne    8062650 <_ZN11__sanitizer9SortArrayEPmm+0x20>
 8062681:	8b 0c 24             	mov    (%esp),%ecx
 8062684:	83 e9 01             	sub    $0x1,%ecx
 8062687:	90                   	nop
 8062688:	8b 10                	mov    (%eax),%edx
 806268a:	31 ff                	xor    %edi,%edi
 806268c:	8b 34 88             	mov    (%eax,%ecx,4),%esi
 806268f:	89 30                	mov    %esi,(%eax)
 8062691:	89 14 88             	mov    %edx,(%eax,%ecx,4)
 8062694:	eb 36                	jmp    80626cc <_ZN11__sanitizer9SortArrayEPmm+0x9c>
 8062696:	66 90                	xchg   %ax,%ax
 8062698:	8b 2c b8             	mov    (%eax,%edi,4),%ebp
 806269b:	39 2c 90             	cmp    %ebp,(%eax,%edx,4)
 806269e:	0f 46 d7             	cmovbe %edi,%edx
 80626a1:	39 ce                	cmp    %ecx,%esi
 80626a3:	73 09                	jae    80626ae <_ZN11__sanitizer9SortArrayEPmm+0x7e>
 80626a5:	8b 2c 90             	mov    (%eax,%edx,4),%ebp
 80626a8:	39 2c b0             	cmp    %ebp,(%eax,%esi,4)
 80626ab:	0f 47 d6             	cmova  %esi,%edx
 80626ae:	39 fa                	cmp    %edi,%edx
 80626b0:	74 2e                	je     80626e0 <_ZN11__sanitizer9SortArrayEPmm+0xb0>
 80626b2:	8d 3c b8             	lea    (%eax,%edi,4),%edi
 80626b5:	39 ca                	cmp    %ecx,%edx
 80626b7:	8b 2f                	mov    (%edi),%ebp
 80626b9:	8d 34 90             	lea    (%eax,%edx,4),%esi
 80626bc:	89 2c 24             	mov    %ebp,(%esp)
 80626bf:	8b 2e                	mov    (%esi),%ebp
 80626c1:	89 2f                	mov    %ebp,(%edi)
 80626c3:	8b 3c 24             	mov    (%esp),%edi
 80626c6:	89 3e                	mov    %edi,(%esi)
 80626c8:	73 16                	jae    80626e0 <_ZN11__sanitizer9SortArrayEPmm+0xb0>
 80626ca:	89 d7                	mov    %edx,%edi
 80626cc:	8d 34 3f             	lea    (%edi,%edi,1),%esi
 80626cf:	8d 56 01             	lea    0x1(%esi),%edx
 80626d2:	83 c6 02             	add    $0x2,%esi
 80626d5:	39 ca                	cmp    %ecx,%edx
 80626d7:	72 bf                	jb     8062698 <_ZN11__sanitizer9SortArrayEPmm+0x68>
 80626d9:	89 fa                	mov    %edi,%edx
 80626db:	eb c4                	jmp    80626a1 <_ZN11__sanitizer9SortArrayEPmm+0x71>
 80626dd:	8d 76 00             	lea    0x0(%esi),%esi
 80626e0:	83 e9 01             	sub    $0x1,%ecx
 80626e3:	75 a3                	jne    8062688 <_ZN11__sanitizer9SortArrayEPmm+0x58>
 80626e5:	83 c4 04             	add    $0x4,%esp
 80626e8:	5e                   	pop    %esi
 80626e9:	5f                   	pop    %edi
 80626ea:	5d                   	pop    %ebp
 80626eb:	c3                   	ret    
 80626ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080626f0 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc>:
 80626f0:	55                   	push   %ebp
 80626f1:	57                   	push   %edi
 80626f2:	56                   	push   %esi
 80626f3:	53                   	push   %ebx
 80626f4:	83 ec 2c             	sub    $0x2c,%esp
 80626f7:	8b 7c 24 40          	mov    0x40(%esp),%edi
 80626fb:	e8 f0 73 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062700:	81 c3 00 d9 04 00    	add    $0x4d900,%ebx
 8062706:	8b 6c 24 44          	mov    0x44(%esp),%ebp
 806270a:	8d 47 ff             	lea    -0x1(%edi),%eax
 806270d:	85 f8                	test   %edi,%eax
 806270f:	0f 85 b2 00 00 00    	jne    80627c7 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc+0xd7>
 8062715:	8d 75 ff             	lea    -0x1(%ebp),%esi
 8062718:	85 ee                	test   %ebp,%esi
 806271a:	75 6b                	jne    8062787 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc+0x97>
 806271c:	8b 44 24 48          	mov    0x48(%esp),%eax
 8062720:	8d 0c 2f             	lea    (%edi,%ebp,1),%ecx
 8062723:	89 0c 24             	mov    %ecx,(%esp)
 8062726:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 806272a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806272e:	e8 ad 0a 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8062733:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 8062737:	89 c2                	mov    %eax,%edx
 8062739:	85 f2                	test   %esi,%edx
 806273b:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 806273e:	75 20                	jne    8062760 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc+0x70>
 8062740:	01 d7                	add    %edx,%edi
 8062742:	89 d6                	mov    %edx,%esi
 8062744:	39 c7                	cmp    %eax,%edi
 8062746:	74 0e                	je     8062756 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc+0x66>
 8062748:	29 f8                	sub    %edi,%eax
 806274a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806274e:	89 3c 24             	mov    %edi,(%esp)
 8062751:	e8 5a 03 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8062756:	83 c4 2c             	add    $0x2c,%esp
 8062759:	89 f0                	mov    %esi,%eax
 806275b:	5b                   	pop    %ebx
 806275c:	5e                   	pop    %esi
 806275d:	5f                   	pop    %edi
 806275e:	5d                   	pop    %ebp
 806275f:	c3                   	ret    
 8062760:	8d 34 2a             	lea    (%edx,%ebp,1),%esi
 8062763:	f7 dd                	neg    %ebp
 8062765:	21 ee                	and    %ebp,%esi
 8062767:	01 f7                	add    %esi,%edi
 8062769:	39 f2                	cmp    %esi,%edx
 806276b:	74 d7                	je     8062744 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc+0x54>
 806276d:	89 f1                	mov    %esi,%ecx
 806276f:	29 d1                	sub    %edx,%ecx
 8062771:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8062775:	89 14 24             	mov    %edx,(%esp)
 8062778:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 806277c:	e8 2f 03 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8062781:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8062785:	eb bd                	jmp    8062744 <_ZN11__sanitizer16MmapAlignedOrDieEmmPKc+0x54>
 8062787:	8d 83 40 33 fd ff    	lea    -0x2ccc0(%ebx),%eax
 806278d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062791:	8d 83 84 6b fd ff    	lea    -0x2947c(%ebx),%eax
 8062797:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806279e:	00 
 806279f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80627a6:	00 
 80627a7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80627ae:	00 
 80627af:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80627b6:	00 
 80627b7:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)
 80627be:	00 
 80627bf:	89 04 24             	mov    %eax,(%esp)
 80627c2:	e8 e9 fb ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80627c7:	8d 83 e0 6a fd ff    	lea    -0x29520(%ebx),%eax
 80627cd:	89 44 24 08          	mov    %eax,0x8(%esp)
 80627d1:	8d 83 84 6b fd ff    	lea    -0x2947c(%ebx),%eax
 80627d7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80627de:	00 
 80627df:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80627e6:	00 
 80627e7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80627ee:	00 
 80627ef:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80627f6:	00 
 80627f7:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)
 80627fe:	00 
 80627ff:	89 04 24             	mov    %eax,(%esp)
 8062802:	e8 a9 fb ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062807:	89 f6                	mov    %esi,%esi
 8062809:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062810 <__sanitizer_set_report_path>:
 8062810:	57                   	push   %edi
 8062811:	56                   	push   %esi
 8062812:	53                   	push   %ebx
 8062813:	83 ec 30             	sub    $0x30,%esp
 8062816:	8b 74 24 40          	mov    0x40(%esp),%esi
 806281a:	e8 d1 72 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806281f:	81 c3 e1 d7 04 00    	add    $0x4d7e1,%ebx
 8062825:	85 f6                	test   %esi,%esi
 8062827:	74 44                	je     806286d <__sanitizer_set_report_path+0x5d>
 8062829:	89 34 24             	mov    %esi,(%esp)
 806282c:	e8 1f f3 ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8062831:	3d 9c 0f 00 00       	cmp    $0xf9c,%eax
 8062836:	89 c7                	mov    %eax,%edi
 8062838:	77 3a                	ja     8062874 <__sanitizer_set_report_path+0x64>
 806283a:	8d 83 80 13 5b 01    	lea    0x15b1380(%ebx),%eax
 8062840:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)
 8062847:	00 
 8062848:	89 74 24 04          	mov    %esi,0x4(%esp)
 806284c:	89 04 24             	mov    %eax,(%esp)
 806284f:	e8 8c f3 ff ff       	call   8061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 8062854:	c6 84 3b 80 13 5b 01 	movb   $0x0,0x15b1380(%ebx,%edi,1)
 806285b:	00 
 806285c:	c7 83 e8 00 00 00 ff 	movl   $0xffffffff,0xe8(%ebx)
 8062863:	ff ff ff 
 8062866:	c6 83 80 23 5b 01 01 	movb   $0x1,0x15b2380(%ebx)
 806286d:	83 c4 30             	add    $0x30,%esp
 8062870:	5b                   	pop    %ebx
 8062871:	5e                   	pop    %esi
 8062872:	5f                   	pop    %edi
 8062873:	c3                   	ret    
 8062874:	0f be 46 07          	movsbl 0x7(%esi),%eax
 8062878:	89 44 24 20          	mov    %eax,0x20(%esp)
 806287c:	0f be 46 06          	movsbl 0x6(%esi),%eax
 8062880:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8062884:	0f be 46 05          	movsbl 0x5(%esi),%eax
 8062888:	89 44 24 18          	mov    %eax,0x18(%esp)
 806288c:	0f be 46 04          	movsbl 0x4(%esi),%eax
 8062890:	89 44 24 14          	mov    %eax,0x14(%esp)
 8062894:	0f be 46 03          	movsbl 0x3(%esi),%eax
 8062898:	89 44 24 10          	mov    %eax,0x10(%esp)
 806289c:	0f be 46 02          	movsbl 0x2(%esi),%eax
 80628a0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80628a4:	0f be 46 01          	movsbl 0x1(%esi),%eax
 80628a8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80628ac:	0f be 06             	movsbl (%esi),%eax
 80628af:	89 44 24 04          	mov    %eax,0x4(%esp)
 80628b3:	8d 83 c8 6b fd ff    	lea    -0x29438(%ebx),%eax
 80628b9:	89 04 24             	mov    %eax,(%esp)
 80628bc:	e8 7f ee ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80628c1:	e8 9a f9 ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 80628c6:	8d 76 00             	lea    0x0(%esi),%esi
 80628c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080628d0 <__sanitizer_set_report_fd>:
 80628d0:	53                   	push   %ebx
 80628d1:	e8 1a 72 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80628d6:	81 c3 2a d7 04 00    	add    $0x4d72a,%ebx
 80628dc:	83 ec 18             	sub    $0x18,%esp
 80628df:	8b 83 e8 00 00 00    	mov    0xe8(%ebx),%eax
 80628e5:	8d 50 ff             	lea    -0x1(%eax),%edx
 80628e8:	83 fa 01             	cmp    $0x1,%edx
 80628eb:	77 13                	ja     8062900 <__sanitizer_set_report_fd+0x30>
 80628ed:	8b 44 24 20          	mov    0x20(%esp),%eax
 80628f1:	89 83 e8 00 00 00    	mov    %eax,0xe8(%ebx)
 80628f7:	83 c4 18             	add    $0x18,%esp
 80628fa:	5b                   	pop    %ebx
 80628fb:	c3                   	ret    
 80628fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8062900:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062903:	74 e8                	je     80628ed <__sanitizer_set_report_fd+0x1d>
 8062905:	89 04 24             	mov    %eax,(%esp)
 8062908:	e8 03 27 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 806290d:	8b 44 24 20          	mov    0x20(%esp),%eax
 8062911:	89 83 e8 00 00 00    	mov    %eax,0xe8(%ebx)
 8062917:	83 c4 18             	add    $0x18,%esp
 806291a:	5b                   	pop    %ebx
 806291b:	c3                   	ret    
 806291c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08062920 <__sanitizer_sandbox_on_notify>:
 8062920:	53                   	push   %ebx
 8062921:	e8 ca 71 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062926:	81 c3 da d6 04 00    	add    $0x4d6da,%ebx
 806292c:	83 ec 08             	sub    $0x8,%esp
 806292f:	e8 2c 2d 00 00       	call   8065660 <_ZN11__sanitizer20PrepareForSandboxingEv>
 8062934:	83 c4 08             	add    $0x8,%esp
 8062937:	5b                   	pop    %ebx
 8062938:	c3                   	ret    
 8062939:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08062940 <__sanitizer_report_error_summary>:
 8062940:	53                   	push   %ebx
 8062941:	e8 aa 71 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062946:	81 c3 ba d6 04 00    	add    $0x4d6ba,%ebx
 806294c:	83 ec 18             	sub    $0x18,%esp
 806294f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8062953:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062957:	8d 83 fe 6a fd ff    	lea    -0x29502(%ebx),%eax
 806295d:	89 04 24             	mov    %eax,(%esp)
 8062960:	e8 1b ed ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8062965:	83 c4 18             	add    $0x18,%esp
 8062968:	5b                   	pop    %ebx
 8062969:	c3                   	ret    
 806296a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08062970 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_iS1_>:
 8062970:	55                   	push   %ebp
 8062971:	57                   	push   %edi
 8062972:	56                   	push   %esi
 8062973:	53                   	push   %ebx
 8062974:	e8 77 71 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062979:	81 c3 87 d6 04 00    	add    $0x4d687,%ebx
 806297f:	83 ec 2c             	sub    $0x2c,%esp
 8062982:	c7 04 24 00 04 00 00 	movl   $0x400,(%esp)
 8062989:	8b 7c 24 44          	mov    0x44(%esp),%edi
 806298d:	8b 6c 24 4c          	mov    0x4c(%esp),%ebp
 8062991:	8d 83 f7 68 fd ff    	lea    -0x29709(%ebx),%eax
 8062997:	89 44 24 04          	mov    %eax,0x4(%esp)
 806299b:	e8 40 08 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 80629a0:	85 ed                	test   %ebp,%ebp
 80629a2:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
 80629a9:	00 
 80629aa:	89 c6                	mov    %eax,%esi
 80629ac:	8d 83 0b 6b fd ff    	lea    -0x294f5(%ebx),%eax
 80629b2:	0f 44 e8             	cmove  %eax,%ebp
 80629b5:	85 ff                	test   %edi,%edi
 80629b7:	0f 44 f8             	cmove  %eax,%edi
 80629ba:	8b 44 24 48          	mov    0x48(%esp),%eax
 80629be:	89 6c 24 1c          	mov    %ebp,0x1c(%esp)
 80629c2:	89 7c 24 14          	mov    %edi,0x14(%esp)
 80629c6:	89 34 24             	mov    %esi,(%esp)
 80629c9:	89 44 24 18          	mov    %eax,0x18(%esp)
 80629cd:	8b 44 24 40          	mov    0x40(%esp),%eax
 80629d1:	89 44 24 10          	mov    %eax,0x10(%esp)
 80629d5:	8b 83 ec 00 00 00    	mov    0xec(%ebx),%eax
 80629db:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80629df:	8d 83 0e 6b fd ff    	lea    -0x294f2(%ebx),%eax
 80629e5:	89 44 24 08          	mov    %eax,0x8(%esp)
 80629e9:	e8 22 ed ff ff       	call   8061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 80629ee:	89 34 24             	mov    %esi,(%esp)
 80629f1:	e8 4a ff ff ff       	call   8062940 <__sanitizer_report_error_summary>
 80629f6:	89 34 24             	mov    %esi,(%esp)
 80629f9:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
 8062a00:	00 
 8062a01:	e8 aa 00 00 00       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8062a06:	83 c4 2c             	add    $0x2c,%esp
 8062a09:	5b                   	pop    %ebx
 8062a0a:	5e                   	pop    %esi
 8062a0b:	5f                   	pop    %edi
 8062a0c:	5d                   	pop    %ebp
 8062a0d:	c3                   	ret    
 8062a0e:	66 90                	xchg   %ax,%ax

08062a10 <_ZN11__sanitizer11GetPageSizeEv>:
 8062a10:	53                   	push   %ebx
 8062a11:	e8 da 70 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062a16:	81 c3 ea d5 04 00    	add    $0x4d5ea,%ebx
 8062a1c:	83 ec 18             	sub    $0x18,%esp
 8062a1f:	c7 04 24 1e 00 00 00 	movl   $0x1e,(%esp)
 8062a26:	e8 15 6d fe ff       	call   8049740 <sysconf@plt>
 8062a2b:	83 c4 18             	add    $0x18,%esp
 8062a2e:	5b                   	pop    %ebx
 8062a2f:	c3                   	ret    

08062a30 <_ZN11__sanitizer18GetMmapGranularityEv>:
 8062a30:	53                   	push   %ebx
 8062a31:	e8 ba 70 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062a36:	81 c3 ca d5 04 00    	add    $0x4d5ca,%ebx
 8062a3c:	83 ec 18             	sub    $0x18,%esp
 8062a3f:	c7 04 24 1e 00 00 00 	movl   $0x1e,(%esp)
 8062a46:	e8 f5 6c fe ff       	call   8049740 <sysconf@plt>
 8062a4b:	83 c4 18             	add    $0x18,%esp
 8062a4e:	5b                   	pop    %ebx
 8062a4f:	c3                   	ret    

08062a50 <_ZN11__sanitizer6GetPidEv>:
 8062a50:	53                   	push   %ebx
 8062a51:	e8 9a 70 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062a56:	81 c3 aa d5 04 00    	add    $0x4d5aa,%ebx
 8062a5c:	83 ec 08             	sub    $0x8,%esp
 8062a5f:	e8 5c 6d fe ff       	call   80497c0 <getpid@plt>
 8062a64:	83 c4 08             	add    $0x8,%esp
 8062a67:	5b                   	pop    %ebx
 8062a68:	c3                   	ret    
 8062a69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08062a70 <_ZN11__sanitizer6GetUidEv>:
 8062a70:	53                   	push   %ebx
 8062a71:	e8 7a 70 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062a76:	81 c3 8a d5 04 00    	add    $0x4d58a,%ebx
 8062a7c:	83 ec 08             	sub    $0x8,%esp
 8062a7f:	e8 cc 6c fe ff       	call   8049750 <getuid@plt>
 8062a84:	83 c4 08             	add    $0x8,%esp
 8062a87:	5b                   	pop    %ebx
 8062a88:	c3                   	ret    
 8062a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08062a90 <_ZN11__sanitizer13GetThreadSelfEv>:
 8062a90:	53                   	push   %ebx
 8062a91:	e8 5a 70 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062a96:	81 c3 6a d5 04 00    	add    $0x4d56a,%ebx
 8062a9c:	83 ec 08             	sub    $0x8,%esp
 8062a9f:	e8 2c 6c fe ff       	call   80496d0 <pthread_self@plt>
 8062aa4:	83 c4 08             	add    $0x8,%esp
 8062aa7:	5b                   	pop    %ebx
 8062aa8:	c3                   	ret    
 8062aa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>:
 8062ab0:	56                   	push   %esi
 8062ab1:	53                   	push   %ebx
 8062ab2:	83 ec 24             	sub    $0x24,%esp
 8062ab5:	8b 74 24 30          	mov    0x30(%esp),%esi
 8062ab9:	e8 32 70 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062abe:	81 c3 42 d5 04 00    	add    $0x4d542,%ebx
 8062ac4:	85 f6                	test   %esi,%esi
 8062ac6:	75 08                	jne    8062ad0 <_ZN11__sanitizer10UnmapOrDieEPvm+0x20>
 8062ac8:	83 c4 24             	add    $0x24,%esp
 8062acb:	5b                   	pop    %ebx
 8062acc:	5e                   	pop    %esi
 8062acd:	c3                   	ret    
 8062ace:	66 90                	xchg   %ax,%ax
 8062ad0:	8b 44 24 34          	mov    0x34(%esp),%eax
 8062ad4:	85 c0                	test   %eax,%eax
 8062ad6:	74 f0                	je     8062ac8 <_ZN11__sanitizer10UnmapOrDieEPvm+0x18>
 8062ad8:	8b 44 24 34          	mov    0x34(%esp),%eax
 8062adc:	89 34 24             	mov    %esi,(%esp)
 8062adf:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062ae3:	e8 f8 24 00 00       	call   8064fe0 <_ZN11__sanitizer15internal_munmapEPvm>
 8062ae8:	85 c0                	test   %eax,%eax
 8062aea:	74 dc                	je     8062ac8 <_ZN11__sanitizer10UnmapOrDieEPvm+0x18>
 8062aec:	8b 44 24 34          	mov    0x34(%esp),%eax
 8062af0:	89 74 24 10          	mov    %esi,0x10(%esp)
 8062af4:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8062af8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062afc:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
 8062b02:	8b 00                	mov    (%eax),%eax
 8062b04:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062b08:	8d 83 08 6c fd ff    	lea    -0x293f8(%ebx),%eax
 8062b0e:	89 04 24             	mov    %eax,(%esp)
 8062b11:	e8 2a ec ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8062b16:	8d 83 48 6c fd ff    	lea    -0x293b8(%ebx),%eax
 8062b1c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062b20:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 8062b26:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062b2d:	00 
 8062b2e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062b35:	00 
 8062b36:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062b3d:	00 
 8062b3e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062b45:	00 
 8062b46:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)
 8062b4d:	00 
 8062b4e:	89 04 24             	mov    %eax,(%esp)
 8062b51:	e8 5a f8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062b56:	8d 76 00             	lea    0x0(%esi),%esi
 8062b59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062b60 <_ZN11__sanitizer18MmapFixedNoReserveEmm>:
 8062b60:	57                   	push   %edi
 8062b61:	56                   	push   %esi
 8062b62:	53                   	push   %ebx
 8062b63:	e8 88 6f fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062b68:	81 c3 98 d4 04 00    	add    $0x4d498,%ebx
 8062b6e:	83 ec 20             	sub    $0x20,%esp
 8062b71:	8b 74 24 34          	mov    0x34(%esp),%esi
 8062b75:	e8 96 f6 ff ff       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 8062b7a:	8d 50 ff             	lea    -0x1(%eax),%edx
 8062b7d:	85 c2                	test   %eax,%edx
 8062b7f:	0f 85 91 00 00 00    	jne    8062c16 <_ZN11__sanitizer18MmapFixedNoReserveEmm+0xb6>
 8062b85:	89 c2                	mov    %eax,%edx
 8062b87:	f7 da                	neg    %edx
 8062b89:	8d 44 30 ff          	lea    -0x1(%eax,%esi,1),%eax
 8062b8d:	21 d0                	and    %edx,%eax
 8062b8f:	23 54 24 30          	and    0x30(%esp),%edx
 8062b93:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062b9a:	00 
 8062b9b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062ba2:	00 
 8062ba3:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 8062baa:	ff 
 8062bab:	c7 44 24 0c 32 40 00 	movl   $0x4032,0xc(%esp)
 8062bb2:	00 
 8062bb3:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 8062bba:	00 
 8062bbb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062bbf:	89 14 24             	mov    %edx,(%esp)
 8062bc2:	e8 b9 23 00 00       	call   8064f80 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 8062bc7:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062bca:	89 c7                	mov    %eax,%edi
 8062bcc:	74 0a                	je     8062bd8 <_ZN11__sanitizer18MmapFixedNoReserveEmm+0x78>
 8062bce:	83 c4 20             	add    $0x20,%esp
 8062bd1:	89 f8                	mov    %edi,%eax
 8062bd3:	5b                   	pop    %ebx
 8062bd4:	5e                   	pop    %esi
 8062bd5:	5f                   	pop    %edi
 8062bd6:	c3                   	ret    
 8062bd7:	90                   	nop
 8062bd8:	e8 f3 6c fe ff       	call   80498d0 <__errno_location@plt>
 8062bdd:	8b 00                	mov    (%eax),%eax
 8062bdf:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8062be3:	89 74 24 08          	mov    %esi,0x8(%esp)
 8062be7:	89 44 24 14          	mov    %eax,0x14(%esp)
 8062beb:	8b 44 24 30          	mov    0x30(%esp),%eax
 8062bef:	89 44 24 10          	mov    %eax,0x10(%esp)
 8062bf3:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
 8062bf9:	8b 00                	mov    (%eax),%eax
 8062bfb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062bff:	8d 83 b0 6c fd ff    	lea    -0x29350(%ebx),%eax
 8062c05:	89 04 24             	mov    %eax,(%esp)
 8062c08:	e8 33 eb ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8062c0d:	83 c4 20             	add    $0x20,%esp
 8062c10:	89 f8                	mov    %edi,%eax
 8062c12:	5b                   	pop    %ebx
 8062c13:	5e                   	pop    %esi
 8062c14:	5f                   	pop    %edi
 8062c15:	c3                   	ret    
 8062c16:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 8062c1c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062c20:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 8062c26:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062c2d:	00 
 8062c2e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062c35:	00 
 8062c36:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062c3d:	00 
 8062c3e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062c45:	00 
 8062c46:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 8062c4d:	00 
 8062c4e:	89 04 24             	mov    %eax,(%esp)
 8062c51:	e8 5a f7 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062c56:	8d 76 00             	lea    0x0(%esi),%esi
 8062c59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062c60 <_ZN11__sanitizer14MmapFixedOrDieEmm>:
 8062c60:	56                   	push   %esi
 8062c61:	53                   	push   %ebx
 8062c62:	e8 89 6e fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062c67:	81 c3 99 d3 04 00    	add    $0x4d399,%ebx
 8062c6d:	83 ec 24             	sub    $0x24,%esp
 8062c70:	8b 74 24 34          	mov    0x34(%esp),%esi
 8062c74:	e8 97 f5 ff ff       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 8062c79:	8d 50 ff             	lea    -0x1(%eax),%edx
 8062c7c:	85 c2                	test   %eax,%edx
 8062c7e:	75 4d                	jne    8062ccd <_ZN11__sanitizer14MmapFixedOrDieEmm+0x6d>
 8062c80:	89 c2                	mov    %eax,%edx
 8062c82:	f7 da                	neg    %edx
 8062c84:	8d 44 30 ff          	lea    -0x1(%eax,%esi,1),%eax
 8062c88:	21 d0                	and    %edx,%eax
 8062c8a:	23 54 24 30          	and    0x30(%esp),%edx
 8062c8e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062c95:	00 
 8062c96:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062c9d:	00 
 8062c9e:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 8062ca5:	ff 
 8062ca6:	c7 44 24 0c 32 00 00 	movl   $0x32,0xc(%esp)
 8062cad:	00 
 8062cae:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 8062cb5:	00 
 8062cb6:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062cba:	89 14 24             	mov    %edx,(%esp)
 8062cbd:	e8 be 22 00 00       	call   8064f80 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 8062cc2:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062cc5:	74 46                	je     8062d0d <_ZN11__sanitizer14MmapFixedOrDieEmm+0xad>
 8062cc7:	83 c4 24             	add    $0x24,%esp
 8062cca:	5b                   	pop    %ebx
 8062ccb:	5e                   	pop    %esi
 8062ccc:	c3                   	ret    
 8062ccd:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 8062cd3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062cd7:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 8062cdd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062ce4:	00 
 8062ce5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062cec:	00 
 8062ced:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062cf4:	00 
 8062cf5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062cfc:	00 
 8062cfd:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 8062d04:	00 
 8062d05:	89 04 24             	mov    %eax,(%esp)
 8062d08:	e8 a3 f6 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062d0d:	e8 be 6b fe ff       	call   80498d0 <__errno_location@plt>
 8062d12:	8b 00                	mov    (%eax),%eax
 8062d14:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8062d18:	89 74 24 08          	mov    %esi,0x8(%esp)
 8062d1c:	89 44 24 14          	mov    %eax,0x14(%esp)
 8062d20:	8b 44 24 30          	mov    0x30(%esp),%eax
 8062d24:	89 44 24 10          	mov    %eax,0x10(%esp)
 8062d28:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
 8062d2e:	8b 00                	mov    (%eax),%eax
 8062d30:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062d34:	8d 83 b0 6c fd ff    	lea    -0x29350(%ebx),%eax
 8062d3a:	89 04 24             	mov    %eax,(%esp)
 8062d3d:	e8 fe e9 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8062d42:	8d 83 f4 6c fd ff    	lea    -0x2930c(%ebx),%eax
 8062d48:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062d4c:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 8062d52:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062d59:	00 
 8062d5a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062d61:	00 
 8062d62:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062d69:	00 
 8062d6a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062d71:	00 
 8062d72:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)
 8062d79:	00 
 8062d7a:	89 04 24             	mov    %eax,(%esp)
 8062d7d:	e8 2e f6 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062d82:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8062d89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062d90 <_ZN11__sanitizer8MprotectEmm>:
 8062d90:	53                   	push   %ebx
 8062d91:	83 ec 28             	sub    $0x28,%esp
 8062d94:	8b 44 24 34          	mov    0x34(%esp),%eax
 8062d98:	e8 53 6d fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062d9d:	81 c3 63 d2 04 00    	add    $0x4d263,%ebx
 8062da3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062daa:	00 
 8062dab:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062db2:	00 
 8062db3:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062db7:	8b 44 24 30          	mov    0x30(%esp),%eax
 8062dbb:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 8062dc2:	ff 
 8062dc3:	c7 44 24 0c 32 40 00 	movl   $0x4032,0xc(%esp)
 8062dca:	00 
 8062dcb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8062dd2:	00 
 8062dd3:	89 04 24             	mov    %eax,(%esp)
 8062dd6:	e8 a5 21 00 00       	call   8064f80 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 8062ddb:	83 c4 28             	add    $0x28,%esp
 8062dde:	5b                   	pop    %ebx
 8062ddf:	c3                   	ret    

08062de0 <_ZN11__sanitizer25FlushUnneededShadowMemoryEmm>:
 8062de0:	53                   	push   %ebx
 8062de1:	83 ec 18             	sub    $0x18,%esp
 8062de4:	8b 44 24 24          	mov    0x24(%esp),%eax
 8062de8:	e8 03 6d fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062ded:	81 c3 13 d2 04 00    	add    $0x4d213,%ebx
 8062df3:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)
 8062dfa:	00 
 8062dfb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8062dff:	8b 44 24 20          	mov    0x20(%esp),%eax
 8062e03:	89 04 24             	mov    %eax,(%esp)
 8062e06:	e8 65 6b fe ff       	call   8049970 <madvise@plt>
 8062e0b:	83 c4 18             	add    $0x18,%esp
 8062e0e:	5b                   	pop    %ebx
 8062e0f:	c3                   	ret    

08062e10 <_ZN11__sanitizer15MapFileToMemoryEPKcPm>:
 8062e10:	55                   	push   %ebp
 8062e11:	57                   	push   %edi
 8062e12:	56                   	push   %esi
 8062e13:	53                   	push   %ebx
 8062e14:	83 ec 2c             	sub    $0x2c,%esp
 8062e17:	e8 d4 6c fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062e1c:	81 c3 e4 d1 04 00    	add    $0x4d1e4,%ebx
 8062e22:	8b 44 24 40          	mov    0x40(%esp),%eax
 8062e26:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8062e2d:	00 
 8062e2e:	89 04 24             	mov    %eax,(%esp)
 8062e31:	e8 7a 22 00 00       	call   80650b0 <_ZN11__sanitizer8OpenFileEPKcb>
 8062e36:	89 c7                	mov    %eax,%edi
 8062e38:	89 c5                	mov    %eax,%ebp
 8062e3a:	c1 ff 1f             	sar    $0x1f,%edi
 8062e3d:	89 f8                	mov    %edi,%eax
 8062e3f:	21 e8                	and    %ebp,%eax
 8062e41:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062e44:	74 7d                	je     8062ec3 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xb3>
 8062e46:	89 2c 24             	mov    %ebp,(%esp)
 8062e49:	e8 f2 23 00 00       	call   8065240 <_ZN11__sanitizer17internal_filesizeEi>
 8062e4e:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062e51:	89 c7                	mov    %eax,%edi
 8062e53:	0f 84 2a 01 00 00    	je     8062f83 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x173>
 8062e59:	85 c0                	test   %eax,%eax
 8062e5b:	0f 84 e2 00 00 00    	je     8062f43 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x133>
 8062e61:	e8 aa f3 ff ff       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 8062e66:	8d 70 ff             	lea    -0x1(%eax),%esi
 8062e69:	21 c6                	and    %eax,%esi
 8062e6b:	0f 85 92 00 00 00    	jne    8062f03 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xf3>
 8062e71:	89 c1                	mov    %eax,%ecx
 8062e73:	f7 d9                	neg    %ecx
 8062e75:	8d 44 07 ff          	lea    -0x1(%edi,%eax,1),%eax
 8062e79:	21 c1                	and    %eax,%ecx
 8062e7b:	8b 44 24 44          	mov    0x44(%esp),%eax
 8062e7f:	89 08                	mov    %ecx,(%eax)
 8062e81:	89 6c 24 10          	mov    %ebp,0x10(%esp)
 8062e85:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062e8c:	00 
 8062e8d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062e94:	00 
 8062e95:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 8062e9c:	00 
 8062e9d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 8062ea4:	00 
 8062ea5:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8062ea9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8062eb0:	e8 cb 20 00 00       	call   8064f80 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 8062eb5:	83 f8 ff             	cmp    $0xffffffff,%eax
 8062eb8:	0f 44 c6             	cmove  %esi,%eax
 8062ebb:	83 c4 2c             	add    $0x2c,%esp
 8062ebe:	5b                   	pop    %ebx
 8062ebf:	5e                   	pop    %esi
 8062ec0:	5f                   	pop    %edi
 8062ec1:	5d                   	pop    %ebp
 8062ec2:	c3                   	ret    
 8062ec3:	8d 83 c7 6d fd ff    	lea    -0x29239(%ebx),%eax
 8062ec9:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062ecd:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 8062ed3:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%esp)
 8062eda:	ff 
 8062edb:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
 8062ee2:	ff 
 8062ee3:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
 8062eea:	ff 
 8062eeb:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 8062ef2:	ff 
 8062ef3:	c7 44 24 04 80 00 00 	movl   $0x80,0x4(%esp)
 8062efa:	00 
 8062efb:	89 04 24             	mov    %eax,(%esp)
 8062efe:	e8 ad f4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062f03:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 8062f09:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062f0d:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 8062f13:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062f1a:	00 
 8062f1b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062f22:	00 
 8062f23:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062f2a:	00 
 8062f2b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062f32:	00 
 8062f33:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 8062f3a:	00 
 8062f3b:	89 04 24             	mov    %eax,(%esp)
 8062f3e:	e8 6d f4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062f43:	8d 83 fa 6d fd ff    	lea    -0x29206(%ebx),%eax
 8062f49:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062f4d:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 8062f53:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8062f5a:	00 
 8062f5b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062f62:	00 
 8062f63:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8062f6a:	00 
 8062f6b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062f72:	00 
 8062f73:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)
 8062f7a:	00 
 8062f7b:	89 04 24             	mov    %eax,(%esp)
 8062f7e:	e8 2d f4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062f83:	8d 83 e0 6d fd ff    	lea    -0x29220(%ebx),%eax
 8062f89:	89 44 24 08          	mov    %eax,0x8(%esp)
 8062f8d:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 8062f93:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%esp)
 8062f9a:	ff 
 8062f9b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8062fa2:	00 
 8062fa3:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
 8062faa:	ff 
 8062fab:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8062fb2:	00 
 8062fb3:	c7 44 24 04 82 00 00 	movl   $0x82,0x4(%esp)
 8062fba:	00 
 8062fbb:	89 04 24             	mov    %eax,(%esp)
 8062fbe:	e8 ed f3 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8062fc3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8062fc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08062fd0 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm>:
 8062fd0:	55                   	push   %ebp
 8062fd1:	57                   	push   %edi
 8062fd2:	56                   	push   %esi
 8062fd3:	53                   	push   %ebx
 8062fd4:	e8 17 6b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8062fd9:	81 c3 27 d0 04 00    	add    $0x4d027,%ebx
 8062fdf:	83 ec 5c             	sub    $0x5c,%esp
 8062fe2:	8d 6c 24 40          	lea    0x40(%esp),%ebp
 8062fe6:	8b 7c 24 70          	mov    0x70(%esp),%edi
 8062fea:	89 2c 24             	mov    %ebp,(%esp)
 8062fed:	8b 74 24 74          	mov    0x74(%esp),%esi
 8062ff1:	e8 ea 26 00 00       	call   80656e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Ev>
 8062ff6:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 8062ffa:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8062ffe:	8d 44 24 38          	lea    0x38(%esp),%eax
 8063002:	89 44 24 28          	mov    %eax,0x28(%esp)
 8063006:	eb 22                	jmp    806302a <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x5a>
 8063008:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 806300c:	8b 54 24 38          	mov    0x38(%esp),%edx
 8063010:	39 d0                	cmp    %edx,%eax
 8063012:	72 67                	jb     806307b <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xab>
 8063014:	39 f7                	cmp    %esi,%edi
 8063016:	0f 87 9f 00 00 00    	ja     80630bb <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xeb>
 806301c:	39 f8                	cmp    %edi,%eax
 806301e:	0f 92 c1             	setb   %cl
 8063021:	39 f2                	cmp    %esi,%edx
 8063023:	0f 97 c0             	seta   %al
 8063026:	08 c8                	or     %cl,%al
 8063028:	74 39                	je     8063063 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x93>
 806302a:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 806302e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063035:	00 
 8063036:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806303d:	00 
 806303e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063045:	00 
 8063046:	89 44 24 08          	mov    %eax,0x8(%esp)
 806304a:	8b 44 24 28          	mov    0x28(%esp),%eax
 806304e:	89 2c 24             	mov    %ebp,(%esp)
 8063051:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063055:	e8 26 27 00 00       	call   8065780 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm>
 806305a:	84 c0                	test   %al,%al
 806305c:	75 aa                	jne    8063008 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x38>
 806305e:	b8 01 00 00 00       	mov    $0x1,%eax
 8063063:	89 2c 24             	mov    %ebp,(%esp)
 8063066:	89 44 24 28          	mov    %eax,0x28(%esp)
 806306a:	e8 c1 24 00 00       	call   8065530 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 806306f:	8b 44 24 28          	mov    0x28(%esp),%eax
 8063073:	83 c4 5c             	add    $0x5c,%esp
 8063076:	5b                   	pop    %ebx
 8063077:	5e                   	pop    %esi
 8063078:	5f                   	pop    %edi
 8063079:	5d                   	pop    %ebp
 806307a:	c3                   	ret    
 806307b:	8d 83 0c 6e fd ff    	lea    -0x291f4(%ebx),%eax
 8063081:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063085:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 806308b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063092:	00 
 8063093:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806309a:	00 
 806309b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80630a2:	00 
 80630a3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80630aa:	00 
 80630ab:	c7 44 24 04 8c 00 00 	movl   $0x8c,0x4(%esp)
 80630b2:	00 
 80630b3:	89 04 24             	mov    %eax,(%esp)
 80630b6:	e8 f5 f2 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80630bb:	8d 83 26 6e fd ff    	lea    -0x291da(%ebx),%eax
 80630c1:	89 44 24 08          	mov    %eax,0x8(%esp)
 80630c5:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 80630cb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80630d2:	00 
 80630d3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80630da:	00 
 80630db:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80630e2:	00 
 80630e3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80630ea:	00 
 80630eb:	c7 44 24 04 8d 00 00 	movl   $0x8d,0x4(%esp)
 80630f2:	00 
 80630f3:	89 04 24             	mov    %eax,(%esp)
 80630f6:	e8 b5 f2 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80630fb:	90                   	nop
 80630fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08063100 <_ZN11__sanitizer14DumpProcessMapEv>:
 8063100:	55                   	push   %ebp
 8063101:	57                   	push   %edi
 8063102:	56                   	push   %esi
 8063103:	53                   	push   %ebx
 8063104:	e8 e7 69 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063109:	81 c3 f7 ce 04 00    	add    $0x4cef7,%ebx
 806310f:	83 ec 4c             	sub    $0x4c,%esp
 8063112:	8d 7c 24 30          	lea    0x30(%esp),%edi
 8063116:	89 3c 24             	mov    %edi,(%esp)
 8063119:	8d 6c 24 2c          	lea    0x2c(%esp),%ebp
 806311d:	e8 be 25 00 00       	call   80656e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Ev>
 8063122:	8d 83 9f 6e fd ff    	lea    -0x29161(%ebx),%eax
 8063128:	89 44 24 04          	mov    %eax,0x4(%esp)
 806312c:	c7 04 24 ff 0f 00 00 	movl   $0xfff,(%esp)
 8063133:	e8 a8 00 00 00       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 8063138:	89 c6                	mov    %eax,%esi
 806313a:	8d 83 40 6e fd ff    	lea    -0x291c0(%ebx),%eax
 8063140:	89 04 24             	mov    %eax,(%esp)
 8063143:	e8 f8 e5 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8063148:	8d 44 24 28          	lea    0x28(%esp),%eax
 806314c:	89 44 24 18          	mov    %eax,0x18(%esp)
 8063150:	8d 83 5d 6e fd ff    	lea    -0x291a3(%ebx),%eax
 8063156:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 806315a:	eb 24                	jmp    8063180 <_ZN11__sanitizer14DumpProcessMapEv+0x80>
 806315c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8063160:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8063164:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8063168:	89 44 24 08          	mov    %eax,0x8(%esp)
 806316c:	8b 44 24 28          	mov    0x28(%esp),%eax
 8063170:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063174:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8063178:	89 04 24             	mov    %eax,(%esp)
 806317b:	e8 00 e5 ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8063180:	8b 44 24 18          	mov    0x18(%esp),%eax
 8063184:	c7 44 24 14 ff 0f 00 	movl   $0xfff,0x14(%esp)
 806318b:	00 
 806318c:	89 74 24 10          	mov    %esi,0x10(%esp)
 8063190:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063197:	00 
 8063198:	89 6c 24 08          	mov    %ebp,0x8(%esp)
 806319c:	89 44 24 04          	mov    %eax,0x4(%esp)
 80631a0:	89 3c 24             	mov    %edi,(%esp)
 80631a3:	e8 d8 25 00 00       	call   8065780 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm>
 80631a8:	84 c0                	test   %al,%al
 80631aa:	75 b4                	jne    8063160 <_ZN11__sanitizer14DumpProcessMapEv+0x60>
 80631ac:	8d 83 68 6e fd ff    	lea    -0x29198(%ebx),%eax
 80631b2:	89 04 24             	mov    %eax,(%esp)
 80631b5:	e8 86 e5 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80631ba:	89 34 24             	mov    %esi,(%esp)
 80631bd:	c7 44 24 04 ff 0f 00 	movl   $0xfff,0x4(%esp)
 80631c4:	00 
 80631c5:	e8 e6 f8 ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 80631ca:	89 3c 24             	mov    %edi,(%esp)
 80631cd:	e8 5e 23 00 00       	call   8065530 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 80631d2:	83 c4 4c             	add    $0x4c,%esp
 80631d5:	5b                   	pop    %ebx
 80631d6:	5e                   	pop    %esi
 80631d7:	5f                   	pop    %edi
 80631d8:	5d                   	pop    %ebp
 80631d9:	c3                   	ret    
 80631da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>:
 80631e0:	56                   	push   %esi
 80631e1:	53                   	push   %ebx
 80631e2:	e8 09 69 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80631e7:	81 c3 19 ce 04 00    	add    $0x4ce19,%ebx
 80631ed:	83 ec 24             	sub    $0x24,%esp
 80631f0:	e8 1b f0 ff ff       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 80631f5:	8d 50 ff             	lea    -0x1(%eax),%edx
 80631f8:	85 c2                	test   %eax,%edx
 80631fa:	0f 85 04 01 00 00    	jne    8063304 <_ZN11__sanitizer9MmapOrDieEmPKc+0x124>
 8063200:	8b 54 24 30          	mov    0x30(%esp),%edx
 8063204:	89 c6                	mov    %eax,%esi
 8063206:	f7 de                	neg    %esi
 8063208:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806320f:	00 
 8063210:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063217:	00 
 8063218:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax
 806321c:	21 c6                	and    %eax,%esi
 806321e:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 8063225:	ff 
 8063226:	c7 44 24 0c 22 00 00 	movl   $0x22,0xc(%esp)
 806322d:	00 
 806322e:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
 8063235:	00 
 8063236:	89 74 24 04          	mov    %esi,0x4(%esp)
 806323a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8063241:	e8 3a 1d 00 00       	call   8064f80 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 8063246:	83 f8 ff             	cmp    $0xffffffff,%eax
 8063249:	74 0d                	je     8063258 <_ZN11__sanitizer9MmapOrDieEmPKc+0x78>
 806324b:	83 c4 24             	add    $0x24,%esp
 806324e:	5b                   	pop    %ebx
 806324f:	5e                   	pop    %esi
 8063250:	c3                   	ret    
 8063251:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8063258:	8b 83 84 23 5b 01    	mov    0x15b2384(%ebx),%eax
 806325e:	85 c0                	test   %eax,%eax
 8063260:	74 16                	je     8063278 <_ZN11__sanitizer9MmapOrDieEmPKc+0x98>
 8063262:	8d 83 84 6e fd ff    	lea    -0x2917c(%ebx),%eax
 8063268:	89 04 24             	mov    %eax,(%esp)
 806326b:	e8 10 f2 ff ff       	call   8062480 <_ZN11__sanitizer8RawWriteEPKc>
 8063270:	e8 eb ef ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 8063275:	8d 76 00             	lea    0x0(%esi),%esi
 8063278:	c7 83 84 23 5b 01 01 	movl   $0x1,0x15b2384(%ebx)
 806327f:	00 00 00 
 8063282:	e8 49 66 fe ff       	call   80498d0 <__errno_location@plt>
 8063287:	8b 00                	mov    (%eax),%eax
 8063289:	89 04 24             	mov    %eax,(%esp)
 806328c:	e8 6f 65 fe ff       	call   8049800 <strerror@plt>
 8063291:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8063295:	89 74 24 08          	mov    %esi,0x8(%esp)
 8063299:	89 44 24 14          	mov    %eax,0x14(%esp)
 806329d:	8b 44 24 34          	mov    0x34(%esp),%eax
 80632a1:	89 44 24 10          	mov    %eax,0x10(%esp)
 80632a5:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
 80632ab:	8b 00                	mov    (%eax),%eax
 80632ad:	89 44 24 04          	mov    %eax,0x4(%esp)
 80632b1:	8d 83 18 6d fd ff    	lea    -0x292e8(%ebx),%eax
 80632b7:	89 04 24             	mov    %eax,(%esp)
 80632ba:	e8 81 e4 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80632bf:	e8 3c fe ff ff       	call   8063100 <_ZN11__sanitizer14DumpProcessMapEv>
 80632c4:	8d 83 f4 6c fd ff    	lea    -0x2930c(%ebx),%eax
 80632ca:	89 44 24 08          	mov    %eax,0x8(%esp)
 80632ce:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 80632d4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80632db:	00 
 80632dc:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80632e3:	00 
 80632e4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80632eb:	00 
 80632ec:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80632f3:	00 
 80632f4:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)
 80632fb:	00 
 80632fc:	89 04 24             	mov    %eax,(%esp)
 80632ff:	e8 ac f0 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063304:	8d 83 0c 30 fd ff    	lea    -0x2cff4(%ebx),%eax
 806330a:	89 44 24 08          	mov    %eax,0x8(%esp)
 806330e:	8d 83 30 30 fd ff    	lea    -0x2cfd0(%ebx),%eax
 8063314:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806331b:	00 
 806331c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063323:	00 
 8063324:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806332b:	00 
 806332c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063333:	00 
 8063334:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)
 806333b:	00 
 806333c:	89 04 24             	mov    %eax,(%esp)
 806333f:	e8 6c f0 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063344:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806334a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08063350 <_ZN11__sanitizer6GetPwdEv>:
 8063350:	53                   	push   %ebx
 8063351:	e8 9a 67 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063356:	81 c3 aa cc 04 00    	add    $0x4ccaa,%ebx
 806335c:	83 ec 18             	sub    $0x18,%esp
 806335f:	8d 83 9b 6e fd ff    	lea    -0x29165(%ebx),%eax
 8063365:	89 04 24             	mov    %eax,(%esp)
 8063368:	e8 53 20 00 00       	call   80653c0 <_ZN11__sanitizer6GetEnvEPKc>
 806336d:	83 c4 18             	add    $0x18,%esp
 8063370:	5b                   	pop    %ebx
 8063371:	c3                   	ret    
 8063372:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8063379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08063380 <_ZN11__sanitizer17DisableCoreDumperEv>:
 8063380:	53                   	push   %ebx
 8063381:	e8 6a 67 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063386:	81 c3 7a cc 04 00    	add    $0x4cc7a,%ebx
 806338c:	83 ec 28             	sub    $0x28,%esp
 806338f:	8d 44 24 18          	lea    0x18(%esp),%eax
 8063393:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063397:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)
 806339e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80633a5:	00 
 80633a6:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 80633ad:	00 
 80633ae:	e8 2d 64 fe ff       	call   80497e0 <setrlimit@plt>
 80633b3:	83 c4 28             	add    $0x28,%esp
 80633b6:	5b                   	pop    %ebx
 80633b7:	c3                   	ret    
 80633b8:	90                   	nop
 80633b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080633c0 <_ZN11__sanitizer20StackSizeIsUnlimitedEv>:
 80633c0:	57                   	push   %edi
 80633c1:	56                   	push   %esi
 80633c2:	53                   	push   %ebx
 80633c3:	e8 28 67 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80633c8:	81 c3 38 cc 04 00    	add    $0x4cc38,%ebx
 80633ce:	83 ec 30             	sub    $0x30,%esp
 80633d1:	8d 44 24 28          	lea    0x28(%esp),%eax
 80633d5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80633d9:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 80633e0:	e8 8b 63 fe ff       	call   8049770 <getrlimit@plt>
 80633e5:	89 c7                	mov    %eax,%edi
 80633e7:	89 c6                	mov    %eax,%esi
 80633e9:	c1 ff 1f             	sar    $0x1f,%edi
 80633ec:	09 f8                	or     %edi,%eax
 80633ee:	75 0f                	jne    80633ff <_ZN11__sanitizer20StackSizeIsUnlimitedEv+0x3f>
 80633f0:	83 7c 24 28 ff       	cmpl   $0xffffffff,0x28(%esp)
 80633f5:	0f 94 c0             	sete   %al
 80633f8:	83 c4 30             	add    $0x30,%esp
 80633fb:	5b                   	pop    %ebx
 80633fc:	5e                   	pop    %esi
 80633fd:	5f                   	pop    %edi
 80633fe:	c3                   	ret    
 80633ff:	8d 83 54 6d fd ff    	lea    -0x292ac(%ebx),%eax
 8063405:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063409:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 806340f:	89 74 24 14          	mov    %esi,0x14(%esp)
 8063413:	89 7c 24 18          	mov    %edi,0x18(%esp)
 8063417:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806341e:	00 
 806341f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063426:	00 
 8063427:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)
 806342e:	00 
 806342f:	89 04 24             	mov    %eax,(%esp)
 8063432:	e8 79 ef ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063437:	89 f6                	mov    %esi,%esi
 8063439:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08063440 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm>:
 8063440:	53                   	push   %ebx
 8063441:	83 ec 38             	sub    $0x38,%esp
 8063444:	8b 44 24 40          	mov    0x40(%esp),%eax
 8063448:	e8 a3 66 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806344d:	81 c3 b3 cb 04 00    	add    $0x4cbb3,%ebx
 8063453:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 806345a:	89 44 24 28          	mov    %eax,0x28(%esp)
 806345e:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8063462:	8d 44 24 28          	lea    0x28(%esp),%eax
 8063466:	89 44 24 04          	mov    %eax,0x4(%esp)
 806346a:	e8 71 63 fe ff       	call   80497e0 <setrlimit@plt>
 806346f:	85 c0                	test   %eax,%eax
 8063471:	75 0e                	jne    8063481 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x41>
 8063473:	e8 48 ff ff ff       	call   80633c0 <_ZN11__sanitizer20StackSizeIsUnlimitedEv>
 8063478:	84 c0                	test   %al,%al
 806347a:	75 2f                	jne    80634ab <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x6b>
 806347c:	83 c4 38             	add    $0x38,%esp
 806347f:	5b                   	pop    %ebx
 8063480:	c3                   	ret    
 8063481:	e8 4a 64 fe ff       	call   80498d0 <__errno_location@plt>
 8063486:	8b 00                	mov    (%eax),%eax
 8063488:	89 44 24 08          	mov    %eax,0x8(%esp)
 806348c:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
 8063492:	8b 00                	mov    (%eax),%eax
 8063494:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063498:	8d 83 80 6d fd ff    	lea    -0x29280(%ebx),%eax
 806349e:	89 04 24             	mov    %eax,(%esp)
 80634a1:	e8 9a e2 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80634a6:	e8 b5 ed ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 80634ab:	8d 83 a4 6d fd ff    	lea    -0x2925c(%ebx),%eax
 80634b1:	89 44 24 08          	mov    %eax,0x8(%esp)
 80634b5:	8d 83 6c 6c fd ff    	lea    -0x29394(%ebx),%eax
 80634bb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80634c2:	00 
 80634c3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80634ca:	00 
 80634cb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80634d2:	00 
 80634d3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80634da:	00 
 80634db:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)
 80634e2:	00 
 80634e3:	89 04 24             	mov    %eax,(%esp)
 80634e6:	e8 c5 ee ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80634eb:	90                   	nop
 80634ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080634f0 <_ZN11__sanitizer15SleepForSecondsEi>:
 80634f0:	53                   	push   %ebx
 80634f1:	83 ec 18             	sub    $0x18,%esp
 80634f4:	e8 f7 65 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80634f9:	81 c3 07 cb 04 00    	add    $0x4cb07,%ebx
 80634ff:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063503:	89 04 24             	mov    %eax,(%esp)
 8063506:	e8 05 62 fe ff       	call   8049710 <sleep@plt>
 806350b:	83 c4 18             	add    $0x18,%esp
 806350e:	5b                   	pop    %ebx
 806350f:	c3                   	ret    

08063510 <_ZN11__sanitizer14SleepForMillisEi>:
 8063510:	53                   	push   %ebx
 8063511:	83 ec 18             	sub    $0x18,%esp
 8063514:	e8 d7 65 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063519:	81 c3 e7 ca 04 00    	add    $0x4cae7,%ebx
 806351f:	69 44 24 20 e8 03 00 	imul   $0x3e8,0x20(%esp),%eax
 8063526:	00 
 8063527:	89 04 24             	mov    %eax,(%esp)
 806352a:	e8 71 62 fe ff       	call   80497a0 <usleep@plt>
 806352f:	83 c4 18             	add    $0x18,%esp
 8063532:	5b                   	pop    %ebx
 8063533:	c3                   	ret    
 8063534:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806353a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08063540 <_ZN11__sanitizer5AbortEv>:
 8063540:	53                   	push   %ebx
 8063541:	e8 aa 65 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063546:	81 c3 ba ca 04 00    	add    $0x4caba,%ebx
 806354c:	83 ec 08             	sub    $0x8,%esp
 806354f:	e8 0c 64 fe ff       	call   8049960 <abort@plt>
 8063554:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806355a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08063560 <_ZN11__sanitizer6AtexitEPFvvE>:
 8063560:	53                   	push   %ebx
 8063561:	83 ec 18             	sub    $0x18,%esp
 8063564:	e8 87 65 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063569:	81 c3 97 ca 04 00    	add    $0x4ca97,%ebx
 806356f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063573:	89 04 24             	mov    %eax,(%esp)
 8063576:	e8 05 f6 01 00       	call   8082b80 <atexit>
 806357b:	83 c4 18             	add    $0x18,%esp
 806357e:	5b                   	pop    %ebx
 806357f:	c3                   	ret    

08063580 <_ZN11__sanitizer15internal_isattyEi>:
 8063580:	53                   	push   %ebx
 8063581:	83 ec 18             	sub    $0x18,%esp
 8063584:	e8 67 65 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063589:	81 c3 77 ca 04 00    	add    $0x4ca77,%ebx
 806358f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063593:	89 04 24             	mov    %eax,(%esp)
 8063596:	e8 b5 63 fe ff       	call   8049950 <isatty@plt>
 806359b:	83 c4 18             	add    $0x18,%esp
 806359e:	5b                   	pop    %ebx
 806359f:	c3                   	ret    

080635a0 <_ZN11__sanitizer35__sanitizer_get_msghdr_iov_iov_baseEPvi>:
 80635a0:	8b 44 24 04          	mov    0x4(%esp),%eax
 80635a4:	8b 54 24 08          	mov    0x8(%esp),%edx
 80635a8:	8b 40 08             	mov    0x8(%eax),%eax
 80635ab:	8b 04 d0             	mov    (%eax,%edx,8),%eax
 80635ae:	c3                   	ret    
 80635af:	90                   	nop

080635b0 <_ZN11__sanitizer34__sanitizer_get_msghdr_iov_iov_lenEPvi>:
 80635b0:	8b 44 24 04          	mov    0x4(%esp),%eax
 80635b4:	8b 54 24 08          	mov    0x8(%esp),%edx
 80635b8:	8b 40 08             	mov    0x8(%eax),%eax
 80635bb:	8b 44 d0 04          	mov    0x4(%eax,%edx,8),%eax
 80635bf:	c3                   	ret    

080635c0 <_ZN11__sanitizer29__sanitizer_get_msghdr_iovlenEPv>:
 80635c0:	8b 44 24 04          	mov    0x4(%esp),%eax
 80635c4:	8b 40 0c             	mov    0xc(%eax),%eax
 80635c7:	c3                   	ret    
 80635c8:	90                   	nop
 80635c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080635d0 <_ZN11__sanitizer25__sanitizer_get_socklen_tEPv>:
 80635d0:	8b 44 24 04          	mov    0x4(%esp),%eax
 80635d4:	8b 00                	mov    (%eax),%eax
 80635d6:	c3                   	ret    
 80635d7:	66 90                	xchg   %ax,%ax
 80635d9:	66 90                	xchg   %ax,%ax
 80635db:	66 90                	xchg   %ax,%ax
 80635dd:	66 90                	xchg   %ax,%ax
 80635df:	90                   	nop

080635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>:
 80635e0:	55                   	push   %ebp
 80635e1:	57                   	push   %edi
 80635e2:	89 c7                	mov    %eax,%edi
 80635e4:	56                   	push   %esi
 80635e5:	53                   	push   %ebx
 80635e6:	e8 05 65 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80635eb:	81 c3 15 ca 04 00    	add    $0x4ca15,%ebx
 80635f1:	83 ec 1c             	sub    $0x1c,%esp
 80635f4:	89 54 24 04          	mov    %edx,0x4(%esp)
 80635f8:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80635fc:	89 04 24             	mov    %eax,(%esp)
 80635ff:	e8 6c e3 ff ff       	call   8061970 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
 8063604:	89 c6                	mov    %eax,%esi
 8063606:	8d 40 01             	lea    0x1(%eax),%eax
 8063609:	89 04 24             	mov    %eax,(%esp)
 806360c:	e8 1f ea ff ff       	call   8062030 <_ZN11__sanitizer13InternalAllocEm>
 8063611:	89 45 00             	mov    %eax,0x0(%ebp)
 8063614:	89 74 24 08          	mov    %esi,0x8(%esp)
 8063618:	89 7c 24 04          	mov    %edi,0x4(%esp)
 806361c:	89 04 24             	mov    %eax,(%esp)
 806361f:	e8 8c e2 ff ff       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8063624:	8b 45 00             	mov    0x0(%ebp),%eax
 8063627:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)
 806362b:	8d 04 37             	lea    (%edi,%esi,1),%eax
 806362e:	80 38 01             	cmpb   $0x1,(%eax)
 8063631:	83 d8 ff             	sbb    $0xffffffff,%eax
 8063634:	83 c4 1c             	add    $0x1c,%esp
 8063637:	5b                   	pop    %ebx
 8063638:	5e                   	pop    %esi
 8063639:	5f                   	pop    %edi
 806363a:	5d                   	pop    %ebp
 806363b:	c3                   	ret    
 806363c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08063640 <_ZN11__sanitizerL10ExtractIntEPKcS1_Pi>:
 8063640:	56                   	push   %esi
 8063641:	53                   	push   %ebx
 8063642:	e8 a9 64 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063647:	81 c3 b9 c9 04 00    	add    $0x4c9b9,%ebx
 806364d:	83 ec 24             	sub    $0x24,%esp
 8063650:	8d 4c 24 1c          	lea    0x1c(%esp),%ecx
 8063654:	89 0c 24             	mov    %ecx,(%esp)
 8063657:	e8 84 ff ff ff       	call   80635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>
 806365c:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 8063660:	31 d2                	xor    %edx,%edx
 8063662:	85 c9                	test   %ecx,%ecx
 8063664:	89 c6                	mov    %eax,%esi
 8063666:	74 12                	je     806367a <_ZN11__sanitizerL10ExtractIntEPKcS1_Pi+0x3a>
 8063668:	89 0c 24             	mov    %ecx,(%esp)
 806366b:	e8 60 e8 ff ff       	call   8061ed0 <_ZN11__sanitizer14internal_atollEPKc>
 8063670:	8b 54 24 30          	mov    0x30(%esp),%edx
 8063674:	89 02                	mov    %eax,(%edx)
 8063676:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 806367a:	89 14 24             	mov    %edx,(%esp)
 806367d:	e8 fe e9 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 8063682:	83 c4 24             	add    $0x24,%esp
 8063685:	89 f0                	mov    %esi,%eax
 8063687:	5b                   	pop    %ebx
 8063688:	5e                   	pop    %esi
 8063689:	c3                   	ret    
 806368a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08063690 <_ZN11__sanitizerL11ExtractUptrEPKcS1_Pm>:
 8063690:	56                   	push   %esi
 8063691:	53                   	push   %ebx
 8063692:	e8 59 64 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063697:	81 c3 69 c9 04 00    	add    $0x4c969,%ebx
 806369d:	83 ec 24             	sub    $0x24,%esp
 80636a0:	8d 4c 24 1c          	lea    0x1c(%esp),%ecx
 80636a4:	89 0c 24             	mov    %ecx,(%esp)
 80636a7:	e8 34 ff ff ff       	call   80635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>
 80636ac:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
 80636b0:	31 d2                	xor    %edx,%edx
 80636b2:	85 c9                	test   %ecx,%ecx
 80636b4:	89 c6                	mov    %eax,%esi
 80636b6:	74 12                	je     80636ca <_ZN11__sanitizerL11ExtractUptrEPKcS1_Pm+0x3a>
 80636b8:	89 0c 24             	mov    %ecx,(%esp)
 80636bb:	e8 10 e8 ff ff       	call   8061ed0 <_ZN11__sanitizer14internal_atollEPKc>
 80636c0:	8b 54 24 30          	mov    0x30(%esp),%edx
 80636c4:	89 02                	mov    %eax,(%edx)
 80636c6:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80636ca:	89 14 24             	mov    %edx,(%esp)
 80636cd:	e8 ae e9 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 80636d2:	83 c4 24             	add    $0x24,%esp
 80636d5:	89 f0                	mov    %esi,%eax
 80636d7:	5b                   	pop    %ebx
 80636d8:	5e                   	pop    %esi
 80636d9:	c3                   	ret    
 80636da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080636e0 <_ZN11__sanitizer11AddressInfo5ClearEv>:
 80636e0:	56                   	push   %esi
 80636e1:	53                   	push   %ebx
 80636e2:	83 ec 14             	sub    $0x14,%esp
 80636e5:	8b 74 24 20          	mov    0x20(%esp),%esi
 80636e9:	e8 02 64 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80636ee:	81 c3 12 c9 04 00    	add    $0x4c912,%ebx
 80636f4:	8b 46 04             	mov    0x4(%esi),%eax
 80636f7:	89 04 24             	mov    %eax,(%esp)
 80636fa:	e8 81 e9 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 80636ff:	8b 46 0c             	mov    0xc(%esi),%eax
 8063702:	89 04 24             	mov    %eax,(%esp)
 8063705:	e8 76 e9 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 806370a:	8b 46 10             	mov    0x10(%esi),%eax
 806370d:	89 04 24             	mov    %eax,(%esp)
 8063710:	e8 6b e9 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 8063715:	89 34 24             	mov    %esi,(%esp)
 8063718:	c7 44 24 08 1c 00 00 	movl   $0x1c,0x8(%esp)
 806371f:	00 
 8063720:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8063727:	00 
 8063728:	e8 13 e2 ff ff       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 806372d:	83 c4 14             	add    $0x14,%esp
 8063730:	5b                   	pop    %ebx
 8063731:	5e                   	pop    %esi
 8063732:	c3                   	ret    
 8063733:	90                   	nop
 8063734:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806373a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08063740 <_ZN11__sanitizer12LoadedModuleC1EPKcm>:
 8063740:	56                   	push   %esi
 8063741:	53                   	push   %ebx
 8063742:	83 ec 14             	sub    $0x14,%esp
 8063745:	e8 a6 63 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806374a:	81 c3 b6 c8 04 00    	add    $0x4c8b6,%ebx
 8063750:	8b 44 24 24          	mov    0x24(%esp),%eax
 8063754:	8b 74 24 20          	mov    0x20(%esp),%esi
 8063758:	89 04 24             	mov    %eax,(%esp)
 806375b:	e8 70 e2 ff ff       	call   80619d0 <_ZN11__sanitizer15internal_strdupEPKc>
 8063760:	c7 46 38 00 00 00 00 	movl   $0x0,0x38(%esi)
 8063767:	89 06                	mov    %eax,(%esi)
 8063769:	8b 44 24 28          	mov    0x28(%esp),%eax
 806376d:	89 46 04             	mov    %eax,0x4(%esi)
 8063770:	83 c4 14             	add    $0x14,%esp
 8063773:	5b                   	pop    %ebx
 8063774:	5e                   	pop    %esi
 8063775:	c3                   	ret    
 8063776:	8d 76 00             	lea    0x0(%esi),%esi
 8063779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08063780 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmm>:
 8063780:	56                   	push   %esi
 8063781:	31 d2                	xor    %edx,%edx
 8063783:	53                   	push   %ebx
 8063784:	83 ec 24             	sub    $0x24,%esp
 8063787:	8b 74 24 30          	mov    0x30(%esp),%esi
 806378b:	e8 60 63 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063790:	81 c3 70 c8 04 00    	add    $0x4c870,%ebx
 8063796:	8b 4e 38             	mov    0x38(%esi),%ecx
 8063799:	83 f9 05             	cmp    $0x5,%ecx
 806379c:	76 3a                	jbe    80637d8 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmm+0x58>
 806379e:	8d 83 b0 6e fd ff    	lea    -0x29150(%ebx),%eax
 80637a4:	89 44 24 08          	mov    %eax,0x8(%esp)
 80637a8:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 80637ae:	c7 44 24 14 06 00 00 	movl   $0x6,0x14(%esp)
 80637b5:	00 
 80637b6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80637bd:	00 
 80637be:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 80637c2:	89 54 24 10          	mov    %edx,0x10(%esp)
 80637c6:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)
 80637cd:	00 
 80637ce:	89 04 24             	mov    %eax,(%esp)
 80637d1:	e8 da eb ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80637d6:	66 90                	xchg   %ax,%ax
 80637d8:	8b 54 24 34          	mov    0x34(%esp),%edx
 80637dc:	8d 04 ce             	lea    (%esi,%ecx,8),%eax
 80637df:	83 c1 01             	add    $0x1,%ecx
 80637e2:	89 50 08             	mov    %edx,0x8(%eax)
 80637e5:	8b 54 24 38          	mov    0x38(%esp),%edx
 80637e9:	89 50 0c             	mov    %edx,0xc(%eax)
 80637ec:	89 4e 38             	mov    %ecx,0x38(%esi)
 80637ef:	83 c4 24             	add    $0x24,%esp
 80637f2:	5b                   	pop    %ebx
 80637f3:	5e                   	pop    %esi
 80637f4:	c3                   	ret    
 80637f5:	90                   	nop
 80637f6:	8d 76 00             	lea    0x0(%esi),%esi
 80637f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08063800 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>:
 8063800:	56                   	push   %esi
 8063801:	8b 44 24 08          	mov    0x8(%esp),%eax
 8063805:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 8063809:	8b 70 38             	mov    0x38(%eax),%esi
 806380c:	85 f6                	test   %esi,%esi
 806380e:	74 1c                	je     806382c <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x2c>
 8063810:	31 d2                	xor    %edx,%edx
 8063812:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8063818:	39 48 08             	cmp    %ecx,0x8(%eax)
 806381b:	77 05                	ja     8063822 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x22>
 806381d:	3b 48 0c             	cmp    0xc(%eax),%ecx
 8063820:	72 0e                	jb     8063830 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x30>
 8063822:	83 c2 01             	add    $0x1,%edx
 8063825:	83 c0 08             	add    $0x8,%eax
 8063828:	39 f2                	cmp    %esi,%edx
 806382a:	75 ec                	jne    8063818 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x18>
 806382c:	31 c0                	xor    %eax,%eax
 806382e:	5e                   	pop    %esi
 806382f:	c3                   	ret    
 8063830:	b8 01 00 00 00       	mov    $0x1,%eax
 8063835:	5e                   	pop    %esi
 8063836:	c3                   	ret    
 8063837:	89 f6                	mov    %esi,%esi
 8063839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08063840 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm>:
 8063840:	55                   	push   %ebp
 8063841:	57                   	push   %edi
 8063842:	56                   	push   %esi
 8063843:	53                   	push   %ebx
 8063844:	83 ec 4c             	sub    $0x4c,%esp
 8063847:	8b 44 24 68          	mov    0x68(%esp),%eax
 806384b:	e8 a0 62 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063850:	81 c3 b0 c7 04 00    	add    $0x4c7b0,%ebx
 8063856:	8b 74 24 60          	mov    0x60(%esp),%esi
 806385a:	85 c0                	test   %eax,%eax
 806385c:	75 0a                	jne    8063868 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x28>
 806385e:	31 c0                	xor    %eax,%eax
 8063860:	83 c4 4c             	add    $0x4c,%esp
 8063863:	5b                   	pop    %ebx
 8063864:	5e                   	pop    %esi
 8063865:	5f                   	pop    %edi
 8063866:	5d                   	pop    %ebp
 8063867:	c3                   	ret    
 8063868:	8b ab 88 23 5b 01    	mov    0x15b2388(%ebx),%ebp
 806386e:	85 ed                	test   %ebp,%ebp
 8063870:	0f 84 a5 03 00 00    	je     8063c1b <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x3db>
 8063876:	8b 83 8c 23 5b 01    	mov    0x15b238c(%ebx),%eax
 806387c:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8063880:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
 8063884:	85 ff                	test   %edi,%edi
 8063886:	74 d6                	je     806385e <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x1e>
 8063888:	8b bb 88 23 5b 01    	mov    0x15b2388(%ebx),%edi
 806388e:	31 ed                	xor    %ebp,%ebp
 8063890:	8b 4f 38             	mov    0x38(%edi),%ecx
 8063893:	85 c9                	test   %ecx,%ecx
 8063895:	74 1d                	je     80638b4 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x74>
 8063897:	89 f8                	mov    %edi,%eax
 8063899:	31 d2                	xor    %edx,%edx
 806389b:	90                   	nop
 806389c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80638a0:	3b 70 08             	cmp    0x8(%eax),%esi
 80638a3:	72 05                	jb     80638aa <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x6a>
 80638a5:	3b 70 0c             	cmp    0xc(%eax),%esi
 80638a8:	72 1e                	jb     80638c8 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x88>
 80638aa:	83 c2 01             	add    $0x1,%edx
 80638ad:	83 c0 08             	add    $0x8,%eax
 80638b0:	39 ca                	cmp    %ecx,%edx
 80638b2:	75 ec                	jne    80638a0 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x60>
 80638b4:	83 c5 01             	add    $0x1,%ebp
 80638b7:	83 c7 3c             	add    $0x3c,%edi
 80638ba:	3b 6c 24 1c          	cmp    0x1c(%esp),%ebp
 80638be:	75 d0                	jne    8063890 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x50>
 80638c0:	eb 9c                	jmp    806385e <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x1e>
 80638c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80638c8:	8b 07                	mov    (%edi),%eax
 80638ca:	8b 7f 04             	mov    0x4(%edi),%edi
 80638cd:	89 44 24 20          	mov    %eax,0x20(%esp)
 80638d1:	8b 83 94 23 5b 01    	mov    0x15b2394(%ebx),%eax
 80638d7:	85 c0                	test   %eax,%eax
 80638d9:	0f 84 85 01 00 00    	je     8063a64 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x224>
 80638df:	89 f1                	mov    %esi,%ecx
 80638e1:	29 f9                	sub    %edi,%ecx
 80638e3:	89 4c 24 24          	mov    %ecx,0x24(%esp)
 80638e7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80638eb:	89 c5                	mov    %eax,%ebp
 80638ed:	8b 44 24 24          	mov    0x24(%esp),%eax
 80638f1:	c7 44 24 10 00 40 00 	movl   $0x4000,0x10(%esp)
 80638f8:	00 
 80638f9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8063900:	00 
 8063901:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063905:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063909:	89 04 24             	mov    %eax,(%esp)
 806390c:	e8 1f 5f fe ff       	call   8049830 <__sanitizer_symbolize_code@plt>
 8063911:	84 c0                	test   %al,%al
 8063913:	0f 84 86 02 00 00    	je     8063b9f <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x35f>
 8063919:	8d 44 24 38          	lea    0x38(%esp),%eax
 806391d:	31 c9                	xor    %ecx,%ecx
 806391f:	8b 7c 24 64          	mov    0x64(%esp),%edi
 8063923:	89 44 24 28          	mov    %eax,0x28(%esp)
 8063927:	8d 83 0b 6b fd ff    	lea    -0x294f5(%ebx),%eax
 806392d:	89 74 24 60          	mov    %esi,0x60(%esp)
 8063931:	89 ce                	mov    %ecx,%esi
 8063933:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8063937:	eb 32                	jmp    806396b <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x12b>
 8063939:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8063940:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8063944:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063948:	8b 47 10             	mov    0x10(%edi),%eax
 806394b:	89 04 24             	mov    %eax,(%esp)
 806394e:	e8 ed e0 ff ff       	call   8061a40 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 8063953:	85 c0                	test   %eax,%eax
 8063955:	0f 84 85 02 00 00    	je     8063be0 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x3a0>
 806395b:	83 c6 01             	add    $0x1,%esi
 806395e:	83 c7 1c             	add    $0x1c,%edi
 8063961:	3b 74 24 68          	cmp    0x68(%esp),%esi
 8063965:	0f 84 97 02 00 00    	je     8063c02 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x3c2>
 806396b:	8b 44 24 28          	mov    0x28(%esp),%eax
 806396f:	8d 93 b6 61 fd ff    	lea    -0x29e4a(%ebx),%edx
 8063975:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 806397c:	00 
 806397d:	89 04 24             	mov    %eax,(%esp)
 8063980:	89 e8                	mov    %ebp,%eax
 8063982:	e8 59 fc ff ff       	call   80635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>
 8063987:	89 c5                	mov    %eax,%ebp
 8063989:	8b 44 24 38          	mov    0x38(%esp),%eax
 806398d:	85 c0                	test   %eax,%eax
 806398f:	0f 84 7d 04 00 00    	je     8063e12 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x5d2>
 8063995:	80 38 00             	cmpb   $0x0,(%eax)
 8063998:	0f 84 6e 02 00 00    	je     8063c0c <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x3cc>
 806399e:	89 3c 24             	mov    %edi,(%esp)
 80639a1:	e8 3a fd ff ff       	call   80636e0 <_ZN11__sanitizer11AddressInfo5ClearEv>
 80639a6:	8b 44 24 60          	mov    0x60(%esp),%eax
 80639aa:	89 07                	mov    %eax,(%edi)
 80639ac:	8b 44 24 20          	mov    0x20(%esp),%eax
 80639b0:	89 04 24             	mov    %eax,(%esp)
 80639b3:	e8 18 e0 ff ff       	call   80619d0 <_ZN11__sanitizer15internal_strdupEPKc>
 80639b8:	8d 93 b6 61 fd ff    	lea    -0x29e4a(%ebx),%edx
 80639be:	c7 44 24 3c 00 00 00 	movl   $0x0,0x3c(%esp)
 80639c5:	00 
 80639c6:	89 47 04             	mov    %eax,0x4(%edi)
 80639c9:	8b 44 24 24          	mov    0x24(%esp),%eax
 80639cd:	89 47 08             	mov    %eax,0x8(%edi)
 80639d0:	8b 44 24 38          	mov    0x38(%esp),%eax
 80639d4:	89 47 0c             	mov    %eax,0xc(%edi)
 80639d7:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 80639db:	89 04 24             	mov    %eax,(%esp)
 80639de:	89 e8                	mov    %ebp,%eax
 80639e0:	e8 fb fb ff ff       	call   80635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>
 80639e5:	89 c5                	mov    %eax,%ebp
 80639e7:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 80639eb:	85 c0                	test   %eax,%eax
 80639ed:	0f 84 9f 04 00 00    	je     8063e92 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x652>
 80639f3:	8d 57 10             	lea    0x10(%edi),%edx
 80639f6:	89 14 24             	mov    %edx,(%esp)
 80639f9:	8d 93 cb 71 fd ff    	lea    -0x28e35(%ebx),%edx
 80639ff:	e8 dc fb ff ff       	call   80635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>
 8063a04:	8d 57 14             	lea    0x14(%edi),%edx
 8063a07:	89 14 24             	mov    %edx,(%esp)
 8063a0a:	8d 93 cb 71 fd ff    	lea    -0x28e35(%ebx),%edx
 8063a10:	e8 2b fc ff ff       	call   8063640 <_ZN11__sanitizerL10ExtractIntEPKcS1_Pi>
 8063a15:	8d 57 18             	lea    0x18(%edi),%edx
 8063a18:	89 14 24             	mov    %edx,(%esp)
 8063a1b:	8d 93 b7 61 fd ff    	lea    -0x29e49(%ebx),%edx
 8063a21:	e8 1a fc ff ff       	call   8063640 <_ZN11__sanitizerL10ExtractIntEPKcS1_Pi>
 8063a26:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8063a2a:	89 04 24             	mov    %eax,(%esp)
 8063a2d:	e8 4e e6 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 8063a32:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8063a36:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063a3a:	8b 47 0c             	mov    0xc(%edi),%eax
 8063a3d:	89 04 24             	mov    %eax,(%esp)
 8063a40:	e8 fb df ff ff       	call   8061a40 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 8063a45:	85 c0                	test   %eax,%eax
 8063a47:	0f 85 f3 fe ff ff    	jne    8063940 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x100>
 8063a4d:	8b 47 0c             	mov    0xc(%edi),%eax
 8063a50:	89 04 24             	mov    %eax,(%esp)
 8063a53:	e8 28 e6 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 8063a58:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
 8063a5f:	e9 dc fe ff ff       	jmp    8063940 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x100>
 8063a64:	8b 8b e4 ff ff ff    	mov    -0x1c(%ebx),%ecx
 8063a6a:	85 c9                	test   %ecx,%ecx
 8063a6c:	74 20                	je     8063a8e <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x24e>
 8063a6e:	8b 93 f4 ff ff ff    	mov    -0xc(%ebx),%edx
 8063a74:	85 d2                	test   %edx,%edx
 8063a76:	74 16                	je     8063a8e <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x24e>
 8063a78:	8d 83 98 23 5b 01    	lea    0x15b2398(%ebx),%eax
 8063a7e:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8063a85:	00 
 8063a86:	89 04 24             	mov    %eax,(%esp)
 8063a89:	e8 82 e6 ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8063a8e:	89 f1                	mov    %esi,%ecx
 8063a90:	29 f9                	sub    %edi,%ecx
 8063a92:	85 c0                	test   %eax,%eax
 8063a94:	89 83 94 23 5b 01    	mov    %eax,0x15b2394(%ebx)
 8063a9a:	89 4c 24 24          	mov    %ecx,0x24(%esp)
 8063a9e:	0f 85 43 fe ff ff    	jne    80638e7 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0xa7>
 8063aa4:	8b 93 90 23 5b 01    	mov    0x15b2390(%ebx),%edx
 8063aaa:	85 d2                	test   %edx,%edx
 8063aac:	0f 84 9b 02 00 00    	je     8063d4d <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x50d>
 8063ab2:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063ab6:	85 c0                	test   %eax,%eax
 8063ab8:	0f 84 d4 02 00 00    	je     8063d92 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x552>
 8063abe:	8d 83 b7 61 fd ff    	lea    -0x29e49(%ebx),%eax
 8063ac4:	89 d7                	mov    %edx,%edi
 8063ac6:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8063aca:	8d 83 c7 70 fd ff    	lea    -0x28f39(%ebx),%eax
 8063ad0:	89 44 24 28          	mov    %eax,0x28(%esp)
 8063ad4:	8d 83 d8 6f fd ff    	lea    -0x29028(%ebx),%eax
 8063ada:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8063ade:	89 74 24 60          	mov    %esi,0x60(%esp)
 8063ae2:	8b 44 24 24          	mov    0x24(%esp),%eax
 8063ae6:	8d 6f 0c             	lea    0xc(%edi),%ebp
 8063ae9:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8063af0:	00 
 8063af1:	89 2c 24             	mov    %ebp,(%esp)
 8063af4:	89 44 24 14          	mov    %eax,0x14(%esp)
 8063af8:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063afc:	89 44 24 10          	mov    %eax,0x10(%esp)
 8063b00:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8063b04:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8063b08:	8b 44 24 28          	mov    0x28(%esp),%eax
 8063b0c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063b10:	e8 fb db ff ff       	call   8061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 8063b15:	89 2c 24             	mov    %ebp,(%esp)
 8063b18:	e8 33 e0 ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8063b1d:	85 c0                	test   %eax,%eax
 8063b1f:	0f 85 84 01 00 00    	jne    8063ca9 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x469>
 8063b25:	31 f6                	xor    %esi,%esi
 8063b27:	90                   	nop
 8063b28:	b8 00 40 00 00       	mov    $0x4000,%eax
 8063b2d:	29 f0                	sub    %esi,%eax
 8063b2f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063b33:	8d 44 35 00          	lea    0x0(%ebp,%esi,1),%eax
 8063b37:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063b3b:	8b 47 04             	mov    0x4(%edi),%eax
 8063b3e:	89 04 24             	mov    %eax,(%esp)
 8063b41:	e8 aa 15 00 00       	call   80650f0 <_ZN11__sanitizer13internal_readEiPvm>
 8063b46:	8d 50 ff             	lea    -0x1(%eax),%edx
 8063b49:	83 fa fd             	cmp    $0xfffffffd,%edx
 8063b4c:	0f 87 90 01 00 00    	ja     8063ce2 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x4a2>
 8063b52:	01 c6                	add    %eax,%esi
 8063b54:	83 fe 01             	cmp    $0x1,%esi
 8063b57:	76 cf                	jbe    8063b28 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x2e8>
 8063b59:	80 7c 35 ff 0a       	cmpb   $0xa,-0x1(%ebp,%esi,1)
 8063b5e:	75 c8                	jne    8063b28 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x2e8>
 8063b60:	80 7c 35 fe 0a       	cmpb   $0xa,-0x2(%ebp,%esi,1)
 8063b65:	75 c1                	jne    8063b28 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x2e8>
 8063b67:	85 ed                	test   %ebp,%ebp
 8063b69:	0f 85 d5 01 00 00    	jne    8063d44 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x504>
 8063b6f:	8b b3 90 23 5b 01    	mov    0x15b2390(%ebx),%esi
 8063b75:	8b 86 0c 40 00 00    	mov    0x400c(%esi),%eax
 8063b7b:	83 f8 04             	cmp    $0x4,%eax
 8063b7e:	0f 86 76 01 00 00    	jbe    8063cfa <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x4ba>
 8063b84:	80 bb a0 23 5b 01 00 	cmpb   $0x0,0x15b23a0(%ebx)
 8063b8b:	8b 74 24 60          	mov    0x60(%esp),%esi
 8063b8f:	0f 84 e3 01 00 00    	je     8063d78 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x538>
 8063b95:	c7 83 90 23 5b 01 00 	movl   $0x0,0x15b2390(%ebx)
 8063b9c:	00 00 00 
 8063b9f:	8b 44 24 64          	mov    0x64(%esp),%eax
 8063ba3:	89 04 24             	mov    %eax,(%esp)
 8063ba6:	e8 35 fb ff ff       	call   80636e0 <_ZN11__sanitizer11AddressInfo5ClearEv>
 8063bab:	8b 44 24 64          	mov    0x64(%esp),%eax
 8063baf:	89 30                	mov    %esi,(%eax)
 8063bb1:	8b 44 24 20          	mov    0x20(%esp),%eax
 8063bb5:	89 04 24             	mov    %eax,(%esp)
 8063bb8:	e8 13 de ff ff       	call   80619d0 <_ZN11__sanitizer15internal_strdupEPKc>
 8063bbd:	8b 4c 24 64          	mov    0x64(%esp),%ecx
 8063bc1:	89 41 04             	mov    %eax,0x4(%ecx)
 8063bc4:	89 c8                	mov    %ecx,%eax
 8063bc6:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 8063bca:	89 48 08             	mov    %ecx,0x8(%eax)
 8063bcd:	83 c4 4c             	add    $0x4c,%esp
 8063bd0:	b8 01 00 00 00       	mov    $0x1,%eax
 8063bd5:	5b                   	pop    %ebx
 8063bd6:	5e                   	pop    %esi
 8063bd7:	5f                   	pop    %edi
 8063bd8:	5d                   	pop    %ebp
 8063bd9:	c3                   	ret    
 8063bda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8063be0:	8b 47 10             	mov    0x10(%edi),%eax
 8063be3:	83 c6 01             	add    $0x1,%esi
 8063be6:	83 c7 1c             	add    $0x1c,%edi
 8063be9:	89 04 24             	mov    %eax,(%esp)
 8063bec:	e8 8f e4 ff ff       	call   8062080 <_ZN11__sanitizer12InternalFreeEPv>
 8063bf1:	c7 47 f4 00 00 00 00 	movl   $0x0,-0xc(%edi)
 8063bf8:	3b 74 24 68          	cmp    0x68(%esp),%esi
 8063bfc:	0f 85 69 fd ff ff    	jne    806396b <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x12b>
 8063c02:	83 c4 4c             	add    $0x4c,%esp
 8063c05:	89 f0                	mov    %esi,%eax
 8063c07:	5b                   	pop    %ebx
 8063c08:	5e                   	pop    %esi
 8063c09:	5f                   	pop    %edi
 8063c0a:	5d                   	pop    %ebp
 8063c0b:	c3                   	ret    
 8063c0c:	89 f0                	mov    %esi,%eax
 8063c0e:	8b 74 24 60          	mov    0x60(%esp),%esi
 8063c12:	85 c0                	test   %eax,%eax
 8063c14:	74 89                	je     8063b9f <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x35f>
 8063c16:	e9 45 fc ff ff       	jmp    8063860 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x20>
 8063c1b:	8d 83 98 23 5b 01    	lea    0x15b2398(%ebx),%eax
 8063c21:	c7 44 24 04 00 00 0f 	movl   $0xf0000,0x4(%esp)
 8063c28:	00 
 8063c29:	89 04 24             	mov    %eax,(%esp)
 8063c2c:	e8 df e4 ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8063c31:	85 c0                	test   %eax,%eax
 8063c33:	89 83 88 23 5b 01    	mov    %eax,0x15b2388(%ebx)
 8063c39:	0f 84 13 02 00 00    	je     8063e52 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x612>
 8063c3f:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8063c46:	00 
 8063c47:	89 04 24             	mov    %eax,(%esp)
 8063c4a:	e8 51 2d 00 00       	call   80669a0 <_ZN11__sanitizer16GetListOfModulesEPNS_12LoadedModuleEm>
 8063c4f:	31 c9                	xor    %ecx,%ecx
 8063c51:	85 c0                	test   %eax,%eax
 8063c53:	89 83 8c 23 5b 01    	mov    %eax,0x15b238c(%ebx)
 8063c59:	0f 84 73 01 00 00    	je     8063dd2 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x592>
 8063c5f:	3d ff 3f 00 00       	cmp    $0x3fff,%eax
 8063c64:	76 3a                	jbe    8063ca0 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x460>
 8063c66:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8063c6a:	8d 83 28 6f fd ff    	lea    -0x290d8(%ebx),%eax
 8063c70:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063c74:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8063c7a:	c7 44 24 14 00 40 00 	movl   $0x4000,0x14(%esp)
 8063c81:	00 
 8063c82:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063c89:	00 
 8063c8a:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 8063c8e:	c7 44 24 04 6a 01 00 	movl   $0x16a,0x4(%esp)
 8063c95:	00 
 8063c96:	89 04 24             	mov    %eax,(%esp)
 8063c99:	e8 12 e7 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063c9e:	66 90                	xchg   %ax,%ax
 8063ca0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8063ca4:	e9 d7 fb ff ff       	jmp    8063880 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x40>
 8063ca9:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063cad:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8063cb1:	8b 47 08             	mov    0x8(%edi),%eax
 8063cb4:	89 04 24             	mov    %eax,(%esp)
 8063cb7:	e8 94 14 00 00       	call   8065150 <_ZN11__sanitizer14internal_writeEiPKvm>
 8063cbc:	83 e8 01             	sub    $0x1,%eax
 8063cbf:	83 f8 fd             	cmp    $0xfffffffd,%eax
 8063cc2:	0f 86 5d fe ff ff    	jbe    8063b25 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x2e5>
 8063cc8:	8b 47 08             	mov    0x8(%edi),%eax
 8063ccb:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063ccf:	8d 83 a8 6f fd ff    	lea    -0x29058(%ebx),%eax
 8063cd5:	89 04 24             	mov    %eax,(%esp)
 8063cd8:	e8 63 da ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8063cdd:	e9 8d fe ff ff       	jmp    8063b6f <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x32f>
 8063ce2:	8b 47 04             	mov    0x4(%edi),%eax
 8063ce5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063ce9:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8063ced:	89 04 24             	mov    %eax,(%esp)
 8063cf0:	e8 4b da ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8063cf5:	e9 75 fe ff ff       	jmp    8063b6f <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x32f>
 8063cfa:	83 c0 01             	add    $0x1,%eax
 8063cfd:	89 86 0c 40 00 00    	mov    %eax,0x400c(%esi)
 8063d03:	8b 46 04             	mov    0x4(%esi),%eax
 8063d06:	89 04 24             	mov    %eax,(%esp)
 8063d09:	e8 02 13 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8063d0e:	8b 46 08             	mov    0x8(%esi),%eax
 8063d11:	89 04 24             	mov    %eax,(%esp)
 8063d14:	e8 f7 12 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8063d19:	8d 46 08             	lea    0x8(%esi),%eax
 8063d1c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063d20:	8d 46 04             	lea    0x4(%esi),%eax
 8063d23:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063d27:	8b 06                	mov    (%esi),%eax
 8063d29:	89 04 24             	mov    %eax,(%esp)
 8063d2c:	e8 ff 28 00 00       	call   8066630 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_>
 8063d31:	84 c0                	test   %al,%al
 8063d33:	0f 84 4b fe ff ff    	je     8063b84 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x344>
 8063d39:	8b bb 90 23 5b 01    	mov    0x15b2390(%ebx),%edi
 8063d3f:	e9 9e fd ff ff       	jmp    8063ae2 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x2a2>
 8063d44:	8b 74 24 60          	mov    0x60(%esp),%esi
 8063d48:	e9 cc fb ff ff       	jmp    8063919 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0xd9>
 8063d4d:	80 bb a0 23 5b 01 00 	cmpb   $0x0,0x15b23a0(%ebx)
 8063d54:	0f 85 45 fe ff ff    	jne    8063b9f <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x35f>
 8063d5a:	8d 83 58 6f fd ff    	lea    -0x290a8(%ebx),%eax
 8063d60:	89 04 24             	mov    %eax,(%esp)
 8063d63:	e8 d8 d9 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8063d68:	c6 83 a0 23 5b 01 01 	movb   $0x1,0x15b23a0(%ebx)
 8063d6f:	e9 2b fe ff ff       	jmp    8063b9f <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x35f>
 8063d74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8063d78:	8d 83 08 70 fd ff    	lea    -0x28ff8(%ebx),%eax
 8063d7e:	89 04 24             	mov    %eax,(%esp)
 8063d81:	e8 ba d9 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8063d86:	c6 83 a0 23 5b 01 01 	movb   $0x1,0x15b23a0(%ebx)
 8063d8d:	e9 03 fe ff ff       	jmp    8063b95 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm+0x355>
 8063d92:	8d 83 b0 70 fd ff    	lea    -0x28f50(%ebx),%eax
 8063d98:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063d9c:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8063da2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063da9:	00 
 8063daa:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063db1:	00 
 8063db2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063db9:	00 
 8063dba:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063dc1:	00 
 8063dc2:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)
 8063dc9:	00 
 8063dca:	89 04 24             	mov    %eax,(%esp)
 8063dcd:	e8 de e5 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063dd2:	8d 83 99 70 fd ff    	lea    -0x28f67(%ebx),%eax
 8063dd8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063ddc:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8063de2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063de9:	00 
 8063dea:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063df1:	00 
 8063df2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063df9:	00 
 8063dfa:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063e01:	00 
 8063e02:	c7 44 24 04 69 01 00 	movl   $0x169,0x4(%esp)
 8063e09:	00 
 8063e0a:	89 04 24             	mov    %eax,(%esp)
 8063e0d:	e8 9e e5 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063e12:	8d 83 d3 70 fd ff    	lea    -0x28f2d(%ebx),%eax
 8063e18:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063e1c:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8063e22:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063e29:	00 
 8063e2a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063e31:	00 
 8063e32:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063e39:	00 
 8063e3a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063e41:	00 
 8063e42:	c7 44 24 04 f8 00 00 	movl   $0xf8,0x4(%esp)
 8063e49:	00 
 8063e4a:	89 04 24             	mov    %eax,(%esp)
 8063e4d:	e8 5e e5 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063e52:	8d 83 85 70 fd ff    	lea    -0x28f7b(%ebx),%eax
 8063e58:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063e5c:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8063e62:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063e69:	00 
 8063e6a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063e71:	00 
 8063e72:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063e79:	00 
 8063e7a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063e81:	00 
 8063e82:	c7 44 24 04 67 01 00 	movl   $0x167,0x4(%esp)
 8063e89:	00 
 8063e8a:	89 04 24             	mov    %eax,(%esp)
 8063e8d:	e8 1e e5 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063e92:	8d 83 ec 70 fd ff    	lea    -0x28f14(%ebx),%eax
 8063e98:	89 44 24 08          	mov    %eax,0x8(%esp)
 8063e9c:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8063ea2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8063ea9:	00 
 8063eaa:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8063eb1:	00 
 8063eb2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8063eb9:	00 
 8063eba:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8063ec1:	00 
 8063ec2:	c7 44 24 04 03 01 00 	movl   $0x103,0x4(%esp)
 8063ec9:	00 
 8063eca:	89 04 24             	mov    %eax,(%esp)
 8063ecd:	e8 de e4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8063ed2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8063ed9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08063ee0 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE>:
 8063ee0:	55                   	push   %ebp
 8063ee1:	57                   	push   %edi
 8063ee2:	56                   	push   %esi
 8063ee3:	53                   	push   %ebx
 8063ee4:	e8 07 5c fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8063ee9:	81 c3 17 c1 04 00    	add    $0x4c117,%ebx
 8063eef:	83 ec 4c             	sub    $0x4c,%esp
 8063ef2:	8b 74 24 60          	mov    0x60(%esp),%esi
 8063ef6:	8b ab 88 23 5b 01    	mov    0x15b2388(%ebx),%ebp
 8063efc:	85 ed                	test   %ebp,%ebp
 8063efe:	0f 84 68 02 00 00    	je     806416c <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x28c>
 8063f04:	8b 83 8c 23 5b 01    	mov    0x15b238c(%ebx),%eax
 8063f0a:	89 44 24 28          	mov    %eax,0x28(%esp)
 8063f0e:	8b 7c 24 28          	mov    0x28(%esp),%edi
 8063f12:	85 ff                	test   %edi,%edi
 8063f14:	74 3a                	je     8063f50 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x70>
 8063f16:	8b ab 88 23 5b 01    	mov    0x15b2388(%ebx),%ebp
 8063f1c:	31 ff                	xor    %edi,%edi
 8063f1e:	66 90                	xchg   %ax,%ax
 8063f20:	8b 4d 38             	mov    0x38(%ebp),%ecx
 8063f23:	85 c9                	test   %ecx,%ecx
 8063f25:	74 1d                	je     8063f44 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x64>
 8063f27:	89 e8                	mov    %ebp,%eax
 8063f29:	31 d2                	xor    %edx,%edx
 8063f2b:	90                   	nop
 8063f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8063f30:	3b 70 08             	cmp    0x8(%eax),%esi
 8063f33:	72 05                	jb     8063f3a <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x5a>
 8063f35:	3b 70 0c             	cmp    0xc(%eax),%esi
 8063f38:	72 26                	jb     8063f60 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x80>
 8063f3a:	83 c2 01             	add    $0x1,%edx
 8063f3d:	83 c0 08             	add    $0x8,%eax
 8063f40:	39 ca                	cmp    %ecx,%edx
 8063f42:	75 ec                	jne    8063f30 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x50>
 8063f44:	83 c7 01             	add    $0x1,%edi
 8063f47:	83 c5 3c             	add    $0x3c,%ebp
 8063f4a:	3b 7c 24 28          	cmp    0x28(%esp),%edi
 8063f4e:	75 d0                	jne    8063f20 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x40>
 8063f50:	83 c4 4c             	add    $0x4c,%esp
 8063f53:	31 c0                	xor    %eax,%eax
 8063f55:	5b                   	pop    %ebx
 8063f56:	5e                   	pop    %esi
 8063f57:	5f                   	pop    %edi
 8063f58:	5d                   	pop    %ebp
 8063f59:	c3                   	ret    
 8063f5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8063f60:	8b 45 00             	mov    0x0(%ebp),%eax
 8063f63:	8b 4c 24 64          	mov    0x64(%esp),%ecx
 8063f67:	89 44 24 28          	mov    %eax,0x28(%esp)
 8063f6b:	89 f0                	mov    %esi,%eax
 8063f6d:	2b 45 04             	sub    0x4(%ebp),%eax
 8063f70:	89 0c 24             	mov    %ecx,(%esp)
 8063f73:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%esp)
 8063f7a:	00 
 8063f7b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8063f82:	00 
 8063f83:	89 c7                	mov    %eax,%edi
 8063f85:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8063f89:	e8 b2 d9 ff ff       	call   8061940 <_ZN11__sanitizer15internal_memsetEPvim>
 8063f8e:	8b 4c 24 64          	mov    0x64(%esp),%ecx
 8063f92:	8b 44 24 28          	mov    0x28(%esp),%eax
 8063f96:	89 31                	mov    %esi,(%ecx)
 8063f98:	89 04 24             	mov    %eax,(%esp)
 8063f9b:	e8 30 da ff ff       	call   80619d0 <_ZN11__sanitizer15internal_strdupEPKc>
 8063fa0:	8b 4c 24 64          	mov    0x64(%esp),%ecx
 8063fa4:	89 79 08             	mov    %edi,0x8(%ecx)
 8063fa7:	8b bb 94 23 5b 01    	mov    0x15b2394(%ebx),%edi
 8063fad:	89 41 04             	mov    %eax,0x4(%ecx)
 8063fb0:	85 ff                	test   %edi,%edi
 8063fb2:	0f 84 88 00 00 00    	je     8064040 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x160>
 8063fb8:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8063fbc:	c7 44 24 10 00 40 00 	movl   $0x4000,0x10(%esp)
 8063fc3:	00 
 8063fc4:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8063fc8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8063fcf:	00 
 8063fd0:	89 44 24 04          	mov    %eax,0x4(%esp)
 8063fd4:	8b 44 24 28          	mov    0x28(%esp),%eax
 8063fd8:	89 04 24             	mov    %eax,(%esp)
 8063fdb:	e8 50 59 fe ff       	call   8049930 <__sanitizer_symbolize_data@plt>
 8063fe0:	84 c0                	test   %al,%al
 8063fe2:	0f 84 77 01 00 00    	je     806415f <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x27f>
 8063fe8:	8b 44 24 64          	mov    0x64(%esp),%eax
 8063fec:	8d 93 b6 61 fd ff    	lea    -0x29e4a(%ebx),%edx
 8063ff2:	83 c0 0c             	add    $0xc,%eax
 8063ff5:	89 04 24             	mov    %eax,(%esp)
 8063ff8:	89 f8                	mov    %edi,%eax
 8063ffa:	e8 e1 f5 ff ff       	call   80635e0 <_ZN11__sanitizerL12ExtractTokenEPKcS1_PPc>
 8063fff:	8b 7c 24 64          	mov    0x64(%esp),%edi
 8064003:	8d 57 10             	lea    0x10(%edi),%edx
 8064006:	89 14 24             	mov    %edx,(%esp)
 8064009:	8d 93 5e 63 fd ff    	lea    -0x29ca2(%ebx),%edx
 806400f:	e8 7c f6 ff ff       	call   8063690 <_ZN11__sanitizerL11ExtractUptrEPKcS1_Pm>
 8064014:	8b 7c 24 64          	mov    0x64(%esp),%edi
 8064018:	8d 57 14             	lea    0x14(%edi),%edx
 806401b:	89 14 24             	mov    %edx,(%esp)
 806401e:	8d 93 b6 61 fd ff    	lea    -0x29e4a(%ebx),%edx
 8064024:	e8 67 f6 ff ff       	call   8063690 <_ZN11__sanitizerL11ExtractUptrEPKcS1_Pm>
 8064029:	8b 7c 24 64          	mov    0x64(%esp),%edi
 806402d:	8b 45 04             	mov    0x4(%ebp),%eax
 8064030:	01 47 10             	add    %eax,0x10(%edi)
 8064033:	83 c4 4c             	add    $0x4c,%esp
 8064036:	5b                   	pop    %ebx
 8064037:	b8 01 00 00 00       	mov    $0x1,%eax
 806403c:	5e                   	pop    %esi
 806403d:	5f                   	pop    %edi
 806403e:	5d                   	pop    %ebp
 806403f:	c3                   	ret    
 8064040:	8b 8b e4 ff ff ff    	mov    -0x1c(%ebx),%ecx
 8064046:	85 c9                	test   %ecx,%ecx
 8064048:	0f 84 7a 03 00 00    	je     80643c8 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x4e8>
 806404e:	8b 93 f4 ff ff ff    	mov    -0xc(%ebx),%edx
 8064054:	85 d2                	test   %edx,%edx
 8064056:	0f 84 6c 03 00 00    	je     80643c8 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x4e8>
 806405c:	8d 83 98 23 5b 01    	lea    0x15b2398(%ebx),%eax
 8064062:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8064069:	00 
 806406a:	89 04 24             	mov    %eax,(%esp)
 806406d:	e8 9e e0 ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8064072:	85 c0                	test   %eax,%eax
 8064074:	89 83 94 23 5b 01    	mov    %eax,0x15b2394(%ebx)
 806407a:	0f 85 41 03 00 00    	jne    80643c1 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x4e1>
 8064080:	8b bb 90 23 5b 01    	mov    0x15b2390(%ebx),%edi
 8064086:	85 ff                	test   %edi,%edi
 8064088:	0f 84 4c 02 00 00    	je     80642da <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x3fa>
 806408e:	8b 44 24 28          	mov    0x28(%esp),%eax
 8064092:	85 c0                	test   %eax,%eax
 8064094:	0f 84 67 02 00 00    	je     8064301 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x421>
 806409a:	8d 83 06 71 fd ff    	lea    -0x28efa(%ebx),%eax
 80640a0:	89 44 24 30          	mov    %eax,0x30(%esp)
 80640a4:	8d 83 c7 70 fd ff    	lea    -0x28f39(%ebx),%eax
 80640aa:	89 44 24 34          	mov    %eax,0x34(%esp)
 80640ae:	8d 83 d8 6f fd ff    	lea    -0x29028(%ebx),%eax
 80640b4:	89 44 24 38          	mov    %eax,0x38(%esp)
 80640b8:	89 6c 24 3c          	mov    %ebp,0x3c(%esp)
 80640bc:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 80640c0:	8d 6f 0c             	lea    0xc(%edi),%ebp
 80640c3:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 80640ca:	00 
 80640cb:	89 2c 24             	mov    %ebp,(%esp)
 80640ce:	89 44 24 14          	mov    %eax,0x14(%esp)
 80640d2:	8b 44 24 28          	mov    0x28(%esp),%eax
 80640d6:	89 44 24 10          	mov    %eax,0x10(%esp)
 80640da:	8b 44 24 30          	mov    0x30(%esp),%eax
 80640de:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80640e2:	8b 44 24 34          	mov    0x34(%esp),%eax
 80640e6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80640ea:	e8 21 d6 ff ff       	call   8061710 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 80640ef:	89 2c 24             	mov    %ebp,(%esp)
 80640f2:	e8 59 da ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 80640f7:	85 c0                	test   %eax,%eax
 80640f9:	0f 84 c9 00 00 00    	je     80641c8 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x2e8>
 80640ff:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064103:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8064107:	8b 47 08             	mov    0x8(%edi),%eax
 806410a:	89 04 24             	mov    %eax,(%esp)
 806410d:	e8 3e 10 00 00       	call   8065150 <_ZN11__sanitizer14internal_writeEiPKvm>
 8064112:	83 e8 01             	sub    $0x1,%eax
 8064115:	83 f8 fd             	cmp    $0xfffffffd,%eax
 8064118:	0f 86 aa 00 00 00    	jbe    80641c8 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x2e8>
 806411e:	8b 47 08             	mov    0x8(%edi),%eax
 8064121:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064125:	8d 83 a8 6f fd ff    	lea    -0x29058(%ebx),%eax
 806412b:	89 04 24             	mov    %eax,(%esp)
 806412e:	e8 0d d6 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8064133:	8b b3 90 23 5b 01    	mov    0x15b2390(%ebx),%esi
 8064139:	8b 86 0c 40 00 00    	mov    0x400c(%esi),%eax
 806413f:	83 f8 04             	cmp    $0x4,%eax
 8064142:	0f 86 f0 00 00 00    	jbe    8064238 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x358>
 8064148:	80 bb a0 23 5b 01 00 	cmpb   $0x0,0x15b23a0(%ebx)
 806414f:	0f 84 6b 01 00 00    	je     80642c0 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x3e0>
 8064155:	c7 83 90 23 5b 01 00 	movl   $0x0,0x15b2390(%ebx)
 806415c:	00 00 00 
 806415f:	83 c4 4c             	add    $0x4c,%esp
 8064162:	b8 01 00 00 00       	mov    $0x1,%eax
 8064167:	5b                   	pop    %ebx
 8064168:	5e                   	pop    %esi
 8064169:	5f                   	pop    %edi
 806416a:	5d                   	pop    %ebp
 806416b:	c3                   	ret    
 806416c:	8d 83 98 23 5b 01    	lea    0x15b2398(%ebx),%eax
 8064172:	c7 44 24 04 00 00 0f 	movl   $0xf0000,0x4(%esp)
 8064179:	00 
 806417a:	89 04 24             	mov    %eax,(%esp)
 806417d:	e8 8e df ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8064182:	85 c0                	test   %eax,%eax
 8064184:	89 83 88 23 5b 01    	mov    %eax,0x15b2388(%ebx)
 806418a:	0f 84 f1 01 00 00    	je     8064381 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x4a1>
 8064190:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8064197:	00 
 8064198:	89 04 24             	mov    %eax,(%esp)
 806419b:	e8 00 28 00 00       	call   80669a0 <_ZN11__sanitizer16GetListOfModulesEPNS_12LoadedModuleEm>
 80641a0:	31 c9                	xor    %ecx,%ecx
 80641a2:	85 c0                	test   %eax,%eax
 80641a4:	89 83 8c 23 5b 01    	mov    %eax,0x15b238c(%ebx)
 80641aa:	0f 84 91 01 00 00    	je     8064341 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x461>
 80641b0:	3d ff 3f 00 00       	cmp    $0x3fff,%eax
 80641b5:	0f 87 c7 00 00 00    	ja     8064282 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x3a2>
 80641bb:	89 44 24 28          	mov    %eax,0x28(%esp)
 80641bf:	e9 4a fd ff ff       	jmp    8063f0e <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x2e>
 80641c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80641c8:	31 f6                	xor    %esi,%esi
 80641ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80641d0:	b8 00 40 00 00       	mov    $0x4000,%eax
 80641d5:	29 f0                	sub    %esi,%eax
 80641d7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80641db:	8d 44 35 00          	lea    0x0(%ebp,%esi,1),%eax
 80641df:	89 44 24 04          	mov    %eax,0x4(%esp)
 80641e3:	8b 47 04             	mov    0x4(%edi),%eax
 80641e6:	89 04 24             	mov    %eax,(%esp)
 80641e9:	e8 02 0f 00 00       	call   80650f0 <_ZN11__sanitizer13internal_readEiPvm>
 80641ee:	8d 50 ff             	lea    -0x1(%eax),%edx
 80641f1:	83 fa fd             	cmp    $0xfffffffd,%edx
 80641f4:	77 2a                	ja     8064220 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x340>
 80641f6:	01 c6                	add    %eax,%esi
 80641f8:	83 fe 01             	cmp    $0x1,%esi
 80641fb:	76 d3                	jbe    80641d0 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x2f0>
 80641fd:	80 7c 35 ff 0a       	cmpb   $0xa,-0x1(%ebp,%esi,1)
 8064202:	75 cc                	jne    80641d0 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x2f0>
 8064204:	80 7c 35 fe 0a       	cmpb   $0xa,-0x2(%ebp,%esi,1)
 8064209:	75 c5                	jne    80641d0 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x2f0>
 806420b:	85 ed                	test   %ebp,%ebp
 806420d:	0f 84 20 ff ff ff    	je     8064133 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x253>
 8064213:	89 ef                	mov    %ebp,%edi
 8064215:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp
 8064219:	e9 ca fd ff ff       	jmp    8063fe8 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x108>
 806421e:	66 90                	xchg   %ax,%ax
 8064220:	8b 47 04             	mov    0x4(%edi),%eax
 8064223:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064227:	8b 44 24 38          	mov    0x38(%esp),%eax
 806422b:	89 04 24             	mov    %eax,(%esp)
 806422e:	e8 0d d5 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 8064233:	e9 fb fe ff ff       	jmp    8064133 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x253>
 8064238:	83 c0 01             	add    $0x1,%eax
 806423b:	89 86 0c 40 00 00    	mov    %eax,0x400c(%esi)
 8064241:	8b 46 04             	mov    0x4(%esi),%eax
 8064244:	89 04 24             	mov    %eax,(%esp)
 8064247:	e8 c4 0d 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 806424c:	8b 46 08             	mov    0x8(%esi),%eax
 806424f:	89 04 24             	mov    %eax,(%esp)
 8064252:	e8 b9 0d 00 00       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8064257:	8d 46 08             	lea    0x8(%esi),%eax
 806425a:	89 44 24 08          	mov    %eax,0x8(%esp)
 806425e:	8d 46 04             	lea    0x4(%esi),%eax
 8064261:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064265:	8b 06                	mov    (%esi),%eax
 8064267:	89 04 24             	mov    %eax,(%esp)
 806426a:	e8 c1 23 00 00       	call   8066630 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_>
 806426f:	84 c0                	test   %al,%al
 8064271:	0f 84 d1 fe ff ff    	je     8064148 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x268>
 8064277:	8b bb 90 23 5b 01    	mov    0x15b2390(%ebx),%edi
 806427d:	e9 3a fe ff ff       	jmp    80640bc <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x1dc>
 8064282:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8064286:	8d 83 28 6f fd ff    	lea    -0x290d8(%ebx),%eax
 806428c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064290:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8064296:	c7 44 24 14 00 40 00 	movl   $0x4000,0x14(%esp)
 806429d:	00 
 806429e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80642a5:	00 
 80642a6:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 80642aa:	c7 44 24 04 6a 01 00 	movl   $0x16a,0x4(%esp)
 80642b1:	00 
 80642b2:	89 04 24             	mov    %eax,(%esp)
 80642b5:	e8 f6 e0 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80642ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80642c0:	8d 83 08 70 fd ff    	lea    -0x28ff8(%ebx),%eax
 80642c6:	89 04 24             	mov    %eax,(%esp)
 80642c9:	e8 72 d4 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80642ce:	c6 83 a0 23 5b 01 01 	movb   $0x1,0x15b23a0(%ebx)
 80642d5:	e9 7b fe ff ff       	jmp    8064155 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x275>
 80642da:	80 bb a0 23 5b 01 00 	cmpb   $0x0,0x15b23a0(%ebx)
 80642e1:	0f 85 78 fe ff ff    	jne    806415f <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x27f>
 80642e7:	8d 83 58 6f fd ff    	lea    -0x290a8(%ebx),%eax
 80642ed:	89 04 24             	mov    %eax,(%esp)
 80642f0:	e8 4b d4 ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80642f5:	c6 83 a0 23 5b 01 01 	movb   $0x1,0x15b23a0(%ebx)
 80642fc:	e9 5e fe ff ff       	jmp    806415f <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x27f>
 8064301:	8d 83 b0 70 fd ff    	lea    -0x28f50(%ebx),%eax
 8064307:	89 44 24 08          	mov    %eax,0x8(%esp)
 806430b:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8064311:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8064318:	00 
 8064319:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8064320:	00 
 8064321:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8064328:	00 
 8064329:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8064330:	00 
 8064331:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)
 8064338:	00 
 8064339:	89 04 24             	mov    %eax,(%esp)
 806433c:	e8 6f e0 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8064341:	8d 83 99 70 fd ff    	lea    -0x28f67(%ebx),%eax
 8064347:	89 44 24 08          	mov    %eax,0x8(%esp)
 806434b:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8064351:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8064358:	00 
 8064359:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8064360:	00 
 8064361:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8064368:	00 
 8064369:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8064370:	00 
 8064371:	c7 44 24 04 69 01 00 	movl   $0x169,0x4(%esp)
 8064378:	00 
 8064379:	89 04 24             	mov    %eax,(%esp)
 806437c:	e8 2f e0 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8064381:	8d 83 85 70 fd ff    	lea    -0x28f7b(%ebx),%eax
 8064387:	89 44 24 08          	mov    %eax,0x8(%esp)
 806438b:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8064391:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8064398:	00 
 8064399:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80643a0:	00 
 80643a1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80643a8:	00 
 80643a9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80643b0:	00 
 80643b1:	c7 44 24 04 67 01 00 	movl   $0x167,0x4(%esp)
 80643b8:	00 
 80643b9:	89 04 24             	mov    %eax,(%esp)
 80643bc:	e8 ef df ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80643c1:	89 c7                	mov    %eax,%edi
 80643c3:	e9 f0 fb ff ff       	jmp    8063fb8 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0xd8>
 80643c8:	c7 83 94 23 5b 01 00 	movl   $0x0,0x15b2394(%ebx)
 80643cf:	00 00 00 
 80643d2:	e9 a9 fc ff ff       	jmp    8064080 <_ZN11__sanitizer13SymbolizeDataEmPNS_8DataInfoE+0x1a0>
 80643d7:	89 f6                	mov    %esi,%esi
 80643d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080643e0 <_ZN11__sanitizer28InitializeExternalSymbolizerEPKc>:
 80643e0:	55                   	push   %ebp
 80643e1:	57                   	push   %edi
 80643e2:	56                   	push   %esi
 80643e3:	53                   	push   %ebx
 80643e4:	83 ec 3c             	sub    $0x3c,%esp
 80643e7:	e8 04 57 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80643ec:	81 c3 14 bc 04 00    	add    $0x4bc14,%ebx
 80643f2:	8b 74 24 50          	mov    0x50(%esp),%esi
 80643f6:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 80643fa:	89 44 24 08          	mov    %eax,0x8(%esp)
 80643fe:	8d 44 24 28          	lea    0x28(%esp),%eax
 8064402:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064406:	89 34 24             	mov    %esi,(%esp)
 8064409:	e8 22 22 00 00       	call   8066630 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_>
 806440e:	84 c0                	test   %al,%al
 8064410:	89 c5                	mov    %eax,%ebp
 8064412:	75 0c                	jne    8064420 <_ZN11__sanitizer28InitializeExternalSymbolizerEPKc+0x40>
 8064414:	83 c4 3c             	add    $0x3c,%esp
 8064417:	89 e8                	mov    %ebp,%eax
 8064419:	5b                   	pop    %ebx
 806441a:	5e                   	pop    %esi
 806441b:	5f                   	pop    %edi
 806441c:	5d                   	pop    %ebp
 806441d:	c3                   	ret    
 806441e:	66 90                	xchg   %ax,%ax
 8064420:	8d 83 98 23 5b 01    	lea    0x15b2398(%ebx),%eax
 8064426:	c7 44 24 04 10 40 00 	movl   $0x4010,0x4(%esp)
 806442d:	00 
 806442e:	89 04 24             	mov    %eax,(%esp)
 8064431:	e8 da dc ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8064436:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 806443a:	85 f6                	test   %esi,%esi
 806443c:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 8064440:	89 50 08             	mov    %edx,0x8(%eax)
 8064443:	89 30                	mov    %esi,(%eax)
 8064445:	89 48 04             	mov    %ecx,0x4(%eax)
 8064448:	c7 80 0c 40 00 00 00 	movl   $0x0,0x400c(%eax)
 806444f:	00 00 00 
 8064452:	74 2c                	je     8064480 <_ZN11__sanitizer28InitializeExternalSymbolizerEPKc+0xa0>
 8064454:	89 cf                	mov    %ecx,%edi
 8064456:	c1 ff 1f             	sar    $0x1f,%edi
 8064459:	21 f9                	and    %edi,%ecx
 806445b:	83 f9 ff             	cmp    $0xffffffff,%ecx
 806445e:	74 60                	je     80644c0 <_ZN11__sanitizer28InitializeExternalSymbolizerEPKc+0xe0>
 8064460:	89 d7                	mov    %edx,%edi
 8064462:	c1 ff 1f             	sar    $0x1f,%edi
 8064465:	21 fa                	and    %edi,%edx
 8064467:	83 fa ff             	cmp    $0xffffffff,%edx
 806446a:	0f 84 90 00 00 00    	je     8064500 <_ZN11__sanitizer28InitializeExternalSymbolizerEPKc+0x120>
 8064470:	89 83 90 23 5b 01    	mov    %eax,0x15b2390(%ebx)
 8064476:	83 c4 3c             	add    $0x3c,%esp
 8064479:	89 e8                	mov    %ebp,%eax
 806447b:	5b                   	pop    %ebx
 806447c:	5e                   	pop    %esi
 806447d:	5f                   	pop    %edi
 806447e:	5d                   	pop    %ebp
 806447f:	c3                   	ret    
 8064480:	8d 83 0c 71 fd ff    	lea    -0x28ef4(%ebx),%eax
 8064486:	89 44 24 08          	mov    %eax,0x8(%esp)
 806448a:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8064490:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8064497:	00 
 8064498:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806449f:	00 
 80644a0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80644a7:	00 
 80644a8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80644af:	00 
 80644b0:	c7 44 24 04 69 00 00 	movl   $0x69,0x4(%esp)
 80644b7:	00 
 80644b8:	89 04 24             	mov    %eax,(%esp)
 80644bb:	e8 f0 de ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80644c0:	8d 83 44 70 fd ff    	lea    -0x28fbc(%ebx),%eax
 80644c6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80644ca:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 80644d0:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%esp)
 80644d7:	ff 
 80644d8:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
 80644df:	ff 
 80644e0:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
 80644e7:	ff 
 80644e8:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 80644ef:	ff 
 80644f0:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)
 80644f7:	00 
 80644f8:	89 04 24             	mov    %eax,(%esp)
 80644fb:	e8 b0 de ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8064500:	8d 83 64 70 fd ff    	lea    -0x28f9c(%ebx),%eax
 8064506:	89 44 24 08          	mov    %eax,0x8(%esp)
 806450a:	8d 83 e0 6e fd ff    	lea    -0x29120(%ebx),%eax
 8064510:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%esp)
 8064517:	ff 
 8064518:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
 806451f:	ff 
 8064520:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
 8064527:	ff 
 8064528:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%esp)
 806452f:	ff 
 8064530:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)
 8064537:	00 
 8064538:	89 04 24             	mov    %eax,(%esp)
 806453b:	e8 70 de ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

08064540 <_ZN11__sanitizer21IsSymbolizerAvailableEv>:
 8064540:	53                   	push   %ebx
 8064541:	e8 aa 55 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064546:	81 c3 ba ba 04 00    	add    $0x4baba,%ebx
 806454c:	83 ec 18             	sub    $0x18,%esp
 806454f:	8b 83 94 23 5b 01    	mov    0x15b2394(%ebx),%eax
 8064555:	85 c0                	test   %eax,%eax
 8064557:	74 0f                	je     8064568 <_ZN11__sanitizer21IsSymbolizerAvailableEv+0x28>
 8064559:	83 c4 18             	add    $0x18,%esp
 806455c:	b8 01 00 00 00       	mov    $0x1,%eax
 8064561:	5b                   	pop    %ebx
 8064562:	c3                   	ret    
 8064563:	90                   	nop
 8064564:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064568:	8b 8b e4 ff ff ff    	mov    -0x1c(%ebx),%ecx
 806456e:	85 c9                	test   %ecx,%ecx
 8064570:	74 3a                	je     80645ac <_ZN11__sanitizer21IsSymbolizerAvailableEv+0x6c>
 8064572:	8b 93 f4 ff ff ff    	mov    -0xc(%ebx),%edx
 8064578:	85 d2                	test   %edx,%edx
 806457a:	74 30                	je     80645ac <_ZN11__sanitizer21IsSymbolizerAvailableEv+0x6c>
 806457c:	8d 83 98 23 5b 01    	lea    0x15b2398(%ebx),%eax
 8064582:	c7 44 24 04 00 40 00 	movl   $0x4000,0x4(%esp)
 8064589:	00 
 806458a:	89 04 24             	mov    %eax,(%esp)
 806458d:	e8 7e db ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8064592:	85 c0                	test   %eax,%eax
 8064594:	89 83 94 23 5b 01    	mov    %eax,0x15b2394(%ebx)
 806459a:	75 bd                	jne    8064559 <_ZN11__sanitizer21IsSymbolizerAvailableEv+0x19>
 806459c:	8b 83 90 23 5b 01    	mov    0x15b2390(%ebx),%eax
 80645a2:	85 c0                	test   %eax,%eax
 80645a4:	0f 95 c0             	setne  %al
 80645a7:	83 c4 18             	add    $0x18,%esp
 80645aa:	5b                   	pop    %ebx
 80645ab:	c3                   	ret    
 80645ac:	c7 83 94 23 5b 01 00 	movl   $0x0,0x15b2394(%ebx)
 80645b3:	00 00 00 
 80645b6:	eb e4                	jmp    806459c <_ZN11__sanitizer21IsSymbolizerAvailableEv+0x5c>
 80645b8:	66 90                	xchg   %ax,%ax
 80645ba:	66 90                	xchg   %ax,%ax
 80645bc:	66 90                	xchg   %ax,%ax
 80645be:	66 90                	xchg   %ax,%ax

080645c0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>:
 80645c0:	57                   	push   %edi
 80645c1:	56                   	push   %esi
 80645c2:	53                   	push   %ebx
 80645c3:	83 ec 10             	sub    $0x10,%esp
 80645c6:	8b 74 24 20          	mov    0x20(%esp),%esi
 80645ca:	e8 21 55 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80645cf:	81 c3 31 ba 04 00    	add    $0x4ba31,%ebx
 80645d5:	8b 7c 24 24          	mov    0x24(%esp),%edi
 80645d9:	85 f6                	test   %esi,%esi
 80645db:	74 2b                	je     8064608 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x48>
 80645dd:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80645e1:	89 34 24             	mov    %esi,(%esp)
 80645e4:	e8 87 d6 ff ff       	call   8061c70 <_ZN11__sanitizer15internal_strstrEPKcS1_>
 80645e9:	39 c6                	cmp    %eax,%esi
 80645eb:	74 0b                	je     80645f8 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x38>
 80645ed:	83 c4 10             	add    $0x10,%esp
 80645f0:	89 f0                	mov    %esi,%eax
 80645f2:	5b                   	pop    %ebx
 80645f3:	5e                   	pop    %esi
 80645f4:	5f                   	pop    %edi
 80645f5:	c3                   	ret    
 80645f6:	66 90                	xchg   %ax,%ax
 80645f8:	89 3c 24             	mov    %edi,(%esp)
 80645fb:	e8 50 d5 ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8064600:	01 c6                	add    %eax,%esi
 8064602:	eb e9                	jmp    80645ed <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x2d>
 8064604:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064608:	31 f6                	xor    %esi,%esi
 806460a:	eb e1                	jmp    80645ed <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x2d>
 806460c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08064610 <_ZN11__sanitizer10StackTrace24GetPreviousInstructionPcEm>:
 8064610:	8b 44 24 04          	mov    0x4(%esp),%eax
 8064614:	83 e8 01             	sub    $0x1,%eax
 8064617:	c3                   	ret    
 8064618:	90                   	nop
 8064619:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08064620 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE>:
 8064620:	55                   	push   %ebp
 8064621:	57                   	push   %edi
 8064622:	56                   	push   %esi
 8064623:	53                   	push   %ebx
 8064624:	83 ec 7c             	sub    $0x7c,%esp
 8064627:	e8 c4 54 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806462c:	81 c3 d4 b9 04 00    	add    $0x4b9d4,%ebx
 8064632:	0f b6 84 24 98 00 00 	movzbl 0x98(%esp),%eax
 8064639:	00 
 806463a:	88 44 24 47          	mov    %al,0x47(%esp)
 806463e:	8d 44 24 60          	lea    0x60(%esp),%eax
 8064642:	89 04 24             	mov    %eax,(%esp)
 8064645:	89 44 24 48          	mov    %eax,0x48(%esp)
 8064649:	8d b3 f7 68 fd ff    	lea    -0x29709(%ebx),%esi
 806464f:	e8 8c 10 00 00       	call   80656e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Ev>
 8064654:	e8 b7 db ff ff       	call   8062210 <_ZN11__sanitizer17GetPageSizeCachedEv>
 8064659:	89 74 24 04          	mov    %esi,0x4(%esp)
 806465d:	01 c0                	add    %eax,%eax
 806465f:	89 04 24             	mov    %eax,(%esp)
 8064662:	89 44 24 40          	mov    %eax,0x40(%esp)
 8064666:	e8 75 eb ff ff       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 806466b:	89 74 24 04          	mov    %esi,0x4(%esp)
 806466f:	c7 04 24 00 07 00 00 	movl   $0x700,(%esp)
 8064676:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 806467a:	e8 61 eb ff ff       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 806467f:	8b 94 24 94 00 00 00 	mov    0x94(%esp),%edx
 8064686:	85 d2                	test   %edx,%edx
 8064688:	89 44 24 4c          	mov    %eax,0x4c(%esp)
 806468c:	0f 84 6e 02 00 00    	je     8064900 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x2e0>
 8064692:	8b 84 24 90 00 00 00 	mov    0x90(%esp),%eax
 8064699:	8b 38                	mov    (%eax),%edi
 806469b:	85 ff                	test   %edi,%edi
 806469d:	0f 84 5d 02 00 00    	je     8064900 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x2e0>
 80646a3:	8d 83 1d 71 fd ff    	lea    -0x28ee3(%ebx),%eax
 80646a9:	31 ed                	xor    %ebp,%ebp
 80646ab:	89 44 24 28          	mov    %eax,0x28(%esp)
 80646af:	8d 83 b6 61 fd ff    	lea    -0x29e4a(%ebx),%eax
 80646b5:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 80646bc:	00 
 80646bd:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 80646c1:	e9 7d 00 00 00       	jmp    8064743 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x123>
 80646c6:	66 90                	xchg   %ax,%ax
 80646c8:	8b 44 24 28          	mov    0x28(%esp),%eax
 80646cc:	89 7c 24 08          	mov    %edi,0x8(%esp)
 80646d0:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80646d4:	89 04 24             	mov    %eax,(%esp)
 80646d7:	e8 a4 cf ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80646dc:	8b 44 24 40          	mov    0x40(%esp),%eax
 80646e0:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80646e4:	89 44 24 10          	mov    %eax,0x10(%esp)
 80646e8:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 80646ec:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80646f0:	8d 44 24 5c          	lea    0x5c(%esp),%eax
 80646f4:	89 44 24 08          	mov    %eax,0x8(%esp)
 80646f8:	8b 44 24 48          	mov    0x48(%esp),%eax
 80646fc:	89 04 24             	mov    %eax,(%esp)
 80646ff:	e8 0c 19 00 00       	call   8066010 <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm>
 8064704:	84 c0                	test   %al,%al
 8064706:	0f 85 34 02 00 00    	jne    8064940 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x320>
 806470c:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8064710:	83 c5 01             	add    $0x1,%ebp
 8064713:	89 04 24             	mov    %eax,(%esp)
 8064716:	e8 65 cf ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 806471b:	83 44 24 38 01       	addl   $0x1,0x38(%esp)
 8064720:	8b 44 24 38          	mov    0x38(%esp),%eax
 8064724:	3b 84 24 94 00 00 00 	cmp    0x94(%esp),%eax
 806472b:	0f 84 cf 01 00 00    	je     8064900 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x2e0>
 8064731:	8b 8c 24 90 00 00 00 	mov    0x90(%esp),%ecx
 8064738:	8b 3c 81             	mov    (%ecx,%eax,4),%edi
 806473b:	85 ff                	test   %edi,%edi
 806473d:	0f 84 bd 01 00 00    	je     8064900 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x2e0>
 8064743:	8b 84 24 a0 00 00 00 	mov    0xa0(%esp),%eax
 806474a:	83 ef 01             	sub    $0x1,%edi
 806474d:	85 c0                	test   %eax,%eax
 806474f:	74 22                	je     8064773 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x153>
 8064751:	8b 44 24 40          	mov    0x40(%esp),%eax
 8064755:	89 3c 24             	mov    %edi,(%esp)
 8064758:	89 44 24 08          	mov    %eax,0x8(%esp)
 806475c:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8064760:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064764:	ff 94 24 a0 00 00 00 	call   *0xa0(%esp)
 806476b:	84 c0                	test   %al,%al
 806476d:	0f 85 3d 01 00 00    	jne    80648b0 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x290>
 8064773:	80 7c 24 47 00       	cmpb   $0x0,0x47(%esp)
 8064778:	0f 84 4a ff ff ff    	je     80646c8 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0xa8>
 806477e:	8b 74 24 4c          	mov    0x4c(%esp),%esi
 8064782:	c7 44 24 08 00 07 00 	movl   $0x700,0x8(%esp)
 8064789:	00 
 806478a:	89 3c 24             	mov    %edi,(%esp)
 806478d:	89 74 24 04          	mov    %esi,0x4(%esp)
 8064791:	e8 aa f0 ff ff       	call   8063840 <_ZN11__sanitizer13SymbolizeCodeEmPNS_11AddressInfoEm>
 8064796:	85 c0                	test   %eax,%eax
 8064798:	0f 84 2a ff ff ff    	je     80646c8 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0xa8>
 806479e:	01 e8                	add    %ebp,%eax
 80647a0:	89 44 24 24          	mov    %eax,0x24(%esp)
 80647a4:	8d 83 2c 71 fd ff    	lea    -0x28ed4(%ebx),%eax
 80647aa:	89 44 24 34          	mov    %eax,0x34(%esp)
 80647ae:	89 7c 24 30          	mov    %edi,0x30(%esp)
 80647b2:	e9 86 00 00 00       	jmp    806483d <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x21d>
 80647b7:	90                   	nop
 80647b8:	8b 8c 24 9c 00 00 00 	mov    0x9c(%esp),%ecx
 80647bf:	8b 56 14             	mov    0x14(%esi),%edx
 80647c2:	8b 7e 18             	mov    0x18(%esi),%edi
 80647c5:	89 04 24             	mov    %eax,(%esp)
 80647c8:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 80647cc:	89 54 24 20          	mov    %edx,0x20(%esp)
 80647d0:	e8 eb fd ff ff       	call   80645c0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 80647d5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80647d9:	8d 83 1a 6b fd ff    	lea    -0x294e6(%ebx),%eax
 80647df:	89 04 24             	mov    %eax,(%esp)
 80647e2:	e8 99 ce ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80647e7:	8b 54 24 20          	mov    0x20(%esp),%edx
 80647eb:	85 d2                	test   %edx,%edx
 80647ed:	7e 2a                	jle    8064819 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x1f9>
 80647ef:	8d 83 33 71 fd ff    	lea    -0x28ecd(%ebx),%eax
 80647f5:	89 54 24 04          	mov    %edx,0x4(%esp)
 80647f9:	89 04 24             	mov    %eax,(%esp)
 80647fc:	89 44 24 20          	mov    %eax,0x20(%esp)
 8064800:	e8 7b ce ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8064805:	85 ff                	test   %edi,%edi
 8064807:	7e 10                	jle    8064819 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x1f9>
 8064809:	8b 44 24 20          	mov    0x20(%esp),%eax
 806480d:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8064811:	89 04 24             	mov    %eax,(%esp)
 8064814:	e8 67 ce ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8064819:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 806481d:	83 c5 01             	add    $0x1,%ebp
 8064820:	89 04 24             	mov    %eax,(%esp)
 8064823:	e8 58 ce ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8064828:	89 34 24             	mov    %esi,(%esp)
 806482b:	83 c6 1c             	add    $0x1c,%esi
 806482e:	e8 ad ee ff ff       	call   80636e0 <_ZN11__sanitizer11AddressInfo5ClearEv>
 8064833:	3b 6c 24 24          	cmp    0x24(%esp),%ebp
 8064837:	0f 84 b7 00 00 00    	je     80648f4 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x2d4>
 806483d:	8b 44 24 30          	mov    0x30(%esp),%eax
 8064841:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8064845:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064849:	8b 44 24 28          	mov    0x28(%esp),%eax
 806484d:	89 04 24             	mov    %eax,(%esp)
 8064850:	e8 2b ce ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8064855:	8b 46 0c             	mov    0xc(%esi),%eax
 8064858:	85 c0                	test   %eax,%eax
 806485a:	74 10                	je     806486c <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x24c>
 806485c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064860:	8b 44 24 34          	mov    0x34(%esp),%eax
 8064864:	89 04 24             	mov    %eax,(%esp)
 8064867:	e8 14 ce ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 806486c:	8b 46 10             	mov    0x10(%esi),%eax
 806486f:	85 c0                	test   %eax,%eax
 8064871:	0f 85 41 ff ff ff    	jne    80647b8 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x198>
 8064877:	8b 46 04             	mov    0x4(%esi),%eax
 806487a:	85 c0                	test   %eax,%eax
 806487c:	74 9b                	je     8064819 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x1f9>
 806487e:	8b 8c 24 9c 00 00 00 	mov    0x9c(%esp),%ecx
 8064885:	8b 7e 08             	mov    0x8(%esi),%edi
 8064888:	89 04 24             	mov    %eax,(%esp)
 806488b:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 806488f:	e8 2c fd ff ff       	call   80645c0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 8064894:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8064898:	89 44 24 04          	mov    %eax,0x4(%esp)
 806489c:	8d 83 37 71 fd ff    	lea    -0x28ec9(%ebx),%eax
 80648a2:	89 04 24             	mov    %eax,(%esp)
 80648a5:	e8 d6 cd ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80648aa:	e9 6a ff ff ff       	jmp    8064819 <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0x1f9>
 80648af:	90                   	nop
 80648b0:	8b 44 24 28          	mov    0x28(%esp),%eax
 80648b4:	89 7c 24 08          	mov    %edi,0x8(%esp)
 80648b8:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 80648bc:	89 04 24             	mov    %eax,(%esp)
 80648bf:	e8 bc cd ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80648c4:	8b 84 24 9c 00 00 00 	mov    0x9c(%esp),%eax
 80648cb:	89 44 24 04          	mov    %eax,0x4(%esp)
 80648cf:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 80648d3:	89 04 24             	mov    %eax,(%esp)
 80648d6:	e8 e5 fc ff ff       	call   80645c0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 80648db:	89 44 24 04          	mov    %eax,0x4(%esp)
 80648df:	8d 83 f6 53 fd ff    	lea    -0x2ac0a(%ebx),%eax
 80648e5:	89 04 24             	mov    %eax,(%esp)
 80648e8:	e8 93 cd ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 80648ed:	8d 45 01             	lea    0x1(%ebp),%eax
 80648f0:	89 44 24 24          	mov    %eax,0x24(%esp)
 80648f4:	8b 6c 24 24          	mov    0x24(%esp),%ebp
 80648f8:	e9 1e fe ff ff       	jmp    806471b <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0xfb>
 80648fd:	8d 76 00             	lea    0x0(%esi),%esi
 8064900:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8064904:	c7 44 24 04 00 07 00 	movl   $0x700,0x4(%esp)
 806490b:	00 
 806490c:	89 04 24             	mov    %eax,(%esp)
 806490f:	e8 9c e1 ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8064914:	8b 44 24 40          	mov    0x40(%esp),%eax
 8064918:	89 44 24 04          	mov    %eax,0x4(%esp)
 806491c:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8064920:	89 04 24             	mov    %eax,(%esp)
 8064923:	e8 88 e1 ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8064928:	8b 44 24 48          	mov    0x48(%esp),%eax
 806492c:	89 04 24             	mov    %eax,(%esp)
 806492f:	e8 fc 0b 00 00       	call   8065530 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 8064934:	83 c4 7c             	add    $0x7c,%esp
 8064937:	5b                   	pop    %ebx
 8064938:	5e                   	pop    %esi
 8064939:	5f                   	pop    %edi
 806493a:	5d                   	pop    %ebp
 806493b:	c3                   	ret    
 806493c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064940:	8b 84 24 9c 00 00 00 	mov    0x9c(%esp),%eax
 8064947:	8b 74 24 5c          	mov    0x5c(%esp),%esi
 806494b:	89 44 24 04          	mov    %eax,0x4(%esp)
 806494f:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8064953:	89 04 24             	mov    %eax,(%esp)
 8064956:	e8 65 fc ff ff       	call   80645c0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 806495b:	89 74 24 08          	mov    %esi,0x8(%esp)
 806495f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064963:	8d 83 37 71 fd ff    	lea    -0x28ec9(%ebx),%eax
 8064969:	89 04 24             	mov    %eax,(%esp)
 806496c:	e8 0f cd ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 8064971:	e9 96 fd ff ff       	jmp    806470c <_ZN11__sanitizer10StackTrace10PrintStackEPKmmbPKcPFbPKvPciE+0xec>
 8064976:	8d 76 00             	lea    0x0(%esi),%esi
 8064979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08064980 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>:
 8064980:	8b 04 24             	mov    (%esp),%eax
 8064983:	c3                   	ret    
 8064984:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806498a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08064990 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm>:
 8064990:	55                   	push   %ebp
 8064991:	57                   	push   %edi
 8064992:	56                   	push   %esi
 8064993:	53                   	push   %ebx
 8064994:	83 ec 3c             	sub    $0x3c,%esp
 8064997:	8b 74 24 50          	mov    0x50(%esp),%esi
 806499b:	e8 50 51 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80649a0:	81 c3 60 b6 04 00    	add    $0x4b660,%ebx
 80649a6:	8b 06                	mov    (%esi),%eax
 80649a8:	85 c0                	test   %eax,%eax
 80649aa:	75 09                	jne    80649b5 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0x25>
 80649ac:	8b 6e 08             	mov    0x8(%esi),%ebp
 80649af:	3b 6c 24 54          	cmp    0x54(%esp),%ebp
 80649b3:	74 43                	je     80649f8 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0x68>
 80649b5:	8d 83 5c 71 fd ff    	lea    -0x28ea4(%ebx),%eax
 80649bb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80649bf:	8d 83 84 71 fd ff    	lea    -0x28e7c(%ebx),%eax
 80649c5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80649cc:	00 
 80649cd:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80649d4:	00 
 80649d5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80649dc:	00 
 80649dd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80649e4:	00 
 80649e5:	c7 44 24 04 81 00 00 	movl   $0x81,0x4(%esp)
 80649ec:	00 
 80649ed:	89 04 24             	mov    %eax,(%esp)
 80649f0:	e8 bb d9 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80649f5:	8d 76 00             	lea    0x0(%esi),%esi
 80649f8:	8b 7c 24 5c          	mov    0x5c(%esp),%edi
 80649fc:	8b 44 24 58          	mov    0x58(%esp),%eax
 8064a00:	c7 06 01 00 00 00    	movl   $0x1,(%esi)
 8064a06:	83 ef 08             	sub    $0x8,%edi
 8064a09:	39 c7                	cmp    %eax,%edi
 8064a0b:	76 4f                	jbe    8064a5c <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xcc>
 8064a0d:	39 44 24 60          	cmp    %eax,0x60(%esp)
 8064a11:	73 49                	jae    8064a5c <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xcc>
 8064a13:	8b 56 04             	mov    0x4(%esi),%edx
 8064a16:	83 fa 01             	cmp    $0x1,%edx
 8064a19:	89 54 24 28          	mov    %edx,0x28(%esp)
 8064a1d:	76 3d                	jbe    8064a5c <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xcc>
 8064a1f:	89 6c 24 2c          	mov    %ebp,0x2c(%esp)
 8064a23:	ba 01 00 00 00       	mov    $0x1,%edx
 8064a28:	89 fd                	mov    %edi,%ebp
 8064a2a:	eb 14                	jmp    8064a40 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xb0>
 8064a2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064a30:	39 4c 24 60          	cmp    %ecx,0x60(%esp)
 8064a34:	73 26                	jae    8064a5c <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xcc>
 8064a36:	8b 16                	mov    (%esi),%edx
 8064a38:	3b 54 24 28          	cmp    0x28(%esp),%edx
 8064a3c:	73 1e                	jae    8064a5c <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xcc>
 8064a3e:	89 c8                	mov    %ecx,%eax
 8064a40:	8b 48 04             	mov    0x4(%eax),%ecx
 8064a43:	39 4c 24 2c          	cmp    %ecx,0x2c(%esp)
 8064a47:	74 09                	je     8064a52 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xc2>
 8064a49:	8d 7a 01             	lea    0x1(%edx),%edi
 8064a4c:	89 3e                	mov    %edi,(%esi)
 8064a4e:	89 4c 96 08          	mov    %ecx,0x8(%esi,%edx,4)
 8064a52:	8b 08                	mov    (%eax),%ecx
 8064a54:	39 c1                	cmp    %eax,%ecx
 8064a56:	76 04                	jbe    8064a5c <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xcc>
 8064a58:	39 cd                	cmp    %ecx,%ebp
 8064a5a:	77 d4                	ja     8064a30 <_ZN11__sanitizer10StackTrace15FastUnwindStackEmmmm+0xa0>
 8064a5c:	83 c4 3c             	add    $0x3c,%esp
 8064a5f:	5b                   	pop    %ebx
 8064a60:	5e                   	pop    %esi
 8064a61:	5f                   	pop    %edi
 8064a62:	5d                   	pop    %ebp
 8064a63:	c3                   	ret    
 8064a64:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8064a6a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08064a70 <_ZN11__sanitizer10StackTrace14PopStackFramesEm>:
 8064a70:	57                   	push   %edi
 8064a71:	56                   	push   %esi
 8064a72:	53                   	push   %ebx
 8064a73:	83 ec 20             	sub    $0x20,%esp
 8064a76:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 8064a7a:	8b 44 24 34          	mov    0x34(%esp),%eax
 8064a7e:	e8 6d 50 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064a83:	81 c3 7d b5 04 00    	add    $0x4b57d,%ebx
 8064a89:	8b 31                	mov    (%ecx),%esi
 8064a8b:	39 c6                	cmp    %eax,%esi
 8064a8d:	72 27                	jb     8064ab6 <_ZN11__sanitizer10StackTrace14PopStackFramesEm+0x46>
 8064a8f:	29 c6                	sub    %eax,%esi
 8064a91:	85 f6                	test   %esi,%esi
 8064a93:	89 31                	mov    %esi,(%ecx)
 8064a95:	74 18                	je     8064aaf <_ZN11__sanitizer10StackTrace14PopStackFramesEm+0x3f>
 8064a97:	8d 3c 81             	lea    (%ecx,%eax,4),%edi
 8064a9a:	31 c0                	xor    %eax,%eax
 8064a9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064aa0:	8b 54 87 08          	mov    0x8(%edi,%eax,4),%edx
 8064aa4:	89 54 81 08          	mov    %edx,0x8(%ecx,%eax,4)
 8064aa8:	83 c0 01             	add    $0x1,%eax
 8064aab:	39 f0                	cmp    %esi,%eax
 8064aad:	75 f1                	jne    8064aa0 <_ZN11__sanitizer10StackTrace14PopStackFramesEm+0x30>
 8064aaf:	83 c4 20             	add    $0x20,%esp
 8064ab2:	5b                   	pop    %ebx
 8064ab3:	5e                   	pop    %esi
 8064ab4:	5f                   	pop    %edi
 8064ab5:	c3                   	ret    
 8064ab6:	8d 83 43 71 fd ff    	lea    -0x28ebd(%ebx),%eax
 8064abc:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064ac0:	8d 83 84 71 fd ff    	lea    -0x28e7c(%ebx),%eax
 8064ac6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8064acd:	00 
 8064ace:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8064ad5:	00 
 8064ad6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8064add:	00 
 8064ade:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8064ae5:	00 
 8064ae6:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)
 8064aed:	00 
 8064aee:	89 04 24             	mov    %eax,(%esp)
 8064af1:	e8 ba d8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8064af6:	8d 76 00             	lea    0x0(%esi),%esi
 8064af9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08064b00 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm>:
 8064b00:	55                   	push   %ebp
 8064b01:	31 c0                	xor    %eax,%eax
 8064b03:	57                   	push   %edi
 8064b04:	56                   	push   %esi
 8064b05:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8064b09:	8b 6c 24 14          	mov    0x14(%esp),%ebp
 8064b0d:	8b 74 24 18          	mov    0x18(%esp),%esi
 8064b11:	8b 0f                	mov    (%edi),%ecx
 8064b13:	85 c9                	test   %ecx,%ecx
 8064b15:	74 1c                	je     8064b33 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm+0x33>
 8064b17:	85 f6                	test   %esi,%esi
 8064b19:	75 09                	jne    8064b24 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm+0x24>
 8064b1b:	eb 22                	jmp    8064b3f <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm+0x3f>
 8064b1d:	8d 76 00             	lea    0x0(%esi),%esi
 8064b20:	39 f0                	cmp    %esi,%eax
 8064b22:	74 0f                	je     8064b33 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm+0x33>
 8064b24:	8b 54 87 08          	mov    0x8(%edi,%eax,4),%edx
 8064b28:	89 54 85 00          	mov    %edx,0x0(%ebp,%eax,4)
 8064b2c:	83 c0 01             	add    $0x1,%eax
 8064b2f:	39 c8                	cmp    %ecx,%eax
 8064b31:	75 ed                	jne    8064b20 <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm+0x20>
 8064b33:	39 ce                	cmp    %ecx,%esi
 8064b35:	76 08                	jbe    8064b3f <_ZN11__sanitizer10StackTrace13CompressStackEPS0_Pjm+0x3f>
 8064b37:	c7 44 8d 00 00 00 00 	movl   $0x0,0x0(%ebp,%ecx,4)
 8064b3e:	00 
 8064b3f:	5e                   	pop    %esi
 8064b40:	5f                   	pop    %edi
 8064b41:	5d                   	pop    %ebp
 8064b42:	c3                   	ret    
 8064b43:	90                   	nop
 8064b44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8064b4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08064b50 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm>:
 8064b50:	57                   	push   %edi
 8064b51:	56                   	push   %esi
 8064b52:	8b 74 24 14          	mov    0x14(%esp),%esi
 8064b56:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
 8064b5a:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8064b5e:	85 f6                	test   %esi,%esi
 8064b60:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
 8064b66:	74 2b                	je     8064b93 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm+0x43>
 8064b68:	8b 17                	mov    (%edi),%edx
 8064b6a:	85 d2                	test   %edx,%edx
 8064b6c:	74 25                	je     8064b93 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm+0x43>
 8064b6e:	31 c0                	xor    %eax,%eax
 8064b70:	eb 14                	jmp    8064b86 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm+0x36>
 8064b72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8064b78:	3d ff 00 00 00       	cmp    $0xff,%eax
 8064b7d:	77 12                	ja     8064b91 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm+0x41>
 8064b7f:	8b 14 87             	mov    (%edi,%eax,4),%edx
 8064b82:	85 d2                	test   %edx,%edx
 8064b84:	74 0b                	je     8064b91 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm+0x41>
 8064b86:	83 c0 01             	add    $0x1,%eax
 8064b89:	39 c6                	cmp    %eax,%esi
 8064b8b:	89 54 81 04          	mov    %edx,0x4(%ecx,%eax,4)
 8064b8f:	77 e7                	ja     8064b78 <_ZN11__sanitizer10StackTrace15UncompressStackEPS0_Pjm+0x28>
 8064b91:	89 01                	mov    %eax,(%ecx)
 8064b93:	5e                   	pop    %esi
 8064b94:	5f                   	pop    %edi
 8064b95:	c3                   	ret    
 8064b96:	66 90                	xchg   %ax,%ax
 8064b98:	66 90                	xchg   %ax,%ax
 8064b9a:	66 90                	xchg   %ax,%ax
 8064b9c:	66 90                	xchg   %ax,%ax
 8064b9e:	66 90                	xchg   %ax,%ax

08064ba0 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi>:
 8064ba0:	85 c0                	test   %eax,%eax
 8064ba2:	74 54                	je     8064bf8 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x58>
 8064ba4:	57                   	push   %edi
 8064ba5:	89 d7                	mov    %edx,%edi
 8064ba7:	56                   	push   %esi
 8064ba8:	53                   	push   %ebx
 8064ba9:	e8 42 4f fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064bae:	81 c3 52 b4 04 00    	add    $0x4b452,%ebx
 8064bb4:	83 ec 10             	sub    $0x10,%esp
 8064bb7:	89 54 24 04          	mov    %edx,0x4(%esp)
 8064bbb:	89 04 24             	mov    %eax,(%esp)
 8064bbe:	e8 ad d0 ff ff       	call   8061c70 <_ZN11__sanitizer15internal_strstrEPKcS1_>
 8064bc3:	89 c6                	mov    %eax,%esi
 8064bc5:	31 c0                	xor    %eax,%eax
 8064bc7:	85 f6                	test   %esi,%esi
 8064bc9:	74 22                	je     8064bed <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x4d>
 8064bcb:	89 3c 24             	mov    %edi,(%esp)
 8064bce:	e8 7d cf ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8064bd3:	01 c6                	add    %eax,%esi
 8064bd5:	31 c0                	xor    %eax,%eax
 8064bd7:	80 3e 3d             	cmpb   $0x3d,(%esi)
 8064bda:	74 24                	je     8064c00 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x60>
 8064bdc:	8b 54 24 20          	mov    0x20(%esp),%edx
 8064be0:	89 32                	mov    %esi,(%edx)
 8064be2:	8b 54 24 24          	mov    0x24(%esp),%edx
 8064be6:	89 02                	mov    %eax,(%edx)
 8064be8:	b8 01 00 00 00       	mov    $0x1,%eax
 8064bed:	83 c4 10             	add    $0x10,%esp
 8064bf0:	5b                   	pop    %ebx
 8064bf1:	5e                   	pop    %esi
 8064bf2:	5f                   	pop    %edi
 8064bf3:	c3                   	ret    
 8064bf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064bf8:	31 c0                	xor    %eax,%eax
 8064bfa:	c3                   	ret    
 8064bfb:	90                   	nop
 8064bfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064c00:	0f b6 46 01          	movzbl 0x1(%esi),%eax
 8064c04:	3c 22                	cmp    $0x22,%al
 8064c06:	74 40                	je     8064c48 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0xa8>
 8064c08:	3c 27                	cmp    $0x27,%al
 8064c0a:	74 24                	je     8064c30 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x90>
 8064c0c:	83 c6 01             	add    $0x1,%esi
 8064c0f:	8d 83 ca 71 fd ff    	lea    -0x28e36(%ebx),%eax
 8064c15:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064c19:	89 34 24             	mov    %esi,(%esp)
 8064c1c:	e8 4f cd ff ff       	call   8061970 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
 8064c21:	01 f0                	add    %esi,%eax
 8064c23:	85 c0                	test   %eax,%eax
 8064c25:	74 39                	je     8064c60 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0xc0>
 8064c27:	29 f0                	sub    %esi,%eax
 8064c29:	eb b1                	jmp    8064bdc <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x3c>
 8064c2b:	90                   	nop
 8064c2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064c30:	83 c6 02             	add    $0x2,%esi
 8064c33:	c7 44 24 04 27 00 00 	movl   $0x27,0x4(%esp)
 8064c3a:	00 
 8064c3b:	89 34 24             	mov    %esi,(%esp)
 8064c3e:	e8 9d ce ff ff       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8064c43:	eb de                	jmp    8064c23 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x83>
 8064c45:	8d 76 00             	lea    0x0(%esi),%esi
 8064c48:	83 c6 02             	add    $0x2,%esi
 8064c4b:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)
 8064c52:	00 
 8064c53:	89 34 24             	mov    %esi,(%esp)
 8064c56:	e8 85 ce ff ff       	call   8061ae0 <_ZN11__sanitizer15internal_strchrEPKci>
 8064c5b:	eb c6                	jmp    8064c23 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x83>
 8064c5d:	8d 76 00             	lea    0x0(%esi),%esi
 8064c60:	89 34 24             	mov    %esi,(%esp)
 8064c63:	e8 e8 ce ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8064c68:	e9 6f ff ff ff       	jmp    8064bdc <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi+0x3c>
 8064c6d:	8d 76 00             	lea    0x0(%esi),%esi

08064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>:
 8064c70:	55                   	push   %ebp
 8064c71:	89 d5                	mov    %edx,%ebp
 8064c73:	57                   	push   %edi
 8064c74:	89 c7                	mov    %eax,%edi
 8064c76:	56                   	push   %esi
 8064c77:	53                   	push   %ebx
 8064c78:	83 ec 1c             	sub    $0x1c,%esp
 8064c7b:	e8 70 4e fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064c80:	81 c3 80 b3 04 00    	add    $0x4b380,%ebx
 8064c86:	8b 74 24 30          	mov    0x30(%esp),%esi
 8064c8a:	89 34 24             	mov    %esi,(%esp)
 8064c8d:	e8 be ce ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8064c92:	39 e8                	cmp    %ebp,%eax
 8064c94:	7e 0a                	jle    8064ca0 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0+0x30>
 8064c96:	83 c4 1c             	add    $0x1c,%esp
 8064c99:	31 c0                	xor    %eax,%eax
 8064c9b:	5b                   	pop    %ebx
 8064c9c:	5e                   	pop    %esi
 8064c9d:	5f                   	pop    %edi
 8064c9e:	5d                   	pop    %ebp
 8064c9f:	c3                   	ret    
 8064ca0:	89 74 24 04          	mov    %esi,0x4(%esp)
 8064ca4:	89 3c 24             	mov    %edi,(%esp)
 8064ca7:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064cab:	e8 d0 cd ff ff       	call   8061a80 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 8064cb0:	85 c0                	test   %eax,%eax
 8064cb2:	0f 94 c0             	sete   %al
 8064cb5:	83 c4 1c             	add    $0x1c,%esp
 8064cb8:	5b                   	pop    %ebx
 8064cb9:	5e                   	pop    %esi
 8064cba:	5f                   	pop    %edi
 8064cbb:	5d                   	pop    %ebp
 8064cbc:	c3                   	ret    
 8064cbd:	8d 76 00             	lea    0x0(%esi),%esi

08064cc0 <_ZN11__sanitizer9ParseFlagEPKcPbS1_>:
 8064cc0:	53                   	push   %ebx
 8064cc1:	83 ec 28             	sub    $0x28,%esp
 8064cc4:	e8 27 4e fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064cc9:	81 c3 37 b3 04 00    	add    $0x4b337,%ebx
 8064ccf:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8064cd3:	8b 54 24 38          	mov    0x38(%esp),%edx
 8064cd7:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064cdb:	8d 44 24 18          	lea    0x18(%esp),%eax
 8064cdf:	89 04 24             	mov    %eax,(%esp)
 8064ce2:	8b 44 24 30          	mov    0x30(%esp),%eax
 8064ce6:	e8 b5 fe ff ff       	call   8064ba0 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi>
 8064ceb:	84 c0                	test   %al,%al
 8064ced:	74 4a                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064cef:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064cf3:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064cf7:	85 c0                	test   %eax,%eax
 8064cf9:	74 3e                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064cfb:	8d 8b e4 68 fd ff    	lea    -0x2971c(%ebx),%ecx
 8064d01:	89 0c 24             	mov    %ecx,(%esp)
 8064d04:	e8 67 ff ff ff       	call   8064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>
 8064d09:	84 c0                	test   %al,%al
 8064d0b:	74 33                	je     8064d40 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x80>
 8064d0d:	8b 44 24 34          	mov    0x34(%esp),%eax
 8064d11:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064d15:	c6 00 00             	movb   $0x0,(%eax)
 8064d18:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064d1c:	85 c0                	test   %eax,%eax
 8064d1e:	74 19                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064d20:	8d 8b d6 71 fd ff    	lea    -0x28e2a(%ebx),%ecx
 8064d26:	89 0c 24             	mov    %ecx,(%esp)
 8064d29:	e8 42 ff ff ff       	call   8064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>
 8064d2e:	84 c0                	test   %al,%al
 8064d30:	74 56                	je     8064d88 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0xc8>
 8064d32:	8b 44 24 34          	mov    0x34(%esp),%eax
 8064d36:	c6 00 01             	movb   $0x1,(%eax)
 8064d39:	83 c4 28             	add    $0x28,%esp
 8064d3c:	5b                   	pop    %ebx
 8064d3d:	c3                   	ret    
 8064d3e:	66 90                	xchg   %ax,%ax
 8064d40:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064d44:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064d48:	85 c0                	test   %eax,%eax
 8064d4a:	74 ed                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064d4c:	8d 8b cd 71 fd ff    	lea    -0x28e33(%ebx),%ecx
 8064d52:	89 0c 24             	mov    %ecx,(%esp)
 8064d55:	e8 16 ff ff ff       	call   8064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>
 8064d5a:	84 c0                	test   %al,%al
 8064d5c:	75 af                	jne    8064d0d <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x4d>
 8064d5e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064d62:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064d66:	85 c0                	test   %eax,%eax
 8064d68:	74 cf                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064d6a:	8d 8b d0 71 fd ff    	lea    -0x28e30(%ebx),%ecx
 8064d70:	89 0c 24             	mov    %ecx,(%esp)
 8064d73:	e8 f8 fe ff ff       	call   8064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>
 8064d78:	84 c0                	test   %al,%al
 8064d7a:	75 91                	jne    8064d0d <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x4d>
 8064d7c:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064d80:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064d84:	eb 96                	jmp    8064d1c <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x5c>
 8064d86:	66 90                	xchg   %ax,%ax
 8064d88:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064d8c:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064d90:	85 c0                	test   %eax,%eax
 8064d92:	74 a5                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064d94:	8d 8b d8 71 fd ff    	lea    -0x28e28(%ebx),%ecx
 8064d9a:	89 0c 24             	mov    %ecx,(%esp)
 8064d9d:	e8 ce fe ff ff       	call   8064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>
 8064da2:	84 c0                	test   %al,%al
 8064da4:	75 8c                	jne    8064d32 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x72>
 8064da6:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064daa:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 8064dae:	85 c0                	test   %eax,%eax
 8064db0:	74 87                	je     8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064db2:	8d 8b dc 71 fd ff    	lea    -0x28e24(%ebx),%ecx
 8064db8:	89 0c 24             	mov    %ecx,(%esp)
 8064dbb:	e8 b0 fe ff ff       	call   8064c70 <_ZN11__sanitizerL10StartsWithEPKciS1_.part.0>
 8064dc0:	84 c0                	test   %al,%al
 8064dc2:	0f 85 6a ff ff ff    	jne    8064d32 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x72>
 8064dc8:	e9 6c ff ff ff       	jmp    8064d39 <_ZN11__sanitizer9ParseFlagEPKcPbS1_+0x79>
 8064dcd:	8d 76 00             	lea    0x0(%esi),%esi

08064dd0 <_ZN11__sanitizer9ParseFlagEPKcPiS1_>:
 8064dd0:	53                   	push   %ebx
 8064dd1:	83 ec 28             	sub    $0x28,%esp
 8064dd4:	e8 17 4d fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064dd9:	81 c3 27 b2 04 00    	add    $0x4b227,%ebx
 8064ddf:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8064de3:	8b 54 24 38          	mov    0x38(%esp),%edx
 8064de7:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064deb:	8d 44 24 18          	lea    0x18(%esp),%eax
 8064def:	89 04 24             	mov    %eax,(%esp)
 8064df2:	8b 44 24 30          	mov    0x30(%esp),%eax
 8064df6:	e8 a5 fd ff ff       	call   8064ba0 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi>
 8064dfb:	84 c0                	test   %al,%al
 8064dfd:	75 09                	jne    8064e08 <_ZN11__sanitizer9ParseFlagEPKcPiS1_+0x38>
 8064dff:	83 c4 28             	add    $0x28,%esp
 8064e02:	5b                   	pop    %ebx
 8064e03:	c3                   	ret    
 8064e04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064e08:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064e0c:	89 04 24             	mov    %eax,(%esp)
 8064e0f:	e8 bc d0 ff ff       	call   8061ed0 <_ZN11__sanitizer14internal_atollEPKc>
 8064e14:	8b 54 24 34          	mov    0x34(%esp),%edx
 8064e18:	89 02                	mov    %eax,(%edx)
 8064e1a:	83 c4 28             	add    $0x28,%esp
 8064e1d:	5b                   	pop    %ebx
 8064e1e:	c3                   	ret    
 8064e1f:	90                   	nop

08064e20 <_ZN11__sanitizer9ParseFlagEPKcPS1_S1_>:
 8064e20:	56                   	push   %esi
 8064e21:	53                   	push   %ebx
 8064e22:	83 ec 24             	sub    $0x24,%esp
 8064e25:	e8 c6 4c fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064e2a:	81 c3 d6 b1 04 00    	add    $0x4b1d6,%ebx
 8064e30:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8064e34:	8b 54 24 38          	mov    0x38(%esp),%edx
 8064e38:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064e3c:	8d 44 24 18          	lea    0x18(%esp),%eax
 8064e40:	89 04 24             	mov    %eax,(%esp)
 8064e43:	8b 44 24 30          	mov    0x30(%esp),%eax
 8064e47:	e8 54 fd ff ff       	call   8064ba0 <_ZN11__sanitizerL12GetFlagValueEPKcS1_PS1_Pi>
 8064e4c:	84 c0                	test   %al,%al
 8064e4e:	75 08                	jne    8064e58 <_ZN11__sanitizer9ParseFlagEPKcPS1_S1_+0x38>
 8064e50:	83 c4 24             	add    $0x24,%esp
 8064e53:	5b                   	pop    %ebx
 8064e54:	5e                   	pop    %esi
 8064e55:	c3                   	ret    
 8064e56:	66 90                	xchg   %ax,%ax
 8064e58:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8064e5c:	83 c0 01             	add    $0x1,%eax
 8064e5f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064e63:	8d 83 a4 23 5b 01    	lea    0x15b23a4(%ebx),%eax
 8064e69:	89 04 24             	mov    %eax,(%esp)
 8064e6c:	e8 9f d2 ff ff       	call   8062110 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8064e71:	89 c6                	mov    %eax,%esi
 8064e73:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8064e77:	89 34 24             	mov    %esi,(%esp)
 8064e7a:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064e7e:	8b 44 24 18          	mov    0x18(%esp),%eax
 8064e82:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064e86:	e8 25 ca ff ff       	call   80618b0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8064e8b:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8064e8f:	c6 04 06 00          	movb   $0x0,(%esi,%eax,1)
 8064e93:	8b 44 24 34          	mov    0x34(%esp),%eax
 8064e97:	89 30                	mov    %esi,(%eax)
 8064e99:	83 c4 24             	add    $0x24,%esp
 8064e9c:	5b                   	pop    %ebx
 8064e9d:	5e                   	pop    %esi
 8064e9e:	c3                   	ret    
 8064e9f:	90                   	nop

08064ea0 <_ZN11__sanitizerL8ParseHexEPPc>:
 8064ea0:	57                   	push   %edi
 8064ea1:	89 c7                	mov    %eax,%edi
 8064ea3:	56                   	push   %esi
 8064ea4:	31 f6                	xor    %esi,%esi
 8064ea6:	8b 08                	mov    (%eax),%ecx
 8064ea8:	eb 11                	jmp    8064ebb <_ZN11__sanitizerL8ParseHexEPPc+0x1b>
 8064eaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8064eb0:	83 ea 30             	sub    $0x30,%edx
 8064eb3:	c1 e6 04             	shl    $0x4,%esi
 8064eb6:	83 c1 01             	add    $0x1,%ecx
 8064eb9:	01 d6                	add    %edx,%esi
 8064ebb:	0f be 11             	movsbl (%ecx),%edx
 8064ebe:	8d 42 d0             	lea    -0x30(%edx),%eax
 8064ec1:	3c 09                	cmp    $0x9,%al
 8064ec3:	76 eb                	jbe    8064eb0 <_ZN11__sanitizerL8ParseHexEPPc+0x10>
 8064ec5:	8d 42 9f             	lea    -0x61(%edx),%eax
 8064ec8:	3c 05                	cmp    $0x5,%al
 8064eca:	77 0c                	ja     8064ed8 <_ZN11__sanitizerL8ParseHexEPPc+0x38>
 8064ecc:	83 ea 57             	sub    $0x57,%edx
 8064ecf:	eb e2                	jmp    8064eb3 <_ZN11__sanitizerL8ParseHexEPPc+0x13>
 8064ed1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8064ed8:	8d 42 bf             	lea    -0x41(%edx),%eax
 8064edb:	3c 05                	cmp    $0x5,%al
 8064edd:	77 09                	ja     8064ee8 <_ZN11__sanitizerL8ParseHexEPPc+0x48>
 8064edf:	83 ea 37             	sub    $0x37,%edx
 8064ee2:	eb cf                	jmp    8064eb3 <_ZN11__sanitizerL8ParseHexEPPc+0x13>
 8064ee4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8064ee8:	89 f0                	mov    %esi,%eax
 8064eea:	89 0f                	mov    %ecx,(%edi)
 8064eec:	5e                   	pop    %esi
 8064eed:	5f                   	pop    %edi
 8064eee:	c3                   	ret    
 8064eef:	90                   	nop

08064ef0 <_ZN11__sanitizer12Unwind_TraceEP15_Unwind_ContextPv>:
 8064ef0:	56                   	push   %esi
 8064ef1:	53                   	push   %ebx
 8064ef2:	83 ec 24             	sub    $0x24,%esp
 8064ef5:	8b 74 24 34          	mov    0x34(%esp),%esi
 8064ef9:	e8 f2 4b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064efe:	81 c3 02 b1 04 00    	add    $0x4b102,%ebx
 8064f04:	8b 46 04             	mov    0x4(%esi),%eax
 8064f07:	39 06                	cmp    %eax,(%esi)
 8064f09:	73 28                	jae    8064f33 <_ZN11__sanitizer12Unwind_TraceEP15_Unwind_ContextPv+0x43>
 8064f0b:	8b 44 24 30          	mov    0x30(%esp),%eax
 8064f0f:	89 04 24             	mov    %eax,(%esp)
 8064f12:	e8 59 49 fe ff       	call   8049870 <_Unwind_GetIP@plt>
 8064f17:	8b 0e                	mov    (%esi),%ecx
 8064f19:	8d 51 01             	lea    0x1(%ecx),%edx
 8064f1c:	89 16                	mov    %edx,(%esi)
 8064f1e:	89 44 8e 08          	mov    %eax,0x8(%esi,%ecx,4)
 8064f22:	31 c0                	xor    %eax,%eax
 8064f24:	3b 56 04             	cmp    0x4(%esi),%edx
 8064f27:	0f 94 c0             	sete   %al
 8064f2a:	83 c4 24             	add    $0x24,%esp
 8064f2d:	c1 e0 02             	shl    $0x2,%eax
 8064f30:	5b                   	pop    %ebx
 8064f31:	5e                   	pop    %esi
 8064f32:	c3                   	ret    
 8064f33:	8d 83 e4 71 fd ff    	lea    -0x28e1c(%ebx),%eax
 8064f39:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064f3d:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8064f43:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8064f4a:	00 
 8064f4b:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8064f52:	00 
 8064f53:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8064f5a:	00 
 8064f5b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8064f62:	00 
 8064f63:	c7 44 24 04 e3 01 00 	movl   $0x1e3,0x4(%esp)
 8064f6a:	00 
 8064f6b:	89 04 24             	mov    %eax,(%esp)
 8064f6e:	e8 3d d4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8064f73:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8064f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08064f80 <_ZN11__sanitizer13internal_mmapEPvmiiiy>:
 8064f80:	53                   	push   %ebx
 8064f81:	83 ec 28             	sub    $0x28,%esp
 8064f84:	8b 44 24 44          	mov    0x44(%esp),%eax
 8064f88:	e8 63 4b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064f8d:	81 c3 73 b0 04 00    	add    $0x4b073,%ebx
 8064f93:	8b 54 24 48          	mov    0x48(%esp),%edx
 8064f97:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)
 8064f9e:	89 44 24 18          	mov    %eax,0x18(%esp)
 8064fa2:	8b 44 24 40          	mov    0x40(%esp),%eax
 8064fa6:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 8064faa:	89 44 24 14          	mov    %eax,0x14(%esp)
 8064fae:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8064fb2:	89 44 24 10          	mov    %eax,0x10(%esp)
 8064fb6:	8b 44 24 38          	mov    0x38(%esp),%eax
 8064fba:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8064fbe:	8b 44 24 34          	mov    0x34(%esp),%eax
 8064fc2:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064fc6:	8b 44 24 30          	mov    0x30(%esp),%eax
 8064fca:	89 44 24 04          	mov    %eax,0x4(%esp)
 8064fce:	e8 0d 49 fe ff       	call   80498e0 <syscall@plt>
 8064fd3:	83 c4 28             	add    $0x28,%esp
 8064fd6:	5b                   	pop    %ebx
 8064fd7:	c3                   	ret    
 8064fd8:	90                   	nop
 8064fd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08064fe0 <_ZN11__sanitizer15internal_munmapEPvm>:
 8064fe0:	53                   	push   %ebx
 8064fe1:	83 ec 18             	sub    $0x18,%esp
 8064fe4:	8b 44 24 24          	mov    0x24(%esp),%eax
 8064fe8:	e8 03 4b fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8064fed:	81 c3 13 b0 04 00    	add    $0x4b013,%ebx
 8064ff3:	c7 04 24 5b 00 00 00 	movl   $0x5b,(%esp)
 8064ffa:	89 44 24 08          	mov    %eax,0x8(%esp)
 8064ffe:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065002:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065006:	e8 d5 48 fe ff       	call   80498e0 <syscall@plt>
 806500b:	83 c4 18             	add    $0x18,%esp
 806500e:	5b                   	pop    %ebx
 806500f:	c3                   	ret    

08065010 <_ZN11__sanitizer14internal_closeEi>:
 8065010:	53                   	push   %ebx
 8065011:	83 ec 18             	sub    $0x18,%esp
 8065014:	e8 d7 4a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065019:	81 c3 e7 af 04 00    	add    $0x4afe7,%ebx
 806501f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065023:	c7 04 24 06 00 00 00 	movl   $0x6,(%esp)
 806502a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806502e:	e8 ad 48 fe ff       	call   80498e0 <syscall@plt>
 8065033:	83 c4 18             	add    $0x18,%esp
 8065036:	5b                   	pop    %ebx
 8065037:	c3                   	ret    
 8065038:	90                   	nop
 8065039:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08065040 <_ZN11__sanitizer13internal_openEPKci>:
 8065040:	53                   	push   %ebx
 8065041:	83 ec 18             	sub    $0x18,%esp
 8065044:	8b 44 24 24          	mov    0x24(%esp),%eax
 8065048:	e8 a3 4a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806504d:	81 c3 b3 af 04 00    	add    $0x4afb3,%ebx
 8065053:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)
 806505a:	89 44 24 08          	mov    %eax,0x8(%esp)
 806505e:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065062:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065066:	e8 75 48 fe ff       	call   80498e0 <syscall@plt>
 806506b:	83 c4 18             	add    $0x18,%esp
 806506e:	5b                   	pop    %ebx
 806506f:	c3                   	ret    

08065070 <_ZN11__sanitizer13internal_openEPKcij>:
 8065070:	53                   	push   %ebx
 8065071:	83 ec 18             	sub    $0x18,%esp
 8065074:	8b 44 24 28          	mov    0x28(%esp),%eax
 8065078:	e8 73 4a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806507d:	81 c3 83 af 04 00    	add    $0x4af83,%ebx
 8065083:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)
 806508a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806508e:	8b 44 24 24          	mov    0x24(%esp),%eax
 8065092:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065096:	8b 44 24 20          	mov    0x20(%esp),%eax
 806509a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806509e:	e8 3d 48 fe ff       	call   80498e0 <syscall@plt>
 80650a3:	83 c4 18             	add    $0x18,%esp
 80650a6:	5b                   	pop    %ebx
 80650a7:	c3                   	ret    
 80650a8:	90                   	nop
 80650a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

080650b0 <_ZN11__sanitizer8OpenFileEPKcb>:
 80650b0:	53                   	push   %ebx
 80650b1:	83 ec 18             	sub    $0x18,%esp
 80650b4:	e8 37 4a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80650b9:	81 c3 47 af 04 00    	add    $0x4af47,%ebx
 80650bf:	80 7c 24 24 01       	cmpb   $0x1,0x24(%esp)
 80650c4:	c7 44 24 0c b0 01 00 	movl   $0x1b0,0xc(%esp)
 80650cb:	00 
 80650cc:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)
 80650d3:	19 c0                	sbb    %eax,%eax
 80650d5:	f7 d0                	not    %eax
 80650d7:	83 e0 41             	and    $0x41,%eax
 80650da:	89 44 24 08          	mov    %eax,0x8(%esp)
 80650de:	8b 44 24 20          	mov    0x20(%esp),%eax
 80650e2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80650e6:	e8 f5 47 fe ff       	call   80498e0 <syscall@plt>
 80650eb:	83 c4 18             	add    $0x18,%esp
 80650ee:	5b                   	pop    %ebx
 80650ef:	c3                   	ret    

080650f0 <_ZN11__sanitizer13internal_readEiPvm>:
 80650f0:	55                   	push   %ebp
 80650f1:	57                   	push   %edi
 80650f2:	56                   	push   %esi
 80650f3:	53                   	push   %ebx
 80650f4:	83 ec 1c             	sub    $0x1c,%esp
 80650f7:	e8 f4 49 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80650fc:	81 c3 04 af 04 00    	add    $0x4af04,%ebx
 8065102:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8065106:	8b 7c 24 34          	mov    0x34(%esp),%edi
 806510a:	8b 74 24 38          	mov    0x38(%esp),%esi
 806510e:	eb 0a                	jmp    806511a <_ZN11__sanitizer13internal_readEiPvm+0x2a>
 8065110:	e8 bb 47 fe ff       	call   80498d0 <__errno_location@plt>
 8065115:	83 38 04             	cmpl   $0x4,(%eax)
 8065118:	75 26                	jne    8065140 <_ZN11__sanitizer13internal_readEiPvm+0x50>
 806511a:	89 74 24 0c          	mov    %esi,0xc(%esp)
 806511e:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8065122:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8065126:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 806512d:	e8 ae 47 fe ff       	call   80498e0 <syscall@plt>
 8065132:	83 f8 ff             	cmp    $0xffffffff,%eax
 8065135:	74 d9                	je     8065110 <_ZN11__sanitizer13internal_readEiPvm+0x20>
 8065137:	83 c4 1c             	add    $0x1c,%esp
 806513a:	5b                   	pop    %ebx
 806513b:	5e                   	pop    %esi
 806513c:	5f                   	pop    %edi
 806513d:	5d                   	pop    %ebp
 806513e:	c3                   	ret    
 806513f:	90                   	nop
 8065140:	83 c4 1c             	add    $0x1c,%esp
 8065143:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8065148:	5b                   	pop    %ebx
 8065149:	5e                   	pop    %esi
 806514a:	5f                   	pop    %edi
 806514b:	5d                   	pop    %ebp
 806514c:	c3                   	ret    
 806514d:	8d 76 00             	lea    0x0(%esi),%esi

08065150 <_ZN11__sanitizer14internal_writeEiPKvm>:
 8065150:	55                   	push   %ebp
 8065151:	57                   	push   %edi
 8065152:	56                   	push   %esi
 8065153:	53                   	push   %ebx
 8065154:	83 ec 1c             	sub    $0x1c,%esp
 8065157:	e8 94 49 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806515c:	81 c3 a4 ae 04 00    	add    $0x4aea4,%ebx
 8065162:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8065166:	8b 7c 24 34          	mov    0x34(%esp),%edi
 806516a:	8b 74 24 38          	mov    0x38(%esp),%esi
 806516e:	eb 0a                	jmp    806517a <_ZN11__sanitizer14internal_writeEiPKvm+0x2a>
 8065170:	e8 5b 47 fe ff       	call   80498d0 <__errno_location@plt>
 8065175:	83 38 04             	cmpl   $0x4,(%eax)
 8065178:	75 26                	jne    80651a0 <_ZN11__sanitizer14internal_writeEiPKvm+0x50>
 806517a:	89 74 24 0c          	mov    %esi,0xc(%esp)
 806517e:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8065182:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8065186:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)
 806518d:	e8 4e 47 fe ff       	call   80498e0 <syscall@plt>
 8065192:	83 f8 ff             	cmp    $0xffffffff,%eax
 8065195:	74 d9                	je     8065170 <_ZN11__sanitizer14internal_writeEiPKvm+0x20>
 8065197:	83 c4 1c             	add    $0x1c,%esp
 806519a:	5b                   	pop    %ebx
 806519b:	5e                   	pop    %esi
 806519c:	5f                   	pop    %edi
 806519d:	5d                   	pop    %ebp
 806519e:	c3                   	ret    
 806519f:	90                   	nop
 80651a0:	83 c4 1c             	add    $0x1c,%esp
 80651a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80651a8:	5b                   	pop    %ebx
 80651a9:	5e                   	pop    %esi
 80651aa:	5f                   	pop    %edi
 80651ab:	5d                   	pop    %ebp
 80651ac:	c3                   	ret    
 80651ad:	8d 76 00             	lea    0x0(%esi),%esi

080651b0 <_ZN11__sanitizer13internal_statEPKcPv>:
 80651b0:	53                   	push   %ebx
 80651b1:	83 ec 18             	sub    $0x18,%esp
 80651b4:	8b 44 24 24          	mov    0x24(%esp),%eax
 80651b8:	e8 33 49 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80651bd:	81 c3 43 ae 04 00    	add    $0x4ae43,%ebx
 80651c3:	c7 04 24 c3 00 00 00 	movl   $0xc3,(%esp)
 80651ca:	89 44 24 08          	mov    %eax,0x8(%esp)
 80651ce:	8b 44 24 20          	mov    0x20(%esp),%eax
 80651d2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80651d6:	e8 05 47 fe ff       	call   80498e0 <syscall@plt>
 80651db:	83 c4 18             	add    $0x18,%esp
 80651de:	5b                   	pop    %ebx
 80651df:	c3                   	ret    

080651e0 <_ZN11__sanitizer14internal_lstatEPKcPv>:
 80651e0:	53                   	push   %ebx
 80651e1:	83 ec 18             	sub    $0x18,%esp
 80651e4:	8b 44 24 24          	mov    0x24(%esp),%eax
 80651e8:	e8 03 49 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80651ed:	81 c3 13 ae 04 00    	add    $0x4ae13,%ebx
 80651f3:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)
 80651fa:	89 44 24 08          	mov    %eax,0x8(%esp)
 80651fe:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065202:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065206:	e8 d5 46 fe ff       	call   80498e0 <syscall@plt>
 806520b:	83 c4 18             	add    $0x18,%esp
 806520e:	5b                   	pop    %ebx
 806520f:	c3                   	ret    

08065210 <_ZN11__sanitizer14internal_fstatEiPv>:
 8065210:	53                   	push   %ebx
 8065211:	83 ec 18             	sub    $0x18,%esp
 8065214:	8b 44 24 24          	mov    0x24(%esp),%eax
 8065218:	e8 d3 48 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806521d:	81 c3 e3 ad 04 00    	add    $0x4ade3,%ebx
 8065223:	c7 04 24 c5 00 00 00 	movl   $0xc5,(%esp)
 806522a:	89 44 24 08          	mov    %eax,0x8(%esp)
 806522e:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065232:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065236:	e8 a5 46 fe ff       	call   80498e0 <syscall@plt>
 806523b:	83 c4 18             	add    $0x18,%esp
 806523e:	5b                   	pop    %ebx
 806523f:	c3                   	ret    

08065240 <_ZN11__sanitizer17internal_filesizeEi>:
 8065240:	53                   	push   %ebx
 8065241:	83 ec 78             	sub    $0x78,%esp
 8065244:	e8 a7 48 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065249:	81 c3 b7 ad 04 00    	add    $0x4adb7,%ebx
 806524f:	8d 44 24 10          	lea    0x10(%esp),%eax
 8065253:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065257:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 806525e:	c7 04 24 c5 00 00 00 	movl   $0xc5,(%esp)
 8065265:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065269:	e8 72 46 fe ff       	call   80498e0 <syscall@plt>
 806526e:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 8065273:	85 c0                	test   %eax,%eax
 8065275:	0f 44 54 24 3c       	cmove  0x3c(%esp),%edx
 806527a:	83 c4 78             	add    $0x78,%esp
 806527d:	5b                   	pop    %ebx
 806527e:	89 d0                	mov    %edx,%eax
 8065280:	c3                   	ret    
 8065281:	eb 0d                	jmp    8065290 <_ZN11__sanitizer13internal_dup2Eii>
 8065283:	90                   	nop
 8065284:	90                   	nop
 8065285:	90                   	nop
 8065286:	90                   	nop
 8065287:	90                   	nop
 8065288:	90                   	nop
 8065289:	90                   	nop
 806528a:	90                   	nop
 806528b:	90                   	nop
 806528c:	90                   	nop
 806528d:	90                   	nop
 806528e:	90                   	nop
 806528f:	90                   	nop

08065290 <_ZN11__sanitizer13internal_dup2Eii>:
 8065290:	53                   	push   %ebx
 8065291:	83 ec 18             	sub    $0x18,%esp
 8065294:	8b 44 24 24          	mov    0x24(%esp),%eax
 8065298:	e8 53 48 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806529d:	81 c3 63 ad 04 00    	add    $0x4ad63,%ebx
 80652a3:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)
 80652aa:	89 44 24 08          	mov    %eax,0x8(%esp)
 80652ae:	8b 44 24 20          	mov    0x20(%esp),%eax
 80652b2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80652b6:	e8 25 46 fe ff       	call   80498e0 <syscall@plt>
 80652bb:	83 c4 18             	add    $0x18,%esp
 80652be:	5b                   	pop    %ebx
 80652bf:	c3                   	ret    

080652c0 <_ZN11__sanitizer17internal_readlinkEPKcPcm>:
 80652c0:	53                   	push   %ebx
 80652c1:	83 ec 18             	sub    $0x18,%esp
 80652c4:	8b 44 24 28          	mov    0x28(%esp),%eax
 80652c8:	e8 23 48 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80652cd:	81 c3 33 ad 04 00    	add    $0x4ad33,%ebx
 80652d3:	c7 04 24 55 00 00 00 	movl   $0x55,(%esp)
 80652da:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80652de:	8b 44 24 24          	mov    0x24(%esp),%eax
 80652e2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80652e6:	8b 44 24 20          	mov    0x20(%esp),%eax
 80652ea:	89 44 24 04          	mov    %eax,0x4(%esp)
 80652ee:	e8 ed 45 fe ff       	call   80498e0 <syscall@plt>
 80652f3:	83 c4 18             	add    $0x18,%esp
 80652f6:	5b                   	pop    %ebx
 80652f7:	c3                   	ret    
 80652f8:	90                   	nop
 80652f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08065300 <_ZN11__sanitizer20internal_sched_yieldEv>:
 8065300:	53                   	push   %ebx
 8065301:	e8 ea 47 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065306:	81 c3 fa ac 04 00    	add    $0x4acfa,%ebx
 806530c:	83 ec 18             	sub    $0x18,%esp
 806530f:	c7 04 24 9e 00 00 00 	movl   $0x9e,(%esp)
 8065316:	e8 c5 45 fe ff       	call   80498e0 <syscall@plt>
 806531b:	83 c4 18             	add    $0x18,%esp
 806531e:	5b                   	pop    %ebx
 806531f:	c3                   	ret    

08065320 <_ZN11__sanitizer14internal__exitEi>:
 8065320:	53                   	push   %ebx
 8065321:	83 ec 18             	sub    $0x18,%esp
 8065324:	e8 c7 47 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065329:	81 c3 d7 ac 04 00    	add    $0x4acd7,%ebx
 806532f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065333:	c7 04 24 fc 00 00 00 	movl   $0xfc,(%esp)
 806533a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806533e:	e8 9d 45 fe ff       	call   80498e0 <syscall@plt>
 8065343:	e8 18 cf ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 8065348:	90                   	nop
 8065349:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08065350 <_ZN11__sanitizer10FileExistsEPKc>:
 8065350:	53                   	push   %ebx
 8065351:	83 ec 78             	sub    $0x78,%esp
 8065354:	e8 97 47 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065359:	81 c3 a7 ac 04 00    	add    $0x4aca7,%ebx
 806535f:	8d 44 24 10          	lea    0x10(%esp),%eax
 8065363:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065367:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 806536e:	c7 04 24 c3 00 00 00 	movl   $0xc3,(%esp)
 8065375:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065379:	e8 62 45 fe ff       	call   80498e0 <syscall@plt>
 806537e:	31 d2                	xor    %edx,%edx
 8065380:	85 c0                	test   %eax,%eax
 8065382:	75 11                	jne    8065395 <_ZN11__sanitizer10FileExistsEPKc+0x45>
 8065384:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065388:	25 00 f0 00 00       	and    $0xf000,%eax
 806538d:	3d 00 80 00 00       	cmp    $0x8000,%eax
 8065392:	0f 94 c2             	sete   %dl
 8065395:	83 c4 78             	add    $0x78,%esp
 8065398:	89 d0                	mov    %edx,%eax
 806539a:	5b                   	pop    %ebx
 806539b:	c3                   	ret    
 806539c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080653a0 <_ZN11__sanitizer6GetTidEv>:
 80653a0:	53                   	push   %ebx
 80653a1:	e8 4a 47 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80653a6:	81 c3 5a ac 04 00    	add    $0x4ac5a,%ebx
 80653ac:	83 ec 18             	sub    $0x18,%esp
 80653af:	c7 04 24 e0 00 00 00 	movl   $0xe0,(%esp)
 80653b6:	e8 25 45 fe ff       	call   80498e0 <syscall@plt>
 80653bb:	83 c4 18             	add    $0x18,%esp
 80653be:	5b                   	pop    %ebx
 80653bf:	c3                   	ret    

080653c0 <_ZN11__sanitizer6GetEnvEPKc>:
 80653c0:	55                   	push   %ebp
 80653c1:	57                   	push   %edi
 80653c2:	56                   	push   %esi
 80653c3:	53                   	push   %ebx
 80653c4:	e8 27 47 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80653c9:	81 c3 37 ac 04 00    	add    $0x4ac37,%ebx
 80653cf:	83 ec 2c             	sub    $0x2c,%esp
 80653d2:	80 bb c4 23 5b 01 00 	cmpb   $0x0,0x15b23c4(%ebx)
 80653d9:	0f 84 a9 00 00 00    	je     8065488 <_ZN11__sanitizer6GetEnvEPKc+0xc8>
 80653df:	8b 93 c0 23 5b 01    	mov    0x15b23c0(%ebx),%edx
 80653e5:	85 d2                	test   %edx,%edx
 80653e7:	0f 84 8b 00 00 00    	je     8065478 <_ZN11__sanitizer6GetEnvEPKc+0xb8>
 80653ed:	8b 83 bc 23 5b 01    	mov    0x15b23bc(%ebx),%eax
 80653f3:	85 c0                	test   %eax,%eax
 80653f5:	0f 84 7d 00 00 00    	je     8065478 <_ZN11__sanitizer6GetEnvEPKc+0xb8>
 80653fb:	8b 44 24 40          	mov    0x40(%esp),%eax
 80653ff:	89 04 24             	mov    %eax,(%esp)
 8065402:	e8 49 c7 ff ff       	call   8061b50 <_ZN11__sanitizer15internal_strlenEPKc>
 8065407:	8b b3 c0 23 5b 01    	mov    0x15b23c0(%ebx),%esi
 806540d:	80 3e 00             	cmpb   $0x0,(%esi)
 8065410:	89 c7                	mov    %eax,%edi
 8065412:	74 64                	je     8065478 <_ZN11__sanitizer6GetEnvEPKc+0xb8>
 8065414:	89 f0                	mov    %esi,%eax
 8065416:	eb 0f                	jmp    8065427 <_ZN11__sanitizer6GetEnvEPKc+0x67>
 8065418:	80 7d 01 00          	cmpb   $0x0,0x1(%ebp)
 806541c:	8d 75 01             	lea    0x1(%ebp),%esi
 806541f:	74 57                	je     8065478 <_ZN11__sanitizer6GetEnvEPKc+0xb8>
 8065421:	8b 83 c0 23 5b 01    	mov    0x15b23c0(%ebx),%eax
 8065427:	29 f0                	sub    %esi,%eax
 8065429:	03 83 bc 23 5b 01    	add    0x15b23bc(%ebx),%eax
 806542f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8065436:	00 
 8065437:	89 34 24             	mov    %esi,(%esp)
 806543a:	89 44 24 08          	mov    %eax,0x8(%esp)
 806543e:	e8 cd c3 ff ff       	call   8061810 <_ZN11__sanitizer15internal_memchrEPKvim>
 8065443:	85 c0                	test   %eax,%eax
 8065445:	89 c5                	mov    %eax,%ebp
 8065447:	74 2f                	je     8065478 <_ZN11__sanitizer6GetEnvEPKc+0xb8>
 8065449:	8b 44 24 40          	mov    0x40(%esp),%eax
 806544d:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8065451:	89 34 24             	mov    %esi,(%esp)
 8065454:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065458:	e8 f3 c3 ff ff       	call   8061850 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>
 806545d:	85 c0                	test   %eax,%eax
 806545f:	75 b7                	jne    8065418 <_ZN11__sanitizer6GetEnvEPKc+0x58>
 8065461:	80 3c 3e 3d          	cmpb   $0x3d,(%esi,%edi,1)
 8065465:	75 b1                	jne    8065418 <_ZN11__sanitizer6GetEnvEPKc+0x58>
 8065467:	83 c4 2c             	add    $0x2c,%esp
 806546a:	8d 44 3e 01          	lea    0x1(%esi,%edi,1),%eax
 806546e:	5b                   	pop    %ebx
 806546f:	5e                   	pop    %esi
 8065470:	5f                   	pop    %edi
 8065471:	5d                   	pop    %ebp
 8065472:	c3                   	ret    
 8065473:	90                   	nop
 8065474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8065478:	83 c4 2c             	add    $0x2c,%esp
 806547b:	31 c0                	xor    %eax,%eax
 806547d:	5b                   	pop    %ebx
 806547e:	5e                   	pop    %esi
 806547f:	5f                   	pop    %edi
 8065480:	5d                   	pop    %ebp
 8065481:	c3                   	ret    
 8065482:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8065488:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 806548c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065490:	8d 83 c0 23 5b 01    	lea    0x15b23c0(%ebx),%eax
 8065496:	89 44 24 04          	mov    %eax,0x4(%esp)
 806549a:	8d 83 dd 73 fd ff    	lea    -0x28c23(%ebx),%eax
 80654a0:	c7 44 24 0c 00 00 00 	movl   $0x4000000,0xc(%esp)
 80654a7:	04 
 80654a8:	89 04 24             	mov    %eax,(%esp)
 80654ab:	c6 83 c4 23 5b 01 01 	movb   $0x1,0x15b23c4(%ebx)
 80654b2:	e8 39 d0 ff ff       	call   80624f0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm>
 80654b7:	89 83 bc 23 5b 01    	mov    %eax,0x15b23bc(%ebx)
 80654bd:	e9 1d ff ff ff       	jmp    80653df <_ZN11__sanitizer6GetEnvEPKc+0x1f>
 80654c2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80654c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080654d0 <_ZN11__sanitizer6ReExecEv>:
 80654d0:	53                   	push   %ebx
 80654d1:	e8 1a 46 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80654d6:	81 c3 2a ab 04 00    	add    $0x4ab2a,%ebx
 80654dc:	83 ec 18             	sub    $0x18,%esp
 80654df:	8b 83 e8 ff ff ff    	mov    -0x18(%ebx),%eax
 80654e5:	8b 00                	mov    (%eax),%eax
 80654e7:	8b 10                	mov    (%eax),%edx
 80654e9:	8d 54 90 08          	lea    0x8(%eax,%edx,4),%edx
 80654ed:	83 c0 04             	add    $0x4,%eax
 80654f0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80654f4:	8d 83 f0 73 fd ff    	lea    -0x28c10(%ebx),%eax
 80654fa:	89 54 24 08          	mov    %edx,0x8(%esp)
 80654fe:	89 04 24             	mov    %eax,(%esp)
 8065501:	e8 8a 43 fe ff       	call   8049890 <execve@plt>
 8065506:	e8 c5 43 fe ff       	call   80498d0 <__errno_location@plt>
 806550b:	8b 00                	mov    (%eax),%eax
 806550d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065511:	8d 83 ff 73 fd ff    	lea    -0x28c01(%ebx),%eax
 8065517:	89 04 24             	mov    %eax,(%esp)
 806551a:	e8 61 c1 ff ff       	call   8061680 <_ZN11__sanitizer6PrintfEPKcz>
 806551f:	e8 3c cd ff ff       	call   8062260 <_ZN11__sanitizer3DieEv>
 8065524:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 806552a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08065530 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>:
 8065530:	53                   	push   %ebx
 8065531:	83 ec 18             	sub    $0x18,%esp
 8065534:	e8 b7 45 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065539:	81 c3 c7 aa 04 00    	add    $0x4aac7,%ebx
 806553f:	8b 54 24 20          	mov    0x20(%esp),%edx
 8065543:	8b 02                	mov    (%edx),%eax
 8065545:	3b 83 b0 23 5b 01    	cmp    0x15b23b0(%ebx),%eax
 806554b:	74 0f                	je     806555c <_ZN11__sanitizer19MemoryMappingLayoutD1Ev+0x2c>
 806554d:	8b 52 04             	mov    0x4(%edx),%edx
 8065550:	89 04 24             	mov    %eax,(%esp)
 8065553:	89 54 24 04          	mov    %edx,0x4(%esp)
 8065557:	e8 54 d5 ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 806555c:	83 c4 18             	add    $0x18,%esp
 806555f:	5b                   	pop    %ebx
 8065560:	c3                   	ret    
 8065561:	90                   	nop
 8065562:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8065569:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08065570 <_ZN11__sanitizer19MemoryMappingLayout5ResetEv>:
 8065570:	8b 44 24 04          	mov    0x4(%esp),%eax
 8065574:	8b 10                	mov    (%eax),%edx
 8065576:	89 50 0c             	mov    %edx,0xc(%eax)
 8065579:	c3                   	ret    
 806557a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08065580 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>:
 8065580:	55                   	push   %ebp
 8065581:	b8 01 00 00 00       	mov    $0x1,%eax
 8065586:	57                   	push   %edi
 8065587:	56                   	push   %esi
 8065588:	53                   	push   %ebx
 8065589:	e8 62 45 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806558e:	81 c3 72 aa 04 00    	add    $0x4aa72,%ebx
 8065594:	83 ec 1c             	sub    $0x1c,%esp
 8065597:	86 83 ac 23 5b 01    	xchg   %al,0x15b23ac(%ebx)
 806559d:	84 c0                	test   %al,%al
 806559f:	74 0e                	je     80655af <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x2f>
 80655a1:	8d 83 ac 23 5b 01    	lea    0x15b23ac(%ebx),%eax
 80655a7:	89 04 24             	mov    %eax,(%esp)
 80655aa:	e8 81 9e fe ff       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 80655af:	8d 83 b4 23 5b 01    	lea    0x15b23b4(%ebx),%eax
 80655b5:	8b b3 b0 23 5b 01    	mov    0x15b23b0(%ebx),%esi
 80655bb:	89 44 24 08          	mov    %eax,0x8(%esp)
 80655bf:	83 e8 04             	sub    $0x4,%eax
 80655c2:	8b ab b4 23 5b 01    	mov    0x15b23b4(%ebx),%ebp
 80655c8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80655cc:	8d 83 18 74 fd ff    	lea    -0x28be8(%ebx),%eax
 80655d2:	8b bb b8 23 5b 01    	mov    0x15b23b8(%ebx),%edi
 80655d8:	c7 44 24 0c 00 00 00 	movl   $0x4000000,0xc(%esp)
 80655df:	04 
 80655e0:	89 04 24             	mov    %eax,(%esp)
 80655e3:	e8 08 cf ff ff       	call   80624f0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm>
 80655e8:	89 83 b8 23 5b 01    	mov    %eax,0x15b23b8(%ebx)
 80655ee:	8b 83 b4 23 5b 01    	mov    0x15b23b4(%ebx),%eax
 80655f4:	85 c0                	test   %eax,%eax
 80655f6:	74 38                	je     8065630 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0xb0>
 80655f8:	85 ed                	test   %ebp,%ebp
 80655fa:	75 14                	jne    8065610 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x90>
 80655fc:	c6 83 ac 23 5b 01 00 	movb   $0x0,0x15b23ac(%ebx)
 8065603:	83 c4 1c             	add    $0x1c,%esp
 8065606:	5b                   	pop    %ebx
 8065607:	5e                   	pop    %esi
 8065608:	5f                   	pop    %edi
 8065609:	5d                   	pop    %ebp
 806560a:	c3                   	ret    
 806560b:	90                   	nop
 806560c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8065610:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8065614:	89 34 24             	mov    %esi,(%esp)
 8065617:	e8 94 d4 ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 806561c:	c6 83 ac 23 5b 01 00 	movb   $0x0,0x15b23ac(%ebx)
 8065623:	83 c4 1c             	add    $0x1c,%esp
 8065626:	5b                   	pop    %ebx
 8065627:	5e                   	pop    %esi
 8065628:	5f                   	pop    %edi
 8065629:	5d                   	pop    %ebp
 806562a:	c3                   	ret    
 806562b:	90                   	nop
 806562c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8065630:	89 b3 b0 23 5b 01    	mov    %esi,0x15b23b0(%ebx)
 8065636:	89 ab b4 23 5b 01    	mov    %ebp,0x15b23b4(%ebx)
 806563c:	89 bb b8 23 5b 01    	mov    %edi,0x15b23b8(%ebx)
 8065642:	c6 83 ac 23 5b 01 00 	movb   $0x0,0x15b23ac(%ebx)
 8065649:	83 c4 1c             	add    $0x1c,%esp
 806564c:	5b                   	pop    %ebx
 806564d:	5e                   	pop    %esi
 806564e:	5f                   	pop    %edi
 806564f:	5d                   	pop    %ebp
 8065650:	c3                   	ret    
 8065651:	eb 0d                	jmp    8065660 <_ZN11__sanitizer20PrepareForSandboxingEv>
 8065653:	90                   	nop
 8065654:	90                   	nop
 8065655:	90                   	nop
 8065656:	90                   	nop
 8065657:	90                   	nop
 8065658:	90                   	nop
 8065659:	90                   	nop
 806565a:	90                   	nop
 806565b:	90                   	nop
 806565c:	90                   	nop
 806565d:	90                   	nop
 806565e:	90                   	nop
 806565f:	90                   	nop

08065660 <_ZN11__sanitizer20PrepareForSandboxingEv>:
 8065660:	e9 1b ff ff ff       	jmp    8065580 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>
 8065665:	90                   	nop
 8065666:	8d 76 00             	lea    0x0(%esi),%esi
 8065669:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08065670 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv>:
 8065670:	56                   	push   %esi
 8065671:	b8 01 00 00 00       	mov    $0x1,%eax
 8065676:	53                   	push   %ebx
 8065677:	e8 74 44 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806567c:	81 c3 84 a9 04 00    	add    $0x4a984,%ebx
 8065682:	83 ec 14             	sub    $0x14,%esp
 8065685:	8b 74 24 20          	mov    0x20(%esp),%esi
 8065689:	86 83 ac 23 5b 01    	xchg   %al,0x15b23ac(%ebx)
 806568f:	84 c0                	test   %al,%al
 8065691:	74 0e                	je     80656a1 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x31>
 8065693:	8d 83 ac 23 5b 01    	lea    0x15b23ac(%ebx),%eax
 8065699:	89 04 24             	mov    %eax,(%esp)
 806569c:	e8 8f 9d fe ff       	call   804f430 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>
 80656a1:	8b 83 b0 23 5b 01    	mov    0x15b23b0(%ebx),%eax
 80656a7:	85 c0                	test   %eax,%eax
 80656a9:	74 1a                	je     80656c5 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x55>
 80656ab:	8b 83 b0 23 5b 01    	mov    0x15b23b0(%ebx),%eax
 80656b1:	89 06                	mov    %eax,(%esi)
 80656b3:	8b 83 b4 23 5b 01    	mov    0x15b23b4(%ebx),%eax
 80656b9:	89 46 04             	mov    %eax,0x4(%esi)
 80656bc:	8b 83 b8 23 5b 01    	mov    0x15b23b8(%ebx),%eax
 80656c2:	89 46 08             	mov    %eax,0x8(%esi)
 80656c5:	c6 83 ac 23 5b 01 00 	movb   $0x0,0x15b23ac(%ebx)
 80656cc:	83 c4 14             	add    $0x14,%esp
 80656cf:	5b                   	pop    %ebx
 80656d0:	5e                   	pop    %esi
 80656d1:	c3                   	ret    
 80656d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80656d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080656e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Ev>:
 80656e0:	56                   	push   %esi
 80656e1:	53                   	push   %ebx
 80656e2:	83 ec 24             	sub    $0x24,%esp
 80656e5:	e8 06 44 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80656ea:	81 c3 16 a9 04 00    	add    $0x4a916,%ebx
 80656f0:	8b 74 24 30          	mov    0x30(%esp),%esi
 80656f4:	c7 44 24 0c 00 00 00 	movl   $0x4000000,0xc(%esp)
 80656fb:	04 
 80656fc:	8d 46 04             	lea    0x4(%esi),%eax
 80656ff:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065703:	8d 83 18 74 fd ff    	lea    -0x28be8(%ebx),%eax
 8065709:	89 74 24 04          	mov    %esi,0x4(%esp)
 806570d:	89 04 24             	mov    %eax,(%esp)
 8065710:	e8 db cd ff ff       	call   80624f0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmm>
 8065715:	8b 56 04             	mov    0x4(%esi),%edx
 8065718:	85 d2                	test   %edx,%edx
 806571a:	89 46 08             	mov    %eax,0x8(%esi)
 806571d:	75 0f                	jne    806572e <_ZN11__sanitizer19MemoryMappingLayoutC1Ev+0x4e>
 806571f:	89 34 24             	mov    %esi,(%esp)
 8065722:	e8 49 ff ff ff       	call   8065670 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv>
 8065727:	8b 46 08             	mov    0x8(%esi),%eax
 806572a:	85 c0                	test   %eax,%eax
 806572c:	74 0f                	je     806573d <_ZN11__sanitizer19MemoryMappingLayoutC1Ev+0x5d>
 806572e:	8b 06                	mov    (%esi),%eax
 8065730:	89 46 0c             	mov    %eax,0xc(%esi)
 8065733:	83 c4 24             	add    $0x24,%esp
 8065736:	5b                   	pop    %ebx
 8065737:	5e                   	pop    %esi
 8065738:	e9 43 fe ff ff       	jmp    8065580 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>
 806573d:	8d 83 4c 72 fd ff    	lea    -0x28db4(%ebx),%eax
 8065743:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065747:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 806574d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065754:	00 
 8065755:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806575c:	00 
 806575d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065764:	00 
 8065765:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806576c:	00 
 806576d:	c7 44 24 04 35 01 00 	movl   $0x135,0x4(%esp)
 8065774:	00 
 8065775:	89 04 24             	mov    %eax,(%esp)
 8065778:	e8 33 cc ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 806577d:	90                   	nop
 806577e:	66 90                	xchg   %ax,%ax

08065780 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm>:
 8065780:	55                   	push   %ebp
 8065781:	57                   	push   %edi
 8065782:	56                   	push   %esi
 8065783:	53                   	push   %ebx
 8065784:	83 ec 4c             	sub    $0x4c,%esp
 8065787:	8b 74 24 60          	mov    0x60(%esp),%esi
 806578b:	e8 60 43 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065790:	81 c3 70 a8 04 00    	add    $0x4a870,%ebx
 8065796:	8b 7c 24 64          	mov    0x64(%esp),%edi
 806579a:	8b 2e                	mov    (%esi),%ebp
 806579c:	8b 46 0c             	mov    0xc(%esi),%eax
 806579f:	03 6e 08             	add    0x8(%esi),%ebp
 80657a2:	39 c5                	cmp    %eax,%ebp
 80657a4:	0f 86 46 02 00 00    	jbe    80659f0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x270>
 80657aa:	8b 4c 24 68          	mov    0x68(%esp),%ecx
 80657ae:	8d 54 24 3c          	lea    0x3c(%esp),%edx
 80657b2:	85 ff                	test   %edi,%edi
 80657b4:	0f 44 fa             	cmove  %edx,%edi
 80657b7:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
 80657be:	00 
 80657bf:	89 04 24             	mov    %eax,(%esp)
 80657c2:	85 c9                	test   %ecx,%ecx
 80657c4:	89 d1                	mov    %edx,%ecx
 80657c6:	0f 45 4c 24 68       	cmovne 0x68(%esp),%ecx
 80657cb:	89 4c 24 68          	mov    %ecx,0x68(%esp)
 80657cf:	8b 4c 24 6c          	mov    0x6c(%esp),%ecx
 80657d3:	85 c9                	test   %ecx,%ecx
 80657d5:	0f 45 54 24 6c       	cmovne 0x6c(%esp),%edx
 80657da:	89 54 24 6c          	mov    %edx,0x6c(%esp)
 80657de:	89 ea                	mov    %ebp,%edx
 80657e0:	29 c2                	sub    %eax,%edx
 80657e2:	89 54 24 08          	mov    %edx,0x8(%esp)
 80657e6:	e8 25 c0 ff ff       	call   8061810 <_ZN11__sanitizer15internal_memchrEPKvim>
 80657eb:	85 c0                	test   %eax,%eax
 80657ed:	0f 45 e8             	cmovne %eax,%ebp
 80657f0:	89 6c 24 2c          	mov    %ebp,0x2c(%esp)
 80657f4:	8d 6e 0c             	lea    0xc(%esi),%ebp
 80657f7:	89 e8                	mov    %ebp,%eax
 80657f9:	e8 a2 f6 ff ff       	call   8064ea0 <_ZN11__sanitizerL8ParseHexEPPc>
 80657fe:	89 07                	mov    %eax,(%edi)
 8065800:	8b 46 0c             	mov    0xc(%esi),%eax
 8065803:	8d 50 01             	lea    0x1(%eax),%edx
 8065806:	89 56 0c             	mov    %edx,0xc(%esi)
 8065809:	0f be 08             	movsbl (%eax),%ecx
 806580c:	89 c8                	mov    %ecx,%eax
 806580e:	83 f1 2d             	xor    $0x2d,%ecx
 8065811:	99                   	cltd   
 8065812:	09 d1                	or     %edx,%ecx
 8065814:	0f 85 e8 01 00 00    	jne    8065a02 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x282>
 806581a:	89 e8                	mov    %ebp,%eax
 806581c:	e8 7f f6 ff ff       	call   8064ea0 <_ZN11__sanitizerL8ParseHexEPPc>
 8065821:	8b 4e 0c             	mov    0xc(%esi),%ecx
 8065824:	8b 54 24 68          	mov    0x68(%esp),%edx
 8065828:	89 02                	mov    %eax,(%edx)
 806582a:	8d 41 01             	lea    0x1(%ecx),%eax
 806582d:	89 46 0c             	mov    %eax,0xc(%esi)
 8065830:	0f be 39             	movsbl (%ecx),%edi
 8065833:	89 f8                	mov    %edi,%eax
 8065835:	83 f7 20             	xor    $0x20,%edi
 8065838:	99                   	cltd   
 8065839:	09 d7                	or     %edx,%edi
 806583b:	0f 85 41 02 00 00    	jne    8065a82 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x302>
 8065841:	8d 41 02             	lea    0x2(%ecx),%eax
 8065844:	89 46 0c             	mov    %eax,0xc(%esi)
 8065847:	0f b6 41 01          	movzbl 0x1(%ecx),%eax
 806584b:	3c 72                	cmp    $0x72,%al
 806584d:	0f 85 e7 01 00 00    	jne    8065a3a <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x2ba>
 8065853:	8d 41 03             	lea    0x3(%ecx),%eax
 8065856:	89 46 0c             	mov    %eax,0xc(%esi)
 8065859:	0f b6 41 02          	movzbl 0x2(%ecx),%eax
 806585d:	3c 77                	cmp    $0x77,%al
 806585f:	0f 85 f5 03 00 00    	jne    8065c5a <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x4da>
 8065865:	8d 41 04             	lea    0x4(%ecx),%eax
 8065868:	89 46 0c             	mov    %eax,0xc(%esi)
 806586b:	0f b6 41 03          	movzbl 0x3(%ecx),%eax
 806586f:	3c 78                	cmp    $0x78,%al
 8065871:	0f 85 9b 03 00 00    	jne    8065c12 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x492>
 8065877:	8d 41 05             	lea    0x5(%ecx),%eax
 806587a:	89 46 0c             	mov    %eax,0xc(%esi)
 806587d:	0f b6 41 04          	movzbl 0x4(%ecx),%eax
 8065881:	3c 70                	cmp    $0x70,%al
 8065883:	0f 94 c2             	sete   %dl
 8065886:	3c 73                	cmp    $0x73,%al
 8065888:	0f 94 c0             	sete   %al
 806588b:	08 c2                	or     %al,%dl
 806588d:	88 54 24 2b          	mov    %dl,0x2b(%esp)
 8065891:	0f 84 3b 03 00 00    	je     8065bd2 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x452>
 8065897:	8d 41 06             	lea    0x6(%ecx),%eax
 806589a:	89 46 0c             	mov    %eax,0xc(%esi)
 806589d:	0f be 49 05          	movsbl 0x5(%ecx),%ecx
 80658a1:	89 c8                	mov    %ecx,%eax
 80658a3:	83 f1 20             	xor    $0x20,%ecx
 80658a6:	99                   	cltd   
 80658a7:	09 d1                	or     %edx,%ecx
 80658a9:	0f 85 eb 02 00 00    	jne    8065b9a <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x41a>
 80658af:	89 e8                	mov    %ebp,%eax
 80658b1:	e8 ea f5 ff ff       	call   8064ea0 <_ZN11__sanitizerL8ParseHexEPPc>
 80658b6:	8b 54 24 6c          	mov    0x6c(%esp),%edx
 80658ba:	89 02                	mov    %eax,(%edx)
 80658bc:	8b 46 0c             	mov    0xc(%esi),%eax
 80658bf:	8d 50 01             	lea    0x1(%eax),%edx
 80658c2:	89 56 0c             	mov    %edx,0xc(%esi)
 80658c5:	0f be 08             	movsbl (%eax),%ecx
 80658c8:	89 c8                	mov    %ecx,%eax
 80658ca:	83 f1 20             	xor    $0x20,%ecx
 80658cd:	99                   	cltd   
 80658ce:	09 d1                	or     %edx,%ecx
 80658d0:	0f 85 8c 02 00 00    	jne    8065b62 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x3e2>
 80658d6:	89 e8                	mov    %ebp,%eax
 80658d8:	e8 c3 f5 ff ff       	call   8064ea0 <_ZN11__sanitizerL8ParseHexEPPc>
 80658dd:	8b 46 0c             	mov    0xc(%esi),%eax
 80658e0:	8d 50 01             	lea    0x1(%eax),%edx
 80658e3:	89 56 0c             	mov    %edx,0xc(%esi)
 80658e6:	0f be 08             	movsbl (%eax),%ecx
 80658e9:	89 c8                	mov    %ecx,%eax
 80658eb:	83 f1 3a             	xor    $0x3a,%ecx
 80658ee:	99                   	cltd   
 80658ef:	09 d1                	or     %edx,%ecx
 80658f1:	0f 85 33 02 00 00    	jne    8065b2a <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x3aa>
 80658f7:	89 e8                	mov    %ebp,%eax
 80658f9:	e8 a2 f5 ff ff       	call   8064ea0 <_ZN11__sanitizerL8ParseHexEPPc>
 80658fe:	8b 7e 0c             	mov    0xc(%esi),%edi
 8065901:	8d 4f 01             	lea    0x1(%edi),%ecx
 8065904:	89 4e 0c             	mov    %ecx,0xc(%esi)
 8065907:	0f be 2f             	movsbl (%edi),%ebp
 806590a:	89 e8                	mov    %ebp,%eax
 806590c:	83 f5 20             	xor    $0x20,%ebp
 806590f:	99                   	cltd   
 8065910:	09 d5                	or     %edx,%ebp
 8065912:	0f 85 da 01 00 00    	jne    8065af2 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x372>
 8065918:	0f b6 47 01          	movzbl 0x1(%edi),%eax
 806591c:	83 c7 02             	add    $0x2,%edi
 806591f:	83 e8 30             	sub    $0x30,%eax
 8065922:	3c 09                	cmp    $0x9,%al
 8065924:	77 14                	ja     806593a <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x1ba>
 8065926:	66 90                	xchg   %ax,%ax
 8065928:	89 f9                	mov    %edi,%ecx
 806592a:	89 7e 0c             	mov    %edi,0xc(%esi)
 806592d:	0f b6 01             	movzbl (%ecx),%eax
 8065930:	83 c7 01             	add    $0x1,%edi
 8065933:	83 e8 30             	sub    $0x30,%eax
 8065936:	3c 09                	cmp    $0x9,%al
 8065938:	76 ee                	jbe    8065928 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x1a8>
 806593a:	8d 79 01             	lea    0x1(%ecx),%edi
 806593d:	89 7e 0c             	mov    %edi,0xc(%esi)
 8065940:	0f be 29             	movsbl (%ecx),%ebp
 8065943:	89 e8                	mov    %ebp,%eax
 8065945:	83 f5 20             	xor    $0x20,%ebp
 8065948:	99                   	cltd   
 8065949:	09 d5                	or     %edx,%ebp
 806594b:	0f 85 69 01 00 00    	jne    8065aba <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x33a>
 8065951:	39 7c 24 2c          	cmp    %edi,0x2c(%esp)
 8065955:	76 23                	jbe    806597a <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x1fa>
 8065957:	80 79 01 20          	cmpb   $0x20,0x1(%ecx)
 806595b:	8d 41 02             	lea    0x2(%ecx),%eax
 806595e:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8065962:	74 0d                	je     8065971 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x1f1>
 8065964:	eb 3a                	jmp    80659a0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x220>
 8065966:	66 90                	xchg   %ax,%ax
 8065968:	83 c0 01             	add    $0x1,%eax
 806596b:	80 78 ff 20          	cmpb   $0x20,-0x1(%eax)
 806596f:	75 2f                	jne    80659a0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x220>
 8065971:	39 d0                	cmp    %edx,%eax
 8065973:	89 c7                	mov    %eax,%edi
 8065975:	89 46 0c             	mov    %eax,0xc(%esi)
 8065978:	75 ee                	jne    8065968 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x1e8>
 806597a:	31 c0                	xor    %eax,%eax
 806597c:	3b 44 24 74          	cmp    0x74(%esp),%eax
 8065980:	72 5b                	jb     80659dd <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x25d>
 8065982:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8065988:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 806598c:	83 c0 01             	add    $0x1,%eax
 806598f:	89 46 0c             	mov    %eax,0xc(%esi)
 8065992:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
 8065997:	83 c4 4c             	add    $0x4c,%esp
 806599a:	5b                   	pop    %ebx
 806599b:	5e                   	pop    %esi
 806599c:	5f                   	pop    %edi
 806599d:	5d                   	pop    %ebp
 806599e:	c3                   	ret    
 806599f:	90                   	nop
 80659a0:	8b 54 24 74          	mov    0x74(%esp),%edx
 80659a4:	89 f9                	mov    %edi,%ecx
 80659a6:	31 c0                	xor    %eax,%eax
 80659a8:	8b 6c 24 70          	mov    0x70(%esp),%ebp
 80659ac:	83 ea 01             	sub    $0x1,%edx
 80659af:	89 d7                	mov    %edx,%edi
 80659b1:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 80659b5:	8d 76 00             	lea    0x0(%esi),%esi
 80659b8:	85 ed                	test   %ebp,%ebp
 80659ba:	74 0e                	je     80659ca <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x24a>
 80659bc:	39 c7                	cmp    %eax,%edi
 80659be:	76 0a                	jbe    80659ca <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x24a>
 80659c0:	0f b6 09             	movzbl (%ecx),%ecx
 80659c3:	88 4c 05 00          	mov    %cl,0x0(%ebp,%eax,1)
 80659c7:	83 c0 01             	add    $0x1,%eax
 80659ca:	8b 4e 0c             	mov    0xc(%esi),%ecx
 80659cd:	83 c1 01             	add    $0x1,%ecx
 80659d0:	39 ca                	cmp    %ecx,%edx
 80659d2:	89 4e 0c             	mov    %ecx,0xc(%esi)
 80659d5:	77 e1                	ja     80659b8 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x238>
 80659d7:	3b 44 24 74          	cmp    0x74(%esp),%eax
 80659db:	73 ab                	jae    8065988 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x208>
 80659dd:	8b 54 24 70          	mov    0x70(%esp),%edx
 80659e1:	85 d2                	test   %edx,%edx
 80659e3:	74 a3                	je     8065988 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x208>
 80659e5:	8b 54 24 70          	mov    0x70(%esp),%edx
 80659e9:	c6 04 02 00          	movb   $0x0,(%edx,%eax,1)
 80659ed:	eb 99                	jmp    8065988 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0x208>
 80659ef:	90                   	nop
 80659f0:	c6 44 24 2b 00       	movb   $0x0,0x2b(%esp)
 80659f5:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
 80659fa:	83 c4 4c             	add    $0x4c,%esp
 80659fd:	5b                   	pop    %ebx
 80659fe:	5e                   	pop    %esi
 80659ff:	5f                   	pop    %edi
 8065a00:	5d                   	pop    %ebp
 8065a01:	c3                   	ret    
 8065a02:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065a06:	8d 83 28 74 fd ff    	lea    -0x28bd8(%ebx),%eax
 8065a0c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065a10:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065a16:	c7 44 24 14 2d 00 00 	movl   $0x2d,0x14(%esp)
 8065a1d:	00 
 8065a1e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065a25:	00 
 8065a26:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065a2a:	c7 44 24 04 8d 01 00 	movl   $0x18d,0x4(%esp)
 8065a31:	00 
 8065a32:	89 04 24             	mov    %eax,(%esp)
 8065a35:	e8 76 c9 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065a3a:	3c 2d                	cmp    $0x2d,%al
 8065a3c:	0f 84 11 fe ff ff    	je     8065853 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0xd3>
 8065a42:	8d 83 6c 72 fd ff    	lea    -0x28d94(%ebx),%eax
 8065a48:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065a4c:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065a52:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065a59:	00 
 8065a5a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065a61:	00 
 8065a62:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065a69:	00 
 8065a6a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065a71:	00 
 8065a72:	c7 44 24 04 90 01 00 	movl   $0x190,0x4(%esp)
 8065a79:	00 
 8065a7a:	89 04 24             	mov    %eax,(%esp)
 8065a7d:	e8 2e c9 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065a82:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065a86:	8d 83 43 74 fd ff    	lea    -0x28bbd(%ebx),%eax
 8065a8c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065a90:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065a96:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
 8065a9d:	00 
 8065a9e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065aa5:	00 
 8065aa6:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065aaa:	c7 44 24 04 8f 01 00 	movl   $0x18f,0x4(%esp)
 8065ab1:	00 
 8065ab2:	89 04 24             	mov    %eax,(%esp)
 8065ab5:	e8 f6 c8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065aba:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065abe:	8d 83 43 74 fd ff    	lea    -0x28bbd(%ebx),%eax
 8065ac4:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065ac8:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065ace:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
 8065ad5:	00 
 8065ad6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065add:	00 
 8065ade:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065ae2:	c7 44 24 04 9d 01 00 	movl   $0x19d,0x4(%esp)
 8065ae9:	00 
 8065aea:	89 04 24             	mov    %eax,(%esp)
 8065aed:	e8 be c8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065af2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065af6:	8d 83 43 74 fd ff    	lea    -0x28bbd(%ebx),%eax
 8065afc:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065b00:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065b06:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
 8065b0d:	00 
 8065b0e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065b15:	00 
 8065b16:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065b1a:	c7 44 24 04 9a 01 00 	movl   $0x19a,0x4(%esp)
 8065b21:	00 
 8065b22:	89 04 24             	mov    %eax,(%esp)
 8065b25:	e8 86 c8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065b2a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065b2e:	8d 83 5e 74 fd ff    	lea    -0x28ba2(%ebx),%eax
 8065b34:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065b38:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065b3e:	c7 44 24 14 3a 00 00 	movl   $0x3a,0x14(%esp)
 8065b45:	00 
 8065b46:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065b4d:	00 
 8065b4e:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065b52:	c7 44 24 04 98 01 00 	movl   $0x198,0x4(%esp)
 8065b59:	00 
 8065b5a:	89 04 24             	mov    %eax,(%esp)
 8065b5d:	e8 4e c8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065b62:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065b66:	8d 83 43 74 fd ff    	lea    -0x28bbd(%ebx),%eax
 8065b6c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065b70:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065b76:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
 8065b7d:	00 
 8065b7e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065b85:	00 
 8065b86:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065b8a:	c7 44 24 04 96 01 00 	movl   $0x196,0x4(%esp)
 8065b91:	00 
 8065b92:	89 04 24             	mov    %eax,(%esp)
 8065b95:	e8 16 c8 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065b9a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8065b9e:	8d 83 43 74 fd ff    	lea    -0x28bbd(%ebx),%eax
 8065ba4:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065ba8:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065bae:	c7 44 24 14 20 00 00 	movl   $0x20,0x14(%esp)
 8065bb5:	00 
 8065bb6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065bbd:	00 
 8065bbe:	89 54 24 10          	mov    %edx,0x10(%esp)
 8065bc2:	c7 44 24 04 94 01 00 	movl   $0x194,0x4(%esp)
 8065bc9:	00 
 8065bca:	89 04 24             	mov    %eax,(%esp)
 8065bcd:	e8 de c7 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065bd2:	8d 83 f0 72 fd ff    	lea    -0x28d10(%ebx),%eax
 8065bd8:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065bdc:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065be2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065be9:	00 
 8065bea:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065bf1:	00 
 8065bf2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065bf9:	00 
 8065bfa:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065c01:	00 
 8065c02:	c7 44 24 04 93 01 00 	movl   $0x193,0x4(%esp)
 8065c09:	00 
 8065c0a:	89 04 24             	mov    %eax,(%esp)
 8065c0d:	e8 9e c7 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065c12:	3c 2d                	cmp    $0x2d,%al
 8065c14:	0f 84 5d fc ff ff    	je     8065877 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0xf7>
 8065c1a:	8d 83 c4 72 fd ff    	lea    -0x28d3c(%ebx),%eax
 8065c20:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065c24:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065c2a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065c31:	00 
 8065c32:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065c39:	00 
 8065c3a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065c41:	00 
 8065c42:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065c49:	00 
 8065c4a:	c7 44 24 04 92 01 00 	movl   $0x192,0x4(%esp)
 8065c51:	00 
 8065c52:	89 04 24             	mov    %eax,(%esp)
 8065c55:	e8 56 c7 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065c5a:	3c 2d                	cmp    $0x2d,%al
 8065c5c:	0f 84 03 fc ff ff    	je     8065865 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm+0xe5>
 8065c62:	8d 83 98 72 fd ff    	lea    -0x28d68(%ebx),%eax
 8065c68:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065c6c:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065c72:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065c79:	00 
 8065c7a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065c81:	00 
 8065c82:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065c89:	00 
 8065c8a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065c91:	00 
 8065c92:	c7 44 24 04 91 01 00 	movl   $0x191,0x4(%esp)
 8065c99:	00 
 8065c9a:	89 04 24             	mov    %eax,(%esp)
 8065c9d:	e8 0e c7 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065ca2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8065ca9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08065cb0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>:
 8065cb0:	55                   	push   %ebp
 8065cb1:	57                   	push   %edi
 8065cb2:	56                   	push   %esi
 8065cb3:	53                   	push   %ebx
 8065cb4:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 8065cba:	8b 8c 24 a4 00 00 00 	mov    0xa4(%esp),%ecx
 8065cc1:	8b 94 24 a8 00 00 00 	mov    0xa8(%esp),%edx
 8065cc8:	e8 23 3e fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8065ccd:	81 c3 33 a3 04 00    	add    $0x4a333,%ebx
 8065cd3:	8b 84 24 a0 00 00 00 	mov    0xa0(%esp),%eax
 8065cda:	89 4c 24 2c          	mov    %ecx,0x2c(%esp)
 8065cde:	89 54 24 28          	mov    %edx,0x28(%esp)
 8065ce2:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 8065ce9:	89 54 24 7c          	mov    %edx,0x7c(%esp)
 8065ced:	31 d2                	xor    %edx,%edx
 8065cef:	85 c9                	test   %ecx,%ecx
 8065cf1:	0f 84 1e 02 00 00    	je     8065f15 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x265>
 8065cf7:	8b 54 24 28          	mov    0x28(%esp),%edx
 8065cfb:	85 d2                	test   %edx,%edx
 8065cfd:	0f 84 d2 01 00 00    	je     8065ed5 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x225>
 8065d03:	84 c0                	test   %al,%al
 8065d05:	0f 84 f5 00 00 00    	je     8065e00 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x150>
 8065d0b:	8d 44 24 40          	lea    0x40(%esp),%eax
 8065d0f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065d13:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8065d1a:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8065d1e:	e8 4d 3a fe ff       	call   8049770 <getrlimit@plt>
 8065d23:	89 c7                	mov    %eax,%edi
 8065d25:	89 c6                	mov    %eax,%esi
 8065d27:	c1 ff 1f             	sar    $0x1f,%edi
 8065d2a:	09 f8                	or     %edi,%eax
 8065d2c:	0f 85 9b 02 00 00    	jne    8065fcd <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x31d>
 8065d32:	8d 74 24 48          	lea    0x48(%esp),%esi
 8065d36:	89 34 24             	mov    %esi,(%esp)
 8065d39:	8d 6c 24 3c          	lea    0x3c(%esp),%ebp
 8065d3d:	e8 9e f9 ff ff       	call   80656e0 <_ZN11__sanitizer19MemoryMappingLayoutC1Ev>
 8065d42:	8d 44 24 38          	lea    0x38(%esp),%eax
 8065d46:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 8065d4d:	00 
 8065d4e:	8d 7c 24 34          	lea    0x34(%esp),%edi
 8065d52:	89 44 24 20          	mov    %eax,0x20(%esp)
 8065d56:	eb 0e                	jmp    8065d66 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xb6>
 8065d58:	8b 44 24 38          	mov    0x38(%esp),%eax
 8065d5c:	3b 44 24 1c          	cmp    0x1c(%esp),%eax
 8065d60:	77 30                	ja     8065d92 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xe2>
 8065d62:	89 44 24 24          	mov    %eax,0x24(%esp)
 8065d66:	8b 44 24 20          	mov    0x20(%esp),%eax
 8065d6a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065d71:	00 
 8065d72:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065d79:	00 
 8065d7a:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
 8065d7e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065d82:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8065d86:	89 34 24             	mov    %esi,(%esp)
 8065d89:	e8 f2 f9 ff ff       	call   8065780 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm>
 8065d8e:	84 c0                	test   %al,%al
 8065d90:	75 c6                	jne    8065d58 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xa8>
 8065d92:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8065d96:	39 44 24 34          	cmp    %eax,0x34(%esp)
 8065d9a:	0f 87 f0 00 00 00    	ja     8065e90 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1e0>
 8065da0:	8b 44 24 38          	mov    0x38(%esp),%eax
 8065da4:	3b 44 24 1c          	cmp    0x1c(%esp),%eax
 8065da8:	0f 86 e2 00 00 00    	jbe    8065e90 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1e0>
 8065dae:	8b 4c 24 40          	mov    0x40(%esp),%ecx
 8065db2:	89 c6                	mov    %eax,%esi
 8065db4:	ba 00 00 00 10       	mov    $0x10000000,%edx
 8065db9:	2b 74 24 24          	sub    0x24(%esp),%esi
 8065dbd:	81 f9 00 00 00 10    	cmp    $0x10000000,%ecx
 8065dc3:	0f 46 d1             	cmovbe %ecx,%edx
 8065dc6:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
 8065dca:	39 f2                	cmp    %esi,%edx
 8065dcc:	0f 47 d6             	cmova  %esi,%edx
 8065dcf:	89 01                	mov    %eax,(%ecx)
 8065dd1:	29 d0                	sub    %edx,%eax
 8065dd3:	8b 54 24 28          	mov    0x28(%esp),%edx
 8065dd7:	89 02                	mov    %eax,(%edx)
 8065dd9:	8b 54 24 48          	mov    0x48(%esp),%edx
 8065ddd:	3b 93 b0 23 5b 01    	cmp    0x15b23b0(%ebx),%edx
 8065de3:	0f 84 8d 00 00 00    	je     8065e76 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1c6>
 8065de9:	8b 44 24 4c          	mov    0x4c(%esp),%eax
 8065ded:	89 14 24             	mov    %edx,(%esp)
 8065df0:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065df4:	e8 b7 cc ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8065df9:	eb 7b                	jmp    8065e76 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1c6>
 8065dfb:	90                   	nop
 8065dfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8065e00:	e8 cb 38 fe ff       	call   80496d0 <pthread_self@plt>
 8065e05:	8d 6c 24 58          	lea    0x58(%esp),%ebp
 8065e09:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8065e0d:	89 04 24             	mov    %eax,(%esp)
 8065e10:	e8 8b 38 fe ff       	call   80496a0 <pthread_getattr_np@plt>
 8065e15:	89 c7                	mov    %eax,%edi
 8065e17:	89 c6                	mov    %eax,%esi
 8065e19:	c1 ff 1f             	sar    $0x1f,%edi
 8065e1c:	09 f8                	or     %edi,%eax
 8065e1e:	0f 85 31 01 00 00    	jne    8065f55 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x2a5>
 8065e24:	8d 44 24 40          	lea    0x40(%esp),%eax
 8065e28:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065e2c:	8d 44 24 48          	lea    0x48(%esp),%eax
 8065e30:	89 44 24 04          	mov    %eax,0x4(%esp)
 8065e34:	89 2c 24             	mov    %ebp,(%esp)
 8065e37:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%esp)
 8065e3e:	00 
 8065e3f:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%esp)
 8065e46:	00 
 8065e47:	e8 34 38 fe ff       	call   8049680 <pthread_attr_getstack@plt>
 8065e4c:	89 2c 24             	mov    %ebp,(%esp)
 8065e4f:	e8 5c 38 fe ff       	call   80496b0 <pthread_attr_destroy@plt>
 8065e54:	8b 54 24 48          	mov    0x48(%esp),%edx
 8065e58:	8b 44 24 40          	mov    0x40(%esp),%eax
 8065e5c:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 8065e60:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8065e63:	3d ff ff ff 0f       	cmp    $0xfffffff,%eax
 8065e68:	89 0f                	mov    %ecx,(%edi)
 8065e6a:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 8065e6e:	89 11                	mov    %edx,(%ecx)
 8065e70:	0f 87 17 01 00 00    	ja     8065f8d <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x2dd>
 8065e76:	8b 44 24 7c          	mov    0x7c(%esp),%eax
 8065e7a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8065e81:	75 4d                	jne    8065ed0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x220>
 8065e83:	81 c4 8c 00 00 00    	add    $0x8c,%esp
 8065e89:	5b                   	pop    %ebx
 8065e8a:	5e                   	pop    %esi
 8065e8b:	5f                   	pop    %edi
 8065e8c:	5d                   	pop    %ebp
 8065e8d:	c3                   	ret    
 8065e8e:	66 90                	xchg   %ax,%ax
 8065e90:	8d 83 ac 73 fd ff    	lea    -0x28c54(%ebx),%eax
 8065e96:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065e9a:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065ea0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065ea7:	00 
 8065ea8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065eaf:	00 
 8065eb0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065eb7:	00 
 8065eb8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065ebf:	00 
 8065ec0:	c7 44 24 04 b8 00 00 	movl   $0xb8,0x4(%esp)
 8065ec7:	00 
 8065ec8:	89 04 24             	mov    %eax,(%esp)
 8065ecb:	e8 e0 c4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065ed0:	e8 eb cc 01 00       	call   8082bc0 <__stack_chk_fail_local>
 8065ed5:	8d 83 8e 74 fd ff    	lea    -0x28b72(%ebx),%eax
 8065edb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065edf:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065ee5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065eec:	00 
 8065eed:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065ef4:	00 
 8065ef5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065efc:	00 
 8065efd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065f04:	00 
 8065f05:	c7 44 24 04 a9 00 00 	movl   $0xa9,0x4(%esp)
 8065f0c:	00 
 8065f0d:	89 04 24             	mov    %eax,(%esp)
 8065f10:	e8 9b c4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065f15:	8d 83 79 74 fd ff    	lea    -0x28b87(%ebx),%eax
 8065f1b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065f1f:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065f25:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065f2c:	00 
 8065f2d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065f34:	00 
 8065f35:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065f3c:	00 
 8065f3d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065f44:	00 
 8065f45:	c7 44 24 04 a8 00 00 	movl   $0xa8,0x4(%esp)
 8065f4c:	00 
 8065f4d:	89 04 24             	mov    %eax,(%esp)
 8065f50:	e8 5b c4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065f55:	8d 83 48 73 fd ff    	lea    -0x28cb8(%ebx),%eax
 8065f5b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065f5f:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065f65:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065f6c:	00 
 8065f6d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065f74:	00 
 8065f75:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8065f79:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8065f7d:	c7 44 24 04 c9 00 00 	movl   $0xc9,0x4(%esp)
 8065f84:	00 
 8065f85:	89 04 24             	mov    %eax,(%esp)
 8065f88:	e8 23 c4 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065f8d:	8d 83 80 73 fd ff    	lea    -0x28c80(%ebx),%eax
 8065f93:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065f97:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065f9d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065fa4:	00 
 8065fa5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065fac:	00 
 8065fad:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8065fb4:	00 
 8065fb5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8065fbc:	00 
 8065fbd:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)
 8065fc4:	00 
 8065fc5:	89 04 24             	mov    %eax,(%esp)
 8065fc8:	e8 e3 c3 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8065fcd:	8d 83 1c 73 fd ff    	lea    -0x28ce4(%ebx),%eax
 8065fd3:	89 44 24 08          	mov    %eax,0x8(%esp)
 8065fd7:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8065fdd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8065fe4:	00 
 8065fe5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8065fec:	00 
 8065fed:	89 74 24 0c          	mov    %esi,0xc(%esp)
 8065ff1:	89 7c 24 10          	mov    %edi,0x10(%esp)
 8065ff5:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)
 8065ffc:	00 
 8065ffd:	89 04 24             	mov    %eax,(%esp)
 8066000:	e8 ab c3 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8066005:	90                   	nop
 8066006:	8d 76 00             	lea    0x0(%esi),%esi
 8066009:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08066010 <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm>:
 8066010:	55                   	push   %ebp
 8066011:	57                   	push   %edi
 8066012:	56                   	push   %esi
 8066013:	31 f6                	xor    %esi,%esi
 8066015:	83 ec 40             	sub    $0x40,%esp
 8066018:	8b 6c 24 50          	mov    0x50(%esp),%ebp
 806601c:	8b 7c 24 54          	mov    0x54(%esp),%edi
 8066020:	8b 45 00             	mov    0x0(%ebp),%eax
 8066023:	89 45 0c             	mov    %eax,0xc(%ebp)
 8066026:	8d 44 24 3c          	lea    0x3c(%esp),%eax
 806602a:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 806602e:	8d 44 24 38          	lea    0x38(%esp),%eax
 8066032:	89 44 24 28          	mov    %eax,0x28(%esp)
 8066036:	8d 44 24 34          	lea    0x34(%esp),%eax
 806603a:	89 44 24 24          	mov    %eax,0x24(%esp)
 806603e:	eb 11                	jmp    8066051 <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm+0x41>
 8066040:	8b 44 24 34          	mov    0x34(%esp),%eax
 8066044:	39 c7                	cmp    %eax,%edi
 8066046:	72 06                	jb     806604e <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm+0x3e>
 8066048:	3b 7c 24 38          	cmp    0x38(%esp),%edi
 806604c:	72 52                	jb     80660a0 <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm+0x90>
 806604e:	83 c6 01             	add    $0x1,%esi
 8066051:	8b 44 24 60          	mov    0x60(%esp),%eax
 8066055:	89 2c 24             	mov    %ebp,(%esp)
 8066058:	89 44 24 14          	mov    %eax,0x14(%esp)
 806605c:	8b 44 24 5c          	mov    0x5c(%esp),%eax
 8066060:	89 44 24 10          	mov    %eax,0x10(%esp)
 8066064:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8066068:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806606c:	8b 44 24 28          	mov    0x28(%esp),%eax
 8066070:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066074:	8b 44 24 24          	mov    0x24(%esp),%eax
 8066078:	89 44 24 04          	mov    %eax,0x4(%esp)
 806607c:	e8 ff f6 ff ff       	call   8065780 <_ZN11__sanitizer19MemoryMappingLayout4NextEPmS1_S1_Pcm>
 8066081:	84 c0                	test   %al,%al
 8066083:	75 bb                	jne    8066040 <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm+0x30>
 8066085:	8b 54 24 60          	mov    0x60(%esp),%edx
 8066089:	85 d2                	test   %edx,%edx
 806608b:	74 07                	je     8066094 <_ZN11__sanitizer19MemoryMappingLayout22GetObjectNameAndOffsetEmPmPcm+0x84>
 806608d:	8b 4c 24 5c          	mov    0x5c(%esp),%ecx
 8066091:	c6 01 00             	movb   $0x0,(%ecx)
 8066094:	83 c4 40             	add    $0x40,%esp
 8066097:	5e                   	pop    %esi
 8066098:	5f                   	pop    %edi
 8066099:	5d                   	pop    %ebp
 806609a:	c3                   	ret    
 806609b:	90                   	nop
 806609c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80660a0:	31 d2                	xor    %edx,%edx
 80660a2:	85 f6                	test   %esi,%esi
 80660a4:	0f 45 d0             	cmovne %eax,%edx
 80660a7:	8b 44 24 58          	mov    0x58(%esp),%eax
 80660ab:	03 7c 24 3c          	add    0x3c(%esp),%edi
 80660af:	29 d7                	sub    %edx,%edi
 80660b1:	89 38                	mov    %edi,(%eax)
 80660b3:	83 c4 40             	add    $0x40,%esp
 80660b6:	b8 01 00 00 00       	mov    $0x1,%eax
 80660bb:	5e                   	pop    %esi
 80660bc:	5f                   	pop    %edi
 80660bd:	5d                   	pop    %ebp
 80660be:	c3                   	ret    
 80660bf:	90                   	nop

080660c0 <_ZN11__sanitizer22SanitizerSetThreadNameEPKc>:
 80660c0:	53                   	push   %ebx
 80660c1:	83 ec 28             	sub    $0x28,%esp
 80660c4:	e8 27 3a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80660c9:	81 c3 37 9f 04 00    	add    $0x49f37,%ebx
 80660cf:	8b 44 24 30          	mov    0x30(%esp),%eax
 80660d3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80660da:	00 
 80660db:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80660e2:	00 
 80660e3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 80660ea:	00 
 80660eb:	89 44 24 04          	mov    %eax,0x4(%esp)
 80660ef:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)
 80660f6:	e8 b5 00 ff ff       	call   80561b0 <__interceptor_prctl>
 80660fb:	85 c0                	test   %eax,%eax
 80660fd:	0f 94 c0             	sete   %al
 8066100:	83 c4 28             	add    $0x28,%esp
 8066103:	5b                   	pop    %ebx
 8066104:	c3                   	ret    
 8066105:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8066109:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08066110 <_ZN11__sanitizer22SanitizerGetThreadNameEPci>:
 8066110:	57                   	push   %edi
 8066111:	56                   	push   %esi
 8066112:	53                   	push   %ebx
 8066113:	e8 d8 39 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8066118:	81 c3 e8 9e 04 00    	add    $0x49ee8,%ebx
 806611e:	83 ec 40             	sub    $0x40,%esp
 8066121:	8d 74 24 2b          	lea    0x2b(%esp),%esi
 8066125:	8b 7c 24 50          	mov    0x50(%esp),%edi
 8066129:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8066130:	00 
 8066131:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8066138:	00 
 8066139:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8066140:	00 
 8066141:	89 74 24 04          	mov    %esi,0x4(%esp)
 8066145:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 806614c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8066152:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 8066156:	31 c0                	xor    %eax,%eax
 8066158:	e8 53 00 ff ff       	call   80561b0 <__interceptor_prctl>
 806615d:	31 d2                	xor    %edx,%edx
 806615f:	85 c0                	test   %eax,%eax
 8066161:	75 21                	jne    8066184 <_ZN11__sanitizer22SanitizerGetThreadNameEPci+0x74>
 8066163:	8b 44 24 54          	mov    0x54(%esp),%eax
 8066167:	89 74 24 04          	mov    %esi,0x4(%esp)
 806616b:	89 3c 24             	mov    %edi,(%esp)
 806616e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066172:	e8 69 ba ff ff       	call   8061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 8066177:	8b 44 24 54          	mov    0x54(%esp),%eax
 806617b:	ba 01 00 00 00       	mov    $0x1,%edx
 8066180:	c6 04 07 00          	movb   $0x0,(%edi,%eax,1)
 8066184:	8b 4c 24 3c          	mov    0x3c(%esp),%ecx
 8066188:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 806618f:	89 d0                	mov    %edx,%eax
 8066191:	75 07                	jne    806619a <_ZN11__sanitizer22SanitizerGetThreadNameEPci+0x8a>
 8066193:	83 c4 40             	add    $0x40,%esp
 8066196:	5b                   	pop    %ebx
 8066197:	5e                   	pop    %esi
 8066198:	5f                   	pop    %edi
 8066199:	c3                   	ret    
 806619a:	e8 21 ca 01 00       	call   8082bc0 <__stack_chk_fail_local>
 806619f:	90                   	nop

080661a0 <_ZN11__sanitizer12Unwind_GetIPEP15_Unwind_Context>:
 80661a0:	53                   	push   %ebx
 80661a1:	83 ec 18             	sub    $0x18,%esp
 80661a4:	e8 47 39 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80661a9:	81 c3 57 9e 04 00    	add    $0x49e57,%ebx
 80661af:	8b 44 24 20          	mov    0x20(%esp),%eax
 80661b3:	89 04 24             	mov    %eax,(%esp)
 80661b6:	e8 b5 36 fe ff       	call   8049870 <_Unwind_GetIP@plt>
 80661bb:	83 c4 18             	add    $0x18,%esp
 80661be:	5b                   	pop    %ebx
 80661bf:	c3                   	ret    

080661c0 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm>:
 80661c0:	55                   	push   %ebp
 80661c1:	57                   	push   %edi
 80661c2:	56                   	push   %esi
 80661c3:	53                   	push   %ebx
 80661c4:	83 ec 1c             	sub    $0x1c,%esp
 80661c7:	8b 44 24 38          	mov    0x38(%esp),%eax
 80661cb:	8b 74 24 30          	mov    0x30(%esp),%esi
 80661cf:	e8 1c 39 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80661d4:	81 c3 2c 9e 04 00    	add    $0x49e2c,%ebx
 80661da:	8b 7c 24 34          	mov    0x34(%esp),%edi
 80661de:	83 f8 01             	cmp    $0x1,%eax
 80661e1:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
 80661e7:	89 46 04             	mov    %eax,0x4(%esi)
 80661ea:	76 40                	jbe    806622c <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x6c>
 80661ec:	8d 83 f0 4e fb ff    	lea    -0x4b110(%ebx),%eax
 80661f2:	89 74 24 04          	mov    %esi,0x4(%esp)
 80661f6:	89 04 24             	mov    %eax,(%esp)
 80661f9:	e8 92 34 fe ff       	call   8049690 <_Unwind_Backtrace@plt>
 80661fe:	8b 16                	mov    (%esi),%edx
 8066200:	b8 01 00 00 00       	mov    $0x1,%eax
 8066205:	83 fa 01             	cmp    $0x1,%edx
 8066208:	76 16                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 806620a:	8b 4e 0c             	mov    0xc(%esi),%ecx
 806620d:	89 fd                	mov    %edi,%ebp
 806620f:	29 cd                	sub    %ecx,%ebp
 8066211:	83 fd 40             	cmp    $0x40,%ebp
 8066214:	76 0a                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 8066216:	29 f9                	sub    %edi,%ecx
 8066218:	83 f9 40             	cmp    $0x40,%ecx
 806621b:	77 1b                	ja     8066238 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x78>
 806621d:	8d 76 00             	lea    0x0(%esi),%esi
 8066220:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066224:	89 34 24             	mov    %esi,(%esp)
 8066227:	e8 44 e8 ff ff       	call   8064a70 <_ZN11__sanitizer10StackTrace14PopStackFramesEm>
 806622c:	89 7e 08             	mov    %edi,0x8(%esi)
 806622f:	83 c4 1c             	add    $0x1c,%esp
 8066232:	5b                   	pop    %ebx
 8066233:	5e                   	pop    %esi
 8066234:	5f                   	pop    %edi
 8066235:	5d                   	pop    %ebp
 8066236:	c3                   	ret    
 8066237:	90                   	nop
 8066238:	83 fa 02             	cmp    $0x2,%edx
 806623b:	76 e3                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 806623d:	8b 4e 10             	mov    0x10(%esi),%ecx
 8066240:	89 fd                	mov    %edi,%ebp
 8066242:	b8 02 00 00 00       	mov    $0x2,%eax
 8066247:	29 cd                	sub    %ecx,%ebp
 8066249:	83 fd 40             	cmp    $0x40,%ebp
 806624c:	76 d2                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 806624e:	29 f9                	sub    %edi,%ecx
 8066250:	83 f9 40             	cmp    $0x40,%ecx
 8066253:	76 cb                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 8066255:	83 fa 03             	cmp    $0x3,%edx
 8066258:	76 61                	jbe    80662bb <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0xfb>
 806625a:	8b 4e 14             	mov    0x14(%esi),%ecx
 806625d:	89 fd                	mov    %edi,%ebp
 806625f:	b8 03 00 00 00       	mov    $0x3,%eax
 8066264:	29 cd                	sub    %ecx,%ebp
 8066266:	83 fd 40             	cmp    $0x40,%ebp
 8066269:	76 b5                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 806626b:	29 f9                	sub    %edi,%ecx
 806626d:	83 f9 40             	cmp    $0x40,%ecx
 8066270:	76 ae                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 8066272:	83 fa 04             	cmp    $0x4,%edx
 8066275:	76 44                	jbe    80662bb <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0xfb>
 8066277:	8b 4e 18             	mov    0x18(%esi),%ecx
 806627a:	89 fd                	mov    %edi,%ebp
 806627c:	b8 04 00 00 00       	mov    $0x4,%eax
 8066281:	29 cd                	sub    %ecx,%ebp
 8066283:	83 fd 40             	cmp    $0x40,%ebp
 8066286:	76 98                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 8066288:	29 f9                	sub    %edi,%ecx
 806628a:	83 f9 40             	cmp    $0x40,%ecx
 806628d:	76 91                	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 806628f:	83 fa 05             	cmp    $0x5,%edx
 8066292:	76 27                	jbe    80662bb <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0xfb>
 8066294:	8b 56 1c             	mov    0x1c(%esi),%edx
 8066297:	89 f9                	mov    %edi,%ecx
 8066299:	b8 05 00 00 00       	mov    $0x5,%eax
 806629e:	29 d1                	sub    %edx,%ecx
 80662a0:	83 f9 40             	cmp    $0x40,%ecx
 80662a3:	0f 86 77 ff ff ff    	jbe    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 80662a9:	29 fa                	sub    %edi,%edx
 80662ab:	83 fa 41             	cmp    $0x41,%edx
 80662ae:	19 c0                	sbb    %eax,%eax
 80662b0:	83 e0 04             	and    $0x4,%eax
 80662b3:	83 c0 01             	add    $0x1,%eax
 80662b6:	e9 65 ff ff ff       	jmp    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 80662bb:	b8 01 00 00 00       	mov    $0x1,%eax
 80662c0:	e9 5b ff ff ff       	jmp    8066220 <_ZN11__sanitizer10StackTrace15SlowUnwindStackEmm+0x60>
 80662c5:	90                   	nop
 80662c6:	8d 76 00             	lea    0x0(%esi),%esi
 80662c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080662d0 <_ZN11__sanitizer13BlockingMutexC1E17LinkerInitialized>:
 80662d0:	53                   	push   %ebx
 80662d1:	31 d2                	xor    %edx,%edx
 80662d3:	83 ec 28             	sub    $0x28,%esp
 80662d6:	89 d1                	mov    %edx,%ecx
 80662d8:	8b 44 24 30          	mov    0x30(%esp),%eax
 80662dc:	e8 0f 38 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80662e1:	81 c3 1f 9d 04 00    	add    $0x49d1f,%ebx
 80662e7:	8b 40 28             	mov    0x28(%eax),%eax
 80662ea:	09 c1                	or     %eax,%ecx
 80662ec:	75 05                	jne    80662f3 <_ZN11__sanitizer13BlockingMutexC1E17LinkerInitialized+0x23>
 80662ee:	83 c4 28             	add    $0x28,%esp
 80662f1:	5b                   	pop    %ebx
 80662f2:	c3                   	ret    
 80662f3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80662f7:	8d 83 a6 74 fd ff    	lea    -0x28b5a(%ebx),%eax
 80662fd:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066301:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8066307:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806630e:	00 
 806630f:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8066316:	00 
 8066317:	89 54 24 10          	mov    %edx,0x10(%esp)
 806631b:	c7 44 24 04 09 02 00 	movl   $0x209,0x4(%esp)
 8066322:	00 
 8066323:	89 04 24             	mov    %eax,(%esp)
 8066326:	e8 85 c0 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 806632b:	90                   	nop
 806632c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08066330 <_ZN11__sanitizer13BlockingMutex4LockEv>:
 8066330:	57                   	push   %edi
 8066331:	b8 01 00 00 00       	mov    $0x1,%eax
 8066336:	56                   	push   %esi
 8066337:	53                   	push   %ebx
 8066338:	e8 b3 37 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806633d:	81 c3 c3 9c 04 00    	add    $0x49cc3,%ebx
 8066343:	83 ec 20             	sub    $0x20,%esp
 8066346:	8b 74 24 30          	mov    0x30(%esp),%esi
 806634a:	87 06                	xchg   %eax,(%esi)
 806634c:	bf 02 00 00 00       	mov    $0x2,%edi
 8066351:	85 c0                	test   %eax,%eax
 8066353:	75 3b                	jne    8066390 <_ZN11__sanitizer13BlockingMutex4LockEv+0x60>
 8066355:	eb 41                	jmp    8066398 <_ZN11__sanitizer13BlockingMutex4LockEv+0x68>
 8066357:	90                   	nop
 8066358:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806635f:	00 
 8066360:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8066367:	00 
 8066368:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806636f:	00 
 8066370:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)
 8066377:	00 
 8066378:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 806637f:	00 
 8066380:	89 74 24 04          	mov    %esi,0x4(%esp)
 8066384:	c7 04 24 f0 00 00 00 	movl   $0xf0,(%esp)
 806638b:	e8 50 35 fe ff       	call   80498e0 <syscall@plt>
 8066390:	89 f8                	mov    %edi,%eax
 8066392:	87 06                	xchg   %eax,(%esi)
 8066394:	85 c0                	test   %eax,%eax
 8066396:	75 c0                	jne    8066358 <_ZN11__sanitizer13BlockingMutex4LockEv+0x28>
 8066398:	83 c4 20             	add    $0x20,%esp
 806639b:	5b                   	pop    %ebx
 806639c:	5e                   	pop    %esi
 806639d:	5f                   	pop    %edi
 806639e:	c3                   	ret    
 806639f:	90                   	nop

080663a0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>:
 80663a0:	53                   	push   %ebx
 80663a1:	31 d2                	xor    %edx,%edx
 80663a3:	e8 48 37 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80663a8:	81 c3 58 9c 04 00    	add    $0x49c58,%ebx
 80663ae:	83 ec 28             	sub    $0x28,%esp
 80663b1:	8b 44 24 30          	mov    0x30(%esp),%eax
 80663b5:	87 10                	xchg   %edx,(%eax)
 80663b7:	85 d2                	test   %edx,%edx
 80663b9:	74 4a                	je     8066405 <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x65>
 80663bb:	83 fa 02             	cmp    $0x2,%edx
 80663be:	74 08                	je     80663c8 <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x28>
 80663c0:	83 c4 28             	add    $0x28,%esp
 80663c3:	5b                   	pop    %ebx
 80663c4:	c3                   	ret    
 80663c5:	8d 76 00             	lea    0x0(%esi),%esi
 80663c8:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80663cf:	00 
 80663d0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 80663d7:	00 
 80663d8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80663df:	00 
 80663e0:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 80663e7:	00 
 80663e8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 80663ef:	00 
 80663f0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80663f4:	c7 04 24 f0 00 00 00 	movl   $0xf0,(%esp)
 80663fb:	e8 e0 34 fe ff       	call   80498e0 <syscall@plt>
 8066400:	83 c4 28             	add    $0x28,%esp
 8066403:	5b                   	pop    %ebx
 8066404:	c3                   	ret    
 8066405:	8d 83 ba 74 fd ff    	lea    -0x28b46(%ebx),%eax
 806640b:	89 44 24 08          	mov    %eax,0x8(%esp)
 806640f:	8d 83 08 72 fd ff    	lea    -0x28df8(%ebx),%eax
 8066415:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 806641c:	00 
 806641d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8066424:	00 
 8066425:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806642c:	00 
 806642d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8066434:	00 
 8066435:	c7 44 24 04 17 02 00 	movl   $0x217,0x4(%esp)
 806643c:	00 
 806643d:	89 04 24             	mov    %eax,(%esp)
 8066440:	e8 6b bf ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8066445:	66 90                	xchg   %ax,%ax
 8066447:	66 90                	xchg   %ax,%ax
 8066449:	66 90                	xchg   %ax,%ax
 806644b:	66 90                	xchg   %ax,%ax
 806644d:	66 90                	xchg   %ax,%ax
 806644f:	90                   	nop

08066450 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv>:
 8066450:	55                   	push   %ebp
 8066451:	57                   	push   %edi
 8066452:	56                   	push   %esi
 8066453:	53                   	push   %ebx
 8066454:	83 ec 3c             	sub    $0x3c,%esp
 8066457:	8b 6c 24 58          	mov    0x58(%esp),%ebp
 806645b:	8b 54 24 50          	mov    0x50(%esp),%edx
 806645f:	e8 8c 36 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8066464:	81 c3 9c 9b 04 00    	add    $0x49b9c,%ebx
 806646a:	8b 45 08             	mov    0x8(%ebp),%eax
 806646d:	39 45 04             	cmp    %eax,0x4(%ebp)
 8066470:	89 54 24 24          	mov    %edx,0x24(%esp)
 8066474:	74 5e                	je     80664d4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x84>
 8066476:	8d 83 f7 68 fd ff    	lea    -0x29709(%ebx),%eax
 806647c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066480:	c7 04 24 00 02 00 00 	movl   $0x200,(%esp)
 8066487:	e8 54 cd ff ff       	call   80631e0 <_ZN11__sanitizer9MmapOrDieEmPKc>
 806648c:	8b 54 24 24          	mov    0x24(%esp),%edx
 8066490:	89 c7                	mov    %eax,%edi
 8066492:	c6 00 00             	movb   $0x0,(%eax)
 8066495:	8b 45 04             	mov    0x4(%ebp),%eax
 8066498:	85 c0                	test   %eax,%eax
 806649a:	74 44                	je     80664e0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x90>
 806649c:	8b 42 04             	mov    0x4(%edx),%eax
 806649f:	85 c0                	test   %eax,%eax
 80664a1:	74 21                	je     80664c4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x74>
 80664a3:	c7 44 24 08 00 02 00 	movl   $0x200,0x8(%esp)
 80664aa:	00 
 80664ab:	89 44 24 04          	mov    %eax,0x4(%esp)
 80664af:	89 3c 24             	mov    %edi,(%esp)
 80664b2:	89 54 24 24          	mov    %edx,0x24(%esp)
 80664b6:	e8 25 b7 ff ff       	call   8061be0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 80664bb:	8b 54 24 24          	mov    0x24(%esp),%edx
 80664bf:	80 3f 00             	cmpb   $0x0,(%edi)
 80664c2:	75 63                	jne    8066527 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0xd7>
 80664c4:	c7 44 24 04 00 02 00 	movl   $0x200,0x4(%esp)
 80664cb:	00 
 80664cc:	89 3c 24             	mov    %edi,(%esp)
 80664cf:	e8 dc c5 ff ff       	call   8062ab0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 80664d4:	83 c4 3c             	add    $0x3c,%esp
 80664d7:	31 c0                	xor    %eax,%eax
 80664d9:	5b                   	pop    %ebx
 80664da:	5e                   	pop    %esi
 80664db:	5f                   	pop    %edi
 80664dc:	5d                   	pop    %ebp
 80664dd:	c3                   	ret    
 80664de:	66 90                	xchg   %ax,%ax
 80664e0:	8d 83 f0 73 fd ff    	lea    -0x28c10(%ebx),%eax
 80664e6:	c7 44 24 08 00 02 00 	movl   $0x200,0x8(%esp)
 80664ed:	00 
 80664ee:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80664f2:	89 04 24             	mov    %eax,(%esp)
 80664f5:	e8 c6 ed ff ff       	call   80652c0 <_ZN11__sanitizer17internal_readlinkEPKcPcm>
 80664fa:	8b 54 24 24          	mov    0x24(%esp),%edx
 80664fe:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 8066505:	00 
 8066506:	83 f8 ff             	cmp    $0xffffffff,%eax
 8066509:	89 44 24 28          	mov    %eax,0x28(%esp)
 806650d:	0f 84 dd 00 00 00    	je     80665f0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x1a0>
 8066513:	3d ff 01 00 00       	cmp    $0x1ff,%eax
 8066518:	0f 87 92 00 00 00    	ja     80665b0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x160>
 806651e:	c6 04 07 00          	movb   $0x0,(%edi,%eax,1)
 8066522:	80 3f 00             	cmpb   $0x0,(%edi)
 8066525:	74 9d                	je     80664c4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x74>
 8066527:	6b 4d 04 3c          	imul   $0x3c,0x4(%ebp),%ecx
 806652b:	8b 02                	mov    (%edx),%eax
 806652d:	03 4d 00             	add    0x0(%ebp),%ecx
 8066530:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8066534:	89 54 24 24          	mov    %edx,0x24(%esp)
 8066538:	89 44 24 08          	mov    %eax,0x8(%esp)
 806653c:	89 0c 24             	mov    %ecx,(%esp)
 806653f:	89 4c 24 28          	mov    %ecx,0x28(%esp)
 8066543:	e8 f8 d1 ff ff       	call   8063740 <_ZN11__sanitizer12LoadedModuleC1EPKcm>
 8066548:	8b 54 24 24          	mov    0x24(%esp),%edx
 806654c:	83 45 04 01          	addl   $0x1,0x4(%ebp)
 8066550:	66 83 7a 0c 00       	cmpw   $0x0,0xc(%edx)
 8066555:	0f 84 69 ff ff ff    	je     80664c4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x74>
 806655b:	31 f6                	xor    %esi,%esi
 806655d:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 8066561:	eb 14                	jmp    8066577 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x127>
 8066563:	90                   	nop
 8066564:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8066568:	0f b7 42 0c          	movzwl 0xc(%edx),%eax
 806656c:	83 c6 01             	add    $0x1,%esi
 806656f:	39 c6                	cmp    %eax,%esi
 8066571:	0f 8d 4d ff ff ff    	jge    80664c4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x74>
 8066577:	89 f0                	mov    %esi,%eax
 8066579:	c1 e0 05             	shl    $0x5,%eax
 806657c:	03 42 08             	add    0x8(%edx),%eax
 806657f:	83 38 01             	cmpl   $0x1,(%eax)
 8066582:	75 e4                	jne    8066568 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x118>
 8066584:	8b 68 08             	mov    0x8(%eax),%ebp
 8066587:	03 2a                	add    (%edx),%ebp
 8066589:	89 54 24 28          	mov    %edx,0x28(%esp)
 806658d:	8b 50 14             	mov    0x14(%eax),%edx
 8066590:	89 0c 24             	mov    %ecx,(%esp)
 8066593:	89 6c 24 04          	mov    %ebp,0x4(%esp)
 8066597:	89 4c 24 24          	mov    %ecx,0x24(%esp)
 806659b:	01 ea                	add    %ebp,%edx
 806659d:	89 54 24 08          	mov    %edx,0x8(%esp)
 80665a1:	e8 da d1 ff ff       	call   8063780 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmm>
 80665a6:	8b 54 24 28          	mov    0x28(%esp),%edx
 80665aa:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 80665ae:	eb b8                	jmp    8066568 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infojPv+0x118>
 80665b0:	8b 44 24 28          	mov    0x28(%esp),%eax
 80665b4:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 80665b8:	c7 44 24 14 00 02 00 	movl   $0x200,0x14(%esp)
 80665bf:	00 
 80665c0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 80665c7:	00 
 80665c8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80665cc:	8d 83 78 75 fd ff    	lea    -0x28a88(%ebx),%eax
 80665d2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80665d6:	8d 83 2c 75 fd ff    	lea    -0x28ad4(%ebx),%eax
 80665dc:	89 54 24 10          	mov    %edx,0x10(%esp)
 80665e0:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)
 80665e7:	00 
 80665e8:	89 04 24             	mov    %eax,(%esp)
 80665eb:	e8 c0 bd ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80665f0:	8d 83 08 75 fd ff    	lea    -0x28af8(%ebx),%eax
 80665f6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80665fa:	8d 83 2c 75 fd ff    	lea    -0x28ad4(%ebx),%eax
 8066600:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%esp)
 8066607:	ff 
 8066608:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806660f:	00 
 8066610:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%esp)
 8066617:	ff 
 8066618:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806661f:	00 
 8066620:	c7 44 24 04 93 00 00 	movl   $0x93,0x4(%esp)
 8066627:	00 
 8066628:	89 04 24             	mov    %eax,(%esp)
 806662b:	e8 80 bd ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

08066630 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_>:
 8066630:	55                   	push   %ebp
 8066631:	57                   	push   %edi
 8066632:	56                   	push   %esi
 8066633:	53                   	push   %ebx
 8066634:	83 ec 6c             	sub    $0x6c,%esp
 8066637:	e8 b4 34 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806663c:	81 c3 c4 99 04 00    	add    $0x499c4,%ebx
 8066642:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 8066649:	89 04 24             	mov    %eax,(%esp)
 806664c:	e8 ff ec ff ff       	call   8065350 <_ZN11__sanitizer10FileExistsEPKc>
 8066651:	84 c0                	test   %al,%al
 8066653:	88 44 24 2b          	mov    %al,0x2b(%esp)
 8066657:	0f 84 03 01 00 00    	je     8066760 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x130>
 806665d:	8d 44 24 38          	lea    0x38(%esp),%eax
 8066661:	31 ed                	xor    %ebp,%ebp
 8066663:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8066667:	89 c7                	mov    %eax,%edi
 8066669:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 8066670:	00 
 8066671:	89 3c 24             	mov    %edi,(%esp)
 8066674:	89 fe                	mov    %edi,%esi
 8066676:	e8 85 32 fe ff       	call   8049900 <pipe@plt>
 806667b:	83 f8 ff             	cmp    $0xffffffff,%eax
 806667e:	0f 84 fc 00 00 00    	je     8066780 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x150>
 8066684:	83 3f 02             	cmpl   $0x2,(%edi)
 8066687:	7e 16                	jle    806669f <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x6f>
 8066689:	83 7f 04 02          	cmpl   $0x2,0x4(%edi)
 806668d:	7e 10                	jle    806669f <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x6f>
 806668f:	8b 54 24 24          	mov    0x24(%esp),%edx
 8066693:	85 d2                	test   %edx,%edx
 8066695:	0f 85 8e 01 00 00    	jne    8066829 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x1f9>
 806669b:	89 7c 24 24          	mov    %edi,0x24(%esp)
 806669f:	83 c5 01             	add    $0x1,%ebp
 80666a2:	83 c7 08             	add    $0x8,%edi
 80666a5:	83 fd 05             	cmp    $0x5,%ebp
 80666a8:	75 c7                	jne    8066671 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x41>
 80666aa:	31 f6                	xor    %esi,%esi
 80666ac:	8b 44 24 24          	mov    0x24(%esp),%eax
 80666b0:	85 c0                	test   %eax,%eax
 80666b2:	0f 84 b6 01 00 00    	je     806686e <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x23e>
 80666b8:	85 f6                	test   %esi,%esi
 80666ba:	0f 84 9c 02 00 00    	je     806695c <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x32c>
 80666c0:	e8 4b 32 fe ff       	call   8049910 <fork@plt>
 80666c5:	83 f8 ff             	cmp    $0xffffffff,%eax
 80666c8:	89 c5                	mov    %eax,%ebp
 80666ca:	0f 84 08 01 00 00    	je     80667d8 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x1a8>
 80666d0:	85 c0                	test   %eax,%eax
 80666d2:	0f 84 d6 01 00 00    	je     80668ae <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x27e>
 80666d8:	8b 06                	mov    (%esi),%eax
 80666da:	89 04 24             	mov    %eax,(%esp)
 80666dd:	e8 2e e9 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80666e2:	8b 7c 24 24          	mov    0x24(%esp),%edi
 80666e6:	8b 47 04             	mov    0x4(%edi),%eax
 80666e9:	89 04 24             	mov    %eax,(%esp)
 80666ec:	e8 1f e9 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80666f1:	8b 17                	mov    (%edi),%edx
 80666f3:	8b 84 24 84 00 00 00 	mov    0x84(%esp),%eax
 80666fa:	89 10                	mov    %edx,(%eax)
 80666fc:	8b 56 04             	mov    0x4(%esi),%edx
 80666ff:	8b 84 24 88 00 00 00 	mov    0x88(%esp),%eax
 8066706:	89 10                	mov    %edx,(%eax)
 8066708:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 806670f:	e8 fc cd ff ff       	call   8063510 <_ZN11__sanitizer14SleepForMillisEi>
 8066714:	8d 44 24 34          	lea    0x34(%esp),%eax
 8066718:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 806671f:	00 
 8066720:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066724:	89 2c 24             	mov    %ebp,(%esp)
 8066727:	e8 64 30 fe ff       	call   8049790 <waitpid@plt>
 806672c:	85 c0                	test   %eax,%eax
 806672e:	75 10                	jne    8066740 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x110>
 8066730:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
 8066735:	83 c4 6c             	add    $0x6c,%esp
 8066738:	5b                   	pop    %ebx
 8066739:	5e                   	pop    %esi
 806673a:	5f                   	pop    %edi
 806673b:	5d                   	pop    %ebp
 806673c:	c3                   	ret    
 806673d:	8d 76 00             	lea    0x0(%esi),%esi
 8066740:	8d 83 64 76 fd ff    	lea    -0x2899c(%ebx),%eax
 8066746:	89 04 24             	mov    %eax,(%esp)
 8066749:	e8 f2 af ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 806674e:	c6 44 24 2b 00       	movb   $0x0,0x2b(%esp)
 8066753:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
 8066758:	83 c4 6c             	add    $0x6c,%esp
 806675b:	5b                   	pop    %ebx
 806675c:	5e                   	pop    %esi
 806675d:	5f                   	pop    %edi
 806675e:	5d                   	pop    %ebp
 806675f:	c3                   	ret    
 8066760:	8d 83 a8 75 fd ff    	lea    -0x28a58(%ebx),%eax
 8066766:	89 04 24             	mov    %eax,(%esp)
 8066769:	e8 d2 af ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 806676e:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
 8066773:	83 c4 6c             	add    $0x6c,%esp
 8066776:	5b                   	pop    %ebx
 8066777:	5e                   	pop    %esi
 8066778:	5f                   	pop    %edi
 8066779:	5d                   	pop    %ebp
 806677a:	c3                   	ret    
 806677b:	90                   	nop
 806677c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8066780:	31 f6                	xor    %esi,%esi
 8066782:	85 ed                	test   %ebp,%ebp
 8066784:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 8066788:	74 1e                	je     80667a8 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x178>
 806678a:	8b 04 f7             	mov    (%edi,%esi,8),%eax
 806678d:	89 04 24             	mov    %eax,(%esp)
 8066790:	e8 7b e8 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8066795:	8b 44 f7 04          	mov    0x4(%edi,%esi,8),%eax
 8066799:	83 c6 01             	add    $0x1,%esi
 806679c:	89 04 24             	mov    %eax,(%esp)
 806679f:	e8 6c e8 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80667a4:	39 ee                	cmp    %ebp,%esi
 80667a6:	75 e2                	jne    806678a <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x15a>
 80667a8:	e8 23 31 fe ff       	call   80498d0 <__errno_location@plt>
 80667ad:	8b 00                	mov    (%eax),%eax
 80667af:	89 44 24 04          	mov    %eax,0x4(%esp)
 80667b3:	8d 83 d8 75 fd ff    	lea    -0x28a28(%ebx),%eax
 80667b9:	89 04 24             	mov    %eax,(%esp)
 80667bc:	e8 7f af ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 80667c1:	c6 44 24 2b 00       	movb   $0x0,0x2b(%esp)
 80667c6:	0f b6 44 24 2b       	movzbl 0x2b(%esp),%eax
 80667cb:	83 c4 6c             	add    $0x6c,%esp
 80667ce:	5b                   	pop    %ebx
 80667cf:	5e                   	pop    %esi
 80667d0:	5f                   	pop    %edi
 80667d1:	5d                   	pop    %ebp
 80667d2:	c3                   	ret    
 80667d3:	90                   	nop
 80667d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80667d8:	8b 7c 24 24          	mov    0x24(%esp),%edi
 80667dc:	8b 07                	mov    (%edi),%eax
 80667de:	89 04 24             	mov    %eax,(%esp)
 80667e1:	e8 2a e8 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80667e6:	8b 47 04             	mov    0x4(%edi),%eax
 80667e9:	89 04 24             	mov    %eax,(%esp)
 80667ec:	e8 1f e8 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80667f1:	8b 06                	mov    (%esi),%eax
 80667f3:	89 04 24             	mov    %eax,(%esp)
 80667f6:	e8 15 e8 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80667fb:	8b 46 04             	mov    0x4(%esi),%eax
 80667fe:	89 04 24             	mov    %eax,(%esp)
 8066801:	e8 0a e8 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8066806:	e8 c5 30 fe ff       	call   80498d0 <__errno_location@plt>
 806680b:	8b 00                	mov    (%eax),%eax
 806680d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066811:	8d 83 28 76 fd ff    	lea    -0x289d8(%ebx),%eax
 8066817:	89 04 24             	mov    %eax,(%esp)
 806681a:	e8 21 af ff ff       	call   8061740 <_ZN11__sanitizer6ReportEPKcz>
 806681f:	c6 44 24 2b 00       	movb   $0x0,0x2b(%esp)
 8066824:	e9 07 ff ff ff       	jmp    8066730 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x100>
 8066829:	85 ed                	test   %ebp,%ebp
 806682b:	0f 84 7b fe ff ff    	je     80666ac <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x7c>
 8066831:	31 c9                	xor    %ecx,%ecx
 8066833:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 8066837:	89 74 24 2c          	mov    %esi,0x2c(%esp)
 806683b:	89 ce                	mov    %ecx,%esi
 806683d:	8d 76 00             	lea    0x0(%esi),%esi
 8066840:	3b 7c 24 24          	cmp    0x24(%esp),%edi
 8066844:	74 15                	je     806685b <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x22b>
 8066846:	8b 07                	mov    (%edi),%eax
 8066848:	89 04 24             	mov    %eax,(%esp)
 806684b:	e8 c0 e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8066850:	8b 47 04             	mov    0x4(%edi),%eax
 8066853:	89 04 24             	mov    %eax,(%esp)
 8066856:	e8 b5 e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 806685b:	83 c6 01             	add    $0x1,%esi
 806685e:	83 c7 08             	add    $0x8,%edi
 8066861:	39 ee                	cmp    %ebp,%esi
 8066863:	75 db                	jne    8066840 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x210>
 8066865:	8b 74 24 2c          	mov    0x2c(%esp),%esi
 8066869:	e9 3e fe ff ff       	jmp    80666ac <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x7c>
 806686e:	8d 83 d3 74 fd ff    	lea    -0x28b2d(%ebx),%eax
 8066874:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066878:	8d 83 2c 75 fd ff    	lea    -0x28ad4(%ebx),%eax
 806687e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8066885:	00 
 8066886:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806688d:	00 
 806688e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8066895:	00 
 8066896:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806689d:	00 
 806689e:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)
 80668a5:	00 
 80668a6:	89 04 24             	mov    %eax,(%esp)
 80668a9:	e8 02 bb ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 80668ae:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80668b5:	e8 56 e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80668ba:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80668c1:	e8 4a e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80668c6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 80668cd:	00 
 80668ce:	8b 06                	mov    (%esi),%eax
 80668d0:	89 04 24             	mov    %eax,(%esp)
 80668d3:	e8 b8 e9 ff ff       	call   8065290 <_ZN11__sanitizer13internal_dup2Eii>
 80668d8:	8b 7c 24 24          	mov    0x24(%esp),%edi
 80668dc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80668e3:	00 
 80668e4:	8b 47 04             	mov    0x4(%edi),%eax
 80668e7:	89 04 24             	mov    %eax,(%esp)
 80668ea:	e8 a1 e9 ff ff       	call   8065290 <_ZN11__sanitizer13internal_dup2Eii>
 80668ef:	8b 06                	mov    (%esi),%eax
 80668f1:	89 04 24             	mov    %eax,(%esp)
 80668f4:	e8 17 e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 80668f9:	8b 46 04             	mov    0x4(%esi),%eax
 80668fc:	89 04 24             	mov    %eax,(%esp)
 80668ff:	e8 0c e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8066904:	8b 07                	mov    (%edi),%eax
 8066906:	89 04 24             	mov    %eax,(%esp)
 8066909:	e8 02 e7 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 806690e:	8b 47 04             	mov    0x4(%edi),%eax
 8066911:	89 04 24             	mov    %eax,(%esp)
 8066914:	e8 f7 e6 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8066919:	e8 f2 2e fe ff       	call   8049810 <getdtablesize@plt>
 806691e:	83 f8 02             	cmp    $0x2,%eax
 8066921:	89 c6                	mov    %eax,%esi
 8066923:	7e 10                	jle    8066935 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x305>
 8066925:	89 34 24             	mov    %esi,(%esp)
 8066928:	83 ee 01             	sub    $0x1,%esi
 806692b:	e8 e0 e6 ff ff       	call   8065010 <_ZN11__sanitizer14internal_closeEi>
 8066930:	83 fe 02             	cmp    $0x2,%esi
 8066933:	75 f0                	jne    8066925 <_ZN11__sanitizer25StartSymbolizerSubprocessEPKcPiS2_+0x2f5>
 8066935:	8b 84 24 80 00 00 00 	mov    0x80(%esp),%eax
 806693c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8066943:	00 
 8066944:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066948:	89 04 24             	mov    %eax,(%esp)
 806694b:	e8 a0 2f fe ff       	call   80498f0 <execl@plt>
 8066950:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8066957:	e8 c4 e9 ff ff       	call   8065320 <_ZN11__sanitizer14internal__exitEi>
 806695c:	8d 83 e3 74 fd ff    	lea    -0x28b1d(%ebx),%eax
 8066962:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066966:	8d 83 2c 75 fd ff    	lea    -0x28ad4(%ebx),%eax
 806696c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8066973:	00 
 8066974:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 806697b:	00 
 806697c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8066983:	00 
 8066984:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 806698b:	00 
 806698c:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)
 8066993:	00 
 8066994:	89 04 24             	mov    %eax,(%esp)
 8066997:	e8 14 ba ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 806699c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080669a0 <_ZN11__sanitizer16GetListOfModulesEPNS_12LoadedModuleEm>:
 80669a0:	53                   	push   %ebx
 80669a1:	83 ec 38             	sub    $0x38,%esp
 80669a4:	8b 44 24 40          	mov    0x40(%esp),%eax
 80669a8:	e8 43 31 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80669ad:	81 c3 53 96 04 00    	add    $0x49653,%ebx
 80669b3:	85 c0                	test   %eax,%eax
 80669b5:	74 33                	je     80669ea <_ZN11__sanitizer16GetListOfModulesEPNS_12LoadedModuleEm+0x4a>
 80669b7:	89 44 24 24          	mov    %eax,0x24(%esp)
 80669bb:	8b 44 24 44          	mov    0x44(%esp),%eax
 80669bf:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 80669c6:	00 
 80669c7:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 80669cb:	8d 44 24 24          	lea    0x24(%esp),%eax
 80669cf:	89 44 24 04          	mov    %eax,0x4(%esp)
 80669d3:	8d 83 50 64 fb ff    	lea    -0x49bb0(%ebx),%eax
 80669d9:	89 04 24             	mov    %eax,(%esp)
 80669dc:	e8 6f 2e fe ff       	call   8049850 <dl_iterate_phdr@plt>
 80669e1:	8b 44 24 28          	mov    0x28(%esp),%eax
 80669e5:	83 c4 38             	add    $0x38,%esp
 80669e8:	5b                   	pop    %ebx
 80669e9:	c3                   	ret    
 80669ea:	8d 83 f4 74 fd ff    	lea    -0x28b0c(%ebx),%eax
 80669f0:	89 44 24 08          	mov    %eax,0x8(%esp)
 80669f4:	8d 83 2c 75 fd ff    	lea    -0x28ad4(%ebx),%eax
 80669fa:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8066a01:	00 
 8066a02:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 8066a09:	00 
 8066a0a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8066a11:	00 
 8066a12:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8066a19:	00 
 8066a1a:	c7 44 24 04 ab 00 00 	movl   $0xab,0x4(%esp)
 8066a21:	00 
 8066a22:	89 04 24             	mov    %eax,(%esp)
 8066a25:	e8 86 b9 ff ff       	call   80623b0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8066a2a:	66 90                	xchg   %ax,%ax
 8066a2c:	66 90                	xchg   %ax,%ax
 8066a2e:	66 90                	xchg   %ax,%ax

08066a30 <_ZN14__interception22GetRealFunctionAddressEPKcPmmm>:
 8066a30:	53                   	push   %ebx
 8066a31:	83 ec 18             	sub    $0x18,%esp
 8066a34:	e8 b7 30 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8066a39:	81 c3 c7 95 04 00    	add    $0x495c7,%ebx
 8066a3f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8066a43:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
 8066a4a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066a4e:	e8 5d 2e fe ff       	call   80498b0 <dlsym@plt>
 8066a53:	8b 54 24 24          	mov    0x24(%esp),%edx
 8066a57:	89 02                	mov    %eax,(%edx)
 8066a59:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8066a5d:	39 44 24 28          	cmp    %eax,0x28(%esp)
 8066a61:	0f 94 c0             	sete   %al
 8066a64:	83 c4 18             	add    $0x18,%esp
 8066a67:	5b                   	pop    %ebx
 8066a68:	c3                   	ret    

08066a69 <LLVMFuzzerTestOneInput>:
 8066a69:	55                   	push   %ebp
 8066a6a:	89 e5                	mov    %esp,%ebp
 8066a6c:	57                   	push   %edi
 8066a6d:	56                   	push   %esi
 8066a6e:	53                   	push   %ebx
 8066a6f:	81 ec ac 01 00 00    	sub    $0x1ac,%esp
 8066a75:	8d 85 88 fe ff ff    	lea    -0x178(%ebp),%eax
 8066a7b:	c7 00 b3 8a b5 41    	movl   $0x41b58ab3,(%eax)
 8066a81:	c7 40 04 a0 76 08 08 	movl   $0x80876a0,0x4(%eax)
 8066a88:	c1 e8 03             	shr    $0x3,%eax
 8066a8b:	8d 98 00 00 00 20    	lea    0x20000000(%eax),%ebx
 8066a91:	c7 03 f1 f1 f1 f1    	movl   $0xf1f1f1f1,(%ebx)
 8066a97:	c7 43 04 04 f4 f4 f4 	movl   $0xf4f4f404,0x4(%ebx)
 8066a9e:	c7 43 08 f2 f2 f2 f2 	movl   $0xf2f2f2f2,0x8(%ebx)
 8066aa5:	c7 43 0c 04 f4 f4 f4 	movl   $0xf4f4f404,0xc(%ebx)
 8066aac:	c7 43 10 f2 f2 f2 f2 	movl   $0xf2f2f2f2,0x10(%ebx)
 8066ab3:	c7 43 14 04 f4 f4 f4 	movl   $0xf4f4f404,0x14(%ebx)
 8066aba:	c7 43 18 f2 f2 f2 f2 	movl   $0xf2f2f2f2,0x18(%ebx)
 8066ac1:	c7 43 1c 04 f4 f4 f4 	movl   $0xf4f4f404,0x1c(%ebx)
 8066ac8:	c7 43 20 f2 f2 f2 f2 	movl   $0xf2f2f2f2,0x20(%ebx)
 8066acf:	c7 43 24 04 f4 f4 f4 	movl   $0xf4f4f404,0x24(%ebx)
 8066ad6:	c7 43 28 f3 f3 f3 f3 	movl   $0xf3f3f3f3,0x28(%ebx)
 8066add:	c7 85 68 fe ff ff 00 	movl   $0x0,-0x198(%ebp)
 8066ae4:	00 00 00 
 8066ae7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8066aeb:	74 5b                	je     8066b48 <LLVMFuzzerTestOneInput+0xdf>
 8066aed:	8b 45 0c             	mov    0xc(%ebp),%eax
 8066af0:	8d 50 ff             	lea    -0x1(%eax),%edx
 8066af3:	8b 45 08             	mov    0x8(%ebp),%eax
 8066af6:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8066af9:	89 c8                	mov    %ecx,%eax
 8066afb:	89 c2                	mov    %eax,%edx
 8066afd:	c1 ea 03             	shr    $0x3,%edx
 8066b00:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8066b06:	0f b6 12             	movzbl (%edx),%edx
 8066b09:	88 95 67 fe ff ff    	mov    %dl,-0x199(%ebp)
 8066b0f:	80 bd 67 fe ff ff 00 	cmpb   $0x0,-0x199(%ebp)
 8066b16:	0f 95 c2             	setne  %dl
 8066b19:	89 d7                	mov    %edx,%edi
 8066b1b:	89 c6                	mov    %eax,%esi
 8066b1d:	83 e6 07             	and    $0x7,%esi
 8066b20:	89 f2                	mov    %esi,%edx
 8066b22:	3a 95 67 fe ff ff    	cmp    -0x199(%ebp),%dl
 8066b28:	0f 9d c2             	setge  %dl
 8066b2b:	21 fa                	and    %edi,%edx
 8066b2d:	84 d2                	test   %dl,%dl
 8066b2f:	74 08                	je     8066b39 <LLVMFuzzerTestOneInput+0xd0>
 8066b31:	89 04 24             	mov    %eax,(%esp)
 8066b34:	e8 77 1b ff ff       	call   80586b0 <__asan_report_load1>
 8066b39:	0f b6 01             	movzbl (%ecx),%eax
 8066b3c:	0f b6 c0             	movzbl %al,%eax
 8066b3f:	83 e0 07             	and    $0x7,%eax
 8066b42:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 8066b48:	8b 45 08             	mov    0x8(%ebp),%eax
 8066b4b:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 8066b51:	c7 85 78 fe ff ff 00 	movl   $0x400,-0x188(%ebp)
 8066b58:	04 00 00 
 8066b5b:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8066b61:	89 04 24             	mov    %eax,(%esp)
 8066b64:	e8 b7 5a ff ff       	call   805c620 <__interceptor_malloc>
 8066b69:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 8066b6f:	83 bd 7c fe ff ff 00 	cmpl   $0x0,-0x184(%ebp)
 8066b76:	75 0a                	jne    8066b82 <LLVMFuzzerTestOneInput+0x119>
 8066b78:	b8 00 00 00 00       	mov    $0x0,%eax
 8066b7d:	e9 79 01 00 00       	jmp    8066cfb <LLVMFuzzerTestOneInput+0x292>
 8066b82:	83 bd 68 fe ff ff 00 	cmpl   $0x0,-0x198(%ebp)
 8066b89:	75 07                	jne    8066b92 <LLVMFuzzerTestOneInput+0x129>
 8066b8b:	b8 00 00 00 04       	mov    $0x4000000,%eax
 8066b90:	eb 05                	jmp    8066b97 <LLVMFuzzerTestOneInput+0x12e>
 8066b92:	b8 00 00 00 01       	mov    $0x1000000,%eax
 8066b97:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 8066b9d:	c7 85 e8 fe ff ff 00 	movl   $0x0,-0x118(%ebp)
 8066ba4:	00 00 00 
 8066ba7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8066bae:	00 
 8066baf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8066bb6:	00 
 8066bb7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8066bbe:	e8 6c 05 00 00       	call   806712f <BrotliDecoderCreateInstance>
 8066bc3:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 8066bc9:	83 bd 68 fe ff ff 00 	cmpl   $0x0,-0x198(%ebp)
 8066bd0:	75 09                	jne    8066bdb <LLVMFuzzerTestOneInput+0x172>
 8066bd2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8066bd5:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 8066bdb:	c7 85 6c fe ff ff 00 	movl   $0x0,-0x194(%ebp)
 8066be2:	00 00 00 
 8066be5:	e9 e1 00 00 00       	jmp    8066ccb <LLVMFuzzerTestOneInput+0x262>
 8066bea:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 8066bf0:	8b 95 6c fe ff ff    	mov    -0x194(%ebp),%edx
 8066bf6:	01 d0                	add    %edx,%eax
 8066bf8:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 8066bfe:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8066c04:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8066c07:	76 09                	jbe    8066c12 <LLVMFuzzerTestOneInput+0x1a9>
 8066c09:	8b 45 0c             	mov    0xc(%ebp),%eax
 8066c0c:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 8066c12:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 8066c18:	8b 95 70 fe ff ff    	mov    -0x190(%ebp),%edx
 8066c1e:	29 c2                	sub    %eax,%edx
 8066c20:	89 d0                	mov    %edx,%eax
 8066c22:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 8066c28:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8066c2e:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 8066c34:	c7 85 74 fe ff ff 03 	movl   $0x3,-0x18c(%ebp)
 8066c3b:	00 00 00 
 8066c3e:	eb 66                	jmp    8066ca6 <LLVMFuzzerTestOneInput+0x23d>
 8066c40:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8066c46:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8066c4c:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8066c52:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8066c55:	8d 85 e8 fe ff ff    	lea    -0x118(%ebp),%eax
 8066c5b:	89 44 24 14          	mov    %eax,0x14(%esp)
 8066c5f:	8d 45 a8             	lea    -0x58(%ebp),%eax
 8066c62:	89 44 24 10          	mov    %eax,0x10(%esp)
 8066c66:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 8066c6c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8066c70:	8d 85 a8 fe ff ff    	lea    -0x158(%ebp),%eax
 8066c76:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066c7a:	8d 85 28 ff ff ff    	lea    -0xd8(%ebp),%eax
 8066c80:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066c84:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8066c8a:	89 04 24             	mov    %eax,(%esp)
 8066c8d:	e8 cf 7a 01 00       	call   807e761 <BrotliDecoderDecompressStream>
 8066c92:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 8066c98:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8066c9e:	3b 85 80 fe ff ff    	cmp    -0x180(%ebp),%eax
 8066ca4:	77 09                	ja     8066caf <LLVMFuzzerTestOneInput+0x246>
 8066ca6:	83 bd 74 fe ff ff 03 	cmpl   $0x3,-0x18c(%ebp)
 8066cad:	74 91                	je     8066c40 <LLVMFuzzerTestOneInput+0x1d7>
 8066caf:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8066cb5:	3b 85 80 fe ff ff    	cmp    -0x180(%ebp),%eax
 8066cbb:	76 02                	jbe    8066cbf <LLVMFuzzerTestOneInput+0x256>
 8066cbd:	eb 1b                	jmp    8066cda <LLVMFuzzerTestOneInput+0x271>
 8066cbf:	83 bd 74 fe ff ff 02 	cmpl   $0x2,-0x18c(%ebp)
 8066cc6:	74 03                	je     8066ccb <LLVMFuzzerTestOneInput+0x262>
 8066cc8:	90                   	nop
 8066cc9:	eb 0f                	jmp    8066cda <LLVMFuzzerTestOneInput+0x271>
 8066ccb:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 8066cd1:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8066cd4:	0f 82 10 ff ff ff    	jb     8066bea <LLVMFuzzerTestOneInput+0x181>
 8066cda:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8066ce0:	89 04 24             	mov    %eax,(%esp)
 8066ce3:	e8 17 05 00 00       	call   80671ff <BrotliDecoderDestroyInstance>
 8066ce8:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8066cee:	89 04 24             	mov    %eax,(%esp)
 8066cf1:	e8 4a 58 ff ff       	call   805c540 <__interceptor_free>
 8066cf6:	b8 00 00 00 00       	mov    $0x0,%eax
 8066cfb:	89 c6                	mov    %eax,%esi
 8066cfd:	89 da                	mov    %ebx,%edx
 8066cff:	bb 2c 00 00 00       	mov    $0x2c,%ebx
 8066d04:	b8 00 00 00 00       	mov    $0x0,%eax
 8066d09:	89 d1                	mov    %edx,%ecx
 8066d0b:	83 e1 01             	and    $0x1,%ecx
 8066d0e:	85 c9                	test   %ecx,%ecx
 8066d10:	74 08                	je     8066d1a <LLVMFuzzerTestOneInput+0x2b1>
 8066d12:	88 02                	mov    %al,(%edx)
 8066d14:	83 c2 01             	add    $0x1,%edx
 8066d17:	83 eb 01             	sub    $0x1,%ebx
 8066d1a:	89 d1                	mov    %edx,%ecx
 8066d1c:	83 e1 02             	and    $0x2,%ecx
 8066d1f:	85 c9                	test   %ecx,%ecx
 8066d21:	74 09                	je     8066d2c <LLVMFuzzerTestOneInput+0x2c3>
 8066d23:	66 89 02             	mov    %ax,(%edx)
 8066d26:	83 c2 02             	add    $0x2,%edx
 8066d29:	83 eb 02             	sub    $0x2,%ebx
 8066d2c:	89 d9                	mov    %ebx,%ecx
 8066d2e:	c1 e9 02             	shr    $0x2,%ecx
 8066d31:	89 d7                	mov    %edx,%edi
 8066d33:	f3 ab                	rep stos %eax,%es:(%edi)
 8066d35:	89 fa                	mov    %edi,%edx
 8066d37:	89 d9                	mov    %ebx,%ecx
 8066d39:	83 e1 02             	and    $0x2,%ecx
 8066d3c:	85 c9                	test   %ecx,%ecx
 8066d3e:	74 06                	je     8066d46 <LLVMFuzzerTestOneInput+0x2dd>
 8066d40:	66 89 02             	mov    %ax,(%edx)
 8066d43:	83 c2 02             	add    $0x2,%edx
 8066d46:	83 e3 01             	and    $0x1,%ebx
 8066d49:	89 d9                	mov    %ebx,%ecx
 8066d4b:	85 c9                	test   %ecx,%ecx
 8066d4d:	74 05                	je     8066d54 <LLVMFuzzerTestOneInput+0x2eb>
 8066d4f:	88 02                	mov    %al,(%edx)
 8066d51:	83 c2 01             	add    $0x1,%edx
 8066d54:	89 f0                	mov    %esi,%eax
 8066d56:	81 c4 ac 01 00 00    	add    $0x1ac,%esp
 8066d5c:	5b                   	pop    %ebx
 8066d5d:	5e                   	pop    %esi
 8066d5e:	5f                   	pop    %edi
 8066d5f:	5d                   	pop    %ebp
 8066d60:	c3                   	ret    

08066d61 <_GLOBAL__sub_I_00099_0_LLVMFuzzerTestOneInput>:
 8066d61:	55                   	push   %ebp
 8066d62:	89 e5                	mov    %esp,%ebp
 8066d64:	83 ec 08             	sub    $0x8,%esp
 8066d67:	e8 54 21 ff ff       	call   8058ec0 <__asan_init_v1>
 8066d6c:	c9                   	leave  
 8066d6d:	c3                   	ret    

08066d6e <main>:
 8066d6e:	55                   	push   %ebp
 8066d6f:	89 e5                	mov    %esp,%ebp
 8066d71:	57                   	push   %edi
 8066d72:	56                   	push   %esi
 8066d73:	53                   	push   %ebx
 8066d74:	83 e4 f0             	and    $0xfffffff0,%esp
 8066d77:	83 ec 40             	sub    $0x40,%esp
 8066d7a:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
 8066d7e:	74 36                	je     8066db6 <main+0x48>
 8066d80:	a1 80 03 0b 08       	mov    0x80b0380,%eax
 8066d85:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8066d89:	c7 44 24 08 22 00 00 	movl   $0x22,0x8(%esp)
 8066d90:	00 
 8066d91:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8066d98:	00 
 8066d99:	c7 04 24 20 77 08 08 	movl   $0x8087720,(%esp)
 8066da0:	e8 db 29 fe ff       	call   8049780 <fwrite@plt>
 8066da5:	e8 e6 1c ff ff       	call   8058a90 <__asan_handle_no_return>
 8066daa:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8066db1:	e8 8a 2a fe ff       	call   8049840 <exit@plt>
 8066db6:	8b 45 0c             	mov    0xc(%ebp),%eax
 8066db9:	8d 48 04             	lea    0x4(%eax),%ecx
 8066dbc:	89 c8                	mov    %ecx,%eax
 8066dbe:	89 c2                	mov    %eax,%edx
 8066dc0:	c1 ea 03             	shr    $0x3,%edx
 8066dc3:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8066dc9:	0f b6 12             	movzbl (%edx),%edx
 8066dcc:	84 d2                	test   %dl,%dl
 8066dce:	0f 95 c3             	setne  %bl
 8066dd1:	89 de                	mov    %ebx,%esi
 8066dd3:	89 c3                	mov    %eax,%ebx
 8066dd5:	83 e3 07             	and    $0x7,%ebx
 8066dd8:	83 c3 03             	add    $0x3,%ebx
 8066ddb:	38 d3                	cmp    %dl,%bl
 8066ddd:	0f 9d c2             	setge  %dl
 8066de0:	21 f2                	and    %esi,%edx
 8066de2:	84 d2                	test   %dl,%dl
 8066de4:	74 08                	je     8066dee <main+0x80>
 8066de6:	89 04 24             	mov    %eax,(%esp)
 8066de9:	e8 62 19 ff ff       	call   8058750 <__asan_report_load4>
 8066dee:	8b 01                	mov    (%ecx),%eax
 8066df0:	c7 44 24 04 80 77 08 	movl   $0x8087780,0x4(%esp)
 8066df7:	08 
 8066df8:	89 04 24             	mov    %eax,(%esp)
 8066dfb:	e8 c0 2a fe ff       	call   80498c0 <fopen@plt>
 8066e00:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8066e04:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
 8066e09:	75 36                	jne    8066e41 <main+0xd3>
 8066e0b:	a1 80 03 0b 08       	mov    0x80b0380,%eax
 8066e10:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8066e14:	c7 44 24 08 1a 00 00 	movl   $0x1a,0x8(%esp)
 8066e1b:	00 
 8066e1c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8066e23:	00 
 8066e24:	c7 04 24 c0 77 08 08 	movl   $0x80877c0,(%esp)
 8066e2b:	e8 50 29 fe ff       	call   8049780 <fwrite@plt>
 8066e30:	e8 5b 1c ff ff       	call   8058a90 <__asan_handle_no_return>
 8066e35:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8066e3c:	e8 ff 29 fe ff       	call   8049840 <exit@plt>
 8066e41:	c7 44 24 30 00 00 10 	movl   $0x100000,0x30(%esp)
 8066e48:	00 
 8066e49:	8b 44 24 30          	mov    0x30(%esp),%eax
 8066e4d:	89 04 24             	mov    %eax,(%esp)
 8066e50:	e8 cb 57 ff ff       	call   805c620 <__interceptor_malloc>
 8066e55:	89 44 24 34          	mov    %eax,0x34(%esp)
 8066e59:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8066e5d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8066e61:	8b 44 24 30          	mov    0x30(%esp),%eax
 8066e65:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066e69:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8066e70:	00 
 8066e71:	8b 44 24 34          	mov    0x34(%esp),%eax
 8066e75:	89 04 24             	mov    %eax,(%esp)
 8066e78:	e8 33 29 fe ff       	call   80497b0 <fread@plt>
 8066e7d:	89 44 24 38          	mov    %eax,0x38(%esp)
 8066e81:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8066e85:	89 04 24             	mov    %eax,(%esp)
 8066e88:	e8 53 28 fe ff       	call   80496e0 <ferror@plt>
 8066e8d:	85 c0                	test   %eax,%eax
 8066e8f:	74 42                	je     8066ed3 <main+0x165>
 8066e91:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8066e95:	89 04 24             	mov    %eax,(%esp)
 8066e98:	e8 53 28 fe ff       	call   80496f0 <fclose@plt>
 8066e9d:	a1 80 03 0b 08       	mov    0x80b0380,%eax
 8066ea2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8066ea6:	c7 44 24 08 17 00 00 	movl   $0x17,0x8(%esp)
 8066ead:	00 
 8066eae:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8066eb5:	00 
 8066eb6:	c7 04 24 00 78 08 08 	movl   $0x8087800,(%esp)
 8066ebd:	e8 be 28 fe ff       	call   8049780 <fwrite@plt>
 8066ec2:	e8 c9 1b ff ff       	call   8058a90 <__asan_handle_no_return>
 8066ec7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8066ece:	e8 6d 29 fe ff       	call   8049840 <exit@plt>
 8066ed3:	8b 44 24 38          	mov    0x38(%esp),%eax
 8066ed7:	89 04 24             	mov    %eax,(%esp)
 8066eda:	e8 41 57 ff ff       	call   805c620 <__interceptor_malloc>
 8066edf:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 8066ee3:	83 7c 24 38 00       	cmpl   $0x0,0x38(%esp)
 8066ee8:	74 72                	je     8066f5c <main+0x1ee>
 8066eea:	8b 44 24 34          	mov    0x34(%esp),%eax
 8066eee:	89 c2                	mov    %eax,%edx
 8066ef0:	c1 ea 03             	shr    $0x3,%edx
 8066ef3:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8066ef9:	0f b6 12             	movzbl (%edx),%edx
 8066efc:	84 d2                	test   %dl,%dl
 8066efe:	0f 95 c3             	setne  %bl
 8066f01:	89 c1                	mov    %eax,%ecx
 8066f03:	83 e1 07             	and    $0x7,%ecx
 8066f06:	38 d1                	cmp    %dl,%cl
 8066f08:	0f 9d c2             	setge  %dl
 8066f0b:	21 d3                	and    %edx,%ebx
 8066f0d:	88 5c 24 1f          	mov    %bl,0x1f(%esp)
 8066f11:	8b 54 24 38          	mov    0x38(%esp),%edx
 8066f15:	8d 4a ff             	lea    -0x1(%edx),%ecx
 8066f18:	8b 54 24 34          	mov    0x34(%esp),%edx
 8066f1c:	01 ca                	add    %ecx,%edx
 8066f1e:	89 d1                	mov    %edx,%ecx
 8066f20:	c1 e9 03             	shr    $0x3,%ecx
 8066f23:	81 c1 00 00 00 20    	add    $0x20000000,%ecx
 8066f29:	0f b6 09             	movzbl (%ecx),%ecx
 8066f2c:	84 c9                	test   %cl,%cl
 8066f2e:	0f 95 c3             	setne  %bl
 8066f31:	89 df                	mov    %ebx,%edi
 8066f33:	89 d6                	mov    %edx,%esi
 8066f35:	83 e6 07             	and    $0x7,%esi
 8066f38:	89 f3                	mov    %esi,%ebx
 8066f3a:	38 cb                	cmp    %cl,%bl
 8066f3c:	0f 9d c1             	setge  %cl
 8066f3f:	21 f9                	and    %edi,%ecx
 8066f41:	84 c9                	test   %cl,%cl
 8066f43:	74 08                	je     8066f4d <main+0x1df>
 8066f45:	89 14 24             	mov    %edx,(%esp)
 8066f48:	e8 63 17 ff ff       	call   80586b0 <__asan_report_load1>
 8066f4d:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 8066f52:	74 08                	je     8066f5c <main+0x1ee>
 8066f54:	89 04 24             	mov    %eax,(%esp)
 8066f57:	e8 54 17 ff ff       	call   80586b0 <__asan_report_load1>
 8066f5c:	83 7c 24 38 00       	cmpl   $0x0,0x38(%esp)
 8066f61:	74 72                	je     8066fd5 <main+0x267>
 8066f63:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8066f67:	89 c2                	mov    %eax,%edx
 8066f69:	c1 ea 03             	shr    $0x3,%edx
 8066f6c:	81 c2 00 00 00 20    	add    $0x20000000,%edx
 8066f72:	0f b6 12             	movzbl (%edx),%edx
 8066f75:	84 d2                	test   %dl,%dl
 8066f77:	0f 95 c3             	setne  %bl
 8066f7a:	89 c1                	mov    %eax,%ecx
 8066f7c:	83 e1 07             	and    $0x7,%ecx
 8066f7f:	38 d1                	cmp    %dl,%cl
 8066f81:	0f 9d c2             	setge  %dl
 8066f84:	21 d3                	and    %edx,%ebx
 8066f86:	88 5c 24 1f          	mov    %bl,0x1f(%esp)
 8066f8a:	8b 54 24 38          	mov    0x38(%esp),%edx
 8066f8e:	8d 4a ff             	lea    -0x1(%edx),%ecx
 8066f91:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 8066f95:	01 ca                	add    %ecx,%edx
 8066f97:	89 d1                	mov    %edx,%ecx
 8066f99:	c1 e9 03             	shr    $0x3,%ecx
 8066f9c:	81 c1 00 00 00 20    	add    $0x20000000,%ecx
 8066fa2:	0f b6 09             	movzbl (%ecx),%ecx
 8066fa5:	84 c9                	test   %cl,%cl
 8066fa7:	0f 95 c3             	setne  %bl
 8066faa:	89 df                	mov    %ebx,%edi
 8066fac:	89 d6                	mov    %edx,%esi
 8066fae:	83 e6 07             	and    $0x7,%esi
 8066fb1:	89 f3                	mov    %esi,%ebx
 8066fb3:	38 cb                	cmp    %cl,%bl
 8066fb5:	0f 9d c1             	setge  %cl
 8066fb8:	21 f9                	and    %edi,%ecx
 8066fba:	84 c9                	test   %cl,%cl
 8066fbc:	74 08                	je     8066fc6 <main+0x258>
 8066fbe:	89 14 24             	mov    %edx,(%esp)
 8066fc1:	e8 7a 18 ff ff       	call   8058840 <__asan_report_store1>
 8066fc6:	80 7c 24 1f 00       	cmpb   $0x0,0x1f(%esp)
 8066fcb:	74 08                	je     8066fd5 <main+0x267>
 8066fcd:	89 04 24             	mov    %eax,(%esp)
 8066fd0:	e8 6b 18 ff ff       	call   8058840 <__asan_report_store1>
 8066fd5:	8b 44 24 38          	mov    0x38(%esp),%eax
 8066fd9:	89 44 24 08          	mov    %eax,0x8(%esp)
 8066fdd:	8b 44 24 34          	mov    0x34(%esp),%eax
 8066fe1:	89 44 24 04          	mov    %eax,0x4(%esp)
 8066fe5:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8066fe9:	89 04 24             	mov    %eax,(%esp)
 8066fec:	e8 bf cb fe ff       	call   8053bb0 <__interceptor_memcpy>
 8066ff1:	8b 44 24 34          	mov    0x34(%esp),%eax
 8066ff5:	89 04 24             	mov    %eax,(%esp)
 8066ff8:	e8 43 55 ff ff       	call   805c540 <__interceptor_free>
 8066ffd:	8b 44 24 38          	mov    0x38(%esp),%eax
 8067001:	89 44 24 04          	mov    %eax,0x4(%esp)
 8067005:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8067009:	89 04 24             	mov    %eax,(%esp)
 806700c:	e8 58 fa ff ff       	call   8066a69 <LLVMFuzzerTestOneInput>
 8067011:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8067015:	89 04 24             	mov    %eax,(%esp)
 8067018:	e8 23 55 ff ff       	call   805c540 <__interceptor_free>
 806701d:	e8 6e 1a ff ff       	call   8058a90 <__asan_handle_no_return>
 8067022:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8067029:	e8 12 28 fe ff       	call   8049840 <exit@plt>

0806702e <_GLOBAL__sub_D_00099_0_main>:
 806702e:	55                   	push   %ebp
 806702f:	89 e5                	mov    %esp,%ebp
 8067031:	83 ec 18             	sub    $0x18,%esp
 8067034:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 806703b:	00 
 806703c:	c7 04 24 20 01 0b 08 	movl   $0x80b0120,(%esp)
 8067043:	e8 88 4b ff ff       	call   805bbd0 <__asan_unregister_globals>
 8067048:	c9                   	leave  
 8067049:	c3                   	ret    

0806704a <_GLOBAL__sub_I_00099_1_main>:
 806704a:	55                   	push   %ebp
 806704b:	89 e5                	mov    %esp,%ebp
 806704d:	83 ec 18             	sub    $0x18,%esp
 8067050:	e8 6b 1e ff ff       	call   8058ec0 <__asan_init_v1>
 8067055:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 806705c:	00 
 806705d:	c7 04 24 20 01 0b 08 	movl   $0x80b0120,(%esp)
 8067064:	e8 87 48 ff ff       	call   805b8f0 <__asan_register_globals>
 8067069:	c9                   	leave  
 806706a:	c3                   	ret    

0806706b <BrotliDefaultAllocFunc>:
 806706b:	55                   	push   %ebp
 806706c:	89 e5                	mov    %esp,%ebp
 806706e:	53                   	push   %ebx
 806706f:	83 ec 14             	sub    $0x14,%esp
 8067072:	e8 79 2a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8067077:	81 c3 89 8f 04 00    	add    $0x48f89,%ebx
 806707d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8067080:	89 04 24             	mov    %eax,(%esp)
 8067083:	e8 98 55 ff ff       	call   805c620 <__interceptor_malloc>
 8067088:	83 c4 14             	add    $0x14,%esp
 806708b:	5b                   	pop    %ebx
 806708c:	5d                   	pop    %ebp
 806708d:	c3                   	ret    

0806708e <BrotliDefaultFreeFunc>:
 806708e:	55                   	push   %ebp
 806708f:	89 e5                	mov    %esp,%ebp
 8067091:	53                   	push   %ebx
 8067092:	83 ec 14             	sub    $0x14,%esp
 8067095:	e8 56 2a fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806709a:	81 c3 66 8f 04 00    	add    $0x48f66,%ebx
 80670a0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80670a3:	89 04 24             	mov    %eax,(%esp)
 80670a6:	e8 95 54 ff ff       	call   805c540 <__interceptor_free>
 80670ab:	83 c4 14             	add    $0x14,%esp
 80670ae:	5b                   	pop    %ebx
 80670af:	5d                   	pop    %ebp
 80670b0:	c3                   	ret    

080670b1 <BrotliDecoderSetParameter>:
 80670b1:	55                   	push   %ebp
 80670b2:	89 e5                	mov    %esp,%ebp
 80670b4:	8b 45 08             	mov    0x8(%ebp),%eax
 80670b7:	8b 00                	mov    (%eax),%eax
 80670b9:	85 c0                	test   %eax,%eax
 80670bb:	74 07                	je     80670c4 <BrotliDecoderSetParameter+0x13>
 80670bd:	b8 00 00 00 00       	mov    $0x0,%eax
 80670c2:	eb 69                	jmp    806712d <BrotliDecoderSetParameter+0x7c>
 80670c4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80670c7:	85 c0                	test   %eax,%eax
 80670c9:	74 07                	je     80670d2 <BrotliDecoderSetParameter+0x21>
 80670cb:	83 f8 01             	cmp    $0x1,%eax
 80670ce:	74 2d                	je     80670fd <BrotliDecoderSetParameter+0x4c>
 80670d0:	eb 56                	jmp    8067128 <BrotliDecoderSetParameter+0x77>
 80670d2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 80670d6:	0f 94 c2             	sete   %dl
 80670d9:	8b 45 08             	mov    0x8(%ebp),%eax
 80670dc:	83 e2 01             	and    $0x1,%edx
 80670df:	89 d1                	mov    %edx,%ecx
 80670e1:	c1 e1 04             	shl    $0x4,%ecx
 80670e4:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 80670eb:	83 e2 ef             	and    $0xffffffef,%edx
 80670ee:	09 ca                	or     %ecx,%edx
 80670f0:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 80670f6:	b8 01 00 00 00       	mov    $0x1,%eax
 80670fb:	eb 30                	jmp    806712d <BrotliDecoderSetParameter+0x7c>
 80670fd:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8067101:	0f 95 c2             	setne  %dl
 8067104:	8b 45 08             	mov    0x8(%ebp),%eax
 8067107:	83 e2 01             	and    $0x1,%edx
 806710a:	89 d1                	mov    %edx,%ecx
 806710c:	c1 e1 05             	shl    $0x5,%ecx
 806710f:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8067116:	83 e2 df             	and    $0xffffffdf,%edx
 8067119:	09 ca                	or     %ecx,%edx
 806711b:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8067121:	b8 01 00 00 00       	mov    $0x1,%eax
 8067126:	eb 05                	jmp    806712d <BrotliDecoderSetParameter+0x7c>
 8067128:	b8 00 00 00 00       	mov    $0x0,%eax
 806712d:	5d                   	pop    %ebp
 806712e:	c3                   	ret    

0806712f <BrotliDecoderCreateInstance>:
 806712f:	55                   	push   %ebp
 8067130:	89 e5                	mov    %esp,%ebp
 8067132:	53                   	push   %ebx
 8067133:	83 ec 24             	sub    $0x24,%esp
 8067136:	e8 b5 29 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806713b:	81 c3 c5 8e 04 00    	add    $0x48ec5,%ebx
 8067141:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8067148:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 806714c:	75 17                	jne    8067165 <BrotliDecoderCreateInstance+0x36>
 806714e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8067152:	75 11                	jne    8067165 <BrotliDecoderCreateInstance+0x36>
 8067154:	c7 04 24 94 13 00 00 	movl   $0x1394,(%esp)
 806715b:	e8 c0 54 ff ff       	call   805c620 <__interceptor_malloc>
 8067160:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8067163:	eb 22                	jmp    8067187 <BrotliDecoderCreateInstance+0x58>
 8067165:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8067169:	74 1c                	je     8067187 <BrotliDecoderCreateInstance+0x58>
 806716b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 806716f:	74 16                	je     8067187 <BrotliDecoderCreateInstance+0x58>
 8067171:	c7 44 24 04 94 13 00 	movl   $0x1394,0x4(%esp)
 8067178:	00 
 8067179:	8b 45 10             	mov    0x10(%ebp),%eax
 806717c:	89 04 24             	mov    %eax,(%esp)
 806717f:	8b 45 08             	mov    0x8(%ebp),%eax
 8067182:	ff d0                	call   *%eax
 8067184:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8067187:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 806718b:	75 07                	jne    8067194 <BrotliDecoderCreateInstance+0x65>
 806718d:	b8 00 00 00 00       	mov    $0x0,%eax
 8067192:	eb 65                	jmp    80671f9 <BrotliDecoderCreateInstance+0xca>
 8067194:	8b 45 10             	mov    0x10(%ebp),%eax
 8067197:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806719b:	8b 45 0c             	mov    0xc(%ebp),%eax
 806719e:	89 44 24 08          	mov    %eax,0x8(%esp)
 80671a2:	8b 45 08             	mov    0x8(%ebp),%eax
 80671a5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80671a9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80671ac:	89 04 24             	mov    %eax,(%esp)
 80671af:	e8 c6 a5 01 00       	call   808177a <BrotliDecoderStateInit>
 80671b4:	85 c0                	test   %eax,%eax
 80671b6:	75 3e                	jne    80671f6 <BrotliDecoderCreateInstance+0xc7>
 80671b8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80671bc:	75 13                	jne    80671d1 <BrotliDecoderCreateInstance+0xa2>
 80671be:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80671c2:	75 0d                	jne    80671d1 <BrotliDecoderCreateInstance+0xa2>
 80671c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80671c7:	89 04 24             	mov    %eax,(%esp)
 80671ca:	e8 71 53 ff ff       	call   805c540 <__interceptor_free>
 80671cf:	eb 1e                	jmp    80671ef <BrotliDecoderCreateInstance+0xc0>
 80671d1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 80671d5:	74 18                	je     80671ef <BrotliDecoderCreateInstance+0xc0>
 80671d7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80671db:	74 12                	je     80671ef <BrotliDecoderCreateInstance+0xc0>
 80671dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80671e0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80671e4:	8b 45 10             	mov    0x10(%ebp),%eax
 80671e7:	89 04 24             	mov    %eax,(%esp)
 80671ea:	8b 45 0c             	mov    0xc(%ebp),%eax
 80671ed:	ff d0                	call   *%eax
 80671ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80671f4:	eb 03                	jmp    80671f9 <BrotliDecoderCreateInstance+0xca>
 80671f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80671f9:	83 c4 24             	add    $0x24,%esp
 80671fc:	5b                   	pop    %ebx
 80671fd:	5d                   	pop    %ebp
 80671fe:	c3                   	ret    

080671ff <BrotliDecoderDestroyInstance>:
 80671ff:	55                   	push   %ebp
 8067200:	89 e5                	mov    %esp,%ebp
 8067202:	83 ec 28             	sub    $0x28,%esp
 8067205:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8067209:	75 02                	jne    806720d <BrotliDecoderDestroyInstance+0xe>
 806720b:	eb 2f                	jmp    806723c <BrotliDecoderDestroyInstance+0x3d>
 806720d:	8b 45 08             	mov    0x8(%ebp),%eax
 8067210:	8b 40 1c             	mov    0x1c(%eax),%eax
 8067213:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8067216:	8b 45 08             	mov    0x8(%ebp),%eax
 8067219:	8b 40 20             	mov    0x20(%eax),%eax
 806721c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806721f:	8b 45 08             	mov    0x8(%ebp),%eax
 8067222:	89 04 24             	mov    %eax,(%esp)
 8067225:	e8 5b aa 01 00       	call   8081c85 <BrotliDecoderStateCleanup>
 806722a:	8b 45 08             	mov    0x8(%ebp),%eax
 806722d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8067231:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8067234:	89 04 24             	mov    %eax,(%esp)
 8067237:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806723a:	ff d0                	call   *%eax
 806723c:	c9                   	leave  
 806723d:	c3                   	ret    

0806723e <SaveErrorCode>:
 806723e:	55                   	push   %ebp
 806723f:	89 e5                	mov    %esp,%ebp
 8067241:	8b 45 08             	mov    0x8(%ebp),%eax
 8067244:	8b 55 0c             	mov    0xc(%ebp),%edx
 8067247:	89 50 58             	mov    %edx,0x58(%eax)
 806724a:	8b 45 0c             	mov    0xc(%ebp),%eax
 806724d:	83 f8 02             	cmp    $0x2,%eax
 8067250:	74 11                	je     8067263 <SaveErrorCode+0x25>
 8067252:	83 f8 03             	cmp    $0x3,%eax
 8067255:	74 13                	je     806726a <SaveErrorCode+0x2c>
 8067257:	83 f8 01             	cmp    $0x1,%eax
 806725a:	75 15                	jne    8067271 <SaveErrorCode+0x33>
 806725c:	b8 01 00 00 00       	mov    $0x1,%eax
 8067261:	eb 13                	jmp    8067276 <SaveErrorCode+0x38>
 8067263:	b8 02 00 00 00       	mov    $0x2,%eax
 8067268:	eb 0c                	jmp    8067276 <SaveErrorCode+0x38>
 806726a:	b8 03 00 00 00       	mov    $0x3,%eax
 806726f:	eb 05                	jmp    8067276 <SaveErrorCode+0x38>
 8067271:	b8 00 00 00 00       	mov    $0x0,%eax
 8067276:	5d                   	pop    %ebp
 8067277:	c3                   	ret    

08067278 <DecodeWindowBits>:
 8067278:	55                   	push   %ebp
 8067279:	89 e5                	mov    %esp,%ebp
 806727b:	53                   	push   %ebx
 806727c:	83 c4 80             	add    $0xffffff80,%esp
 806727f:	e8 6c 28 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8067284:	81 c3 7c 8d 04 00    	add    $0x48d7c,%ebx
 806728a:	8b 45 08             	mov    0x8(%ebp),%eax
 806728d:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 8067294:	c0 e8 05             	shr    $0x5,%al
 8067297:	83 e0 01             	and    $0x1,%eax
 806729a:	0f b6 c0             	movzbl %al,%eax
 806729d:	89 45 88             	mov    %eax,-0x78(%ebp)
 80672a0:	8b 45 08             	mov    0x8(%ebp),%eax
 80672a3:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 80672aa:	83 e2 df             	and    $0xffffffdf,%edx
 80672ad:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 80672b3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80672b6:	89 45 8c             	mov    %eax,-0x74(%ebp)
 80672b9:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%ebp)
 80672c0:	8d 45 84             	lea    -0x7c(%ebp),%eax
 80672c3:	89 45 94             	mov    %eax,-0x6c(%ebp)
 80672c6:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80672c9:	89 45 98             	mov    %eax,-0x68(%ebp)
 80672cc:	8b 45 98             	mov    -0x68(%ebp),%eax
 80672cf:	8b 10                	mov    (%eax),%edx
 80672d1:	8b 45 98             	mov    -0x68(%ebp),%eax
 80672d4:	8b 40 04             	mov    0x4(%eax),%eax
 80672d7:	89 c1                	mov    %eax,%ecx
 80672d9:	d3 ea                	shr    %cl,%edx
 80672db:	89 d0                	mov    %edx,%eax
 80672dd:	89 c2                	mov    %eax,%edx
 80672df:	8b 45 90             	mov    -0x70(%ebp),%eax
 80672e2:	89 45 9c             	mov    %eax,-0x64(%ebp)
 80672e5:	8b 45 9c             	mov    -0x64(%ebp),%eax
 80672e8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80672ef:	21 c2                	and    %eax,%edx
 80672f1:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80672f4:	89 10                	mov    %edx,(%eax)
 80672f6:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80672f9:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80672fc:	8b 45 90             	mov    -0x70(%ebp),%eax
 80672ff:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8067302:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8067305:	8b 50 04             	mov    0x4(%eax),%edx
 8067308:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806730b:	01 c2                	add    %eax,%edx
 806730d:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8067310:	89 50 04             	mov    %edx,0x4(%eax)
 8067313:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8067316:	85 c0                	test   %eax,%eax
 8067318:	75 17                	jne    8067331 <DecodeWindowBits+0xb9>
 806731a:	8b 45 08             	mov    0x8(%ebp),%eax
 806731d:	c7 80 30 02 00 00 10 	movl   $0x10,0x230(%eax)
 8067324:	00 00 00 
 8067327:	b8 01 00 00 00       	mov    $0x1,%eax
 806732c:	e9 b5 01 00 00       	jmp    80674e6 <DecodeWindowBits+0x26e>
 8067331:	8b 45 0c             	mov    0xc(%ebp),%eax
 8067334:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8067337:	c7 45 ac 03 00 00 00 	movl   $0x3,-0x54(%ebp)
 806733e:	8d 45 84             	lea    -0x7c(%ebp),%eax
 8067341:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8067344:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067347:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806734a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806734d:	8b 10                	mov    (%eax),%edx
 806734f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8067352:	8b 40 04             	mov    0x4(%eax),%eax
 8067355:	89 c1                	mov    %eax,%ecx
 8067357:	d3 ea                	shr    %cl,%edx
 8067359:	89 d0                	mov    %edx,%eax
 806735b:	89 c2                	mov    %eax,%edx
 806735d:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8067360:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8067363:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8067366:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806736d:	21 c2                	and    %eax,%edx
 806736f:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8067372:	89 10                	mov    %edx,(%eax)
 8067374:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067377:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806737a:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806737d:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8067380:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8067383:	8b 50 04             	mov    0x4(%eax),%edx
 8067386:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8067389:	01 c2                	add    %eax,%edx
 806738b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806738e:	89 50 04             	mov    %edx,0x4(%eax)
 8067391:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8067394:	85 c0                	test   %eax,%eax
 8067396:	74 19                	je     80673b1 <DecodeWindowBits+0x139>
 8067398:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806739b:	8d 50 11             	lea    0x11(%eax),%edx
 806739e:	8b 45 08             	mov    0x8(%ebp),%eax
 80673a1:	89 90 30 02 00 00    	mov    %edx,0x230(%eax)
 80673a7:	b8 01 00 00 00       	mov    $0x1,%eax
 80673ac:	e9 35 01 00 00       	jmp    80674e6 <DecodeWindowBits+0x26e>
 80673b1:	8b 45 0c             	mov    0xc(%ebp),%eax
 80673b4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80673b7:	c7 45 c8 03 00 00 00 	movl   $0x3,-0x38(%ebp)
 80673be:	8d 45 84             	lea    -0x7c(%ebp),%eax
 80673c1:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80673c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80673c7:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80673ca:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80673cd:	8b 10                	mov    (%eax),%edx
 80673cf:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80673d2:	8b 40 04             	mov    0x4(%eax),%eax
 80673d5:	89 c1                	mov    %eax,%ecx
 80673d7:	d3 ea                	shr    %cl,%edx
 80673d9:	89 d0                	mov    %edx,%eax
 80673db:	89 c2                	mov    %eax,%edx
 80673dd:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80673e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80673e3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80673e6:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80673ed:	21 c2                	and    %eax,%edx
 80673ef:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80673f2:	89 10                	mov    %edx,(%eax)
 80673f4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80673f7:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80673fa:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80673fd:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8067400:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8067403:	8b 50 04             	mov    0x4(%eax),%edx
 8067406:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8067409:	01 c2                	add    %eax,%edx
 806740b:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806740e:	89 50 04             	mov    %edx,0x4(%eax)
 8067411:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8067414:	83 f8 01             	cmp    $0x1,%eax
 8067417:	0f 85 9a 00 00 00    	jne    80674b7 <DecodeWindowBits+0x23f>
 806741d:	83 7d 88 00          	cmpl   $0x0,-0x78(%ebp)
 8067421:	0f 84 89 00 00 00    	je     80674b0 <DecodeWindowBits+0x238>
 8067427:	8b 45 0c             	mov    0xc(%ebp),%eax
 806742a:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806742d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 8067434:	8d 45 84             	lea    -0x7c(%ebp),%eax
 8067437:	89 45 e8             	mov    %eax,-0x18(%ebp)
 806743a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806743d:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8067440:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8067443:	8b 10                	mov    (%eax),%edx
 8067445:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8067448:	8b 40 04             	mov    0x4(%eax),%eax
 806744b:	89 c1                	mov    %eax,%ecx
 806744d:	d3 ea                	shr    %cl,%edx
 806744f:	89 d0                	mov    %edx,%eax
 8067451:	89 c2                	mov    %eax,%edx
 8067453:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8067456:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8067459:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806745c:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8067463:	21 c2                	and    %eax,%edx
 8067465:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8067468:	89 10                	mov    %edx,(%eax)
 806746a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806746d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8067470:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8067473:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8067476:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8067479:	8b 50 04             	mov    0x4(%eax),%edx
 806747c:	8b 45 f8             	mov    -0x8(%ebp),%eax
 806747f:	01 c2                	add    %eax,%edx
 8067481:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8067484:	89 50 04             	mov    %edx,0x4(%eax)
 8067487:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806748a:	83 f8 01             	cmp    $0x1,%eax
 806748d:	75 07                	jne    8067496 <DecodeWindowBits+0x21e>
 806748f:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
 8067494:	eb 50                	jmp    80674e6 <DecodeWindowBits+0x26e>
 8067496:	8b 45 08             	mov    0x8(%ebp),%eax
 8067499:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 80674a0:	83 ca 20             	or     $0x20,%edx
 80674a3:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 80674a9:	b8 01 00 00 00       	mov    $0x1,%eax
 80674ae:	eb 36                	jmp    80674e6 <DecodeWindowBits+0x26e>
 80674b0:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
 80674b5:	eb 2f                	jmp    80674e6 <DecodeWindowBits+0x26e>
 80674b7:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80674ba:	85 c0                	test   %eax,%eax
 80674bc:	74 16                	je     80674d4 <DecodeWindowBits+0x25c>
 80674be:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80674c1:	8d 50 08             	lea    0x8(%eax),%edx
 80674c4:	8b 45 08             	mov    0x8(%ebp),%eax
 80674c7:	89 90 30 02 00 00    	mov    %edx,0x230(%eax)
 80674cd:	b8 01 00 00 00       	mov    $0x1,%eax
 80674d2:	eb 12                	jmp    80674e6 <DecodeWindowBits+0x26e>
 80674d4:	8b 45 08             	mov    0x8(%ebp),%eax
 80674d7:	c7 80 30 02 00 00 11 	movl   $0x11,0x230(%eax)
 80674de:	00 00 00 
 80674e1:	b8 01 00 00 00       	mov    $0x1,%eax
 80674e6:	83 ec 80             	sub    $0xffffff80,%esp
 80674e9:	5b                   	pop    %ebx
 80674ea:	5d                   	pop    %ebp
 80674eb:	c3                   	ret    

080674ec <DecodeVarLenUint8>:
 80674ec:	55                   	push   %ebp
 80674ed:	89 e5                	mov    %esp,%ebp
 80674ef:	53                   	push   %ebx
 80674f0:	81 ec a0 00 00 00    	sub    $0xa0,%esp
 80674f6:	e8 f5 25 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80674fb:	81 c3 05 8b 04 00    	add    $0x48b05,%ebx
 8067501:	8b 45 08             	mov    0x8(%ebp),%eax
 8067504:	8b 80 24 02 00 00    	mov    0x224(%eax),%eax
 806750a:	83 f8 01             	cmp    $0x1,%eax
 806750d:	0f 84 ac 01 00 00    	je     80676bf <DecodeVarLenUint8+0x1d3>
 8067513:	83 f8 01             	cmp    $0x1,%eax
 8067516:	72 0e                	jb     8067526 <DecodeVarLenUint8+0x3a>
 8067518:	83 f8 02             	cmp    $0x2,%eax
 806751b:	0f 84 14 03 00 00    	je     8067835 <DecodeVarLenUint8+0x349>
 8067521:	e9 7d 04 00 00       	jmp    80679a3 <DecodeVarLenUint8+0x4b7>
 8067526:	8b 45 0c             	mov    0xc(%ebp),%eax
 8067529:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 806752f:	c7 85 70 ff ff ff 01 	movl   $0x1,-0x90(%ebp)
 8067536:	00 00 00 
 8067539:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 806753f:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 8067545:	e9 ab 00 00 00       	jmp    80675f5 <DecodeVarLenUint8+0x109>
 806754a:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8067550:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8067556:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806755c:	8b 40 0c             	mov    0xc(%eax),%eax
 806755f:	85 c0                	test   %eax,%eax
 8067561:	75 07                	jne    806756a <DecodeVarLenUint8+0x7e>
 8067563:	b8 00 00 00 00       	mov    $0x0,%eax
 8067568:	eb 7d                	jmp    80675e7 <DecodeVarLenUint8+0xfb>
 806756a:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8067570:	8b 00                	mov    (%eax),%eax
 8067572:	c1 e8 08             	shr    $0x8,%eax
 8067575:	89 c2                	mov    %eax,%edx
 8067577:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806757d:	89 10                	mov    %edx,(%eax)
 806757f:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8067585:	8b 10                	mov    (%eax),%edx
 8067587:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806758d:	8b 40 08             	mov    0x8(%eax),%eax
 8067590:	0f b6 00             	movzbl (%eax),%eax
 8067593:	0f b6 c0             	movzbl %al,%eax
 8067596:	c1 e0 18             	shl    $0x18,%eax
 8067599:	09 c2                	or     %eax,%edx
 806759b:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675a1:	89 10                	mov    %edx,(%eax)
 80675a3:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675a9:	8b 40 04             	mov    0x4(%eax),%eax
 80675ac:	8d 50 f8             	lea    -0x8(%eax),%edx
 80675af:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675b5:	89 50 04             	mov    %edx,0x4(%eax)
 80675b8:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675be:	8b 40 0c             	mov    0xc(%eax),%eax
 80675c1:	8d 50 ff             	lea    -0x1(%eax),%edx
 80675c4:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675ca:	89 50 0c             	mov    %edx,0xc(%eax)
 80675cd:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675d3:	8b 40 08             	mov    0x8(%eax),%eax
 80675d6:	8d 50 01             	lea    0x1(%eax),%edx
 80675d9:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80675df:	89 50 08             	mov    %edx,0x8(%eax)
 80675e2:	b8 01 00 00 00       	mov    $0x1,%eax
 80675e7:	85 c0                	test   %eax,%eax
 80675e9:	75 0a                	jne    80675f5 <DecodeVarLenUint8+0x109>
 80675eb:	b8 00 00 00 00       	mov    $0x0,%eax
 80675f0:	e9 97 00 00 00       	jmp    806768c <DecodeVarLenUint8+0x1a0>
 80675f5:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80675fb:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8067601:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8067607:	8b 40 04             	mov    0x4(%eax),%eax
 806760a:	ba 20 00 00 00       	mov    $0x20,%edx
 806760f:	29 c2                	sub    %eax,%edx
 8067611:	89 d0                	mov    %edx,%eax
 8067613:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%ebp)
 8067619:	0f 87 2b ff ff ff    	ja     806754a <DecodeVarLenUint8+0x5e>
 806761f:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8067625:	89 45 80             	mov    %eax,-0x80(%ebp)
 8067628:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806762e:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8067631:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8067637:	89 45 88             	mov    %eax,-0x78(%ebp)
 806763a:	8b 45 80             	mov    -0x80(%ebp),%eax
 806763d:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8067640:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8067643:	8b 10                	mov    (%eax),%edx
 8067645:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8067648:	8b 40 04             	mov    0x4(%eax),%eax
 806764b:	89 c1                	mov    %eax,%ecx
 806764d:	d3 ea                	shr    %cl,%edx
 806764f:	89 d0                	mov    %edx,%eax
 8067651:	89 c2                	mov    %eax,%edx
 8067653:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8067656:	89 45 90             	mov    %eax,-0x70(%ebp)
 8067659:	8b 45 90             	mov    -0x70(%ebp),%eax
 806765c:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8067663:	21 c2                	and    %eax,%edx
 8067665:	8b 45 88             	mov    -0x78(%ebp),%eax
 8067668:	89 10                	mov    %edx,(%eax)
 806766a:	8b 45 80             	mov    -0x80(%ebp),%eax
 806766d:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8067670:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8067673:	89 45 98             	mov    %eax,-0x68(%ebp)
 8067676:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8067679:	8b 50 04             	mov    0x4(%eax),%edx
 806767c:	8b 45 98             	mov    -0x68(%ebp),%eax
 806767f:	01 c2                	add    %eax,%edx
 8067681:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8067684:	89 50 04             	mov    %edx,0x4(%eax)
 8067687:	b8 01 00 00 00       	mov    $0x1,%eax
 806768c:	85 c0                	test   %eax,%eax
 806768e:	0f 94 c0             	sete   %al
 8067691:	0f b6 c0             	movzbl %al,%eax
 8067694:	85 c0                	test   %eax,%eax
 8067696:	74 0a                	je     80676a2 <DecodeVarLenUint8+0x1b6>
 8067698:	b8 02 00 00 00       	mov    $0x2,%eax
 806769d:	e9 06 03 00 00       	jmp    80679a8 <DecodeVarLenUint8+0x4bc>
 80676a2:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80676a8:	85 c0                	test   %eax,%eax
 80676aa:	75 13                	jne    80676bf <DecodeVarLenUint8+0x1d3>
 80676ac:	8b 45 10             	mov    0x10(%ebp),%eax
 80676af:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 80676b5:	b8 01 00 00 00       	mov    $0x1,%eax
 80676ba:	e9 e9 02 00 00       	jmp    80679a8 <DecodeVarLenUint8+0x4bc>
 80676bf:	8b 45 0c             	mov    0xc(%ebp),%eax
 80676c2:	89 45 9c             	mov    %eax,-0x64(%ebp)
 80676c5:	c7 45 a0 03 00 00 00 	movl   $0x3,-0x60(%ebp)
 80676cc:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 80676d2:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 80676d5:	e9 81 00 00 00       	jmp    806775b <DecodeVarLenUint8+0x26f>
 80676da:	8b 45 9c             	mov    -0x64(%ebp),%eax
 80676dd:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80676e0:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80676e3:	8b 40 0c             	mov    0xc(%eax),%eax
 80676e6:	85 c0                	test   %eax,%eax
 80676e8:	75 07                	jne    80676f1 <DecodeVarLenUint8+0x205>
 80676ea:	b8 00 00 00 00       	mov    $0x0,%eax
 80676ef:	eb 5c                	jmp    806774d <DecodeVarLenUint8+0x261>
 80676f1:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80676f4:	8b 00                	mov    (%eax),%eax
 80676f6:	c1 e8 08             	shr    $0x8,%eax
 80676f9:	89 c2                	mov    %eax,%edx
 80676fb:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80676fe:	89 10                	mov    %edx,(%eax)
 8067700:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067703:	8b 10                	mov    (%eax),%edx
 8067705:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067708:	8b 40 08             	mov    0x8(%eax),%eax
 806770b:	0f b6 00             	movzbl (%eax),%eax
 806770e:	0f b6 c0             	movzbl %al,%eax
 8067711:	c1 e0 18             	shl    $0x18,%eax
 8067714:	09 c2                	or     %eax,%edx
 8067716:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067719:	89 10                	mov    %edx,(%eax)
 806771b:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806771e:	8b 40 04             	mov    0x4(%eax),%eax
 8067721:	8d 50 f8             	lea    -0x8(%eax),%edx
 8067724:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067727:	89 50 04             	mov    %edx,0x4(%eax)
 806772a:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806772d:	8b 40 0c             	mov    0xc(%eax),%eax
 8067730:	8d 50 ff             	lea    -0x1(%eax),%edx
 8067733:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067736:	89 50 0c             	mov    %edx,0xc(%eax)
 8067739:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806773c:	8b 40 08             	mov    0x8(%eax),%eax
 806773f:	8d 50 01             	lea    0x1(%eax),%edx
 8067742:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8067745:	89 50 08             	mov    %edx,0x8(%eax)
 8067748:	b8 01 00 00 00       	mov    $0x1,%eax
 806774d:	85 c0                	test   %eax,%eax
 806774f:	75 0a                	jne    806775b <DecodeVarLenUint8+0x26f>
 8067751:	b8 00 00 00 00       	mov    $0x0,%eax
 8067756:	e9 82 00 00 00       	jmp    80677dd <DecodeVarLenUint8+0x2f1>
 806775b:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806775e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8067761:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8067764:	8b 40 04             	mov    0x4(%eax),%eax
 8067767:	ba 20 00 00 00       	mov    $0x20,%edx
 806776c:	29 c2                	sub    %eax,%edx
 806776e:	89 d0                	mov    %edx,%eax
 8067770:	39 45 a0             	cmp    %eax,-0x60(%ebp)
 8067773:	0f 87 61 ff ff ff    	ja     80676da <DecodeVarLenUint8+0x1ee>
 8067779:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806777c:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806777f:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8067782:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8067785:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8067788:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806778b:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806778e:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8067791:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8067794:	8b 10                	mov    (%eax),%edx
 8067796:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8067799:	8b 40 04             	mov    0x4(%eax),%eax
 806779c:	89 c1                	mov    %eax,%ecx
 806779e:	d3 ea                	shr    %cl,%edx
 80677a0:	89 d0                	mov    %edx,%eax
 80677a2:	89 c2                	mov    %eax,%edx
 80677a4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80677a7:	89 45 c0             	mov    %eax,-0x40(%ebp)
 80677aa:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80677ad:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80677b4:	21 c2                	and    %eax,%edx
 80677b6:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80677b9:	89 10                	mov    %edx,(%eax)
 80677bb:	8b 45 b0             	mov    -0x50(%ebp),%eax
 80677be:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80677c1:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80677c4:	89 45 c8             	mov    %eax,-0x38(%ebp)
 80677c7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80677ca:	8b 50 04             	mov    0x4(%eax),%edx
 80677cd:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80677d0:	01 c2                	add    %eax,%edx
 80677d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80677d5:	89 50 04             	mov    %edx,0x4(%eax)
 80677d8:	b8 01 00 00 00       	mov    $0x1,%eax
 80677dd:	85 c0                	test   %eax,%eax
 80677df:	0f 94 c0             	sete   %al
 80677e2:	0f b6 c0             	movzbl %al,%eax
 80677e5:	85 c0                	test   %eax,%eax
 80677e7:	74 17                	je     8067800 <DecodeVarLenUint8+0x314>
 80677e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80677ec:	c7 80 24 02 00 00 01 	movl   $0x1,0x224(%eax)
 80677f3:	00 00 00 
 80677f6:	b8 02 00 00 00       	mov    $0x2,%eax
 80677fb:	e9 a8 01 00 00       	jmp    80679a8 <DecodeVarLenUint8+0x4bc>
 8067800:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8067806:	85 c0                	test   %eax,%eax
 8067808:	75 20                	jne    806782a <DecodeVarLenUint8+0x33e>
 806780a:	8b 45 10             	mov    0x10(%ebp),%eax
 806780d:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 8067813:	8b 45 08             	mov    0x8(%ebp),%eax
 8067816:	c7 80 24 02 00 00 00 	movl   $0x0,0x224(%eax)
 806781d:	00 00 00 
 8067820:	b8 01 00 00 00       	mov    $0x1,%eax
 8067825:	e9 7e 01 00 00       	jmp    80679a8 <DecodeVarLenUint8+0x4bc>
 806782a:	8b 95 68 ff ff ff    	mov    -0x98(%ebp),%edx
 8067830:	8b 45 10             	mov    0x10(%ebp),%eax
 8067833:	89 10                	mov    %edx,(%eax)
 8067835:	8b 45 10             	mov    0x10(%ebp),%eax
 8067838:	8b 00                	mov    (%eax),%eax
 806783a:	8b 55 0c             	mov    0xc(%ebp),%edx
 806783d:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8067840:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8067843:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
 8067849:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806784c:	e9 81 00 00 00       	jmp    80678d2 <DecodeVarLenUint8+0x3e6>
 8067851:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8067854:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8067857:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806785a:	8b 40 0c             	mov    0xc(%eax),%eax
 806785d:	85 c0                	test   %eax,%eax
 806785f:	75 07                	jne    8067868 <DecodeVarLenUint8+0x37c>
 8067861:	b8 00 00 00 00       	mov    $0x0,%eax
 8067866:	eb 5c                	jmp    80678c4 <DecodeVarLenUint8+0x3d8>
 8067868:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806786b:	8b 00                	mov    (%eax),%eax
 806786d:	c1 e8 08             	shr    $0x8,%eax
 8067870:	89 c2                	mov    %eax,%edx
 8067872:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8067875:	89 10                	mov    %edx,(%eax)
 8067877:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806787a:	8b 10                	mov    (%eax),%edx
 806787c:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806787f:	8b 40 08             	mov    0x8(%eax),%eax
 8067882:	0f b6 00             	movzbl (%eax),%eax
 8067885:	0f b6 c0             	movzbl %al,%eax
 8067888:	c1 e0 18             	shl    $0x18,%eax
 806788b:	09 c2                	or     %eax,%edx
 806788d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8067890:	89 10                	mov    %edx,(%eax)
 8067892:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8067895:	8b 40 04             	mov    0x4(%eax),%eax
 8067898:	8d 50 f8             	lea    -0x8(%eax),%edx
 806789b:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806789e:	89 50 04             	mov    %edx,0x4(%eax)
 80678a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80678a4:	8b 40 0c             	mov    0xc(%eax),%eax
 80678a7:	8d 50 ff             	lea    -0x1(%eax),%edx
 80678aa:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80678ad:	89 50 0c             	mov    %edx,0xc(%eax)
 80678b0:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80678b3:	8b 40 08             	mov    0x8(%eax),%eax
 80678b6:	8d 50 01             	lea    0x1(%eax),%edx
 80678b9:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80678bc:	89 50 08             	mov    %edx,0x8(%eax)
 80678bf:	b8 01 00 00 00       	mov    $0x1,%eax
 80678c4:	85 c0                	test   %eax,%eax
 80678c6:	75 0a                	jne    80678d2 <DecodeVarLenUint8+0x3e6>
 80678c8:	b8 00 00 00 00       	mov    $0x0,%eax
 80678cd:	e9 82 00 00 00       	jmp    8067954 <DecodeVarLenUint8+0x468>
 80678d2:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80678d5:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80678d8:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80678db:	8b 40 04             	mov    0x4(%eax),%eax
 80678de:	ba 20 00 00 00       	mov    $0x20,%edx
 80678e3:	29 c2                	sub    %eax,%edx
 80678e5:	89 d0                	mov    %edx,%eax
 80678e7:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 80678ea:	0f 87 61 ff ff ff    	ja     8067851 <DecodeVarLenUint8+0x365>
 80678f0:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80678f3:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80678f6:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80678f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80678fc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80678ff:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8067902:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8067905:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8067908:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806790b:	8b 10                	mov    (%eax),%edx
 806790d:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8067910:	8b 40 04             	mov    0x4(%eax),%eax
 8067913:	89 c1                	mov    %eax,%ecx
 8067915:	d3 ea                	shr    %cl,%edx
 8067917:	89 d0                	mov    %edx,%eax
 8067919:	89 c2                	mov    %eax,%edx
 806791b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806791e:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8067921:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8067924:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806792b:	21 c2                	and    %eax,%edx
 806792d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8067930:	89 10                	mov    %edx,(%eax)
 8067932:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8067935:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8067938:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806793b:	89 45 f8             	mov    %eax,-0x8(%ebp)
 806793e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8067941:	8b 50 04             	mov    0x4(%eax),%edx
 8067944:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8067947:	01 c2                	add    %eax,%edx
 8067949:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806794c:	89 50 04             	mov    %edx,0x4(%eax)
 806794f:	b8 01 00 00 00       	mov    $0x1,%eax
 8067954:	85 c0                	test   %eax,%eax
 8067956:	0f 94 c0             	sete   %al
 8067959:	0f b6 c0             	movzbl %al,%eax
 806795c:	85 c0                	test   %eax,%eax
 806795e:	74 14                	je     8067974 <DecodeVarLenUint8+0x488>
 8067960:	8b 45 08             	mov    0x8(%ebp),%eax
 8067963:	c7 80 24 02 00 00 02 	movl   $0x2,0x224(%eax)
 806796a:	00 00 00 
 806796d:	b8 02 00 00 00       	mov    $0x2,%eax
 8067972:	eb 34                	jmp    80679a8 <DecodeVarLenUint8+0x4bc>
 8067974:	8b 45 10             	mov    0x10(%ebp),%eax
 8067977:	8b 00                	mov    (%eax),%eax
 8067979:	ba 01 00 00 00       	mov    $0x1,%edx
 806797e:	89 c1                	mov    %eax,%ecx
 8067980:	d3 e2                	shl    %cl,%edx
 8067982:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8067988:	01 c2                	add    %eax,%edx
 806798a:	8b 45 10             	mov    0x10(%ebp),%eax
 806798d:	89 10                	mov    %edx,(%eax)
 806798f:	8b 45 08             	mov    0x8(%ebp),%eax
 8067992:	c7 80 24 02 00 00 00 	movl   $0x0,0x224(%eax)
 8067999:	00 00 00 
 806799c:	b8 01 00 00 00       	mov    $0x1,%eax
 80679a1:	eb 05                	jmp    80679a8 <DecodeVarLenUint8+0x4bc>
 80679a3:	b8 e1 ff ff ff       	mov    $0xffffffe1,%eax
 80679a8:	81 c4 a0 00 00 00    	add    $0xa0,%esp
 80679ae:	5b                   	pop    %ebx
 80679af:	5d                   	pop    %ebp
 80679b0:	c3                   	ret    

080679b1 <DecodeMetaBlockLength>:
 80679b1:	55                   	push   %ebp
 80679b2:	89 e5                	mov    %esp,%ebp
 80679b4:	56                   	push   %esi
 80679b5:	53                   	push   %ebx
 80679b6:	81 ec 90 01 00 00    	sub    $0x190,%esp
 80679bc:	e8 2f 21 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80679c1:	81 c3 3f 86 04 00    	add    $0x4863f,%ebx
 80679c7:	8b 45 08             	mov    0x8(%ebp),%eax
 80679ca:	8b 80 1c 02 00 00    	mov    0x21c(%eax),%eax
 80679d0:	83 f8 07             	cmp    $0x7,%eax
 80679d3:	0f 87 dd 0f 00 00    	ja     80689b6 <.L92+0x20c>
 80679d9:	c1 e0 02             	shl    $0x2,%eax
 80679dc:	8b 84 18 d8 98 fd ff 	mov    -0x26728(%eax,%ebx,1),%eax
 80679e3:	01 d8                	add    %ebx,%eax
 80679e5:	ff e0                	jmp    *%eax

080679e7 <.L84>:
 80679e7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80679ea:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 80679f0:	c7 85 7c fe ff ff 01 	movl   $0x1,-0x184(%ebp)
 80679f7:	00 00 00 
 80679fa:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 8067a00:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 8067a06:	e9 ab 00 00 00       	jmp    8067ab6 <.L84+0xcf>
 8067a0b:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8067a11:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 8067a17:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a1d:	8b 40 0c             	mov    0xc(%eax),%eax
 8067a20:	85 c0                	test   %eax,%eax
 8067a22:	75 07                	jne    8067a2b <.L84+0x44>
 8067a24:	b8 00 00 00 00       	mov    $0x0,%eax
 8067a29:	eb 7d                	jmp    8067aa8 <.L84+0xc1>
 8067a2b:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a31:	8b 00                	mov    (%eax),%eax
 8067a33:	c1 e8 08             	shr    $0x8,%eax
 8067a36:	89 c2                	mov    %eax,%edx
 8067a38:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a3e:	89 10                	mov    %edx,(%eax)
 8067a40:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a46:	8b 10                	mov    (%eax),%edx
 8067a48:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a4e:	8b 40 08             	mov    0x8(%eax),%eax
 8067a51:	0f b6 00             	movzbl (%eax),%eax
 8067a54:	0f b6 c0             	movzbl %al,%eax
 8067a57:	c1 e0 18             	shl    $0x18,%eax
 8067a5a:	09 c2                	or     %eax,%edx
 8067a5c:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a62:	89 10                	mov    %edx,(%eax)
 8067a64:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a6a:	8b 40 04             	mov    0x4(%eax),%eax
 8067a6d:	8d 50 f8             	lea    -0x8(%eax),%edx
 8067a70:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a76:	89 50 04             	mov    %edx,0x4(%eax)
 8067a79:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a7f:	8b 40 0c             	mov    0xc(%eax),%eax
 8067a82:	8d 50 ff             	lea    -0x1(%eax),%edx
 8067a85:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a8b:	89 50 0c             	mov    %edx,0xc(%eax)
 8067a8e:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067a94:	8b 40 08             	mov    0x8(%eax),%eax
 8067a97:	8d 50 01             	lea    0x1(%eax),%edx
 8067a9a:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8067aa0:	89 50 08             	mov    %edx,0x8(%eax)
 8067aa3:	b8 01 00 00 00       	mov    $0x1,%eax
 8067aa8:	85 c0                	test   %eax,%eax
 8067aaa:	75 0a                	jne    8067ab6 <.L84+0xcf>
 8067aac:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ab1:	e9 cd 00 00 00       	jmp    8067b83 <.L84+0x19c>
 8067ab6:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8067abc:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 8067ac2:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 8067ac8:	8b 40 04             	mov    0x4(%eax),%eax
 8067acb:	ba 20 00 00 00       	mov    $0x20,%edx
 8067ad0:	29 c2                	sub    %eax,%edx
 8067ad2:	89 d0                	mov    %edx,%eax
 8067ad4:	39 85 7c fe ff ff    	cmp    %eax,-0x184(%ebp)
 8067ada:	0f 87 2b ff ff ff    	ja     8067a0b <.L84+0x24>
 8067ae0:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8067ae6:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 8067aec:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8067af2:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 8067af8:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8067afe:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 8067b04:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 8067b0a:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 8067b10:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 8067b16:	8b 10                	mov    (%eax),%edx
 8067b18:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 8067b1e:	8b 40 04             	mov    0x4(%eax),%eax
 8067b21:	89 c1                	mov    %eax,%ecx
 8067b23:	d3 ea                	shr    %cl,%edx
 8067b25:	89 d0                	mov    %edx,%eax
 8067b27:	89 c2                	mov    %eax,%edx
 8067b29:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 8067b2f:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 8067b35:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 8067b3b:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8067b42:	21 c2                	and    %eax,%edx
 8067b44:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 8067b4a:	89 10                	mov    %edx,(%eax)
 8067b4c:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 8067b52:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 8067b58:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 8067b5e:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 8067b64:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 8067b6a:	8b 50 04             	mov    0x4(%eax),%edx
 8067b6d:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 8067b73:	01 c2                	add    %eax,%edx
 8067b75:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 8067b7b:	89 50 04             	mov    %edx,0x4(%eax)
 8067b7e:	b8 01 00 00 00       	mov    $0x1,%eax
 8067b83:	85 c0                	test   %eax,%eax
 8067b85:	75 0a                	jne    8067b91 <.L84+0x1aa>
 8067b87:	b8 02 00 00 00       	mov    $0x2,%eax
 8067b8c:	e9 31 0e 00 00       	jmp    80689c2 <.L92+0x218>
 8067b91:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8067b97:	85 c0                	test   %eax,%eax
 8067b99:	0f 95 c2             	setne  %dl
 8067b9c:	8b 45 08             	mov    0x8(%ebp),%eax
 8067b9f:	89 d1                	mov    %edx,%ecx
 8067ba1:	83 e1 01             	and    $0x1,%ecx
 8067ba4:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8067bab:	83 e2 fe             	and    $0xfffffffe,%edx
 8067bae:	09 ca                	or     %ecx,%edx
 8067bb0:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8067bb6:	8b 45 08             	mov    0x8(%ebp),%eax
 8067bb9:	c7 80 b4 00 00 00 00 	movl   $0x0,0xb4(%eax)
 8067bc0:	00 00 00 
 8067bc3:	8b 45 08             	mov    0x8(%ebp),%eax
 8067bc6:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8067bcd:	83 e2 fd             	and    $0xfffffffd,%edx
 8067bd0:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8067bd6:	8b 45 08             	mov    0x8(%ebp),%eax
 8067bd9:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8067be0:	83 e2 fb             	and    $0xfffffffb,%edx
 8067be3:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8067be9:	8b 45 08             	mov    0x8(%ebp),%eax
 8067bec:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 8067bf3:	83 e0 01             	and    $0x1,%eax
 8067bf6:	84 c0                	test   %al,%al
 8067bf8:	75 12                	jne    8067c0c <.L84+0x225>
 8067bfa:	8b 45 08             	mov    0x8(%ebp),%eax
 8067bfd:	c7 80 1c 02 00 00 02 	movl   $0x2,0x21c(%eax)
 8067c04:	00 00 00 
 8067c07:	e9 b1 0d 00 00       	jmp    80689bd <.L92+0x213>
 8067c0c:	8b 45 08             	mov    0x8(%ebp),%eax
 8067c0f:	c7 80 1c 02 00 00 01 	movl   $0x1,0x21c(%eax)
 8067c16:	00 00 00 

08067c19 <.L86>:
 8067c19:	8b 45 0c             	mov    0xc(%ebp),%eax
 8067c1c:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 8067c22:	c7 85 ac fe ff ff 01 	movl   $0x1,-0x154(%ebp)
 8067c29:	00 00 00 
 8067c2c:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 8067c32:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 8067c38:	e9 ab 00 00 00       	jmp    8067ce8 <.L86+0xcf>
 8067c3d:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 8067c43:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 8067c49:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c4f:	8b 40 0c             	mov    0xc(%eax),%eax
 8067c52:	85 c0                	test   %eax,%eax
 8067c54:	75 07                	jne    8067c5d <.L86+0x44>
 8067c56:	b8 00 00 00 00       	mov    $0x0,%eax
 8067c5b:	eb 7d                	jmp    8067cda <.L86+0xc1>
 8067c5d:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c63:	8b 00                	mov    (%eax),%eax
 8067c65:	c1 e8 08             	shr    $0x8,%eax
 8067c68:	89 c2                	mov    %eax,%edx
 8067c6a:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c70:	89 10                	mov    %edx,(%eax)
 8067c72:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c78:	8b 10                	mov    (%eax),%edx
 8067c7a:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c80:	8b 40 08             	mov    0x8(%eax),%eax
 8067c83:	0f b6 00             	movzbl (%eax),%eax
 8067c86:	0f b6 c0             	movzbl %al,%eax
 8067c89:	c1 e0 18             	shl    $0x18,%eax
 8067c8c:	09 c2                	or     %eax,%edx
 8067c8e:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c94:	89 10                	mov    %edx,(%eax)
 8067c96:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067c9c:	8b 40 04             	mov    0x4(%eax),%eax
 8067c9f:	8d 50 f8             	lea    -0x8(%eax),%edx
 8067ca2:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067ca8:	89 50 04             	mov    %edx,0x4(%eax)
 8067cab:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067cb1:	8b 40 0c             	mov    0xc(%eax),%eax
 8067cb4:	8d 50 ff             	lea    -0x1(%eax),%edx
 8067cb7:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067cbd:	89 50 0c             	mov    %edx,0xc(%eax)
 8067cc0:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067cc6:	8b 40 08             	mov    0x8(%eax),%eax
 8067cc9:	8d 50 01             	lea    0x1(%eax),%edx
 8067ccc:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8067cd2:	89 50 08             	mov    %edx,0x8(%eax)
 8067cd5:	b8 01 00 00 00       	mov    $0x1,%eax
 8067cda:	85 c0                	test   %eax,%eax
 8067cdc:	75 0a                	jne    8067ce8 <.L86+0xcf>
 8067cde:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ce3:	e9 cd 00 00 00       	jmp    8067db5 <.L86+0x19c>
 8067ce8:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 8067cee:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 8067cf4:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 8067cfa:	8b 40 04             	mov    0x4(%eax),%eax
 8067cfd:	ba 20 00 00 00       	mov    $0x20,%edx
 8067d02:	29 c2                	sub    %eax,%edx
 8067d04:	89 d0                	mov    %edx,%eax
 8067d06:	39 85 ac fe ff ff    	cmp    %eax,-0x154(%ebp)
 8067d0c:	0f 87 2b ff ff ff    	ja     8067c3d <.L86+0x24>
 8067d12:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 8067d18:	89 85 bc fe ff ff    	mov    %eax,-0x144(%ebp)
 8067d1e:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8067d24:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 8067d2a:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
 8067d30:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 8067d36:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 8067d3c:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 8067d42:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8067d48:	8b 10                	mov    (%eax),%edx
 8067d4a:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8067d50:	8b 40 04             	mov    0x4(%eax),%eax
 8067d53:	89 c1                	mov    %eax,%ecx
 8067d55:	d3 ea                	shr    %cl,%edx
 8067d57:	89 d0                	mov    %edx,%eax
 8067d59:	89 c2                	mov    %eax,%edx
 8067d5b:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 8067d61:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 8067d67:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 8067d6d:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8067d74:	21 c2                	and    %eax,%edx
 8067d76:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 8067d7c:	89 10                	mov    %edx,(%eax)
 8067d7e:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 8067d84:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 8067d8a:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 8067d90:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 8067d96:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8067d9c:	8b 50 04             	mov    0x4(%eax),%edx
 8067d9f:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8067da5:	01 c2                	add    %eax,%edx
 8067da7:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8067dad:	89 50 04             	mov    %edx,0x4(%eax)
 8067db0:	b8 01 00 00 00       	mov    $0x1,%eax
 8067db5:	85 c0                	test   %eax,%eax
 8067db7:	75 0a                	jne    8067dc3 <.L86+0x1aa>
 8067db9:	b8 02 00 00 00       	mov    $0x2,%eax
 8067dbe:	e9 ff 0b 00 00       	jmp    80689c2 <.L92+0x218>
 8067dc3:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8067dc9:	85 c0                	test   %eax,%eax
 8067dcb:	74 17                	je     8067de4 <.L86+0x1cb>
 8067dcd:	8b 45 08             	mov    0x8(%ebp),%eax
 8067dd0:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%eax)
 8067dd7:	00 00 00 
 8067dda:	b8 01 00 00 00       	mov    $0x1,%eax
 8067ddf:	e9 de 0b 00 00       	jmp    80689c2 <.L92+0x218>
 8067de4:	8b 45 08             	mov    0x8(%ebp),%eax
 8067de7:	c7 80 1c 02 00 00 02 	movl   $0x2,0x21c(%eax)
 8067dee:	00 00 00 

08067df1 <.L87>:
 8067df1:	8b 45 0c             	mov    0xc(%ebp),%eax
 8067df4:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 8067dfa:	c7 85 dc fe ff ff 02 	movl   $0x2,-0x124(%ebp)
 8067e01:	00 00 00 
 8067e04:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 8067e0a:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 8067e10:	e9 ab 00 00 00       	jmp    8067ec0 <.L87+0xcf>
 8067e15:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 8067e1b:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 8067e21:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e27:	8b 40 0c             	mov    0xc(%eax),%eax
 8067e2a:	85 c0                	test   %eax,%eax
 8067e2c:	75 07                	jne    8067e35 <.L87+0x44>
 8067e2e:	b8 00 00 00 00       	mov    $0x0,%eax
 8067e33:	eb 7d                	jmp    8067eb2 <.L87+0xc1>
 8067e35:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e3b:	8b 00                	mov    (%eax),%eax
 8067e3d:	c1 e8 08             	shr    $0x8,%eax
 8067e40:	89 c2                	mov    %eax,%edx
 8067e42:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e48:	89 10                	mov    %edx,(%eax)
 8067e4a:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e50:	8b 10                	mov    (%eax),%edx
 8067e52:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e58:	8b 40 08             	mov    0x8(%eax),%eax
 8067e5b:	0f b6 00             	movzbl (%eax),%eax
 8067e5e:	0f b6 c0             	movzbl %al,%eax
 8067e61:	c1 e0 18             	shl    $0x18,%eax
 8067e64:	09 c2                	or     %eax,%edx
 8067e66:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e6c:	89 10                	mov    %edx,(%eax)
 8067e6e:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e74:	8b 40 04             	mov    0x4(%eax),%eax
 8067e77:	8d 50 f8             	lea    -0x8(%eax),%edx
 8067e7a:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e80:	89 50 04             	mov    %edx,0x4(%eax)
 8067e83:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e89:	8b 40 0c             	mov    0xc(%eax),%eax
 8067e8c:	8d 50 ff             	lea    -0x1(%eax),%edx
 8067e8f:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e95:	89 50 0c             	mov    %edx,0xc(%eax)
 8067e98:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067e9e:	8b 40 08             	mov    0x8(%eax),%eax
 8067ea1:	8d 50 01             	lea    0x1(%eax),%edx
 8067ea4:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8067eaa:	89 50 08             	mov    %edx,0x8(%eax)
 8067ead:	b8 01 00 00 00       	mov    $0x1,%eax
 8067eb2:	85 c0                	test   %eax,%eax
 8067eb4:	75 0a                	jne    8067ec0 <.L87+0xcf>
 8067eb6:	b8 00 00 00 00       	mov    $0x0,%eax
 8067ebb:	e9 cd 00 00 00       	jmp    8067f8d <.L87+0x19c>
 8067ec0:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 8067ec6:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 8067ecc:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8067ed2:	8b 40 04             	mov    0x4(%eax),%eax
 8067ed5:	ba 20 00 00 00       	mov    $0x20,%edx
 8067eda:	29 c2                	sub    %eax,%edx
 8067edc:	89 d0                	mov    %edx,%eax
 8067ede:	39 85 dc fe ff ff    	cmp    %eax,-0x124(%ebp)
 8067ee4:	0f 87 2b ff ff ff    	ja     8067e15 <.L87+0x24>
 8067eea:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 8067ef0:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8067ef6:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 8067efc:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8067f02:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 8067f08:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8067f0e:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 8067f14:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 8067f1a:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8067f20:	8b 10                	mov    (%eax),%edx
 8067f22:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8067f28:	8b 40 04             	mov    0x4(%eax),%eax
 8067f2b:	89 c1                	mov    %eax,%ecx
 8067f2d:	d3 ea                	shr    %cl,%edx
 8067f2f:	89 d0                	mov    %edx,%eax
 8067f31:	89 c2                	mov    %eax,%edx
 8067f33:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 8067f39:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 8067f3f:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 8067f45:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8067f4c:	21 c2                	and    %eax,%edx
 8067f4e:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 8067f54:	89 10                	mov    %edx,(%eax)
 8067f56:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 8067f5c:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 8067f62:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 8067f68:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 8067f6e:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8067f74:	8b 50 04             	mov    0x4(%eax),%edx
 8067f77:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8067f7d:	01 c2                	add    %eax,%edx
 8067f7f:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8067f85:	89 50 04             	mov    %edx,0x4(%eax)
 8067f88:	b8 01 00 00 00       	mov    $0x1,%eax
 8067f8d:	85 c0                	test   %eax,%eax
 8067f8f:	75 0a                	jne    8067f9b <.L87+0x1aa>
 8067f91:	b8 02 00 00 00       	mov    $0x2,%eax
 8067f96:	e9 27 0a 00 00       	jmp    80689c2 <.L92+0x218>
 8067f9b:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8067fa1:	8d 50 04             	lea    0x4(%eax),%edx
 8067fa4:	8b 45 08             	mov    0x8(%ebp),%eax
 8067fa7:	0f b6 d2             	movzbl %dl,%edx
 8067faa:	89 d1                	mov    %edx,%ecx
 8067fac:	c1 e1 06             	shl    $0x6,%ecx
 8067faf:	0f b7 90 2c 02 00 00 	movzwl 0x22c(%eax),%edx
 8067fb6:	66 81 e2 3f c0       	and    $0xc03f,%dx
 8067fbb:	09 ca                	or     %ecx,%edx
 8067fbd:	66 89 90 2c 02 00 00 	mov    %dx,0x22c(%eax)
 8067fc4:	8b 45 08             	mov    0x8(%ebp),%eax
 8067fc7:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 8067fce:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8067fd4:	83 f8 03             	cmp    $0x3,%eax
 8067fd7:	75 25                	jne    8067ffe <.L87+0x20d>
 8067fd9:	8b 45 08             	mov    0x8(%ebp),%eax
 8067fdc:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8067fe3:	83 ca 04             	or     $0x4,%edx
 8067fe6:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8067fec:	8b 45 08             	mov    0x8(%ebp),%eax
 8067fef:	c7 80 1c 02 00 00 05 	movl   $0x5,0x21c(%eax)
 8067ff6:	00 00 00 
 8067ff9:	e9 bf 09 00 00       	jmp    80689bd <.L92+0x213>
 8067ffe:	8b 45 08             	mov    0x8(%ebp),%eax
 8068001:	c7 80 1c 02 00 00 03 	movl   $0x3,0x21c(%eax)
 8068008:	00 00 00 

0806800b <.L88>:
 806800b:	8b 45 08             	mov    0x8(%ebp),%eax
 806800e:	8b 40 04             	mov    0x4(%eax),%eax
 8068011:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 8068017:	e9 30 02 00 00       	jmp    806824c <.L88+0x241>
 806801c:	8b 45 0c             	mov    0xc(%ebp),%eax
 806801f:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 8068025:	c7 85 0c ff ff ff 04 	movl   $0x4,-0xf4(%ebp)
 806802c:	00 00 00 
 806802f:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 8068035:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 806803b:	e9 ab 00 00 00       	jmp    80680eb <.L88+0xe0>
 8068040:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 8068046:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 806804c:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8068052:	8b 40 0c             	mov    0xc(%eax),%eax
 8068055:	85 c0                	test   %eax,%eax
 8068057:	75 07                	jne    8068060 <.L88+0x55>
 8068059:	b8 00 00 00 00       	mov    $0x0,%eax
 806805e:	eb 7d                	jmp    80680dd <.L88+0xd2>
 8068060:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8068066:	8b 00                	mov    (%eax),%eax
 8068068:	c1 e8 08             	shr    $0x8,%eax
 806806b:	89 c2                	mov    %eax,%edx
 806806d:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8068073:	89 10                	mov    %edx,(%eax)
 8068075:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806807b:	8b 10                	mov    (%eax),%edx
 806807d:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8068083:	8b 40 08             	mov    0x8(%eax),%eax
 8068086:	0f b6 00             	movzbl (%eax),%eax
 8068089:	0f b6 c0             	movzbl %al,%eax
 806808c:	c1 e0 18             	shl    $0x18,%eax
 806808f:	09 c2                	or     %eax,%edx
 8068091:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8068097:	89 10                	mov    %edx,(%eax)
 8068099:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806809f:	8b 40 04             	mov    0x4(%eax),%eax
 80680a2:	8d 50 f8             	lea    -0x8(%eax),%edx
 80680a5:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80680ab:	89 50 04             	mov    %edx,0x4(%eax)
 80680ae:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80680b4:	8b 40 0c             	mov    0xc(%eax),%eax
 80680b7:	8d 50 ff             	lea    -0x1(%eax),%edx
 80680ba:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80680c0:	89 50 0c             	mov    %edx,0xc(%eax)
 80680c3:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80680c9:	8b 40 08             	mov    0x8(%eax),%eax
 80680cc:	8d 50 01             	lea    0x1(%eax),%edx
 80680cf:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80680d5:	89 50 08             	mov    %edx,0x8(%eax)
 80680d8:	b8 01 00 00 00       	mov    $0x1,%eax
 80680dd:	85 c0                	test   %eax,%eax
 80680df:	75 0a                	jne    80680eb <.L88+0xe0>
 80680e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80680e6:	e9 cd 00 00 00       	jmp    80681b8 <.L88+0x1ad>
 80680eb:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 80680f1:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 80680f7:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 80680fd:	8b 40 04             	mov    0x4(%eax),%eax
 8068100:	ba 20 00 00 00       	mov    $0x20,%edx
 8068105:	29 c2                	sub    %eax,%edx
 8068107:	89 d0                	mov    %edx,%eax
 8068109:	39 85 0c ff ff ff    	cmp    %eax,-0xf4(%ebp)
 806810f:	0f 87 2b ff ff ff    	ja     8068040 <.L88+0x35>
 8068115:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806811b:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 8068121:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 8068127:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 806812d:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 8068133:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 8068139:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806813f:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 8068145:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806814b:	8b 10                	mov    (%eax),%edx
 806814d:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 8068153:	8b 40 04             	mov    0x4(%eax),%eax
 8068156:	89 c1                	mov    %eax,%ecx
 8068158:	d3 ea                	shr    %cl,%edx
 806815a:	89 d0                	mov    %edx,%eax
 806815c:	89 c2                	mov    %eax,%edx
 806815e:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8068164:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 806816a:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 8068170:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8068177:	21 c2                	and    %eax,%edx
 8068179:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806817f:	89 10                	mov    %edx,(%eax)
 8068181:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8068187:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 806818d:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8068193:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 8068199:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806819f:	8b 50 04             	mov    0x4(%eax),%edx
 80681a2:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 80681a8:	01 c2                	add    %eax,%edx
 80681aa:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 80681b0:	89 50 04             	mov    %edx,0x4(%eax)
 80681b3:	b8 01 00 00 00       	mov    $0x1,%eax
 80681b8:	85 c0                	test   %eax,%eax
 80681ba:	75 16                	jne    80681d2 <.L88+0x1c7>
 80681bc:	8b 45 08             	mov    0x8(%ebp),%eax
 80681bf:	8b 95 74 fe ff ff    	mov    -0x18c(%ebp),%edx
 80681c5:	89 50 04             	mov    %edx,0x4(%eax)
 80681c8:	b8 02 00 00 00       	mov    $0x2,%eax
 80681cd:	e9 f0 07 00 00       	jmp    80689c2 <.L92+0x218>
 80681d2:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 80681d8:	8d 50 01             	lea    0x1(%eax),%edx
 80681db:	8b 45 08             	mov    0x8(%ebp),%eax
 80681de:	0f b7 80 2c 02 00 00 	movzwl 0x22c(%eax),%eax
 80681e5:	66 c1 e8 06          	shr    $0x6,%ax
 80681e9:	80 e4 ff             	and    $0xff,%ah
 80681ec:	0f b6 c0             	movzbl %al,%eax
 80681ef:	39 c2                	cmp    %eax,%edx
 80681f1:	75 29                	jne    806821c <.L88+0x211>
 80681f3:	8b 45 08             	mov    0x8(%ebp),%eax
 80681f6:	0f b7 80 2c 02 00 00 	movzwl 0x22c(%eax),%eax
 80681fd:	66 c1 e8 06          	shr    $0x6,%ax
 8068201:	80 e4 ff             	and    $0xff,%ah
 8068204:	3c 04                	cmp    $0x4,%al
 8068206:	76 14                	jbe    806821c <.L88+0x211>
 8068208:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806820e:	85 c0                	test   %eax,%eax
 8068210:	75 0a                	jne    806821c <.L88+0x211>
 8068212:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8068217:	e9 a6 07 00 00       	jmp    80689c2 <.L92+0x218>
 806821c:	8b 45 08             	mov    0x8(%ebp),%eax
 806821f:	8b 90 b4 00 00 00    	mov    0xb4(%eax),%edx
 8068225:	8b b5 70 fe ff ff    	mov    -0x190(%ebp),%esi
 806822b:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 8068231:	c1 e0 02             	shl    $0x2,%eax
 8068234:	89 c1                	mov    %eax,%ecx
 8068236:	d3 e6                	shl    %cl,%esi
 8068238:	89 f0                	mov    %esi,%eax
 806823a:	09 c2                	or     %eax,%edx
 806823c:	8b 45 08             	mov    0x8(%ebp),%eax
 806823f:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 8068245:	83 85 74 fe ff ff 01 	addl   $0x1,-0x18c(%ebp)
 806824c:	8b 45 08             	mov    0x8(%ebp),%eax
 806824f:	0f b7 80 2c 02 00 00 	movzwl 0x22c(%eax),%eax
 8068256:	66 c1 e8 06          	shr    $0x6,%ax
 806825a:	80 e4 ff             	and    $0xff,%ah
 806825d:	0f b6 c0             	movzbl %al,%eax
 8068260:	3b 85 74 fe ff ff    	cmp    -0x18c(%ebp),%eax
 8068266:	0f 8f b0 fd ff ff    	jg     806801c <.L88+0x11>
 806826c:	8b 45 08             	mov    0x8(%ebp),%eax
 806826f:	c7 80 1c 02 00 00 04 	movl   $0x4,0x21c(%eax)
 8068276:	00 00 00 

08068279 <.L89>:
 8068279:	8b 45 08             	mov    0x8(%ebp),%eax
 806827c:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 8068283:	83 e0 01             	and    $0x1,%eax
 8068286:	84 c0                	test   %al,%al
 8068288:	0f 85 d0 01 00 00    	jne    806845e <.L89+0x1e5>
 806828e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8068291:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 8068297:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%ebp)
 806829e:	00 00 00 
 80682a1:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 80682a7:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 80682ad:	e9 ab 00 00 00       	jmp    806835d <.L89+0xe4>
 80682b2:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 80682b8:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 80682be:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80682c4:	8b 40 0c             	mov    0xc(%eax),%eax
 80682c7:	85 c0                	test   %eax,%eax
 80682c9:	75 07                	jne    80682d2 <.L89+0x59>
 80682cb:	b8 00 00 00 00       	mov    $0x0,%eax
 80682d0:	eb 7d                	jmp    806834f <.L89+0xd6>
 80682d2:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80682d8:	8b 00                	mov    (%eax),%eax
 80682da:	c1 e8 08             	shr    $0x8,%eax
 80682dd:	89 c2                	mov    %eax,%edx
 80682df:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80682e5:	89 10                	mov    %edx,(%eax)
 80682e7:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80682ed:	8b 10                	mov    (%eax),%edx
 80682ef:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80682f5:	8b 40 08             	mov    0x8(%eax),%eax
 80682f8:	0f b6 00             	movzbl (%eax),%eax
 80682fb:	0f b6 c0             	movzbl %al,%eax
 80682fe:	c1 e0 18             	shl    $0x18,%eax
 8068301:	09 c2                	or     %eax,%edx
 8068303:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8068309:	89 10                	mov    %edx,(%eax)
 806830b:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8068311:	8b 40 04             	mov    0x4(%eax),%eax
 8068314:	8d 50 f8             	lea    -0x8(%eax),%edx
 8068317:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806831d:	89 50 04             	mov    %edx,0x4(%eax)
 8068320:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8068326:	8b 40 0c             	mov    0xc(%eax),%eax
 8068329:	8d 50 ff             	lea    -0x1(%eax),%edx
 806832c:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8068332:	89 50 0c             	mov    %edx,0xc(%eax)
 8068335:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806833b:	8b 40 08             	mov    0x8(%eax),%eax
 806833e:	8d 50 01             	lea    0x1(%eax),%edx
 8068341:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8068347:	89 50 08             	mov    %edx,0x8(%eax)
 806834a:	b8 01 00 00 00       	mov    $0x1,%eax
 806834f:	85 c0                	test   %eax,%eax
 8068351:	75 0a                	jne    806835d <.L89+0xe4>
 8068353:	b8 00 00 00 00       	mov    $0x0,%eax
 8068358:	e9 cd 00 00 00       	jmp    806842a <.L89+0x1b1>
 806835d:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 8068363:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 8068369:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806836f:	8b 40 04             	mov    0x4(%eax),%eax
 8068372:	ba 20 00 00 00       	mov    $0x20,%edx
 8068377:	29 c2                	sub    %eax,%edx
 8068379:	89 d0                	mov    %edx,%eax
 806837b:	39 85 3c ff ff ff    	cmp    %eax,-0xc4(%ebp)
 8068381:	0f 87 2b ff ff ff    	ja     80682b2 <.L89+0x39>
 8068387:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806838d:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 8068393:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8068399:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 806839f:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 80683a5:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 80683ab:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 80683b1:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80683b7:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80683bd:	8b 10                	mov    (%eax),%edx
 80683bf:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80683c5:	8b 40 04             	mov    0x4(%eax),%eax
 80683c8:	89 c1                	mov    %eax,%ecx
 80683ca:	d3 ea                	shr    %cl,%edx
 80683cc:	89 d0                	mov    %edx,%eax
 80683ce:	89 c2                	mov    %eax,%edx
 80683d0:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 80683d6:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 80683dc:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 80683e2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80683e9:	21 c2                	and    %eax,%edx
 80683eb:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80683f1:	89 10                	mov    %edx,(%eax)
 80683f3:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 80683f9:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 80683ff:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8068405:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806840b:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8068411:	8b 50 04             	mov    0x4(%eax),%edx
 8068414:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806841a:	01 c2                	add    %eax,%edx
 806841c:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8068422:	89 50 04             	mov    %edx,0x4(%eax)
 8068425:	b8 01 00 00 00       	mov    $0x1,%eax
 806842a:	85 c0                	test   %eax,%eax
 806842c:	75 0a                	jne    8068438 <.L89+0x1bf>
 806842e:	b8 02 00 00 00       	mov    $0x2,%eax
 8068433:	e9 8a 05 00 00       	jmp    80689c2 <.L92+0x218>
 8068438:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806843e:	85 c0                	test   %eax,%eax
 8068440:	0f 95 c2             	setne  %dl
 8068443:	8b 45 08             	mov    0x8(%ebp),%eax
 8068446:	83 e2 01             	and    $0x1,%edx
 8068449:	8d 0c 12             	lea    (%edx,%edx,1),%ecx
 806844c:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8068453:	83 e2 fd             	and    $0xfffffffd,%edx
 8068456:	09 ca                	or     %ecx,%edx
 8068458:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 806845e:	8b 45 08             	mov    0x8(%ebp),%eax
 8068461:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8068467:	8d 50 01             	lea    0x1(%eax),%edx
 806846a:	8b 45 08             	mov    0x8(%ebp),%eax
 806846d:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 8068473:	8b 45 08             	mov    0x8(%ebp),%eax
 8068476:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%eax)
 806847d:	00 00 00 
 8068480:	b8 01 00 00 00       	mov    $0x1,%eax
 8068485:	e9 38 05 00 00       	jmp    80689c2 <.L92+0x218>

0806848a <.L90>:
 806848a:	8b 45 0c             	mov    0xc(%ebp),%eax
 806848d:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8068493:	c7 85 6c ff ff ff 01 	movl   $0x1,-0x94(%ebp)
 806849a:	00 00 00 
 806849d:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 80684a3:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 80684a9:	e9 ab 00 00 00       	jmp    8068559 <.L90+0xcf>
 80684ae:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80684b4:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 80684ba:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80684c0:	8b 40 0c             	mov    0xc(%eax),%eax
 80684c3:	85 c0                	test   %eax,%eax
 80684c5:	75 07                	jne    80684ce <.L90+0x44>
 80684c7:	b8 00 00 00 00       	mov    $0x0,%eax
 80684cc:	eb 7d                	jmp    806854b <.L90+0xc1>
 80684ce:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80684d4:	8b 00                	mov    (%eax),%eax
 80684d6:	c1 e8 08             	shr    $0x8,%eax
 80684d9:	89 c2                	mov    %eax,%edx
 80684db:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80684e1:	89 10                	mov    %edx,(%eax)
 80684e3:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80684e9:	8b 10                	mov    (%eax),%edx
 80684eb:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80684f1:	8b 40 08             	mov    0x8(%eax),%eax
 80684f4:	0f b6 00             	movzbl (%eax),%eax
 80684f7:	0f b6 c0             	movzbl %al,%eax
 80684fa:	c1 e0 18             	shl    $0x18,%eax
 80684fd:	09 c2                	or     %eax,%edx
 80684ff:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8068505:	89 10                	mov    %edx,(%eax)
 8068507:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806850d:	8b 40 04             	mov    0x4(%eax),%eax
 8068510:	8d 50 f8             	lea    -0x8(%eax),%edx
 8068513:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8068519:	89 50 04             	mov    %edx,0x4(%eax)
 806851c:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8068522:	8b 40 0c             	mov    0xc(%eax),%eax
 8068525:	8d 50 ff             	lea    -0x1(%eax),%edx
 8068528:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806852e:	89 50 0c             	mov    %edx,0xc(%eax)
 8068531:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8068537:	8b 40 08             	mov    0x8(%eax),%eax
 806853a:	8d 50 01             	lea    0x1(%eax),%edx
 806853d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8068543:	89 50 08             	mov    %edx,0x8(%eax)
 8068546:	b8 01 00 00 00       	mov    $0x1,%eax
 806854b:	85 c0                	test   %eax,%eax
 806854d:	75 0a                	jne    8068559 <.L90+0xcf>
 806854f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068554:	e9 a0 00 00 00       	jmp    80685f9 <.L90+0x16f>
 8068559:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806855f:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8068565:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806856b:	8b 40 04             	mov    0x4(%eax),%eax
 806856e:	ba 20 00 00 00       	mov    $0x20,%edx
 8068573:	29 c2                	sub    %eax,%edx
 8068575:	89 d0                	mov    %edx,%eax
 8068577:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%ebp)
 806857d:	0f 87 2b ff ff ff    	ja     80684ae <.L90+0x24>
 8068583:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8068589:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 806858f:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068595:	89 45 80             	mov    %eax,-0x80(%ebp)
 8068598:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806859e:	89 45 84             	mov    %eax,-0x7c(%ebp)
 80685a1:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 80685a7:	89 45 88             	mov    %eax,-0x78(%ebp)
 80685aa:	8b 45 88             	mov    -0x78(%ebp),%eax
 80685ad:	8b 10                	mov    (%eax),%edx
 80685af:	8b 45 88             	mov    -0x78(%ebp),%eax
 80685b2:	8b 40 04             	mov    0x4(%eax),%eax
 80685b5:	89 c1                	mov    %eax,%ecx
 80685b7:	d3 ea                	shr    %cl,%edx
 80685b9:	89 d0                	mov    %edx,%eax
 80685bb:	89 c2                	mov    %eax,%edx
 80685bd:	8b 45 80             	mov    -0x80(%ebp),%eax
 80685c0:	89 45 8c             	mov    %eax,-0x74(%ebp)
 80685c3:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80685c6:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80685cd:	21 c2                	and    %eax,%edx
 80685cf:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80685d2:	89 10                	mov    %edx,(%eax)
 80685d4:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 80685da:	89 45 90             	mov    %eax,-0x70(%ebp)
 80685dd:	8b 45 80             	mov    -0x80(%ebp),%eax
 80685e0:	89 45 94             	mov    %eax,-0x6c(%ebp)
 80685e3:	8b 45 90             	mov    -0x70(%ebp),%eax
 80685e6:	8b 50 04             	mov    0x4(%eax),%edx
 80685e9:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80685ec:	01 c2                	add    %eax,%edx
 80685ee:	8b 45 90             	mov    -0x70(%ebp),%eax
 80685f1:	89 50 04             	mov    %edx,0x4(%eax)
 80685f4:	b8 01 00 00 00       	mov    $0x1,%eax
 80685f9:	85 c0                	test   %eax,%eax
 80685fb:	75 0a                	jne    8068607 <.L90+0x17d>
 80685fd:	b8 02 00 00 00       	mov    $0x2,%eax
 8068602:	e9 bb 03 00 00       	jmp    80689c2 <.L92+0x218>
 8068607:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806860d:	85 c0                	test   %eax,%eax
 806860f:	74 0a                	je     806861b <.L90+0x191>
 8068611:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
 8068616:	e9 a7 03 00 00       	jmp    80689c2 <.L92+0x218>
 806861b:	8b 45 08             	mov    0x8(%ebp),%eax
 806861e:	c7 80 1c 02 00 00 06 	movl   $0x6,0x21c(%eax)
 8068625:	00 00 00 

08068628 <.L91>:
 8068628:	8b 45 0c             	mov    0xc(%ebp),%eax
 806862b:	89 45 98             	mov    %eax,-0x68(%ebp)
 806862e:	c7 45 9c 02 00 00 00 	movl   $0x2,-0x64(%ebp)
 8068635:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 806863b:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806863e:	e9 81 00 00 00       	jmp    80686c4 <.L91+0x9c>
 8068643:	8b 45 98             	mov    -0x68(%ebp),%eax
 8068646:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8068649:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806864c:	8b 40 0c             	mov    0xc(%eax),%eax
 806864f:	85 c0                	test   %eax,%eax
 8068651:	75 07                	jne    806865a <.L91+0x32>
 8068653:	b8 00 00 00 00       	mov    $0x0,%eax
 8068658:	eb 5c                	jmp    80686b6 <.L91+0x8e>
 806865a:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806865d:	8b 00                	mov    (%eax),%eax
 806865f:	c1 e8 08             	shr    $0x8,%eax
 8068662:	89 c2                	mov    %eax,%edx
 8068664:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8068667:	89 10                	mov    %edx,(%eax)
 8068669:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806866c:	8b 10                	mov    (%eax),%edx
 806866e:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8068671:	8b 40 08             	mov    0x8(%eax),%eax
 8068674:	0f b6 00             	movzbl (%eax),%eax
 8068677:	0f b6 c0             	movzbl %al,%eax
 806867a:	c1 e0 18             	shl    $0x18,%eax
 806867d:	09 c2                	or     %eax,%edx
 806867f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8068682:	89 10                	mov    %edx,(%eax)
 8068684:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8068687:	8b 40 04             	mov    0x4(%eax),%eax
 806868a:	8d 50 f8             	lea    -0x8(%eax),%edx
 806868d:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8068690:	89 50 04             	mov    %edx,0x4(%eax)
 8068693:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8068696:	8b 40 0c             	mov    0xc(%eax),%eax
 8068699:	8d 50 ff             	lea    -0x1(%eax),%edx
 806869c:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806869f:	89 50 0c             	mov    %edx,0xc(%eax)
 80686a2:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80686a5:	8b 40 08             	mov    0x8(%eax),%eax
 80686a8:	8d 50 01             	lea    0x1(%eax),%edx
 80686ab:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80686ae:	89 50 08             	mov    %edx,0x8(%eax)
 80686b1:	b8 01 00 00 00       	mov    $0x1,%eax
 80686b6:	85 c0                	test   %eax,%eax
 80686b8:	75 0a                	jne    80686c4 <.L91+0x9c>
 80686ba:	b8 00 00 00 00       	mov    $0x0,%eax
 80686bf:	e9 82 00 00 00       	jmp    8068746 <.L91+0x11e>
 80686c4:	8b 45 98             	mov    -0x68(%ebp),%eax
 80686c7:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80686ca:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80686cd:	8b 40 04             	mov    0x4(%eax),%eax
 80686d0:	ba 20 00 00 00       	mov    $0x20,%edx
 80686d5:	29 c2                	sub    %eax,%edx
 80686d7:	89 d0                	mov    %edx,%eax
 80686d9:	39 45 9c             	cmp    %eax,-0x64(%ebp)
 80686dc:	0f 87 61 ff ff ff    	ja     8068643 <.L91+0x1b>
 80686e2:	8b 45 98             	mov    -0x68(%ebp),%eax
 80686e5:	89 45 ac             	mov    %eax,-0x54(%ebp)
 80686e8:	8b 45 9c             	mov    -0x64(%ebp),%eax
 80686eb:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80686ee:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80686f1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80686f4:	8b 45 ac             	mov    -0x54(%ebp),%eax
 80686f7:	89 45 b8             	mov    %eax,-0x48(%ebp)
 80686fa:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80686fd:	8b 10                	mov    (%eax),%edx
 80686ff:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068702:	8b 40 04             	mov    0x4(%eax),%eax
 8068705:	89 c1                	mov    %eax,%ecx
 8068707:	d3 ea                	shr    %cl,%edx
 8068709:	89 d0                	mov    %edx,%eax
 806870b:	89 c2                	mov    %eax,%edx
 806870d:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8068710:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8068713:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8068716:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806871d:	21 c2                	and    %eax,%edx
 806871f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8068722:	89 10                	mov    %edx,(%eax)
 8068724:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8068727:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806872a:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806872d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8068730:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8068733:	8b 50 04             	mov    0x4(%eax),%edx
 8068736:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8068739:	01 c2                	add    %eax,%edx
 806873b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806873e:	89 50 04             	mov    %edx,0x4(%eax)
 8068741:	b8 01 00 00 00       	mov    $0x1,%eax
 8068746:	85 c0                	test   %eax,%eax
 8068748:	75 0a                	jne    8068754 <.L91+0x12c>
 806874a:	b8 02 00 00 00       	mov    $0x2,%eax
 806874f:	e9 6e 02 00 00       	jmp    80689c2 <.L92+0x218>
 8068754:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806875a:	85 c0                	test   %eax,%eax
 806875c:	75 17                	jne    8068775 <.L91+0x14d>
 806875e:	8b 45 08             	mov    0x8(%ebp),%eax
 8068761:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%eax)
 8068768:	00 00 00 
 806876b:	b8 01 00 00 00       	mov    $0x1,%eax
 8068770:	e9 4d 02 00 00       	jmp    80689c2 <.L92+0x218>
 8068775:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806877b:	89 c2                	mov    %eax,%edx
 806877d:	8b 45 08             	mov    0x8(%ebp),%eax
 8068780:	0f b6 d2             	movzbl %dl,%edx
 8068783:	89 d1                	mov    %edx,%ecx
 8068785:	c1 e1 06             	shl    $0x6,%ecx
 8068788:	0f b7 90 2c 02 00 00 	movzwl 0x22c(%eax),%edx
 806878f:	66 81 e2 3f c0       	and    $0xc03f,%dx
 8068794:	09 ca                	or     %ecx,%edx
 8068796:	66 89 90 2c 02 00 00 	mov    %dx,0x22c(%eax)
 806879d:	8b 45 08             	mov    0x8(%ebp),%eax
 80687a0:	c7 80 1c 02 00 00 07 	movl   $0x7,0x21c(%eax)
 80687a7:	00 00 00 

080687aa <.L92>:
 80687aa:	8b 45 08             	mov    0x8(%ebp),%eax
 80687ad:	8b 40 04             	mov    0x4(%eax),%eax
 80687b0:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 80687b6:	e9 b2 01 00 00       	jmp    806896d <.L92+0x1c3>
 80687bb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80687be:	89 45 c8             	mov    %eax,-0x38(%ebp)
 80687c1:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%ebp)
 80687c8:	8d 85 70 fe ff ff    	lea    -0x190(%ebp),%eax
 80687ce:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80687d1:	e9 81 00 00 00       	jmp    8068857 <.L92+0xad>
 80687d6:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80687d9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80687dc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80687df:	8b 40 0c             	mov    0xc(%eax),%eax
 80687e2:	85 c0                	test   %eax,%eax
 80687e4:	75 07                	jne    80687ed <.L92+0x43>
 80687e6:	b8 00 00 00 00       	mov    $0x0,%eax
 80687eb:	eb 5c                	jmp    8068849 <.L92+0x9f>
 80687ed:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80687f0:	8b 00                	mov    (%eax),%eax
 80687f2:	c1 e8 08             	shr    $0x8,%eax
 80687f5:	89 c2                	mov    %eax,%edx
 80687f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80687fa:	89 10                	mov    %edx,(%eax)
 80687fc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80687ff:	8b 10                	mov    (%eax),%edx
 8068801:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068804:	8b 40 08             	mov    0x8(%eax),%eax
 8068807:	0f b6 00             	movzbl (%eax),%eax
 806880a:	0f b6 c0             	movzbl %al,%eax
 806880d:	c1 e0 18             	shl    $0x18,%eax
 8068810:	09 c2                	or     %eax,%edx
 8068812:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068815:	89 10                	mov    %edx,(%eax)
 8068817:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806881a:	8b 40 04             	mov    0x4(%eax),%eax
 806881d:	8d 50 f8             	lea    -0x8(%eax),%edx
 8068820:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068823:	89 50 04             	mov    %edx,0x4(%eax)
 8068826:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068829:	8b 40 0c             	mov    0xc(%eax),%eax
 806882c:	8d 50 ff             	lea    -0x1(%eax),%edx
 806882f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068832:	89 50 0c             	mov    %edx,0xc(%eax)
 8068835:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068838:	8b 40 08             	mov    0x8(%eax),%eax
 806883b:	8d 50 01             	lea    0x1(%eax),%edx
 806883e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068841:	89 50 08             	mov    %edx,0x8(%eax)
 8068844:	b8 01 00 00 00       	mov    $0x1,%eax
 8068849:	85 c0                	test   %eax,%eax
 806884b:	75 0a                	jne    8068857 <.L92+0xad>
 806884d:	b8 00 00 00 00       	mov    $0x0,%eax
 8068852:	e9 82 00 00 00       	jmp    80688d9 <.L92+0x12f>
 8068857:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806885a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806885d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068860:	8b 40 04             	mov    0x4(%eax),%eax
 8068863:	ba 20 00 00 00       	mov    $0x20,%edx
 8068868:	29 c2                	sub    %eax,%edx
 806886a:	89 d0                	mov    %edx,%eax
 806886c:	39 45 cc             	cmp    %eax,-0x34(%ebp)
 806886f:	0f 87 61 ff ff ff    	ja     80687d6 <.L92+0x2c>
 8068875:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8068878:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806887b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806887e:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8068881:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8068884:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8068887:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806888a:	89 45 e8             	mov    %eax,-0x18(%ebp)
 806888d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8068890:	8b 10                	mov    (%eax),%edx
 8068892:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8068895:	8b 40 04             	mov    0x4(%eax),%eax
 8068898:	89 c1                	mov    %eax,%ecx
 806889a:	d3 ea                	shr    %cl,%edx
 806889c:	89 d0                	mov    %edx,%eax
 806889e:	89 c2                	mov    %eax,%edx
 80688a0:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80688a3:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80688a6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80688a9:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80688b0:	21 c2                	and    %eax,%edx
 80688b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80688b5:	89 10                	mov    %edx,(%eax)
 80688b7:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80688ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80688bd:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80688c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80688c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80688c6:	8b 50 04             	mov    0x4(%eax),%edx
 80688c9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80688cc:	01 c2                	add    %eax,%edx
 80688ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80688d1:	89 50 04             	mov    %edx,0x4(%eax)
 80688d4:	b8 01 00 00 00       	mov    $0x1,%eax
 80688d9:	85 c0                	test   %eax,%eax
 80688db:	75 16                	jne    80688f3 <.L92+0x149>
 80688dd:	8b 45 08             	mov    0x8(%ebp),%eax
 80688e0:	8b 95 74 fe ff ff    	mov    -0x18c(%ebp),%edx
 80688e6:	89 50 04             	mov    %edx,0x4(%eax)
 80688e9:	b8 02 00 00 00       	mov    $0x2,%eax
 80688ee:	e9 cf 00 00 00       	jmp    80689c2 <.L92+0x218>
 80688f3:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 80688f9:	8d 50 01             	lea    0x1(%eax),%edx
 80688fc:	8b 45 08             	mov    0x8(%ebp),%eax
 80688ff:	0f b7 80 2c 02 00 00 	movzwl 0x22c(%eax),%eax
 8068906:	66 c1 e8 06          	shr    $0x6,%ax
 806890a:	80 e4 ff             	and    $0xff,%ah
 806890d:	0f b6 c0             	movzbl %al,%eax
 8068910:	39 c2                	cmp    %eax,%edx
 8068912:	75 29                	jne    806893d <.L92+0x193>
 8068914:	8b 45 08             	mov    0x8(%ebp),%eax
 8068917:	0f b7 80 2c 02 00 00 	movzwl 0x22c(%eax),%eax
 806891e:	66 c1 e8 06          	shr    $0x6,%ax
 8068922:	80 e4 ff             	and    $0xff,%ah
 8068925:	3c 01                	cmp    $0x1,%al
 8068927:	76 14                	jbe    806893d <.L92+0x193>
 8068929:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806892f:	85 c0                	test   %eax,%eax
 8068931:	75 0a                	jne    806893d <.L92+0x193>
 8068933:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
 8068938:	e9 85 00 00 00       	jmp    80689c2 <.L92+0x218>
 806893d:	8b 45 08             	mov    0x8(%ebp),%eax
 8068940:	8b 90 b4 00 00 00    	mov    0xb4(%eax),%edx
 8068946:	8b b5 70 fe ff ff    	mov    -0x190(%ebp),%esi
 806894c:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 8068952:	c1 e0 03             	shl    $0x3,%eax
 8068955:	89 c1                	mov    %eax,%ecx
 8068957:	d3 e6                	shl    %cl,%esi
 8068959:	89 f0                	mov    %esi,%eax
 806895b:	09 c2                	or     %eax,%edx
 806895d:	8b 45 08             	mov    0x8(%ebp),%eax
 8068960:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 8068966:	83 85 74 fe ff ff 01 	addl   $0x1,-0x18c(%ebp)
 806896d:	8b 45 08             	mov    0x8(%ebp),%eax
 8068970:	0f b7 80 2c 02 00 00 	movzwl 0x22c(%eax),%eax
 8068977:	66 c1 e8 06          	shr    $0x6,%ax
 806897b:	80 e4 ff             	and    $0xff,%ah
 806897e:	0f b6 c0             	movzbl %al,%eax
 8068981:	3b 85 74 fe ff ff    	cmp    -0x18c(%ebp),%eax
 8068987:	0f 8f 2e fe ff ff    	jg     80687bb <.L92+0x11>
 806898d:	8b 45 08             	mov    0x8(%ebp),%eax
 8068990:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8068996:	8d 50 01             	lea    0x1(%eax),%edx
 8068999:	8b 45 08             	mov    0x8(%ebp),%eax
 806899c:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 80689a2:	8b 45 08             	mov    0x8(%ebp),%eax
 80689a5:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%eax)
 80689ac:	00 00 00 
 80689af:	b8 01 00 00 00       	mov    $0x1,%eax
 80689b4:	eb 0c                	jmp    80689c2 <.L92+0x218>
 80689b6:	b8 e1 ff ff ff       	mov    $0xffffffe1,%eax
 80689bb:	eb 05                	jmp    80689c2 <.L92+0x218>
 80689bd:	e9 05 f0 ff ff       	jmp    80679c7 <DecodeMetaBlockLength+0x16>
 80689c2:	81 c4 90 01 00 00    	add    $0x190,%esp
 80689c8:	5b                   	pop    %ebx
 80689c9:	5e                   	pop    %esi
 80689ca:	5d                   	pop    %ebp
 80689cb:	c3                   	ret    

080689cc <SafeDecodeSymbol>:
 80689cc:	55                   	push   %ebp
 80689cd:	89 e5                	mov    %esp,%ebp
 80689cf:	53                   	push   %ebx
 80689d0:	83 ec 30             	sub    $0x30,%esp
 80689d3:	e8 18 11 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80689d8:	81 c3 28 76 04 00    	add    $0x47628,%ebx
 80689de:	8b 45 0c             	mov    0xc(%ebp),%eax
 80689e1:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80689e4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80689e7:	8b 40 04             	mov    0x4(%eax),%eax
 80689ea:	ba 20 00 00 00       	mov    $0x20,%edx
 80689ef:	29 c2                	sub    %eax,%edx
 80689f1:	89 d0                	mov    %edx,%eax
 80689f3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80689f6:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
 80689fa:	75 2d                	jne    8068a29 <SafeDecodeSymbol+0x5d>
 80689fc:	8b 45 08             	mov    0x8(%ebp),%eax
 80689ff:	0f b6 00             	movzbl (%eax),%eax
 8068a02:	84 c0                	test   %al,%al
 8068a04:	75 19                	jne    8068a1f <SafeDecodeSymbol+0x53>
 8068a06:	8b 45 08             	mov    0x8(%ebp),%eax
 8068a09:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8068a0d:	0f b7 d0             	movzwl %ax,%edx
 8068a10:	8b 45 10             	mov    0x10(%ebp),%eax
 8068a13:	89 10                	mov    %edx,(%eax)
 8068a15:	b8 01 00 00 00       	mov    $0x1,%eax
 8068a1a:	e9 25 01 00 00       	jmp    8068b44 <SafeDecodeSymbol+0x178>
 8068a1f:	b8 00 00 00 00       	mov    $0x0,%eax
 8068a24:	e9 1b 01 00 00       	jmp    8068b44 <SafeDecodeSymbol+0x178>
 8068a29:	8b 45 0c             	mov    0xc(%ebp),%eax
 8068a2c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8068a2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8068a32:	8b 10                	mov    (%eax),%edx
 8068a34:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8068a37:	8b 40 04             	mov    0x4(%eax),%eax
 8068a3a:	89 c1                	mov    %eax,%ecx
 8068a3c:	d3 ea                	shr    %cl,%edx
 8068a3e:	89 d0                	mov    %edx,%eax
 8068a40:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8068a43:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8068a46:	0f b6 c0             	movzbl %al,%eax
 8068a49:	c1 e0 02             	shl    $0x2,%eax
 8068a4c:	01 45 08             	add    %eax,0x8(%ebp)
 8068a4f:	8b 45 08             	mov    0x8(%ebp),%eax
 8068a52:	0f b6 00             	movzbl (%eax),%eax
 8068a55:	3c 08                	cmp    $0x8,%al
 8068a57:	77 54                	ja     8068aad <SafeDecodeSymbol+0xe1>
 8068a59:	8b 45 08             	mov    0x8(%ebp),%eax
 8068a5c:	0f b6 00             	movzbl (%eax),%eax
 8068a5f:	0f b6 c0             	movzbl %al,%eax
 8068a62:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 8068a65:	77 3c                	ja     8068aa3 <SafeDecodeSymbol+0xd7>
 8068a67:	8b 45 08             	mov    0x8(%ebp),%eax
 8068a6a:	0f b6 00             	movzbl (%eax),%eax
 8068a6d:	0f b6 c0             	movzbl %al,%eax
 8068a70:	8b 55 0c             	mov    0xc(%ebp),%edx
 8068a73:	89 55 e8             	mov    %edx,-0x18(%ebp)
 8068a76:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8068a79:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8068a7c:	8b 50 04             	mov    0x4(%eax),%edx
 8068a7f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8068a82:	01 c2                	add    %eax,%edx
 8068a84:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8068a87:	89 50 04             	mov    %edx,0x4(%eax)
 8068a8a:	8b 45 08             	mov    0x8(%ebp),%eax
 8068a8d:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8068a91:	0f b7 d0             	movzwl %ax,%edx
 8068a94:	8b 45 10             	mov    0x10(%ebp),%eax
 8068a97:	89 10                	mov    %edx,(%eax)
 8068a99:	b8 01 00 00 00       	mov    $0x1,%eax
 8068a9e:	e9 a1 00 00 00       	jmp    8068b44 <SafeDecodeSymbol+0x178>
 8068aa3:	b8 00 00 00 00       	mov    $0x0,%eax
 8068aa8:	e9 97 00 00 00       	jmp    8068b44 <SafeDecodeSymbol+0x178>
 8068aad:	83 7d d8 08          	cmpl   $0x8,-0x28(%ebp)
 8068ab1:	77 0a                	ja     8068abd <SafeDecodeSymbol+0xf1>
 8068ab3:	b8 00 00 00 00       	mov    $0x0,%eax
 8068ab8:	e9 87 00 00 00       	jmp    8068b44 <SafeDecodeSymbol+0x178>
 8068abd:	8b 45 08             	mov    0x8(%ebp),%eax
 8068ac0:	0f b6 00             	movzbl (%eax),%eax
 8068ac3:	0f b6 c0             	movzbl %al,%eax
 8068ac6:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8068ac9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8068acc:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8068ad3:	23 45 dc             	and    -0x24(%ebp),%eax
 8068ad6:	c1 e8 08             	shr    $0x8,%eax
 8068ad9:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8068adc:	83 6d d8 08          	subl   $0x8,-0x28(%ebp)
 8068ae0:	8b 45 08             	mov    0x8(%ebp),%eax
 8068ae3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8068ae7:	0f b7 d0             	movzwl %ax,%edx
 8068aea:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8068aed:	01 d0                	add    %edx,%eax
 8068aef:	c1 e0 02             	shl    $0x2,%eax
 8068af2:	01 45 08             	add    %eax,0x8(%ebp)
 8068af5:	8b 45 08             	mov    0x8(%ebp),%eax
 8068af8:	0f b6 00             	movzbl (%eax),%eax
 8068afb:	0f b6 c0             	movzbl %al,%eax
 8068afe:	3b 45 d8             	cmp    -0x28(%ebp),%eax
 8068b01:	76 07                	jbe    8068b0a <SafeDecodeSymbol+0x13e>
 8068b03:	b8 00 00 00 00       	mov    $0x0,%eax
 8068b08:	eb 3a                	jmp    8068b44 <SafeDecodeSymbol+0x178>
 8068b0a:	8b 45 08             	mov    0x8(%ebp),%eax
 8068b0d:	0f b6 00             	movzbl (%eax),%eax
 8068b10:	0f b6 c0             	movzbl %al,%eax
 8068b13:	8d 50 08             	lea    0x8(%eax),%edx
 8068b16:	8b 45 0c             	mov    0xc(%ebp),%eax
 8068b19:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8068b1c:	89 55 f8             	mov    %edx,-0x8(%ebp)
 8068b1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8068b22:	8b 50 04             	mov    0x4(%eax),%edx
 8068b25:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8068b28:	01 c2                	add    %eax,%edx
 8068b2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8068b2d:	89 50 04             	mov    %edx,0x4(%eax)
 8068b30:	8b 45 08             	mov    0x8(%ebp),%eax
 8068b33:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8068b37:	0f b7 d0             	movzwl %ax,%edx
 8068b3a:	8b 45 10             	mov    0x10(%ebp),%eax
 8068b3d:	89 10                	mov    %edx,(%eax)
 8068b3f:	b8 01 00 00 00       	mov    $0x1,%eax
 8068b44:	83 c4 30             	add    $0x30,%esp
 8068b47:	5b                   	pop    %ebx
 8068b48:	5d                   	pop    %ebp
 8068b49:	c3                   	ret    

08068b4a <ReadSimpleHuffmanSymbols>:
 8068b4a:	55                   	push   %ebp
 8068b4b:	89 e5                	mov    %esp,%ebp
 8068b4d:	53                   	push   %ebx
 8068b4e:	83 ec 60             	sub    $0x60,%esp
 8068b51:	e8 9a 0f fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8068b56:	81 c3 aa 74 04 00    	add    $0x474aa,%ebx
 8068b5c:	8b 45 10             	mov    0x10(%ebp),%eax
 8068b5f:	83 c0 08             	add    $0x8,%eax
 8068b62:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8068b65:	8b 45 10             	mov    0x10(%ebp),%eax
 8068b68:	05 6c 02 00 00       	add    $0x26c,%eax
 8068b6d:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8068b70:	8b 45 08             	mov    0x8(%ebp),%eax
 8068b73:	83 e8 01             	sub    $0x1,%eax
 8068b76:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8068b79:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 8068b80:	eb 07                	jmp    8068b89 <ReadSimpleHuffmanSymbols+0x3f>
 8068b82:	d1 6d c4             	shrl   -0x3c(%ebp)
 8068b85:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 8068b89:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)
 8068b8d:	75 f3                	jne    8068b82 <ReadSimpleHuffmanSymbols+0x38>
 8068b8f:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8068b92:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8068b95:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068b98:	8b 40 0c             	mov    0xc(%eax),%eax
 8068b9b:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8068b9e:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068ba1:	8b 40 18             	mov    0x18(%eax),%eax
 8068ba4:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8068ba7:	e9 69 01 00 00       	jmp    8068d15 <ReadSimpleHuffmanSymbols+0x1cb>
 8068bac:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8068baf:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8068bb2:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8068bb5:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8068bb8:	8d 45 a8             	lea    -0x58(%ebp),%eax
 8068bbb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8068bbe:	e9 81 00 00 00       	jmp    8068c44 <ReadSimpleHuffmanSymbols+0xfa>
 8068bc3:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8068bc6:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8068bc9:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068bcc:	8b 40 0c             	mov    0xc(%eax),%eax
 8068bcf:	85 c0                	test   %eax,%eax
 8068bd1:	75 07                	jne    8068bda <ReadSimpleHuffmanSymbols+0x90>
 8068bd3:	b8 00 00 00 00       	mov    $0x0,%eax
 8068bd8:	eb 5c                	jmp    8068c36 <ReadSimpleHuffmanSymbols+0xec>
 8068bda:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068bdd:	8b 00                	mov    (%eax),%eax
 8068bdf:	c1 e8 08             	shr    $0x8,%eax
 8068be2:	89 c2                	mov    %eax,%edx
 8068be4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068be7:	89 10                	mov    %edx,(%eax)
 8068be9:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068bec:	8b 10                	mov    (%eax),%edx
 8068bee:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068bf1:	8b 40 08             	mov    0x8(%eax),%eax
 8068bf4:	0f b6 00             	movzbl (%eax),%eax
 8068bf7:	0f b6 c0             	movzbl %al,%eax
 8068bfa:	c1 e0 18             	shl    $0x18,%eax
 8068bfd:	09 c2                	or     %eax,%edx
 8068bff:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c02:	89 10                	mov    %edx,(%eax)
 8068c04:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c07:	8b 40 04             	mov    0x4(%eax),%eax
 8068c0a:	8d 50 f8             	lea    -0x8(%eax),%edx
 8068c0d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c10:	89 50 04             	mov    %edx,0x4(%eax)
 8068c13:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c16:	8b 40 0c             	mov    0xc(%eax),%eax
 8068c19:	8d 50 ff             	lea    -0x1(%eax),%edx
 8068c1c:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c1f:	89 50 0c             	mov    %edx,0xc(%eax)
 8068c22:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c25:	8b 40 08             	mov    0x8(%eax),%eax
 8068c28:	8d 50 01             	lea    0x1(%eax),%edx
 8068c2b:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8068c2e:	89 50 08             	mov    %edx,0x8(%eax)
 8068c31:	b8 01 00 00 00       	mov    $0x1,%eax
 8068c36:	85 c0                	test   %eax,%eax
 8068c38:	75 0a                	jne    8068c44 <ReadSimpleHuffmanSymbols+0xfa>
 8068c3a:	b8 00 00 00 00       	mov    $0x0,%eax
 8068c3f:	e9 82 00 00 00       	jmp    8068cc6 <ReadSimpleHuffmanSymbols+0x17c>
 8068c44:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8068c47:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8068c4a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8068c4d:	8b 40 04             	mov    0x4(%eax),%eax
 8068c50:	ba 20 00 00 00       	mov    $0x20,%edx
 8068c55:	29 c2                	sub    %eax,%edx
 8068c57:	89 d0                	mov    %edx,%eax
 8068c59:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 8068c5c:	0f 87 61 ff ff ff    	ja     8068bc3 <ReadSimpleHuffmanSymbols+0x79>
 8068c62:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8068c65:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8068c68:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8068c6b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8068c6e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8068c71:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8068c74:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8068c77:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8068c7a:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8068c7d:	8b 10                	mov    (%eax),%edx
 8068c7f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8068c82:	8b 40 04             	mov    0x4(%eax),%eax
 8068c85:	89 c1                	mov    %eax,%ecx
 8068c87:	d3 ea                	shr    %cl,%edx
 8068c89:	89 d0                	mov    %edx,%eax
 8068c8b:	89 c2                	mov    %eax,%edx
 8068c8d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8068c90:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8068c93:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8068c96:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8068c9d:	21 c2                	and    %eax,%edx
 8068c9f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8068ca2:	89 10                	mov    %edx,(%eax)
 8068ca4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8068ca7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8068caa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8068cad:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8068cb0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8068cb3:	8b 50 04             	mov    0x4(%eax),%edx
 8068cb6:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8068cb9:	01 c2                	add    %eax,%edx
 8068cbb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8068cbe:	89 50 04             	mov    %edx,0x4(%eax)
 8068cc1:	b8 01 00 00 00       	mov    $0x1,%eax
 8068cc6:	85 c0                	test   %eax,%eax
 8068cc8:	0f 94 c0             	sete   %al
 8068ccb:	0f b6 c0             	movzbl %al,%eax
 8068cce:	85 c0                	test   %eax,%eax
 8068cd0:	74 1d                	je     8068cef <ReadSimpleHuffmanSymbols+0x1a5>
 8068cd2:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068cd5:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8068cd8:	89 50 0c             	mov    %edx,0xc(%eax)
 8068cdb:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068cde:	c7 40 08 02 00 00 00 	movl   $0x2,0x8(%eax)
 8068ce5:	b8 02 00 00 00       	mov    $0x2,%eax
 8068cea:	e9 8b 00 00 00       	jmp    8068d7a <ReadSimpleHuffmanSymbols+0x230>
 8068cef:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8068cf2:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8068cf5:	72 07                	jb     8068cfe <ReadSimpleHuffmanSymbols+0x1b4>
 8068cf7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
 8068cfc:	eb 7c                	jmp    8068d7a <ReadSimpleHuffmanSymbols+0x230>
 8068cfe:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8068d01:	89 c2                	mov    %eax,%edx
 8068d03:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068d06:	8b 4d ac             	mov    -0x54(%ebp),%ecx
 8068d09:	83 c1 50             	add    $0x50,%ecx
 8068d0c:	66 89 54 48 08       	mov    %dx,0x8(%eax,%ecx,2)
 8068d11:	83 45 ac 01          	addl   $0x1,-0x54(%ebp)
 8068d15:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8068d18:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 8068d1b:	0f 86 8b fe ff ff    	jbe    8068bac <ReadSimpleHuffmanSymbols+0x62>
 8068d21:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 8068d28:	eb 43                	jmp    8068d6d <ReadSimpleHuffmanSymbols+0x223>
 8068d2a:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8068d2d:	83 c0 01             	add    $0x1,%eax
 8068d30:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8068d33:	eb 2c                	jmp    8068d61 <ReadSimpleHuffmanSymbols+0x217>
 8068d35:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068d38:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8068d3b:	83 c2 50             	add    $0x50,%edx
 8068d3e:	0f b7 54 50 08       	movzwl 0x8(%eax,%edx,2),%edx
 8068d43:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8068d46:	8b 4d b0             	mov    -0x50(%ebp),%ecx
 8068d49:	83 c1 50             	add    $0x50,%ecx
 8068d4c:	0f b7 44 48 08       	movzwl 0x8(%eax,%ecx,2),%eax
 8068d51:	66 39 c2             	cmp    %ax,%dx
 8068d54:	75 07                	jne    8068d5d <ReadSimpleHuffmanSymbols+0x213>
 8068d56:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
 8068d5b:	eb 1d                	jmp    8068d7a <ReadSimpleHuffmanSymbols+0x230>
 8068d5d:	83 45 b0 01          	addl   $0x1,-0x50(%ebp)
 8068d61:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8068d64:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 8068d67:	76 cc                	jbe    8068d35 <ReadSimpleHuffmanSymbols+0x1eb>
 8068d69:	83 45 ac 01          	addl   $0x1,-0x54(%ebp)
 8068d6d:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8068d70:	3b 45 c0             	cmp    -0x40(%ebp),%eax
 8068d73:	72 b5                	jb     8068d2a <ReadSimpleHuffmanSymbols+0x1e0>
 8068d75:	b8 01 00 00 00       	mov    $0x1,%eax
 8068d7a:	83 c4 60             	add    $0x60,%esp
 8068d7d:	5b                   	pop    %ebx
 8068d7e:	5d                   	pop    %ebp
 8068d7f:	c3                   	ret    

08068d80 <ReadSymbolCodeLengths>:
 8068d80:	55                   	push   %ebp
 8068d81:	89 e5                	mov    %esp,%ebp
 8068d83:	56                   	push   %esi
 8068d84:	53                   	push   %ebx
 8068d85:	81 ec e0 00 00 00    	sub    $0xe0,%esp
 8068d8b:	e8 60 0d fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8068d90:	81 c3 70 72 04 00    	add    $0x47270,%ebx
 8068d96:	8b 45 0c             	mov    0xc(%ebp),%eax
 8068d99:	83 c0 08             	add    $0x8,%eax
 8068d9c:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 8068da2:	8b 45 0c             	mov    0xc(%ebp),%eax
 8068da5:	05 6c 02 00 00       	add    $0x26c,%eax
 8068daa:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 8068db0:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068db6:	8b 40 18             	mov    0x18(%eax),%eax
 8068db9:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 8068dbf:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068dc5:	8b 40 1c             	mov    0x1c(%eax),%eax
 8068dc8:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 8068dce:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068dd4:	8b 40 20             	mov    0x20(%eax),%eax
 8068dd7:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 8068ddd:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068de3:	8b 40 14             	mov    0x14(%eax),%eax
 8068de6:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 8068dec:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068df2:	8b 40 10             	mov    0x10(%eax),%eax
 8068df5:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 8068dfb:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068e01:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 8068e07:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 8068e0d:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068e13:	05 da 06 00 00       	add    $0x6da,%eax
 8068e18:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 8068e1e:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068e24:	05 48 06 00 00       	add    $0x648,%eax
 8068e29:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 8068e2f:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8068e35:	89 04 24             	mov    %eax,(%esp)
 8068e38:	e8 b9 8f 01 00       	call   8081df6 <BrotliWarmupBitReader>
 8068e3d:	85 c0                	test   %eax,%eax
 8068e3f:	75 0a                	jne    8068e4b <ReadSymbolCodeLengths+0xcb>
 8068e41:	b8 02 00 00 00       	mov    $0x2,%eax
 8068e46:	e9 3a 05 00 00       	jmp    8069385 <ReadSymbolCodeLengths+0x605>
 8068e4b:	e9 08 05 00 00       	jmp    8069358 <ReadSymbolCodeLengths+0x5d8>
 8068e50:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068e56:	83 c0 24             	add    $0x24,%eax
 8068e59:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 8068e5f:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8068e65:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8068e6b:	c7 85 64 ff ff ff 02 	movl   $0x2,-0x9c(%ebp)
 8068e72:	00 00 00 
 8068e75:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8068e7b:	8b 40 0c             	mov    0xc(%eax),%eax
 8068e7e:	39 85 64 ff ff ff    	cmp    %eax,-0x9c(%ebp)
 8068e84:	0f 96 c0             	setbe  %al
 8068e87:	0f b6 c0             	movzbl %al,%eax
 8068e8a:	85 c0                	test   %eax,%eax
 8068e8c:	75 55                	jne    8068ee3 <ReadSymbolCodeLengths+0x163>
 8068e8e:	8b 95 28 ff ff ff    	mov    -0xd8(%ebp),%edx
 8068e94:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068e9a:	89 50 18             	mov    %edx,0x18(%eax)
 8068e9d:	8b 95 2c ff ff ff    	mov    -0xd4(%ebp),%edx
 8068ea3:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068ea9:	89 50 1c             	mov    %edx,0x1c(%eax)
 8068eac:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 8068eb2:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068eb8:	89 50 14             	mov    %edx,0x14(%eax)
 8068ebb:	8b 95 38 ff ff ff    	mov    -0xc8(%ebp),%edx
 8068ec1:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068ec7:	89 50 10             	mov    %edx,0x10(%eax)
 8068eca:	8b 95 30 ff ff ff    	mov    -0xd0(%ebp),%edx
 8068ed0:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8068ed6:	89 50 20             	mov    %edx,0x20(%eax)
 8068ed9:	b8 02 00 00 00       	mov    $0x2,%eax
 8068ede:	e9 a2 04 00 00       	jmp    8069385 <ReadSymbolCodeLengths+0x605>
 8068ee3:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8068ee9:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8068eef:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8068ef5:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 8068efb:	c7 85 70 ff ff ff 11 	movl   $0x11,-0x90(%ebp)
 8068f02:	00 00 00 
 8068f05:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f0b:	8b 40 04             	mov    0x4(%eax),%eax
 8068f0e:	83 f8 0f             	cmp    $0xf,%eax
 8068f11:	0f 86 86 00 00 00    	jbe    8068f9d <ReadSymbolCodeLengths+0x21d>
 8068f17:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f1d:	8b 00                	mov    (%eax),%eax
 8068f1f:	c1 e8 10             	shr    $0x10,%eax
 8068f22:	89 c2                	mov    %eax,%edx
 8068f24:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f2a:	89 10                	mov    %edx,(%eax)
 8068f2c:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f32:	8b 40 04             	mov    0x4(%eax),%eax
 8068f35:	83 f0 10             	xor    $0x10,%eax
 8068f38:	89 c2                	mov    %eax,%edx
 8068f3a:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f40:	89 50 04             	mov    %edx,0x4(%eax)
 8068f43:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f49:	8b 10                	mov    (%eax),%edx
 8068f4b:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f51:	8b 40 08             	mov    0x8(%eax),%eax
 8068f54:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 8068f5a:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8068f60:	0f b7 00             	movzwl (%eax),%eax
 8068f63:	0f b7 c0             	movzwl %ax,%eax
 8068f66:	c1 e0 10             	shl    $0x10,%eax
 8068f69:	09 c2                	or     %eax,%edx
 8068f6b:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f71:	89 10                	mov    %edx,(%eax)
 8068f73:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f79:	8b 40 0c             	mov    0xc(%eax),%eax
 8068f7c:	8d 50 fe             	lea    -0x2(%eax),%edx
 8068f7f:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f85:	89 50 0c             	mov    %edx,0xc(%eax)
 8068f88:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f8e:	8b 40 08             	mov    0x8(%eax),%eax
 8068f91:	8d 50 02             	lea    0x2(%eax),%edx
 8068f94:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8068f9a:	89 50 08             	mov    %edx,0x8(%eax)
 8068f9d:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8068fa3:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8068fa9:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8068faf:	8b 10                	mov    (%eax),%edx
 8068fb1:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8068fb7:	8b 40 04             	mov    0x4(%eax),%eax
 8068fba:	89 c1                	mov    %eax,%ecx
 8068fbc:	d3 ea                	shr    %cl,%edx
 8068fbe:	89 d0                	mov    %edx,%eax
 8068fc0:	89 c2                	mov    %eax,%edx
 8068fc2:	c7 85 7c ff ff ff 05 	movl   $0x5,-0x84(%ebp)
 8068fc9:	00 00 00 
 8068fcc:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8068fd2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8068fd9:	21 d0                	and    %edx,%eax
 8068fdb:	c1 e0 02             	shl    $0x2,%eax
 8068fde:	01 85 50 ff ff ff    	add    %eax,-0xb0(%ebp)
 8068fe4:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8068fea:	0f b6 00             	movzbl (%eax),%eax
 8068fed:	0f b6 c0             	movzbl %al,%eax
 8068ff0:	8b 95 3c ff ff ff    	mov    -0xc4(%ebp),%edx
 8068ff6:	89 55 80             	mov    %edx,-0x80(%ebp)
 8068ff9:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8068ffc:	8b 45 80             	mov    -0x80(%ebp),%eax
 8068fff:	8b 50 04             	mov    0x4(%eax),%edx
 8069002:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8069005:	01 c2                	add    %eax,%edx
 8069007:	8b 45 80             	mov    -0x80(%ebp),%eax
 806900a:	89 50 04             	mov    %edx,0x4(%eax)
 806900d:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8069013:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8069017:	0f b7 c0             	movzwl %ax,%eax
 806901a:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 8069020:	83 bd 54 ff ff ff 0f 	cmpl   $0xf,-0xac(%ebp)
 8069027:	0f 87 d6 00 00 00    	ja     8069103 <ReadSymbolCodeLengths+0x383>
 806902d:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069033:	89 45 88             	mov    %eax,-0x78(%ebp)
 8069036:	8d 85 28 ff ff ff    	lea    -0xd8(%ebp),%eax
 806903c:	89 45 8c             	mov    %eax,-0x74(%ebp)
 806903f:	8d 85 2c ff ff ff    	lea    -0xd4(%ebp),%eax
 8069045:	89 45 90             	mov    %eax,-0x70(%ebp)
 8069048:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax
 806904e:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8069051:	8d 85 34 ff ff ff    	lea    -0xcc(%ebp),%eax
 8069057:	89 45 98             	mov    %eax,-0x68(%ebp)
 806905a:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8069060:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8069063:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 8069069:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806906c:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 8069072:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8069075:	8b 45 90             	mov    -0x70(%ebp),%eax
 8069078:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 806907e:	83 7d 88 00          	cmpl   $0x0,-0x78(%ebp)
 8069082:	74 6d                	je     80690f1 <ReadSymbolCodeLengths+0x371>
 8069084:	8b 45 88             	mov    -0x78(%ebp),%eax
 8069087:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806908e:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069091:	01 d0                	add    %edx,%eax
 8069093:	8b 00                	mov    (%eax),%eax
 8069095:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8069098:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806909b:	01 c2                	add    %eax,%edx
 806909d:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80690a0:	8b 00                	mov    (%eax),%eax
 80690a2:	66 89 02             	mov    %ax,(%edx)
 80690a5:	8b 45 88             	mov    -0x78(%ebp),%eax
 80690a8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80690af:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80690b2:	01 c2                	add    %eax,%edx
 80690b4:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80690b7:	8b 00                	mov    (%eax),%eax
 80690b9:	89 02                	mov    %eax,(%edx)
 80690bb:	8b 45 98             	mov    -0x68(%ebp),%eax
 80690be:	8b 55 88             	mov    -0x78(%ebp),%edx
 80690c1:	89 10                	mov    %edx,(%eax)
 80690c3:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80690c6:	8b 10                	mov    (%eax),%edx
 80690c8:	8b 45 88             	mov    -0x78(%ebp),%eax
 80690cb:	be 00 80 00 00       	mov    $0x8000,%esi
 80690d0:	89 c1                	mov    %eax,%ecx
 80690d2:	d3 ee                	shr    %cl,%esi
 80690d4:	89 f0                	mov    %esi,%eax
 80690d6:	29 c2                	sub    %eax,%edx
 80690d8:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80690db:	89 10                	mov    %edx,(%eax)
 80690dd:	8b 45 88             	mov    -0x78(%ebp),%eax
 80690e0:	8d 14 00             	lea    (%eax,%eax,1),%edx
 80690e3:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80690e6:	01 d0                	add    %edx,%eax
 80690e8:	0f b7 10             	movzwl (%eax),%edx
 80690eb:	83 c2 01             	add    $0x1,%edx
 80690ee:	66 89 10             	mov    %dx,(%eax)
 80690f1:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80690f4:	8b 00                	mov    (%eax),%eax
 80690f6:	8d 50 01             	lea    0x1(%eax),%edx
 80690f9:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80690fc:	89 10                	mov    %edx,(%eax)
 80690fe:	e9 55 02 00 00       	jmp    8069358 <ReadSymbolCodeLengths+0x5d8>
 8069103:	83 bd 54 ff ff ff 10 	cmpl   $0x10,-0xac(%ebp)
 806910a:	75 07                	jne    8069113 <ReadSymbolCodeLengths+0x393>
 806910c:	b8 02 00 00 00       	mov    $0x2,%eax
 8069111:	eb 05                	jmp    8069118 <ReadSymbolCodeLengths+0x398>
 8069113:	b8 03 00 00 00       	mov    $0x3,%eax
 8069118:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 806911e:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8069124:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8069127:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806912a:	8b 10                	mov    (%eax),%edx
 806912c:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806912f:	8b 40 04             	mov    0x4(%eax),%eax
 8069132:	89 c1                	mov    %eax,%ecx
 8069134:	d3 ea                	shr    %cl,%edx
 8069136:	89 d0                	mov    %edx,%eax
 8069138:	89 c2                	mov    %eax,%edx
 806913a:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8069140:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8069143:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8069146:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806914d:	21 d0                	and    %edx,%eax
 806914f:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 8069155:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806915b:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806915e:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8069164:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8069167:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806916a:	8b 50 04             	mov    0x4(%eax),%edx
 806916d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8069170:	01 c2                	add    %eax,%edx
 8069172:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8069175:	89 50 04             	mov    %edx,0x4(%eax)
 8069178:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806917e:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8069181:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 8069187:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806918a:	8b 45 08             	mov    0x8(%ebp),%eax
 806918d:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8069190:	8d 85 28 ff ff ff    	lea    -0xd8(%ebp),%eax
 8069196:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8069199:	8d 85 2c ff ff ff    	lea    -0xd4(%ebp),%eax
 806919f:	89 45 c8             	mov    %eax,-0x38(%ebp)
 80691a2:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax
 80691a8:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80691ab:	8d 85 34 ff ff ff    	lea    -0xcc(%ebp),%eax
 80691b1:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80691b4:	8d 85 38 ff ff ff    	lea    -0xc8(%ebp),%eax
 80691ba:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80691bd:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80691c3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80691c6:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 80691cc:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80691cf:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 80691d5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80691d8:	c7 45 e4 03 00 00 00 	movl   $0x3,-0x1c(%ebp)
 80691df:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 80691e6:	83 7d b8 10          	cmpl   $0x10,-0x48(%ebp)
 80691ea:	75 0f                	jne    80691fb <ReadSymbolCodeLengths+0x47b>
 80691ec:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80691ef:	8b 00                	mov    (%eax),%eax
 80691f1:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80691f4:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%ebp)
 80691fb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80691fe:	8b 00                	mov    (%eax),%eax
 8069200:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 8069203:	74 11                	je     8069216 <ReadSymbolCodeLengths+0x496>
 8069205:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069208:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 806920e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8069211:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8069214:	89 10                	mov    %edx,(%eax)
 8069216:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069219:	8b 00                	mov    (%eax),%eax
 806921b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 806921e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069221:	8b 00                	mov    (%eax),%eax
 8069223:	85 c0                	test   %eax,%eax
 8069225:	74 1e                	je     8069245 <ReadSymbolCodeLengths+0x4c5>
 8069227:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806922a:	8b 00                	mov    (%eax),%eax
 806922c:	8d 50 fe             	lea    -0x2(%eax),%edx
 806922f:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069232:	89 10                	mov    %edx,(%eax)
 8069234:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069237:	8b 10                	mov    (%eax),%edx
 8069239:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806923c:	89 c1                	mov    %eax,%ecx
 806923e:	d3 e2                	shl    %cl,%edx
 8069240:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069243:	89 10                	mov    %edx,(%eax)
 8069245:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069248:	8b 10                	mov    (%eax),%edx
 806924a:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806924d:	01 d0                	add    %edx,%eax
 806924f:	8d 50 03             	lea    0x3(%eax),%edx
 8069252:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069255:	89 10                	mov    %edx,(%eax)
 8069257:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806925a:	8b 00                	mov    (%eax),%eax
 806925c:	2b 45 ec             	sub    -0x14(%ebp),%eax
 806925f:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8069262:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069265:	8b 10                	mov    (%eax),%edx
 8069267:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806926a:	01 d0                	add    %edx,%eax
 806926c:	39 45 c0             	cmp    %eax,-0x40(%ebp)
 806926f:	73 16                	jae    8069287 <ReadSymbolCodeLengths+0x507>
 8069271:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069274:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8069277:	89 10                	mov    %edx,(%eax)
 8069279:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806927c:	c7 00 ff ff 0f 00    	movl   $0xfffff,(%eax)
 8069282:	e9 d1 00 00 00       	jmp    8069358 <ReadSymbolCodeLengths+0x5d8>
 8069287:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806928a:	8b 00                	mov    (%eax),%eax
 806928c:	85 c0                	test   %eax,%eax
 806928e:	0f 84 b5 00 00 00    	je     8069349 <ReadSymbolCodeLengths+0x5c9>
 8069294:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069297:	8b 10                	mov    (%eax),%edx
 8069299:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806929c:	01 d0                	add    %edx,%eax
 806929e:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80692a1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80692a4:	8b 00                	mov    (%eax),%eax
 80692a6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80692ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80692b0:	01 d0                	add    %edx,%eax
 80692b2:	8b 00                	mov    (%eax),%eax
 80692b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80692b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80692ba:	8d 14 00             	lea    (%eax,%eax,1),%edx
 80692bd:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80692c0:	01 c2                	add    %eax,%edx
 80692c2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80692c5:	8b 00                	mov    (%eax),%eax
 80692c7:	66 89 02             	mov    %ax,(%edx)
 80692ca:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80692cd:	8b 00                	mov    (%eax),%eax
 80692cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80692d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80692d5:	8b 00                	mov    (%eax),%eax
 80692d7:	8d 50 01             	lea    0x1(%eax),%edx
 80692da:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80692dd:	89 10                	mov    %edx,(%eax)
 80692df:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80692e2:	8b 00                	mov    (%eax),%eax
 80692e4:	39 45 f0             	cmp    %eax,-0x10(%ebp)
 80692e7:	75 ce                	jne    80692b7 <ReadSymbolCodeLengths+0x537>
 80692e9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80692ec:	8b 00                	mov    (%eax),%eax
 80692ee:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80692f5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80692f8:	01 c2                	add    %eax,%edx
 80692fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80692fd:	89 02                	mov    %eax,(%edx)
 80692ff:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8069302:	8b 10                	mov    (%eax),%edx
 8069304:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8069307:	8b 00                	mov    (%eax),%eax
 8069309:	b9 0f 00 00 00       	mov    $0xf,%ecx
 806930e:	29 c1                	sub    %eax,%ecx
 8069310:	89 c8                	mov    %ecx,%eax
 8069312:	8b 75 bc             	mov    -0x44(%ebp),%esi
 8069315:	89 c1                	mov    %eax,%ecx
 8069317:	d3 e6                	shl    %cl,%esi
 8069319:	89 f0                	mov    %esi,%eax
 806931b:	29 c2                	sub    %eax,%edx
 806931d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8069320:	89 10                	mov    %edx,(%eax)
 8069322:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8069325:	8b 00                	mov    (%eax),%eax
 8069327:	8d 14 00             	lea    (%eax,%eax,1),%edx
 806932a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806932d:	01 c2                	add    %eax,%edx
 806932f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8069332:	8b 00                	mov    (%eax),%eax
 8069334:	8d 0c 00             	lea    (%eax,%eax,1),%ecx
 8069337:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806933a:	01 c8                	add    %ecx,%eax
 806933c:	0f b7 08             	movzwl (%eax),%ecx
 806933f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8069342:	01 c8                	add    %ecx,%eax
 8069344:	66 89 02             	mov    %ax,(%edx)
 8069347:	eb 0f                	jmp    8069358 <ReadSymbolCodeLengths+0x5d8>
 8069349:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806934c:	8b 10                	mov    (%eax),%edx
 806934e:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8069351:	01 c2                	add    %eax,%edx
 8069353:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069356:	89 10                	mov    %edx,(%eax)
 8069358:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806935e:	3b 45 08             	cmp    0x8(%ebp),%eax
 8069361:	73 0e                	jae    8069371 <ReadSymbolCodeLengths+0x5f1>
 8069363:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8069369:	85 c0                	test   %eax,%eax
 806936b:	0f 85 df fa ff ff    	jne    8068e50 <ReadSymbolCodeLengths+0xd0>
 8069371:	8b 95 30 ff ff ff    	mov    -0xd0(%ebp),%edx
 8069377:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806937d:	89 50 20             	mov    %edx,0x20(%eax)
 8069380:	b8 01 00 00 00       	mov    $0x1,%eax
 8069385:	81 c4 e0 00 00 00    	add    $0xe0,%esp
 806938b:	5b                   	pop    %ebx
 806938c:	5e                   	pop    %esi
 806938d:	5d                   	pop    %ebp
 806938e:	c3                   	ret    

0806938f <SafeReadSymbolCodeLengths>:
 806938f:	55                   	push   %ebp
 8069390:	89 e5                	mov    %esp,%ebp
 8069392:	57                   	push   %edi
 8069393:	56                   	push   %esi
 8069394:	53                   	push   %ebx
 8069395:	81 ec c0 00 00 00    	sub    $0xc0,%esp
 806939b:	e8 50 07 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80693a0:	81 c3 60 6c 04 00    	add    $0x46c60,%ebx
 80693a6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80693a9:	83 c0 08             	add    $0x8,%eax
 80693ac:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 80693b2:	8b 45 0c             	mov    0xc(%ebp),%eax
 80693b5:	05 6c 02 00 00       	add    $0x26c,%eax
 80693ba:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80693c0:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%ebp)
 80693c7:	00 00 00 
 80693ca:	e9 a6 05 00 00       	jmp    8069975 <SafeReadSymbolCodeLengths+0x5e6>
 80693cf:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80693d5:	83 c0 24             	add    $0x24,%eax
 80693d8:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 80693de:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%ebp)
 80693e5:	00 00 00 
 80693e8:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%ebp)
 80693ef:	0f 84 ab 00 00 00    	je     80694a0 <SafeReadSymbolCodeLengths+0x111>
 80693f5:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80693fb:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 8069401:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069407:	8b 40 0c             	mov    0xc(%eax),%eax
 806940a:	85 c0                	test   %eax,%eax
 806940c:	75 07                	jne    8069415 <SafeReadSymbolCodeLengths+0x86>
 806940e:	b8 00 00 00 00       	mov    $0x0,%eax
 8069413:	eb 7d                	jmp    8069492 <SafeReadSymbolCodeLengths+0x103>
 8069415:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806941b:	8b 00                	mov    (%eax),%eax
 806941d:	c1 e8 08             	shr    $0x8,%eax
 8069420:	89 c2                	mov    %eax,%edx
 8069422:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069428:	89 10                	mov    %edx,(%eax)
 806942a:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069430:	8b 10                	mov    (%eax),%edx
 8069432:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069438:	8b 40 08             	mov    0x8(%eax),%eax
 806943b:	0f b6 00             	movzbl (%eax),%eax
 806943e:	0f b6 c0             	movzbl %al,%eax
 8069441:	c1 e0 18             	shl    $0x18,%eax
 8069444:	09 c2                	or     %eax,%edx
 8069446:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806944c:	89 10                	mov    %edx,(%eax)
 806944e:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069454:	8b 40 04             	mov    0x4(%eax),%eax
 8069457:	8d 50 f8             	lea    -0x8(%eax),%edx
 806945a:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069460:	89 50 04             	mov    %edx,0x4(%eax)
 8069463:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069469:	8b 40 0c             	mov    0xc(%eax),%eax
 806946c:	8d 50 ff             	lea    -0x1(%eax),%edx
 806946f:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069475:	89 50 0c             	mov    %edx,0xc(%eax)
 8069478:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806947e:	8b 40 08             	mov    0x8(%eax),%eax
 8069481:	8d 50 01             	lea    0x1(%eax),%edx
 8069484:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806948a:	89 50 08             	mov    %edx,0x8(%eax)
 806948d:	b8 01 00 00 00       	mov    $0x1,%eax
 8069492:	85 c0                	test   %eax,%eax
 8069494:	75 0a                	jne    80694a0 <SafeReadSymbolCodeLengths+0x111>
 8069496:	b8 02 00 00 00       	mov    $0x2,%eax
 806949b:	e9 f9 04 00 00       	jmp    8069999 <SafeReadSymbolCodeLengths+0x60a>
 80694a0:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%ebp)
 80694a7:	00 00 00 
 80694aa:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80694b0:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 80694b6:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80694bc:	8b 40 04             	mov    0x4(%eax),%eax
 80694bf:	ba 20 00 00 00       	mov    $0x20,%edx
 80694c4:	29 c2                	sub    %eax,%edx
 80694c6:	89 d0                	mov    %edx,%eax
 80694c8:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 80694ce:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%ebp)
 80694d5:	74 29                	je     8069500 <SafeReadSymbolCodeLengths+0x171>
 80694d7:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80694dd:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 80694e3:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80694e9:	8b 10                	mov    (%eax),%edx
 80694eb:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80694f1:	8b 40 04             	mov    0x4(%eax),%eax
 80694f4:	89 c1                	mov    %eax,%ecx
 80694f6:	d3 ea                	shr    %cl,%edx
 80694f8:	89 d0                	mov    %edx,%eax
 80694fa:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 8069500:	c7 85 7c ff ff ff 05 	movl   $0x5,-0x84(%ebp)
 8069507:	00 00 00 
 806950a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8069510:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8069517:	23 85 50 ff ff ff    	and    -0xb0(%ebp),%eax
 806951d:	c1 e0 02             	shl    $0x2,%eax
 8069520:	01 85 5c ff ff ff    	add    %eax,-0xa4(%ebp)
 8069526:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806952c:	0f b6 00             	movzbl (%eax),%eax
 806952f:	0f b6 c0             	movzbl %al,%eax
 8069532:	3b 85 60 ff ff ff    	cmp    -0xa0(%ebp),%eax
 8069538:	76 0f                	jbe    8069549 <SafeReadSymbolCodeLengths+0x1ba>
 806953a:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%ebp)
 8069541:	00 00 00 
 8069544:	e9 2c 04 00 00       	jmp    8069975 <SafeReadSymbolCodeLengths+0x5e6>
 8069549:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806954f:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8069553:	0f b7 c0             	movzwl %ax,%eax
 8069556:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806955c:	83 bd 64 ff ff ff 0f 	cmpl   $0xf,-0x9c(%ebp)
 8069563:	0f 87 40 01 00 00    	ja     80696a9 <SafeReadSymbolCodeLengths+0x31a>
 8069569:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806956f:	0f b6 00             	movzbl (%eax),%eax
 8069572:	0f b6 c0             	movzbl %al,%eax
 8069575:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 806957b:	89 55 80             	mov    %edx,-0x80(%ebp)
 806957e:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8069581:	8b 45 80             	mov    -0x80(%ebp),%eax
 8069584:	8b 50 04             	mov    0x4(%eax),%edx
 8069587:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806958a:	01 c2                	add    %eax,%edx
 806958c:	8b 45 80             	mov    -0x80(%ebp),%eax
 806958f:	89 50 04             	mov    %edx,0x4(%eax)
 8069592:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8069598:	8d b8 48 06 00 00    	lea    0x648(%eax),%edi
 806959e:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80695a4:	05 da 06 00 00       	add    $0x6da,%eax
 80695a9:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 80695af:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80695b5:	8b b0 a4 00 00 00    	mov    0xa4(%eax),%esi
 80695bb:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80695c1:	8d 48 14             	lea    0x14(%eax),%ecx
 80695c4:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%ebp)
 80695ca:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80695d0:	8d 50 20             	lea    0x20(%eax),%edx
 80695d3:	89 95 38 ff ff ff    	mov    %edx,-0xc8(%ebp)
 80695d9:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80695df:	8d 48 1c             	lea    0x1c(%eax),%ecx
 80695e2:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80695e8:	8d 50 18             	lea    0x18(%eax),%edx
 80695eb:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80695f1:	89 45 88             	mov    %eax,-0x78(%ebp)
 80695f4:	89 55 8c             	mov    %edx,-0x74(%ebp)
 80695f7:	89 4d 90             	mov    %ecx,-0x70(%ebp)
 80695fa:	8b 95 38 ff ff ff    	mov    -0xc8(%ebp),%edx
 8069600:	89 55 94             	mov    %edx,-0x6c(%ebp)
 8069603:	8b 8d 3c ff ff ff    	mov    -0xc4(%ebp),%ecx
 8069609:	89 4d 98             	mov    %ecx,-0x68(%ebp)
 806960c:	89 75 9c             	mov    %esi,-0x64(%ebp)
 806960f:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8069615:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8069618:	89 7d a4             	mov    %edi,-0x5c(%ebp)
 806961b:	8b 45 90             	mov    -0x70(%ebp),%eax
 806961e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8069624:	83 7d 88 00          	cmpl   $0x0,-0x78(%ebp)
 8069628:	74 6d                	je     8069697 <SafeReadSymbolCodeLengths+0x308>
 806962a:	8b 45 88             	mov    -0x78(%ebp),%eax
 806962d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8069634:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069637:	01 d0                	add    %edx,%eax
 8069639:	8b 00                	mov    (%eax),%eax
 806963b:	8d 14 00             	lea    (%eax,%eax,1),%edx
 806963e:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8069641:	01 c2                	add    %eax,%edx
 8069643:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8069646:	8b 00                	mov    (%eax),%eax
 8069648:	66 89 02             	mov    %ax,(%edx)
 806964b:	8b 45 88             	mov    -0x78(%ebp),%eax
 806964e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8069655:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069658:	01 c2                	add    %eax,%edx
 806965a:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806965d:	8b 00                	mov    (%eax),%eax
 806965f:	89 02                	mov    %eax,(%edx)
 8069661:	8b 45 98             	mov    -0x68(%ebp),%eax
 8069664:	8b 55 88             	mov    -0x78(%ebp),%edx
 8069667:	89 10                	mov    %edx,(%eax)
 8069669:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806966c:	8b 10                	mov    (%eax),%edx
 806966e:	8b 45 88             	mov    -0x78(%ebp),%eax
 8069671:	be 00 80 00 00       	mov    $0x8000,%esi
 8069676:	89 c1                	mov    %eax,%ecx
 8069678:	d3 ee                	shr    %cl,%esi
 806967a:	89 f0                	mov    %esi,%eax
 806967c:	29 c2                	sub    %eax,%edx
 806967e:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8069681:	89 10                	mov    %edx,(%eax)
 8069683:	8b 45 88             	mov    -0x78(%ebp),%eax
 8069686:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8069689:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806968c:	01 d0                	add    %edx,%eax
 806968e:	0f b7 10             	movzwl (%eax),%edx
 8069691:	83 c2 01             	add    $0x1,%edx
 8069694:	66 89 10             	mov    %dx,(%eax)
 8069697:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806969a:	8b 00                	mov    (%eax),%eax
 806969c:	8d 50 01             	lea    0x1(%eax),%edx
 806969f:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80696a2:	89 10                	mov    %edx,(%eax)
 80696a4:	e9 cc 02 00 00       	jmp    8069975 <SafeReadSymbolCodeLengths+0x5e6>
 80696a9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80696af:	83 e8 0e             	sub    $0xe,%eax
 80696b2:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 80696b8:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 80696be:	0f b6 00             	movzbl (%eax),%eax
 80696c1:	0f b6 c0             	movzbl %al,%eax
 80696c4:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
 80696ca:	89 c1                	mov    %eax,%ecx
 80696cc:	d3 ea                	shr    %cl,%edx
 80696ce:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80696d4:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80696d7:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80696da:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80696e1:	21 d0                	and    %edx,%eax
 80696e3:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 80696e9:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 80696ef:	0f b6 00             	movzbl (%eax),%eax
 80696f2:	0f b6 d0             	movzbl %al,%edx
 80696f5:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80696fb:	01 d0                	add    %edx,%eax
 80696fd:	3b 85 60 ff ff ff    	cmp    -0xa0(%ebp),%eax
 8069703:	76 0f                	jbe    8069714 <SafeReadSymbolCodeLengths+0x385>
 8069705:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%ebp)
 806970c:	00 00 00 
 806970f:	e9 61 02 00 00       	jmp    8069975 <SafeReadSymbolCodeLengths+0x5e6>
 8069714:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806971a:	0f b6 00             	movzbl (%eax),%eax
 806971d:	0f b6 d0             	movzbl %al,%edx
 8069720:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8069726:	01 c2                	add    %eax,%edx
 8069728:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806972e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8069731:	89 55 b0             	mov    %edx,-0x50(%ebp)
 8069734:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8069737:	8b 50 04             	mov    0x4(%eax),%edx
 806973a:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806973d:	01 c2                	add    %eax,%edx
 806973f:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8069742:	89 50 04             	mov    %edx,0x4(%eax)
 8069745:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806974b:	05 48 06 00 00       	add    $0x648,%eax
 8069750:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 8069756:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806975c:	8d b8 da 06 00 00    	lea    0x6da(%eax),%edi
 8069762:	89 bd 3c ff ff ff    	mov    %edi,-0xc4(%ebp)
 8069768:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806976e:	8b b0 a4 00 00 00    	mov    0xa4(%eax),%esi
 8069774:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806977a:	8d 48 10             	lea    0x10(%eax),%ecx
 806977d:	89 8d 38 ff ff ff    	mov    %ecx,-0xc8(%ebp)
 8069783:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8069789:	8d 50 14             	lea    0x14(%eax),%edx
 806978c:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%ebp)
 8069792:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8069798:	8d 78 20             	lea    0x20(%eax),%edi
 806979b:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80697a1:	8d 48 1c             	lea    0x1c(%eax),%ecx
 80697a4:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80697aa:	8d 50 18             	lea    0x18(%eax),%edx
 80697ad:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80697b3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80697b6:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80697bc:	89 45 b8             	mov    %eax,-0x48(%ebp)
 80697bf:	8b 45 08             	mov    0x8(%ebp),%eax
 80697c2:	89 45 bc             	mov    %eax,-0x44(%ebp)
 80697c5:	89 55 c0             	mov    %edx,-0x40(%ebp)
 80697c8:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
 80697cb:	89 7d c8             	mov    %edi,-0x38(%ebp)
 80697ce:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 80697d4:	89 55 cc             	mov    %edx,-0x34(%ebp)
 80697d7:	8b 8d 38 ff ff ff    	mov    -0xc8(%ebp),%ecx
 80697dd:	89 4d d0             	mov    %ecx,-0x30(%ebp)
 80697e0:	89 75 d4             	mov    %esi,-0x2c(%ebp)
 80697e3:	8b bd 3c ff ff ff    	mov    -0xc4(%ebp),%edi
 80697e9:	89 7d d8             	mov    %edi,-0x28(%ebp)
 80697ec:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 80697f2:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80697f5:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%ebp)
 80697fc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 8069803:	83 7d b4 10          	cmpl   $0x10,-0x4c(%ebp)
 8069807:	75 0f                	jne    8069818 <SafeReadSymbolCodeLengths+0x489>
 8069809:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806980c:	8b 00                	mov    (%eax),%eax
 806980e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8069811:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
 8069818:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806981b:	8b 00                	mov    (%eax),%eax
 806981d:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 8069820:	74 11                	je     8069833 <SafeReadSymbolCodeLengths+0x4a4>
 8069822:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069825:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 806982b:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806982e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8069831:	89 10                	mov    %edx,(%eax)
 8069833:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069836:	8b 00                	mov    (%eax),%eax
 8069838:	89 45 e8             	mov    %eax,-0x18(%ebp)
 806983b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806983e:	8b 00                	mov    (%eax),%eax
 8069840:	85 c0                	test   %eax,%eax
 8069842:	74 1e                	je     8069862 <SafeReadSymbolCodeLengths+0x4d3>
 8069844:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069847:	8b 00                	mov    (%eax),%eax
 8069849:	8d 50 fe             	lea    -0x2(%eax),%edx
 806984c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806984f:	89 10                	mov    %edx,(%eax)
 8069851:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069854:	8b 10                	mov    (%eax),%edx
 8069856:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8069859:	89 c1                	mov    %eax,%ecx
 806985b:	d3 e2                	shl    %cl,%edx
 806985d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069860:	89 10                	mov    %edx,(%eax)
 8069862:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069865:	8b 10                	mov    (%eax),%edx
 8069867:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806986a:	01 d0                	add    %edx,%eax
 806986c:	8d 50 03             	lea    0x3(%eax),%edx
 806986f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069872:	89 10                	mov    %edx,(%eax)
 8069874:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069877:	8b 00                	mov    (%eax),%eax
 8069879:	2b 45 e8             	sub    -0x18(%ebp),%eax
 806987c:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806987f:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069882:	8b 10                	mov    (%eax),%edx
 8069884:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8069887:	01 d0                	add    %edx,%eax
 8069889:	39 45 bc             	cmp    %eax,-0x44(%ebp)
 806988c:	73 16                	jae    80698a4 <SafeReadSymbolCodeLengths+0x515>
 806988e:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069891:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8069894:	89 10                	mov    %edx,(%eax)
 8069896:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8069899:	c7 00 ff ff 0f 00    	movl   $0xfffff,(%eax)
 806989f:	e9 d1 00 00 00       	jmp    8069975 <SafeReadSymbolCodeLengths+0x5e6>
 80698a4:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80698a7:	8b 00                	mov    (%eax),%eax
 80698a9:	85 c0                	test   %eax,%eax
 80698ab:	0f 84 b5 00 00 00    	je     8069966 <SafeReadSymbolCodeLengths+0x5d7>
 80698b1:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80698b4:	8b 10                	mov    (%eax),%edx
 80698b6:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80698b9:	01 d0                	add    %edx,%eax
 80698bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80698be:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80698c1:	8b 00                	mov    (%eax),%eax
 80698c3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80698ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80698cd:	01 d0                	add    %edx,%eax
 80698cf:	8b 00                	mov    (%eax),%eax
 80698d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80698d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80698d7:	8d 14 00             	lea    (%eax,%eax,1),%edx
 80698da:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80698dd:	01 c2                	add    %eax,%edx
 80698df:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80698e2:	8b 00                	mov    (%eax),%eax
 80698e4:	66 89 02             	mov    %ax,(%edx)
 80698e7:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80698ea:	8b 00                	mov    (%eax),%eax
 80698ec:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80698ef:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80698f2:	8b 00                	mov    (%eax),%eax
 80698f4:	8d 50 01             	lea    0x1(%eax),%edx
 80698f7:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80698fa:	89 10                	mov    %edx,(%eax)
 80698fc:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80698ff:	8b 00                	mov    (%eax),%eax
 8069901:	39 45 ec             	cmp    %eax,-0x14(%ebp)
 8069904:	75 ce                	jne    80698d4 <SafeReadSymbolCodeLengths+0x545>
 8069906:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8069909:	8b 00                	mov    (%eax),%eax
 806990b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8069912:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069915:	01 c2                	add    %eax,%edx
 8069917:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806991a:	89 02                	mov    %eax,(%edx)
 806991c:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806991f:	8b 10                	mov    (%eax),%edx
 8069921:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8069924:	8b 00                	mov    (%eax),%eax
 8069926:	b9 0f 00 00 00       	mov    $0xf,%ecx
 806992b:	29 c1                	sub    %eax,%ecx
 806992d:	89 c8                	mov    %ecx,%eax
 806992f:	8b 75 b8             	mov    -0x48(%ebp),%esi
 8069932:	89 c1                	mov    %eax,%ecx
 8069934:	d3 e6                	shl    %cl,%esi
 8069936:	89 f0                	mov    %esi,%eax
 8069938:	29 c2                	sub    %eax,%edx
 806993a:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806993d:	89 10                	mov    %edx,(%eax)
 806993f:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8069942:	8b 00                	mov    (%eax),%eax
 8069944:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8069947:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806994a:	01 c2                	add    %eax,%edx
 806994c:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806994f:	8b 00                	mov    (%eax),%eax
 8069951:	8d 0c 00             	lea    (%eax,%eax,1),%ecx
 8069954:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8069957:	01 c8                	add    %ecx,%eax
 8069959:	0f b7 08             	movzwl (%eax),%ecx
 806995c:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806995f:	01 c8                	add    %ecx,%eax
 8069961:	66 89 02             	mov    %ax,(%edx)
 8069964:	eb 0f                	jmp    8069975 <SafeReadSymbolCodeLengths+0x5e6>
 8069966:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069969:	8b 10                	mov    (%eax),%edx
 806996b:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806996e:	01 c2                	add    %eax,%edx
 8069970:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069973:	89 10                	mov    %edx,(%eax)
 8069975:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806997b:	8b 40 18             	mov    0x18(%eax),%eax
 806997e:	3b 45 08             	cmp    0x8(%ebp),%eax
 8069981:	73 11                	jae    8069994 <SafeReadSymbolCodeLengths+0x605>
 8069983:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8069989:	8b 40 20             	mov    0x20(%eax),%eax
 806998c:	85 c0                	test   %eax,%eax
 806998e:	0f 85 3b fa ff ff    	jne    80693cf <SafeReadSymbolCodeLengths+0x40>
 8069994:	b8 01 00 00 00       	mov    $0x1,%eax
 8069999:	81 c4 c0 00 00 00    	add    $0xc0,%esp
 806999f:	5b                   	pop    %ebx
 80699a0:	5e                   	pop    %esi
 80699a1:	5f                   	pop    %edi
 80699a2:	5d                   	pop    %ebp
 80699a3:	c3                   	ret    

080699a4 <ReadCodeLengthCodeLengths>:
 80699a4:	55                   	push   %ebp
 80699a5:	89 e5                	mov    %esp,%ebp
 80699a7:	53                   	push   %ebx
 80699a8:	83 ec 50             	sub    $0x50,%esp
 80699ab:	e8 40 01 fe ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80699b0:	81 c3 50 66 04 00    	add    $0x46650,%ebx
 80699b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80699b9:	83 c0 08             	add    $0x8,%eax
 80699bc:	89 45 c0             	mov    %eax,-0x40(%ebp)
 80699bf:	8b 45 08             	mov    0x8(%ebp),%eax
 80699c2:	05 6c 02 00 00       	add    $0x26c,%eax
 80699c7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 80699ca:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80699cd:	8b 40 1c             	mov    0x1c(%eax),%eax
 80699d0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80699d3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80699d6:	8b 40 20             	mov    0x20(%eax),%eax
 80699d9:	89 45 b8             	mov    %eax,-0x48(%ebp)
 80699dc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80699df:	8b 40 0c             	mov    0xc(%eax),%eax
 80699e2:	89 45 bc             	mov    %eax,-0x44(%ebp)
 80699e5:	e9 28 02 00 00       	jmp    8069c12 <ReadCodeLengthCodeLengths+0x26e>
 80699ea:	8d 93 a4 98 fd ff    	lea    -0x2675c(%ebx),%edx
 80699f0:	8b 45 bc             	mov    -0x44(%ebp),%eax
 80699f3:	01 d0                	add    %edx,%eax
 80699f5:	0f b6 00             	movzbl (%eax),%eax
 80699f8:	88 45 af             	mov    %al,-0x51(%ebp)
 80699fb:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80699fe:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8069a01:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%ebp)
 8069a08:	8d 45 b0             	lea    -0x50(%ebp),%eax
 8069a0b:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8069a0e:	eb 7e                	jmp    8069a8e <ReadCodeLengthCodeLengths+0xea>
 8069a10:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8069a13:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8069a16:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a19:	8b 40 0c             	mov    0xc(%eax),%eax
 8069a1c:	85 c0                	test   %eax,%eax
 8069a1e:	75 07                	jne    8069a27 <ReadCodeLengthCodeLengths+0x83>
 8069a20:	b8 00 00 00 00       	mov    $0x0,%eax
 8069a25:	eb 5c                	jmp    8069a83 <ReadCodeLengthCodeLengths+0xdf>
 8069a27:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a2a:	8b 00                	mov    (%eax),%eax
 8069a2c:	c1 e8 08             	shr    $0x8,%eax
 8069a2f:	89 c2                	mov    %eax,%edx
 8069a31:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a34:	89 10                	mov    %edx,(%eax)
 8069a36:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a39:	8b 10                	mov    (%eax),%edx
 8069a3b:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a3e:	8b 40 08             	mov    0x8(%eax),%eax
 8069a41:	0f b6 00             	movzbl (%eax),%eax
 8069a44:	0f b6 c0             	movzbl %al,%eax
 8069a47:	c1 e0 18             	shl    $0x18,%eax
 8069a4a:	09 c2                	or     %eax,%edx
 8069a4c:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a4f:	89 10                	mov    %edx,(%eax)
 8069a51:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a54:	8b 40 04             	mov    0x4(%eax),%eax
 8069a57:	8d 50 f8             	lea    -0x8(%eax),%edx
 8069a5a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a5d:	89 50 04             	mov    %edx,0x4(%eax)
 8069a60:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a63:	8b 40 0c             	mov    0xc(%eax),%eax
 8069a66:	8d 50 ff             	lea    -0x1(%eax),%edx
 8069a69:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a6c:	89 50 0c             	mov    %edx,0xc(%eax)
 8069a6f:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a72:	8b 40 08             	mov    0x8(%eax),%eax
 8069a75:	8d 50 01             	lea    0x1(%eax),%edx
 8069a78:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8069a7b:	89 50 08             	mov    %edx,0x8(%eax)
 8069a7e:	b8 01 00 00 00       	mov    $0x1,%eax
 8069a83:	85 c0                	test   %eax,%eax
 8069a85:	75 07                	jne    8069a8e <ReadCodeLengthCodeLengths+0xea>
 8069a87:	b8 00 00 00 00       	mov    $0x0,%eax
 8069a8c:	eb 53                	jmp    8069ae1 <ReadCodeLengthCodeLengths+0x13d>
 8069a8e:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8069a91:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8069a94:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8069a97:	8b 40 04             	mov    0x4(%eax),%eax
 8069a9a:	ba 20 00 00 00       	mov    $0x20,%edx
 8069a9f:	29 c2                	sub    %eax,%edx
 8069aa1:	89 d0                	mov    %edx,%eax
 8069aa3:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
 8069aa6:	0f 87 64 ff ff ff    	ja     8069a10 <ReadCodeLengthCodeLengths+0x6c>
 8069aac:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8069aaf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8069ab2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8069ab5:	8b 10                	mov    (%eax),%edx
 8069ab7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8069aba:	8b 40 04             	mov    0x4(%eax),%eax
 8069abd:	89 c1                	mov    %eax,%ecx
 8069abf:	d3 ea                	shr    %cl,%edx
 8069ac1:	89 d0                	mov    %edx,%eax
 8069ac3:	89 c2                	mov    %eax,%edx
 8069ac5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8069ac8:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8069acb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8069ace:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8069ad5:	21 c2                	and    %eax,%edx
 8069ad7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8069ada:	89 10                	mov    %edx,(%eax)
 8069adc:	b8 01 00 00 00       	mov    $0x1,%eax
 8069ae1:	85 c0                	test   %eax,%eax
 8069ae3:	0f 94 c0             	sete   %al
 8069ae6:	0f b6 c0             	movzbl %al,%eax
 8069ae9:	85 c0                	test   %eax,%eax
 8069aeb:	0f 84 86 00 00 00    	je     8069b77 <ReadCodeLengthCodeLengths+0x1d3>
 8069af1:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069af4:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8069af7:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8069afa:	8b 40 04             	mov    0x4(%eax),%eax
 8069afd:	ba 20 00 00 00       	mov    $0x20,%edx
 8069b02:	29 c2                	sub    %eax,%edx
 8069b04:	89 d0                	mov    %edx,%eax
 8069b06:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8069b09:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)
 8069b0d:	74 1f                	je     8069b2e <ReadCodeLengthCodeLengths+0x18a>
 8069b0f:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069b12:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8069b15:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8069b18:	8b 10                	mov    (%eax),%edx
 8069b1a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8069b1d:	8b 40 04             	mov    0x4(%eax),%eax
 8069b20:	89 c1                	mov    %eax,%ecx
 8069b22:	d3 ea                	shr    %cl,%edx
 8069b24:	89 d0                	mov    %edx,%eax
 8069b26:	83 e0 0f             	and    $0xf,%eax
 8069b29:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8069b2c:	eb 07                	jmp    8069b35 <ReadCodeLengthCodeLengths+0x191>
 8069b2e:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
 8069b35:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8069b38:	0f b6 84 03 b6 98 fd 	movzbl -0x2674a(%ebx,%eax,1),%eax
 8069b3f:	ff 
 8069b40:	0f b6 c0             	movzbl %al,%eax
 8069b43:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 8069b46:	76 2f                	jbe    8069b77 <ReadCodeLengthCodeLengths+0x1d3>
 8069b48:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069b4b:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8069b4e:	89 50 0c             	mov    %edx,0xc(%eax)
 8069b51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069b54:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 8069b57:	89 50 1c             	mov    %edx,0x1c(%eax)
 8069b5a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069b5d:	8b 55 b8             	mov    -0x48(%ebp),%edx
 8069b60:	89 50 20             	mov    %edx,0x20(%eax)
 8069b63:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069b66:	c7 40 08 04 00 00 00 	movl   $0x4,0x8(%eax)
 8069b6d:	b8 02 00 00 00       	mov    $0x2,%eax
 8069b72:	e9 bd 00 00 00       	jmp    8069c34 <ReadCodeLengthCodeLengths+0x290>
 8069b77:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8069b7a:	0f b6 84 03 c6 98 fd 	movzbl -0x2673a(%ebx,%eax,1),%eax
 8069b81:	ff 
 8069b82:	0f b6 c0             	movzbl %al,%eax
 8069b85:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8069b88:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8069b8b:	0f b6 84 03 b6 98 fd 	movzbl -0x2674a(%ebx,%eax,1),%eax
 8069b92:	ff 
 8069b93:	0f b6 c0             	movzbl %al,%eax
 8069b96:	8b 55 c0             	mov    -0x40(%ebp),%edx
 8069b99:	89 55 f4             	mov    %edx,-0xc(%ebp)
 8069b9c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8069b9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8069ba2:	8b 50 04             	mov    0x4(%eax),%edx
 8069ba5:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8069ba8:	01 c2                	add    %eax,%edx
 8069baa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8069bad:	89 50 04             	mov    %edx,0x4(%eax)
 8069bb0:	0f b6 45 af          	movzbl -0x51(%ebp),%eax
 8069bb4:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8069bb7:	89 d1                	mov    %edx,%ecx
 8069bb9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8069bbc:	88 8c 02 c8 06 00 00 	mov    %cl,0x6c8(%edx,%eax,1)
 8069bc3:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
 8069bc7:	74 45                	je     8069c0e <ReadCodeLengthCodeLengths+0x26a>
 8069bc9:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8069bcc:	ba 20 00 00 00       	mov    $0x20,%edx
 8069bd1:	89 c1                	mov    %eax,%ecx
 8069bd3:	d3 ea                	shr    %cl,%edx
 8069bd5:	89 d0                	mov    %edx,%eax
 8069bd7:	29 45 b8             	sub    %eax,-0x48(%ebp)
 8069bda:	83 45 b4 01          	addl   $0x1,-0x4c(%ebp)
 8069bde:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069be1:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8069be4:	81 c2 68 03 00 00    	add    $0x368,%edx
 8069bea:	0f b7 44 50 0a       	movzwl 0xa(%eax,%edx,2),%eax
 8069bef:	8d 48 01             	lea    0x1(%eax),%ecx
 8069bf2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069bf5:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8069bf8:	81 c2 68 03 00 00    	add    $0x368,%edx
 8069bfe:	66 89 4c 50 0a       	mov    %cx,0xa(%eax,%edx,2)
 8069c03:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8069c06:	83 e8 01             	sub    $0x1,%eax
 8069c09:	83 f8 1f             	cmp    $0x1f,%eax
 8069c0c:	77 0e                	ja     8069c1c <ReadCodeLengthCodeLengths+0x278>
 8069c0e:	83 45 bc 01          	addl   $0x1,-0x44(%ebp)
 8069c12:	83 7d bc 11          	cmpl   $0x11,-0x44(%ebp)
 8069c16:	0f 86 ce fd ff ff    	jbe    80699ea <ReadCodeLengthCodeLengths+0x46>
 8069c1c:	83 7d b4 01          	cmpl   $0x1,-0x4c(%ebp)
 8069c20:	74 0d                	je     8069c2f <ReadCodeLengthCodeLengths+0x28b>
 8069c22:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)
 8069c26:	74 07                	je     8069c2f <ReadCodeLengthCodeLengths+0x28b>
 8069c28:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
 8069c2d:	eb 05                	jmp    8069c34 <ReadCodeLengthCodeLengths+0x290>
 8069c2f:	b8 01 00 00 00       	mov    $0x1,%eax
 8069c34:	83 c4 50             	add    $0x50,%esp
 8069c37:	5b                   	pop    %ebx
 8069c38:	5d                   	pop    %ebp
 8069c39:	c3                   	ret    

08069c3a <ReadHuffmanCode>:
 8069c3a:	55                   	push   %ebp
 8069c3b:	89 e5                	mov    %esp,%ebp
 8069c3d:	53                   	push   %ebx
 8069c3e:	81 ec d4 00 00 00    	sub    $0xd4,%esp
 8069c44:	e8 a7 fe fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8069c49:	81 c3 b7 63 04 00    	add    $0x463b7,%ebx
 8069c4f:	8b 45 18             	mov    0x18(%ebp),%eax
 8069c52:	83 c0 08             	add    $0x8,%eax
 8069c55:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 8069c5b:	8b 45 18             	mov    0x18(%ebp),%eax
 8069c5e:	05 6c 02 00 00       	add    $0x26c,%eax
 8069c63:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 8069c69:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069c6f:	8b 40 08             	mov    0x8(%eax),%eax
 8069c72:	83 f8 05             	cmp    $0x5,%eax
 8069c75:	0f 87 3f 07 00 00    	ja     806a3ba <.L291+0xbc>
 8069c7b:	c1 e0 02             	shl    $0x2,%eax
 8069c7e:	8b 84 18 f8 98 fd ff 	mov    -0x26708(%eax,%ebx,1),%eax
 8069c85:	01 d8                	add    %ebx,%eax
 8069c87:	ff e0                	jmp    *%eax

08069c89 <.L285>:
 8069c89:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069c8f:	8d 50 0c             	lea    0xc(%eax),%edx
 8069c92:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8069c98:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8069c9e:	c7 85 6c ff ff ff 02 	movl   $0x2,-0x94(%ebp)
 8069ca5:	00 00 00 
 8069ca8:	89 95 70 ff ff ff    	mov    %edx,-0x90(%ebp)
 8069cae:	e9 ab 00 00 00       	jmp    8069d5e <.L285+0xd5>
 8069cb3:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8069cb9:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 8069cbf:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069cc5:	8b 40 0c             	mov    0xc(%eax),%eax
 8069cc8:	85 c0                	test   %eax,%eax
 8069cca:	75 07                	jne    8069cd3 <.L285+0x4a>
 8069ccc:	b8 00 00 00 00       	mov    $0x0,%eax
 8069cd1:	eb 7d                	jmp    8069d50 <.L285+0xc7>
 8069cd3:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069cd9:	8b 00                	mov    (%eax),%eax
 8069cdb:	c1 e8 08             	shr    $0x8,%eax
 8069cde:	89 c2                	mov    %eax,%edx
 8069ce0:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069ce6:	89 10                	mov    %edx,(%eax)
 8069ce8:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069cee:	8b 10                	mov    (%eax),%edx
 8069cf0:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069cf6:	8b 40 08             	mov    0x8(%eax),%eax
 8069cf9:	0f b6 00             	movzbl (%eax),%eax
 8069cfc:	0f b6 c0             	movzbl %al,%eax
 8069cff:	c1 e0 18             	shl    $0x18,%eax
 8069d02:	09 c2                	or     %eax,%edx
 8069d04:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d0a:	89 10                	mov    %edx,(%eax)
 8069d0c:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d12:	8b 40 04             	mov    0x4(%eax),%eax
 8069d15:	8d 50 f8             	lea    -0x8(%eax),%edx
 8069d18:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d1e:	89 50 04             	mov    %edx,0x4(%eax)
 8069d21:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d27:	8b 40 0c             	mov    0xc(%eax),%eax
 8069d2a:	8d 50 ff             	lea    -0x1(%eax),%edx
 8069d2d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d33:	89 50 0c             	mov    %edx,0xc(%eax)
 8069d36:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d3c:	8b 40 08             	mov    0x8(%eax),%eax
 8069d3f:	8d 50 01             	lea    0x1(%eax),%edx
 8069d42:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8069d48:	89 50 08             	mov    %edx,0x8(%eax)
 8069d4b:	b8 01 00 00 00       	mov    $0x1,%eax
 8069d50:	85 c0                	test   %eax,%eax
 8069d52:	75 0a                	jne    8069d5e <.L285+0xd5>
 8069d54:	b8 00 00 00 00       	mov    $0x0,%eax
 8069d59:	e9 a0 00 00 00       	jmp    8069dfe <.L285+0x175>
 8069d5e:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8069d64:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8069d6a:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8069d70:	8b 40 04             	mov    0x4(%eax),%eax
 8069d73:	ba 20 00 00 00       	mov    $0x20,%edx
 8069d78:	29 c2                	sub    %eax,%edx
 8069d7a:	89 d0                	mov    %edx,%eax
 8069d7c:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%ebp)
 8069d82:	0f 87 2b ff ff ff    	ja     8069cb3 <.L285+0x2a>
 8069d88:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8069d8e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8069d94:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8069d9a:	89 45 80             	mov    %eax,-0x80(%ebp)
 8069d9d:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8069da3:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8069da6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8069dac:	89 45 88             	mov    %eax,-0x78(%ebp)
 8069daf:	8b 45 88             	mov    -0x78(%ebp),%eax
 8069db2:	8b 10                	mov    (%eax),%edx
 8069db4:	8b 45 88             	mov    -0x78(%ebp),%eax
 8069db7:	8b 40 04             	mov    0x4(%eax),%eax
 8069dba:	89 c1                	mov    %eax,%ecx
 8069dbc:	d3 ea                	shr    %cl,%edx
 8069dbe:	89 d0                	mov    %edx,%eax
 8069dc0:	89 c2                	mov    %eax,%edx
 8069dc2:	8b 45 80             	mov    -0x80(%ebp),%eax
 8069dc5:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8069dc8:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8069dcb:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8069dd2:	21 c2                	and    %eax,%edx
 8069dd4:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8069dd7:	89 10                	mov    %edx,(%eax)
 8069dd9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8069ddf:	89 45 90             	mov    %eax,-0x70(%ebp)
 8069de2:	8b 45 80             	mov    -0x80(%ebp),%eax
 8069de5:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8069de8:	8b 45 90             	mov    -0x70(%ebp),%eax
 8069deb:	8b 50 04             	mov    0x4(%eax),%edx
 8069dee:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8069df1:	01 c2                	add    %eax,%edx
 8069df3:	8b 45 90             	mov    -0x70(%ebp),%eax
 8069df6:	89 50 04             	mov    %edx,0x4(%eax)
 8069df9:	b8 01 00 00 00       	mov    $0x1,%eax
 8069dfe:	85 c0                	test   %eax,%eax
 8069e00:	75 0a                	jne    8069e0c <.L285+0x183>
 8069e02:	b8 02 00 00 00       	mov    $0x2,%eax
 8069e07:	e9 b3 05 00 00       	jmp    806a3bf <.L291+0xc1>
 8069e0c:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e12:	8b 40 0c             	mov    0xc(%eax),%eax
 8069e15:	83 f8 01             	cmp    $0x1,%eax
 8069e18:	74 72                	je     8069e8c <.L287>
 8069e1a:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e20:	c7 40 20 20 00 00 00 	movl   $0x20,0x20(%eax)
 8069e27:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e2d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
 8069e34:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e3a:	05 da 06 00 00       	add    $0x6da,%eax
 8069e3f:	c7 44 24 08 0c 00 00 	movl   $0xc,0x8(%esp)
 8069e46:	00 
 8069e47:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8069e4e:	00 
 8069e4f:	89 04 24             	mov    %eax,(%esp)
 8069e52:	e8 49 b4 fe ff       	call   80552a0 <__interceptor_memset>
 8069e57:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e5d:	05 c8 06 00 00       	add    $0x6c8,%eax
 8069e62:	c7 44 24 08 12 00 00 	movl   $0x12,0x8(%esp)
 8069e69:	00 
 8069e6a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8069e71:	00 
 8069e72:	89 04 24             	mov    %eax,(%esp)
 8069e75:	e8 26 b4 fe ff       	call   80552a0 <__interceptor_memset>
 8069e7a:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e80:	c7 40 08 04 00 00 00 	movl   $0x4,0x8(%eax)
 8069e87:	e9 dd fd ff ff       	jmp    8069c69 <ReadHuffmanCode+0x2f>

08069e8c <.L287>:
 8069e8c:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069e92:	8d 50 18             	lea    0x18(%eax),%edx
 8069e95:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8069e9b:	89 45 98             	mov    %eax,-0x68(%ebp)
 8069e9e:	c7 45 9c 02 00 00 00 	movl   $0x2,-0x64(%ebp)
 8069ea5:	89 55 a0             	mov    %edx,-0x60(%ebp)
 8069ea8:	e9 81 00 00 00       	jmp    8069f2e <.L287+0xa2>
 8069ead:	8b 45 98             	mov    -0x68(%ebp),%eax
 8069eb0:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8069eb3:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069eb6:	8b 40 0c             	mov    0xc(%eax),%eax
 8069eb9:	85 c0                	test   %eax,%eax
 8069ebb:	75 07                	jne    8069ec4 <.L287+0x38>
 8069ebd:	b8 00 00 00 00       	mov    $0x0,%eax
 8069ec2:	eb 5c                	jmp    8069f20 <.L287+0x94>
 8069ec4:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069ec7:	8b 00                	mov    (%eax),%eax
 8069ec9:	c1 e8 08             	shr    $0x8,%eax
 8069ecc:	89 c2                	mov    %eax,%edx
 8069ece:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069ed1:	89 10                	mov    %edx,(%eax)
 8069ed3:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069ed6:	8b 10                	mov    (%eax),%edx
 8069ed8:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069edb:	8b 40 08             	mov    0x8(%eax),%eax
 8069ede:	0f b6 00             	movzbl (%eax),%eax
 8069ee1:	0f b6 c0             	movzbl %al,%eax
 8069ee4:	c1 e0 18             	shl    $0x18,%eax
 8069ee7:	09 c2                	or     %eax,%edx
 8069ee9:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069eec:	89 10                	mov    %edx,(%eax)
 8069eee:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069ef1:	8b 40 04             	mov    0x4(%eax),%eax
 8069ef4:	8d 50 f8             	lea    -0x8(%eax),%edx
 8069ef7:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069efa:	89 50 04             	mov    %edx,0x4(%eax)
 8069efd:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069f00:	8b 40 0c             	mov    0xc(%eax),%eax
 8069f03:	8d 50 ff             	lea    -0x1(%eax),%edx
 8069f06:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069f09:	89 50 0c             	mov    %edx,0xc(%eax)
 8069f0c:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069f0f:	8b 40 08             	mov    0x8(%eax),%eax
 8069f12:	8d 50 01             	lea    0x1(%eax),%edx
 8069f15:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8069f18:	89 50 08             	mov    %edx,0x8(%eax)
 8069f1b:	b8 01 00 00 00       	mov    $0x1,%eax
 8069f20:	85 c0                	test   %eax,%eax
 8069f22:	75 0a                	jne    8069f2e <.L287+0xa2>
 8069f24:	b8 00 00 00 00       	mov    $0x0,%eax
 8069f29:	e9 82 00 00 00       	jmp    8069fb0 <.L287+0x124>
 8069f2e:	8b 45 98             	mov    -0x68(%ebp),%eax
 8069f31:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8069f34:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8069f37:	8b 40 04             	mov    0x4(%eax),%eax
 8069f3a:	ba 20 00 00 00       	mov    $0x20,%edx
 8069f3f:	29 c2                	sub    %eax,%edx
 8069f41:	89 d0                	mov    %edx,%eax
 8069f43:	39 45 9c             	cmp    %eax,-0x64(%ebp)
 8069f46:	0f 87 61 ff ff ff    	ja     8069ead <.L287+0x21>
 8069f4c:	8b 45 98             	mov    -0x68(%ebp),%eax
 8069f4f:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8069f52:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8069f55:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8069f58:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8069f5b:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8069f5e:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8069f61:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8069f64:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8069f67:	8b 10                	mov    (%eax),%edx
 8069f69:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8069f6c:	8b 40 04             	mov    0x4(%eax),%eax
 8069f6f:	89 c1                	mov    %eax,%ecx
 8069f71:	d3 ea                	shr    %cl,%edx
 8069f73:	89 d0                	mov    %edx,%eax
 8069f75:	89 c2                	mov    %eax,%edx
 8069f77:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8069f7a:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8069f7d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8069f80:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8069f87:	21 c2                	and    %eax,%edx
 8069f89:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8069f8c:	89 10                	mov    %edx,(%eax)
 8069f8e:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8069f91:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8069f94:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8069f97:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8069f9a:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069f9d:	8b 50 04             	mov    0x4(%eax),%edx
 8069fa0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8069fa3:	01 c2                	add    %eax,%edx
 8069fa5:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8069fa8:	89 50 04             	mov    %edx,0x4(%eax)
 8069fab:	b8 01 00 00 00       	mov    $0x1,%eax
 8069fb0:	85 c0                	test   %eax,%eax
 8069fb2:	75 17                	jne    8069fcb <.L287+0x13f>
 8069fb4:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069fba:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
 8069fc1:	b8 02 00 00 00       	mov    $0x2,%eax
 8069fc6:	e9 f4 03 00 00       	jmp    806a3bf <.L291+0xc1>
 8069fcb:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8069fd1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)

08069fd8 <.L288>:
 8069fd8:	8b 45 18             	mov    0x18(%ebp),%eax
 8069fdb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8069fdf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8069fe2:	89 44 24 04          	mov    %eax,0x4(%esp)
 8069fe6:	8b 45 08             	mov    0x8(%ebp),%eax
 8069fe9:	89 04 24             	mov    %eax,(%esp)
 8069fec:	e8 59 eb ff ff       	call   8068b4a <ReadSimpleHuffmanSymbols>
 8069ff1:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 8069ff7:	83 bd 58 ff ff ff 01 	cmpl   $0x1,-0xa8(%ebp)
 8069ffe:	74 0b                	je     806a00b <.L289>
 806a000:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806a006:	e9 b4 03 00 00       	jmp    806a3bf <.L291+0xc1>

0806a00b <.L289>:
 806a00b:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a011:	8b 40 18             	mov    0x18(%eax),%eax
 806a014:	83 f8 03             	cmp    $0x3,%eax
 806a017:	0f 85 56 01 00 00    	jne    806a173 <.L289+0x168>
 806a01d:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806a023:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806a026:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 806a02d:	8d 85 44 ff ff ff    	lea    -0xbc(%ebp),%eax
 806a033:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806a036:	e9 81 00 00 00       	jmp    806a0bc <.L289+0xb1>
 806a03b:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806a03e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806a041:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a044:	8b 40 0c             	mov    0xc(%eax),%eax
 806a047:	85 c0                	test   %eax,%eax
 806a049:	75 07                	jne    806a052 <.L289+0x47>
 806a04b:	b8 00 00 00 00       	mov    $0x0,%eax
 806a050:	eb 5c                	jmp    806a0ae <.L289+0xa3>
 806a052:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a055:	8b 00                	mov    (%eax),%eax
 806a057:	c1 e8 08             	shr    $0x8,%eax
 806a05a:	89 c2                	mov    %eax,%edx
 806a05c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a05f:	89 10                	mov    %edx,(%eax)
 806a061:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a064:	8b 10                	mov    (%eax),%edx
 806a066:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a069:	8b 40 08             	mov    0x8(%eax),%eax
 806a06c:	0f b6 00             	movzbl (%eax),%eax
 806a06f:	0f b6 c0             	movzbl %al,%eax
 806a072:	c1 e0 18             	shl    $0x18,%eax
 806a075:	09 c2                	or     %eax,%edx
 806a077:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a07a:	89 10                	mov    %edx,(%eax)
 806a07c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a07f:	8b 40 04             	mov    0x4(%eax),%eax
 806a082:	8d 50 f8             	lea    -0x8(%eax),%edx
 806a085:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a088:	89 50 04             	mov    %edx,0x4(%eax)
 806a08b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a08e:	8b 40 0c             	mov    0xc(%eax),%eax
 806a091:	8d 50 ff             	lea    -0x1(%eax),%edx
 806a094:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a097:	89 50 0c             	mov    %edx,0xc(%eax)
 806a09a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a09d:	8b 40 08             	mov    0x8(%eax),%eax
 806a0a0:	8d 50 01             	lea    0x1(%eax),%edx
 806a0a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806a0a6:	89 50 08             	mov    %edx,0x8(%eax)
 806a0a9:	b8 01 00 00 00       	mov    $0x1,%eax
 806a0ae:	85 c0                	test   %eax,%eax
 806a0b0:	75 0a                	jne    806a0bc <.L289+0xb1>
 806a0b2:	b8 00 00 00 00       	mov    $0x0,%eax
 806a0b7:	e9 82 00 00 00       	jmp    806a13e <.L289+0x133>
 806a0bc:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806a0bf:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806a0c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806a0c5:	8b 40 04             	mov    0x4(%eax),%eax
 806a0c8:	ba 20 00 00 00       	mov    $0x20,%edx
 806a0cd:	29 c2                	sub    %eax,%edx
 806a0cf:	89 d0                	mov    %edx,%eax
 806a0d1:	39 45 cc             	cmp    %eax,-0x34(%ebp)
 806a0d4:	0f 87 61 ff ff ff    	ja     806a03b <.L289+0x30>
 806a0da:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806a0dd:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806a0e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806a0e3:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806a0e6:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806a0e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806a0ec:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a0ef:	89 45 e8             	mov    %eax,-0x18(%ebp)
 806a0f2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806a0f5:	8b 10                	mov    (%eax),%edx
 806a0f7:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806a0fa:	8b 40 04             	mov    0x4(%eax),%eax
 806a0fd:	89 c1                	mov    %eax,%ecx
 806a0ff:	d3 ea                	shr    %cl,%edx
 806a101:	89 d0                	mov    %edx,%eax
 806a103:	89 c2                	mov    %eax,%edx
 806a105:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806a108:	89 45 ec             	mov    %eax,-0x14(%ebp)
 806a10b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806a10e:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806a115:	21 c2                	and    %eax,%edx
 806a117:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806a11a:	89 10                	mov    %edx,(%eax)
 806a11c:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a11f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 806a122:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806a125:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806a128:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a12b:	8b 50 04             	mov    0x4(%eax),%edx
 806a12e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806a131:	01 c2                	add    %eax,%edx
 806a133:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a136:	89 50 04             	mov    %edx,0x4(%eax)
 806a139:	b8 01 00 00 00       	mov    $0x1,%eax
 806a13e:	85 c0                	test   %eax,%eax
 806a140:	75 17                	jne    806a159 <.L289+0x14e>
 806a142:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a148:	c7 40 08 03 00 00 00 	movl   $0x3,0x8(%eax)
 806a14f:	b8 02 00 00 00       	mov    $0x2,%eax
 806a154:	e9 66 02 00 00       	jmp    806a3bf <.L291+0xc1>
 806a159:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a15f:	8b 50 18             	mov    0x18(%eax),%edx
 806a162:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806a168:	01 c2                	add    %eax,%edx
 806a16a:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a170:	89 50 18             	mov    %edx,0x18(%eax)
 806a173:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a179:	8b 40 18             	mov    0x18(%eax),%eax
 806a17c:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
 806a182:	81 c2 a8 00 00 00    	add    $0xa8,%edx
 806a188:	89 44 24 0c          	mov    %eax,0xc(%esp)
 806a18c:	89 54 24 08          	mov    %edx,0x8(%esp)
 806a190:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 806a197:	00 
 806a198:	8b 45 10             	mov    0x10(%ebp),%eax
 806a19b:	89 04 24             	mov    %eax,(%esp)
 806a19e:	e8 95 70 01 00       	call   8081238 <BrotliBuildSimpleHuffmanTable>
 806a1a3:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 806a1a9:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 806a1ad:	74 0b                	je     806a1ba <.L289+0x1af>
 806a1af:	8b 45 14             	mov    0x14(%ebp),%eax
 806a1b2:	8b 95 5c ff ff ff    	mov    -0xa4(%ebp),%edx
 806a1b8:	89 10                	mov    %edx,(%eax)
 806a1ba:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a1c0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 806a1c7:	b8 01 00 00 00       	mov    $0x1,%eax
 806a1cc:	e9 ee 01 00 00       	jmp    806a3bf <.L291+0xc1>

0806a1d1 <.L290>:
 806a1d1:	8b 45 18             	mov    0x18(%ebp),%eax
 806a1d4:	89 04 24             	mov    %eax,(%esp)
 806a1d7:	e8 c8 f7 ff ff       	call   80699a4 <ReadCodeLengthCodeLengths>
 806a1dc:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 806a1e2:	83 bd 60 ff ff ff 01 	cmpl   $0x1,-0xa0(%ebp)
 806a1e9:	74 0b                	je     806a1f6 <.L290+0x25>
 806a1eb:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806a1f1:	e9 c9 01 00 00       	jmp    806a3bf <.L291+0xc1>
 806a1f6:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a1fc:	8d 88 da 06 00 00    	lea    0x6da(%eax),%ecx
 806a202:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a208:	8d 90 c8 06 00 00    	lea    0x6c8(%eax),%edx
 806a20e:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a214:	83 c0 24             	add    $0x24,%eax
 806a217:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 806a21b:	89 54 24 04          	mov    %edx,0x4(%esp)
 806a21f:	89 04 24             	mov    %eax,(%esp)
 806a222:	e8 f3 67 01 00       	call   8080a1a <BrotliBuildCodeLengthsHuffmanTable>
 806a227:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a22d:	05 da 06 00 00       	add    $0x6da,%eax
 806a232:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)
 806a239:	00 
 806a23a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 806a241:	00 
 806a242:	89 04 24             	mov    %eax,(%esp)
 806a245:	e8 56 b0 fe ff       	call   80552a0 <__interceptor_memset>
 806a24a:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%ebp)
 806a251:	00 00 00 
 806a254:	eb 51                	jmp    806a2a7 <.L290+0xd6>
 806a256:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806a25c:	8d 48 f0             	lea    -0x10(%eax),%ecx
 806a25f:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a265:	8b 95 48 ff ff ff    	mov    -0xb8(%ebp),%edx
 806a26b:	81 c2 90 01 00 00    	add    $0x190,%edx
 806a271:	89 4c 90 08          	mov    %ecx,0x8(%eax,%edx,4)
 806a275:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a27b:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 806a281:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a287:	8b 8d 48 ff ff ff    	mov    -0xb8(%ebp),%ecx
 806a28d:	81 c1 90 01 00 00    	add    $0x190,%ecx
 806a293:	8b 44 88 08          	mov    0x8(%eax,%ecx,4),%eax
 806a297:	01 c0                	add    %eax,%eax
 806a299:	01 d0                	add    %edx,%eax
 806a29b:	66 c7 00 ff ff       	movw   $0xffff,(%eax)
 806a2a0:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%ebp)
 806a2a7:	83 bd 48 ff ff ff 0f 	cmpl   $0xf,-0xb8(%ebp)
 806a2ae:	76 a6                	jbe    806a256 <.L290+0x85>
 806a2b0:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a2b6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
 806a2bd:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a2c3:	c7 40 14 08 00 00 00 	movl   $0x8,0x14(%eax)
 806a2ca:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a2d0:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
 806a2d7:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a2dd:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
 806a2e4:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a2ea:	c7 40 20 00 80 00 00 	movl   $0x8000,0x20(%eax)
 806a2f1:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a2f7:	c7 40 08 05 00 00 00 	movl   $0x5,0x8(%eax)

0806a2fe <.L291>:
 806a2fe:	8b 45 18             	mov    0x18(%ebp),%eax
 806a301:	89 44 24 04          	mov    %eax,0x4(%esp)
 806a305:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a308:	89 04 24             	mov    %eax,(%esp)
 806a30b:	e8 70 ea ff ff       	call   8068d80 <ReadSymbolCodeLengths>
 806a310:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806a316:	83 bd 4c ff ff ff 02 	cmpl   $0x2,-0xb4(%ebp)
 806a31d:	75 18                	jne    806a337 <.L291+0x39>
 806a31f:	8b 45 18             	mov    0x18(%ebp),%eax
 806a322:	89 44 24 04          	mov    %eax,0x4(%esp)
 806a326:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a329:	89 04 24             	mov    %eax,(%esp)
 806a32c:	e8 5e f0 ff ff       	call   806938f <SafeReadSymbolCodeLengths>
 806a331:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806a337:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%ebp)
 806a33e:	74 08                	je     806a348 <.L291+0x4a>
 806a340:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806a346:	eb 77                	jmp    806a3bf <.L291+0xc1>
 806a348:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a34e:	8b 40 20             	mov    0x20(%eax),%eax
 806a351:	85 c0                	test   %eax,%eax
 806a353:	74 07                	je     806a35c <.L291+0x5e>
 806a355:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
 806a35a:	eb 63                	jmp    806a3bf <.L291+0xc1>
 806a35c:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a362:	8d 90 da 06 00 00    	lea    0x6da(%eax),%edx
 806a368:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a36e:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 806a374:	89 54 24 0c          	mov    %edx,0xc(%esp)
 806a378:	89 44 24 08          	mov    %eax,0x8(%esp)
 806a37c:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 806a383:	00 
 806a384:	8b 45 10             	mov    0x10(%ebp),%eax
 806a387:	89 04 24             	mov    %eax,(%esp)
 806a38a:	e8 87 6a 01 00       	call   8080e16 <BrotliBuildHuffmanTable>
 806a38f:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806a395:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 806a399:	74 0b                	je     806a3a6 <.L291+0xa8>
 806a39b:	8b 45 14             	mov    0x14(%ebp),%eax
 806a39e:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 806a3a4:	89 10                	mov    %edx,(%eax)
 806a3a6:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806a3ac:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 806a3b3:	b8 01 00 00 00       	mov    $0x1,%eax
 806a3b8:	eb 05                	jmp    806a3bf <.L291+0xc1>
 806a3ba:	b8 e1 ff ff ff       	mov    $0xffffffe1,%eax
 806a3bf:	81 c4 d4 00 00 00    	add    $0xd4,%esp
 806a3c5:	5b                   	pop    %ebx
 806a3c6:	5d                   	pop    %ebp
 806a3c7:	c3                   	ret    

0806a3c8 <InverseMoveToFrontTransform>:
 806a3c8:	55                   	push   %ebp
 806a3c9:	89 e5                	mov    %esp,%ebp
 806a3cb:	83 ec 48             	sub    $0x48,%esp
 806a3ce:	8b 45 08             	mov    0x8(%ebp),%eax
 806a3d1:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806a3d4:	8b 45 10             	mov    0x10(%ebp),%eax
 806a3d7:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806a3da:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 806a3e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806a3e3:	31 c0                	xor    %eax,%eax
 806a3e5:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
 806a3ec:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806a3ef:	8b 80 14 01 00 00    	mov    0x114(%eax),%eax
 806a3f5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806a3f8:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806a3fb:	05 1c 01 00 00       	add    $0x11c,%eax
 806a400:	89 45 e8             	mov    %eax,-0x18(%ebp)
 806a403:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806a406:	89 45 ec             	mov    %eax,-0x14(%ebp)
 806a409:	c6 45 f0 00          	movb   $0x0,-0x10(%ebp)
 806a40d:	c6 45 f1 01          	movb   $0x1,-0xf(%ebp)
 806a411:	c6 45 f2 02          	movb   $0x2,-0xe(%ebp)
 806a415:	c6 45 f3 03          	movb   $0x3,-0xd(%ebp)
 806a419:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a41c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806a41f:	8b 55 d8             	mov    -0x28(%ebp),%edx
 806a422:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806a425:	89 10                	mov    %edx,(%eax)
 806a427:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806a42a:	05 04 04 04 04       	add    $0x4040404,%eax
 806a42f:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806a432:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a435:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806a43c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806a43f:	01 c2                	add    %eax,%edx
 806a441:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806a444:	89 02                	mov    %eax,(%edx)
 806a446:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 806a44a:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a44d:	3b 45 e0             	cmp    -0x20(%ebp),%eax
 806a450:	76 d5                	jbe    806a427 <InverseMoveToFrontTransform+0x5f>
 806a452:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 806a459:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 806a460:	eb 70                	jmp    806a4d2 <InverseMoveToFrontTransform+0x10a>
 806a462:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a465:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 806a468:	01 d0                	add    %edx,%eax
 806a46a:	0f b6 00             	movzbl (%eax),%eax
 806a46d:	0f b6 c0             	movzbl %al,%eax
 806a470:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806a473:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 806a476:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806a479:	01 d0                	add    %edx,%eax
 806a47b:	0f b6 00             	movzbl (%eax),%eax
 806a47e:	88 45 d7             	mov    %al,-0x29(%ebp)
 806a481:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a484:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 806a487:	01 d0                	add    %edx,%eax
 806a489:	0f b6 00             	movzbl (%eax),%eax
 806a48c:	0f b6 c0             	movzbl %al,%eax
 806a48f:	09 45 e0             	or     %eax,-0x20(%ebp)
 806a492:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a495:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 806a498:	01 c2                	add    %eax,%edx
 806a49a:	0f b6 45 d7          	movzbl -0x29(%ebp),%eax
 806a49e:	88 02                	mov    %al,(%edx)
 806a4a0:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806a4a3:	8d 50 ff             	lea    -0x1(%eax),%edx
 806a4a6:	0f b6 45 d7          	movzbl -0x29(%ebp),%eax
 806a4aa:	88 02                	mov    %al,(%edx)
 806a4ac:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)
 806a4b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806a4b3:	8d 50 01             	lea    0x1(%eax),%edx
 806a4b6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806a4b9:	01 c2                	add    %eax,%edx
 806a4bb:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 806a4be:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806a4c1:	01 c8                	add    %ecx,%eax
 806a4c3:	0f b6 00             	movzbl (%eax),%eax
 806a4c6:	88 02                	mov    %al,(%edx)
 806a4c8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 806a4cc:	79 de                	jns    806a4ac <InverseMoveToFrontTransform+0xe4>
 806a4ce:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 806a4d2:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806a4d5:	3b 45 0c             	cmp    0xc(%ebp),%eax
 806a4d8:	72 88                	jb     806a462 <InverseMoveToFrontTransform+0x9a>
 806a4da:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806a4dd:	c1 e8 02             	shr    $0x2,%eax
 806a4e0:	89 c2                	mov    %eax,%edx
 806a4e2:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806a4e5:	89 90 14 01 00 00    	mov    %edx,0x114(%eax)
 806a4eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806a4ee:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 806a4f5:	74 05                	je     806a4fc <InverseMoveToFrontTransform+0x134>
 806a4f7:	e8 c4 86 01 00       	call   8082bc0 <__stack_chk_fail_local>
 806a4fc:	c9                   	leave  
 806a4fd:	c3                   	ret    

0806a4fe <HuffmanTreeGroupDecode>:
 806a4fe:	55                   	push   %ebp
 806a4ff:	89 e5                	mov    %esp,%ebp
 806a501:	56                   	push   %esi
 806a502:	83 ec 34             	sub    $0x34,%esp
 806a505:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a508:	05 6c 02 00 00       	add    $0x26c,%eax
 806a50d:	89 45 f0             	mov    %eax,-0x10(%ebp)
 806a510:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a513:	8b 00                	mov    (%eax),%eax
 806a515:	83 f8 01             	cmp    $0x1,%eax
 806a518:	74 2a                	je     806a544 <HuffmanTreeGroupDecode+0x46>
 806a51a:	8b 45 08             	mov    0x8(%ebp),%eax
 806a51d:	8b 50 04             	mov    0x4(%eax),%edx
 806a520:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a523:	89 90 00 07 00 00    	mov    %edx,0x700(%eax)
 806a529:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a52c:	c7 80 fc 06 00 00 00 	movl   $0x0,0x6fc(%eax)
 806a533:	00 00 00 
 806a536:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a539:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 806a53f:	e9 9b 00 00 00       	jmp    806a5df <HuffmanTreeGroupDecode+0xe1>
 806a544:	e9 96 00 00 00       	jmp    806a5df <HuffmanTreeGroupDecode+0xe1>
 806a549:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a54c:	8b 88 00 07 00 00    	mov    0x700(%eax),%ecx
 806a552:	8b 45 08             	mov    0x8(%ebp),%eax
 806a555:	0f b7 40 0a          	movzwl 0xa(%eax),%eax
 806a559:	0f b7 d0             	movzwl %ax,%edx
 806a55c:	8b 45 08             	mov    0x8(%ebp),%eax
 806a55f:	0f b7 40 08          	movzwl 0x8(%eax),%eax
 806a563:	0f b7 c0             	movzwl %ax,%eax
 806a566:	8b 75 0c             	mov    0xc(%ebp),%esi
 806a569:	89 74 24 10          	mov    %esi,0x10(%esp)
 806a56d:	8d 75 ec             	lea    -0x14(%ebp),%esi
 806a570:	89 74 24 0c          	mov    %esi,0xc(%esp)
 806a574:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 806a578:	89 54 24 04          	mov    %edx,0x4(%esp)
 806a57c:	89 04 24             	mov    %eax,(%esp)
 806a57f:	e8 b6 f6 ff ff       	call   8069c3a <ReadHuffmanCode>
 806a584:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806a587:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
 806a58b:	74 05                	je     806a592 <HuffmanTreeGroupDecode+0x94>
 806a58d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806a590:	eb 76                	jmp    806a608 <HuffmanTreeGroupDecode+0x10a>
 806a592:	8b 45 08             	mov    0x8(%ebp),%eax
 806a595:	8b 10                	mov    (%eax),%edx
 806a597:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a59a:	8b 80 fc 06 00 00    	mov    0x6fc(%eax),%eax
 806a5a0:	c1 e0 02             	shl    $0x2,%eax
 806a5a3:	01 c2                	add    %eax,%edx
 806a5a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5a8:	8b 80 00 07 00 00    	mov    0x700(%eax),%eax
 806a5ae:	89 02                	mov    %eax,(%edx)
 806a5b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5b3:	8b 80 00 07 00 00    	mov    0x700(%eax),%eax
 806a5b9:	8b 55 ec             	mov    -0x14(%ebp),%edx
 806a5bc:	c1 e2 02             	shl    $0x2,%edx
 806a5bf:	01 c2                	add    %eax,%edx
 806a5c1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5c4:	89 90 00 07 00 00    	mov    %edx,0x700(%eax)
 806a5ca:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5cd:	8b 80 fc 06 00 00    	mov    0x6fc(%eax),%eax
 806a5d3:	8d 50 01             	lea    0x1(%eax),%edx
 806a5d6:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5d9:	89 90 fc 06 00 00    	mov    %edx,0x6fc(%eax)
 806a5df:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5e2:	8b 90 fc 06 00 00    	mov    0x6fc(%eax),%edx
 806a5e8:	8b 45 08             	mov    0x8(%ebp),%eax
 806a5eb:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
 806a5ef:	0f b7 c0             	movzwl %ax,%eax
 806a5f2:	39 c2                	cmp    %eax,%edx
 806a5f4:	0f 8c 4f ff ff ff    	jl     806a549 <HuffmanTreeGroupDecode+0x4b>
 806a5fa:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806a5fd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 806a603:	b8 01 00 00 00       	mov    $0x1,%eax
 806a608:	83 c4 34             	add    $0x34,%esp
 806a60b:	5e                   	pop    %esi
 806a60c:	5d                   	pop    %ebp
 806a60d:	c3                   	ret    

0806a60e <DecodeContextMap>:
 806a60e:	55                   	push   %ebp
 806a60f:	89 e5                	mov    %esp,%ebp
 806a611:	53                   	push   %ebx
 806a612:	81 ec 24 01 00 00    	sub    $0x124,%esp
 806a618:	e8 d3 f4 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806a61d:	81 c3 e3 59 04 00    	add    $0x459e3,%ebx
 806a623:	8b 45 14             	mov    0x14(%ebp),%eax
 806a626:	83 c0 08             	add    $0x8,%eax
 806a629:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 806a62f:	c7 85 0c ff ff ff 01 	movl   $0x1,-0xf4(%ebp)
 806a636:	00 00 00 
 806a639:	8b 45 14             	mov    0x14(%ebp),%eax
 806a63c:	05 6c 02 00 00       	add    $0x26c,%eax
 806a641:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 806a647:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a64d:	8b 40 04             	mov    0x4(%eax),%eax
 806a650:	83 f8 04             	cmp    $0x4,%eax
 806a653:	0f 87 3a 0a 00 00    	ja     806b093 <.L349+0x172>
 806a659:	c1 e0 02             	shl    $0x2,%eax
 806a65c:	8b 84 18 10 99 fd ff 	mov    -0x266f0(%eax,%ebx,1),%eax
 806a663:	01 d8                	add    %ebx,%eax
 806a665:	ff e0                	jmp    *%eax

0806a667 <.L344>:
 806a667:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a66a:	89 44 24 08          	mov    %eax,0x8(%esp)
 806a66e:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806a674:	89 44 24 04          	mov    %eax,0x4(%esp)
 806a678:	8b 45 14             	mov    0x14(%ebp),%eax
 806a67b:	89 04 24             	mov    %eax,(%esp)
 806a67e:	e8 69 ce ff ff       	call   80674ec <DecodeVarLenUint8>
 806a683:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 806a689:	83 bd 0c ff ff ff 01 	cmpl   $0x1,-0xf4(%ebp)
 806a690:	74 0b                	je     806a69d <.L344+0x36>
 806a692:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806a698:	e9 fb 09 00 00       	jmp    806b098 <.L349+0x177>
 806a69d:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a6a0:	8b 00                	mov    (%eax),%eax
 806a6a2:	8d 50 01             	lea    0x1(%eax),%edx
 806a6a5:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a6a8:	89 10                	mov    %edx,(%eax)
 806a6aa:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a6b0:	c7 80 04 07 00 00 00 	movl   $0x0,0x704(%eax)
 806a6b7:	00 00 00 
 806a6ba:	8b 45 14             	mov    0x14(%ebp),%eax
 806a6bd:	8b 40 18             	mov    0x18(%eax),%eax
 806a6c0:	8b 55 14             	mov    0x14(%ebp),%edx
 806a6c3:	8b 52 20             	mov    0x20(%edx),%edx
 806a6c6:	8b 4d 08             	mov    0x8(%ebp),%ecx
 806a6c9:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 806a6cd:	89 14 24             	mov    %edx,(%esp)
 806a6d0:	ff d0                	call   *%eax
 806a6d2:	8b 55 10             	mov    0x10(%ebp),%edx
 806a6d5:	89 02                	mov    %eax,(%edx)
 806a6d7:	8b 45 10             	mov    0x10(%ebp),%eax
 806a6da:	8b 00                	mov    (%eax),%eax
 806a6dc:	85 c0                	test   %eax,%eax
 806a6de:	75 0a                	jne    806a6ea <.L344+0x83>
 806a6e0:	b8 e7 ff ff ff       	mov    $0xffffffe7,%eax
 806a6e5:	e9 ae 09 00 00       	jmp    806b098 <.L349+0x177>
 806a6ea:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a6ed:	8b 00                	mov    (%eax),%eax
 806a6ef:	83 f8 01             	cmp    $0x1,%eax
 806a6f2:	77 26                	ja     806a71a <.L344+0xb3>
 806a6f4:	8b 45 10             	mov    0x10(%ebp),%eax
 806a6f7:	8b 00                	mov    (%eax),%eax
 806a6f9:	8b 55 08             	mov    0x8(%ebp),%edx
 806a6fc:	89 54 24 08          	mov    %edx,0x8(%esp)
 806a700:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 806a707:	00 
 806a708:	89 04 24             	mov    %eax,(%esp)
 806a70b:	e8 90 ab fe ff       	call   80552a0 <__interceptor_memset>
 806a710:	b8 01 00 00 00       	mov    $0x1,%eax
 806a715:	e9 7e 09 00 00       	jmp    806b098 <.L349+0x177>
 806a71a:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a720:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)

0806a727 <.L346>:
 806a727:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806a72d:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 806a733:	c7 85 24 ff ff ff 05 	movl   $0x5,-0xdc(%ebp)
 806a73a:	00 00 00 
 806a73d:	8d 85 fc fe ff ff    	lea    -0x104(%ebp),%eax
 806a743:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 806a749:	e9 a8 00 00 00       	jmp    806a7f6 <.L346+0xcf>
 806a74e:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806a754:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 806a75a:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a760:	8b 40 0c             	mov    0xc(%eax),%eax
 806a763:	85 c0                	test   %eax,%eax
 806a765:	75 07                	jne    806a76e <.L346+0x47>
 806a767:	b8 00 00 00 00       	mov    $0x0,%eax
 806a76c:	eb 7d                	jmp    806a7eb <.L346+0xc4>
 806a76e:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a774:	8b 00                	mov    (%eax),%eax
 806a776:	c1 e8 08             	shr    $0x8,%eax
 806a779:	89 c2                	mov    %eax,%edx
 806a77b:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a781:	89 10                	mov    %edx,(%eax)
 806a783:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a789:	8b 10                	mov    (%eax),%edx
 806a78b:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a791:	8b 40 08             	mov    0x8(%eax),%eax
 806a794:	0f b6 00             	movzbl (%eax),%eax
 806a797:	0f b6 c0             	movzbl %al,%eax
 806a79a:	c1 e0 18             	shl    $0x18,%eax
 806a79d:	09 c2                	or     %eax,%edx
 806a79f:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7a5:	89 10                	mov    %edx,(%eax)
 806a7a7:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7ad:	8b 40 04             	mov    0x4(%eax),%eax
 806a7b0:	8d 50 f8             	lea    -0x8(%eax),%edx
 806a7b3:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7b9:	89 50 04             	mov    %edx,0x4(%eax)
 806a7bc:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7c2:	8b 40 0c             	mov    0xc(%eax),%eax
 806a7c5:	8d 50 ff             	lea    -0x1(%eax),%edx
 806a7c8:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7ce:	89 50 0c             	mov    %edx,0xc(%eax)
 806a7d1:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7d7:	8b 40 08             	mov    0x8(%eax),%eax
 806a7da:	8d 50 01             	lea    0x1(%eax),%edx
 806a7dd:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806a7e3:	89 50 08             	mov    %edx,0x8(%eax)
 806a7e6:	b8 01 00 00 00       	mov    $0x1,%eax
 806a7eb:	85 c0                	test   %eax,%eax
 806a7ed:	75 07                	jne    806a7f6 <.L346+0xcf>
 806a7ef:	b8 00 00 00 00       	mov    $0x0,%eax
 806a7f4:	eb 77                	jmp    806a86d <.L346+0x146>
 806a7f6:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806a7fc:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 806a802:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806a808:	8b 40 04             	mov    0x4(%eax),%eax
 806a80b:	ba 20 00 00 00       	mov    $0x20,%edx
 806a810:	29 c2                	sub    %eax,%edx
 806a812:	89 d0                	mov    %edx,%eax
 806a814:	39 85 24 ff ff ff    	cmp    %eax,-0xdc(%ebp)
 806a81a:	0f 87 2e ff ff ff    	ja     806a74e <.L346+0x27>
 806a820:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806a826:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 806a82c:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 806a832:	8b 10                	mov    (%eax),%edx
 806a834:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 806a83a:	8b 40 04             	mov    0x4(%eax),%eax
 806a83d:	89 c1                	mov    %eax,%ecx
 806a83f:	d3 ea                	shr    %cl,%edx
 806a841:	89 d0                	mov    %edx,%eax
 806a843:	89 c2                	mov    %eax,%edx
 806a845:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806a84b:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 806a851:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806a857:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806a85e:	21 c2                	and    %eax,%edx
 806a860:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806a866:	89 10                	mov    %edx,(%eax)
 806a868:	b8 01 00 00 00       	mov    $0x1,%eax
 806a86d:	85 c0                	test   %eax,%eax
 806a86f:	75 0a                	jne    806a87b <.L346+0x154>
 806a871:	b8 02 00 00 00       	mov    $0x2,%eax
 806a876:	e9 1d 08 00 00       	jmp    806b098 <.L349+0x177>
 806a87b:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806a881:	83 e0 01             	and    $0x1,%eax
 806a884:	85 c0                	test   %eax,%eax
 806a886:	74 49                	je     806a8d1 <.L346+0x1aa>
 806a888:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806a88e:	d1 e8                	shr    %eax
 806a890:	8d 50 01             	lea    0x1(%eax),%edx
 806a893:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a899:	89 90 08 07 00 00    	mov    %edx,0x708(%eax)
 806a89f:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806a8a5:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 806a8ab:	c7 85 40 ff ff ff 05 	movl   $0x5,-0xc0(%ebp)
 806a8b2:	00 00 00 
 806a8b5:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806a8bb:	8b 50 04             	mov    0x4(%eax),%edx
 806a8be:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806a8c4:	01 c2                	add    %eax,%edx
 806a8c6:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806a8cc:	89 50 04             	mov    %edx,0x4(%eax)
 806a8cf:	eb 40                	jmp    806a911 <.L346+0x1ea>
 806a8d1:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a8d7:	c7 80 08 07 00 00 00 	movl   $0x0,0x708(%eax)
 806a8de:	00 00 00 
 806a8e1:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806a8e7:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 806a8ed:	c7 85 48 ff ff ff 01 	movl   $0x1,-0xb8(%ebp)
 806a8f4:	00 00 00 
 806a8f7:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806a8fd:	8b 50 04             	mov    0x4(%eax),%edx
 806a900:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806a906:	01 c2                	add    %eax,%edx
 806a908:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806a90e:	89 50 04             	mov    %edx,0x4(%eax)
 806a911:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a917:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%eax)

0806a91e <.L347>:
 806a91e:	8b 45 0c             	mov    0xc(%ebp),%eax
 806a921:	8b 10                	mov    (%eax),%edx
 806a923:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a929:	8b 80 08 07 00 00    	mov    0x708(%eax),%eax
 806a92f:	01 d0                	add    %edx,%eax
 806a931:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 806a937:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a93d:	8d 90 10 07 00 00    	lea    0x710(%eax),%edx
 806a943:	8b 45 14             	mov    0x14(%ebp),%eax
 806a946:	89 44 24 10          	mov    %eax,0x10(%esp)
 806a94a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 806a951:	00 
 806a952:	89 54 24 08          	mov    %edx,0x8(%esp)
 806a956:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806a95c:	89 44 24 04          	mov    %eax,0x4(%esp)
 806a960:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806a966:	89 04 24             	mov    %eax,(%esp)
 806a969:	e8 cc f2 ff ff       	call   8069c3a <ReadHuffmanCode>
 806a96e:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 806a974:	83 bd 0c ff ff ff 01 	cmpl   $0x1,-0xf4(%ebp)
 806a97b:	74 0b                	je     806a988 <.L347+0x6a>
 806a97d:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806a983:	e9 10 07 00 00       	jmp    806b098 <.L349+0x177>
 806a988:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a98e:	c7 80 0c 07 00 00 ff 	movl   $0xffff,0x70c(%eax)
 806a995:	ff 00 00 
 806a998:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a99e:	c7 40 04 03 00 00 00 	movl   $0x3,0x4(%eax)

0806a9a5 <.L348>:
 806a9a5:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a9ab:	8b 80 04 07 00 00    	mov    0x704(%eax),%eax
 806a9b1:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 806a9b7:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a9bd:	8b 80 08 07 00 00    	mov    0x708(%eax),%eax
 806a9c3:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 806a9c9:	8b 45 10             	mov    0x10(%ebp),%eax
 806a9cc:	8b 00                	mov    (%eax),%eax
 806a9ce:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 806a9d4:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806a9da:	8b 80 0c 07 00 00    	mov    0x70c(%eax),%eax
 806a9e0:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 806a9e6:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806a9ec:	3d ff ff 00 00       	cmp    $0xffff,%eax
 806a9f1:	0f 95 c0             	setne  %al
 806a9f4:	0f b6 c0             	movzbl %al,%eax
 806a9f7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 806a9fd:	e9 03 05 00 00       	jmp    806af05 <.L348+0x560>
 806aa02:	83 bd 04 ff ff ff 00 	cmpl   $0x0,-0xfc(%ebp)
 806aa09:	0f 85 2a 03 00 00    	jne    806ad39 <.L348+0x394>
 806aa0f:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806aa15:	05 10 07 00 00       	add    $0x710,%eax
 806aa1a:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806aa20:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806aa26:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 806aa2c:	8d 85 f8 fe ff ff    	lea    -0x108(%ebp),%eax
 806aa32:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 806aa38:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806aa3e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 806aa44:	c7 85 5c ff ff ff 0f 	movl   $0xf,-0xa4(%ebp)
 806aa4b:	00 00 00 
 806aa4e:	8d 85 fc fe ff ff    	lea    -0x104(%ebp),%eax
 806aa54:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 806aa5a:	e9 a8 00 00 00       	jmp    806ab07 <.L348+0x162>
 806aa5f:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806aa65:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806aa6b:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aa71:	8b 40 0c             	mov    0xc(%eax),%eax
 806aa74:	85 c0                	test   %eax,%eax
 806aa76:	75 07                	jne    806aa7f <.L348+0xda>
 806aa78:	b8 00 00 00 00       	mov    $0x0,%eax
 806aa7d:	eb 7d                	jmp    806aafc <.L348+0x157>
 806aa7f:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aa85:	8b 00                	mov    (%eax),%eax
 806aa87:	c1 e8 08             	shr    $0x8,%eax
 806aa8a:	89 c2                	mov    %eax,%edx
 806aa8c:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aa92:	89 10                	mov    %edx,(%eax)
 806aa94:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aa9a:	8b 10                	mov    (%eax),%edx
 806aa9c:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aaa2:	8b 40 08             	mov    0x8(%eax),%eax
 806aaa5:	0f b6 00             	movzbl (%eax),%eax
 806aaa8:	0f b6 c0             	movzbl %al,%eax
 806aaab:	c1 e0 18             	shl    $0x18,%eax
 806aaae:	09 c2                	or     %eax,%edx
 806aab0:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aab6:	89 10                	mov    %edx,(%eax)
 806aab8:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aabe:	8b 40 04             	mov    0x4(%eax),%eax
 806aac1:	8d 50 f8             	lea    -0x8(%eax),%edx
 806aac4:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aaca:	89 50 04             	mov    %edx,0x4(%eax)
 806aacd:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aad3:	8b 40 0c             	mov    0xc(%eax),%eax
 806aad6:	8d 50 ff             	lea    -0x1(%eax),%edx
 806aad9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aadf:	89 50 0c             	mov    %edx,0xc(%eax)
 806aae2:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aae8:	8b 40 08             	mov    0x8(%eax),%eax
 806aaeb:	8d 50 01             	lea    0x1(%eax),%edx
 806aaee:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806aaf4:	89 50 08             	mov    %edx,0x8(%eax)
 806aaf7:	b8 01 00 00 00       	mov    $0x1,%eax
 806aafc:	85 c0                	test   %eax,%eax
 806aafe:	75 07                	jne    806ab07 <.L348+0x162>
 806ab00:	b8 00 00 00 00       	mov    $0x0,%eax
 806ab05:	eb 77                	jmp    806ab7e <.L348+0x1d9>
 806ab07:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806ab0d:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 806ab13:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806ab19:	8b 40 04             	mov    0x4(%eax),%eax
 806ab1c:	ba 20 00 00 00       	mov    $0x20,%edx
 806ab21:	29 c2                	sub    %eax,%edx
 806ab23:	89 d0                	mov    %edx,%eax
 806ab25:	39 85 5c ff ff ff    	cmp    %eax,-0xa4(%ebp)
 806ab2b:	0f 87 2e ff ff ff    	ja     806aa5f <.L348+0xba>
 806ab31:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806ab37:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 806ab3d:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806ab43:	8b 10                	mov    (%eax),%edx
 806ab45:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806ab4b:	8b 40 04             	mov    0x4(%eax),%eax
 806ab4e:	89 c1                	mov    %eax,%ecx
 806ab50:	d3 ea                	shr    %cl,%edx
 806ab52:	89 d0                	mov    %edx,%eax
 806ab54:	89 c2                	mov    %eax,%edx
 806ab56:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806ab5c:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 806ab62:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806ab68:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ab6f:	21 c2                	and    %eax,%edx
 806ab71:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806ab77:	89 10                	mov    %edx,(%eax)
 806ab79:	b8 01 00 00 00       	mov    $0x1,%eax
 806ab7e:	85 c0                	test   %eax,%eax
 806ab80:	0f 95 c0             	setne  %al
 806ab83:	0f b6 c0             	movzbl %al,%eax
 806ab86:	85 c0                	test   %eax,%eax
 806ab88:	0f 84 f2 00 00 00    	je     806ac80 <.L348+0x2db>
 806ab8e:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806ab94:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 806ab9a:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806aba0:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 806aba6:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806abac:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 806abb2:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806abb8:	0f b6 c0             	movzbl %al,%eax
 806abbb:	c1 e0 02             	shl    $0x2,%eax
 806abbe:	01 85 78 ff ff ff    	add    %eax,-0x88(%ebp)
 806abc4:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806abca:	0f b6 00             	movzbl (%eax),%eax
 806abcd:	3c 08                	cmp    $0x8,%al
 806abcf:	76 68                	jbe    806ac39 <.L348+0x294>
 806abd1:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806abd7:	0f b6 00             	movzbl (%eax),%eax
 806abda:	0f b6 c0             	movzbl %al,%eax
 806abdd:	83 e8 08             	sub    $0x8,%eax
 806abe0:	89 45 80             	mov    %eax,-0x80(%ebp)
 806abe3:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806abe9:	89 45 84             	mov    %eax,-0x7c(%ebp)
 806abec:	c7 45 88 08 00 00 00 	movl   $0x8,-0x78(%ebp)
 806abf3:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806abf6:	8b 50 04             	mov    0x4(%eax),%edx
 806abf9:	8b 45 88             	mov    -0x78(%ebp),%eax
 806abfc:	01 c2                	add    %eax,%edx
 806abfe:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806ac01:	89 50 04             	mov    %edx,0x4(%eax)
 806ac04:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806ac0a:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806ac0e:	0f b7 d0             	movzwl %ax,%edx
 806ac11:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806ac17:	c1 e8 08             	shr    $0x8,%eax
 806ac1a:	89 c1                	mov    %eax,%ecx
 806ac1c:	8b 45 80             	mov    -0x80(%ebp),%eax
 806ac1f:	89 45 8c             	mov    %eax,-0x74(%ebp)
 806ac22:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806ac25:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ac2c:	21 c8                	and    %ecx,%eax
 806ac2e:	01 d0                	add    %edx,%eax
 806ac30:	c1 e0 02             	shl    $0x2,%eax
 806ac33:	01 85 78 ff ff ff    	add    %eax,-0x88(%ebp)
 806ac39:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806ac3f:	0f b6 00             	movzbl (%eax),%eax
 806ac42:	0f b6 c0             	movzbl %al,%eax
 806ac45:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 806ac4b:	89 55 90             	mov    %edx,-0x70(%ebp)
 806ac4e:	89 45 94             	mov    %eax,-0x6c(%ebp)
 806ac51:	8b 45 90             	mov    -0x70(%ebp),%eax
 806ac54:	8b 50 04             	mov    0x4(%eax),%edx
 806ac57:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806ac5a:	01 c2                	add    %eax,%edx
 806ac5c:	8b 45 90             	mov    -0x70(%ebp),%eax
 806ac5f:	89 50 04             	mov    %edx,0x4(%eax)
 806ac62:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806ac68:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806ac6c:	0f b7 c0             	movzwl %ax,%eax
 806ac6f:	89 c2                	mov    %eax,%edx
 806ac71:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806ac77:	89 10                	mov    %edx,(%eax)
 806ac79:	b8 01 00 00 00       	mov    $0x1,%eax
 806ac7e:	eb 22                	jmp    806aca2 <.L348+0x2fd>
 806ac80:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806ac86:	89 44 24 08          	mov    %eax,0x8(%esp)
 806ac8a:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806ac90:	89 44 24 04          	mov    %eax,0x4(%esp)
 806ac94:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806ac9a:	89 04 24             	mov    %eax,(%esp)
 806ac9d:	e8 2a dd ff ff       	call   80689cc <SafeDecodeSymbol>
 806aca2:	85 c0                	test   %eax,%eax
 806aca4:	75 2c                	jne    806acd2 <.L348+0x32d>
 806aca6:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806acac:	c7 80 0c 07 00 00 ff 	movl   $0xffff,0x70c(%eax)
 806acb3:	ff 00 00 
 806acb6:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806acbc:	8b 95 00 ff ff ff    	mov    -0x100(%ebp),%edx
 806acc2:	89 90 04 07 00 00    	mov    %edx,0x704(%eax)
 806acc8:	b8 02 00 00 00       	mov    $0x2,%eax
 806accd:	e9 c6 03 00 00       	jmp    806b098 <.L349+0x177>
 806acd2:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806acd8:	85 c0                	test   %eax,%eax
 806acda:	75 1f                	jne    806acfb <.L348+0x356>
 806acdc:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806ace2:	8d 50 01             	lea    0x1(%eax),%edx
 806ace5:	89 95 00 ff ff ff    	mov    %edx,-0x100(%ebp)
 806aceb:	8b 95 1c ff ff ff    	mov    -0xe4(%ebp),%edx
 806acf1:	01 d0                	add    %edx,%eax
 806acf3:	c6 00 00             	movb   $0x0,(%eax)
 806acf6:	e9 0a 02 00 00       	jmp    806af05 <.L348+0x560>
 806acfb:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806ad01:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax
 806ad07:	76 3a                	jbe    806ad43 <.L348+0x39e>
 806ad09:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806ad0f:	8d 50 01             	lea    0x1(%eax),%edx
 806ad12:	89 95 00 ff ff ff    	mov    %edx,-0x100(%ebp)
 806ad18:	8b 95 1c ff ff ff    	mov    -0xe4(%ebp),%edx
 806ad1e:	01 d0                	add    %edx,%eax
 806ad20:	8b 95 f8 fe ff ff    	mov    -0x108(%ebp),%edx
 806ad26:	89 d1                	mov    %edx,%ecx
 806ad28:	8b 95 18 ff ff ff    	mov    -0xe8(%ebp),%edx
 806ad2e:	29 d1                	sub    %edx,%ecx
 806ad30:	89 ca                	mov    %ecx,%edx
 806ad32:	88 10                	mov    %dl,(%eax)
 806ad34:	e9 cc 01 00 00       	jmp    806af05 <.L348+0x560>
 806ad39:	c7 85 04 ff ff ff 00 	movl   $0x0,-0xfc(%ebp)
 806ad40:	00 00 00 
 806ad43:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806ad49:	8b 95 08 ff ff ff    	mov    -0xf8(%ebp),%edx
 806ad4f:	89 55 98             	mov    %edx,-0x68(%ebp)
 806ad52:	89 45 9c             	mov    %eax,-0x64(%ebp)
 806ad55:	8d 85 fc fe ff ff    	lea    -0x104(%ebp),%eax
 806ad5b:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806ad5e:	e9 81 00 00 00       	jmp    806ade4 <.L348+0x43f>
 806ad63:	8b 45 98             	mov    -0x68(%ebp),%eax
 806ad66:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 806ad69:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ad6c:	8b 40 0c             	mov    0xc(%eax),%eax
 806ad6f:	85 c0                	test   %eax,%eax
 806ad71:	75 07                	jne    806ad7a <.L348+0x3d5>
 806ad73:	b8 00 00 00 00       	mov    $0x0,%eax
 806ad78:	eb 5c                	jmp    806add6 <.L348+0x431>
 806ad7a:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ad7d:	8b 00                	mov    (%eax),%eax
 806ad7f:	c1 e8 08             	shr    $0x8,%eax
 806ad82:	89 c2                	mov    %eax,%edx
 806ad84:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ad87:	89 10                	mov    %edx,(%eax)
 806ad89:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ad8c:	8b 10                	mov    (%eax),%edx
 806ad8e:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ad91:	8b 40 08             	mov    0x8(%eax),%eax
 806ad94:	0f b6 00             	movzbl (%eax),%eax
 806ad97:	0f b6 c0             	movzbl %al,%eax
 806ad9a:	c1 e0 18             	shl    $0x18,%eax
 806ad9d:	09 c2                	or     %eax,%edx
 806ad9f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ada2:	89 10                	mov    %edx,(%eax)
 806ada4:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806ada7:	8b 40 04             	mov    0x4(%eax),%eax
 806adaa:	8d 50 f8             	lea    -0x8(%eax),%edx
 806adad:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806adb0:	89 50 04             	mov    %edx,0x4(%eax)
 806adb3:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806adb6:	8b 40 0c             	mov    0xc(%eax),%eax
 806adb9:	8d 50 ff             	lea    -0x1(%eax),%edx
 806adbc:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806adbf:	89 50 0c             	mov    %edx,0xc(%eax)
 806adc2:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806adc5:	8b 40 08             	mov    0x8(%eax),%eax
 806adc8:	8d 50 01             	lea    0x1(%eax),%edx
 806adcb:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806adce:	89 50 08             	mov    %edx,0x8(%eax)
 806add1:	b8 01 00 00 00       	mov    $0x1,%eax
 806add6:	85 c0                	test   %eax,%eax
 806add8:	75 0a                	jne    806ade4 <.L348+0x43f>
 806adda:	b8 00 00 00 00       	mov    $0x0,%eax
 806addf:	e9 82 00 00 00       	jmp    806ae66 <.L348+0x4c1>
 806ade4:	8b 45 98             	mov    -0x68(%ebp),%eax
 806ade7:	89 45 a8             	mov    %eax,-0x58(%ebp)
 806adea:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806aded:	8b 40 04             	mov    0x4(%eax),%eax
 806adf0:	ba 20 00 00 00       	mov    $0x20,%edx
 806adf5:	29 c2                	sub    %eax,%edx
 806adf7:	89 d0                	mov    %edx,%eax
 806adf9:	39 45 9c             	cmp    %eax,-0x64(%ebp)
 806adfc:	0f 87 61 ff ff ff    	ja     806ad63 <.L348+0x3be>
 806ae02:	8b 45 98             	mov    -0x68(%ebp),%eax
 806ae05:	89 45 ac             	mov    %eax,-0x54(%ebp)
 806ae08:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806ae0b:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806ae0e:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806ae11:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806ae14:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806ae17:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806ae1a:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806ae1d:	8b 10                	mov    (%eax),%edx
 806ae1f:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806ae22:	8b 40 04             	mov    0x4(%eax),%eax
 806ae25:	89 c1                	mov    %eax,%ecx
 806ae27:	d3 ea                	shr    %cl,%edx
 806ae29:	89 d0                	mov    %edx,%eax
 806ae2b:	89 c2                	mov    %eax,%edx
 806ae2d:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806ae30:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806ae33:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806ae36:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ae3d:	21 c2                	and    %eax,%edx
 806ae3f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806ae42:	89 10                	mov    %edx,(%eax)
 806ae44:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806ae47:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806ae4a:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806ae4d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806ae50:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806ae53:	8b 50 04             	mov    0x4(%eax),%edx
 806ae56:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806ae59:	01 c2                	add    %eax,%edx
 806ae5b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806ae5e:	89 50 04             	mov    %edx,0x4(%eax)
 806ae61:	b8 01 00 00 00       	mov    $0x1,%eax
 806ae66:	85 c0                	test   %eax,%eax
 806ae68:	75 2e                	jne    806ae98 <.L348+0x4f3>
 806ae6a:	8b 95 f8 fe ff ff    	mov    -0x108(%ebp),%edx
 806ae70:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806ae76:	89 90 0c 07 00 00    	mov    %edx,0x70c(%eax)
 806ae7c:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806ae82:	8b 95 00 ff ff ff    	mov    -0x100(%ebp),%edx
 806ae88:	89 90 04 07 00 00    	mov    %edx,0x704(%eax)
 806ae8e:	b8 02 00 00 00       	mov    $0x2,%eax
 806ae93:	e9 00 02 00 00       	jmp    806b098 <.L349+0x177>
 806ae98:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806ae9e:	ba 01 00 00 00       	mov    $0x1,%edx
 806aea3:	89 c1                	mov    %eax,%ecx
 806aea5:	d3 e2                	shl    %cl,%edx
 806aea7:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806aead:	01 d0                	add    %edx,%eax
 806aeaf:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 806aeb5:	8b 95 fc fe ff ff    	mov    -0x104(%ebp),%edx
 806aebb:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806aec1:	01 d0                	add    %edx,%eax
 806aec3:	3b 45 08             	cmp    0x8(%ebp),%eax
 806aec6:	76 0a                	jbe    806aed2 <.L348+0x52d>
 806aec8:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
 806aecd:	e9 c6 01 00 00       	jmp    806b098 <.L349+0x177>
 806aed2:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806aed8:	8d 50 01             	lea    0x1(%eax),%edx
 806aedb:	89 95 00 ff ff ff    	mov    %edx,-0x100(%ebp)
 806aee1:	8b 95 1c ff ff ff    	mov    -0xe4(%ebp),%edx
 806aee7:	01 d0                	add    %edx,%eax
 806aee9:	c6 00 00             	movb   $0x0,(%eax)
 806aeec:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806aef2:	83 e8 01             	sub    $0x1,%eax
 806aef5:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 806aefb:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806af01:	85 c0                	test   %eax,%eax
 806af03:	75 cd                	jne    806aed2 <.L348+0x52d>
 806af05:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806af0b:	3b 45 08             	cmp    0x8(%ebp),%eax
 806af0e:	0f 82 ee fa ff ff    	jb     806aa02 <.L348+0x5d>
 806af14:	83 bd 04 ff ff ff 00 	cmpl   $0x0,-0xfc(%ebp)
 806af1b:	0f 85 e1 fa ff ff    	jne    806aa02 <.L348+0x5d>

0806af21 <.L349>:
 806af21:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806af27:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806af2a:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
 806af31:	8d 85 fc fe ff ff    	lea    -0x104(%ebp),%eax
 806af37:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806af3a:	e9 81 00 00 00       	jmp    806afc0 <.L349+0x9f>
 806af3f:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806af42:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806af45:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af48:	8b 40 0c             	mov    0xc(%eax),%eax
 806af4b:	85 c0                	test   %eax,%eax
 806af4d:	75 07                	jne    806af56 <.L349+0x35>
 806af4f:	b8 00 00 00 00       	mov    $0x0,%eax
 806af54:	eb 5c                	jmp    806afb2 <.L349+0x91>
 806af56:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af59:	8b 00                	mov    (%eax),%eax
 806af5b:	c1 e8 08             	shr    $0x8,%eax
 806af5e:	89 c2                	mov    %eax,%edx
 806af60:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af63:	89 10                	mov    %edx,(%eax)
 806af65:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af68:	8b 10                	mov    (%eax),%edx
 806af6a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af6d:	8b 40 08             	mov    0x8(%eax),%eax
 806af70:	0f b6 00             	movzbl (%eax),%eax
 806af73:	0f b6 c0             	movzbl %al,%eax
 806af76:	c1 e0 18             	shl    $0x18,%eax
 806af79:	09 c2                	or     %eax,%edx
 806af7b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af7e:	89 10                	mov    %edx,(%eax)
 806af80:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af83:	8b 40 04             	mov    0x4(%eax),%eax
 806af86:	8d 50 f8             	lea    -0x8(%eax),%edx
 806af89:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af8c:	89 50 04             	mov    %edx,0x4(%eax)
 806af8f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af92:	8b 40 0c             	mov    0xc(%eax),%eax
 806af95:	8d 50 ff             	lea    -0x1(%eax),%edx
 806af98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806af9b:	89 50 0c             	mov    %edx,0xc(%eax)
 806af9e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806afa1:	8b 40 08             	mov    0x8(%eax),%eax
 806afa4:	8d 50 01             	lea    0x1(%eax),%edx
 806afa7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806afaa:	89 50 08             	mov    %edx,0x8(%eax)
 806afad:	b8 01 00 00 00       	mov    $0x1,%eax
 806afb2:	85 c0                	test   %eax,%eax
 806afb4:	75 0a                	jne    806afc0 <.L349+0x9f>
 806afb6:	b8 00 00 00 00       	mov    $0x0,%eax
 806afbb:	e9 82 00 00 00       	jmp    806b042 <.L349+0x121>
 806afc0:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806afc3:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806afc6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806afc9:	8b 40 04             	mov    0x4(%eax),%eax
 806afcc:	ba 20 00 00 00       	mov    $0x20,%edx
 806afd1:	29 c2                	sub    %eax,%edx
 806afd3:	89 d0                	mov    %edx,%eax
 806afd5:	39 45 cc             	cmp    %eax,-0x34(%ebp)
 806afd8:	0f 87 61 ff ff ff    	ja     806af3f <.L349+0x1e>
 806afde:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806afe1:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806afe4:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806afe7:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806afea:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806afed:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806aff0:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806aff3:	89 45 e8             	mov    %eax,-0x18(%ebp)
 806aff6:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806aff9:	8b 10                	mov    (%eax),%edx
 806affb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806affe:	8b 40 04             	mov    0x4(%eax),%eax
 806b001:	89 c1                	mov    %eax,%ecx
 806b003:	d3 ea                	shr    %cl,%edx
 806b005:	89 d0                	mov    %edx,%eax
 806b007:	89 c2                	mov    %eax,%edx
 806b009:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806b00c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 806b00f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 806b012:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806b019:	21 c2                	and    %eax,%edx
 806b01b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806b01e:	89 10                	mov    %edx,(%eax)
 806b020:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806b023:	89 45 f0             	mov    %eax,-0x10(%ebp)
 806b026:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806b029:	89 45 f4             	mov    %eax,-0xc(%ebp)
 806b02c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806b02f:	8b 50 04             	mov    0x4(%eax),%edx
 806b032:	8b 45 f4             	mov    -0xc(%ebp),%eax
 806b035:	01 c2                	add    %eax,%edx
 806b037:	8b 45 f0             	mov    -0x10(%ebp),%eax
 806b03a:	89 50 04             	mov    %edx,0x4(%eax)
 806b03d:	b8 01 00 00 00       	mov    $0x1,%eax
 806b042:	85 c0                	test   %eax,%eax
 806b044:	75 14                	jne    806b05a <.L349+0x139>
 806b046:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806b04c:	c7 40 04 04 00 00 00 	movl   $0x4,0x4(%eax)
 806b053:	b8 02 00 00 00       	mov    $0x2,%eax
 806b058:	eb 3e                	jmp    806b098 <.L349+0x177>
 806b05a:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806b060:	85 c0                	test   %eax,%eax
 806b062:	74 1b                	je     806b07f <.L349+0x15e>
 806b064:	8b 45 10             	mov    0x10(%ebp),%eax
 806b067:	8b 00                	mov    (%eax),%eax
 806b069:	8b 55 14             	mov    0x14(%ebp),%edx
 806b06c:	89 54 24 08          	mov    %edx,0x8(%esp)
 806b070:	8b 55 08             	mov    0x8(%ebp),%edx
 806b073:	89 54 24 04          	mov    %edx,0x4(%esp)
 806b077:	89 04 24             	mov    %eax,(%esp)
 806b07a:	e8 49 f3 ff ff       	call   806a3c8 <InverseMoveToFrontTransform>
 806b07f:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806b085:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 806b08c:	b8 01 00 00 00       	mov    $0x1,%eax
 806b091:	eb 05                	jmp    806b098 <.L349+0x177>
 806b093:	b8 e1 ff ff ff       	mov    $0xffffffe1,%eax
 806b098:	81 c4 24 01 00 00    	add    $0x124,%esp
 806b09e:	5b                   	pop    %ebx
 806b09f:	5d                   	pop    %ebp
 806b0a0:	c3                   	ret    

0806b0a1 <DecodeLiteralBlockSwitch>:
 806b0a1:	55                   	push   %ebp
 806b0a2:	89 e5                	mov    %esp,%ebp
 806b0a4:	56                   	push   %esi
 806b0a5:	53                   	push   %ebx
 806b0a6:	81 ec 6c 02 00 00    	sub    $0x26c,%esp
 806b0ac:	e8 3f ea fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806b0b1:	81 c3 4f 4f 04 00    	add    $0x44f4f,%ebx
 806b0b7:	c7 85 b4 fd ff ff 00 	movl   $0x0,-0x24c(%ebp)
 806b0be:	00 00 00 
 806b0c1:	8b 45 08             	mov    0x8(%ebp),%eax
 806b0c4:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806b0ca:	8b 85 b4 fd ff ff    	mov    -0x24c(%ebp),%eax
 806b0d0:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 806b0d6:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806b0dc:	89 85 c0 fd ff ff    	mov    %eax,-0x240(%ebp)
 806b0e2:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%ebp)
 806b0e9:	00 00 00 
 806b0ec:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806b0f2:	8b 95 c4 fd ff ff    	mov    -0x23c(%ebp),%edx
 806b0f8:	83 c2 30             	add    $0x30,%edx
 806b0fb:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 806b0ff:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 806b105:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806b10b:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 806b111:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806b117:	69 c0 e0 09 00 00    	imul   $0x9e0,%eax,%eax
 806b11d:	01 d0                	add    %edx,%eax
 806b11f:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 806b125:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806b12b:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
 806b131:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806b137:	69 c0 30 06 00 00    	imul   $0x630,%eax,%eax
 806b13d:	01 d0                	add    %edx,%eax
 806b13f:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 806b145:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806b14b:	83 c0 08             	add    $0x8,%eax
 806b14e:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 806b154:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806b15a:	01 c0                	add    %eax,%eax
 806b15c:	83 c0 34             	add    $0x34,%eax
 806b15f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806b166:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806b16c:	01 d0                	add    %edx,%eax
 806b16e:	83 c0 04             	add    $0x4,%eax
 806b171:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 806b177:	83 bd c8 fd ff ff 01 	cmpl   $0x1,-0x238(%ebp)
 806b17e:	77 0a                	ja     806b18a <DecodeLiteralBlockSwitch+0xe9>
 806b180:	b8 00 00 00 00       	mov    $0x0,%eax
 806b185:	e9 35 11 00 00       	jmp    806c2bf <DecodeLiteralBlockSwitch+0x121e>
 806b18a:	83 bd bc fd ff ff 00 	cmpl   $0x0,-0x244(%ebp)
 806b191:	0f 85 82 08 00 00    	jne    806ba19 <DecodeLiteralBlockSwitch+0x978>
 806b197:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 806b19d:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 806b1a3:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806b1a9:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 806b1af:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806b1b5:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 806b1bb:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806b1c1:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 806b1c7:	c7 85 ec fd ff ff 10 	movl   $0x10,-0x214(%ebp)
 806b1ce:	00 00 00 
 806b1d1:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b1d7:	8b 40 04             	mov    0x4(%eax),%eax
 806b1da:	83 f8 0f             	cmp    $0xf,%eax
 806b1dd:	0f 86 86 00 00 00    	jbe    806b269 <DecodeLiteralBlockSwitch+0x1c8>
 806b1e3:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b1e9:	8b 00                	mov    (%eax),%eax
 806b1eb:	c1 e8 10             	shr    $0x10,%eax
 806b1ee:	89 c2                	mov    %eax,%edx
 806b1f0:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b1f6:	89 10                	mov    %edx,(%eax)
 806b1f8:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b1fe:	8b 40 04             	mov    0x4(%eax),%eax
 806b201:	83 f0 10             	xor    $0x10,%eax
 806b204:	89 c2                	mov    %eax,%edx
 806b206:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b20c:	89 50 04             	mov    %edx,0x4(%eax)
 806b20f:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b215:	8b 10                	mov    (%eax),%edx
 806b217:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b21d:	8b 40 08             	mov    0x8(%eax),%eax
 806b220:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 806b226:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806b22c:	0f b7 00             	movzwl (%eax),%eax
 806b22f:	0f b7 c0             	movzwl %ax,%eax
 806b232:	c1 e0 10             	shl    $0x10,%eax
 806b235:	09 c2                	or     %eax,%edx
 806b237:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b23d:	89 10                	mov    %edx,(%eax)
 806b23f:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b245:	8b 40 0c             	mov    0xc(%eax),%eax
 806b248:	8d 50 fe             	lea    -0x2(%eax),%edx
 806b24b:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b251:	89 50 0c             	mov    %edx,0xc(%eax)
 806b254:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b25a:	8b 40 08             	mov    0x8(%eax),%eax
 806b25d:	8d 50 02             	lea    0x2(%eax),%edx
 806b260:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806b266:	89 50 08             	mov    %edx,0x8(%eax)
 806b269:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806b26f:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 806b275:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806b27b:	8b 10                	mov    (%eax),%edx
 806b27d:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806b283:	8b 40 04             	mov    0x4(%eax),%eax
 806b286:	89 c1                	mov    %eax,%ecx
 806b288:	d3 ea                	shr    %cl,%edx
 806b28a:	89 d0                	mov    %edx,%eax
 806b28c:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 806b292:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806b298:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 806b29e:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806b2a4:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 806b2aa:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806b2b0:	0f b6 c0             	movzbl %al,%eax
 806b2b3:	c1 e0 02             	shl    $0x2,%eax
 806b2b6:	01 85 fc fd ff ff    	add    %eax,-0x204(%ebp)
 806b2bc:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806b2c2:	0f b6 00             	movzbl (%eax),%eax
 806b2c5:	3c 08                	cmp    $0x8,%al
 806b2c7:	0f 86 83 00 00 00    	jbe    806b350 <DecodeLiteralBlockSwitch+0x2af>
 806b2cd:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806b2d3:	0f b6 00             	movzbl (%eax),%eax
 806b2d6:	0f b6 c0             	movzbl %al,%eax
 806b2d9:	83 e8 08             	sub    $0x8,%eax
 806b2dc:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 806b2e2:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 806b2e8:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 806b2ee:	c7 85 0c fe ff ff 08 	movl   $0x8,-0x1f4(%ebp)
 806b2f5:	00 00 00 
 806b2f8:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806b2fe:	8b 50 04             	mov    0x4(%eax),%edx
 806b301:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806b307:	01 c2                	add    %eax,%edx
 806b309:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806b30f:	89 50 04             	mov    %edx,0x4(%eax)
 806b312:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806b318:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806b31c:	0f b7 d0             	movzwl %ax,%edx
 806b31f:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806b325:	c1 e8 08             	shr    $0x8,%eax
 806b328:	89 c1                	mov    %eax,%ecx
 806b32a:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806b330:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 806b336:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 806b33c:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806b343:	21 c8                	and    %ecx,%eax
 806b345:	01 d0                	add    %edx,%eax
 806b347:	c1 e0 02             	shl    $0x2,%eax
 806b34a:	01 85 fc fd ff ff    	add    %eax,-0x204(%ebp)
 806b350:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806b356:	0f b6 00             	movzbl (%eax),%eax
 806b359:	0f b6 c0             	movzbl %al,%eax
 806b35c:	8b 95 00 fe ff ff    	mov    -0x200(%ebp),%edx
 806b362:	89 95 14 fe ff ff    	mov    %edx,-0x1ec(%ebp)
 806b368:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 806b36e:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806b374:	8b 50 04             	mov    0x4(%eax),%edx
 806b377:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806b37d:	01 c2                	add    %eax,%edx
 806b37f:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806b385:	89 50 04             	mov    %edx,0x4(%eax)
 806b388:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806b38e:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806b392:	0f b7 c0             	movzwl %ax,%eax
 806b395:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806b39b:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806b3a1:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%ebp)
 806b3a7:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806b3ad:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 806b3b3:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 806b3b9:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 806b3bf:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806b3c5:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 806b3cb:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806b3d1:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 806b3d7:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806b3dd:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 806b3e3:	c7 85 34 fe ff ff 10 	movl   $0x10,-0x1cc(%ebp)
 806b3ea:	00 00 00 
 806b3ed:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b3f3:	8b 40 04             	mov    0x4(%eax),%eax
 806b3f6:	83 f8 0f             	cmp    $0xf,%eax
 806b3f9:	0f 86 86 00 00 00    	jbe    806b485 <DecodeLiteralBlockSwitch+0x3e4>
 806b3ff:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b405:	8b 00                	mov    (%eax),%eax
 806b407:	c1 e8 10             	shr    $0x10,%eax
 806b40a:	89 c2                	mov    %eax,%edx
 806b40c:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b412:	89 10                	mov    %edx,(%eax)
 806b414:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b41a:	8b 40 04             	mov    0x4(%eax),%eax
 806b41d:	83 f0 10             	xor    $0x10,%eax
 806b420:	89 c2                	mov    %eax,%edx
 806b422:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b428:	89 50 04             	mov    %edx,0x4(%eax)
 806b42b:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b431:	8b 10                	mov    (%eax),%edx
 806b433:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b439:	8b 40 08             	mov    0x8(%eax),%eax
 806b43c:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 806b442:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806b448:	0f b7 00             	movzwl (%eax),%eax
 806b44b:	0f b7 c0             	movzwl %ax,%eax
 806b44e:	c1 e0 10             	shl    $0x10,%eax
 806b451:	09 c2                	or     %eax,%edx
 806b453:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b459:	89 10                	mov    %edx,(%eax)
 806b45b:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b461:	8b 40 0c             	mov    0xc(%eax),%eax
 806b464:	8d 50 fe             	lea    -0x2(%eax),%edx
 806b467:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b46d:	89 50 0c             	mov    %edx,0xc(%eax)
 806b470:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b476:	8b 40 08             	mov    0x8(%eax),%eax
 806b479:	8d 50 02             	lea    0x2(%eax),%edx
 806b47c:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806b482:	89 50 08             	mov    %edx,0x8(%eax)
 806b485:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806b48b:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 806b491:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806b497:	8b 10                	mov    (%eax),%edx
 806b499:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806b49f:	8b 40 04             	mov    0x4(%eax),%eax
 806b4a2:	89 c1                	mov    %eax,%ecx
 806b4a4:	d3 ea                	shr    %cl,%edx
 806b4a6:	89 d0                	mov    %edx,%eax
 806b4a8:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 806b4ae:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806b4b4:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%ebp)
 806b4ba:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806b4c0:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 806b4c6:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806b4cc:	0f b6 c0             	movzbl %al,%eax
 806b4cf:	c1 e0 02             	shl    $0x2,%eax
 806b4d2:	01 85 44 fe ff ff    	add    %eax,-0x1bc(%ebp)
 806b4d8:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806b4de:	0f b6 00             	movzbl (%eax),%eax
 806b4e1:	3c 08                	cmp    $0x8,%al
 806b4e3:	0f 86 83 00 00 00    	jbe    806b56c <DecodeLiteralBlockSwitch+0x4cb>
 806b4e9:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806b4ef:	0f b6 00             	movzbl (%eax),%eax
 806b4f2:	0f b6 c0             	movzbl %al,%eax
 806b4f5:	83 e8 08             	sub    $0x8,%eax
 806b4f8:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 806b4fe:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 806b504:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 806b50a:	c7 85 54 fe ff ff 08 	movl   $0x8,-0x1ac(%ebp)
 806b511:	00 00 00 
 806b514:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806b51a:	8b 50 04             	mov    0x4(%eax),%edx
 806b51d:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806b523:	01 c2                	add    %eax,%edx
 806b525:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806b52b:	89 50 04             	mov    %edx,0x4(%eax)
 806b52e:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806b534:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806b538:	0f b7 d0             	movzwl %ax,%edx
 806b53b:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806b541:	c1 e8 08             	shr    $0x8,%eax
 806b544:	89 c1                	mov    %eax,%ecx
 806b546:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806b54c:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%ebp)
 806b552:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 806b558:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806b55f:	21 c8                	and    %ecx,%eax
 806b561:	01 d0                	add    %edx,%eax
 806b563:	c1 e0 02             	shl    $0x2,%eax
 806b566:	01 85 44 fe ff ff    	add    %eax,-0x1bc(%ebp)
 806b56c:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806b572:	0f b6 00             	movzbl (%eax),%eax
 806b575:	0f b6 c0             	movzbl %al,%eax
 806b578:	8b 95 48 fe ff ff    	mov    -0x1b8(%ebp),%edx
 806b57e:	89 95 5c fe ff ff    	mov    %edx,-0x1a4(%ebp)
 806b584:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 806b58a:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806b590:	8b 50 04             	mov    0x4(%eax),%edx
 806b593:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806b599:	01 c2                	add    %eax,%edx
 806b59b:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806b5a1:	89 50 04             	mov    %edx,0x4(%eax)
 806b5a4:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806b5aa:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806b5ae:	0f b7 c0             	movzwl %ax,%eax
 806b5b1:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%ebp)
 806b5b7:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806b5bd:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806b5c4:	ff 
 806b5c5:	0f b6 c0             	movzbl %al,%eax
 806b5c8:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 806b5ce:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806b5d4:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806b5db:	ff 
 806b5dc:	0f b7 d0             	movzwl %ax,%edx
 806b5df:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806b5e5:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 806b5eb:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 806b5f1:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 806b5f7:	83 bd 70 fe ff ff 10 	cmpl   $0x10,-0x190(%ebp)
 806b5fe:	0f 87 53 01 00 00    	ja     806b757 <DecodeLiteralBlockSwitch+0x6b6>
 806b604:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806b60a:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 806b610:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806b616:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 806b61c:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b622:	8b 40 04             	mov    0x4(%eax),%eax
 806b625:	83 f8 0f             	cmp    $0xf,%eax
 806b628:	0f 86 86 00 00 00    	jbe    806b6b4 <DecodeLiteralBlockSwitch+0x613>
 806b62e:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b634:	8b 00                	mov    (%eax),%eax
 806b636:	c1 e8 10             	shr    $0x10,%eax
 806b639:	89 c1                	mov    %eax,%ecx
 806b63b:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b641:	89 08                	mov    %ecx,(%eax)
 806b643:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b649:	8b 40 04             	mov    0x4(%eax),%eax
 806b64c:	83 f0 10             	xor    $0x10,%eax
 806b64f:	89 c1                	mov    %eax,%ecx
 806b651:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b657:	89 48 04             	mov    %ecx,0x4(%eax)
 806b65a:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b660:	8b 08                	mov    (%eax),%ecx
 806b662:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b668:	8b 40 08             	mov    0x8(%eax),%eax
 806b66b:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 806b671:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806b677:	0f b7 00             	movzwl (%eax),%eax
 806b67a:	0f b7 c0             	movzwl %ax,%eax
 806b67d:	c1 e0 10             	shl    $0x10,%eax
 806b680:	09 c1                	or     %eax,%ecx
 806b682:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b688:	89 08                	mov    %ecx,(%eax)
 806b68a:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b690:	8b 40 0c             	mov    0xc(%eax),%eax
 806b693:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806b696:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b69c:	89 48 0c             	mov    %ecx,0xc(%eax)
 806b69f:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b6a5:	8b 40 08             	mov    0x8(%eax),%eax
 806b6a8:	8d 48 02             	lea    0x2(%eax),%ecx
 806b6ab:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806b6b1:	89 48 08             	mov    %ecx,0x8(%eax)
 806b6b4:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806b6ba:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 806b6c0:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806b6c6:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 806b6cc:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806b6cf:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 806b6d5:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806b6db:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 806b6e1:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 806b6e7:	8b 30                	mov    (%eax),%esi
 806b6e9:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 806b6ef:	8b 40 04             	mov    0x4(%eax),%eax
 806b6f2:	89 c1                	mov    %eax,%ecx
 806b6f4:	d3 ee                	shr    %cl,%esi
 806b6f6:	89 f0                	mov    %esi,%eax
 806b6f8:	89 c1                	mov    %eax,%ecx
 806b6fa:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806b700:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 806b706:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 806b70c:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806b713:	21 c1                	and    %eax,%ecx
 806b715:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 806b71b:	89 08                	mov    %ecx,(%eax)
 806b71d:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806b723:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 806b729:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806b72f:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 806b735:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806b73b:	8b 48 04             	mov    0x4(%eax),%ecx
 806b73e:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 806b744:	01 c1                	add    %eax,%ecx
 806b746:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806b74c:	89 48 04             	mov    %ecx,0x4(%eax)
 806b74f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806b752:	e9 a6 02 00 00       	jmp    806b9fd <DecodeLiteralBlockSwitch+0x95c>
 806b757:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806b75d:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 806b763:	c7 85 a0 fe ff ff 10 	movl   $0x10,-0x160(%ebp)
 806b76a:	00 00 00 
 806b76d:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b773:	8b 40 04             	mov    0x4(%eax),%eax
 806b776:	83 f8 0f             	cmp    $0xf,%eax
 806b779:	0f 86 86 00 00 00    	jbe    806b805 <DecodeLiteralBlockSwitch+0x764>
 806b77f:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b785:	8b 00                	mov    (%eax),%eax
 806b787:	c1 e8 10             	shr    $0x10,%eax
 806b78a:	89 c1                	mov    %eax,%ecx
 806b78c:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b792:	89 08                	mov    %ecx,(%eax)
 806b794:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b79a:	8b 40 04             	mov    0x4(%eax),%eax
 806b79d:	83 f0 10             	xor    $0x10,%eax
 806b7a0:	89 c1                	mov    %eax,%ecx
 806b7a2:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7a8:	89 48 04             	mov    %ecx,0x4(%eax)
 806b7ab:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7b1:	8b 08                	mov    (%eax),%ecx
 806b7b3:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7b9:	8b 40 08             	mov    0x8(%eax),%eax
 806b7bc:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 806b7c2:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 806b7c8:	0f b7 00             	movzwl (%eax),%eax
 806b7cb:	0f b7 c0             	movzwl %ax,%eax
 806b7ce:	c1 e0 10             	shl    $0x10,%eax
 806b7d1:	09 c1                	or     %eax,%ecx
 806b7d3:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7d9:	89 08                	mov    %ecx,(%eax)
 806b7db:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7e1:	8b 40 0c             	mov    0xc(%eax),%eax
 806b7e4:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806b7e7:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7ed:	89 48 0c             	mov    %ecx,0xc(%eax)
 806b7f0:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b7f6:	8b 40 08             	mov    0x8(%eax),%eax
 806b7f9:	8d 48 02             	lea    0x2(%eax),%ecx
 806b7fc:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806b802:	89 48 08             	mov    %ecx,0x8(%eax)
 806b805:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806b80b:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 806b811:	c7 85 ac fe ff ff 10 	movl   $0x10,-0x154(%ebp)
 806b818:	00 00 00 
 806b81b:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806b821:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 806b827:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 806b82d:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 806b833:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 806b839:	8b 30                	mov    (%eax),%esi
 806b83b:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 806b841:	8b 40 04             	mov    0x4(%eax),%eax
 806b844:	89 c1                	mov    %eax,%ecx
 806b846:	d3 ee                	shr    %cl,%esi
 806b848:	89 f0                	mov    %esi,%eax
 806b84a:	89 c1                	mov    %eax,%ecx
 806b84c:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806b852:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 806b858:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 806b85e:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806b865:	21 c1                	and    %eax,%ecx
 806b867:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
 806b86d:	89 08                	mov    %ecx,(%eax)
 806b86f:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 806b875:	89 85 bc fe ff ff    	mov    %eax,-0x144(%ebp)
 806b87b:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806b881:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 806b887:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806b88d:	8b 48 04             	mov    0x4(%eax),%ecx
 806b890:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 806b896:	01 c1                	add    %eax,%ecx
 806b898:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806b89e:	89 48 04             	mov    %ecx,0x4(%eax)
 806b8a1:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806b8a7:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 806b8ad:	c7 85 c8 fe ff ff 08 	movl   $0x8,-0x138(%ebp)
 806b8b4:	00 00 00 
 806b8b7:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b8bd:	8b 40 04             	mov    0x4(%eax),%eax
 806b8c0:	83 f8 0f             	cmp    $0xf,%eax
 806b8c3:	0f 86 86 00 00 00    	jbe    806b94f <DecodeLiteralBlockSwitch+0x8ae>
 806b8c9:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b8cf:	8b 00                	mov    (%eax),%eax
 806b8d1:	c1 e8 10             	shr    $0x10,%eax
 806b8d4:	89 c1                	mov    %eax,%ecx
 806b8d6:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b8dc:	89 08                	mov    %ecx,(%eax)
 806b8de:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b8e4:	8b 40 04             	mov    0x4(%eax),%eax
 806b8e7:	83 f0 10             	xor    $0x10,%eax
 806b8ea:	89 c1                	mov    %eax,%ecx
 806b8ec:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b8f2:	89 48 04             	mov    %ecx,0x4(%eax)
 806b8f5:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b8fb:	8b 08                	mov    (%eax),%ecx
 806b8fd:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b903:	8b 40 08             	mov    0x8(%eax),%eax
 806b906:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 806b90c:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 806b912:	0f b7 00             	movzwl (%eax),%eax
 806b915:	0f b7 c0             	movzwl %ax,%eax
 806b918:	c1 e0 10             	shl    $0x10,%eax
 806b91b:	09 c1                	or     %eax,%ecx
 806b91d:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b923:	89 08                	mov    %ecx,(%eax)
 806b925:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b92b:	8b 40 0c             	mov    0xc(%eax),%eax
 806b92e:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806b931:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b937:	89 48 0c             	mov    %ecx,0xc(%eax)
 806b93a:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b940:	8b 40 08             	mov    0x8(%eax),%eax
 806b943:	8d 48 02             	lea    0x2(%eax),%ecx
 806b946:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806b94c:	89 48 08             	mov    %ecx,0x8(%eax)
 806b94f:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806b955:	8d 48 f0             	lea    -0x10(%eax),%ecx
 806b958:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806b95e:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 806b964:	89 8d d4 fe ff ff    	mov    %ecx,-0x12c(%ebp)
 806b96a:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806b96d:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 806b973:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 806b979:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 806b97f:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 806b985:	8b 30                	mov    (%eax),%esi
 806b987:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 806b98d:	8b 40 04             	mov    0x4(%eax),%eax
 806b990:	89 c1                	mov    %eax,%ecx
 806b992:	d3 ee                	shr    %cl,%esi
 806b994:	89 f0                	mov    %esi,%eax
 806b996:	89 c1                	mov    %eax,%ecx
 806b998:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806b99e:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 806b9a4:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 806b9aa:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806b9b1:	21 c1                	and    %eax,%ecx
 806b9b3:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 806b9b9:	89 08                	mov    %ecx,(%eax)
 806b9bb:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 806b9c1:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 806b9c7:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806b9cd:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 806b9d3:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806b9d9:	8b 48 04             	mov    0x4(%eax),%ecx
 806b9dc:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 806b9e2:	01 c1                	add    %eax,%ecx
 806b9e4:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806b9ea:	89 48 04             	mov    %ecx,0x4(%eax)
 806b9ed:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806b9f0:	c1 e0 10             	shl    $0x10,%eax
 806b9f3:	89 c1                	mov    %eax,%ecx
 806b9f5:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806b9fb:	09 c8                	or     %ecx,%eax
 806b9fd:	01 d0                	add    %edx,%eax
 806b9ff:	89 c2                	mov    %eax,%edx
 806ba01:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806ba07:	8b 8d c4 fd ff ff    	mov    -0x23c(%ebp),%ecx
 806ba0d:	83 c1 2c             	add    $0x2c,%ecx
 806ba10:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 806ba14:	e9 15 08 00 00       	jmp    806c22e <DecodeLiteralBlockSwitch+0x118d>
 806ba19:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806ba1f:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 806ba25:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806ba28:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 806ba2e:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806ba34:	8b 10                	mov    (%eax),%edx
 806ba36:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806ba3c:	89 10                	mov    %edx,(%eax)
 806ba3e:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806ba44:	8b 50 04             	mov    0x4(%eax),%edx
 806ba47:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806ba4d:	89 50 04             	mov    %edx,0x4(%eax)
 806ba50:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806ba56:	8b 50 08             	mov    0x8(%eax),%edx
 806ba59:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806ba5f:	89 50 08             	mov    %edx,0x8(%eax)
 806ba62:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806ba68:	8b 50 0c             	mov    0xc(%eax),%edx
 806ba6b:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806ba71:	89 50 0c             	mov    %edx,0xc(%eax)
 806ba74:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 806ba7a:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 806ba80:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806ba86:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 806ba8c:	8d 85 a8 fd ff ff    	lea    -0x258(%ebp),%eax
 806ba92:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 806ba98:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806ba9e:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 806baa4:	c7 85 04 ff ff ff 0f 	movl   $0xf,-0xfc(%ebp)
 806baab:	00 00 00 
 806baae:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806bab4:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 806baba:	e9 a8 00 00 00       	jmp    806bb67 <DecodeLiteralBlockSwitch+0xac6>
 806babf:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806bac5:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 806bacb:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bad1:	8b 40 0c             	mov    0xc(%eax),%eax
 806bad4:	85 c0                	test   %eax,%eax
 806bad6:	75 07                	jne    806badf <DecodeLiteralBlockSwitch+0xa3e>
 806bad8:	b8 00 00 00 00       	mov    $0x0,%eax
 806badd:	eb 7d                	jmp    806bb5c <DecodeLiteralBlockSwitch+0xabb>
 806badf:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bae5:	8b 00                	mov    (%eax),%eax
 806bae7:	c1 e8 08             	shr    $0x8,%eax
 806baea:	89 c2                	mov    %eax,%edx
 806baec:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806baf2:	89 10                	mov    %edx,(%eax)
 806baf4:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bafa:	8b 10                	mov    (%eax),%edx
 806bafc:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb02:	8b 40 08             	mov    0x8(%eax),%eax
 806bb05:	0f b6 00             	movzbl (%eax),%eax
 806bb08:	0f b6 c0             	movzbl %al,%eax
 806bb0b:	c1 e0 18             	shl    $0x18,%eax
 806bb0e:	09 c2                	or     %eax,%edx
 806bb10:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb16:	89 10                	mov    %edx,(%eax)
 806bb18:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb1e:	8b 40 04             	mov    0x4(%eax),%eax
 806bb21:	8d 50 f8             	lea    -0x8(%eax),%edx
 806bb24:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb2a:	89 50 04             	mov    %edx,0x4(%eax)
 806bb2d:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb33:	8b 40 0c             	mov    0xc(%eax),%eax
 806bb36:	8d 50 ff             	lea    -0x1(%eax),%edx
 806bb39:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb3f:	89 50 0c             	mov    %edx,0xc(%eax)
 806bb42:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb48:	8b 40 08             	mov    0x8(%eax),%eax
 806bb4b:	8d 50 01             	lea    0x1(%eax),%edx
 806bb4e:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806bb54:	89 50 08             	mov    %edx,0x8(%eax)
 806bb57:	b8 01 00 00 00       	mov    $0x1,%eax
 806bb5c:	85 c0                	test   %eax,%eax
 806bb5e:	75 07                	jne    806bb67 <DecodeLiteralBlockSwitch+0xac6>
 806bb60:	b8 00 00 00 00       	mov    $0x0,%eax
 806bb65:	eb 77                	jmp    806bbde <DecodeLiteralBlockSwitch+0xb3d>
 806bb67:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806bb6d:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 806bb73:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806bb79:	8b 40 04             	mov    0x4(%eax),%eax
 806bb7c:	ba 20 00 00 00       	mov    $0x20,%edx
 806bb81:	29 c2                	sub    %eax,%edx
 806bb83:	89 d0                	mov    %edx,%eax
 806bb85:	39 85 04 ff ff ff    	cmp    %eax,-0xfc(%ebp)
 806bb8b:	0f 87 2e ff ff ff    	ja     806babf <DecodeLiteralBlockSwitch+0xa1e>
 806bb91:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806bb97:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 806bb9d:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806bba3:	8b 10                	mov    (%eax),%edx
 806bba5:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806bbab:	8b 40 04             	mov    0x4(%eax),%eax
 806bbae:	89 c1                	mov    %eax,%ecx
 806bbb0:	d3 ea                	shr    %cl,%edx
 806bbb2:	89 d0                	mov    %edx,%eax
 806bbb4:	89 c2                	mov    %eax,%edx
 806bbb6:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 806bbbc:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 806bbc2:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 806bbc8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806bbcf:	21 c2                	and    %eax,%edx
 806bbd1:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806bbd7:	89 10                	mov    %edx,(%eax)
 806bbd9:	b8 01 00 00 00       	mov    $0x1,%eax
 806bbde:	85 c0                	test   %eax,%eax
 806bbe0:	0f 95 c0             	setne  %al
 806bbe3:	0f b6 c0             	movzbl %al,%eax
 806bbe6:	85 c0                	test   %eax,%eax
 806bbe8:	0f 84 20 01 00 00    	je     806bd0e <DecodeLiteralBlockSwitch+0xc6d>
 806bbee:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806bbf4:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 806bbfa:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806bc00:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 806bc06:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806bc0c:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 806bc12:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806bc18:	0f b6 c0             	movzbl %al,%eax
 806bc1b:	c1 e0 02             	shl    $0x2,%eax
 806bc1e:	01 85 20 ff ff ff    	add    %eax,-0xe0(%ebp)
 806bc24:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806bc2a:	0f b6 00             	movzbl (%eax),%eax
 806bc2d:	3c 08                	cmp    $0x8,%al
 806bc2f:	0f 86 83 00 00 00    	jbe    806bcb8 <DecodeLiteralBlockSwitch+0xc17>
 806bc35:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806bc3b:	0f b6 00             	movzbl (%eax),%eax
 806bc3e:	0f b6 c0             	movzbl %al,%eax
 806bc41:	83 e8 08             	sub    $0x8,%eax
 806bc44:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 806bc4a:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806bc50:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 806bc56:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%ebp)
 806bc5d:	00 00 00 
 806bc60:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806bc66:	8b 50 04             	mov    0x4(%eax),%edx
 806bc69:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806bc6f:	01 c2                	add    %eax,%edx
 806bc71:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806bc77:	89 50 04             	mov    %edx,0x4(%eax)
 806bc7a:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806bc80:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806bc84:	0f b7 d0             	movzwl %ax,%edx
 806bc87:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806bc8d:	c1 e8 08             	shr    $0x8,%eax
 806bc90:	89 c1                	mov    %eax,%ecx
 806bc92:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806bc98:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 806bc9e:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 806bca4:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806bcab:	21 c8                	and    %ecx,%eax
 806bcad:	01 d0                	add    %edx,%eax
 806bcaf:	c1 e0 02             	shl    $0x2,%eax
 806bcb2:	01 85 20 ff ff ff    	add    %eax,-0xe0(%ebp)
 806bcb8:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806bcbe:	0f b6 00             	movzbl (%eax),%eax
 806bcc1:	0f b6 c0             	movzbl %al,%eax
 806bcc4:	8b 95 24 ff ff ff    	mov    -0xdc(%ebp),%edx
 806bcca:	89 95 38 ff ff ff    	mov    %edx,-0xc8(%ebp)
 806bcd0:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 806bcd6:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806bcdc:	8b 50 04             	mov    0x4(%eax),%edx
 806bcdf:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806bce5:	01 c2                	add    %eax,%edx
 806bce7:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806bced:	89 50 04             	mov    %edx,0x4(%eax)
 806bcf0:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806bcf6:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806bcfa:	0f b7 c0             	movzwl %ax,%eax
 806bcfd:	89 c2                	mov    %eax,%edx
 806bcff:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806bd05:	89 10                	mov    %edx,(%eax)
 806bd07:	b8 01 00 00 00       	mov    $0x1,%eax
 806bd0c:	eb 22                	jmp    806bd30 <DecodeLiteralBlockSwitch+0xc8f>
 806bd0e:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806bd14:	89 44 24 08          	mov    %eax,0x8(%esp)
 806bd18:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806bd1e:	89 44 24 04          	mov    %eax,0x4(%esp)
 806bd22:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806bd28:	89 04 24             	mov    %eax,(%esp)
 806bd2b:	e8 9c cc ff ff       	call   80689cc <SafeDecodeSymbol>
 806bd30:	85 c0                	test   %eax,%eax
 806bd32:	75 0a                	jne    806bd3e <DecodeLiteralBlockSwitch+0xc9d>
 806bd34:	b8 00 00 00 00       	mov    $0x0,%eax
 806bd39:	e9 81 05 00 00       	jmp    806c2bf <DecodeLiteralBlockSwitch+0x121e>
 806bd3e:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806bd44:	83 c0 2c             	add    $0x2c,%eax
 806bd47:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806bd4e:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806bd54:	01 d0                	add    %edx,%eax
 806bd56:	8d 50 0c             	lea    0xc(%eax),%edx
 806bd59:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806bd5f:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 806bd65:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
 806bd6b:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806bd71:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 806bd77:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806bd7d:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806bd83:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806bd89:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 806bd8f:	85 c0                	test   %eax,%eax
 806bd91:	0f 85 93 02 00 00    	jne    806c02a <DecodeLiteralBlockSwitch+0xf89>
 806bd97:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806bd9d:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 806bda3:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806bda9:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 806bdaf:	8d 85 ac fd ff ff    	lea    -0x254(%ebp),%eax
 806bdb5:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 806bdbb:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806bdc1:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 806bdc7:	c7 85 60 ff ff ff 0f 	movl   $0xf,-0xa0(%ebp)
 806bdce:	00 00 00 
 806bdd1:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806bdd7:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806bddd:	e9 a8 00 00 00       	jmp    806be8a <DecodeLiteralBlockSwitch+0xde9>
 806bde2:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806bde8:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 806bdee:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806bdf4:	8b 40 0c             	mov    0xc(%eax),%eax
 806bdf7:	85 c0                	test   %eax,%eax
 806bdf9:	75 07                	jne    806be02 <DecodeLiteralBlockSwitch+0xd61>
 806bdfb:	b8 00 00 00 00       	mov    $0x0,%eax
 806be00:	eb 7d                	jmp    806be7f <DecodeLiteralBlockSwitch+0xdde>
 806be02:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be08:	8b 00                	mov    (%eax),%eax
 806be0a:	c1 e8 08             	shr    $0x8,%eax
 806be0d:	89 c2                	mov    %eax,%edx
 806be0f:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be15:	89 10                	mov    %edx,(%eax)
 806be17:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be1d:	8b 10                	mov    (%eax),%edx
 806be1f:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be25:	8b 40 08             	mov    0x8(%eax),%eax
 806be28:	0f b6 00             	movzbl (%eax),%eax
 806be2b:	0f b6 c0             	movzbl %al,%eax
 806be2e:	c1 e0 18             	shl    $0x18,%eax
 806be31:	09 c2                	or     %eax,%edx
 806be33:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be39:	89 10                	mov    %edx,(%eax)
 806be3b:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be41:	8b 40 04             	mov    0x4(%eax),%eax
 806be44:	8d 50 f8             	lea    -0x8(%eax),%edx
 806be47:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be4d:	89 50 04             	mov    %edx,0x4(%eax)
 806be50:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be56:	8b 40 0c             	mov    0xc(%eax),%eax
 806be59:	8d 50 ff             	lea    -0x1(%eax),%edx
 806be5c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be62:	89 50 0c             	mov    %edx,0xc(%eax)
 806be65:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be6b:	8b 40 08             	mov    0x8(%eax),%eax
 806be6e:	8d 50 01             	lea    0x1(%eax),%edx
 806be71:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806be77:	89 50 08             	mov    %edx,0x8(%eax)
 806be7a:	b8 01 00 00 00       	mov    $0x1,%eax
 806be7f:	85 c0                	test   %eax,%eax
 806be81:	75 07                	jne    806be8a <DecodeLiteralBlockSwitch+0xde9>
 806be83:	b8 00 00 00 00       	mov    $0x0,%eax
 806be88:	eb 77                	jmp    806bf01 <DecodeLiteralBlockSwitch+0xe60>
 806be8a:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806be90:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 806be96:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806be9c:	8b 40 04             	mov    0x4(%eax),%eax
 806be9f:	ba 20 00 00 00       	mov    $0x20,%edx
 806bea4:	29 c2                	sub    %eax,%edx
 806bea6:	89 d0                	mov    %edx,%eax
 806bea8:	39 85 60 ff ff ff    	cmp    %eax,-0xa0(%ebp)
 806beae:	0f 87 2e ff ff ff    	ja     806bde2 <DecodeLiteralBlockSwitch+0xd41>
 806beb4:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806beba:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 806bec0:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806bec6:	8b 10                	mov    (%eax),%edx
 806bec8:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806bece:	8b 40 04             	mov    0x4(%eax),%eax
 806bed1:	89 c1                	mov    %eax,%ecx
 806bed3:	d3 ea                	shr    %cl,%edx
 806bed5:	89 d0                	mov    %edx,%eax
 806bed7:	89 c2                	mov    %eax,%edx
 806bed9:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806bedf:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 806bee5:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806beeb:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806bef2:	21 c2                	and    %eax,%edx
 806bef4:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806befa:	89 10                	mov    %edx,(%eax)
 806befc:	b8 01 00 00 00       	mov    $0x1,%eax
 806bf01:	85 c0                	test   %eax,%eax
 806bf03:	0f 95 c0             	setne  %al
 806bf06:	0f b6 c0             	movzbl %al,%eax
 806bf09:	85 c0                	test   %eax,%eax
 806bf0b:	0f 84 e9 00 00 00    	je     806bffa <DecodeLiteralBlockSwitch+0xf59>
 806bf11:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806bf17:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 806bf1d:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806bf23:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 806bf29:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806bf2f:	89 45 80             	mov    %eax,-0x80(%ebp)
 806bf32:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806bf38:	0f b6 c0             	movzbl %al,%eax
 806bf3b:	c1 e0 02             	shl    $0x2,%eax
 806bf3e:	01 85 7c ff ff ff    	add    %eax,-0x84(%ebp)
 806bf44:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806bf4a:	0f b6 00             	movzbl (%eax),%eax
 806bf4d:	3c 08                	cmp    $0x8,%al
 806bf4f:	76 65                	jbe    806bfb6 <DecodeLiteralBlockSwitch+0xf15>
 806bf51:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806bf57:	0f b6 00             	movzbl (%eax),%eax
 806bf5a:	0f b6 c0             	movzbl %al,%eax
 806bf5d:	83 e8 08             	sub    $0x8,%eax
 806bf60:	89 45 84             	mov    %eax,-0x7c(%ebp)
 806bf63:	8b 45 80             	mov    -0x80(%ebp),%eax
 806bf66:	89 45 88             	mov    %eax,-0x78(%ebp)
 806bf69:	c7 45 8c 08 00 00 00 	movl   $0x8,-0x74(%ebp)
 806bf70:	8b 45 88             	mov    -0x78(%ebp),%eax
 806bf73:	8b 50 04             	mov    0x4(%eax),%edx
 806bf76:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806bf79:	01 c2                	add    %eax,%edx
 806bf7b:	8b 45 88             	mov    -0x78(%ebp),%eax
 806bf7e:	89 50 04             	mov    %edx,0x4(%eax)
 806bf81:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806bf87:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806bf8b:	0f b7 d0             	movzwl %ax,%edx
 806bf8e:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806bf94:	c1 e8 08             	shr    $0x8,%eax
 806bf97:	89 c1                	mov    %eax,%ecx
 806bf99:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806bf9c:	89 45 90             	mov    %eax,-0x70(%ebp)
 806bf9f:	8b 45 90             	mov    -0x70(%ebp),%eax
 806bfa2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806bfa9:	21 c8                	and    %ecx,%eax
 806bfab:	01 d0                	add    %edx,%eax
 806bfad:	c1 e0 02             	shl    $0x2,%eax
 806bfb0:	01 85 7c ff ff ff    	add    %eax,-0x84(%ebp)
 806bfb6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806bfbc:	0f b6 00             	movzbl (%eax),%eax
 806bfbf:	0f b6 c0             	movzbl %al,%eax
 806bfc2:	8b 55 80             	mov    -0x80(%ebp),%edx
 806bfc5:	89 55 94             	mov    %edx,-0x6c(%ebp)
 806bfc8:	89 45 98             	mov    %eax,-0x68(%ebp)
 806bfcb:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806bfce:	8b 50 04             	mov    0x4(%eax),%edx
 806bfd1:	8b 45 98             	mov    -0x68(%ebp),%eax
 806bfd4:	01 c2                	add    %eax,%edx
 806bfd6:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806bfd9:	89 50 04             	mov    %edx,0x4(%eax)
 806bfdc:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806bfe2:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806bfe6:	0f b7 c0             	movzwl %ax,%eax
 806bfe9:	89 c2                	mov    %eax,%edx
 806bfeb:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806bff1:	89 10                	mov    %edx,(%eax)
 806bff3:	b8 01 00 00 00       	mov    $0x1,%eax
 806bff8:	eb 22                	jmp    806c01c <DecodeLiteralBlockSwitch+0xf7b>
 806bffa:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806c000:	89 44 24 08          	mov    %eax,0x8(%esp)
 806c004:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806c00a:	89 44 24 04          	mov    %eax,0x4(%esp)
 806c00e:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806c014:	89 04 24             	mov    %eax,(%esp)
 806c017:	e8 b0 c9 ff ff       	call   80689cc <SafeDecodeSymbol>
 806c01c:	85 c0                	test   %eax,%eax
 806c01e:	75 1c                	jne    806c03c <DecodeLiteralBlockSwitch+0xf9b>
 806c020:	b8 00 00 00 00       	mov    $0x0,%eax
 806c025:	e9 a9 01 00 00       	jmp    806c1d3 <DecodeLiteralBlockSwitch+0x1132>
 806c02a:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806c030:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 806c036:	89 85 ac fd ff ff    	mov    %eax,-0x254(%ebp)
 806c03c:	8b 85 ac fd ff ff    	mov    -0x254(%ebp),%eax
 806c042:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806c049:	ff 
 806c04a:	0f b6 c0             	movzbl %al,%eax
 806c04d:	89 45 9c             	mov    %eax,-0x64(%ebp)
 806c050:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806c056:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806c059:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806c05c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 806c05f:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806c065:	89 45 a8             	mov    %eax,-0x58(%ebp)
 806c068:	e9 81 00 00 00       	jmp    806c0ee <DecodeLiteralBlockSwitch+0x104d>
 806c06d:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806c070:	89 45 ac             	mov    %eax,-0x54(%ebp)
 806c073:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c076:	8b 40 0c             	mov    0xc(%eax),%eax
 806c079:	85 c0                	test   %eax,%eax
 806c07b:	75 07                	jne    806c084 <DecodeLiteralBlockSwitch+0xfe3>
 806c07d:	b8 00 00 00 00       	mov    $0x0,%eax
 806c082:	eb 5c                	jmp    806c0e0 <DecodeLiteralBlockSwitch+0x103f>
 806c084:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c087:	8b 00                	mov    (%eax),%eax
 806c089:	c1 e8 08             	shr    $0x8,%eax
 806c08c:	89 c2                	mov    %eax,%edx
 806c08e:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c091:	89 10                	mov    %edx,(%eax)
 806c093:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c096:	8b 10                	mov    (%eax),%edx
 806c098:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c09b:	8b 40 08             	mov    0x8(%eax),%eax
 806c09e:	0f b6 00             	movzbl (%eax),%eax
 806c0a1:	0f b6 c0             	movzbl %al,%eax
 806c0a4:	c1 e0 18             	shl    $0x18,%eax
 806c0a7:	09 c2                	or     %eax,%edx
 806c0a9:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0ac:	89 10                	mov    %edx,(%eax)
 806c0ae:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0b1:	8b 40 04             	mov    0x4(%eax),%eax
 806c0b4:	8d 50 f8             	lea    -0x8(%eax),%edx
 806c0b7:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0ba:	89 50 04             	mov    %edx,0x4(%eax)
 806c0bd:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0c0:	8b 40 0c             	mov    0xc(%eax),%eax
 806c0c3:	8d 50 ff             	lea    -0x1(%eax),%edx
 806c0c6:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0c9:	89 50 0c             	mov    %edx,0xc(%eax)
 806c0cc:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0cf:	8b 40 08             	mov    0x8(%eax),%eax
 806c0d2:	8d 50 01             	lea    0x1(%eax),%edx
 806c0d5:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806c0d8:	89 50 08             	mov    %edx,0x8(%eax)
 806c0db:	b8 01 00 00 00       	mov    $0x1,%eax
 806c0e0:	85 c0                	test   %eax,%eax
 806c0e2:	75 0a                	jne    806c0ee <DecodeLiteralBlockSwitch+0x104d>
 806c0e4:	b8 00 00 00 00       	mov    $0x0,%eax
 806c0e9:	e9 82 00 00 00       	jmp    806c170 <DecodeLiteralBlockSwitch+0x10cf>
 806c0ee:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806c0f1:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806c0f4:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806c0f7:	8b 40 04             	mov    0x4(%eax),%eax
 806c0fa:	ba 20 00 00 00       	mov    $0x20,%edx
 806c0ff:	29 c2                	sub    %eax,%edx
 806c101:	89 d0                	mov    %edx,%eax
 806c103:	39 45 a4             	cmp    %eax,-0x5c(%ebp)
 806c106:	0f 87 61 ff ff ff    	ja     806c06d <DecodeLiteralBlockSwitch+0xfcc>
 806c10c:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806c10f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806c112:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806c115:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806c118:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806c11b:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806c11e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806c121:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806c124:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806c127:	8b 10                	mov    (%eax),%edx
 806c129:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806c12c:	8b 40 04             	mov    0x4(%eax),%eax
 806c12f:	89 c1                	mov    %eax,%ecx
 806c131:	d3 ea                	shr    %cl,%edx
 806c133:	89 d0                	mov    %edx,%eax
 806c135:	89 c2                	mov    %eax,%edx
 806c137:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806c13a:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806c13d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806c140:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806c147:	21 c2                	and    %eax,%edx
 806c149:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806c14c:	89 10                	mov    %edx,(%eax)
 806c14e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806c151:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806c154:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806c157:	89 45 cc             	mov    %eax,-0x34(%ebp)
 806c15a:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806c15d:	8b 50 04             	mov    0x4(%eax),%edx
 806c160:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806c163:	01 c2                	add    %eax,%edx
 806c165:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806c168:	89 50 04             	mov    %edx,0x4(%eax)
 806c16b:	b8 01 00 00 00       	mov    $0x1,%eax
 806c170:	85 c0                	test   %eax,%eax
 806c172:	75 29                	jne    806c19d <DecodeLiteralBlockSwitch+0x10fc>
 806c174:	8b 95 ac fd ff ff    	mov    -0x254(%ebp),%edx
 806c17a:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806c180:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 806c186:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806c18c:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 806c193:	00 00 00 
 806c196:	b8 00 00 00 00       	mov    $0x0,%eax
 806c19b:	eb 36                	jmp    806c1d3 <DecodeLiteralBlockSwitch+0x1132>
 806c19d:	8b 85 ac fd ff ff    	mov    -0x254(%ebp),%eax
 806c1a3:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806c1aa:	ff 
 806c1ab:	0f b7 d0             	movzwl %ax,%edx
 806c1ae:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806c1b4:	01 c2                	add    %eax,%edx
 806c1b6:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806c1bc:	89 10                	mov    %edx,(%eax)
 806c1be:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806c1c4:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806c1cb:	00 00 00 
 806c1ce:	b8 01 00 00 00       	mov    $0x1,%eax
 806c1d3:	85 c0                	test   %eax,%eax
 806c1d5:	75 57                	jne    806c22e <DecodeLiteralBlockSwitch+0x118d>
 806c1d7:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806c1dd:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806c1e4:	00 00 00 
 806c1e7:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806c1ed:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806c1f0:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806c1f3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806c1f6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806c1f9:	8b 10                	mov    (%eax),%edx
 806c1fb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806c1fe:	89 10                	mov    %edx,(%eax)
 806c200:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806c203:	8b 50 04             	mov    0x4(%eax),%edx
 806c206:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806c209:	89 50 04             	mov    %edx,0x4(%eax)
 806c20c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806c20f:	8b 50 08             	mov    0x8(%eax),%edx
 806c212:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806c215:	89 50 08             	mov    %edx,0x8(%eax)
 806c218:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806c21b:	8b 50 0c             	mov    0xc(%eax),%edx
 806c21e:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806c221:	89 50 0c             	mov    %edx,0xc(%eax)
 806c224:	b8 00 00 00 00       	mov    $0x0,%eax
 806c229:	e9 91 00 00 00       	jmp    806c2bf <DecodeLiteralBlockSwitch+0x121e>
 806c22e:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806c234:	83 f8 01             	cmp    $0x1,%eax
 806c237:	75 16                	jne    806c24f <DecodeLiteralBlockSwitch+0x11ae>
 806c239:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806c23f:	83 c0 04             	add    $0x4,%eax
 806c242:	8b 00                	mov    (%eax),%eax
 806c244:	83 c0 01             	add    $0x1,%eax
 806c247:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806c24d:	eb 29                	jmp    806c278 <DecodeLiteralBlockSwitch+0x11d7>
 806c24f:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806c255:	85 c0                	test   %eax,%eax
 806c257:	75 10                	jne    806c269 <DecodeLiteralBlockSwitch+0x11c8>
 806c259:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806c25f:	8b 00                	mov    (%eax),%eax
 806c261:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806c267:	eb 0f                	jmp    806c278 <DecodeLiteralBlockSwitch+0x11d7>
 806c269:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806c26f:	83 e8 02             	sub    $0x2,%eax
 806c272:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806c278:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806c27e:	39 85 c8 fd ff ff    	cmp    %eax,-0x238(%ebp)
 806c284:	77 12                	ja     806c298 <DecodeLiteralBlockSwitch+0x11f7>
 806c286:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806c28c:	2b 85 c8 fd ff ff    	sub    -0x238(%ebp),%eax
 806c292:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806c298:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806c29e:	8b 50 04             	mov    0x4(%eax),%edx
 806c2a1:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806c2a7:	89 10                	mov    %edx,(%eax)
 806c2a9:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806c2af:	8d 50 04             	lea    0x4(%eax),%edx
 806c2b2:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806c2b8:	89 02                	mov    %eax,(%edx)
 806c2ba:	b8 01 00 00 00       	mov    $0x1,%eax
 806c2bf:	85 c0                	test   %eax,%eax
 806c2c1:	0f 84 bd 00 00 00    	je     806c384 <DecodeLiteralBlockSwitch+0x12e3>
 806c2c7:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806c2cd:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806c2d0:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c2d3:	8b 80 d8 00 00 00    	mov    0xd8(%eax),%eax
 806c2d9:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806c2dc:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806c2df:	c1 e0 06             	shl    $0x6,%eax
 806c2e2:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806c2e5:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c2e8:	8b 90 3c 02 00 00    	mov    0x23c(%eax),%edx
 806c2ee:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806c2f1:	01 c2                	add    %eax,%edx
 806c2f3:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c2f6:	89 50 6c             	mov    %edx,0x6c(%eax)
 806c2f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806c2fc:	c1 e8 05             	shr    $0x5,%eax
 806c2ff:	89 c2                	mov    %eax,%edx
 806c301:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c304:	81 c2 90 00 00 00    	add    $0x90,%edx
 806c30a:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 806c30e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806c311:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806c314:	83 e0 1f             	and    $0x1f,%eax
 806c317:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 806c31a:	89 c1                	mov    %eax,%ecx
 806c31c:	d3 ea                	shr    %cl,%edx
 806c31e:	89 d0                	mov    %edx,%eax
 806c320:	83 e0 01             	and    $0x1,%eax
 806c323:	89 c2                	mov    %eax,%edx
 806c325:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c328:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)
 806c32e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c331:	8b 50 74             	mov    0x74(%eax),%edx
 806c334:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c337:	8b 40 6c             	mov    0x6c(%eax),%eax
 806c33a:	0f b6 00             	movzbl (%eax),%eax
 806c33d:	0f b6 c0             	movzbl %al,%eax
 806c340:	c1 e0 02             	shl    $0x2,%eax
 806c343:	01 d0                	add    %edx,%eax
 806c345:	8b 10                	mov    (%eax),%edx
 806c347:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c34a:	89 90 fc 00 00 00    	mov    %edx,0xfc(%eax)
 806c350:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c353:	8b 90 40 02 00 00    	mov    0x240(%eax),%edx
 806c359:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806c35c:	01 d0                	add    %edx,%eax
 806c35e:	0f b6 00             	movzbl (%eax),%eax
 806c361:	83 e0 03             	and    $0x3,%eax
 806c364:	88 85 a7 fd ff ff    	mov    %al,-0x259(%ebp)
 806c36a:	0f b6 85 a7 fd ff ff 	movzbl -0x259(%ebp),%eax
 806c371:	c1 e0 09             	shl    $0x9,%eax
 806c374:	89 c2                	mov    %eax,%edx
 806c376:	8d 83 20 79 fd ff    	lea    -0x286e0(%ebx),%eax
 806c37c:	01 c2                	add    %eax,%edx
 806c37e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806c381:	89 50 68             	mov    %edx,0x68(%eax)
 806c384:	81 c4 6c 02 00 00    	add    $0x26c,%esp
 806c38a:	5b                   	pop    %ebx
 806c38b:	5e                   	pop    %esi
 806c38c:	5d                   	pop    %ebp
 806c38d:	c3                   	ret    

0806c38e <SafeDecodeLiteralBlockSwitch>:
 806c38e:	55                   	push   %ebp
 806c38f:	89 e5                	mov    %esp,%ebp
 806c391:	56                   	push   %esi
 806c392:	53                   	push   %ebx
 806c393:	81 ec 6c 02 00 00    	sub    $0x26c,%esp
 806c399:	e8 52 d7 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806c39e:	81 c3 62 3c 04 00    	add    $0x43c62,%ebx
 806c3a4:	c7 85 b4 fd ff ff 01 	movl   $0x1,-0x24c(%ebp)
 806c3ab:	00 00 00 
 806c3ae:	8b 45 08             	mov    0x8(%ebp),%eax
 806c3b1:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806c3b7:	8b 85 b4 fd ff ff    	mov    -0x24c(%ebp),%eax
 806c3bd:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 806c3c3:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806c3c9:	89 85 c0 fd ff ff    	mov    %eax,-0x240(%ebp)
 806c3cf:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%ebp)
 806c3d6:	00 00 00 
 806c3d9:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806c3df:	8b 95 c4 fd ff ff    	mov    -0x23c(%ebp),%edx
 806c3e5:	83 c2 30             	add    $0x30,%edx
 806c3e8:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 806c3ec:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 806c3f2:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806c3f8:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 806c3fe:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806c404:	69 c0 e0 09 00 00    	imul   $0x9e0,%eax,%eax
 806c40a:	01 d0                	add    %edx,%eax
 806c40c:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 806c412:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806c418:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
 806c41e:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806c424:	69 c0 30 06 00 00    	imul   $0x630,%eax,%eax
 806c42a:	01 d0                	add    %edx,%eax
 806c42c:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 806c432:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806c438:	83 c0 08             	add    $0x8,%eax
 806c43b:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 806c441:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806c447:	01 c0                	add    %eax,%eax
 806c449:	83 c0 34             	add    $0x34,%eax
 806c44c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806c453:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806c459:	01 d0                	add    %edx,%eax
 806c45b:	83 c0 04             	add    $0x4,%eax
 806c45e:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 806c464:	83 bd c8 fd ff ff 01 	cmpl   $0x1,-0x238(%ebp)
 806c46b:	77 0a                	ja     806c477 <SafeDecodeLiteralBlockSwitch+0xe9>
 806c46d:	b8 00 00 00 00       	mov    $0x0,%eax
 806c472:	e9 35 11 00 00       	jmp    806d5ac <SafeDecodeLiteralBlockSwitch+0x121e>
 806c477:	83 bd bc fd ff ff 00 	cmpl   $0x0,-0x244(%ebp)
 806c47e:	0f 85 82 08 00 00    	jne    806cd06 <SafeDecodeLiteralBlockSwitch+0x978>
 806c484:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 806c48a:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 806c490:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806c496:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 806c49c:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806c4a2:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 806c4a8:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806c4ae:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 806c4b4:	c7 85 ec fd ff ff 10 	movl   $0x10,-0x214(%ebp)
 806c4bb:	00 00 00 
 806c4be:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c4c4:	8b 40 04             	mov    0x4(%eax),%eax
 806c4c7:	83 f8 0f             	cmp    $0xf,%eax
 806c4ca:	0f 86 86 00 00 00    	jbe    806c556 <SafeDecodeLiteralBlockSwitch+0x1c8>
 806c4d0:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c4d6:	8b 00                	mov    (%eax),%eax
 806c4d8:	c1 e8 10             	shr    $0x10,%eax
 806c4db:	89 c2                	mov    %eax,%edx
 806c4dd:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c4e3:	89 10                	mov    %edx,(%eax)
 806c4e5:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c4eb:	8b 40 04             	mov    0x4(%eax),%eax
 806c4ee:	83 f0 10             	xor    $0x10,%eax
 806c4f1:	89 c2                	mov    %eax,%edx
 806c4f3:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c4f9:	89 50 04             	mov    %edx,0x4(%eax)
 806c4fc:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c502:	8b 10                	mov    (%eax),%edx
 806c504:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c50a:	8b 40 08             	mov    0x8(%eax),%eax
 806c50d:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 806c513:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806c519:	0f b7 00             	movzwl (%eax),%eax
 806c51c:	0f b7 c0             	movzwl %ax,%eax
 806c51f:	c1 e0 10             	shl    $0x10,%eax
 806c522:	09 c2                	or     %eax,%edx
 806c524:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c52a:	89 10                	mov    %edx,(%eax)
 806c52c:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c532:	8b 40 0c             	mov    0xc(%eax),%eax
 806c535:	8d 50 fe             	lea    -0x2(%eax),%edx
 806c538:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c53e:	89 50 0c             	mov    %edx,0xc(%eax)
 806c541:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c547:	8b 40 08             	mov    0x8(%eax),%eax
 806c54a:	8d 50 02             	lea    0x2(%eax),%edx
 806c54d:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806c553:	89 50 08             	mov    %edx,0x8(%eax)
 806c556:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806c55c:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 806c562:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806c568:	8b 10                	mov    (%eax),%edx
 806c56a:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806c570:	8b 40 04             	mov    0x4(%eax),%eax
 806c573:	89 c1                	mov    %eax,%ecx
 806c575:	d3 ea                	shr    %cl,%edx
 806c577:	89 d0                	mov    %edx,%eax
 806c579:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 806c57f:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806c585:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 806c58b:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806c591:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 806c597:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806c59d:	0f b6 c0             	movzbl %al,%eax
 806c5a0:	c1 e0 02             	shl    $0x2,%eax
 806c5a3:	01 85 fc fd ff ff    	add    %eax,-0x204(%ebp)
 806c5a9:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806c5af:	0f b6 00             	movzbl (%eax),%eax
 806c5b2:	3c 08                	cmp    $0x8,%al
 806c5b4:	0f 86 83 00 00 00    	jbe    806c63d <SafeDecodeLiteralBlockSwitch+0x2af>
 806c5ba:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806c5c0:	0f b6 00             	movzbl (%eax),%eax
 806c5c3:	0f b6 c0             	movzbl %al,%eax
 806c5c6:	83 e8 08             	sub    $0x8,%eax
 806c5c9:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 806c5cf:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 806c5d5:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 806c5db:	c7 85 0c fe ff ff 08 	movl   $0x8,-0x1f4(%ebp)
 806c5e2:	00 00 00 
 806c5e5:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806c5eb:	8b 50 04             	mov    0x4(%eax),%edx
 806c5ee:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806c5f4:	01 c2                	add    %eax,%edx
 806c5f6:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806c5fc:	89 50 04             	mov    %edx,0x4(%eax)
 806c5ff:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806c605:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806c609:	0f b7 d0             	movzwl %ax,%edx
 806c60c:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806c612:	c1 e8 08             	shr    $0x8,%eax
 806c615:	89 c1                	mov    %eax,%ecx
 806c617:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806c61d:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 806c623:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 806c629:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806c630:	21 c8                	and    %ecx,%eax
 806c632:	01 d0                	add    %edx,%eax
 806c634:	c1 e0 02             	shl    $0x2,%eax
 806c637:	01 85 fc fd ff ff    	add    %eax,-0x204(%ebp)
 806c63d:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806c643:	0f b6 00             	movzbl (%eax),%eax
 806c646:	0f b6 c0             	movzbl %al,%eax
 806c649:	8b 95 00 fe ff ff    	mov    -0x200(%ebp),%edx
 806c64f:	89 95 14 fe ff ff    	mov    %edx,-0x1ec(%ebp)
 806c655:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 806c65b:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806c661:	8b 50 04             	mov    0x4(%eax),%edx
 806c664:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806c66a:	01 c2                	add    %eax,%edx
 806c66c:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806c672:	89 50 04             	mov    %edx,0x4(%eax)
 806c675:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 806c67b:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806c67f:	0f b7 c0             	movzwl %ax,%eax
 806c682:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806c688:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806c68e:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%ebp)
 806c694:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806c69a:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 806c6a0:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 806c6a6:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 806c6ac:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806c6b2:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 806c6b8:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806c6be:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 806c6c4:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806c6ca:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 806c6d0:	c7 85 34 fe ff ff 10 	movl   $0x10,-0x1cc(%ebp)
 806c6d7:	00 00 00 
 806c6da:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c6e0:	8b 40 04             	mov    0x4(%eax),%eax
 806c6e3:	83 f8 0f             	cmp    $0xf,%eax
 806c6e6:	0f 86 86 00 00 00    	jbe    806c772 <SafeDecodeLiteralBlockSwitch+0x3e4>
 806c6ec:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c6f2:	8b 00                	mov    (%eax),%eax
 806c6f4:	c1 e8 10             	shr    $0x10,%eax
 806c6f7:	89 c2                	mov    %eax,%edx
 806c6f9:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c6ff:	89 10                	mov    %edx,(%eax)
 806c701:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c707:	8b 40 04             	mov    0x4(%eax),%eax
 806c70a:	83 f0 10             	xor    $0x10,%eax
 806c70d:	89 c2                	mov    %eax,%edx
 806c70f:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c715:	89 50 04             	mov    %edx,0x4(%eax)
 806c718:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c71e:	8b 10                	mov    (%eax),%edx
 806c720:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c726:	8b 40 08             	mov    0x8(%eax),%eax
 806c729:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 806c72f:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806c735:	0f b7 00             	movzwl (%eax),%eax
 806c738:	0f b7 c0             	movzwl %ax,%eax
 806c73b:	c1 e0 10             	shl    $0x10,%eax
 806c73e:	09 c2                	or     %eax,%edx
 806c740:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c746:	89 10                	mov    %edx,(%eax)
 806c748:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c74e:	8b 40 0c             	mov    0xc(%eax),%eax
 806c751:	8d 50 fe             	lea    -0x2(%eax),%edx
 806c754:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c75a:	89 50 0c             	mov    %edx,0xc(%eax)
 806c75d:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c763:	8b 40 08             	mov    0x8(%eax),%eax
 806c766:	8d 50 02             	lea    0x2(%eax),%edx
 806c769:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806c76f:	89 50 08             	mov    %edx,0x8(%eax)
 806c772:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806c778:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 806c77e:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806c784:	8b 10                	mov    (%eax),%edx
 806c786:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806c78c:	8b 40 04             	mov    0x4(%eax),%eax
 806c78f:	89 c1                	mov    %eax,%ecx
 806c791:	d3 ea                	shr    %cl,%edx
 806c793:	89 d0                	mov    %edx,%eax
 806c795:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 806c79b:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806c7a1:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%ebp)
 806c7a7:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806c7ad:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 806c7b3:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806c7b9:	0f b6 c0             	movzbl %al,%eax
 806c7bc:	c1 e0 02             	shl    $0x2,%eax
 806c7bf:	01 85 44 fe ff ff    	add    %eax,-0x1bc(%ebp)
 806c7c5:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806c7cb:	0f b6 00             	movzbl (%eax),%eax
 806c7ce:	3c 08                	cmp    $0x8,%al
 806c7d0:	0f 86 83 00 00 00    	jbe    806c859 <SafeDecodeLiteralBlockSwitch+0x4cb>
 806c7d6:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806c7dc:	0f b6 00             	movzbl (%eax),%eax
 806c7df:	0f b6 c0             	movzbl %al,%eax
 806c7e2:	83 e8 08             	sub    $0x8,%eax
 806c7e5:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 806c7eb:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 806c7f1:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 806c7f7:	c7 85 54 fe ff ff 08 	movl   $0x8,-0x1ac(%ebp)
 806c7fe:	00 00 00 
 806c801:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806c807:	8b 50 04             	mov    0x4(%eax),%edx
 806c80a:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806c810:	01 c2                	add    %eax,%edx
 806c812:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806c818:	89 50 04             	mov    %edx,0x4(%eax)
 806c81b:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806c821:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806c825:	0f b7 d0             	movzwl %ax,%edx
 806c828:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806c82e:	c1 e8 08             	shr    $0x8,%eax
 806c831:	89 c1                	mov    %eax,%ecx
 806c833:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806c839:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%ebp)
 806c83f:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 806c845:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806c84c:	21 c8                	and    %ecx,%eax
 806c84e:	01 d0                	add    %edx,%eax
 806c850:	c1 e0 02             	shl    $0x2,%eax
 806c853:	01 85 44 fe ff ff    	add    %eax,-0x1bc(%ebp)
 806c859:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806c85f:	0f b6 00             	movzbl (%eax),%eax
 806c862:	0f b6 c0             	movzbl %al,%eax
 806c865:	8b 95 48 fe ff ff    	mov    -0x1b8(%ebp),%edx
 806c86b:	89 95 5c fe ff ff    	mov    %edx,-0x1a4(%ebp)
 806c871:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 806c877:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806c87d:	8b 50 04             	mov    0x4(%eax),%edx
 806c880:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806c886:	01 c2                	add    %eax,%edx
 806c888:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806c88e:	89 50 04             	mov    %edx,0x4(%eax)
 806c891:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 806c897:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806c89b:	0f b7 c0             	movzwl %ax,%eax
 806c89e:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%ebp)
 806c8a4:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806c8aa:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806c8b1:	ff 
 806c8b2:	0f b6 c0             	movzbl %al,%eax
 806c8b5:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 806c8bb:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806c8c1:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806c8c8:	ff 
 806c8c9:	0f b7 d0             	movzwl %ax,%edx
 806c8cc:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806c8d2:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 806c8d8:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 806c8de:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 806c8e4:	83 bd 70 fe ff ff 10 	cmpl   $0x10,-0x190(%ebp)
 806c8eb:	0f 87 53 01 00 00    	ja     806ca44 <SafeDecodeLiteralBlockSwitch+0x6b6>
 806c8f1:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806c8f7:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 806c8fd:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806c903:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 806c909:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c90f:	8b 40 04             	mov    0x4(%eax),%eax
 806c912:	83 f8 0f             	cmp    $0xf,%eax
 806c915:	0f 86 86 00 00 00    	jbe    806c9a1 <SafeDecodeLiteralBlockSwitch+0x613>
 806c91b:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c921:	8b 00                	mov    (%eax),%eax
 806c923:	c1 e8 10             	shr    $0x10,%eax
 806c926:	89 c1                	mov    %eax,%ecx
 806c928:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c92e:	89 08                	mov    %ecx,(%eax)
 806c930:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c936:	8b 40 04             	mov    0x4(%eax),%eax
 806c939:	83 f0 10             	xor    $0x10,%eax
 806c93c:	89 c1                	mov    %eax,%ecx
 806c93e:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c944:	89 48 04             	mov    %ecx,0x4(%eax)
 806c947:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c94d:	8b 08                	mov    (%eax),%ecx
 806c94f:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c955:	8b 40 08             	mov    0x8(%eax),%eax
 806c958:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 806c95e:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806c964:	0f b7 00             	movzwl (%eax),%eax
 806c967:	0f b7 c0             	movzwl %ax,%eax
 806c96a:	c1 e0 10             	shl    $0x10,%eax
 806c96d:	09 c1                	or     %eax,%ecx
 806c96f:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c975:	89 08                	mov    %ecx,(%eax)
 806c977:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c97d:	8b 40 0c             	mov    0xc(%eax),%eax
 806c980:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806c983:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c989:	89 48 0c             	mov    %ecx,0xc(%eax)
 806c98c:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c992:	8b 40 08             	mov    0x8(%eax),%eax
 806c995:	8d 48 02             	lea    0x2(%eax),%ecx
 806c998:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806c99e:	89 48 08             	mov    %ecx,0x8(%eax)
 806c9a1:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806c9a7:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 806c9ad:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806c9b3:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 806c9b9:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806c9bc:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 806c9c2:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806c9c8:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 806c9ce:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 806c9d4:	8b 30                	mov    (%eax),%esi
 806c9d6:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 806c9dc:	8b 40 04             	mov    0x4(%eax),%eax
 806c9df:	89 c1                	mov    %eax,%ecx
 806c9e1:	d3 ee                	shr    %cl,%esi
 806c9e3:	89 f0                	mov    %esi,%eax
 806c9e5:	89 c1                	mov    %eax,%ecx
 806c9e7:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806c9ed:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 806c9f3:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 806c9f9:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ca00:	21 c1                	and    %eax,%ecx
 806ca02:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 806ca08:	89 08                	mov    %ecx,(%eax)
 806ca0a:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806ca10:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 806ca16:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ca1c:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 806ca22:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806ca28:	8b 48 04             	mov    0x4(%eax),%ecx
 806ca2b:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 806ca31:	01 c1                	add    %eax,%ecx
 806ca33:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806ca39:	89 48 04             	mov    %ecx,0x4(%eax)
 806ca3c:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806ca3f:	e9 a6 02 00 00       	jmp    806ccea <SafeDecodeLiteralBlockSwitch+0x95c>
 806ca44:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806ca4a:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 806ca50:	c7 85 a0 fe ff ff 10 	movl   $0x10,-0x160(%ebp)
 806ca57:	00 00 00 
 806ca5a:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806ca60:	8b 40 04             	mov    0x4(%eax),%eax
 806ca63:	83 f8 0f             	cmp    $0xf,%eax
 806ca66:	0f 86 86 00 00 00    	jbe    806caf2 <SafeDecodeLiteralBlockSwitch+0x764>
 806ca6c:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806ca72:	8b 00                	mov    (%eax),%eax
 806ca74:	c1 e8 10             	shr    $0x10,%eax
 806ca77:	89 c1                	mov    %eax,%ecx
 806ca79:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806ca7f:	89 08                	mov    %ecx,(%eax)
 806ca81:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806ca87:	8b 40 04             	mov    0x4(%eax),%eax
 806ca8a:	83 f0 10             	xor    $0x10,%eax
 806ca8d:	89 c1                	mov    %eax,%ecx
 806ca8f:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806ca95:	89 48 04             	mov    %ecx,0x4(%eax)
 806ca98:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806ca9e:	8b 08                	mov    (%eax),%ecx
 806caa0:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806caa6:	8b 40 08             	mov    0x8(%eax),%eax
 806caa9:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 806caaf:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 806cab5:	0f b7 00             	movzwl (%eax),%eax
 806cab8:	0f b7 c0             	movzwl %ax,%eax
 806cabb:	c1 e0 10             	shl    $0x10,%eax
 806cabe:	09 c1                	or     %eax,%ecx
 806cac0:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806cac6:	89 08                	mov    %ecx,(%eax)
 806cac8:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806cace:	8b 40 0c             	mov    0xc(%eax),%eax
 806cad1:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806cad4:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806cada:	89 48 0c             	mov    %ecx,0xc(%eax)
 806cadd:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806cae3:	8b 40 08             	mov    0x8(%eax),%eax
 806cae6:	8d 48 02             	lea    0x2(%eax),%ecx
 806cae9:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806caef:	89 48 08             	mov    %ecx,0x8(%eax)
 806caf2:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806caf8:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 806cafe:	c7 85 ac fe ff ff 10 	movl   $0x10,-0x154(%ebp)
 806cb05:	00 00 00 
 806cb08:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806cb0e:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 806cb14:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 806cb1a:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 806cb20:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 806cb26:	8b 30                	mov    (%eax),%esi
 806cb28:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 806cb2e:	8b 40 04             	mov    0x4(%eax),%eax
 806cb31:	89 c1                	mov    %eax,%ecx
 806cb33:	d3 ee                	shr    %cl,%esi
 806cb35:	89 f0                	mov    %esi,%eax
 806cb37:	89 c1                	mov    %eax,%ecx
 806cb39:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806cb3f:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 806cb45:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 806cb4b:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806cb52:	21 c1                	and    %eax,%ecx
 806cb54:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
 806cb5a:	89 08                	mov    %ecx,(%eax)
 806cb5c:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 806cb62:	89 85 bc fe ff ff    	mov    %eax,-0x144(%ebp)
 806cb68:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806cb6e:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 806cb74:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806cb7a:	8b 48 04             	mov    0x4(%eax),%ecx
 806cb7d:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 806cb83:	01 c1                	add    %eax,%ecx
 806cb85:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806cb8b:	89 48 04             	mov    %ecx,0x4(%eax)
 806cb8e:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806cb94:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 806cb9a:	c7 85 c8 fe ff ff 08 	movl   $0x8,-0x138(%ebp)
 806cba1:	00 00 00 
 806cba4:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbaa:	8b 40 04             	mov    0x4(%eax),%eax
 806cbad:	83 f8 0f             	cmp    $0xf,%eax
 806cbb0:	0f 86 86 00 00 00    	jbe    806cc3c <SafeDecodeLiteralBlockSwitch+0x8ae>
 806cbb6:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbbc:	8b 00                	mov    (%eax),%eax
 806cbbe:	c1 e8 10             	shr    $0x10,%eax
 806cbc1:	89 c1                	mov    %eax,%ecx
 806cbc3:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbc9:	89 08                	mov    %ecx,(%eax)
 806cbcb:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbd1:	8b 40 04             	mov    0x4(%eax),%eax
 806cbd4:	83 f0 10             	xor    $0x10,%eax
 806cbd7:	89 c1                	mov    %eax,%ecx
 806cbd9:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbdf:	89 48 04             	mov    %ecx,0x4(%eax)
 806cbe2:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbe8:	8b 08                	mov    (%eax),%ecx
 806cbea:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cbf0:	8b 40 08             	mov    0x8(%eax),%eax
 806cbf3:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 806cbf9:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 806cbff:	0f b7 00             	movzwl (%eax),%eax
 806cc02:	0f b7 c0             	movzwl %ax,%eax
 806cc05:	c1 e0 10             	shl    $0x10,%eax
 806cc08:	09 c1                	or     %eax,%ecx
 806cc0a:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cc10:	89 08                	mov    %ecx,(%eax)
 806cc12:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cc18:	8b 40 0c             	mov    0xc(%eax),%eax
 806cc1b:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806cc1e:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cc24:	89 48 0c             	mov    %ecx,0xc(%eax)
 806cc27:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cc2d:	8b 40 08             	mov    0x8(%eax),%eax
 806cc30:	8d 48 02             	lea    0x2(%eax),%ecx
 806cc33:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806cc39:	89 48 08             	mov    %ecx,0x8(%eax)
 806cc3c:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806cc42:	8d 48 f0             	lea    -0x10(%eax),%ecx
 806cc45:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806cc4b:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 806cc51:	89 8d d4 fe ff ff    	mov    %ecx,-0x12c(%ebp)
 806cc57:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806cc5a:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 806cc60:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 806cc66:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 806cc6c:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 806cc72:	8b 30                	mov    (%eax),%esi
 806cc74:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 806cc7a:	8b 40 04             	mov    0x4(%eax),%eax
 806cc7d:	89 c1                	mov    %eax,%ecx
 806cc7f:	d3 ee                	shr    %cl,%esi
 806cc81:	89 f0                	mov    %esi,%eax
 806cc83:	89 c1                	mov    %eax,%ecx
 806cc85:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806cc8b:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 806cc91:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 806cc97:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806cc9e:	21 c1                	and    %eax,%ecx
 806cca0:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 806cca6:	89 08                	mov    %ecx,(%eax)
 806cca8:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 806ccae:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 806ccb4:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806ccba:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 806ccc0:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806ccc6:	8b 48 04             	mov    0x4(%eax),%ecx
 806ccc9:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 806cccf:	01 c1                	add    %eax,%ecx
 806ccd1:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806ccd7:	89 48 04             	mov    %ecx,0x4(%eax)
 806ccda:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806ccdd:	c1 e0 10             	shl    $0x10,%eax
 806cce0:	89 c1                	mov    %eax,%ecx
 806cce2:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806cce8:	09 c8                	or     %ecx,%eax
 806ccea:	01 d0                	add    %edx,%eax
 806ccec:	89 c2                	mov    %eax,%edx
 806ccee:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806ccf4:	8b 8d c4 fd ff ff    	mov    -0x23c(%ebp),%ecx
 806ccfa:	83 c1 2c             	add    $0x2c,%ecx
 806ccfd:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 806cd01:	e9 15 08 00 00       	jmp    806d51b <SafeDecodeLiteralBlockSwitch+0x118d>
 806cd06:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806cd0c:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 806cd12:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806cd15:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 806cd1b:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806cd21:	8b 10                	mov    (%eax),%edx
 806cd23:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806cd29:	89 10                	mov    %edx,(%eax)
 806cd2b:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806cd31:	8b 50 04             	mov    0x4(%eax),%edx
 806cd34:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806cd3a:	89 50 04             	mov    %edx,0x4(%eax)
 806cd3d:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806cd43:	8b 50 08             	mov    0x8(%eax),%edx
 806cd46:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806cd4c:	89 50 08             	mov    %edx,0x8(%eax)
 806cd4f:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806cd55:	8b 50 0c             	mov    0xc(%eax),%edx
 806cd58:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806cd5e:	89 50 0c             	mov    %edx,0xc(%eax)
 806cd61:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 806cd67:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 806cd6d:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806cd73:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 806cd79:	8d 85 a8 fd ff ff    	lea    -0x258(%ebp),%eax
 806cd7f:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 806cd85:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806cd8b:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 806cd91:	c7 85 04 ff ff ff 0f 	movl   $0xf,-0xfc(%ebp)
 806cd98:	00 00 00 
 806cd9b:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806cda1:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 806cda7:	e9 a8 00 00 00       	jmp    806ce54 <SafeDecodeLiteralBlockSwitch+0xac6>
 806cdac:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806cdb2:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 806cdb8:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806cdbe:	8b 40 0c             	mov    0xc(%eax),%eax
 806cdc1:	85 c0                	test   %eax,%eax
 806cdc3:	75 07                	jne    806cdcc <SafeDecodeLiteralBlockSwitch+0xa3e>
 806cdc5:	b8 00 00 00 00       	mov    $0x0,%eax
 806cdca:	eb 7d                	jmp    806ce49 <SafeDecodeLiteralBlockSwitch+0xabb>
 806cdcc:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806cdd2:	8b 00                	mov    (%eax),%eax
 806cdd4:	c1 e8 08             	shr    $0x8,%eax
 806cdd7:	89 c2                	mov    %eax,%edx
 806cdd9:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806cddf:	89 10                	mov    %edx,(%eax)
 806cde1:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806cde7:	8b 10                	mov    (%eax),%edx
 806cde9:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806cdef:	8b 40 08             	mov    0x8(%eax),%eax
 806cdf2:	0f b6 00             	movzbl (%eax),%eax
 806cdf5:	0f b6 c0             	movzbl %al,%eax
 806cdf8:	c1 e0 18             	shl    $0x18,%eax
 806cdfb:	09 c2                	or     %eax,%edx
 806cdfd:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce03:	89 10                	mov    %edx,(%eax)
 806ce05:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce0b:	8b 40 04             	mov    0x4(%eax),%eax
 806ce0e:	8d 50 f8             	lea    -0x8(%eax),%edx
 806ce11:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce17:	89 50 04             	mov    %edx,0x4(%eax)
 806ce1a:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce20:	8b 40 0c             	mov    0xc(%eax),%eax
 806ce23:	8d 50 ff             	lea    -0x1(%eax),%edx
 806ce26:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce2c:	89 50 0c             	mov    %edx,0xc(%eax)
 806ce2f:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce35:	8b 40 08             	mov    0x8(%eax),%eax
 806ce38:	8d 50 01             	lea    0x1(%eax),%edx
 806ce3b:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806ce41:	89 50 08             	mov    %edx,0x8(%eax)
 806ce44:	b8 01 00 00 00       	mov    $0x1,%eax
 806ce49:	85 c0                	test   %eax,%eax
 806ce4b:	75 07                	jne    806ce54 <SafeDecodeLiteralBlockSwitch+0xac6>
 806ce4d:	b8 00 00 00 00       	mov    $0x0,%eax
 806ce52:	eb 77                	jmp    806cecb <SafeDecodeLiteralBlockSwitch+0xb3d>
 806ce54:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806ce5a:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 806ce60:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806ce66:	8b 40 04             	mov    0x4(%eax),%eax
 806ce69:	ba 20 00 00 00       	mov    $0x20,%edx
 806ce6e:	29 c2                	sub    %eax,%edx
 806ce70:	89 d0                	mov    %edx,%eax
 806ce72:	39 85 04 ff ff ff    	cmp    %eax,-0xfc(%ebp)
 806ce78:	0f 87 2e ff ff ff    	ja     806cdac <SafeDecodeLiteralBlockSwitch+0xa1e>
 806ce7e:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806ce84:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 806ce8a:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806ce90:	8b 10                	mov    (%eax),%edx
 806ce92:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806ce98:	8b 40 04             	mov    0x4(%eax),%eax
 806ce9b:	89 c1                	mov    %eax,%ecx
 806ce9d:	d3 ea                	shr    %cl,%edx
 806ce9f:	89 d0                	mov    %edx,%eax
 806cea1:	89 c2                	mov    %eax,%edx
 806cea3:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 806cea9:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 806ceaf:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 806ceb5:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806cebc:	21 c2                	and    %eax,%edx
 806cebe:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806cec4:	89 10                	mov    %edx,(%eax)
 806cec6:	b8 01 00 00 00       	mov    $0x1,%eax
 806cecb:	85 c0                	test   %eax,%eax
 806cecd:	0f 95 c0             	setne  %al
 806ced0:	0f b6 c0             	movzbl %al,%eax
 806ced3:	85 c0                	test   %eax,%eax
 806ced5:	0f 84 20 01 00 00    	je     806cffb <SafeDecodeLiteralBlockSwitch+0xc6d>
 806cedb:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806cee1:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 806cee7:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806ceed:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 806cef3:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806cef9:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 806ceff:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806cf05:	0f b6 c0             	movzbl %al,%eax
 806cf08:	c1 e0 02             	shl    $0x2,%eax
 806cf0b:	01 85 20 ff ff ff    	add    %eax,-0xe0(%ebp)
 806cf11:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806cf17:	0f b6 00             	movzbl (%eax),%eax
 806cf1a:	3c 08                	cmp    $0x8,%al
 806cf1c:	0f 86 83 00 00 00    	jbe    806cfa5 <SafeDecodeLiteralBlockSwitch+0xc17>
 806cf22:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806cf28:	0f b6 00             	movzbl (%eax),%eax
 806cf2b:	0f b6 c0             	movzbl %al,%eax
 806cf2e:	83 e8 08             	sub    $0x8,%eax
 806cf31:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 806cf37:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806cf3d:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 806cf43:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%ebp)
 806cf4a:	00 00 00 
 806cf4d:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806cf53:	8b 50 04             	mov    0x4(%eax),%edx
 806cf56:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806cf5c:	01 c2                	add    %eax,%edx
 806cf5e:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806cf64:	89 50 04             	mov    %edx,0x4(%eax)
 806cf67:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806cf6d:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806cf71:	0f b7 d0             	movzwl %ax,%edx
 806cf74:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806cf7a:	c1 e8 08             	shr    $0x8,%eax
 806cf7d:	89 c1                	mov    %eax,%ecx
 806cf7f:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806cf85:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 806cf8b:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 806cf91:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806cf98:	21 c8                	and    %ecx,%eax
 806cf9a:	01 d0                	add    %edx,%eax
 806cf9c:	c1 e0 02             	shl    $0x2,%eax
 806cf9f:	01 85 20 ff ff ff    	add    %eax,-0xe0(%ebp)
 806cfa5:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806cfab:	0f b6 00             	movzbl (%eax),%eax
 806cfae:	0f b6 c0             	movzbl %al,%eax
 806cfb1:	8b 95 24 ff ff ff    	mov    -0xdc(%ebp),%edx
 806cfb7:	89 95 38 ff ff ff    	mov    %edx,-0xc8(%ebp)
 806cfbd:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 806cfc3:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806cfc9:	8b 50 04             	mov    0x4(%eax),%edx
 806cfcc:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806cfd2:	01 c2                	add    %eax,%edx
 806cfd4:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806cfda:	89 50 04             	mov    %edx,0x4(%eax)
 806cfdd:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806cfe3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806cfe7:	0f b7 c0             	movzwl %ax,%eax
 806cfea:	89 c2                	mov    %eax,%edx
 806cfec:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806cff2:	89 10                	mov    %edx,(%eax)
 806cff4:	b8 01 00 00 00       	mov    $0x1,%eax
 806cff9:	eb 22                	jmp    806d01d <SafeDecodeLiteralBlockSwitch+0xc8f>
 806cffb:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806d001:	89 44 24 08          	mov    %eax,0x8(%esp)
 806d005:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806d00b:	89 44 24 04          	mov    %eax,0x4(%esp)
 806d00f:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806d015:	89 04 24             	mov    %eax,(%esp)
 806d018:	e8 af b9 ff ff       	call   80689cc <SafeDecodeSymbol>
 806d01d:	85 c0                	test   %eax,%eax
 806d01f:	75 0a                	jne    806d02b <SafeDecodeLiteralBlockSwitch+0xc9d>
 806d021:	b8 00 00 00 00       	mov    $0x0,%eax
 806d026:	e9 81 05 00 00       	jmp    806d5ac <SafeDecodeLiteralBlockSwitch+0x121e>
 806d02b:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806d031:	83 c0 2c             	add    $0x2c,%eax
 806d034:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806d03b:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806d041:	01 d0                	add    %edx,%eax
 806d043:	8d 50 0c             	lea    0xc(%eax),%edx
 806d046:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806d04c:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 806d052:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
 806d058:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806d05e:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 806d064:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806d06a:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806d070:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806d076:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 806d07c:	85 c0                	test   %eax,%eax
 806d07e:	0f 85 93 02 00 00    	jne    806d317 <SafeDecodeLiteralBlockSwitch+0xf89>
 806d084:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806d08a:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 806d090:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806d096:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 806d09c:	8d 85 ac fd ff ff    	lea    -0x254(%ebp),%eax
 806d0a2:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 806d0a8:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806d0ae:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 806d0b4:	c7 85 60 ff ff ff 0f 	movl   $0xf,-0xa0(%ebp)
 806d0bb:	00 00 00 
 806d0be:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806d0c4:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806d0ca:	e9 a8 00 00 00       	jmp    806d177 <SafeDecodeLiteralBlockSwitch+0xde9>
 806d0cf:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806d0d5:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 806d0db:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d0e1:	8b 40 0c             	mov    0xc(%eax),%eax
 806d0e4:	85 c0                	test   %eax,%eax
 806d0e6:	75 07                	jne    806d0ef <SafeDecodeLiteralBlockSwitch+0xd61>
 806d0e8:	b8 00 00 00 00       	mov    $0x0,%eax
 806d0ed:	eb 7d                	jmp    806d16c <SafeDecodeLiteralBlockSwitch+0xdde>
 806d0ef:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d0f5:	8b 00                	mov    (%eax),%eax
 806d0f7:	c1 e8 08             	shr    $0x8,%eax
 806d0fa:	89 c2                	mov    %eax,%edx
 806d0fc:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d102:	89 10                	mov    %edx,(%eax)
 806d104:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d10a:	8b 10                	mov    (%eax),%edx
 806d10c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d112:	8b 40 08             	mov    0x8(%eax),%eax
 806d115:	0f b6 00             	movzbl (%eax),%eax
 806d118:	0f b6 c0             	movzbl %al,%eax
 806d11b:	c1 e0 18             	shl    $0x18,%eax
 806d11e:	09 c2                	or     %eax,%edx
 806d120:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d126:	89 10                	mov    %edx,(%eax)
 806d128:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d12e:	8b 40 04             	mov    0x4(%eax),%eax
 806d131:	8d 50 f8             	lea    -0x8(%eax),%edx
 806d134:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d13a:	89 50 04             	mov    %edx,0x4(%eax)
 806d13d:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d143:	8b 40 0c             	mov    0xc(%eax),%eax
 806d146:	8d 50 ff             	lea    -0x1(%eax),%edx
 806d149:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d14f:	89 50 0c             	mov    %edx,0xc(%eax)
 806d152:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d158:	8b 40 08             	mov    0x8(%eax),%eax
 806d15b:	8d 50 01             	lea    0x1(%eax),%edx
 806d15e:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806d164:	89 50 08             	mov    %edx,0x8(%eax)
 806d167:	b8 01 00 00 00       	mov    $0x1,%eax
 806d16c:	85 c0                	test   %eax,%eax
 806d16e:	75 07                	jne    806d177 <SafeDecodeLiteralBlockSwitch+0xde9>
 806d170:	b8 00 00 00 00       	mov    $0x0,%eax
 806d175:	eb 77                	jmp    806d1ee <SafeDecodeLiteralBlockSwitch+0xe60>
 806d177:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806d17d:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 806d183:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806d189:	8b 40 04             	mov    0x4(%eax),%eax
 806d18c:	ba 20 00 00 00       	mov    $0x20,%edx
 806d191:	29 c2                	sub    %eax,%edx
 806d193:	89 d0                	mov    %edx,%eax
 806d195:	39 85 60 ff ff ff    	cmp    %eax,-0xa0(%ebp)
 806d19b:	0f 87 2e ff ff ff    	ja     806d0cf <SafeDecodeLiteralBlockSwitch+0xd41>
 806d1a1:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806d1a7:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 806d1ad:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806d1b3:	8b 10                	mov    (%eax),%edx
 806d1b5:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806d1bb:	8b 40 04             	mov    0x4(%eax),%eax
 806d1be:	89 c1                	mov    %eax,%ecx
 806d1c0:	d3 ea                	shr    %cl,%edx
 806d1c2:	89 d0                	mov    %edx,%eax
 806d1c4:	89 c2                	mov    %eax,%edx
 806d1c6:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806d1cc:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 806d1d2:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806d1d8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806d1df:	21 c2                	and    %eax,%edx
 806d1e1:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806d1e7:	89 10                	mov    %edx,(%eax)
 806d1e9:	b8 01 00 00 00       	mov    $0x1,%eax
 806d1ee:	85 c0                	test   %eax,%eax
 806d1f0:	0f 95 c0             	setne  %al
 806d1f3:	0f b6 c0             	movzbl %al,%eax
 806d1f6:	85 c0                	test   %eax,%eax
 806d1f8:	0f 84 e9 00 00 00    	je     806d2e7 <SafeDecodeLiteralBlockSwitch+0xf59>
 806d1fe:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806d204:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 806d20a:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806d210:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 806d216:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806d21c:	89 45 80             	mov    %eax,-0x80(%ebp)
 806d21f:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806d225:	0f b6 c0             	movzbl %al,%eax
 806d228:	c1 e0 02             	shl    $0x2,%eax
 806d22b:	01 85 7c ff ff ff    	add    %eax,-0x84(%ebp)
 806d231:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806d237:	0f b6 00             	movzbl (%eax),%eax
 806d23a:	3c 08                	cmp    $0x8,%al
 806d23c:	76 65                	jbe    806d2a3 <SafeDecodeLiteralBlockSwitch+0xf15>
 806d23e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806d244:	0f b6 00             	movzbl (%eax),%eax
 806d247:	0f b6 c0             	movzbl %al,%eax
 806d24a:	83 e8 08             	sub    $0x8,%eax
 806d24d:	89 45 84             	mov    %eax,-0x7c(%ebp)
 806d250:	8b 45 80             	mov    -0x80(%ebp),%eax
 806d253:	89 45 88             	mov    %eax,-0x78(%ebp)
 806d256:	c7 45 8c 08 00 00 00 	movl   $0x8,-0x74(%ebp)
 806d25d:	8b 45 88             	mov    -0x78(%ebp),%eax
 806d260:	8b 50 04             	mov    0x4(%eax),%edx
 806d263:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806d266:	01 c2                	add    %eax,%edx
 806d268:	8b 45 88             	mov    -0x78(%ebp),%eax
 806d26b:	89 50 04             	mov    %edx,0x4(%eax)
 806d26e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806d274:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806d278:	0f b7 d0             	movzwl %ax,%edx
 806d27b:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806d281:	c1 e8 08             	shr    $0x8,%eax
 806d284:	89 c1                	mov    %eax,%ecx
 806d286:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806d289:	89 45 90             	mov    %eax,-0x70(%ebp)
 806d28c:	8b 45 90             	mov    -0x70(%ebp),%eax
 806d28f:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806d296:	21 c8                	and    %ecx,%eax
 806d298:	01 d0                	add    %edx,%eax
 806d29a:	c1 e0 02             	shl    $0x2,%eax
 806d29d:	01 85 7c ff ff ff    	add    %eax,-0x84(%ebp)
 806d2a3:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806d2a9:	0f b6 00             	movzbl (%eax),%eax
 806d2ac:	0f b6 c0             	movzbl %al,%eax
 806d2af:	8b 55 80             	mov    -0x80(%ebp),%edx
 806d2b2:	89 55 94             	mov    %edx,-0x6c(%ebp)
 806d2b5:	89 45 98             	mov    %eax,-0x68(%ebp)
 806d2b8:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806d2bb:	8b 50 04             	mov    0x4(%eax),%edx
 806d2be:	8b 45 98             	mov    -0x68(%ebp),%eax
 806d2c1:	01 c2                	add    %eax,%edx
 806d2c3:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806d2c6:	89 50 04             	mov    %edx,0x4(%eax)
 806d2c9:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806d2cf:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806d2d3:	0f b7 c0             	movzwl %ax,%eax
 806d2d6:	89 c2                	mov    %eax,%edx
 806d2d8:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806d2de:	89 10                	mov    %edx,(%eax)
 806d2e0:	b8 01 00 00 00       	mov    $0x1,%eax
 806d2e5:	eb 22                	jmp    806d309 <SafeDecodeLiteralBlockSwitch+0xf7b>
 806d2e7:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806d2ed:	89 44 24 08          	mov    %eax,0x8(%esp)
 806d2f1:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806d2f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 806d2fb:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806d301:	89 04 24             	mov    %eax,(%esp)
 806d304:	e8 c3 b6 ff ff       	call   80689cc <SafeDecodeSymbol>
 806d309:	85 c0                	test   %eax,%eax
 806d30b:	75 1c                	jne    806d329 <SafeDecodeLiteralBlockSwitch+0xf9b>
 806d30d:	b8 00 00 00 00       	mov    $0x0,%eax
 806d312:	e9 a9 01 00 00       	jmp    806d4c0 <SafeDecodeLiteralBlockSwitch+0x1132>
 806d317:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806d31d:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 806d323:	89 85 ac fd ff ff    	mov    %eax,-0x254(%ebp)
 806d329:	8b 85 ac fd ff ff    	mov    -0x254(%ebp),%eax
 806d32f:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806d336:	ff 
 806d337:	0f b6 c0             	movzbl %al,%eax
 806d33a:	89 45 9c             	mov    %eax,-0x64(%ebp)
 806d33d:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806d343:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806d346:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806d349:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 806d34c:	8d 85 b0 fd ff ff    	lea    -0x250(%ebp),%eax
 806d352:	89 45 a8             	mov    %eax,-0x58(%ebp)
 806d355:	e9 81 00 00 00       	jmp    806d3db <SafeDecodeLiteralBlockSwitch+0x104d>
 806d35a:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806d35d:	89 45 ac             	mov    %eax,-0x54(%ebp)
 806d360:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d363:	8b 40 0c             	mov    0xc(%eax),%eax
 806d366:	85 c0                	test   %eax,%eax
 806d368:	75 07                	jne    806d371 <SafeDecodeLiteralBlockSwitch+0xfe3>
 806d36a:	b8 00 00 00 00       	mov    $0x0,%eax
 806d36f:	eb 5c                	jmp    806d3cd <SafeDecodeLiteralBlockSwitch+0x103f>
 806d371:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d374:	8b 00                	mov    (%eax),%eax
 806d376:	c1 e8 08             	shr    $0x8,%eax
 806d379:	89 c2                	mov    %eax,%edx
 806d37b:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d37e:	89 10                	mov    %edx,(%eax)
 806d380:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d383:	8b 10                	mov    (%eax),%edx
 806d385:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d388:	8b 40 08             	mov    0x8(%eax),%eax
 806d38b:	0f b6 00             	movzbl (%eax),%eax
 806d38e:	0f b6 c0             	movzbl %al,%eax
 806d391:	c1 e0 18             	shl    $0x18,%eax
 806d394:	09 c2                	or     %eax,%edx
 806d396:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d399:	89 10                	mov    %edx,(%eax)
 806d39b:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d39e:	8b 40 04             	mov    0x4(%eax),%eax
 806d3a1:	8d 50 f8             	lea    -0x8(%eax),%edx
 806d3a4:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d3a7:	89 50 04             	mov    %edx,0x4(%eax)
 806d3aa:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d3ad:	8b 40 0c             	mov    0xc(%eax),%eax
 806d3b0:	8d 50 ff             	lea    -0x1(%eax),%edx
 806d3b3:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d3b6:	89 50 0c             	mov    %edx,0xc(%eax)
 806d3b9:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d3bc:	8b 40 08             	mov    0x8(%eax),%eax
 806d3bf:	8d 50 01             	lea    0x1(%eax),%edx
 806d3c2:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806d3c5:	89 50 08             	mov    %edx,0x8(%eax)
 806d3c8:	b8 01 00 00 00       	mov    $0x1,%eax
 806d3cd:	85 c0                	test   %eax,%eax
 806d3cf:	75 0a                	jne    806d3db <SafeDecodeLiteralBlockSwitch+0x104d>
 806d3d1:	b8 00 00 00 00       	mov    $0x0,%eax
 806d3d6:	e9 82 00 00 00       	jmp    806d45d <SafeDecodeLiteralBlockSwitch+0x10cf>
 806d3db:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806d3de:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806d3e1:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806d3e4:	8b 40 04             	mov    0x4(%eax),%eax
 806d3e7:	ba 20 00 00 00       	mov    $0x20,%edx
 806d3ec:	29 c2                	sub    %eax,%edx
 806d3ee:	89 d0                	mov    %edx,%eax
 806d3f0:	39 45 a4             	cmp    %eax,-0x5c(%ebp)
 806d3f3:	0f 87 61 ff ff ff    	ja     806d35a <SafeDecodeLiteralBlockSwitch+0xfcc>
 806d3f9:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806d3fc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806d3ff:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806d402:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806d405:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806d408:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806d40b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806d40e:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806d411:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806d414:	8b 10                	mov    (%eax),%edx
 806d416:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806d419:	8b 40 04             	mov    0x4(%eax),%eax
 806d41c:	89 c1                	mov    %eax,%ecx
 806d41e:	d3 ea                	shr    %cl,%edx
 806d420:	89 d0                	mov    %edx,%eax
 806d422:	89 c2                	mov    %eax,%edx
 806d424:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806d427:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806d42a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806d42d:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806d434:	21 c2                	and    %eax,%edx
 806d436:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806d439:	89 10                	mov    %edx,(%eax)
 806d43b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806d43e:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806d441:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806d444:	89 45 cc             	mov    %eax,-0x34(%ebp)
 806d447:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806d44a:	8b 50 04             	mov    0x4(%eax),%edx
 806d44d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806d450:	01 c2                	add    %eax,%edx
 806d452:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806d455:	89 50 04             	mov    %edx,0x4(%eax)
 806d458:	b8 01 00 00 00       	mov    $0x1,%eax
 806d45d:	85 c0                	test   %eax,%eax
 806d45f:	75 29                	jne    806d48a <SafeDecodeLiteralBlockSwitch+0x10fc>
 806d461:	8b 95 ac fd ff ff    	mov    -0x254(%ebp),%edx
 806d467:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806d46d:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 806d473:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806d479:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 806d480:	00 00 00 
 806d483:	b8 00 00 00 00       	mov    $0x0,%eax
 806d488:	eb 36                	jmp    806d4c0 <SafeDecodeLiteralBlockSwitch+0x1132>
 806d48a:	8b 85 ac fd ff ff    	mov    -0x254(%ebp),%eax
 806d490:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806d497:	ff 
 806d498:	0f b7 d0             	movzwl %ax,%edx
 806d49b:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 806d4a1:	01 c2                	add    %eax,%edx
 806d4a3:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806d4a9:	89 10                	mov    %edx,(%eax)
 806d4ab:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806d4b1:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806d4b8:	00 00 00 
 806d4bb:	b8 01 00 00 00       	mov    $0x1,%eax
 806d4c0:	85 c0                	test   %eax,%eax
 806d4c2:	75 57                	jne    806d51b <SafeDecodeLiteralBlockSwitch+0x118d>
 806d4c4:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806d4ca:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806d4d1:	00 00 00 
 806d4d4:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806d4da:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806d4dd:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806d4e0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806d4e3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806d4e6:	8b 10                	mov    (%eax),%edx
 806d4e8:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806d4eb:	89 10                	mov    %edx,(%eax)
 806d4ed:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806d4f0:	8b 50 04             	mov    0x4(%eax),%edx
 806d4f3:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806d4f6:	89 50 04             	mov    %edx,0x4(%eax)
 806d4f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806d4fc:	8b 50 08             	mov    0x8(%eax),%edx
 806d4ff:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806d502:	89 50 08             	mov    %edx,0x8(%eax)
 806d505:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806d508:	8b 50 0c             	mov    0xc(%eax),%edx
 806d50b:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806d50e:	89 50 0c             	mov    %edx,0xc(%eax)
 806d511:	b8 00 00 00 00       	mov    $0x0,%eax
 806d516:	e9 91 00 00 00       	jmp    806d5ac <SafeDecodeLiteralBlockSwitch+0x121e>
 806d51b:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806d521:	83 f8 01             	cmp    $0x1,%eax
 806d524:	75 16                	jne    806d53c <SafeDecodeLiteralBlockSwitch+0x11ae>
 806d526:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806d52c:	83 c0 04             	add    $0x4,%eax
 806d52f:	8b 00                	mov    (%eax),%eax
 806d531:	83 c0 01             	add    $0x1,%eax
 806d534:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806d53a:	eb 29                	jmp    806d565 <SafeDecodeLiteralBlockSwitch+0x11d7>
 806d53c:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806d542:	85 c0                	test   %eax,%eax
 806d544:	75 10                	jne    806d556 <SafeDecodeLiteralBlockSwitch+0x11c8>
 806d546:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806d54c:	8b 00                	mov    (%eax),%eax
 806d54e:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806d554:	eb 0f                	jmp    806d565 <SafeDecodeLiteralBlockSwitch+0x11d7>
 806d556:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806d55c:	83 e8 02             	sub    $0x2,%eax
 806d55f:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806d565:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806d56b:	39 85 c8 fd ff ff    	cmp    %eax,-0x238(%ebp)
 806d571:	77 12                	ja     806d585 <SafeDecodeLiteralBlockSwitch+0x11f7>
 806d573:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806d579:	2b 85 c8 fd ff ff    	sub    -0x238(%ebp),%eax
 806d57f:	89 85 a8 fd ff ff    	mov    %eax,-0x258(%ebp)
 806d585:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806d58b:	8b 50 04             	mov    0x4(%eax),%edx
 806d58e:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806d594:	89 10                	mov    %edx,(%eax)
 806d596:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 806d59c:	8d 50 04             	lea    0x4(%eax),%edx
 806d59f:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 806d5a5:	89 02                	mov    %eax,(%edx)
 806d5a7:	b8 01 00 00 00       	mov    $0x1,%eax
 806d5ac:	85 c0                	test   %eax,%eax
 806d5ae:	75 0a                	jne    806d5ba <SafeDecodeLiteralBlockSwitch+0x122c>
 806d5b0:	b8 00 00 00 00       	mov    $0x0,%eax
 806d5b5:	e9 c2 00 00 00       	jmp    806d67c <SafeDecodeLiteralBlockSwitch+0x12ee>
 806d5ba:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806d5c0:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806d5c3:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d5c6:	8b 80 d8 00 00 00    	mov    0xd8(%eax),%eax
 806d5cc:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806d5cf:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806d5d2:	c1 e0 06             	shl    $0x6,%eax
 806d5d5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806d5d8:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d5db:	8b 90 3c 02 00 00    	mov    0x23c(%eax),%edx
 806d5e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806d5e4:	01 c2                	add    %eax,%edx
 806d5e6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d5e9:	89 50 6c             	mov    %edx,0x6c(%eax)
 806d5ec:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806d5ef:	c1 e8 05             	shr    $0x5,%eax
 806d5f2:	89 c2                	mov    %eax,%edx
 806d5f4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d5f7:	81 c2 90 00 00 00    	add    $0x90,%edx
 806d5fd:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 806d601:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806d604:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806d607:	83 e0 1f             	and    $0x1f,%eax
 806d60a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 806d60d:	89 c1                	mov    %eax,%ecx
 806d60f:	d3 ea                	shr    %cl,%edx
 806d611:	89 d0                	mov    %edx,%eax
 806d613:	83 e0 01             	and    $0x1,%eax
 806d616:	89 c2                	mov    %eax,%edx
 806d618:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d61b:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)
 806d621:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d624:	8b 50 74             	mov    0x74(%eax),%edx
 806d627:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d62a:	8b 40 6c             	mov    0x6c(%eax),%eax
 806d62d:	0f b6 00             	movzbl (%eax),%eax
 806d630:	0f b6 c0             	movzbl %al,%eax
 806d633:	c1 e0 02             	shl    $0x2,%eax
 806d636:	01 d0                	add    %edx,%eax
 806d638:	8b 10                	mov    (%eax),%edx
 806d63a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d63d:	89 90 fc 00 00 00    	mov    %edx,0xfc(%eax)
 806d643:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d646:	8b 90 40 02 00 00    	mov    0x240(%eax),%edx
 806d64c:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806d64f:	01 d0                	add    %edx,%eax
 806d651:	0f b6 00             	movzbl (%eax),%eax
 806d654:	83 e0 03             	and    $0x3,%eax
 806d657:	88 85 a7 fd ff ff    	mov    %al,-0x259(%ebp)
 806d65d:	0f b6 85 a7 fd ff ff 	movzbl -0x259(%ebp),%eax
 806d664:	c1 e0 09             	shl    $0x9,%eax
 806d667:	89 c2                	mov    %eax,%edx
 806d669:	8d 83 20 79 fd ff    	lea    -0x286e0(%ebx),%eax
 806d66f:	01 c2                	add    %eax,%edx
 806d671:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806d674:	89 50 68             	mov    %edx,0x68(%eax)
 806d677:	b8 01 00 00 00       	mov    $0x1,%eax
 806d67c:	81 c4 6c 02 00 00    	add    $0x26c,%esp
 806d682:	5b                   	pop    %ebx
 806d683:	5e                   	pop    %esi
 806d684:	5d                   	pop    %ebp
 806d685:	c3                   	ret    

0806d686 <DecodeCommandBlockSwitch>:
 806d686:	55                   	push   %ebp
 806d687:	89 e5                	mov    %esp,%ebp
 806d689:	56                   	push   %esi
 806d68a:	53                   	push   %ebx
 806d68b:	81 ec 4c 02 00 00    	sub    $0x24c,%esp
 806d691:	e8 5a c4 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806d696:	81 c3 6a 29 04 00    	add    $0x4296a,%ebx
 806d69c:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%ebp)
 806d6a3:	00 00 00 
 806d6a6:	8b 45 08             	mov    0x8(%ebp),%eax
 806d6a9:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 806d6af:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806d6b5:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 806d6bb:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806d6c1:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 806d6c7:	c7 85 d4 fd ff ff 01 	movl   $0x1,-0x22c(%ebp)
 806d6ce:	00 00 00 
 806d6d1:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806d6d7:	8b 95 d4 fd ff ff    	mov    -0x22c(%ebp),%edx
 806d6dd:	83 c2 30             	add    $0x30,%edx
 806d6e0:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 806d6e4:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 806d6ea:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806d6f0:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 806d6f6:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806d6fc:	69 c0 e0 09 00 00    	imul   $0x9e0,%eax,%eax
 806d702:	01 d0                	add    %edx,%eax
 806d704:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 806d70a:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806d710:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
 806d716:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806d71c:	69 c0 30 06 00 00    	imul   $0x630,%eax,%eax
 806d722:	01 d0                	add    %edx,%eax
 806d724:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 806d72a:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806d730:	83 c0 08             	add    $0x8,%eax
 806d733:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 806d739:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806d73f:	01 c0                	add    %eax,%eax
 806d741:	83 c0 34             	add    $0x34,%eax
 806d744:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806d74b:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806d751:	01 d0                	add    %edx,%eax
 806d753:	83 c0 04             	add    $0x4,%eax
 806d756:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 806d75c:	83 bd d8 fd ff ff 01 	cmpl   $0x1,-0x228(%ebp)
 806d763:	77 0a                	ja     806d76f <DecodeCommandBlockSwitch+0xe9>
 806d765:	b8 00 00 00 00       	mov    $0x0,%eax
 806d76a:	e9 05 11 00 00       	jmp    806e874 <DecodeCommandBlockSwitch+0x11ee>
 806d76f:	83 bd cc fd ff ff 00 	cmpl   $0x0,-0x234(%ebp)
 806d776:	0f 85 82 08 00 00    	jne    806dffe <DecodeCommandBlockSwitch+0x978>
 806d77c:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806d782:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 806d788:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806d78e:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 806d794:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806d79a:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 806d7a0:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806d7a6:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 806d7ac:	c7 85 fc fd ff ff 10 	movl   $0x10,-0x204(%ebp)
 806d7b3:	00 00 00 
 806d7b6:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d7bc:	8b 40 04             	mov    0x4(%eax),%eax
 806d7bf:	83 f8 0f             	cmp    $0xf,%eax
 806d7c2:	0f 86 86 00 00 00    	jbe    806d84e <DecodeCommandBlockSwitch+0x1c8>
 806d7c8:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d7ce:	8b 00                	mov    (%eax),%eax
 806d7d0:	c1 e8 10             	shr    $0x10,%eax
 806d7d3:	89 c2                	mov    %eax,%edx
 806d7d5:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d7db:	89 10                	mov    %edx,(%eax)
 806d7dd:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d7e3:	8b 40 04             	mov    0x4(%eax),%eax
 806d7e6:	83 f0 10             	xor    $0x10,%eax
 806d7e9:	89 c2                	mov    %eax,%edx
 806d7eb:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d7f1:	89 50 04             	mov    %edx,0x4(%eax)
 806d7f4:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d7fa:	8b 10                	mov    (%eax),%edx
 806d7fc:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d802:	8b 40 08             	mov    0x8(%eax),%eax
 806d805:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 806d80b:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 806d811:	0f b7 00             	movzwl (%eax),%eax
 806d814:	0f b7 c0             	movzwl %ax,%eax
 806d817:	c1 e0 10             	shl    $0x10,%eax
 806d81a:	09 c2                	or     %eax,%edx
 806d81c:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d822:	89 10                	mov    %edx,(%eax)
 806d824:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d82a:	8b 40 0c             	mov    0xc(%eax),%eax
 806d82d:	8d 50 fe             	lea    -0x2(%eax),%edx
 806d830:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d836:	89 50 0c             	mov    %edx,0xc(%eax)
 806d839:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d83f:	8b 40 08             	mov    0x8(%eax),%eax
 806d842:	8d 50 02             	lea    0x2(%eax),%edx
 806d845:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806d84b:	89 50 08             	mov    %edx,0x8(%eax)
 806d84e:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806d854:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 806d85a:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806d860:	8b 10                	mov    (%eax),%edx
 806d862:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806d868:	8b 40 04             	mov    0x4(%eax),%eax
 806d86b:	89 c1                	mov    %eax,%ecx
 806d86d:	d3 ea                	shr    %cl,%edx
 806d86f:	89 d0                	mov    %edx,%eax
 806d871:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 806d877:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 806d87d:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 806d883:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806d889:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 806d88f:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806d895:	0f b6 c0             	movzbl %al,%eax
 806d898:	c1 e0 02             	shl    $0x2,%eax
 806d89b:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 806d8a1:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806d8a7:	0f b6 00             	movzbl (%eax),%eax
 806d8aa:	3c 08                	cmp    $0x8,%al
 806d8ac:	0f 86 83 00 00 00    	jbe    806d935 <DecodeCommandBlockSwitch+0x2af>
 806d8b2:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806d8b8:	0f b6 00             	movzbl (%eax),%eax
 806d8bb:	0f b6 c0             	movzbl %al,%eax
 806d8be:	83 e8 08             	sub    $0x8,%eax
 806d8c1:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 806d8c7:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 806d8cd:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 806d8d3:	c7 85 1c fe ff ff 08 	movl   $0x8,-0x1e4(%ebp)
 806d8da:	00 00 00 
 806d8dd:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806d8e3:	8b 50 04             	mov    0x4(%eax),%edx
 806d8e6:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 806d8ec:	01 c2                	add    %eax,%edx
 806d8ee:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806d8f4:	89 50 04             	mov    %edx,0x4(%eax)
 806d8f7:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806d8fd:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806d901:	0f b7 d0             	movzwl %ax,%edx
 806d904:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806d90a:	c1 e8 08             	shr    $0x8,%eax
 806d90d:	89 c1                	mov    %eax,%ecx
 806d90f:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806d915:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 806d91b:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806d921:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806d928:	21 c8                	and    %ecx,%eax
 806d92a:	01 d0                	add    %edx,%eax
 806d92c:	c1 e0 02             	shl    $0x2,%eax
 806d92f:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 806d935:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806d93b:	0f b6 00             	movzbl (%eax),%eax
 806d93e:	0f b6 c0             	movzbl %al,%eax
 806d941:	8b 95 10 fe ff ff    	mov    -0x1f0(%ebp),%edx
 806d947:	89 95 24 fe ff ff    	mov    %edx,-0x1dc(%ebp)
 806d94d:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 806d953:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806d959:	8b 50 04             	mov    0x4(%eax),%edx
 806d95c:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806d962:	01 c2                	add    %eax,%edx
 806d964:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806d96a:	89 50 04             	mov    %edx,0x4(%eax)
 806d96d:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806d973:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806d977:	0f b7 c0             	movzwl %ax,%eax
 806d97a:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806d980:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806d986:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 806d98c:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806d992:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 806d998:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806d99e:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 806d9a4:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806d9aa:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 806d9b0:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806d9b6:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 806d9bc:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806d9c2:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 806d9c8:	c7 85 44 fe ff ff 10 	movl   $0x10,-0x1bc(%ebp)
 806d9cf:	00 00 00 
 806d9d2:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806d9d8:	8b 40 04             	mov    0x4(%eax),%eax
 806d9db:	83 f8 0f             	cmp    $0xf,%eax
 806d9de:	0f 86 86 00 00 00    	jbe    806da6a <DecodeCommandBlockSwitch+0x3e4>
 806d9e4:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806d9ea:	8b 00                	mov    (%eax),%eax
 806d9ec:	c1 e8 10             	shr    $0x10,%eax
 806d9ef:	89 c2                	mov    %eax,%edx
 806d9f1:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806d9f7:	89 10                	mov    %edx,(%eax)
 806d9f9:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806d9ff:	8b 40 04             	mov    0x4(%eax),%eax
 806da02:	83 f0 10             	xor    $0x10,%eax
 806da05:	89 c2                	mov    %eax,%edx
 806da07:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da0d:	89 50 04             	mov    %edx,0x4(%eax)
 806da10:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da16:	8b 10                	mov    (%eax),%edx
 806da18:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da1e:	8b 40 08             	mov    0x8(%eax),%eax
 806da21:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 806da27:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 806da2d:	0f b7 00             	movzwl (%eax),%eax
 806da30:	0f b7 c0             	movzwl %ax,%eax
 806da33:	c1 e0 10             	shl    $0x10,%eax
 806da36:	09 c2                	or     %eax,%edx
 806da38:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da3e:	89 10                	mov    %edx,(%eax)
 806da40:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da46:	8b 40 0c             	mov    0xc(%eax),%eax
 806da49:	8d 50 fe             	lea    -0x2(%eax),%edx
 806da4c:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da52:	89 50 0c             	mov    %edx,0xc(%eax)
 806da55:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da5b:	8b 40 08             	mov    0x8(%eax),%eax
 806da5e:	8d 50 02             	lea    0x2(%eax),%edx
 806da61:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806da67:	89 50 08             	mov    %edx,0x8(%eax)
 806da6a:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806da70:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 806da76:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806da7c:	8b 10                	mov    (%eax),%edx
 806da7e:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806da84:	8b 40 04             	mov    0x4(%eax),%eax
 806da87:	89 c1                	mov    %eax,%ecx
 806da89:	d3 ea                	shr    %cl,%edx
 806da8b:	89 d0                	mov    %edx,%eax
 806da8d:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 806da93:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 806da99:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 806da9f:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806daa5:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%ebp)
 806daab:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806dab1:	0f b6 c0             	movzbl %al,%eax
 806dab4:	c1 e0 02             	shl    $0x2,%eax
 806dab7:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 806dabd:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806dac3:	0f b6 00             	movzbl (%eax),%eax
 806dac6:	3c 08                	cmp    $0x8,%al
 806dac8:	0f 86 83 00 00 00    	jbe    806db51 <DecodeCommandBlockSwitch+0x4cb>
 806dace:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806dad4:	0f b6 00             	movzbl (%eax),%eax
 806dad7:	0f b6 c0             	movzbl %al,%eax
 806dada:	83 e8 08             	sub    $0x8,%eax
 806dadd:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 806dae3:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 806dae9:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 806daef:	c7 85 64 fe ff ff 08 	movl   $0x8,-0x19c(%ebp)
 806daf6:	00 00 00 
 806daf9:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806daff:	8b 50 04             	mov    0x4(%eax),%edx
 806db02:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806db08:	01 c2                	add    %eax,%edx
 806db0a:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806db10:	89 50 04             	mov    %edx,0x4(%eax)
 806db13:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806db19:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806db1d:	0f b7 d0             	movzwl %ax,%edx
 806db20:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806db26:	c1 e8 08             	shr    $0x8,%eax
 806db29:	89 c1                	mov    %eax,%ecx
 806db2b:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806db31:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 806db37:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 806db3d:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806db44:	21 c8                	and    %ecx,%eax
 806db46:	01 d0                	add    %edx,%eax
 806db48:	c1 e0 02             	shl    $0x2,%eax
 806db4b:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 806db51:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806db57:	0f b6 00             	movzbl (%eax),%eax
 806db5a:	0f b6 c0             	movzbl %al,%eax
 806db5d:	8b 95 58 fe ff ff    	mov    -0x1a8(%ebp),%edx
 806db63:	89 95 6c fe ff ff    	mov    %edx,-0x194(%ebp)
 806db69:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 806db6f:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806db75:	8b 50 04             	mov    0x4(%eax),%edx
 806db78:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806db7e:	01 c2                	add    %eax,%edx
 806db80:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806db86:	89 50 04             	mov    %edx,0x4(%eax)
 806db89:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806db8f:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806db93:	0f b7 c0             	movzwl %ax,%eax
 806db96:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 806db9c:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806dba2:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806dba9:	ff 
 806dbaa:	0f b6 c0             	movzbl %al,%eax
 806dbad:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 806dbb3:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806dbb9:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806dbc0:	ff 
 806dbc1:	0f b7 d0             	movzwl %ax,%edx
 806dbc4:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806dbca:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 806dbd0:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 806dbd6:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 806dbdc:	83 bd 80 fe ff ff 10 	cmpl   $0x10,-0x180(%ebp)
 806dbe3:	0f 87 53 01 00 00    	ja     806dd3c <DecodeCommandBlockSwitch+0x6b6>
 806dbe9:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806dbef:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 806dbf5:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806dbfb:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 806dc01:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc07:	8b 40 04             	mov    0x4(%eax),%eax
 806dc0a:	83 f8 0f             	cmp    $0xf,%eax
 806dc0d:	0f 86 86 00 00 00    	jbe    806dc99 <DecodeCommandBlockSwitch+0x613>
 806dc13:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc19:	8b 00                	mov    (%eax),%eax
 806dc1b:	c1 e8 10             	shr    $0x10,%eax
 806dc1e:	89 c1                	mov    %eax,%ecx
 806dc20:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc26:	89 08                	mov    %ecx,(%eax)
 806dc28:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc2e:	8b 40 04             	mov    0x4(%eax),%eax
 806dc31:	83 f0 10             	xor    $0x10,%eax
 806dc34:	89 c1                	mov    %eax,%ecx
 806dc36:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc3c:	89 48 04             	mov    %ecx,0x4(%eax)
 806dc3f:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc45:	8b 08                	mov    (%eax),%ecx
 806dc47:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc4d:	8b 40 08             	mov    0x8(%eax),%eax
 806dc50:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 806dc56:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 806dc5c:	0f b7 00             	movzwl (%eax),%eax
 806dc5f:	0f b7 c0             	movzwl %ax,%eax
 806dc62:	c1 e0 10             	shl    $0x10,%eax
 806dc65:	09 c1                	or     %eax,%ecx
 806dc67:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc6d:	89 08                	mov    %ecx,(%eax)
 806dc6f:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc75:	8b 40 0c             	mov    0xc(%eax),%eax
 806dc78:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806dc7b:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc81:	89 48 0c             	mov    %ecx,0xc(%eax)
 806dc84:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc8a:	8b 40 08             	mov    0x8(%eax),%eax
 806dc8d:	8d 48 02             	lea    0x2(%eax),%ecx
 806dc90:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806dc96:	89 48 08             	mov    %ecx,0x8(%eax)
 806dc99:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806dc9f:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 806dca5:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806dcab:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 806dcb1:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806dcb4:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 806dcba:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 806dcc0:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 806dcc6:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806dccc:	8b 30                	mov    (%eax),%esi
 806dcce:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806dcd4:	8b 40 04             	mov    0x4(%eax),%eax
 806dcd7:	89 c1                	mov    %eax,%ecx
 806dcd9:	d3 ee                	shr    %cl,%esi
 806dcdb:	89 f0                	mov    %esi,%eax
 806dcdd:	89 c1                	mov    %eax,%ecx
 806dcdf:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806dce5:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 806dceb:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 806dcf1:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806dcf8:	21 c1                	and    %eax,%ecx
 806dcfa:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 806dd00:	89 08                	mov    %ecx,(%eax)
 806dd02:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 806dd08:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 806dd0e:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806dd14:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 806dd1a:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 806dd20:	8b 48 04             	mov    0x4(%eax),%ecx
 806dd23:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 806dd29:	01 c1                	add    %eax,%ecx
 806dd2b:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 806dd31:	89 48 04             	mov    %ecx,0x4(%eax)
 806dd34:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806dd37:	e9 a6 02 00 00       	jmp    806dfe2 <DecodeCommandBlockSwitch+0x95c>
 806dd3c:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806dd42:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 806dd48:	c7 85 b0 fe ff ff 10 	movl   $0x10,-0x150(%ebp)
 806dd4f:	00 00 00 
 806dd52:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd58:	8b 40 04             	mov    0x4(%eax),%eax
 806dd5b:	83 f8 0f             	cmp    $0xf,%eax
 806dd5e:	0f 86 86 00 00 00    	jbe    806ddea <DecodeCommandBlockSwitch+0x764>
 806dd64:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd6a:	8b 00                	mov    (%eax),%eax
 806dd6c:	c1 e8 10             	shr    $0x10,%eax
 806dd6f:	89 c1                	mov    %eax,%ecx
 806dd71:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd77:	89 08                	mov    %ecx,(%eax)
 806dd79:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd7f:	8b 40 04             	mov    0x4(%eax),%eax
 806dd82:	83 f0 10             	xor    $0x10,%eax
 806dd85:	89 c1                	mov    %eax,%ecx
 806dd87:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd8d:	89 48 04             	mov    %ecx,0x4(%eax)
 806dd90:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd96:	8b 08                	mov    (%eax),%ecx
 806dd98:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dd9e:	8b 40 08             	mov    0x8(%eax),%eax
 806dda1:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 806dda7:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 806ddad:	0f b7 00             	movzwl (%eax),%eax
 806ddb0:	0f b7 c0             	movzwl %ax,%eax
 806ddb3:	c1 e0 10             	shl    $0x10,%eax
 806ddb6:	09 c1                	or     %eax,%ecx
 806ddb8:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806ddbe:	89 08                	mov    %ecx,(%eax)
 806ddc0:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806ddc6:	8b 40 0c             	mov    0xc(%eax),%eax
 806ddc9:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806ddcc:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806ddd2:	89 48 0c             	mov    %ecx,0xc(%eax)
 806ddd5:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dddb:	8b 40 08             	mov    0x8(%eax),%eax
 806ddde:	8d 48 02             	lea    0x2(%eax),%ecx
 806dde1:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806dde7:	89 48 08             	mov    %ecx,0x8(%eax)
 806ddea:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806ddf0:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 806ddf6:	c7 85 bc fe ff ff 10 	movl   $0x10,-0x144(%ebp)
 806ddfd:	00 00 00 
 806de00:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806de06:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 806de0c:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 806de12:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 806de18:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806de1e:	8b 30                	mov    (%eax),%esi
 806de20:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806de26:	8b 40 04             	mov    0x4(%eax),%eax
 806de29:	89 c1                	mov    %eax,%ecx
 806de2b:	d3 ee                	shr    %cl,%esi
 806de2d:	89 f0                	mov    %esi,%eax
 806de2f:	89 c1                	mov    %eax,%ecx
 806de31:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806de37:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 806de3d:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 806de43:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806de4a:	21 c1                	and    %eax,%ecx
 806de4c:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 806de52:	89 08                	mov    %ecx,(%eax)
 806de54:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 806de5a:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 806de60:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806de66:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 806de6c:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 806de72:	8b 48 04             	mov    0x4(%eax),%ecx
 806de75:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 806de7b:	01 c1                	add    %eax,%ecx
 806de7d:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 806de83:	89 48 04             	mov    %ecx,0x4(%eax)
 806de86:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806de8c:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 806de92:	c7 85 d8 fe ff ff 08 	movl   $0x8,-0x128(%ebp)
 806de99:	00 00 00 
 806de9c:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806dea2:	8b 40 04             	mov    0x4(%eax),%eax
 806dea5:	83 f8 0f             	cmp    $0xf,%eax
 806dea8:	0f 86 86 00 00 00    	jbe    806df34 <DecodeCommandBlockSwitch+0x8ae>
 806deae:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806deb4:	8b 00                	mov    (%eax),%eax
 806deb6:	c1 e8 10             	shr    $0x10,%eax
 806deb9:	89 c1                	mov    %eax,%ecx
 806debb:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806dec1:	89 08                	mov    %ecx,(%eax)
 806dec3:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806dec9:	8b 40 04             	mov    0x4(%eax),%eax
 806decc:	83 f0 10             	xor    $0x10,%eax
 806decf:	89 c1                	mov    %eax,%ecx
 806ded1:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806ded7:	89 48 04             	mov    %ecx,0x4(%eax)
 806deda:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806dee0:	8b 08                	mov    (%eax),%ecx
 806dee2:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806dee8:	8b 40 08             	mov    0x8(%eax),%eax
 806deeb:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 806def1:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 806def7:	0f b7 00             	movzwl (%eax),%eax
 806defa:	0f b7 c0             	movzwl %ax,%eax
 806defd:	c1 e0 10             	shl    $0x10,%eax
 806df00:	09 c1                	or     %eax,%ecx
 806df02:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806df08:	89 08                	mov    %ecx,(%eax)
 806df0a:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806df10:	8b 40 0c             	mov    0xc(%eax),%eax
 806df13:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806df16:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806df1c:	89 48 0c             	mov    %ecx,0xc(%eax)
 806df1f:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806df25:	8b 40 08             	mov    0x8(%eax),%eax
 806df28:	8d 48 02             	lea    0x2(%eax),%ecx
 806df2b:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806df31:	89 48 08             	mov    %ecx,0x8(%eax)
 806df34:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806df3a:	8d 48 f0             	lea    -0x10(%eax),%ecx
 806df3d:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806df43:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 806df49:	89 8d e4 fe ff ff    	mov    %ecx,-0x11c(%ebp)
 806df4f:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806df52:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 806df58:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 806df5e:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 806df64:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806df6a:	8b 30                	mov    (%eax),%esi
 806df6c:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806df72:	8b 40 04             	mov    0x4(%eax),%eax
 806df75:	89 c1                	mov    %eax,%ecx
 806df77:	d3 ee                	shr    %cl,%esi
 806df79:	89 f0                	mov    %esi,%eax
 806df7b:	89 c1                	mov    %eax,%ecx
 806df7d:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806df83:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 806df89:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806df8f:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806df96:	21 c1                	and    %eax,%ecx
 806df98:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 806df9e:	89 08                	mov    %ecx,(%eax)
 806dfa0:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 806dfa6:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 806dfac:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806dfb2:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 806dfb8:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806dfbe:	8b 48 04             	mov    0x4(%eax),%ecx
 806dfc1:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806dfc7:	01 c1                	add    %eax,%ecx
 806dfc9:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806dfcf:	89 48 04             	mov    %ecx,0x4(%eax)
 806dfd2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806dfd5:	c1 e0 10             	shl    $0x10,%eax
 806dfd8:	89 c1                	mov    %eax,%ecx
 806dfda:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806dfe0:	09 c8                	or     %ecx,%eax
 806dfe2:	01 d0                	add    %edx,%eax
 806dfe4:	89 c2                	mov    %eax,%edx
 806dfe6:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806dfec:	8b 8d d4 fd ff ff    	mov    -0x22c(%ebp),%ecx
 806dff2:	83 c1 2c             	add    $0x2c,%ecx
 806dff5:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 806dff9:	e9 e5 07 00 00       	jmp    806e7e3 <DecodeCommandBlockSwitch+0x115d>
 806dffe:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806e004:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 806e00a:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806e00d:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 806e013:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806e019:	8b 10                	mov    (%eax),%edx
 806e01b:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806e021:	89 10                	mov    %edx,(%eax)
 806e023:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806e029:	8b 50 04             	mov    0x4(%eax),%edx
 806e02c:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806e032:	89 50 04             	mov    %edx,0x4(%eax)
 806e035:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806e03b:	8b 50 08             	mov    0x8(%eax),%edx
 806e03e:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806e044:	89 50 08             	mov    %edx,0x8(%eax)
 806e047:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806e04d:	8b 50 0c             	mov    0xc(%eax),%edx
 806e050:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806e056:	89 50 0c             	mov    %edx,0xc(%eax)
 806e059:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806e05f:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 806e065:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806e06b:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 806e071:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 806e077:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 806e07d:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806e083:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 806e089:	c7 85 14 ff ff ff 0f 	movl   $0xf,-0xec(%ebp)
 806e090:	00 00 00 
 806e093:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806e099:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 806e09f:	e9 a8 00 00 00       	jmp    806e14c <DecodeCommandBlockSwitch+0xac6>
 806e0a4:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806e0aa:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 806e0b0:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e0b6:	8b 40 0c             	mov    0xc(%eax),%eax
 806e0b9:	85 c0                	test   %eax,%eax
 806e0bb:	75 07                	jne    806e0c4 <DecodeCommandBlockSwitch+0xa3e>
 806e0bd:	b8 00 00 00 00       	mov    $0x0,%eax
 806e0c2:	eb 7d                	jmp    806e141 <DecodeCommandBlockSwitch+0xabb>
 806e0c4:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e0ca:	8b 00                	mov    (%eax),%eax
 806e0cc:	c1 e8 08             	shr    $0x8,%eax
 806e0cf:	89 c2                	mov    %eax,%edx
 806e0d1:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e0d7:	89 10                	mov    %edx,(%eax)
 806e0d9:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e0df:	8b 10                	mov    (%eax),%edx
 806e0e1:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e0e7:	8b 40 08             	mov    0x8(%eax),%eax
 806e0ea:	0f b6 00             	movzbl (%eax),%eax
 806e0ed:	0f b6 c0             	movzbl %al,%eax
 806e0f0:	c1 e0 18             	shl    $0x18,%eax
 806e0f3:	09 c2                	or     %eax,%edx
 806e0f5:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e0fb:	89 10                	mov    %edx,(%eax)
 806e0fd:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e103:	8b 40 04             	mov    0x4(%eax),%eax
 806e106:	8d 50 f8             	lea    -0x8(%eax),%edx
 806e109:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e10f:	89 50 04             	mov    %edx,0x4(%eax)
 806e112:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e118:	8b 40 0c             	mov    0xc(%eax),%eax
 806e11b:	8d 50 ff             	lea    -0x1(%eax),%edx
 806e11e:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e124:	89 50 0c             	mov    %edx,0xc(%eax)
 806e127:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e12d:	8b 40 08             	mov    0x8(%eax),%eax
 806e130:	8d 50 01             	lea    0x1(%eax),%edx
 806e133:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806e139:	89 50 08             	mov    %edx,0x8(%eax)
 806e13c:	b8 01 00 00 00       	mov    $0x1,%eax
 806e141:	85 c0                	test   %eax,%eax
 806e143:	75 07                	jne    806e14c <DecodeCommandBlockSwitch+0xac6>
 806e145:	b8 00 00 00 00       	mov    $0x0,%eax
 806e14a:	eb 77                	jmp    806e1c3 <DecodeCommandBlockSwitch+0xb3d>
 806e14c:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806e152:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 806e158:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806e15e:	8b 40 04             	mov    0x4(%eax),%eax
 806e161:	ba 20 00 00 00       	mov    $0x20,%edx
 806e166:	29 c2                	sub    %eax,%edx
 806e168:	89 d0                	mov    %edx,%eax
 806e16a:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%ebp)
 806e170:	0f 87 2e ff ff ff    	ja     806e0a4 <DecodeCommandBlockSwitch+0xa1e>
 806e176:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806e17c:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 806e182:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806e188:	8b 10                	mov    (%eax),%edx
 806e18a:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806e190:	8b 40 04             	mov    0x4(%eax),%eax
 806e193:	89 c1                	mov    %eax,%ecx
 806e195:	d3 ea                	shr    %cl,%edx
 806e197:	89 d0                	mov    %edx,%eax
 806e199:	89 c2                	mov    %eax,%edx
 806e19b:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806e1a1:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 806e1a7:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806e1ad:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806e1b4:	21 c2                	and    %eax,%edx
 806e1b6:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 806e1bc:	89 10                	mov    %edx,(%eax)
 806e1be:	b8 01 00 00 00       	mov    $0x1,%eax
 806e1c3:	85 c0                	test   %eax,%eax
 806e1c5:	0f 95 c0             	setne  %al
 806e1c8:	0f b6 c0             	movzbl %al,%eax
 806e1cb:	85 c0                	test   %eax,%eax
 806e1cd:	0f 84 20 01 00 00    	je     806e2f3 <DecodeCommandBlockSwitch+0xc6d>
 806e1d3:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806e1d9:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 806e1df:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 806e1e5:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 806e1eb:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806e1f1:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 806e1f7:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806e1fd:	0f b6 c0             	movzbl %al,%eax
 806e200:	c1 e0 02             	shl    $0x2,%eax
 806e203:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 806e209:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806e20f:	0f b6 00             	movzbl (%eax),%eax
 806e212:	3c 08                	cmp    $0x8,%al
 806e214:	0f 86 83 00 00 00    	jbe    806e29d <DecodeCommandBlockSwitch+0xc17>
 806e21a:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806e220:	0f b6 00             	movzbl (%eax),%eax
 806e223:	0f b6 c0             	movzbl %al,%eax
 806e226:	83 e8 08             	sub    $0x8,%eax
 806e229:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 806e22f:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 806e235:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 806e23b:	c7 85 40 ff ff ff 08 	movl   $0x8,-0xc0(%ebp)
 806e242:	00 00 00 
 806e245:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806e24b:	8b 50 04             	mov    0x4(%eax),%edx
 806e24e:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806e254:	01 c2                	add    %eax,%edx
 806e256:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806e25c:	89 50 04             	mov    %edx,0x4(%eax)
 806e25f:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806e265:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806e269:	0f b7 d0             	movzwl %ax,%edx
 806e26c:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806e272:	c1 e8 08             	shr    $0x8,%eax
 806e275:	89 c1                	mov    %eax,%ecx
 806e277:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806e27d:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 806e283:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806e289:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806e290:	21 c8                	and    %ecx,%eax
 806e292:	01 d0                	add    %edx,%eax
 806e294:	c1 e0 02             	shl    $0x2,%eax
 806e297:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 806e29d:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806e2a3:	0f b6 00             	movzbl (%eax),%eax
 806e2a6:	0f b6 c0             	movzbl %al,%eax
 806e2a9:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 806e2af:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
 806e2b5:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806e2bb:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806e2c1:	8b 50 04             	mov    0x4(%eax),%edx
 806e2c4:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806e2ca:	01 c2                	add    %eax,%edx
 806e2cc:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806e2d2:	89 50 04             	mov    %edx,0x4(%eax)
 806e2d5:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806e2db:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806e2df:	0f b7 c0             	movzwl %ax,%eax
 806e2e2:	89 c2                	mov    %eax,%edx
 806e2e4:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806e2ea:	89 10                	mov    %edx,(%eax)
 806e2ec:	b8 01 00 00 00       	mov    $0x1,%eax
 806e2f1:	eb 22                	jmp    806e315 <DecodeCommandBlockSwitch+0xc8f>
 806e2f3:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806e2f9:	89 44 24 08          	mov    %eax,0x8(%esp)
 806e2fd:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806e303:	89 44 24 04          	mov    %eax,0x4(%esp)
 806e307:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 806e30d:	89 04 24             	mov    %eax,(%esp)
 806e310:	e8 b7 a6 ff ff       	call   80689cc <SafeDecodeSymbol>
 806e315:	85 c0                	test   %eax,%eax
 806e317:	75 0a                	jne    806e323 <DecodeCommandBlockSwitch+0xc9d>
 806e319:	b8 00 00 00 00       	mov    $0x0,%eax
 806e31e:	e9 51 05 00 00       	jmp    806e874 <DecodeCommandBlockSwitch+0x11ee>
 806e323:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806e329:	83 c0 2c             	add    $0x2c,%eax
 806e32c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806e333:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e339:	01 d0                	add    %edx,%eax
 806e33b:	8d 50 0c             	lea    0xc(%eax),%edx
 806e33e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e344:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 806e34a:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
 806e350:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806e356:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 806e35c:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806e362:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 806e368:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806e36e:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 806e374:	85 c0                	test   %eax,%eax
 806e376:	0f 85 63 02 00 00    	jne    806e5df <DecodeCommandBlockSwitch+0xf59>
 806e37c:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806e382:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 806e388:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806e38e:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806e394:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax
 806e39a:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 806e3a0:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806e3a6:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 806e3ac:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%ebp)
 806e3b3:	00 00 00 
 806e3b6:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806e3bc:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 806e3c2:	e9 a8 00 00 00       	jmp    806e46f <DecodeCommandBlockSwitch+0xde9>
 806e3c7:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806e3cd:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 806e3d3:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e3d9:	8b 40 0c             	mov    0xc(%eax),%eax
 806e3dc:	85 c0                	test   %eax,%eax
 806e3de:	75 07                	jne    806e3e7 <DecodeCommandBlockSwitch+0xd61>
 806e3e0:	b8 00 00 00 00       	mov    $0x0,%eax
 806e3e5:	eb 7d                	jmp    806e464 <DecodeCommandBlockSwitch+0xdde>
 806e3e7:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e3ed:	8b 00                	mov    (%eax),%eax
 806e3ef:	c1 e8 08             	shr    $0x8,%eax
 806e3f2:	89 c2                	mov    %eax,%edx
 806e3f4:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e3fa:	89 10                	mov    %edx,(%eax)
 806e3fc:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e402:	8b 10                	mov    (%eax),%edx
 806e404:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e40a:	8b 40 08             	mov    0x8(%eax),%eax
 806e40d:	0f b6 00             	movzbl (%eax),%eax
 806e410:	0f b6 c0             	movzbl %al,%eax
 806e413:	c1 e0 18             	shl    $0x18,%eax
 806e416:	09 c2                	or     %eax,%edx
 806e418:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e41e:	89 10                	mov    %edx,(%eax)
 806e420:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e426:	8b 40 04             	mov    0x4(%eax),%eax
 806e429:	8d 50 f8             	lea    -0x8(%eax),%edx
 806e42c:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e432:	89 50 04             	mov    %edx,0x4(%eax)
 806e435:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e43b:	8b 40 0c             	mov    0xc(%eax),%eax
 806e43e:	8d 50 ff             	lea    -0x1(%eax),%edx
 806e441:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e447:	89 50 0c             	mov    %edx,0xc(%eax)
 806e44a:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e450:	8b 40 08             	mov    0x8(%eax),%eax
 806e453:	8d 50 01             	lea    0x1(%eax),%edx
 806e456:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806e45c:	89 50 08             	mov    %edx,0x8(%eax)
 806e45f:	b8 01 00 00 00       	mov    $0x1,%eax
 806e464:	85 c0                	test   %eax,%eax
 806e466:	75 07                	jne    806e46f <DecodeCommandBlockSwitch+0xde9>
 806e468:	b8 00 00 00 00       	mov    $0x0,%eax
 806e46d:	eb 68                	jmp    806e4d7 <DecodeCommandBlockSwitch+0xe51>
 806e46f:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806e475:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 806e47b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806e481:	8b 40 04             	mov    0x4(%eax),%eax
 806e484:	ba 20 00 00 00       	mov    $0x20,%edx
 806e489:	29 c2                	sub    %eax,%edx
 806e48b:	89 d0                	mov    %edx,%eax
 806e48d:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%ebp)
 806e493:	0f 87 2e ff ff ff    	ja     806e3c7 <DecodeCommandBlockSwitch+0xd41>
 806e499:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806e49f:	89 45 80             	mov    %eax,-0x80(%ebp)
 806e4a2:	8b 45 80             	mov    -0x80(%ebp),%eax
 806e4a5:	8b 10                	mov    (%eax),%edx
 806e4a7:	8b 45 80             	mov    -0x80(%ebp),%eax
 806e4aa:	8b 40 04             	mov    0x4(%eax),%eax
 806e4ad:	89 c1                	mov    %eax,%ecx
 806e4af:	d3 ea                	shr    %cl,%edx
 806e4b1:	89 d0                	mov    %edx,%eax
 806e4b3:	89 c2                	mov    %eax,%edx
 806e4b5:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806e4bb:	89 45 84             	mov    %eax,-0x7c(%ebp)
 806e4be:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806e4c1:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806e4c8:	21 c2                	and    %eax,%edx
 806e4ca:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806e4d0:	89 10                	mov    %edx,(%eax)
 806e4d2:	b8 01 00 00 00       	mov    $0x1,%eax
 806e4d7:	85 c0                	test   %eax,%eax
 806e4d9:	0f 95 c0             	setne  %al
 806e4dc:	0f b6 c0             	movzbl %al,%eax
 806e4df:	85 c0                	test   %eax,%eax
 806e4e1:	0f 84 c8 00 00 00    	je     806e5af <DecodeCommandBlockSwitch+0xf29>
 806e4e7:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806e4ed:	89 45 88             	mov    %eax,-0x78(%ebp)
 806e4f0:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806e4f6:	89 45 8c             	mov    %eax,-0x74(%ebp)
 806e4f9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806e4ff:	89 45 90             	mov    %eax,-0x70(%ebp)
 806e502:	8b 45 88             	mov    -0x78(%ebp),%eax
 806e505:	0f b6 c0             	movzbl %al,%eax
 806e508:	c1 e0 02             	shl    $0x2,%eax
 806e50b:	01 45 8c             	add    %eax,-0x74(%ebp)
 806e50e:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806e511:	0f b6 00             	movzbl (%eax),%eax
 806e514:	3c 08                	cmp    $0x8,%al
 806e516:	76 59                	jbe    806e571 <DecodeCommandBlockSwitch+0xeeb>
 806e518:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806e51b:	0f b6 00             	movzbl (%eax),%eax
 806e51e:	0f b6 c0             	movzbl %al,%eax
 806e521:	83 e8 08             	sub    $0x8,%eax
 806e524:	89 45 94             	mov    %eax,-0x6c(%ebp)
 806e527:	8b 45 90             	mov    -0x70(%ebp),%eax
 806e52a:	89 45 98             	mov    %eax,-0x68(%ebp)
 806e52d:	c7 45 9c 08 00 00 00 	movl   $0x8,-0x64(%ebp)
 806e534:	8b 45 98             	mov    -0x68(%ebp),%eax
 806e537:	8b 50 04             	mov    0x4(%eax),%edx
 806e53a:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806e53d:	01 c2                	add    %eax,%edx
 806e53f:	8b 45 98             	mov    -0x68(%ebp),%eax
 806e542:	89 50 04             	mov    %edx,0x4(%eax)
 806e545:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806e548:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806e54c:	0f b7 d0             	movzwl %ax,%edx
 806e54f:	8b 45 88             	mov    -0x78(%ebp),%eax
 806e552:	c1 e8 08             	shr    $0x8,%eax
 806e555:	89 c1                	mov    %eax,%ecx
 806e557:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806e55a:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806e55d:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806e560:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806e567:	21 c8                	and    %ecx,%eax
 806e569:	01 d0                	add    %edx,%eax
 806e56b:	c1 e0 02             	shl    $0x2,%eax
 806e56e:	01 45 8c             	add    %eax,-0x74(%ebp)
 806e571:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806e574:	0f b6 00             	movzbl (%eax),%eax
 806e577:	0f b6 c0             	movzbl %al,%eax
 806e57a:	8b 55 90             	mov    -0x70(%ebp),%edx
 806e57d:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 806e580:	89 45 a8             	mov    %eax,-0x58(%ebp)
 806e583:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806e586:	8b 50 04             	mov    0x4(%eax),%edx
 806e589:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806e58c:	01 c2                	add    %eax,%edx
 806e58e:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806e591:	89 50 04             	mov    %edx,0x4(%eax)
 806e594:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806e597:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806e59b:	0f b7 c0             	movzwl %ax,%eax
 806e59e:	89 c2                	mov    %eax,%edx
 806e5a0:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806e5a6:	89 10                	mov    %edx,(%eax)
 806e5a8:	b8 01 00 00 00       	mov    $0x1,%eax
 806e5ad:	eb 22                	jmp    806e5d1 <DecodeCommandBlockSwitch+0xf4b>
 806e5af:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806e5b5:	89 44 24 08          	mov    %eax,0x8(%esp)
 806e5b9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806e5bf:	89 44 24 04          	mov    %eax,0x4(%esp)
 806e5c3:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806e5c9:	89 04 24             	mov    %eax,(%esp)
 806e5cc:	e8 fb a3 ff ff       	call   80689cc <SafeDecodeSymbol>
 806e5d1:	85 c0                	test   %eax,%eax
 806e5d3:	75 1c                	jne    806e5f1 <DecodeCommandBlockSwitch+0xf6b>
 806e5d5:	b8 00 00 00 00       	mov    $0x0,%eax
 806e5da:	e9 a9 01 00 00       	jmp    806e788 <DecodeCommandBlockSwitch+0x1102>
 806e5df:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806e5e5:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 806e5eb:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 806e5f1:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 806e5f7:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806e5fe:	ff 
 806e5ff:	0f b6 c0             	movzbl %al,%eax
 806e602:	89 45 ac             	mov    %eax,-0x54(%ebp)
 806e605:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806e60b:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806e60e:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806e611:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806e614:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806e61a:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806e61d:	e9 81 00 00 00       	jmp    806e6a3 <DecodeCommandBlockSwitch+0x101d>
 806e622:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806e625:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806e628:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e62b:	8b 40 0c             	mov    0xc(%eax),%eax
 806e62e:	85 c0                	test   %eax,%eax
 806e630:	75 07                	jne    806e639 <DecodeCommandBlockSwitch+0xfb3>
 806e632:	b8 00 00 00 00       	mov    $0x0,%eax
 806e637:	eb 5c                	jmp    806e695 <DecodeCommandBlockSwitch+0x100f>
 806e639:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e63c:	8b 00                	mov    (%eax),%eax
 806e63e:	c1 e8 08             	shr    $0x8,%eax
 806e641:	89 c2                	mov    %eax,%edx
 806e643:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e646:	89 10                	mov    %edx,(%eax)
 806e648:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e64b:	8b 10                	mov    (%eax),%edx
 806e64d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e650:	8b 40 08             	mov    0x8(%eax),%eax
 806e653:	0f b6 00             	movzbl (%eax),%eax
 806e656:	0f b6 c0             	movzbl %al,%eax
 806e659:	c1 e0 18             	shl    $0x18,%eax
 806e65c:	09 c2                	or     %eax,%edx
 806e65e:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e661:	89 10                	mov    %edx,(%eax)
 806e663:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e666:	8b 40 04             	mov    0x4(%eax),%eax
 806e669:	8d 50 f8             	lea    -0x8(%eax),%edx
 806e66c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e66f:	89 50 04             	mov    %edx,0x4(%eax)
 806e672:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e675:	8b 40 0c             	mov    0xc(%eax),%eax
 806e678:	8d 50 ff             	lea    -0x1(%eax),%edx
 806e67b:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e67e:	89 50 0c             	mov    %edx,0xc(%eax)
 806e681:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e684:	8b 40 08             	mov    0x8(%eax),%eax
 806e687:	8d 50 01             	lea    0x1(%eax),%edx
 806e68a:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806e68d:	89 50 08             	mov    %edx,0x8(%eax)
 806e690:	b8 01 00 00 00       	mov    $0x1,%eax
 806e695:	85 c0                	test   %eax,%eax
 806e697:	75 0a                	jne    806e6a3 <DecodeCommandBlockSwitch+0x101d>
 806e699:	b8 00 00 00 00       	mov    $0x0,%eax
 806e69e:	e9 82 00 00 00       	jmp    806e725 <DecodeCommandBlockSwitch+0x109f>
 806e6a3:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806e6a6:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806e6a9:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806e6ac:	8b 40 04             	mov    0x4(%eax),%eax
 806e6af:	ba 20 00 00 00       	mov    $0x20,%edx
 806e6b4:	29 c2                	sub    %eax,%edx
 806e6b6:	89 d0                	mov    %edx,%eax
 806e6b8:	39 45 b4             	cmp    %eax,-0x4c(%ebp)
 806e6bb:	0f 87 61 ff ff ff    	ja     806e622 <DecodeCommandBlockSwitch+0xf9c>
 806e6c1:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806e6c4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806e6c7:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806e6ca:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806e6cd:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806e6d0:	89 45 cc             	mov    %eax,-0x34(%ebp)
 806e6d3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806e6d6:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806e6d9:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806e6dc:	8b 10                	mov    (%eax),%edx
 806e6de:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806e6e1:	8b 40 04             	mov    0x4(%eax),%eax
 806e6e4:	89 c1                	mov    %eax,%ecx
 806e6e6:	d3 ea                	shr    %cl,%edx
 806e6e8:	89 d0                	mov    %edx,%eax
 806e6ea:	89 c2                	mov    %eax,%edx
 806e6ec:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806e6ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806e6f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806e6f5:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806e6fc:	21 c2                	and    %eax,%edx
 806e6fe:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806e701:	89 10                	mov    %edx,(%eax)
 806e703:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806e706:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806e709:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806e70c:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806e70f:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806e712:	8b 50 04             	mov    0x4(%eax),%edx
 806e715:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806e718:	01 c2                	add    %eax,%edx
 806e71a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806e71d:	89 50 04             	mov    %edx,0x4(%eax)
 806e720:	b8 01 00 00 00       	mov    $0x1,%eax
 806e725:	85 c0                	test   %eax,%eax
 806e727:	75 29                	jne    806e752 <DecodeCommandBlockSwitch+0x10cc>
 806e729:	8b 95 bc fd ff ff    	mov    -0x244(%ebp),%edx
 806e72f:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806e735:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 806e73b:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806e741:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 806e748:	00 00 00 
 806e74b:	b8 00 00 00 00       	mov    $0x0,%eax
 806e750:	eb 36                	jmp    806e788 <DecodeCommandBlockSwitch+0x1102>
 806e752:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 806e758:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806e75f:	ff 
 806e760:	0f b7 d0             	movzwl %ax,%edx
 806e763:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806e769:	01 c2                	add    %eax,%edx
 806e76b:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806e771:	89 10                	mov    %edx,(%eax)
 806e773:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806e779:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806e780:	00 00 00 
 806e783:	b8 01 00 00 00       	mov    $0x1,%eax
 806e788:	85 c0                	test   %eax,%eax
 806e78a:	75 57                	jne    806e7e3 <DecodeCommandBlockSwitch+0x115d>
 806e78c:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e792:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806e799:	00 00 00 
 806e79c:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806e7a2:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806e7a5:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806e7a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806e7ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806e7ae:	8b 10                	mov    (%eax),%edx
 806e7b0:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806e7b3:	89 10                	mov    %edx,(%eax)
 806e7b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806e7b8:	8b 50 04             	mov    0x4(%eax),%edx
 806e7bb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806e7be:	89 50 04             	mov    %edx,0x4(%eax)
 806e7c1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806e7c4:	8b 50 08             	mov    0x8(%eax),%edx
 806e7c7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806e7ca:	89 50 08             	mov    %edx,0x8(%eax)
 806e7cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806e7d0:	8b 50 0c             	mov    0xc(%eax),%edx
 806e7d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806e7d6:	89 50 0c             	mov    %edx,0xc(%eax)
 806e7d9:	b8 00 00 00 00       	mov    $0x0,%eax
 806e7de:	e9 91 00 00 00       	jmp    806e874 <DecodeCommandBlockSwitch+0x11ee>
 806e7e3:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806e7e9:	83 f8 01             	cmp    $0x1,%eax
 806e7ec:	75 16                	jne    806e804 <DecodeCommandBlockSwitch+0x117e>
 806e7ee:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806e7f4:	83 c0 04             	add    $0x4,%eax
 806e7f7:	8b 00                	mov    (%eax),%eax
 806e7f9:	83 c0 01             	add    $0x1,%eax
 806e7fc:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806e802:	eb 29                	jmp    806e82d <DecodeCommandBlockSwitch+0x11a7>
 806e804:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806e80a:	85 c0                	test   %eax,%eax
 806e80c:	75 10                	jne    806e81e <DecodeCommandBlockSwitch+0x1198>
 806e80e:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806e814:	8b 00                	mov    (%eax),%eax
 806e816:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806e81c:	eb 0f                	jmp    806e82d <DecodeCommandBlockSwitch+0x11a7>
 806e81e:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806e824:	83 e8 02             	sub    $0x2,%eax
 806e827:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806e82d:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806e833:	39 85 d8 fd ff ff    	cmp    %eax,-0x228(%ebp)
 806e839:	77 12                	ja     806e84d <DecodeCommandBlockSwitch+0x11c7>
 806e83b:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806e841:	2b 85 d8 fd ff ff    	sub    -0x228(%ebp),%eax
 806e847:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806e84d:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806e853:	8b 50 04             	mov    0x4(%eax),%edx
 806e856:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806e85c:	89 10                	mov    %edx,(%eax)
 806e85e:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806e864:	8d 50 04             	lea    0x4(%eax),%edx
 806e867:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806e86d:	89 02                	mov    %eax,(%edx)
 806e86f:	b8 01 00 00 00       	mov    $0x1,%eax
 806e874:	85 c0                	test   %eax,%eax
 806e876:	74 28                	je     806e8a0 <DecodeCommandBlockSwitch+0x121a>
 806e878:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806e87e:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 806e884:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806e88a:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
 806e890:	c1 e0 02             	shl    $0x2,%eax
 806e893:	01 d0                	add    %edx,%eax
 806e895:	8b 10                	mov    (%eax),%edx
 806e897:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806e89d:	89 50 64             	mov    %edx,0x64(%eax)
 806e8a0:	81 c4 4c 02 00 00    	add    $0x24c,%esp
 806e8a6:	5b                   	pop    %ebx
 806e8a7:	5e                   	pop    %esi
 806e8a8:	5d                   	pop    %ebp
 806e8a9:	c3                   	ret    

0806e8aa <SafeDecodeCommandBlockSwitch>:
 806e8aa:	55                   	push   %ebp
 806e8ab:	89 e5                	mov    %esp,%ebp
 806e8ad:	56                   	push   %esi
 806e8ae:	53                   	push   %ebx
 806e8af:	81 ec 4c 02 00 00    	sub    $0x24c,%esp
 806e8b5:	e8 36 b2 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806e8ba:	81 c3 46 17 04 00    	add    $0x41746,%ebx
 806e8c0:	c7 85 c4 fd ff ff 01 	movl   $0x1,-0x23c(%ebp)
 806e8c7:	00 00 00 
 806e8ca:	8b 45 08             	mov    0x8(%ebp),%eax
 806e8cd:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 806e8d3:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806e8d9:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 806e8df:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806e8e5:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 806e8eb:	c7 85 d4 fd ff ff 01 	movl   $0x1,-0x22c(%ebp)
 806e8f2:	00 00 00 
 806e8f5:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e8fb:	8b 95 d4 fd ff ff    	mov    -0x22c(%ebp),%edx
 806e901:	83 c2 30             	add    $0x30,%edx
 806e904:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 806e908:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 806e90e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e914:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 806e91a:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806e920:	69 c0 e0 09 00 00    	imul   $0x9e0,%eax,%eax
 806e926:	01 d0                	add    %edx,%eax
 806e928:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 806e92e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e934:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
 806e93a:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806e940:	69 c0 30 06 00 00    	imul   $0x630,%eax,%eax
 806e946:	01 d0                	add    %edx,%eax
 806e948:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 806e94e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e954:	83 c0 08             	add    $0x8,%eax
 806e957:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 806e95d:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806e963:	01 c0                	add    %eax,%eax
 806e965:	83 c0 34             	add    $0x34,%eax
 806e968:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806e96f:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806e975:	01 d0                	add    %edx,%eax
 806e977:	83 c0 04             	add    $0x4,%eax
 806e97a:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 806e980:	83 bd d8 fd ff ff 01 	cmpl   $0x1,-0x228(%ebp)
 806e987:	77 0a                	ja     806e993 <SafeDecodeCommandBlockSwitch+0xe9>
 806e989:	b8 00 00 00 00       	mov    $0x0,%eax
 806e98e:	e9 05 11 00 00       	jmp    806fa98 <SafeDecodeCommandBlockSwitch+0x11ee>
 806e993:	83 bd cc fd ff ff 00 	cmpl   $0x0,-0x234(%ebp)
 806e99a:	0f 85 82 08 00 00    	jne    806f222 <SafeDecodeCommandBlockSwitch+0x978>
 806e9a0:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806e9a6:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 806e9ac:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806e9b2:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 806e9b8:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806e9be:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 806e9c4:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806e9ca:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 806e9d0:	c7 85 fc fd ff ff 10 	movl   $0x10,-0x204(%ebp)
 806e9d7:	00 00 00 
 806e9da:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806e9e0:	8b 40 04             	mov    0x4(%eax),%eax
 806e9e3:	83 f8 0f             	cmp    $0xf,%eax
 806e9e6:	0f 86 86 00 00 00    	jbe    806ea72 <SafeDecodeCommandBlockSwitch+0x1c8>
 806e9ec:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806e9f2:	8b 00                	mov    (%eax),%eax
 806e9f4:	c1 e8 10             	shr    $0x10,%eax
 806e9f7:	89 c2                	mov    %eax,%edx
 806e9f9:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806e9ff:	89 10                	mov    %edx,(%eax)
 806ea01:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea07:	8b 40 04             	mov    0x4(%eax),%eax
 806ea0a:	83 f0 10             	xor    $0x10,%eax
 806ea0d:	89 c2                	mov    %eax,%edx
 806ea0f:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea15:	89 50 04             	mov    %edx,0x4(%eax)
 806ea18:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea1e:	8b 10                	mov    (%eax),%edx
 806ea20:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea26:	8b 40 08             	mov    0x8(%eax),%eax
 806ea29:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 806ea2f:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 806ea35:	0f b7 00             	movzwl (%eax),%eax
 806ea38:	0f b7 c0             	movzwl %ax,%eax
 806ea3b:	c1 e0 10             	shl    $0x10,%eax
 806ea3e:	09 c2                	or     %eax,%edx
 806ea40:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea46:	89 10                	mov    %edx,(%eax)
 806ea48:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea4e:	8b 40 0c             	mov    0xc(%eax),%eax
 806ea51:	8d 50 fe             	lea    -0x2(%eax),%edx
 806ea54:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea5a:	89 50 0c             	mov    %edx,0xc(%eax)
 806ea5d:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea63:	8b 40 08             	mov    0x8(%eax),%eax
 806ea66:	8d 50 02             	lea    0x2(%eax),%edx
 806ea69:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806ea6f:	89 50 08             	mov    %edx,0x8(%eax)
 806ea72:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806ea78:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 806ea7e:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806ea84:	8b 10                	mov    (%eax),%edx
 806ea86:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806ea8c:	8b 40 04             	mov    0x4(%eax),%eax
 806ea8f:	89 c1                	mov    %eax,%ecx
 806ea91:	d3 ea                	shr    %cl,%edx
 806ea93:	89 d0                	mov    %edx,%eax
 806ea95:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 806ea9b:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 806eaa1:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 806eaa7:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806eaad:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 806eab3:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806eab9:	0f b6 c0             	movzbl %al,%eax
 806eabc:	c1 e0 02             	shl    $0x2,%eax
 806eabf:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 806eac5:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806eacb:	0f b6 00             	movzbl (%eax),%eax
 806eace:	3c 08                	cmp    $0x8,%al
 806ead0:	0f 86 83 00 00 00    	jbe    806eb59 <SafeDecodeCommandBlockSwitch+0x2af>
 806ead6:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806eadc:	0f b6 00             	movzbl (%eax),%eax
 806eadf:	0f b6 c0             	movzbl %al,%eax
 806eae2:	83 e8 08             	sub    $0x8,%eax
 806eae5:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 806eaeb:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 806eaf1:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 806eaf7:	c7 85 1c fe ff ff 08 	movl   $0x8,-0x1e4(%ebp)
 806eafe:	00 00 00 
 806eb01:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806eb07:	8b 50 04             	mov    0x4(%eax),%edx
 806eb0a:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 806eb10:	01 c2                	add    %eax,%edx
 806eb12:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806eb18:	89 50 04             	mov    %edx,0x4(%eax)
 806eb1b:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806eb21:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806eb25:	0f b7 d0             	movzwl %ax,%edx
 806eb28:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806eb2e:	c1 e8 08             	shr    $0x8,%eax
 806eb31:	89 c1                	mov    %eax,%ecx
 806eb33:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806eb39:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 806eb3f:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806eb45:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806eb4c:	21 c8                	and    %ecx,%eax
 806eb4e:	01 d0                	add    %edx,%eax
 806eb50:	c1 e0 02             	shl    $0x2,%eax
 806eb53:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 806eb59:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806eb5f:	0f b6 00             	movzbl (%eax),%eax
 806eb62:	0f b6 c0             	movzbl %al,%eax
 806eb65:	8b 95 10 fe ff ff    	mov    -0x1f0(%ebp),%edx
 806eb6b:	89 95 24 fe ff ff    	mov    %edx,-0x1dc(%ebp)
 806eb71:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 806eb77:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806eb7d:	8b 50 04             	mov    0x4(%eax),%edx
 806eb80:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806eb86:	01 c2                	add    %eax,%edx
 806eb88:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806eb8e:	89 50 04             	mov    %edx,0x4(%eax)
 806eb91:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806eb97:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806eb9b:	0f b7 c0             	movzwl %ax,%eax
 806eb9e:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806eba4:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806ebaa:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 806ebb0:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806ebb6:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 806ebbc:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806ebc2:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 806ebc8:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806ebce:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 806ebd4:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806ebda:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 806ebe0:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806ebe6:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 806ebec:	c7 85 44 fe ff ff 10 	movl   $0x10,-0x1bc(%ebp)
 806ebf3:	00 00 00 
 806ebf6:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ebfc:	8b 40 04             	mov    0x4(%eax),%eax
 806ebff:	83 f8 0f             	cmp    $0xf,%eax
 806ec02:	0f 86 86 00 00 00    	jbe    806ec8e <SafeDecodeCommandBlockSwitch+0x3e4>
 806ec08:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec0e:	8b 00                	mov    (%eax),%eax
 806ec10:	c1 e8 10             	shr    $0x10,%eax
 806ec13:	89 c2                	mov    %eax,%edx
 806ec15:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec1b:	89 10                	mov    %edx,(%eax)
 806ec1d:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec23:	8b 40 04             	mov    0x4(%eax),%eax
 806ec26:	83 f0 10             	xor    $0x10,%eax
 806ec29:	89 c2                	mov    %eax,%edx
 806ec2b:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec31:	89 50 04             	mov    %edx,0x4(%eax)
 806ec34:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec3a:	8b 10                	mov    (%eax),%edx
 806ec3c:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec42:	8b 40 08             	mov    0x8(%eax),%eax
 806ec45:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 806ec4b:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 806ec51:	0f b7 00             	movzwl (%eax),%eax
 806ec54:	0f b7 c0             	movzwl %ax,%eax
 806ec57:	c1 e0 10             	shl    $0x10,%eax
 806ec5a:	09 c2                	or     %eax,%edx
 806ec5c:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec62:	89 10                	mov    %edx,(%eax)
 806ec64:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec6a:	8b 40 0c             	mov    0xc(%eax),%eax
 806ec6d:	8d 50 fe             	lea    -0x2(%eax),%edx
 806ec70:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec76:	89 50 0c             	mov    %edx,0xc(%eax)
 806ec79:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec7f:	8b 40 08             	mov    0x8(%eax),%eax
 806ec82:	8d 50 02             	lea    0x2(%eax),%edx
 806ec85:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806ec8b:	89 50 08             	mov    %edx,0x8(%eax)
 806ec8e:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806ec94:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 806ec9a:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806eca0:	8b 10                	mov    (%eax),%edx
 806eca2:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806eca8:	8b 40 04             	mov    0x4(%eax),%eax
 806ecab:	89 c1                	mov    %eax,%ecx
 806ecad:	d3 ea                	shr    %cl,%edx
 806ecaf:	89 d0                	mov    %edx,%eax
 806ecb1:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 806ecb7:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 806ecbd:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 806ecc3:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806ecc9:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%ebp)
 806eccf:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806ecd5:	0f b6 c0             	movzbl %al,%eax
 806ecd8:	c1 e0 02             	shl    $0x2,%eax
 806ecdb:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 806ece1:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ece7:	0f b6 00             	movzbl (%eax),%eax
 806ecea:	3c 08                	cmp    $0x8,%al
 806ecec:	0f 86 83 00 00 00    	jbe    806ed75 <SafeDecodeCommandBlockSwitch+0x4cb>
 806ecf2:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ecf8:	0f b6 00             	movzbl (%eax),%eax
 806ecfb:	0f b6 c0             	movzbl %al,%eax
 806ecfe:	83 e8 08             	sub    $0x8,%eax
 806ed01:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 806ed07:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 806ed0d:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 806ed13:	c7 85 64 fe ff ff 08 	movl   $0x8,-0x19c(%ebp)
 806ed1a:	00 00 00 
 806ed1d:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806ed23:	8b 50 04             	mov    0x4(%eax),%edx
 806ed26:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806ed2c:	01 c2                	add    %eax,%edx
 806ed2e:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806ed34:	89 50 04             	mov    %edx,0x4(%eax)
 806ed37:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ed3d:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806ed41:	0f b7 d0             	movzwl %ax,%edx
 806ed44:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806ed4a:	c1 e8 08             	shr    $0x8,%eax
 806ed4d:	89 c1                	mov    %eax,%ecx
 806ed4f:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806ed55:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 806ed5b:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 806ed61:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ed68:	21 c8                	and    %ecx,%eax
 806ed6a:	01 d0                	add    %edx,%eax
 806ed6c:	c1 e0 02             	shl    $0x2,%eax
 806ed6f:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 806ed75:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ed7b:	0f b6 00             	movzbl (%eax),%eax
 806ed7e:	0f b6 c0             	movzbl %al,%eax
 806ed81:	8b 95 58 fe ff ff    	mov    -0x1a8(%ebp),%edx
 806ed87:	89 95 6c fe ff ff    	mov    %edx,-0x194(%ebp)
 806ed8d:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 806ed93:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806ed99:	8b 50 04             	mov    0x4(%eax),%edx
 806ed9c:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806eda2:	01 c2                	add    %eax,%edx
 806eda4:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806edaa:	89 50 04             	mov    %edx,0x4(%eax)
 806edad:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806edb3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806edb7:	0f b7 c0             	movzwl %ax,%eax
 806edba:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 806edc0:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806edc6:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806edcd:	ff 
 806edce:	0f b6 c0             	movzbl %al,%eax
 806edd1:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 806edd7:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806eddd:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806ede4:	ff 
 806ede5:	0f b7 d0             	movzwl %ax,%edx
 806ede8:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806edee:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 806edf4:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 806edfa:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 806ee00:	83 bd 80 fe ff ff 10 	cmpl   $0x10,-0x180(%ebp)
 806ee07:	0f 87 53 01 00 00    	ja     806ef60 <SafeDecodeCommandBlockSwitch+0x6b6>
 806ee0d:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806ee13:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 806ee19:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806ee1f:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 806ee25:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee2b:	8b 40 04             	mov    0x4(%eax),%eax
 806ee2e:	83 f8 0f             	cmp    $0xf,%eax
 806ee31:	0f 86 86 00 00 00    	jbe    806eebd <SafeDecodeCommandBlockSwitch+0x613>
 806ee37:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee3d:	8b 00                	mov    (%eax),%eax
 806ee3f:	c1 e8 10             	shr    $0x10,%eax
 806ee42:	89 c1                	mov    %eax,%ecx
 806ee44:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee4a:	89 08                	mov    %ecx,(%eax)
 806ee4c:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee52:	8b 40 04             	mov    0x4(%eax),%eax
 806ee55:	83 f0 10             	xor    $0x10,%eax
 806ee58:	89 c1                	mov    %eax,%ecx
 806ee5a:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee60:	89 48 04             	mov    %ecx,0x4(%eax)
 806ee63:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee69:	8b 08                	mov    (%eax),%ecx
 806ee6b:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee71:	8b 40 08             	mov    0x8(%eax),%eax
 806ee74:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 806ee7a:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 806ee80:	0f b7 00             	movzwl (%eax),%eax
 806ee83:	0f b7 c0             	movzwl %ax,%eax
 806ee86:	c1 e0 10             	shl    $0x10,%eax
 806ee89:	09 c1                	or     %eax,%ecx
 806ee8b:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee91:	89 08                	mov    %ecx,(%eax)
 806ee93:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806ee99:	8b 40 0c             	mov    0xc(%eax),%eax
 806ee9c:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806ee9f:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806eea5:	89 48 0c             	mov    %ecx,0xc(%eax)
 806eea8:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806eeae:	8b 40 08             	mov    0x8(%eax),%eax
 806eeb1:	8d 48 02             	lea    0x2(%eax),%ecx
 806eeb4:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 806eeba:	89 48 08             	mov    %ecx,0x8(%eax)
 806eebd:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806eec3:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 806eec9:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806eecf:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 806eed5:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806eed8:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 806eede:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 806eee4:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 806eeea:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806eef0:	8b 30                	mov    (%eax),%esi
 806eef2:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 806eef8:	8b 40 04             	mov    0x4(%eax),%eax
 806eefb:	89 c1                	mov    %eax,%ecx
 806eefd:	d3 ee                	shr    %cl,%esi
 806eeff:	89 f0                	mov    %esi,%eax
 806ef01:	89 c1                	mov    %eax,%ecx
 806ef03:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806ef09:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 806ef0f:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 806ef15:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ef1c:	21 c1                	and    %eax,%ecx
 806ef1e:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 806ef24:	89 08                	mov    %ecx,(%eax)
 806ef26:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 806ef2c:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 806ef32:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 806ef38:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 806ef3e:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 806ef44:	8b 48 04             	mov    0x4(%eax),%ecx
 806ef47:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 806ef4d:	01 c1                	add    %eax,%ecx
 806ef4f:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 806ef55:	89 48 04             	mov    %ecx,0x4(%eax)
 806ef58:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806ef5b:	e9 a6 02 00 00       	jmp    806f206 <SafeDecodeCommandBlockSwitch+0x95c>
 806ef60:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806ef66:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 806ef6c:	c7 85 b0 fe ff ff 10 	movl   $0x10,-0x150(%ebp)
 806ef73:	00 00 00 
 806ef76:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806ef7c:	8b 40 04             	mov    0x4(%eax),%eax
 806ef7f:	83 f8 0f             	cmp    $0xf,%eax
 806ef82:	0f 86 86 00 00 00    	jbe    806f00e <SafeDecodeCommandBlockSwitch+0x764>
 806ef88:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806ef8e:	8b 00                	mov    (%eax),%eax
 806ef90:	c1 e8 10             	shr    $0x10,%eax
 806ef93:	89 c1                	mov    %eax,%ecx
 806ef95:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806ef9b:	89 08                	mov    %ecx,(%eax)
 806ef9d:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efa3:	8b 40 04             	mov    0x4(%eax),%eax
 806efa6:	83 f0 10             	xor    $0x10,%eax
 806efa9:	89 c1                	mov    %eax,%ecx
 806efab:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efb1:	89 48 04             	mov    %ecx,0x4(%eax)
 806efb4:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efba:	8b 08                	mov    (%eax),%ecx
 806efbc:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efc2:	8b 40 08             	mov    0x8(%eax),%eax
 806efc5:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 806efcb:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 806efd1:	0f b7 00             	movzwl (%eax),%eax
 806efd4:	0f b7 c0             	movzwl %ax,%eax
 806efd7:	c1 e0 10             	shl    $0x10,%eax
 806efda:	09 c1                	or     %eax,%ecx
 806efdc:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efe2:	89 08                	mov    %ecx,(%eax)
 806efe4:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efea:	8b 40 0c             	mov    0xc(%eax),%eax
 806efed:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806eff0:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806eff6:	89 48 0c             	mov    %ecx,0xc(%eax)
 806eff9:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806efff:	8b 40 08             	mov    0x8(%eax),%eax
 806f002:	8d 48 02             	lea    0x2(%eax),%ecx
 806f005:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 806f00b:	89 48 08             	mov    %ecx,0x8(%eax)
 806f00e:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806f014:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 806f01a:	c7 85 bc fe ff ff 10 	movl   $0x10,-0x144(%ebp)
 806f021:	00 00 00 
 806f024:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806f02a:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 806f030:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 806f036:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 806f03c:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806f042:	8b 30                	mov    (%eax),%esi
 806f044:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 806f04a:	8b 40 04             	mov    0x4(%eax),%eax
 806f04d:	89 c1                	mov    %eax,%ecx
 806f04f:	d3 ee                	shr    %cl,%esi
 806f051:	89 f0                	mov    %esi,%eax
 806f053:	89 c1                	mov    %eax,%ecx
 806f055:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806f05b:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 806f061:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 806f067:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f06e:	21 c1                	and    %eax,%ecx
 806f070:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 806f076:	89 08                	mov    %ecx,(%eax)
 806f078:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 806f07e:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 806f084:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 806f08a:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 806f090:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 806f096:	8b 48 04             	mov    0x4(%eax),%ecx
 806f099:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 806f09f:	01 c1                	add    %eax,%ecx
 806f0a1:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 806f0a7:	89 48 04             	mov    %ecx,0x4(%eax)
 806f0aa:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806f0b0:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 806f0b6:	c7 85 d8 fe ff ff 08 	movl   $0x8,-0x128(%ebp)
 806f0bd:	00 00 00 
 806f0c0:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f0c6:	8b 40 04             	mov    0x4(%eax),%eax
 806f0c9:	83 f8 0f             	cmp    $0xf,%eax
 806f0cc:	0f 86 86 00 00 00    	jbe    806f158 <SafeDecodeCommandBlockSwitch+0x8ae>
 806f0d2:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f0d8:	8b 00                	mov    (%eax),%eax
 806f0da:	c1 e8 10             	shr    $0x10,%eax
 806f0dd:	89 c1                	mov    %eax,%ecx
 806f0df:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f0e5:	89 08                	mov    %ecx,(%eax)
 806f0e7:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f0ed:	8b 40 04             	mov    0x4(%eax),%eax
 806f0f0:	83 f0 10             	xor    $0x10,%eax
 806f0f3:	89 c1                	mov    %eax,%ecx
 806f0f5:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f0fb:	89 48 04             	mov    %ecx,0x4(%eax)
 806f0fe:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f104:	8b 08                	mov    (%eax),%ecx
 806f106:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f10c:	8b 40 08             	mov    0x8(%eax),%eax
 806f10f:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 806f115:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 806f11b:	0f b7 00             	movzwl (%eax),%eax
 806f11e:	0f b7 c0             	movzwl %ax,%eax
 806f121:	c1 e0 10             	shl    $0x10,%eax
 806f124:	09 c1                	or     %eax,%ecx
 806f126:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f12c:	89 08                	mov    %ecx,(%eax)
 806f12e:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f134:	8b 40 0c             	mov    0xc(%eax),%eax
 806f137:	8d 48 fe             	lea    -0x2(%eax),%ecx
 806f13a:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f140:	89 48 0c             	mov    %ecx,0xc(%eax)
 806f143:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f149:	8b 40 08             	mov    0x8(%eax),%eax
 806f14c:	8d 48 02             	lea    0x2(%eax),%ecx
 806f14f:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 806f155:	89 48 08             	mov    %ecx,0x8(%eax)
 806f158:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 806f15e:	8d 48 f0             	lea    -0x10(%eax),%ecx
 806f161:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 806f167:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 806f16d:	89 8d e4 fe ff ff    	mov    %ecx,-0x11c(%ebp)
 806f173:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806f176:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 806f17c:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 806f182:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 806f188:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806f18e:	8b 30                	mov    (%eax),%esi
 806f190:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 806f196:	8b 40 04             	mov    0x4(%eax),%eax
 806f199:	89 c1                	mov    %eax,%ecx
 806f19b:	d3 ee                	shr    %cl,%esi
 806f19d:	89 f0                	mov    %esi,%eax
 806f19f:	89 c1                	mov    %eax,%ecx
 806f1a1:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806f1a7:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 806f1ad:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 806f1b3:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f1ba:	21 c1                	and    %eax,%ecx
 806f1bc:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 806f1c2:	89 08                	mov    %ecx,(%eax)
 806f1c4:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 806f1ca:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 806f1d0:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 806f1d6:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 806f1dc:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806f1e2:	8b 48 04             	mov    0x4(%eax),%ecx
 806f1e5:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 806f1eb:	01 c1                	add    %eax,%ecx
 806f1ed:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 806f1f3:	89 48 04             	mov    %ecx,0x4(%eax)
 806f1f6:	8b 45 e8             	mov    -0x18(%ebp),%eax
 806f1f9:	c1 e0 10             	shl    $0x10,%eax
 806f1fc:	89 c1                	mov    %eax,%ecx
 806f1fe:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806f204:	09 c8                	or     %ecx,%eax
 806f206:	01 d0                	add    %edx,%eax
 806f208:	89 c2                	mov    %eax,%edx
 806f20a:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806f210:	8b 8d d4 fd ff ff    	mov    -0x22c(%ebp),%ecx
 806f216:	83 c1 2c             	add    $0x2c,%ecx
 806f219:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 806f21d:	e9 e5 07 00 00       	jmp    806fa07 <SafeDecodeCommandBlockSwitch+0x115d>
 806f222:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806f228:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 806f22e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806f231:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 806f237:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806f23d:	8b 10                	mov    (%eax),%edx
 806f23f:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806f245:	89 10                	mov    %edx,(%eax)
 806f247:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806f24d:	8b 50 04             	mov    0x4(%eax),%edx
 806f250:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806f256:	89 50 04             	mov    %edx,0x4(%eax)
 806f259:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806f25f:	8b 50 08             	mov    0x8(%eax),%edx
 806f262:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806f268:	89 50 08             	mov    %edx,0x8(%eax)
 806f26b:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 806f271:	8b 50 0c             	mov    0xc(%eax),%edx
 806f274:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 806f27a:	89 50 0c             	mov    %edx,0xc(%eax)
 806f27d:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806f283:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 806f289:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806f28f:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 806f295:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 806f29b:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 806f2a1:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806f2a7:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 806f2ad:	c7 85 14 ff ff ff 0f 	movl   $0xf,-0xec(%ebp)
 806f2b4:	00 00 00 
 806f2b7:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806f2bd:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 806f2c3:	e9 a8 00 00 00       	jmp    806f370 <SafeDecodeCommandBlockSwitch+0xac6>
 806f2c8:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806f2ce:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 806f2d4:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f2da:	8b 40 0c             	mov    0xc(%eax),%eax
 806f2dd:	85 c0                	test   %eax,%eax
 806f2df:	75 07                	jne    806f2e8 <SafeDecodeCommandBlockSwitch+0xa3e>
 806f2e1:	b8 00 00 00 00       	mov    $0x0,%eax
 806f2e6:	eb 7d                	jmp    806f365 <SafeDecodeCommandBlockSwitch+0xabb>
 806f2e8:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f2ee:	8b 00                	mov    (%eax),%eax
 806f2f0:	c1 e8 08             	shr    $0x8,%eax
 806f2f3:	89 c2                	mov    %eax,%edx
 806f2f5:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f2fb:	89 10                	mov    %edx,(%eax)
 806f2fd:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f303:	8b 10                	mov    (%eax),%edx
 806f305:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f30b:	8b 40 08             	mov    0x8(%eax),%eax
 806f30e:	0f b6 00             	movzbl (%eax),%eax
 806f311:	0f b6 c0             	movzbl %al,%eax
 806f314:	c1 e0 18             	shl    $0x18,%eax
 806f317:	09 c2                	or     %eax,%edx
 806f319:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f31f:	89 10                	mov    %edx,(%eax)
 806f321:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f327:	8b 40 04             	mov    0x4(%eax),%eax
 806f32a:	8d 50 f8             	lea    -0x8(%eax),%edx
 806f32d:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f333:	89 50 04             	mov    %edx,0x4(%eax)
 806f336:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f33c:	8b 40 0c             	mov    0xc(%eax),%eax
 806f33f:	8d 50 ff             	lea    -0x1(%eax),%edx
 806f342:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f348:	89 50 0c             	mov    %edx,0xc(%eax)
 806f34b:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f351:	8b 40 08             	mov    0x8(%eax),%eax
 806f354:	8d 50 01             	lea    0x1(%eax),%edx
 806f357:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 806f35d:	89 50 08             	mov    %edx,0x8(%eax)
 806f360:	b8 01 00 00 00       	mov    $0x1,%eax
 806f365:	85 c0                	test   %eax,%eax
 806f367:	75 07                	jne    806f370 <SafeDecodeCommandBlockSwitch+0xac6>
 806f369:	b8 00 00 00 00       	mov    $0x0,%eax
 806f36e:	eb 77                	jmp    806f3e7 <SafeDecodeCommandBlockSwitch+0xb3d>
 806f370:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806f376:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 806f37c:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 806f382:	8b 40 04             	mov    0x4(%eax),%eax
 806f385:	ba 20 00 00 00       	mov    $0x20,%edx
 806f38a:	29 c2                	sub    %eax,%edx
 806f38c:	89 d0                	mov    %edx,%eax
 806f38e:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%ebp)
 806f394:	0f 87 2e ff ff ff    	ja     806f2c8 <SafeDecodeCommandBlockSwitch+0xa1e>
 806f39a:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 806f3a0:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 806f3a6:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806f3ac:	8b 10                	mov    (%eax),%edx
 806f3ae:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 806f3b4:	8b 40 04             	mov    0x4(%eax),%eax
 806f3b7:	89 c1                	mov    %eax,%ecx
 806f3b9:	d3 ea                	shr    %cl,%edx
 806f3bb:	89 d0                	mov    %edx,%eax
 806f3bd:	89 c2                	mov    %eax,%edx
 806f3bf:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 806f3c5:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 806f3cb:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 806f3d1:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f3d8:	21 c2                	and    %eax,%edx
 806f3da:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 806f3e0:	89 10                	mov    %edx,(%eax)
 806f3e2:	b8 01 00 00 00       	mov    $0x1,%eax
 806f3e7:	85 c0                	test   %eax,%eax
 806f3e9:	0f 95 c0             	setne  %al
 806f3ec:	0f b6 c0             	movzbl %al,%eax
 806f3ef:	85 c0                	test   %eax,%eax
 806f3f1:	0f 84 20 01 00 00    	je     806f517 <SafeDecodeCommandBlockSwitch+0xc6d>
 806f3f7:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806f3fd:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 806f403:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 806f409:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 806f40f:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806f415:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 806f41b:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806f421:	0f b6 c0             	movzbl %al,%eax
 806f424:	c1 e0 02             	shl    $0x2,%eax
 806f427:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 806f42d:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806f433:	0f b6 00             	movzbl (%eax),%eax
 806f436:	3c 08                	cmp    $0x8,%al
 806f438:	0f 86 83 00 00 00    	jbe    806f4c1 <SafeDecodeCommandBlockSwitch+0xc17>
 806f43e:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806f444:	0f b6 00             	movzbl (%eax),%eax
 806f447:	0f b6 c0             	movzbl %al,%eax
 806f44a:	83 e8 08             	sub    $0x8,%eax
 806f44d:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 806f453:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 806f459:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 806f45f:	c7 85 40 ff ff ff 08 	movl   $0x8,-0xc0(%ebp)
 806f466:	00 00 00 
 806f469:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806f46f:	8b 50 04             	mov    0x4(%eax),%edx
 806f472:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 806f478:	01 c2                	add    %eax,%edx
 806f47a:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 806f480:	89 50 04             	mov    %edx,0x4(%eax)
 806f483:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806f489:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806f48d:	0f b7 d0             	movzwl %ax,%edx
 806f490:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 806f496:	c1 e8 08             	shr    $0x8,%eax
 806f499:	89 c1                	mov    %eax,%ecx
 806f49b:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 806f4a1:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 806f4a7:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 806f4ad:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f4b4:	21 c8                	and    %ecx,%eax
 806f4b6:	01 d0                	add    %edx,%eax
 806f4b8:	c1 e0 02             	shl    $0x2,%eax
 806f4bb:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 806f4c1:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806f4c7:	0f b6 00             	movzbl (%eax),%eax
 806f4ca:	0f b6 c0             	movzbl %al,%eax
 806f4cd:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 806f4d3:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
 806f4d9:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 806f4df:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806f4e5:	8b 50 04             	mov    0x4(%eax),%edx
 806f4e8:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 806f4ee:	01 c2                	add    %eax,%edx
 806f4f0:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 806f4f6:	89 50 04             	mov    %edx,0x4(%eax)
 806f4f9:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 806f4ff:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806f503:	0f b7 c0             	movzwl %ax,%eax
 806f506:	89 c2                	mov    %eax,%edx
 806f508:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806f50e:	89 10                	mov    %edx,(%eax)
 806f510:	b8 01 00 00 00       	mov    $0x1,%eax
 806f515:	eb 22                	jmp    806f539 <SafeDecodeCommandBlockSwitch+0xc8f>
 806f517:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 806f51d:	89 44 24 08          	mov    %eax,0x8(%esp)
 806f521:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 806f527:	89 44 24 04          	mov    %eax,0x4(%esp)
 806f52b:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 806f531:	89 04 24             	mov    %eax,(%esp)
 806f534:	e8 93 94 ff ff       	call   80689cc <SafeDecodeSymbol>
 806f539:	85 c0                	test   %eax,%eax
 806f53b:	75 0a                	jne    806f547 <SafeDecodeCommandBlockSwitch+0xc9d>
 806f53d:	b8 00 00 00 00       	mov    $0x0,%eax
 806f542:	e9 51 05 00 00       	jmp    806fa98 <SafeDecodeCommandBlockSwitch+0x11ee>
 806f547:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806f54d:	83 c0 2c             	add    $0x2c,%eax
 806f550:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806f557:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806f55d:	01 d0                	add    %edx,%eax
 806f55f:	8d 50 0c             	lea    0xc(%eax),%edx
 806f562:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806f568:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 806f56e:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
 806f574:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806f57a:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 806f580:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806f586:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 806f58c:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806f592:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 806f598:	85 c0                	test   %eax,%eax
 806f59a:	0f 85 63 02 00 00    	jne    806f803 <SafeDecodeCommandBlockSwitch+0xf59>
 806f5a0:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 806f5a6:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 806f5ac:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806f5b2:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 806f5b8:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax
 806f5be:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 806f5c4:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806f5ca:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 806f5d0:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%ebp)
 806f5d7:	00 00 00 
 806f5da:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806f5e0:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 806f5e6:	e9 a8 00 00 00       	jmp    806f693 <SafeDecodeCommandBlockSwitch+0xde9>
 806f5eb:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806f5f1:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 806f5f7:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f5fd:	8b 40 0c             	mov    0xc(%eax),%eax
 806f600:	85 c0                	test   %eax,%eax
 806f602:	75 07                	jne    806f60b <SafeDecodeCommandBlockSwitch+0xd61>
 806f604:	b8 00 00 00 00       	mov    $0x0,%eax
 806f609:	eb 7d                	jmp    806f688 <SafeDecodeCommandBlockSwitch+0xdde>
 806f60b:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f611:	8b 00                	mov    (%eax),%eax
 806f613:	c1 e8 08             	shr    $0x8,%eax
 806f616:	89 c2                	mov    %eax,%edx
 806f618:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f61e:	89 10                	mov    %edx,(%eax)
 806f620:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f626:	8b 10                	mov    (%eax),%edx
 806f628:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f62e:	8b 40 08             	mov    0x8(%eax),%eax
 806f631:	0f b6 00             	movzbl (%eax),%eax
 806f634:	0f b6 c0             	movzbl %al,%eax
 806f637:	c1 e0 18             	shl    $0x18,%eax
 806f63a:	09 c2                	or     %eax,%edx
 806f63c:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f642:	89 10                	mov    %edx,(%eax)
 806f644:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f64a:	8b 40 04             	mov    0x4(%eax),%eax
 806f64d:	8d 50 f8             	lea    -0x8(%eax),%edx
 806f650:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f656:	89 50 04             	mov    %edx,0x4(%eax)
 806f659:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f65f:	8b 40 0c             	mov    0xc(%eax),%eax
 806f662:	8d 50 ff             	lea    -0x1(%eax),%edx
 806f665:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f66b:	89 50 0c             	mov    %edx,0xc(%eax)
 806f66e:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f674:	8b 40 08             	mov    0x8(%eax),%eax
 806f677:	8d 50 01             	lea    0x1(%eax),%edx
 806f67a:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 806f680:	89 50 08             	mov    %edx,0x8(%eax)
 806f683:	b8 01 00 00 00       	mov    $0x1,%eax
 806f688:	85 c0                	test   %eax,%eax
 806f68a:	75 07                	jne    806f693 <SafeDecodeCommandBlockSwitch+0xde9>
 806f68c:	b8 00 00 00 00       	mov    $0x0,%eax
 806f691:	eb 68                	jmp    806f6fb <SafeDecodeCommandBlockSwitch+0xe51>
 806f693:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806f699:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 806f69f:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 806f6a5:	8b 40 04             	mov    0x4(%eax),%eax
 806f6a8:	ba 20 00 00 00       	mov    $0x20,%edx
 806f6ad:	29 c2                	sub    %eax,%edx
 806f6af:	89 d0                	mov    %edx,%eax
 806f6b1:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%ebp)
 806f6b7:	0f 87 2e ff ff ff    	ja     806f5eb <SafeDecodeCommandBlockSwitch+0xd41>
 806f6bd:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 806f6c3:	89 45 80             	mov    %eax,-0x80(%ebp)
 806f6c6:	8b 45 80             	mov    -0x80(%ebp),%eax
 806f6c9:	8b 10                	mov    (%eax),%edx
 806f6cb:	8b 45 80             	mov    -0x80(%ebp),%eax
 806f6ce:	8b 40 04             	mov    0x4(%eax),%eax
 806f6d1:	89 c1                	mov    %eax,%ecx
 806f6d3:	d3 ea                	shr    %cl,%edx
 806f6d5:	89 d0                	mov    %edx,%eax
 806f6d7:	89 c2                	mov    %eax,%edx
 806f6d9:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 806f6df:	89 45 84             	mov    %eax,-0x7c(%ebp)
 806f6e2:	8b 45 84             	mov    -0x7c(%ebp),%eax
 806f6e5:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f6ec:	21 c2                	and    %eax,%edx
 806f6ee:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 806f6f4:	89 10                	mov    %edx,(%eax)
 806f6f6:	b8 01 00 00 00       	mov    $0x1,%eax
 806f6fb:	85 c0                	test   %eax,%eax
 806f6fd:	0f 95 c0             	setne  %al
 806f700:	0f b6 c0             	movzbl %al,%eax
 806f703:	85 c0                	test   %eax,%eax
 806f705:	0f 84 c8 00 00 00    	je     806f7d3 <SafeDecodeCommandBlockSwitch+0xf29>
 806f70b:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806f711:	89 45 88             	mov    %eax,-0x78(%ebp)
 806f714:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806f71a:	89 45 8c             	mov    %eax,-0x74(%ebp)
 806f71d:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806f723:	89 45 90             	mov    %eax,-0x70(%ebp)
 806f726:	8b 45 88             	mov    -0x78(%ebp),%eax
 806f729:	0f b6 c0             	movzbl %al,%eax
 806f72c:	c1 e0 02             	shl    $0x2,%eax
 806f72f:	01 45 8c             	add    %eax,-0x74(%ebp)
 806f732:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806f735:	0f b6 00             	movzbl (%eax),%eax
 806f738:	3c 08                	cmp    $0x8,%al
 806f73a:	76 59                	jbe    806f795 <SafeDecodeCommandBlockSwitch+0xeeb>
 806f73c:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806f73f:	0f b6 00             	movzbl (%eax),%eax
 806f742:	0f b6 c0             	movzbl %al,%eax
 806f745:	83 e8 08             	sub    $0x8,%eax
 806f748:	89 45 94             	mov    %eax,-0x6c(%ebp)
 806f74b:	8b 45 90             	mov    -0x70(%ebp),%eax
 806f74e:	89 45 98             	mov    %eax,-0x68(%ebp)
 806f751:	c7 45 9c 08 00 00 00 	movl   $0x8,-0x64(%ebp)
 806f758:	8b 45 98             	mov    -0x68(%ebp),%eax
 806f75b:	8b 50 04             	mov    0x4(%eax),%edx
 806f75e:	8b 45 9c             	mov    -0x64(%ebp),%eax
 806f761:	01 c2                	add    %eax,%edx
 806f763:	8b 45 98             	mov    -0x68(%ebp),%eax
 806f766:	89 50 04             	mov    %edx,0x4(%eax)
 806f769:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806f76c:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806f770:	0f b7 d0             	movzwl %ax,%edx
 806f773:	8b 45 88             	mov    -0x78(%ebp),%eax
 806f776:	c1 e8 08             	shr    $0x8,%eax
 806f779:	89 c1                	mov    %eax,%ecx
 806f77b:	8b 45 94             	mov    -0x6c(%ebp),%eax
 806f77e:	89 45 a0             	mov    %eax,-0x60(%ebp)
 806f781:	8b 45 a0             	mov    -0x60(%ebp),%eax
 806f784:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f78b:	21 c8                	and    %ecx,%eax
 806f78d:	01 d0                	add    %edx,%eax
 806f78f:	c1 e0 02             	shl    $0x2,%eax
 806f792:	01 45 8c             	add    %eax,-0x74(%ebp)
 806f795:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806f798:	0f b6 00             	movzbl (%eax),%eax
 806f79b:	0f b6 c0             	movzbl %al,%eax
 806f79e:	8b 55 90             	mov    -0x70(%ebp),%edx
 806f7a1:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 806f7a4:	89 45 a8             	mov    %eax,-0x58(%ebp)
 806f7a7:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806f7aa:	8b 50 04             	mov    0x4(%eax),%edx
 806f7ad:	8b 45 a8             	mov    -0x58(%ebp),%eax
 806f7b0:	01 c2                	add    %eax,%edx
 806f7b2:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 806f7b5:	89 50 04             	mov    %edx,0x4(%eax)
 806f7b8:	8b 45 8c             	mov    -0x74(%ebp),%eax
 806f7bb:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806f7bf:	0f b7 c0             	movzwl %ax,%eax
 806f7c2:	89 c2                	mov    %eax,%edx
 806f7c4:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806f7ca:	89 10                	mov    %edx,(%eax)
 806f7cc:	b8 01 00 00 00       	mov    $0x1,%eax
 806f7d1:	eb 22                	jmp    806f7f5 <SafeDecodeCommandBlockSwitch+0xf4b>
 806f7d3:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 806f7d9:	89 44 24 08          	mov    %eax,0x8(%esp)
 806f7dd:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 806f7e3:	89 44 24 04          	mov    %eax,0x4(%esp)
 806f7e7:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 806f7ed:	89 04 24             	mov    %eax,(%esp)
 806f7f0:	e8 d7 91 ff ff       	call   80689cc <SafeDecodeSymbol>
 806f7f5:	85 c0                	test   %eax,%eax
 806f7f7:	75 1c                	jne    806f815 <SafeDecodeCommandBlockSwitch+0xf6b>
 806f7f9:	b8 00 00 00 00       	mov    $0x0,%eax
 806f7fe:	e9 a9 01 00 00       	jmp    806f9ac <SafeDecodeCommandBlockSwitch+0x1102>
 806f803:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806f809:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 806f80f:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 806f815:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 806f81b:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806f822:	ff 
 806f823:	0f b6 c0             	movzbl %al,%eax
 806f826:	89 45 ac             	mov    %eax,-0x54(%ebp)
 806f829:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 806f82f:	89 45 b0             	mov    %eax,-0x50(%ebp)
 806f832:	8b 45 ac             	mov    -0x54(%ebp),%eax
 806f835:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 806f838:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 806f83e:	89 45 b8             	mov    %eax,-0x48(%ebp)
 806f841:	e9 81 00 00 00       	jmp    806f8c7 <SafeDecodeCommandBlockSwitch+0x101d>
 806f846:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806f849:	89 45 bc             	mov    %eax,-0x44(%ebp)
 806f84c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f84f:	8b 40 0c             	mov    0xc(%eax),%eax
 806f852:	85 c0                	test   %eax,%eax
 806f854:	75 07                	jne    806f85d <SafeDecodeCommandBlockSwitch+0xfb3>
 806f856:	b8 00 00 00 00       	mov    $0x0,%eax
 806f85b:	eb 5c                	jmp    806f8b9 <SafeDecodeCommandBlockSwitch+0x100f>
 806f85d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f860:	8b 00                	mov    (%eax),%eax
 806f862:	c1 e8 08             	shr    $0x8,%eax
 806f865:	89 c2                	mov    %eax,%edx
 806f867:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f86a:	89 10                	mov    %edx,(%eax)
 806f86c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f86f:	8b 10                	mov    (%eax),%edx
 806f871:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f874:	8b 40 08             	mov    0x8(%eax),%eax
 806f877:	0f b6 00             	movzbl (%eax),%eax
 806f87a:	0f b6 c0             	movzbl %al,%eax
 806f87d:	c1 e0 18             	shl    $0x18,%eax
 806f880:	09 c2                	or     %eax,%edx
 806f882:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f885:	89 10                	mov    %edx,(%eax)
 806f887:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f88a:	8b 40 04             	mov    0x4(%eax),%eax
 806f88d:	8d 50 f8             	lea    -0x8(%eax),%edx
 806f890:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f893:	89 50 04             	mov    %edx,0x4(%eax)
 806f896:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f899:	8b 40 0c             	mov    0xc(%eax),%eax
 806f89c:	8d 50 ff             	lea    -0x1(%eax),%edx
 806f89f:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f8a2:	89 50 0c             	mov    %edx,0xc(%eax)
 806f8a5:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f8a8:	8b 40 08             	mov    0x8(%eax),%eax
 806f8ab:	8d 50 01             	lea    0x1(%eax),%edx
 806f8ae:	8b 45 bc             	mov    -0x44(%ebp),%eax
 806f8b1:	89 50 08             	mov    %edx,0x8(%eax)
 806f8b4:	b8 01 00 00 00       	mov    $0x1,%eax
 806f8b9:	85 c0                	test   %eax,%eax
 806f8bb:	75 0a                	jne    806f8c7 <SafeDecodeCommandBlockSwitch+0x101d>
 806f8bd:	b8 00 00 00 00       	mov    $0x0,%eax
 806f8c2:	e9 82 00 00 00       	jmp    806f949 <SafeDecodeCommandBlockSwitch+0x109f>
 806f8c7:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806f8ca:	89 45 c0             	mov    %eax,-0x40(%ebp)
 806f8cd:	8b 45 c0             	mov    -0x40(%ebp),%eax
 806f8d0:	8b 40 04             	mov    0x4(%eax),%eax
 806f8d3:	ba 20 00 00 00       	mov    $0x20,%edx
 806f8d8:	29 c2                	sub    %eax,%edx
 806f8da:	89 d0                	mov    %edx,%eax
 806f8dc:	39 45 b4             	cmp    %eax,-0x4c(%ebp)
 806f8df:	0f 87 61 ff ff ff    	ja     806f846 <SafeDecodeCommandBlockSwitch+0xf9c>
 806f8e5:	8b 45 b0             	mov    -0x50(%ebp),%eax
 806f8e8:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 806f8eb:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 806f8ee:	89 45 c8             	mov    %eax,-0x38(%ebp)
 806f8f1:	8b 45 b8             	mov    -0x48(%ebp),%eax
 806f8f4:	89 45 cc             	mov    %eax,-0x34(%ebp)
 806f8f7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806f8fa:	89 45 d0             	mov    %eax,-0x30(%ebp)
 806f8fd:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806f900:	8b 10                	mov    (%eax),%edx
 806f902:	8b 45 d0             	mov    -0x30(%ebp),%eax
 806f905:	8b 40 04             	mov    0x4(%eax),%eax
 806f908:	89 c1                	mov    %eax,%ecx
 806f90a:	d3 ea                	shr    %cl,%edx
 806f90c:	89 d0                	mov    %edx,%eax
 806f90e:	89 c2                	mov    %eax,%edx
 806f910:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806f913:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 806f916:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 806f919:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806f920:	21 c2                	and    %eax,%edx
 806f922:	8b 45 cc             	mov    -0x34(%ebp),%eax
 806f925:	89 10                	mov    %edx,(%eax)
 806f927:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 806f92a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 806f92d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 806f930:	89 45 dc             	mov    %eax,-0x24(%ebp)
 806f933:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806f936:	8b 50 04             	mov    0x4(%eax),%edx
 806f939:	8b 45 dc             	mov    -0x24(%ebp),%eax
 806f93c:	01 c2                	add    %eax,%edx
 806f93e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 806f941:	89 50 04             	mov    %edx,0x4(%eax)
 806f944:	b8 01 00 00 00       	mov    $0x1,%eax
 806f949:	85 c0                	test   %eax,%eax
 806f94b:	75 29                	jne    806f976 <SafeDecodeCommandBlockSwitch+0x10cc>
 806f94d:	8b 95 bc fd ff ff    	mov    -0x244(%ebp),%edx
 806f953:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806f959:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 806f95f:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806f965:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 806f96c:	00 00 00 
 806f96f:	b8 00 00 00 00       	mov    $0x0,%eax
 806f974:	eb 36                	jmp    806f9ac <SafeDecodeCommandBlockSwitch+0x1102>
 806f976:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 806f97c:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 806f983:	ff 
 806f984:	0f b7 d0             	movzwl %ax,%edx
 806f987:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 806f98d:	01 c2                	add    %eax,%edx
 806f98f:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 806f995:	89 10                	mov    %edx,(%eax)
 806f997:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 806f99d:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806f9a4:	00 00 00 
 806f9a7:	b8 01 00 00 00       	mov    $0x1,%eax
 806f9ac:	85 c0                	test   %eax,%eax
 806f9ae:	75 57                	jne    806fa07 <SafeDecodeCommandBlockSwitch+0x115d>
 806f9b0:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806f9b6:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 806f9bd:	00 00 00 
 806f9c0:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806f9c6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 806f9c9:	8d 45 e8             	lea    -0x18(%ebp),%eax
 806f9cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 806f9cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806f9d2:	8b 10                	mov    (%eax),%edx
 806f9d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806f9d7:	89 10                	mov    %edx,(%eax)
 806f9d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806f9dc:	8b 50 04             	mov    0x4(%eax),%edx
 806f9df:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806f9e2:	89 50 04             	mov    %edx,0x4(%eax)
 806f9e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806f9e8:	8b 50 08             	mov    0x8(%eax),%edx
 806f9eb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806f9ee:	89 50 08             	mov    %edx,0x8(%eax)
 806f9f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 806f9f4:	8b 50 0c             	mov    0xc(%eax),%edx
 806f9f7:	8b 45 e0             	mov    -0x20(%ebp),%eax
 806f9fa:	89 50 0c             	mov    %edx,0xc(%eax)
 806f9fd:	b8 00 00 00 00       	mov    $0x0,%eax
 806fa02:	e9 91 00 00 00       	jmp    806fa98 <SafeDecodeCommandBlockSwitch+0x11ee>
 806fa07:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806fa0d:	83 f8 01             	cmp    $0x1,%eax
 806fa10:	75 16                	jne    806fa28 <SafeDecodeCommandBlockSwitch+0x117e>
 806fa12:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806fa18:	83 c0 04             	add    $0x4,%eax
 806fa1b:	8b 00                	mov    (%eax),%eax
 806fa1d:	83 c0 01             	add    $0x1,%eax
 806fa20:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806fa26:	eb 29                	jmp    806fa51 <SafeDecodeCommandBlockSwitch+0x11a7>
 806fa28:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806fa2e:	85 c0                	test   %eax,%eax
 806fa30:	75 10                	jne    806fa42 <SafeDecodeCommandBlockSwitch+0x1198>
 806fa32:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806fa38:	8b 00                	mov    (%eax),%eax
 806fa3a:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806fa40:	eb 0f                	jmp    806fa51 <SafeDecodeCommandBlockSwitch+0x11a7>
 806fa42:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806fa48:	83 e8 02             	sub    $0x2,%eax
 806fa4b:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806fa51:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806fa57:	39 85 d8 fd ff ff    	cmp    %eax,-0x228(%ebp)
 806fa5d:	77 12                	ja     806fa71 <SafeDecodeCommandBlockSwitch+0x11c7>
 806fa5f:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806fa65:	2b 85 d8 fd ff ff    	sub    -0x228(%ebp),%eax
 806fa6b:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806fa71:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806fa77:	8b 50 04             	mov    0x4(%eax),%edx
 806fa7a:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806fa80:	89 10                	mov    %edx,(%eax)
 806fa82:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 806fa88:	8d 50 04             	lea    0x4(%eax),%edx
 806fa8b:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 806fa91:	89 02                	mov    %eax,(%edx)
 806fa93:	b8 01 00 00 00       	mov    $0x1,%eax
 806fa98:	85 c0                	test   %eax,%eax
 806fa9a:	75 07                	jne    806faa3 <SafeDecodeCommandBlockSwitch+0x11f9>
 806fa9c:	b8 00 00 00 00       	mov    $0x0,%eax
 806faa1:	eb 2d                	jmp    806fad0 <SafeDecodeCommandBlockSwitch+0x1226>
 806faa3:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806faa9:	8b 90 84 00 00 00    	mov    0x84(%eax),%edx
 806faaf:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806fab5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
 806fabb:	c1 e0 02             	shl    $0x2,%eax
 806fabe:	01 d0                	add    %edx,%eax
 806fac0:	8b 10                	mov    (%eax),%edx
 806fac2:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806fac8:	89 50 64             	mov    %edx,0x64(%eax)
 806facb:	b8 01 00 00 00       	mov    $0x1,%eax
 806fad0:	81 c4 4c 02 00 00    	add    $0x24c,%esp
 806fad6:	5b                   	pop    %ebx
 806fad7:	5e                   	pop    %esi
 806fad8:	5d                   	pop    %ebp
 806fad9:	c3                   	ret    

0806fada <DecodeDistanceBlockSwitch>:
 806fada:	55                   	push   %ebp
 806fadb:	89 e5                	mov    %esp,%ebp
 806fadd:	56                   	push   %esi
 806fade:	53                   	push   %ebx
 806fadf:	81 ec 4c 02 00 00    	sub    $0x24c,%esp
 806fae5:	e8 06 a0 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 806faea:	81 c3 16 05 04 00    	add    $0x40516,%ebx
 806faf0:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%ebp)
 806faf7:	00 00 00 
 806fafa:	8b 45 08             	mov    0x8(%ebp),%eax
 806fafd:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 806fb03:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 806fb09:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 806fb0f:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 806fb15:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 806fb1b:	c7 85 d4 fd ff ff 02 	movl   $0x2,-0x22c(%ebp)
 806fb22:	00 00 00 
 806fb25:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806fb2b:	8b 95 d4 fd ff ff    	mov    -0x22c(%ebp),%edx
 806fb31:	83 c2 30             	add    $0x30,%edx
 806fb34:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 806fb38:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 806fb3e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806fb44:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 806fb4a:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806fb50:	69 c0 e0 09 00 00    	imul   $0x9e0,%eax,%eax
 806fb56:	01 d0                	add    %edx,%eax
 806fb58:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 806fb5e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806fb64:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
 806fb6a:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806fb70:	69 c0 30 06 00 00    	imul   $0x630,%eax,%eax
 806fb76:	01 d0                	add    %edx,%eax
 806fb78:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 806fb7e:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806fb84:	83 c0 08             	add    $0x8,%eax
 806fb87:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 806fb8d:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 806fb93:	01 c0                	add    %eax,%eax
 806fb95:	83 c0 34             	add    $0x34,%eax
 806fb98:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 806fb9f:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 806fba5:	01 d0                	add    %edx,%eax
 806fba7:	83 c0 04             	add    $0x4,%eax
 806fbaa:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 806fbb0:	83 bd d8 fd ff ff 01 	cmpl   $0x1,-0x228(%ebp)
 806fbb7:	77 0a                	ja     806fbc3 <DecodeDistanceBlockSwitch+0xe9>
 806fbb9:	b8 00 00 00 00       	mov    $0x0,%eax
 806fbbe:	e9 05 11 00 00       	jmp    8070cc8 <DecodeDistanceBlockSwitch+0x11ee>
 806fbc3:	83 bd cc fd ff ff 00 	cmpl   $0x0,-0x234(%ebp)
 806fbca:	0f 85 82 08 00 00    	jne    8070452 <DecodeDistanceBlockSwitch+0x978>
 806fbd0:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 806fbd6:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 806fbdc:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806fbe2:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 806fbe8:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806fbee:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 806fbf4:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806fbfa:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 806fc00:	c7 85 fc fd ff ff 10 	movl   $0x10,-0x204(%ebp)
 806fc07:	00 00 00 
 806fc0a:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc10:	8b 40 04             	mov    0x4(%eax),%eax
 806fc13:	83 f8 0f             	cmp    $0xf,%eax
 806fc16:	0f 86 86 00 00 00    	jbe    806fca2 <DecodeDistanceBlockSwitch+0x1c8>
 806fc1c:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc22:	8b 00                	mov    (%eax),%eax
 806fc24:	c1 e8 10             	shr    $0x10,%eax
 806fc27:	89 c2                	mov    %eax,%edx
 806fc29:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc2f:	89 10                	mov    %edx,(%eax)
 806fc31:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc37:	8b 40 04             	mov    0x4(%eax),%eax
 806fc3a:	83 f0 10             	xor    $0x10,%eax
 806fc3d:	89 c2                	mov    %eax,%edx
 806fc3f:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc45:	89 50 04             	mov    %edx,0x4(%eax)
 806fc48:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc4e:	8b 10                	mov    (%eax),%edx
 806fc50:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc56:	8b 40 08             	mov    0x8(%eax),%eax
 806fc59:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 806fc5f:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 806fc65:	0f b7 00             	movzwl (%eax),%eax
 806fc68:	0f b7 c0             	movzwl %ax,%eax
 806fc6b:	c1 e0 10             	shl    $0x10,%eax
 806fc6e:	09 c2                	or     %eax,%edx
 806fc70:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc76:	89 10                	mov    %edx,(%eax)
 806fc78:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc7e:	8b 40 0c             	mov    0xc(%eax),%eax
 806fc81:	8d 50 fe             	lea    -0x2(%eax),%edx
 806fc84:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc8a:	89 50 0c             	mov    %edx,0xc(%eax)
 806fc8d:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc93:	8b 40 08             	mov    0x8(%eax),%eax
 806fc96:	8d 50 02             	lea    0x2(%eax),%edx
 806fc99:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 806fc9f:	89 50 08             	mov    %edx,0x8(%eax)
 806fca2:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 806fca8:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 806fcae:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806fcb4:	8b 10                	mov    (%eax),%edx
 806fcb6:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 806fcbc:	8b 40 04             	mov    0x4(%eax),%eax
 806fcbf:	89 c1                	mov    %eax,%ecx
 806fcc1:	d3 ea                	shr    %cl,%edx
 806fcc3:	89 d0                	mov    %edx,%eax
 806fcc5:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 806fccb:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 806fcd1:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 806fcd7:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 806fcdd:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 806fce3:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806fce9:	0f b6 c0             	movzbl %al,%eax
 806fcec:	c1 e0 02             	shl    $0x2,%eax
 806fcef:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 806fcf5:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806fcfb:	0f b6 00             	movzbl (%eax),%eax
 806fcfe:	3c 08                	cmp    $0x8,%al
 806fd00:	0f 86 83 00 00 00    	jbe    806fd89 <DecodeDistanceBlockSwitch+0x2af>
 806fd06:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806fd0c:	0f b6 00             	movzbl (%eax),%eax
 806fd0f:	0f b6 c0             	movzbl %al,%eax
 806fd12:	83 e8 08             	sub    $0x8,%eax
 806fd15:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 806fd1b:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 806fd21:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 806fd27:	c7 85 1c fe ff ff 08 	movl   $0x8,-0x1e4(%ebp)
 806fd2e:	00 00 00 
 806fd31:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806fd37:	8b 50 04             	mov    0x4(%eax),%edx
 806fd3a:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 806fd40:	01 c2                	add    %eax,%edx
 806fd42:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 806fd48:	89 50 04             	mov    %edx,0x4(%eax)
 806fd4b:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806fd51:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806fd55:	0f b7 d0             	movzwl %ax,%edx
 806fd58:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 806fd5e:	c1 e8 08             	shr    $0x8,%eax
 806fd61:	89 c1                	mov    %eax,%ecx
 806fd63:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 806fd69:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 806fd6f:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 806fd75:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806fd7c:	21 c8                	and    %ecx,%eax
 806fd7e:	01 d0                	add    %edx,%eax
 806fd80:	c1 e0 02             	shl    $0x2,%eax
 806fd83:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 806fd89:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806fd8f:	0f b6 00             	movzbl (%eax),%eax
 806fd92:	0f b6 c0             	movzbl %al,%eax
 806fd95:	8b 95 10 fe ff ff    	mov    -0x1f0(%ebp),%edx
 806fd9b:	89 95 24 fe ff ff    	mov    %edx,-0x1dc(%ebp)
 806fda1:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 806fda7:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806fdad:	8b 50 04             	mov    0x4(%eax),%edx
 806fdb0:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 806fdb6:	01 c2                	add    %eax,%edx
 806fdb8:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 806fdbe:	89 50 04             	mov    %edx,0x4(%eax)
 806fdc1:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 806fdc7:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806fdcb:	0f b7 c0             	movzwl %ax,%eax
 806fdce:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 806fdd4:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 806fdda:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 806fde0:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 806fde6:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 806fdec:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 806fdf2:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 806fdf8:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 806fdfe:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 806fe04:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806fe0a:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 806fe10:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806fe16:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 806fe1c:	c7 85 44 fe ff ff 10 	movl   $0x10,-0x1bc(%ebp)
 806fe23:	00 00 00 
 806fe26:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe2c:	8b 40 04             	mov    0x4(%eax),%eax
 806fe2f:	83 f8 0f             	cmp    $0xf,%eax
 806fe32:	0f 86 86 00 00 00    	jbe    806febe <DecodeDistanceBlockSwitch+0x3e4>
 806fe38:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe3e:	8b 00                	mov    (%eax),%eax
 806fe40:	c1 e8 10             	shr    $0x10,%eax
 806fe43:	89 c2                	mov    %eax,%edx
 806fe45:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe4b:	89 10                	mov    %edx,(%eax)
 806fe4d:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe53:	8b 40 04             	mov    0x4(%eax),%eax
 806fe56:	83 f0 10             	xor    $0x10,%eax
 806fe59:	89 c2                	mov    %eax,%edx
 806fe5b:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe61:	89 50 04             	mov    %edx,0x4(%eax)
 806fe64:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe6a:	8b 10                	mov    (%eax),%edx
 806fe6c:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe72:	8b 40 08             	mov    0x8(%eax),%eax
 806fe75:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 806fe7b:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 806fe81:	0f b7 00             	movzwl (%eax),%eax
 806fe84:	0f b7 c0             	movzwl %ax,%eax
 806fe87:	c1 e0 10             	shl    $0x10,%eax
 806fe8a:	09 c2                	or     %eax,%edx
 806fe8c:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe92:	89 10                	mov    %edx,(%eax)
 806fe94:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fe9a:	8b 40 0c             	mov    0xc(%eax),%eax
 806fe9d:	8d 50 fe             	lea    -0x2(%eax),%edx
 806fea0:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806fea6:	89 50 0c             	mov    %edx,0xc(%eax)
 806fea9:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806feaf:	8b 40 08             	mov    0x8(%eax),%eax
 806feb2:	8d 50 02             	lea    0x2(%eax),%edx
 806feb5:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 806febb:	89 50 08             	mov    %edx,0x8(%eax)
 806febe:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 806fec4:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 806feca:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806fed0:	8b 10                	mov    (%eax),%edx
 806fed2:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 806fed8:	8b 40 04             	mov    0x4(%eax),%eax
 806fedb:	89 c1                	mov    %eax,%ecx
 806fedd:	d3 ea                	shr    %cl,%edx
 806fedf:	89 d0                	mov    %edx,%eax
 806fee1:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 806fee7:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 806feed:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 806fef3:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 806fef9:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%ebp)
 806feff:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806ff05:	0f b6 c0             	movzbl %al,%eax
 806ff08:	c1 e0 02             	shl    $0x2,%eax
 806ff0b:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 806ff11:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ff17:	0f b6 00             	movzbl (%eax),%eax
 806ff1a:	3c 08                	cmp    $0x8,%al
 806ff1c:	0f 86 83 00 00 00    	jbe    806ffa5 <DecodeDistanceBlockSwitch+0x4cb>
 806ff22:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ff28:	0f b6 00             	movzbl (%eax),%eax
 806ff2b:	0f b6 c0             	movzbl %al,%eax
 806ff2e:	83 e8 08             	sub    $0x8,%eax
 806ff31:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 806ff37:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 806ff3d:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 806ff43:	c7 85 64 fe ff ff 08 	movl   $0x8,-0x19c(%ebp)
 806ff4a:	00 00 00 
 806ff4d:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806ff53:	8b 50 04             	mov    0x4(%eax),%edx
 806ff56:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 806ff5c:	01 c2                	add    %eax,%edx
 806ff5e:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 806ff64:	89 50 04             	mov    %edx,0x4(%eax)
 806ff67:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ff6d:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806ff71:	0f b7 d0             	movzwl %ax,%edx
 806ff74:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 806ff7a:	c1 e8 08             	shr    $0x8,%eax
 806ff7d:	89 c1                	mov    %eax,%ecx
 806ff7f:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 806ff85:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 806ff8b:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 806ff91:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 806ff98:	21 c8                	and    %ecx,%eax
 806ff9a:	01 d0                	add    %edx,%eax
 806ff9c:	c1 e0 02             	shl    $0x2,%eax
 806ff9f:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 806ffa5:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ffab:	0f b6 00             	movzbl (%eax),%eax
 806ffae:	0f b6 c0             	movzbl %al,%eax
 806ffb1:	8b 95 58 fe ff ff    	mov    -0x1a8(%ebp),%edx
 806ffb7:	89 95 6c fe ff ff    	mov    %edx,-0x194(%ebp)
 806ffbd:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 806ffc3:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806ffc9:	8b 50 04             	mov    0x4(%eax),%edx
 806ffcc:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 806ffd2:	01 c2                	add    %eax,%edx
 806ffd4:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 806ffda:	89 50 04             	mov    %edx,0x4(%eax)
 806ffdd:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 806ffe3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 806ffe7:	0f b7 c0             	movzwl %ax,%eax
 806ffea:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 806fff0:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 806fff6:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 806fffd:	ff 
 806fffe:	0f b6 c0             	movzbl %al,%eax
 8070001:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 8070007:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807000d:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 8070014:	ff 
 8070015:	0f b7 d0             	movzwl %ax,%edx
 8070018:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 807001e:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 8070024:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 807002a:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 8070030:	83 bd 80 fe ff ff 10 	cmpl   $0x10,-0x180(%ebp)
 8070037:	0f 87 53 01 00 00    	ja     8070190 <DecodeDistanceBlockSwitch+0x6b6>
 807003d:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8070043:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 8070049:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807004f:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 8070055:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807005b:	8b 40 04             	mov    0x4(%eax),%eax
 807005e:	83 f8 0f             	cmp    $0xf,%eax
 8070061:	0f 86 86 00 00 00    	jbe    80700ed <DecodeDistanceBlockSwitch+0x613>
 8070067:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807006d:	8b 00                	mov    (%eax),%eax
 807006f:	c1 e8 10             	shr    $0x10,%eax
 8070072:	89 c1                	mov    %eax,%ecx
 8070074:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807007a:	89 08                	mov    %ecx,(%eax)
 807007c:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8070082:	8b 40 04             	mov    0x4(%eax),%eax
 8070085:	83 f0 10             	xor    $0x10,%eax
 8070088:	89 c1                	mov    %eax,%ecx
 807008a:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8070090:	89 48 04             	mov    %ecx,0x4(%eax)
 8070093:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8070099:	8b 08                	mov    (%eax),%ecx
 807009b:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80700a1:	8b 40 08             	mov    0x8(%eax),%eax
 80700a4:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 80700aa:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 80700b0:	0f b7 00             	movzwl (%eax),%eax
 80700b3:	0f b7 c0             	movzwl %ax,%eax
 80700b6:	c1 e0 10             	shl    $0x10,%eax
 80700b9:	09 c1                	or     %eax,%ecx
 80700bb:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80700c1:	89 08                	mov    %ecx,(%eax)
 80700c3:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80700c9:	8b 40 0c             	mov    0xc(%eax),%eax
 80700cc:	8d 48 fe             	lea    -0x2(%eax),%ecx
 80700cf:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80700d5:	89 48 0c             	mov    %ecx,0xc(%eax)
 80700d8:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80700de:	8b 40 08             	mov    0x8(%eax),%eax
 80700e1:	8d 48 02             	lea    0x2(%eax),%ecx
 80700e4:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80700ea:	89 48 08             	mov    %ecx,0x8(%eax)
 80700ed:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 80700f3:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 80700f9:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 80700ff:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 8070105:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8070108:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 807010e:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 8070114:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 807011a:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 8070120:	8b 30                	mov    (%eax),%esi
 8070122:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 8070128:	8b 40 04             	mov    0x4(%eax),%eax
 807012b:	89 c1                	mov    %eax,%ecx
 807012d:	d3 ee                	shr    %cl,%esi
 807012f:	89 f0                	mov    %esi,%eax
 8070131:	89 c1                	mov    %eax,%ecx
 8070133:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 8070139:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 807013f:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 8070145:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807014c:	21 c1                	and    %eax,%ecx
 807014e:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 8070154:	89 08                	mov    %ecx,(%eax)
 8070156:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807015c:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 8070162:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 8070168:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 807016e:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 8070174:	8b 48 04             	mov    0x4(%eax),%ecx
 8070177:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 807017d:	01 c1                	add    %eax,%ecx
 807017f:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 8070185:	89 48 04             	mov    %ecx,0x4(%eax)
 8070188:	8b 45 e8             	mov    -0x18(%ebp),%eax
 807018b:	e9 a6 02 00 00       	jmp    8070436 <DecodeDistanceBlockSwitch+0x95c>
 8070190:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8070196:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 807019c:	c7 85 b0 fe ff ff 10 	movl   $0x10,-0x150(%ebp)
 80701a3:	00 00 00 
 80701a6:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701ac:	8b 40 04             	mov    0x4(%eax),%eax
 80701af:	83 f8 0f             	cmp    $0xf,%eax
 80701b2:	0f 86 86 00 00 00    	jbe    807023e <DecodeDistanceBlockSwitch+0x764>
 80701b8:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701be:	8b 00                	mov    (%eax),%eax
 80701c0:	c1 e8 10             	shr    $0x10,%eax
 80701c3:	89 c1                	mov    %eax,%ecx
 80701c5:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701cb:	89 08                	mov    %ecx,(%eax)
 80701cd:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701d3:	8b 40 04             	mov    0x4(%eax),%eax
 80701d6:	83 f0 10             	xor    $0x10,%eax
 80701d9:	89 c1                	mov    %eax,%ecx
 80701db:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701e1:	89 48 04             	mov    %ecx,0x4(%eax)
 80701e4:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701ea:	8b 08                	mov    (%eax),%ecx
 80701ec:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80701f2:	8b 40 08             	mov    0x8(%eax),%eax
 80701f5:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 80701fb:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8070201:	0f b7 00             	movzwl (%eax),%eax
 8070204:	0f b7 c0             	movzwl %ax,%eax
 8070207:	c1 e0 10             	shl    $0x10,%eax
 807020a:	09 c1                	or     %eax,%ecx
 807020c:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8070212:	89 08                	mov    %ecx,(%eax)
 8070214:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807021a:	8b 40 0c             	mov    0xc(%eax),%eax
 807021d:	8d 48 fe             	lea    -0x2(%eax),%ecx
 8070220:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8070226:	89 48 0c             	mov    %ecx,0xc(%eax)
 8070229:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807022f:	8b 40 08             	mov    0x8(%eax),%eax
 8070232:	8d 48 02             	lea    0x2(%eax),%ecx
 8070235:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807023b:	89 48 08             	mov    %ecx,0x8(%eax)
 807023e:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8070244:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 807024a:	c7 85 bc fe ff ff 10 	movl   $0x10,-0x144(%ebp)
 8070251:	00 00 00 
 8070254:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 807025a:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 8070260:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 8070266:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 807026c:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 8070272:	8b 30                	mov    (%eax),%esi
 8070274:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 807027a:	8b 40 04             	mov    0x4(%eax),%eax
 807027d:	89 c1                	mov    %eax,%ecx
 807027f:	d3 ee                	shr    %cl,%esi
 8070281:	89 f0                	mov    %esi,%eax
 8070283:	89 c1                	mov    %eax,%ecx
 8070285:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 807028b:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 8070291:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8070297:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807029e:	21 c1                	and    %eax,%ecx
 80702a0:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 80702a6:	89 08                	mov    %ecx,(%eax)
 80702a8:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 80702ae:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 80702b4:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 80702ba:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 80702c0:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 80702c6:	8b 48 04             	mov    0x4(%eax),%ecx
 80702c9:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 80702cf:	01 c1                	add    %eax,%ecx
 80702d1:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 80702d7:	89 48 04             	mov    %ecx,0x4(%eax)
 80702da:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 80702e0:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 80702e6:	c7 85 d8 fe ff ff 08 	movl   $0x8,-0x128(%ebp)
 80702ed:	00 00 00 
 80702f0:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80702f6:	8b 40 04             	mov    0x4(%eax),%eax
 80702f9:	83 f8 0f             	cmp    $0xf,%eax
 80702fc:	0f 86 86 00 00 00    	jbe    8070388 <DecodeDistanceBlockSwitch+0x8ae>
 8070302:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070308:	8b 00                	mov    (%eax),%eax
 807030a:	c1 e8 10             	shr    $0x10,%eax
 807030d:	89 c1                	mov    %eax,%ecx
 807030f:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070315:	89 08                	mov    %ecx,(%eax)
 8070317:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807031d:	8b 40 04             	mov    0x4(%eax),%eax
 8070320:	83 f0 10             	xor    $0x10,%eax
 8070323:	89 c1                	mov    %eax,%ecx
 8070325:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807032b:	89 48 04             	mov    %ecx,0x4(%eax)
 807032e:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070334:	8b 08                	mov    (%eax),%ecx
 8070336:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807033c:	8b 40 08             	mov    0x8(%eax),%eax
 807033f:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 8070345:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 807034b:	0f b7 00             	movzwl (%eax),%eax
 807034e:	0f b7 c0             	movzwl %ax,%eax
 8070351:	c1 e0 10             	shl    $0x10,%eax
 8070354:	09 c1                	or     %eax,%ecx
 8070356:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807035c:	89 08                	mov    %ecx,(%eax)
 807035e:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070364:	8b 40 0c             	mov    0xc(%eax),%eax
 8070367:	8d 48 fe             	lea    -0x2(%eax),%ecx
 807036a:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070370:	89 48 0c             	mov    %ecx,0xc(%eax)
 8070373:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070379:	8b 40 08             	mov    0x8(%eax),%eax
 807037c:	8d 48 02             	lea    0x2(%eax),%ecx
 807037f:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8070385:	89 48 08             	mov    %ecx,0x8(%eax)
 8070388:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807038e:	8d 48 f0             	lea    -0x10(%eax),%ecx
 8070391:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8070397:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 807039d:	89 8d e4 fe ff ff    	mov    %ecx,-0x11c(%ebp)
 80703a3:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80703a6:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 80703ac:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 80703b2:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 80703b8:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 80703be:	8b 30                	mov    (%eax),%esi
 80703c0:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 80703c6:	8b 40 04             	mov    0x4(%eax),%eax
 80703c9:	89 c1                	mov    %eax,%ecx
 80703cb:	d3 ee                	shr    %cl,%esi
 80703cd:	89 f0                	mov    %esi,%eax
 80703cf:	89 c1                	mov    %eax,%ecx
 80703d1:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 80703d7:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 80703dd:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 80703e3:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80703ea:	21 c1                	and    %eax,%ecx
 80703ec:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 80703f2:	89 08                	mov    %ecx,(%eax)
 80703f4:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 80703fa:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8070400:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8070406:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 807040c:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 8070412:	8b 48 04             	mov    0x4(%eax),%ecx
 8070415:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807041b:	01 c1                	add    %eax,%ecx
 807041d:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 8070423:	89 48 04             	mov    %ecx,0x4(%eax)
 8070426:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8070429:	c1 e0 10             	shl    $0x10,%eax
 807042c:	89 c1                	mov    %eax,%ecx
 807042e:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8070434:	09 c8                	or     %ecx,%eax
 8070436:	01 d0                	add    %edx,%eax
 8070438:	89 c2                	mov    %eax,%edx
 807043a:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070440:	8b 8d d4 fd ff ff    	mov    -0x22c(%ebp),%ecx
 8070446:	83 c1 2c             	add    $0x2c,%ecx
 8070449:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 807044d:	e9 e5 07 00 00       	jmp    8070c37 <DecodeDistanceBlockSwitch+0x115d>
 8070452:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8070458:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 807045e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8070461:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 8070467:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 807046d:	8b 10                	mov    (%eax),%edx
 807046f:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8070475:	89 10                	mov    %edx,(%eax)
 8070477:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 807047d:	8b 50 04             	mov    0x4(%eax),%edx
 8070480:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8070486:	89 50 04             	mov    %edx,0x4(%eax)
 8070489:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 807048f:	8b 50 08             	mov    0x8(%eax),%edx
 8070492:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8070498:	89 50 08             	mov    %edx,0x8(%eax)
 807049b:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 80704a1:	8b 50 0c             	mov    0xc(%eax),%edx
 80704a4:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 80704aa:	89 50 0c             	mov    %edx,0xc(%eax)
 80704ad:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 80704b3:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 80704b9:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80704bf:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 80704c5:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 80704cb:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 80704d1:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 80704d7:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 80704dd:	c7 85 14 ff ff ff 0f 	movl   $0xf,-0xec(%ebp)
 80704e4:	00 00 00 
 80704e7:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 80704ed:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 80704f3:	e9 a8 00 00 00       	jmp    80705a0 <DecodeDistanceBlockSwitch+0xac6>
 80704f8:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 80704fe:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 8070504:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807050a:	8b 40 0c             	mov    0xc(%eax),%eax
 807050d:	85 c0                	test   %eax,%eax
 807050f:	75 07                	jne    8070518 <DecodeDistanceBlockSwitch+0xa3e>
 8070511:	b8 00 00 00 00       	mov    $0x0,%eax
 8070516:	eb 7d                	jmp    8070595 <DecodeDistanceBlockSwitch+0xabb>
 8070518:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807051e:	8b 00                	mov    (%eax),%eax
 8070520:	c1 e8 08             	shr    $0x8,%eax
 8070523:	89 c2                	mov    %eax,%edx
 8070525:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807052b:	89 10                	mov    %edx,(%eax)
 807052d:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8070533:	8b 10                	mov    (%eax),%edx
 8070535:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807053b:	8b 40 08             	mov    0x8(%eax),%eax
 807053e:	0f b6 00             	movzbl (%eax),%eax
 8070541:	0f b6 c0             	movzbl %al,%eax
 8070544:	c1 e0 18             	shl    $0x18,%eax
 8070547:	09 c2                	or     %eax,%edx
 8070549:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807054f:	89 10                	mov    %edx,(%eax)
 8070551:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8070557:	8b 40 04             	mov    0x4(%eax),%eax
 807055a:	8d 50 f8             	lea    -0x8(%eax),%edx
 807055d:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8070563:	89 50 04             	mov    %edx,0x4(%eax)
 8070566:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807056c:	8b 40 0c             	mov    0xc(%eax),%eax
 807056f:	8d 50 ff             	lea    -0x1(%eax),%edx
 8070572:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8070578:	89 50 0c             	mov    %edx,0xc(%eax)
 807057b:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8070581:	8b 40 08             	mov    0x8(%eax),%eax
 8070584:	8d 50 01             	lea    0x1(%eax),%edx
 8070587:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807058d:	89 50 08             	mov    %edx,0x8(%eax)
 8070590:	b8 01 00 00 00       	mov    $0x1,%eax
 8070595:	85 c0                	test   %eax,%eax
 8070597:	75 07                	jne    80705a0 <DecodeDistanceBlockSwitch+0xac6>
 8070599:	b8 00 00 00 00       	mov    $0x0,%eax
 807059e:	eb 77                	jmp    8070617 <DecodeDistanceBlockSwitch+0xb3d>
 80705a0:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 80705a6:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 80705ac:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 80705b2:	8b 40 04             	mov    0x4(%eax),%eax
 80705b5:	ba 20 00 00 00       	mov    $0x20,%edx
 80705ba:	29 c2                	sub    %eax,%edx
 80705bc:	89 d0                	mov    %edx,%eax
 80705be:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%ebp)
 80705c4:	0f 87 2e ff ff ff    	ja     80704f8 <DecodeDistanceBlockSwitch+0xa1e>
 80705ca:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 80705d0:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 80705d6:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 80705dc:	8b 10                	mov    (%eax),%edx
 80705de:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 80705e4:	8b 40 04             	mov    0x4(%eax),%eax
 80705e7:	89 c1                	mov    %eax,%ecx
 80705e9:	d3 ea                	shr    %cl,%edx
 80705eb:	89 d0                	mov    %edx,%eax
 80705ed:	89 c2                	mov    %eax,%edx
 80705ef:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 80705f5:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 80705fb:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 8070601:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8070608:	21 c2                	and    %eax,%edx
 807060a:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 8070610:	89 10                	mov    %edx,(%eax)
 8070612:	b8 01 00 00 00       	mov    $0x1,%eax
 8070617:	85 c0                	test   %eax,%eax
 8070619:	0f 95 c0             	setne  %al
 807061c:	0f b6 c0             	movzbl %al,%eax
 807061f:	85 c0                	test   %eax,%eax
 8070621:	0f 84 20 01 00 00    	je     8070747 <DecodeDistanceBlockSwitch+0xc6d>
 8070627:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807062d:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 8070633:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8070639:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 807063f:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 8070645:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 807064b:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 8070651:	0f b6 c0             	movzbl %al,%eax
 8070654:	c1 e0 02             	shl    $0x2,%eax
 8070657:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 807065d:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8070663:	0f b6 00             	movzbl (%eax),%eax
 8070666:	3c 08                	cmp    $0x8,%al
 8070668:	0f 86 83 00 00 00    	jbe    80706f1 <DecodeDistanceBlockSwitch+0xc17>
 807066e:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8070674:	0f b6 00             	movzbl (%eax),%eax
 8070677:	0f b6 c0             	movzbl %al,%eax
 807067a:	83 e8 08             	sub    $0x8,%eax
 807067d:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 8070683:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 8070689:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 807068f:	c7 85 40 ff ff ff 08 	movl   $0x8,-0xc0(%ebp)
 8070696:	00 00 00 
 8070699:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 807069f:	8b 50 04             	mov    0x4(%eax),%edx
 80706a2:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 80706a8:	01 c2                	add    %eax,%edx
 80706aa:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 80706b0:	89 50 04             	mov    %edx,0x4(%eax)
 80706b3:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 80706b9:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80706bd:	0f b7 d0             	movzwl %ax,%edx
 80706c0:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 80706c6:	c1 e8 08             	shr    $0x8,%eax
 80706c9:	89 c1                	mov    %eax,%ecx
 80706cb:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 80706d1:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 80706d7:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 80706dd:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80706e4:	21 c8                	and    %ecx,%eax
 80706e6:	01 d0                	add    %edx,%eax
 80706e8:	c1 e0 02             	shl    $0x2,%eax
 80706eb:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 80706f1:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 80706f7:	0f b6 00             	movzbl (%eax),%eax
 80706fa:	0f b6 c0             	movzbl %al,%eax
 80706fd:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 8070703:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
 8070709:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 807070f:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 8070715:	8b 50 04             	mov    0x4(%eax),%edx
 8070718:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 807071e:	01 c2                	add    %eax,%edx
 8070720:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 8070726:	89 50 04             	mov    %edx,0x4(%eax)
 8070729:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 807072f:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8070733:	0f b7 c0             	movzwl %ax,%eax
 8070736:	89 c2                	mov    %eax,%edx
 8070738:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 807073e:	89 10                	mov    %edx,(%eax)
 8070740:	b8 01 00 00 00       	mov    $0x1,%eax
 8070745:	eb 22                	jmp    8070769 <DecodeDistanceBlockSwitch+0xc8f>
 8070747:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 807074d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8070751:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 8070757:	89 44 24 04          	mov    %eax,0x4(%esp)
 807075b:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8070761:	89 04 24             	mov    %eax,(%esp)
 8070764:	e8 63 82 ff ff       	call   80689cc <SafeDecodeSymbol>
 8070769:	85 c0                	test   %eax,%eax
 807076b:	75 0a                	jne    8070777 <DecodeDistanceBlockSwitch+0xc9d>
 807076d:	b8 00 00 00 00       	mov    $0x0,%eax
 8070772:	e9 51 05 00 00       	jmp    8070cc8 <DecodeDistanceBlockSwitch+0x11ee>
 8070777:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 807077d:	83 c0 2c             	add    $0x2c,%eax
 8070780:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8070787:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 807078d:	01 d0                	add    %edx,%eax
 807078f:	8d 50 0c             	lea    0xc(%eax),%edx
 8070792:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070798:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 807079e:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
 80707a4:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 80707aa:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80707b0:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80707b6:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 80707bc:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 80707c2:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 80707c8:	85 c0                	test   %eax,%eax
 80707ca:	0f 85 63 02 00 00    	jne    8070a33 <DecodeDistanceBlockSwitch+0xf59>
 80707d0:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80707d6:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 80707dc:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 80707e2:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 80707e8:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax
 80707ee:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 80707f4:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80707fa:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 8070800:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%ebp)
 8070807:	00 00 00 
 807080a:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 8070810:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 8070816:	e9 a8 00 00 00       	jmp    80708c3 <DecodeDistanceBlockSwitch+0xde9>
 807081b:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8070821:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8070827:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807082d:	8b 40 0c             	mov    0xc(%eax),%eax
 8070830:	85 c0                	test   %eax,%eax
 8070832:	75 07                	jne    807083b <DecodeDistanceBlockSwitch+0xd61>
 8070834:	b8 00 00 00 00       	mov    $0x0,%eax
 8070839:	eb 7d                	jmp    80708b8 <DecodeDistanceBlockSwitch+0xdde>
 807083b:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8070841:	8b 00                	mov    (%eax),%eax
 8070843:	c1 e8 08             	shr    $0x8,%eax
 8070846:	89 c2                	mov    %eax,%edx
 8070848:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807084e:	89 10                	mov    %edx,(%eax)
 8070850:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8070856:	8b 10                	mov    (%eax),%edx
 8070858:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807085e:	8b 40 08             	mov    0x8(%eax),%eax
 8070861:	0f b6 00             	movzbl (%eax),%eax
 8070864:	0f b6 c0             	movzbl %al,%eax
 8070867:	c1 e0 18             	shl    $0x18,%eax
 807086a:	09 c2                	or     %eax,%edx
 807086c:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8070872:	89 10                	mov    %edx,(%eax)
 8070874:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807087a:	8b 40 04             	mov    0x4(%eax),%eax
 807087d:	8d 50 f8             	lea    -0x8(%eax),%edx
 8070880:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8070886:	89 50 04             	mov    %edx,0x4(%eax)
 8070889:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807088f:	8b 40 0c             	mov    0xc(%eax),%eax
 8070892:	8d 50 ff             	lea    -0x1(%eax),%edx
 8070895:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807089b:	89 50 0c             	mov    %edx,0xc(%eax)
 807089e:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80708a4:	8b 40 08             	mov    0x8(%eax),%eax
 80708a7:	8d 50 01             	lea    0x1(%eax),%edx
 80708aa:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 80708b0:	89 50 08             	mov    %edx,0x8(%eax)
 80708b3:	b8 01 00 00 00       	mov    $0x1,%eax
 80708b8:	85 c0                	test   %eax,%eax
 80708ba:	75 07                	jne    80708c3 <DecodeDistanceBlockSwitch+0xde9>
 80708bc:	b8 00 00 00 00       	mov    $0x0,%eax
 80708c1:	eb 68                	jmp    807092b <DecodeDistanceBlockSwitch+0xe51>
 80708c3:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80708c9:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 80708cf:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 80708d5:	8b 40 04             	mov    0x4(%eax),%eax
 80708d8:	ba 20 00 00 00       	mov    $0x20,%edx
 80708dd:	29 c2                	sub    %eax,%edx
 80708df:	89 d0                	mov    %edx,%eax
 80708e1:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%ebp)
 80708e7:	0f 87 2e ff ff ff    	ja     807081b <DecodeDistanceBlockSwitch+0xd41>
 80708ed:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 80708f3:	89 45 80             	mov    %eax,-0x80(%ebp)
 80708f6:	8b 45 80             	mov    -0x80(%ebp),%eax
 80708f9:	8b 10                	mov    (%eax),%edx
 80708fb:	8b 45 80             	mov    -0x80(%ebp),%eax
 80708fe:	8b 40 04             	mov    0x4(%eax),%eax
 8070901:	89 c1                	mov    %eax,%ecx
 8070903:	d3 ea                	shr    %cl,%edx
 8070905:	89 d0                	mov    %edx,%eax
 8070907:	89 c2                	mov    %eax,%edx
 8070909:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 807090f:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8070912:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8070915:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807091c:	21 c2                	and    %eax,%edx
 807091e:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8070924:	89 10                	mov    %edx,(%eax)
 8070926:	b8 01 00 00 00       	mov    $0x1,%eax
 807092b:	85 c0                	test   %eax,%eax
 807092d:	0f 95 c0             	setne  %al
 8070930:	0f b6 c0             	movzbl %al,%eax
 8070933:	85 c0                	test   %eax,%eax
 8070935:	0f 84 c8 00 00 00    	je     8070a03 <DecodeDistanceBlockSwitch+0xf29>
 807093b:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8070941:	89 45 88             	mov    %eax,-0x78(%ebp)
 8070944:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807094a:	89 45 8c             	mov    %eax,-0x74(%ebp)
 807094d:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8070953:	89 45 90             	mov    %eax,-0x70(%ebp)
 8070956:	8b 45 88             	mov    -0x78(%ebp),%eax
 8070959:	0f b6 c0             	movzbl %al,%eax
 807095c:	c1 e0 02             	shl    $0x2,%eax
 807095f:	01 45 8c             	add    %eax,-0x74(%ebp)
 8070962:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8070965:	0f b6 00             	movzbl (%eax),%eax
 8070968:	3c 08                	cmp    $0x8,%al
 807096a:	76 59                	jbe    80709c5 <DecodeDistanceBlockSwitch+0xeeb>
 807096c:	8b 45 8c             	mov    -0x74(%ebp),%eax
 807096f:	0f b6 00             	movzbl (%eax),%eax
 8070972:	0f b6 c0             	movzbl %al,%eax
 8070975:	83 e8 08             	sub    $0x8,%eax
 8070978:	89 45 94             	mov    %eax,-0x6c(%ebp)
 807097b:	8b 45 90             	mov    -0x70(%ebp),%eax
 807097e:	89 45 98             	mov    %eax,-0x68(%ebp)
 8070981:	c7 45 9c 08 00 00 00 	movl   $0x8,-0x64(%ebp)
 8070988:	8b 45 98             	mov    -0x68(%ebp),%eax
 807098b:	8b 50 04             	mov    0x4(%eax),%edx
 807098e:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8070991:	01 c2                	add    %eax,%edx
 8070993:	8b 45 98             	mov    -0x68(%ebp),%eax
 8070996:	89 50 04             	mov    %edx,0x4(%eax)
 8070999:	8b 45 8c             	mov    -0x74(%ebp),%eax
 807099c:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80709a0:	0f b7 d0             	movzwl %ax,%edx
 80709a3:	8b 45 88             	mov    -0x78(%ebp),%eax
 80709a6:	c1 e8 08             	shr    $0x8,%eax
 80709a9:	89 c1                	mov    %eax,%ecx
 80709ab:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80709ae:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80709b1:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80709b4:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80709bb:	21 c8                	and    %ecx,%eax
 80709bd:	01 d0                	add    %edx,%eax
 80709bf:	c1 e0 02             	shl    $0x2,%eax
 80709c2:	01 45 8c             	add    %eax,-0x74(%ebp)
 80709c5:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80709c8:	0f b6 00             	movzbl (%eax),%eax
 80709cb:	0f b6 c0             	movzbl %al,%eax
 80709ce:	8b 55 90             	mov    -0x70(%ebp),%edx
 80709d1:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 80709d4:	89 45 a8             	mov    %eax,-0x58(%ebp)
 80709d7:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80709da:	8b 50 04             	mov    0x4(%eax),%edx
 80709dd:	8b 45 a8             	mov    -0x58(%ebp),%eax
 80709e0:	01 c2                	add    %eax,%edx
 80709e2:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 80709e5:	89 50 04             	mov    %edx,0x4(%eax)
 80709e8:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80709eb:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80709ef:	0f b7 c0             	movzwl %ax,%eax
 80709f2:	89 c2                	mov    %eax,%edx
 80709f4:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80709fa:	89 10                	mov    %edx,(%eax)
 80709fc:	b8 01 00 00 00       	mov    $0x1,%eax
 8070a01:	eb 22                	jmp    8070a25 <DecodeDistanceBlockSwitch+0xf4b>
 8070a03:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8070a09:	89 44 24 08          	mov    %eax,0x8(%esp)
 8070a0d:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8070a13:	89 44 24 04          	mov    %eax,0x4(%esp)
 8070a17:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8070a1d:	89 04 24             	mov    %eax,(%esp)
 8070a20:	e8 a7 7f ff ff       	call   80689cc <SafeDecodeSymbol>
 8070a25:	85 c0                	test   %eax,%eax
 8070a27:	75 1c                	jne    8070a45 <DecodeDistanceBlockSwitch+0xf6b>
 8070a29:	b8 00 00 00 00       	mov    $0x0,%eax
 8070a2e:	e9 a9 01 00 00       	jmp    8070bdc <DecodeDistanceBlockSwitch+0x1102>
 8070a33:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8070a39:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 8070a3f:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 8070a45:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8070a4b:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 8070a52:	ff 
 8070a53:	0f b6 c0             	movzbl %al,%eax
 8070a56:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8070a59:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 8070a5f:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8070a62:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8070a65:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8070a68:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 8070a6e:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8070a71:	e9 81 00 00 00       	jmp    8070af7 <DecodeDistanceBlockSwitch+0x101d>
 8070a76:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8070a79:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8070a7c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070a7f:	8b 40 0c             	mov    0xc(%eax),%eax
 8070a82:	85 c0                	test   %eax,%eax
 8070a84:	75 07                	jne    8070a8d <DecodeDistanceBlockSwitch+0xfb3>
 8070a86:	b8 00 00 00 00       	mov    $0x0,%eax
 8070a8b:	eb 5c                	jmp    8070ae9 <DecodeDistanceBlockSwitch+0x100f>
 8070a8d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070a90:	8b 00                	mov    (%eax),%eax
 8070a92:	c1 e8 08             	shr    $0x8,%eax
 8070a95:	89 c2                	mov    %eax,%edx
 8070a97:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070a9a:	89 10                	mov    %edx,(%eax)
 8070a9c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070a9f:	8b 10                	mov    (%eax),%edx
 8070aa1:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070aa4:	8b 40 08             	mov    0x8(%eax),%eax
 8070aa7:	0f b6 00             	movzbl (%eax),%eax
 8070aaa:	0f b6 c0             	movzbl %al,%eax
 8070aad:	c1 e0 18             	shl    $0x18,%eax
 8070ab0:	09 c2                	or     %eax,%edx
 8070ab2:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070ab5:	89 10                	mov    %edx,(%eax)
 8070ab7:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070aba:	8b 40 04             	mov    0x4(%eax),%eax
 8070abd:	8d 50 f8             	lea    -0x8(%eax),%edx
 8070ac0:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070ac3:	89 50 04             	mov    %edx,0x4(%eax)
 8070ac6:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070ac9:	8b 40 0c             	mov    0xc(%eax),%eax
 8070acc:	8d 50 ff             	lea    -0x1(%eax),%edx
 8070acf:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070ad2:	89 50 0c             	mov    %edx,0xc(%eax)
 8070ad5:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070ad8:	8b 40 08             	mov    0x8(%eax),%eax
 8070adb:	8d 50 01             	lea    0x1(%eax),%edx
 8070ade:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8070ae1:	89 50 08             	mov    %edx,0x8(%eax)
 8070ae4:	b8 01 00 00 00       	mov    $0x1,%eax
 8070ae9:	85 c0                	test   %eax,%eax
 8070aeb:	75 0a                	jne    8070af7 <DecodeDistanceBlockSwitch+0x101d>
 8070aed:	b8 00 00 00 00       	mov    $0x0,%eax
 8070af2:	e9 82 00 00 00       	jmp    8070b79 <DecodeDistanceBlockSwitch+0x109f>
 8070af7:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8070afa:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8070afd:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8070b00:	8b 40 04             	mov    0x4(%eax),%eax
 8070b03:	ba 20 00 00 00       	mov    $0x20,%edx
 8070b08:	29 c2                	sub    %eax,%edx
 8070b0a:	89 d0                	mov    %edx,%eax
 8070b0c:	39 45 b4             	cmp    %eax,-0x4c(%ebp)
 8070b0f:	0f 87 61 ff ff ff    	ja     8070a76 <DecodeDistanceBlockSwitch+0xf9c>
 8070b15:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8070b18:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8070b1b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8070b1e:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8070b21:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8070b24:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8070b27:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8070b2a:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8070b2d:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8070b30:	8b 10                	mov    (%eax),%edx
 8070b32:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8070b35:	8b 40 04             	mov    0x4(%eax),%eax
 8070b38:	89 c1                	mov    %eax,%ecx
 8070b3a:	d3 ea                	shr    %cl,%edx
 8070b3c:	89 d0                	mov    %edx,%eax
 8070b3e:	89 c2                	mov    %eax,%edx
 8070b40:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8070b43:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8070b46:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8070b49:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8070b50:	21 c2                	and    %eax,%edx
 8070b52:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8070b55:	89 10                	mov    %edx,(%eax)
 8070b57:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8070b5a:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8070b5d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8070b60:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8070b63:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8070b66:	8b 50 04             	mov    0x4(%eax),%edx
 8070b69:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8070b6c:	01 c2                	add    %eax,%edx
 8070b6e:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8070b71:	89 50 04             	mov    %edx,0x4(%eax)
 8070b74:	b8 01 00 00 00       	mov    $0x1,%eax
 8070b79:	85 c0                	test   %eax,%eax
 8070b7b:	75 29                	jne    8070ba6 <DecodeDistanceBlockSwitch+0x10cc>
 8070b7d:	8b 95 bc fd ff ff    	mov    -0x244(%ebp),%edx
 8070b83:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8070b89:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 8070b8f:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8070b95:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 8070b9c:	00 00 00 
 8070b9f:	b8 00 00 00 00       	mov    $0x0,%eax
 8070ba4:	eb 36                	jmp    8070bdc <DecodeDistanceBlockSwitch+0x1102>
 8070ba6:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8070bac:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 8070bb3:	ff 
 8070bb4:	0f b7 d0             	movzwl %ax,%edx
 8070bb7:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8070bbd:	01 c2                	add    %eax,%edx
 8070bbf:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8070bc5:	89 10                	mov    %edx,(%eax)
 8070bc7:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8070bcd:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 8070bd4:	00 00 00 
 8070bd7:	b8 01 00 00 00       	mov    $0x1,%eax
 8070bdc:	85 c0                	test   %eax,%eax
 8070bde:	75 57                	jne    8070c37 <DecodeDistanceBlockSwitch+0x115d>
 8070be0:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070be6:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 8070bed:	00 00 00 
 8070bf0:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8070bf6:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8070bf9:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8070bfc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8070bff:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8070c02:	8b 10                	mov    (%eax),%edx
 8070c04:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8070c07:	89 10                	mov    %edx,(%eax)
 8070c09:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8070c0c:	8b 50 04             	mov    0x4(%eax),%edx
 8070c0f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8070c12:	89 50 04             	mov    %edx,0x4(%eax)
 8070c15:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8070c18:	8b 50 08             	mov    0x8(%eax),%edx
 8070c1b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8070c1e:	89 50 08             	mov    %edx,0x8(%eax)
 8070c21:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8070c24:	8b 50 0c             	mov    0xc(%eax),%edx
 8070c27:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8070c2a:	89 50 0c             	mov    %edx,0xc(%eax)
 8070c2d:	b8 00 00 00 00       	mov    $0x0,%eax
 8070c32:	e9 91 00 00 00       	jmp    8070cc8 <DecodeDistanceBlockSwitch+0x11ee>
 8070c37:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8070c3d:	83 f8 01             	cmp    $0x1,%eax
 8070c40:	75 16                	jne    8070c58 <DecodeDistanceBlockSwitch+0x117e>
 8070c42:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8070c48:	83 c0 04             	add    $0x4,%eax
 8070c4b:	8b 00                	mov    (%eax),%eax
 8070c4d:	83 c0 01             	add    $0x1,%eax
 8070c50:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8070c56:	eb 29                	jmp    8070c81 <DecodeDistanceBlockSwitch+0x11a7>
 8070c58:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8070c5e:	85 c0                	test   %eax,%eax
 8070c60:	75 10                	jne    8070c72 <DecodeDistanceBlockSwitch+0x1198>
 8070c62:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8070c68:	8b 00                	mov    (%eax),%eax
 8070c6a:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8070c70:	eb 0f                	jmp    8070c81 <DecodeDistanceBlockSwitch+0x11a7>
 8070c72:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8070c78:	83 e8 02             	sub    $0x2,%eax
 8070c7b:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8070c81:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8070c87:	39 85 d8 fd ff ff    	cmp    %eax,-0x228(%ebp)
 8070c8d:	77 12                	ja     8070ca1 <DecodeDistanceBlockSwitch+0x11c7>
 8070c8f:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8070c95:	2b 85 d8 fd ff ff    	sub    -0x228(%ebp),%eax
 8070c9b:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8070ca1:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8070ca7:	8b 50 04             	mov    0x4(%eax),%edx
 8070caa:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8070cb0:	89 10                	mov    %edx,(%eax)
 8070cb2:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8070cb8:	8d 50 04             	lea    0x4(%eax),%edx
 8070cbb:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8070cc1:	89 02                	mov    %eax,(%edx)
 8070cc3:	b8 01 00 00 00       	mov    $0x1,%eax
 8070cc8:	85 c0                	test   %eax,%eax
 8070cca:	74 4c                	je     8070d18 <DecodeDistanceBlockSwitch+0x123e>
 8070ccc:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070cd2:	8b 90 f8 00 00 00    	mov    0xf8(%eax),%edx
 8070cd8:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070cde:	8b 80 e8 00 00 00    	mov    0xe8(%eax),%eax
 8070ce4:	c1 e0 02             	shl    $0x2,%eax
 8070ce7:	01 c2                	add    %eax,%edx
 8070ce9:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070cef:	89 50 70             	mov    %edx,0x70(%eax)
 8070cf2:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070cf8:	8b 50 70             	mov    0x70(%eax),%edx
 8070cfb:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070d01:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8070d07:	01 d0                	add    %edx,%eax
 8070d09:	0f b6 10             	movzbl (%eax),%edx
 8070d0c:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070d12:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
 8070d18:	81 c4 4c 02 00 00    	add    $0x24c,%esp
 8070d1e:	5b                   	pop    %ebx
 8070d1f:	5e                   	pop    %esi
 8070d20:	5d                   	pop    %ebp
 8070d21:	c3                   	ret    

08070d22 <SafeDecodeDistanceBlockSwitch>:
 8070d22:	55                   	push   %ebp
 8070d23:	89 e5                	mov    %esp,%ebp
 8070d25:	56                   	push   %esi
 8070d26:	53                   	push   %ebx
 8070d27:	81 ec 4c 02 00 00    	sub    $0x24c,%esp
 8070d2d:	e8 be 8d fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8070d32:	81 c3 ce f2 03 00    	add    $0x3f2ce,%ebx
 8070d38:	c7 85 c4 fd ff ff 01 	movl   $0x1,-0x23c(%ebp)
 8070d3f:	00 00 00 
 8070d42:	8b 45 08             	mov    0x8(%ebp),%eax
 8070d45:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 8070d4b:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 8070d51:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 8070d57:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8070d5d:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 8070d63:	c7 85 d4 fd ff ff 02 	movl   $0x2,-0x22c(%ebp)
 8070d6a:	00 00 00 
 8070d6d:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070d73:	8b 95 d4 fd ff ff    	mov    -0x22c(%ebp),%edx
 8070d79:	83 c2 30             	add    $0x30,%edx
 8070d7c:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 8070d80:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 8070d86:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070d8c:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 8070d92:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 8070d98:	69 c0 e0 09 00 00    	imul   $0x9e0,%eax,%eax
 8070d9e:	01 d0                	add    %edx,%eax
 8070da0:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 8070da6:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070dac:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
 8070db2:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 8070db8:	69 c0 30 06 00 00    	imul   $0x630,%eax,%eax
 8070dbe:	01 d0                	add    %edx,%eax
 8070dc0:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 8070dc6:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070dcc:	83 c0 08             	add    $0x8,%eax
 8070dcf:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 8070dd5:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 8070ddb:	01 c0                	add    %eax,%eax
 8070ddd:	83 c0 34             	add    $0x34,%eax
 8070de0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8070de7:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8070ded:	01 d0                	add    %edx,%eax
 8070def:	83 c0 04             	add    $0x4,%eax
 8070df2:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 8070df8:	83 bd d8 fd ff ff 01 	cmpl   $0x1,-0x228(%ebp)
 8070dff:	77 0a                	ja     8070e0b <SafeDecodeDistanceBlockSwitch+0xe9>
 8070e01:	b8 00 00 00 00       	mov    $0x0,%eax
 8070e06:	e9 05 11 00 00       	jmp    8071f10 <SafeDecodeDistanceBlockSwitch+0x11ee>
 8070e0b:	83 bd cc fd ff ff 00 	cmpl   $0x0,-0x234(%ebp)
 8070e12:	0f 85 82 08 00 00    	jne    807169a <SafeDecodeDistanceBlockSwitch+0x978>
 8070e18:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 8070e1e:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 8070e24:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8070e2a:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 8070e30:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8070e36:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 8070e3c:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8070e42:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 8070e48:	c7 85 fc fd ff ff 10 	movl   $0x10,-0x204(%ebp)
 8070e4f:	00 00 00 
 8070e52:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e58:	8b 40 04             	mov    0x4(%eax),%eax
 8070e5b:	83 f8 0f             	cmp    $0xf,%eax
 8070e5e:	0f 86 86 00 00 00    	jbe    8070eea <SafeDecodeDistanceBlockSwitch+0x1c8>
 8070e64:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e6a:	8b 00                	mov    (%eax),%eax
 8070e6c:	c1 e8 10             	shr    $0x10,%eax
 8070e6f:	89 c2                	mov    %eax,%edx
 8070e71:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e77:	89 10                	mov    %edx,(%eax)
 8070e79:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e7f:	8b 40 04             	mov    0x4(%eax),%eax
 8070e82:	83 f0 10             	xor    $0x10,%eax
 8070e85:	89 c2                	mov    %eax,%edx
 8070e87:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e8d:	89 50 04             	mov    %edx,0x4(%eax)
 8070e90:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e96:	8b 10                	mov    (%eax),%edx
 8070e98:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070e9e:	8b 40 08             	mov    0x8(%eax),%eax
 8070ea1:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 8070ea7:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 8070ead:	0f b7 00             	movzwl (%eax),%eax
 8070eb0:	0f b7 c0             	movzwl %ax,%eax
 8070eb3:	c1 e0 10             	shl    $0x10,%eax
 8070eb6:	09 c2                	or     %eax,%edx
 8070eb8:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070ebe:	89 10                	mov    %edx,(%eax)
 8070ec0:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070ec6:	8b 40 0c             	mov    0xc(%eax),%eax
 8070ec9:	8d 50 fe             	lea    -0x2(%eax),%edx
 8070ecc:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070ed2:	89 50 0c             	mov    %edx,0xc(%eax)
 8070ed5:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070edb:	8b 40 08             	mov    0x8(%eax),%eax
 8070ede:	8d 50 02             	lea    0x2(%eax),%edx
 8070ee1:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 8070ee7:	89 50 08             	mov    %edx,0x8(%eax)
 8070eea:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 8070ef0:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 8070ef6:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 8070efc:	8b 10                	mov    (%eax),%edx
 8070efe:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 8070f04:	8b 40 04             	mov    0x4(%eax),%eax
 8070f07:	89 c1                	mov    %eax,%ecx
 8070f09:	d3 ea                	shr    %cl,%edx
 8070f0b:	89 d0                	mov    %edx,%eax
 8070f0d:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 8070f13:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 8070f19:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 8070f1f:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8070f25:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 8070f2b:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 8070f31:	0f b6 c0             	movzbl %al,%eax
 8070f34:	c1 e0 02             	shl    $0x2,%eax
 8070f37:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 8070f3d:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 8070f43:	0f b6 00             	movzbl (%eax),%eax
 8070f46:	3c 08                	cmp    $0x8,%al
 8070f48:	0f 86 83 00 00 00    	jbe    8070fd1 <SafeDecodeDistanceBlockSwitch+0x2af>
 8070f4e:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 8070f54:	0f b6 00             	movzbl (%eax),%eax
 8070f57:	0f b6 c0             	movzbl %al,%eax
 8070f5a:	83 e8 08             	sub    $0x8,%eax
 8070f5d:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 8070f63:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8070f69:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 8070f6f:	c7 85 1c fe ff ff 08 	movl   $0x8,-0x1e4(%ebp)
 8070f76:	00 00 00 
 8070f79:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 8070f7f:	8b 50 04             	mov    0x4(%eax),%edx
 8070f82:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 8070f88:	01 c2                	add    %eax,%edx
 8070f8a:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 8070f90:	89 50 04             	mov    %edx,0x4(%eax)
 8070f93:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 8070f99:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8070f9d:	0f b7 d0             	movzwl %ax,%edx
 8070fa0:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 8070fa6:	c1 e8 08             	shr    $0x8,%eax
 8070fa9:	89 c1                	mov    %eax,%ecx
 8070fab:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 8070fb1:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 8070fb7:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 8070fbd:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8070fc4:	21 c8                	and    %ecx,%eax
 8070fc6:	01 d0                	add    %edx,%eax
 8070fc8:	c1 e0 02             	shl    $0x2,%eax
 8070fcb:	01 85 0c fe ff ff    	add    %eax,-0x1f4(%ebp)
 8070fd1:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 8070fd7:	0f b6 00             	movzbl (%eax),%eax
 8070fda:	0f b6 c0             	movzbl %al,%eax
 8070fdd:	8b 95 10 fe ff ff    	mov    -0x1f0(%ebp),%edx
 8070fe3:	89 95 24 fe ff ff    	mov    %edx,-0x1dc(%ebp)
 8070fe9:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 8070fef:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 8070ff5:	8b 50 04             	mov    0x4(%eax),%edx
 8070ff8:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 8070ffe:	01 c2                	add    %eax,%edx
 8071000:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 8071006:	89 50 04             	mov    %edx,0x4(%eax)
 8071009:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 807100f:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8071013:	0f b7 c0             	movzwl %ax,%eax
 8071016:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 807101c:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 8071022:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 8071028:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 807102e:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 8071034:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807103a:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 8071040:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 8071046:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 807104c:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 8071052:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 8071058:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 807105e:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 8071064:	c7 85 44 fe ff ff 10 	movl   $0x10,-0x1bc(%ebp)
 807106b:	00 00 00 
 807106e:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8071074:	8b 40 04             	mov    0x4(%eax),%eax
 8071077:	83 f8 0f             	cmp    $0xf,%eax
 807107a:	0f 86 86 00 00 00    	jbe    8071106 <SafeDecodeDistanceBlockSwitch+0x3e4>
 8071080:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8071086:	8b 00                	mov    (%eax),%eax
 8071088:	c1 e8 10             	shr    $0x10,%eax
 807108b:	89 c2                	mov    %eax,%edx
 807108d:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8071093:	89 10                	mov    %edx,(%eax)
 8071095:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807109b:	8b 40 04             	mov    0x4(%eax),%eax
 807109e:	83 f0 10             	xor    $0x10,%eax
 80710a1:	89 c2                	mov    %eax,%edx
 80710a3:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710a9:	89 50 04             	mov    %edx,0x4(%eax)
 80710ac:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710b2:	8b 10                	mov    (%eax),%edx
 80710b4:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710ba:	8b 40 08             	mov    0x8(%eax),%eax
 80710bd:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 80710c3:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 80710c9:	0f b7 00             	movzwl (%eax),%eax
 80710cc:	0f b7 c0             	movzwl %ax,%eax
 80710cf:	c1 e0 10             	shl    $0x10,%eax
 80710d2:	09 c2                	or     %eax,%edx
 80710d4:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710da:	89 10                	mov    %edx,(%eax)
 80710dc:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710e2:	8b 40 0c             	mov    0xc(%eax),%eax
 80710e5:	8d 50 fe             	lea    -0x2(%eax),%edx
 80710e8:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710ee:	89 50 0c             	mov    %edx,0xc(%eax)
 80710f1:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80710f7:	8b 40 08             	mov    0x8(%eax),%eax
 80710fa:	8d 50 02             	lea    0x2(%eax),%edx
 80710fd:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8071103:	89 50 08             	mov    %edx,0x8(%eax)
 8071106:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 807110c:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 8071112:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 8071118:	8b 10                	mov    (%eax),%edx
 807111a:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 8071120:	8b 40 04             	mov    0x4(%eax),%eax
 8071123:	89 c1                	mov    %eax,%ecx
 8071125:	d3 ea                	shr    %cl,%edx
 8071127:	89 d0                	mov    %edx,%eax
 8071129:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 807112f:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 8071135:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 807113b:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 8071141:	89 85 58 fe ff ff    	mov    %eax,-0x1a8(%ebp)
 8071147:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 807114d:	0f b6 c0             	movzbl %al,%eax
 8071150:	c1 e0 02             	shl    $0x2,%eax
 8071153:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 8071159:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807115f:	0f b6 00             	movzbl (%eax),%eax
 8071162:	3c 08                	cmp    $0x8,%al
 8071164:	0f 86 83 00 00 00    	jbe    80711ed <SafeDecodeDistanceBlockSwitch+0x4cb>
 807116a:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 8071170:	0f b6 00             	movzbl (%eax),%eax
 8071173:	0f b6 c0             	movzbl %al,%eax
 8071176:	83 e8 08             	sub    $0x8,%eax
 8071179:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 807117f:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 8071185:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 807118b:	c7 85 64 fe ff ff 08 	movl   $0x8,-0x19c(%ebp)
 8071192:	00 00 00 
 8071195:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807119b:	8b 50 04             	mov    0x4(%eax),%edx
 807119e:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 80711a4:	01 c2                	add    %eax,%edx
 80711a6:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 80711ac:	89 50 04             	mov    %edx,0x4(%eax)
 80711af:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 80711b5:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80711b9:	0f b7 d0             	movzwl %ax,%edx
 80711bc:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 80711c2:	c1 e8 08             	shr    $0x8,%eax
 80711c5:	89 c1                	mov    %eax,%ecx
 80711c7:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 80711cd:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 80711d3:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 80711d9:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80711e0:	21 c8                	and    %ecx,%eax
 80711e2:	01 d0                	add    %edx,%eax
 80711e4:	c1 e0 02             	shl    $0x2,%eax
 80711e7:	01 85 54 fe ff ff    	add    %eax,-0x1ac(%ebp)
 80711ed:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 80711f3:	0f b6 00             	movzbl (%eax),%eax
 80711f6:	0f b6 c0             	movzbl %al,%eax
 80711f9:	8b 95 58 fe ff ff    	mov    -0x1a8(%ebp),%edx
 80711ff:	89 95 6c fe ff ff    	mov    %edx,-0x194(%ebp)
 8071205:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 807120b:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 8071211:	8b 50 04             	mov    0x4(%eax),%edx
 8071214:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 807121a:	01 c2                	add    %eax,%edx
 807121c:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 8071222:	89 50 04             	mov    %edx,0x4(%eax)
 8071225:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807122b:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807122f:	0f b7 c0             	movzwl %ax,%eax
 8071232:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 8071238:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807123e:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 8071245:	ff 
 8071246:	0f b6 c0             	movzbl %al,%eax
 8071249:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 807124f:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 8071255:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 807125c:	ff 
 807125d:	0f b7 d0             	movzwl %ax,%edx
 8071260:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 8071266:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 807126c:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8071272:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 8071278:	83 bd 80 fe ff ff 10 	cmpl   $0x10,-0x180(%ebp)
 807127f:	0f 87 53 01 00 00    	ja     80713d8 <SafeDecodeDistanceBlockSwitch+0x6b6>
 8071285:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807128b:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 8071291:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8071297:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 807129d:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712a3:	8b 40 04             	mov    0x4(%eax),%eax
 80712a6:	83 f8 0f             	cmp    $0xf,%eax
 80712a9:	0f 86 86 00 00 00    	jbe    8071335 <SafeDecodeDistanceBlockSwitch+0x613>
 80712af:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712b5:	8b 00                	mov    (%eax),%eax
 80712b7:	c1 e8 10             	shr    $0x10,%eax
 80712ba:	89 c1                	mov    %eax,%ecx
 80712bc:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712c2:	89 08                	mov    %ecx,(%eax)
 80712c4:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712ca:	8b 40 04             	mov    0x4(%eax),%eax
 80712cd:	83 f0 10             	xor    $0x10,%eax
 80712d0:	89 c1                	mov    %eax,%ecx
 80712d2:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712d8:	89 48 04             	mov    %ecx,0x4(%eax)
 80712db:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712e1:	8b 08                	mov    (%eax),%ecx
 80712e3:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80712e9:	8b 40 08             	mov    0x8(%eax),%eax
 80712ec:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 80712f2:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 80712f8:	0f b7 00             	movzwl (%eax),%eax
 80712fb:	0f b7 c0             	movzwl %ax,%eax
 80712fe:	c1 e0 10             	shl    $0x10,%eax
 8071301:	09 c1                	or     %eax,%ecx
 8071303:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8071309:	89 08                	mov    %ecx,(%eax)
 807130b:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8071311:	8b 40 0c             	mov    0xc(%eax),%eax
 8071314:	8d 48 fe             	lea    -0x2(%eax),%ecx
 8071317:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807131d:	89 48 0c             	mov    %ecx,0xc(%eax)
 8071320:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8071326:	8b 40 08             	mov    0x8(%eax),%eax
 8071329:	8d 48 02             	lea    0x2(%eax),%ecx
 807132c:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 8071332:	89 48 08             	mov    %ecx,0x8(%eax)
 8071335:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807133b:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 8071341:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8071347:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 807134d:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8071350:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 8071356:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807135c:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 8071362:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 8071368:	8b 30                	mov    (%eax),%esi
 807136a:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 8071370:	8b 40 04             	mov    0x4(%eax),%eax
 8071373:	89 c1                	mov    %eax,%ecx
 8071375:	d3 ee                	shr    %cl,%esi
 8071377:	89 f0                	mov    %esi,%eax
 8071379:	89 c1                	mov    %eax,%ecx
 807137b:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 8071381:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 8071387:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 807138d:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8071394:	21 c1                	and    %eax,%ecx
 8071396:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 807139c:	89 08                	mov    %ecx,(%eax)
 807139e:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 80713a4:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 80713aa:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 80713b0:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 80713b6:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 80713bc:	8b 48 04             	mov    0x4(%eax),%ecx
 80713bf:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 80713c5:	01 c1                	add    %eax,%ecx
 80713c7:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 80713cd:	89 48 04             	mov    %ecx,0x4(%eax)
 80713d0:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80713d3:	e9 a6 02 00 00       	jmp    807167e <SafeDecodeDistanceBlockSwitch+0x95c>
 80713d8:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 80713de:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 80713e4:	c7 85 b0 fe ff ff 10 	movl   $0x10,-0x150(%ebp)
 80713eb:	00 00 00 
 80713ee:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 80713f4:	8b 40 04             	mov    0x4(%eax),%eax
 80713f7:	83 f8 0f             	cmp    $0xf,%eax
 80713fa:	0f 86 86 00 00 00    	jbe    8071486 <SafeDecodeDistanceBlockSwitch+0x764>
 8071400:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071406:	8b 00                	mov    (%eax),%eax
 8071408:	c1 e8 10             	shr    $0x10,%eax
 807140b:	89 c1                	mov    %eax,%ecx
 807140d:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071413:	89 08                	mov    %ecx,(%eax)
 8071415:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807141b:	8b 40 04             	mov    0x4(%eax),%eax
 807141e:	83 f0 10             	xor    $0x10,%eax
 8071421:	89 c1                	mov    %eax,%ecx
 8071423:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071429:	89 48 04             	mov    %ecx,0x4(%eax)
 807142c:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071432:	8b 08                	mov    (%eax),%ecx
 8071434:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807143a:	8b 40 08             	mov    0x8(%eax),%eax
 807143d:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 8071443:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8071449:	0f b7 00             	movzwl (%eax),%eax
 807144c:	0f b7 c0             	movzwl %ax,%eax
 807144f:	c1 e0 10             	shl    $0x10,%eax
 8071452:	09 c1                	or     %eax,%ecx
 8071454:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807145a:	89 08                	mov    %ecx,(%eax)
 807145c:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071462:	8b 40 0c             	mov    0xc(%eax),%eax
 8071465:	8d 48 fe             	lea    -0x2(%eax),%ecx
 8071468:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807146e:	89 48 0c             	mov    %ecx,0xc(%eax)
 8071471:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071477:	8b 40 08             	mov    0x8(%eax),%eax
 807147a:	8d 48 02             	lea    0x2(%eax),%ecx
 807147d:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8071483:	89 48 08             	mov    %ecx,0x8(%eax)
 8071486:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807148c:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 8071492:	c7 85 bc fe ff ff 10 	movl   $0x10,-0x144(%ebp)
 8071499:	00 00 00 
 807149c:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 80714a2:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 80714a8:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 80714ae:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 80714b4:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 80714ba:	8b 30                	mov    (%eax),%esi
 80714bc:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 80714c2:	8b 40 04             	mov    0x4(%eax),%eax
 80714c5:	89 c1                	mov    %eax,%ecx
 80714c7:	d3 ee                	shr    %cl,%esi
 80714c9:	89 f0                	mov    %esi,%eax
 80714cb:	89 c1                	mov    %eax,%ecx
 80714cd:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 80714d3:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 80714d9:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 80714df:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80714e6:	21 c1                	and    %eax,%ecx
 80714e8:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 80714ee:	89 08                	mov    %ecx,(%eax)
 80714f0:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 80714f6:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 80714fc:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 8071502:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 8071508:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807150e:	8b 48 04             	mov    0x4(%eax),%ecx
 8071511:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8071517:	01 c1                	add    %eax,%ecx
 8071519:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807151f:	89 48 04             	mov    %ecx,0x4(%eax)
 8071522:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 8071528:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 807152e:	c7 85 d8 fe ff ff 08 	movl   $0x8,-0x128(%ebp)
 8071535:	00 00 00 
 8071538:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807153e:	8b 40 04             	mov    0x4(%eax),%eax
 8071541:	83 f8 0f             	cmp    $0xf,%eax
 8071544:	0f 86 86 00 00 00    	jbe    80715d0 <SafeDecodeDistanceBlockSwitch+0x8ae>
 807154a:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8071550:	8b 00                	mov    (%eax),%eax
 8071552:	c1 e8 10             	shr    $0x10,%eax
 8071555:	89 c1                	mov    %eax,%ecx
 8071557:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807155d:	89 08                	mov    %ecx,(%eax)
 807155f:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8071565:	8b 40 04             	mov    0x4(%eax),%eax
 8071568:	83 f0 10             	xor    $0x10,%eax
 807156b:	89 c1                	mov    %eax,%ecx
 807156d:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8071573:	89 48 04             	mov    %ecx,0x4(%eax)
 8071576:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807157c:	8b 08                	mov    (%eax),%ecx
 807157e:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 8071584:	8b 40 08             	mov    0x8(%eax),%eax
 8071587:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 807158d:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 8071593:	0f b7 00             	movzwl (%eax),%eax
 8071596:	0f b7 c0             	movzwl %ax,%eax
 8071599:	c1 e0 10             	shl    $0x10,%eax
 807159c:	09 c1                	or     %eax,%ecx
 807159e:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80715a4:	89 08                	mov    %ecx,(%eax)
 80715a6:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80715ac:	8b 40 0c             	mov    0xc(%eax),%eax
 80715af:	8d 48 fe             	lea    -0x2(%eax),%ecx
 80715b2:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80715b8:	89 48 0c             	mov    %ecx,0xc(%eax)
 80715bb:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80715c1:	8b 40 08             	mov    0x8(%eax),%eax
 80715c4:	8d 48 02             	lea    0x2(%eax),%ecx
 80715c7:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 80715cd:	89 48 08             	mov    %ecx,0x8(%eax)
 80715d0:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 80715d6:	8d 48 f0             	lea    -0x10(%eax),%ecx
 80715d9:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 80715df:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 80715e5:	89 8d e4 fe ff ff    	mov    %ecx,-0x11c(%ebp)
 80715eb:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80715ee:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 80715f4:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 80715fa:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8071600:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 8071606:	8b 30                	mov    (%eax),%esi
 8071608:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 807160e:	8b 40 04             	mov    0x4(%eax),%eax
 8071611:	89 c1                	mov    %eax,%ecx
 8071613:	d3 ee                	shr    %cl,%esi
 8071615:	89 f0                	mov    %esi,%eax
 8071617:	89 c1                	mov    %eax,%ecx
 8071619:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 807161f:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8071625:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807162b:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8071632:	21 c1                	and    %eax,%ecx
 8071634:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 807163a:	89 08                	mov    %ecx,(%eax)
 807163c:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 8071642:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8071648:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 807164e:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 8071654:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 807165a:	8b 48 04             	mov    0x4(%eax),%ecx
 807165d:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8071663:	01 c1                	add    %eax,%ecx
 8071665:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 807166b:	89 48 04             	mov    %ecx,0x4(%eax)
 807166e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8071671:	c1 e0 10             	shl    $0x10,%eax
 8071674:	89 c1                	mov    %eax,%ecx
 8071676:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807167c:	09 c8                	or     %ecx,%eax
 807167e:	01 d0                	add    %edx,%eax
 8071680:	89 c2                	mov    %eax,%edx
 8071682:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8071688:	8b 8d d4 fd ff ff    	mov    -0x22c(%ebp),%ecx
 807168e:	83 c1 2c             	add    $0x2c,%ecx
 8071691:	89 54 88 0c          	mov    %edx,0xc(%eax,%ecx,4)
 8071695:	e9 e5 07 00 00       	jmp    8071e7f <SafeDecodeDistanceBlockSwitch+0x115d>
 807169a:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80716a0:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 80716a6:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80716a9:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 80716af:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 80716b5:	8b 10                	mov    (%eax),%edx
 80716b7:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 80716bd:	89 10                	mov    %edx,(%eax)
 80716bf:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 80716c5:	8b 50 04             	mov    0x4(%eax),%edx
 80716c8:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 80716ce:	89 50 04             	mov    %edx,0x4(%eax)
 80716d1:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 80716d7:	8b 50 08             	mov    0x8(%eax),%edx
 80716da:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 80716e0:	89 50 08             	mov    %edx,0x8(%eax)
 80716e3:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 80716e9:	8b 50 0c             	mov    0xc(%eax),%edx
 80716ec:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 80716f2:	89 50 0c             	mov    %edx,0xc(%eax)
 80716f5:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 80716fb:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 8071701:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8071707:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 807170d:	8d 85 b8 fd ff ff    	lea    -0x248(%ebp),%eax
 8071713:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 8071719:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 807171f:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 8071725:	c7 85 14 ff ff ff 0f 	movl   $0xf,-0xec(%ebp)
 807172c:	00 00 00 
 807172f:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 8071735:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 807173b:	e9 a8 00 00 00       	jmp    80717e8 <SafeDecodeDistanceBlockSwitch+0xac6>
 8071740:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 8071746:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 807174c:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8071752:	8b 40 0c             	mov    0xc(%eax),%eax
 8071755:	85 c0                	test   %eax,%eax
 8071757:	75 07                	jne    8071760 <SafeDecodeDistanceBlockSwitch+0xa3e>
 8071759:	b8 00 00 00 00       	mov    $0x0,%eax
 807175e:	eb 7d                	jmp    80717dd <SafeDecodeDistanceBlockSwitch+0xabb>
 8071760:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8071766:	8b 00                	mov    (%eax),%eax
 8071768:	c1 e8 08             	shr    $0x8,%eax
 807176b:	89 c2                	mov    %eax,%edx
 807176d:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8071773:	89 10                	mov    %edx,(%eax)
 8071775:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807177b:	8b 10                	mov    (%eax),%edx
 807177d:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8071783:	8b 40 08             	mov    0x8(%eax),%eax
 8071786:	0f b6 00             	movzbl (%eax),%eax
 8071789:	0f b6 c0             	movzbl %al,%eax
 807178c:	c1 e0 18             	shl    $0x18,%eax
 807178f:	09 c2                	or     %eax,%edx
 8071791:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8071797:	89 10                	mov    %edx,(%eax)
 8071799:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807179f:	8b 40 04             	mov    0x4(%eax),%eax
 80717a2:	8d 50 f8             	lea    -0x8(%eax),%edx
 80717a5:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 80717ab:	89 50 04             	mov    %edx,0x4(%eax)
 80717ae:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 80717b4:	8b 40 0c             	mov    0xc(%eax),%eax
 80717b7:	8d 50 ff             	lea    -0x1(%eax),%edx
 80717ba:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 80717c0:	89 50 0c             	mov    %edx,0xc(%eax)
 80717c3:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 80717c9:	8b 40 08             	mov    0x8(%eax),%eax
 80717cc:	8d 50 01             	lea    0x1(%eax),%edx
 80717cf:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 80717d5:	89 50 08             	mov    %edx,0x8(%eax)
 80717d8:	b8 01 00 00 00       	mov    $0x1,%eax
 80717dd:	85 c0                	test   %eax,%eax
 80717df:	75 07                	jne    80717e8 <SafeDecodeDistanceBlockSwitch+0xac6>
 80717e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80717e6:	eb 77                	jmp    807185f <SafeDecodeDistanceBlockSwitch+0xb3d>
 80717e8:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 80717ee:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 80717f4:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 80717fa:	8b 40 04             	mov    0x4(%eax),%eax
 80717fd:	ba 20 00 00 00       	mov    $0x20,%edx
 8071802:	29 c2                	sub    %eax,%edx
 8071804:	89 d0                	mov    %edx,%eax
 8071806:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%ebp)
 807180c:	0f 87 2e ff ff ff    	ja     8071740 <SafeDecodeDistanceBlockSwitch+0xa1e>
 8071812:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 8071818:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 807181e:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 8071824:	8b 10                	mov    (%eax),%edx
 8071826:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 807182c:	8b 40 04             	mov    0x4(%eax),%eax
 807182f:	89 c1                	mov    %eax,%ecx
 8071831:	d3 ea                	shr    %cl,%edx
 8071833:	89 d0                	mov    %edx,%eax
 8071835:	89 c2                	mov    %eax,%edx
 8071837:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 807183d:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 8071843:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 8071849:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8071850:	21 c2                	and    %eax,%edx
 8071852:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 8071858:	89 10                	mov    %edx,(%eax)
 807185a:	b8 01 00 00 00       	mov    $0x1,%eax
 807185f:	85 c0                	test   %eax,%eax
 8071861:	0f 95 c0             	setne  %al
 8071864:	0f b6 c0             	movzbl %al,%eax
 8071867:	85 c0                	test   %eax,%eax
 8071869:	0f 84 20 01 00 00    	je     807198f <SafeDecodeDistanceBlockSwitch+0xc6d>
 807186f:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8071875:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 807187b:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8071881:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 8071887:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 807188d:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 8071893:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 8071899:	0f b6 c0             	movzbl %al,%eax
 807189c:	c1 e0 02             	shl    $0x2,%eax
 807189f:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 80718a5:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 80718ab:	0f b6 00             	movzbl (%eax),%eax
 80718ae:	3c 08                	cmp    $0x8,%al
 80718b0:	0f 86 83 00 00 00    	jbe    8071939 <SafeDecodeDistanceBlockSwitch+0xc17>
 80718b6:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 80718bc:	0f b6 00             	movzbl (%eax),%eax
 80718bf:	0f b6 c0             	movzbl %al,%eax
 80718c2:	83 e8 08             	sub    $0x8,%eax
 80718c5:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 80718cb:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 80718d1:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 80718d7:	c7 85 40 ff ff ff 08 	movl   $0x8,-0xc0(%ebp)
 80718de:	00 00 00 
 80718e1:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 80718e7:	8b 50 04             	mov    0x4(%eax),%edx
 80718ea:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 80718f0:	01 c2                	add    %eax,%edx
 80718f2:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 80718f8:	89 50 04             	mov    %edx,0x4(%eax)
 80718fb:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8071901:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8071905:	0f b7 d0             	movzwl %ax,%edx
 8071908:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 807190e:	c1 e8 08             	shr    $0x8,%eax
 8071911:	89 c1                	mov    %eax,%ecx
 8071913:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 8071919:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 807191f:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8071925:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807192c:	21 c8                	and    %ecx,%eax
 807192e:	01 d0                	add    %edx,%eax
 8071930:	c1 e0 02             	shl    $0x2,%eax
 8071933:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
 8071939:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 807193f:	0f b6 00             	movzbl (%eax),%eax
 8071942:	0f b6 c0             	movzbl %al,%eax
 8071945:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
 807194b:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
 8071951:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 8071957:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807195d:	8b 50 04             	mov    0x4(%eax),%edx
 8071960:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 8071966:	01 c2                	add    %eax,%edx
 8071968:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807196e:	89 50 04             	mov    %edx,0x4(%eax)
 8071971:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8071977:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807197b:	0f b7 c0             	movzwl %ax,%eax
 807197e:	89 c2                	mov    %eax,%edx
 8071980:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 8071986:	89 10                	mov    %edx,(%eax)
 8071988:	b8 01 00 00 00       	mov    $0x1,%eax
 807198d:	eb 22                	jmp    80719b1 <SafeDecodeDistanceBlockSwitch+0xc8f>
 807198f:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 8071995:	89 44 24 08          	mov    %eax,0x8(%esp)
 8071999:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 807199f:	89 44 24 04          	mov    %eax,0x4(%esp)
 80719a3:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 80719a9:	89 04 24             	mov    %eax,(%esp)
 80719ac:	e8 1b 70 ff ff       	call   80689cc <SafeDecodeSymbol>
 80719b1:	85 c0                	test   %eax,%eax
 80719b3:	75 0a                	jne    80719bf <SafeDecodeDistanceBlockSwitch+0xc9d>
 80719b5:	b8 00 00 00 00       	mov    $0x0,%eax
 80719ba:	e9 51 05 00 00       	jmp    8071f10 <SafeDecodeDistanceBlockSwitch+0x11ee>
 80719bf:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 80719c5:	83 c0 2c             	add    $0x2c,%eax
 80719c8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80719cf:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 80719d5:	01 d0                	add    %edx,%eax
 80719d7:	8d 50 0c             	lea    0xc(%eax),%edx
 80719da:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 80719e0:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 80719e6:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
 80719ec:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 80719f2:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 80719f8:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80719fe:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 8071a04:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8071a0a:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 8071a10:	85 c0                	test   %eax,%eax
 8071a12:	0f 85 63 02 00 00    	jne    8071c7b <SafeDecodeDistanceBlockSwitch+0xf59>
 8071a18:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8071a1e:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8071a24:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 8071a2a:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 8071a30:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax
 8071a36:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 8071a3c:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8071a42:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 8071a48:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%ebp)
 8071a4f:	00 00 00 
 8071a52:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 8071a58:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 8071a5e:	e9 a8 00 00 00       	jmp    8071b0b <SafeDecodeDistanceBlockSwitch+0xde9>
 8071a63:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8071a69:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8071a6f:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071a75:	8b 40 0c             	mov    0xc(%eax),%eax
 8071a78:	85 c0                	test   %eax,%eax
 8071a7a:	75 07                	jne    8071a83 <SafeDecodeDistanceBlockSwitch+0xd61>
 8071a7c:	b8 00 00 00 00       	mov    $0x0,%eax
 8071a81:	eb 7d                	jmp    8071b00 <SafeDecodeDistanceBlockSwitch+0xdde>
 8071a83:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071a89:	8b 00                	mov    (%eax),%eax
 8071a8b:	c1 e8 08             	shr    $0x8,%eax
 8071a8e:	89 c2                	mov    %eax,%edx
 8071a90:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071a96:	89 10                	mov    %edx,(%eax)
 8071a98:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071a9e:	8b 10                	mov    (%eax),%edx
 8071aa0:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071aa6:	8b 40 08             	mov    0x8(%eax),%eax
 8071aa9:	0f b6 00             	movzbl (%eax),%eax
 8071aac:	0f b6 c0             	movzbl %al,%eax
 8071aaf:	c1 e0 18             	shl    $0x18,%eax
 8071ab2:	09 c2                	or     %eax,%edx
 8071ab4:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071aba:	89 10                	mov    %edx,(%eax)
 8071abc:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071ac2:	8b 40 04             	mov    0x4(%eax),%eax
 8071ac5:	8d 50 f8             	lea    -0x8(%eax),%edx
 8071ac8:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071ace:	89 50 04             	mov    %edx,0x4(%eax)
 8071ad1:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071ad7:	8b 40 0c             	mov    0xc(%eax),%eax
 8071ada:	8d 50 ff             	lea    -0x1(%eax),%edx
 8071add:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071ae3:	89 50 0c             	mov    %edx,0xc(%eax)
 8071ae6:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071aec:	8b 40 08             	mov    0x8(%eax),%eax
 8071aef:	8d 50 01             	lea    0x1(%eax),%edx
 8071af2:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8071af8:	89 50 08             	mov    %edx,0x8(%eax)
 8071afb:	b8 01 00 00 00       	mov    $0x1,%eax
 8071b00:	85 c0                	test   %eax,%eax
 8071b02:	75 07                	jne    8071b0b <SafeDecodeDistanceBlockSwitch+0xde9>
 8071b04:	b8 00 00 00 00       	mov    $0x0,%eax
 8071b09:	eb 68                	jmp    8071b73 <SafeDecodeDistanceBlockSwitch+0xe51>
 8071b0b:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8071b11:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8071b17:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8071b1d:	8b 40 04             	mov    0x4(%eax),%eax
 8071b20:	ba 20 00 00 00       	mov    $0x20,%edx
 8071b25:	29 c2                	sub    %eax,%edx
 8071b27:	89 d0                	mov    %edx,%eax
 8071b29:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%ebp)
 8071b2f:	0f 87 2e ff ff ff    	ja     8071a63 <SafeDecodeDistanceBlockSwitch+0xd41>
 8071b35:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8071b3b:	89 45 80             	mov    %eax,-0x80(%ebp)
 8071b3e:	8b 45 80             	mov    -0x80(%ebp),%eax
 8071b41:	8b 10                	mov    (%eax),%edx
 8071b43:	8b 45 80             	mov    -0x80(%ebp),%eax
 8071b46:	8b 40 04             	mov    0x4(%eax),%eax
 8071b49:	89 c1                	mov    %eax,%ecx
 8071b4b:	d3 ea                	shr    %cl,%edx
 8071b4d:	89 d0                	mov    %edx,%eax
 8071b4f:	89 c2                	mov    %eax,%edx
 8071b51:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8071b57:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8071b5a:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8071b5d:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8071b64:	21 c2                	and    %eax,%edx
 8071b66:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8071b6c:	89 10                	mov    %edx,(%eax)
 8071b6e:	b8 01 00 00 00       	mov    $0x1,%eax
 8071b73:	85 c0                	test   %eax,%eax
 8071b75:	0f 95 c0             	setne  %al
 8071b78:	0f b6 c0             	movzbl %al,%eax
 8071b7b:	85 c0                	test   %eax,%eax
 8071b7d:	0f 84 c8 00 00 00    	je     8071c4b <SafeDecodeDistanceBlockSwitch+0xf29>
 8071b83:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8071b89:	89 45 88             	mov    %eax,-0x78(%ebp)
 8071b8c:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8071b92:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8071b95:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8071b9b:	89 45 90             	mov    %eax,-0x70(%ebp)
 8071b9e:	8b 45 88             	mov    -0x78(%ebp),%eax
 8071ba1:	0f b6 c0             	movzbl %al,%eax
 8071ba4:	c1 e0 02             	shl    $0x2,%eax
 8071ba7:	01 45 8c             	add    %eax,-0x74(%ebp)
 8071baa:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8071bad:	0f b6 00             	movzbl (%eax),%eax
 8071bb0:	3c 08                	cmp    $0x8,%al
 8071bb2:	76 59                	jbe    8071c0d <SafeDecodeDistanceBlockSwitch+0xeeb>
 8071bb4:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8071bb7:	0f b6 00             	movzbl (%eax),%eax
 8071bba:	0f b6 c0             	movzbl %al,%eax
 8071bbd:	83 e8 08             	sub    $0x8,%eax
 8071bc0:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8071bc3:	8b 45 90             	mov    -0x70(%ebp),%eax
 8071bc6:	89 45 98             	mov    %eax,-0x68(%ebp)
 8071bc9:	c7 45 9c 08 00 00 00 	movl   $0x8,-0x64(%ebp)
 8071bd0:	8b 45 98             	mov    -0x68(%ebp),%eax
 8071bd3:	8b 50 04             	mov    0x4(%eax),%edx
 8071bd6:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8071bd9:	01 c2                	add    %eax,%edx
 8071bdb:	8b 45 98             	mov    -0x68(%ebp),%eax
 8071bde:	89 50 04             	mov    %edx,0x4(%eax)
 8071be1:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8071be4:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8071be8:	0f b7 d0             	movzwl %ax,%edx
 8071beb:	8b 45 88             	mov    -0x78(%ebp),%eax
 8071bee:	c1 e8 08             	shr    $0x8,%eax
 8071bf1:	89 c1                	mov    %eax,%ecx
 8071bf3:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8071bf6:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8071bf9:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8071bfc:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8071c03:	21 c8                	and    %ecx,%eax
 8071c05:	01 d0                	add    %edx,%eax
 8071c07:	c1 e0 02             	shl    $0x2,%eax
 8071c0a:	01 45 8c             	add    %eax,-0x74(%ebp)
 8071c0d:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8071c10:	0f b6 00             	movzbl (%eax),%eax
 8071c13:	0f b6 c0             	movzbl %al,%eax
 8071c16:	8b 55 90             	mov    -0x70(%ebp),%edx
 8071c19:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 8071c1c:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8071c1f:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8071c22:	8b 50 04             	mov    0x4(%eax),%edx
 8071c25:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8071c28:	01 c2                	add    %eax,%edx
 8071c2a:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8071c2d:	89 50 04             	mov    %edx,0x4(%eax)
 8071c30:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8071c33:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8071c37:	0f b7 c0             	movzwl %ax,%eax
 8071c3a:	89 c2                	mov    %eax,%edx
 8071c3c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8071c42:	89 10                	mov    %edx,(%eax)
 8071c44:	b8 01 00 00 00       	mov    $0x1,%eax
 8071c49:	eb 22                	jmp    8071c6d <SafeDecodeDistanceBlockSwitch+0xf4b>
 8071c4b:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8071c51:	89 44 24 08          	mov    %eax,0x8(%esp)
 8071c55:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8071c5b:	89 44 24 04          	mov    %eax,0x4(%esp)
 8071c5f:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8071c65:	89 04 24             	mov    %eax,(%esp)
 8071c68:	e8 5f 6d ff ff       	call   80689cc <SafeDecodeSymbol>
 8071c6d:	85 c0                	test   %eax,%eax
 8071c6f:	75 1c                	jne    8071c8d <SafeDecodeDistanceBlockSwitch+0xf6b>
 8071c71:	b8 00 00 00 00       	mov    $0x0,%eax
 8071c76:	e9 a9 01 00 00       	jmp    8071e24 <SafeDecodeDistanceBlockSwitch+0x1102>
 8071c7b:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8071c81:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 8071c87:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 8071c8d:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8071c93:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 8071c9a:	ff 
 8071c9b:	0f b6 c0             	movzbl %al,%eax
 8071c9e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8071ca1:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 8071ca7:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8071caa:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8071cad:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8071cb0:	8d 85 c0 fd ff ff    	lea    -0x240(%ebp),%eax
 8071cb6:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8071cb9:	e9 81 00 00 00       	jmp    8071d3f <SafeDecodeDistanceBlockSwitch+0x101d>
 8071cbe:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8071cc1:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8071cc4:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071cc7:	8b 40 0c             	mov    0xc(%eax),%eax
 8071cca:	85 c0                	test   %eax,%eax
 8071ccc:	75 07                	jne    8071cd5 <SafeDecodeDistanceBlockSwitch+0xfb3>
 8071cce:	b8 00 00 00 00       	mov    $0x0,%eax
 8071cd3:	eb 5c                	jmp    8071d31 <SafeDecodeDistanceBlockSwitch+0x100f>
 8071cd5:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071cd8:	8b 00                	mov    (%eax),%eax
 8071cda:	c1 e8 08             	shr    $0x8,%eax
 8071cdd:	89 c2                	mov    %eax,%edx
 8071cdf:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071ce2:	89 10                	mov    %edx,(%eax)
 8071ce4:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071ce7:	8b 10                	mov    (%eax),%edx
 8071ce9:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071cec:	8b 40 08             	mov    0x8(%eax),%eax
 8071cef:	0f b6 00             	movzbl (%eax),%eax
 8071cf2:	0f b6 c0             	movzbl %al,%eax
 8071cf5:	c1 e0 18             	shl    $0x18,%eax
 8071cf8:	09 c2                	or     %eax,%edx
 8071cfa:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071cfd:	89 10                	mov    %edx,(%eax)
 8071cff:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071d02:	8b 40 04             	mov    0x4(%eax),%eax
 8071d05:	8d 50 f8             	lea    -0x8(%eax),%edx
 8071d08:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071d0b:	89 50 04             	mov    %edx,0x4(%eax)
 8071d0e:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071d11:	8b 40 0c             	mov    0xc(%eax),%eax
 8071d14:	8d 50 ff             	lea    -0x1(%eax),%edx
 8071d17:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071d1a:	89 50 0c             	mov    %edx,0xc(%eax)
 8071d1d:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071d20:	8b 40 08             	mov    0x8(%eax),%eax
 8071d23:	8d 50 01             	lea    0x1(%eax),%edx
 8071d26:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8071d29:	89 50 08             	mov    %edx,0x8(%eax)
 8071d2c:	b8 01 00 00 00       	mov    $0x1,%eax
 8071d31:	85 c0                	test   %eax,%eax
 8071d33:	75 0a                	jne    8071d3f <SafeDecodeDistanceBlockSwitch+0x101d>
 8071d35:	b8 00 00 00 00       	mov    $0x0,%eax
 8071d3a:	e9 82 00 00 00       	jmp    8071dc1 <SafeDecodeDistanceBlockSwitch+0x109f>
 8071d3f:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8071d42:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8071d45:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8071d48:	8b 40 04             	mov    0x4(%eax),%eax
 8071d4b:	ba 20 00 00 00       	mov    $0x20,%edx
 8071d50:	29 c2                	sub    %eax,%edx
 8071d52:	89 d0                	mov    %edx,%eax
 8071d54:	39 45 b4             	cmp    %eax,-0x4c(%ebp)
 8071d57:	0f 87 61 ff ff ff    	ja     8071cbe <SafeDecodeDistanceBlockSwitch+0xf9c>
 8071d5d:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8071d60:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8071d63:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8071d66:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8071d69:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8071d6c:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8071d6f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8071d72:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8071d75:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8071d78:	8b 10                	mov    (%eax),%edx
 8071d7a:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8071d7d:	8b 40 04             	mov    0x4(%eax),%eax
 8071d80:	89 c1                	mov    %eax,%ecx
 8071d82:	d3 ea                	shr    %cl,%edx
 8071d84:	89 d0                	mov    %edx,%eax
 8071d86:	89 c2                	mov    %eax,%edx
 8071d88:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8071d8b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8071d8e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8071d91:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8071d98:	21 c2                	and    %eax,%edx
 8071d9a:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8071d9d:	89 10                	mov    %edx,(%eax)
 8071d9f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8071da2:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8071da5:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8071da8:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8071dab:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8071dae:	8b 50 04             	mov    0x4(%eax),%edx
 8071db1:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8071db4:	01 c2                	add    %eax,%edx
 8071db6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8071db9:	89 50 04             	mov    %edx,0x4(%eax)
 8071dbc:	b8 01 00 00 00       	mov    $0x1,%eax
 8071dc1:	85 c0                	test   %eax,%eax
 8071dc3:	75 29                	jne    8071dee <SafeDecodeDistanceBlockSwitch+0x10cc>
 8071dc5:	8b 95 bc fd ff ff    	mov    -0x244(%ebp),%edx
 8071dcb:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8071dd1:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 8071dd7:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8071ddd:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 8071de4:	00 00 00 
 8071de7:	b8 00 00 00 00       	mov    $0x0,%eax
 8071dec:	eb 36                	jmp    8071e24 <SafeDecodeDistanceBlockSwitch+0x1102>
 8071dee:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8071df4:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 8071dfb:	ff 
 8071dfc:	0f b7 d0             	movzwl %ax,%edx
 8071dff:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8071e05:	01 c2                	add    %eax,%edx
 8071e07:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8071e0d:	89 10                	mov    %edx,(%eax)
 8071e0f:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8071e15:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 8071e1c:	00 00 00 
 8071e1f:	b8 01 00 00 00       	mov    $0x1,%eax
 8071e24:	85 c0                	test   %eax,%eax
 8071e26:	75 57                	jne    8071e7f <SafeDecodeDistanceBlockSwitch+0x115d>
 8071e28:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8071e2e:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 8071e35:	00 00 00 
 8071e38:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8071e3e:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8071e41:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8071e44:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8071e47:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8071e4a:	8b 10                	mov    (%eax),%edx
 8071e4c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8071e4f:	89 10                	mov    %edx,(%eax)
 8071e51:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8071e54:	8b 50 04             	mov    0x4(%eax),%edx
 8071e57:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8071e5a:	89 50 04             	mov    %edx,0x4(%eax)
 8071e5d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8071e60:	8b 50 08             	mov    0x8(%eax),%edx
 8071e63:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8071e66:	89 50 08             	mov    %edx,0x8(%eax)
 8071e69:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8071e6c:	8b 50 0c             	mov    0xc(%eax),%edx
 8071e6f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8071e72:	89 50 0c             	mov    %edx,0xc(%eax)
 8071e75:	b8 00 00 00 00       	mov    $0x0,%eax
 8071e7a:	e9 91 00 00 00       	jmp    8071f10 <SafeDecodeDistanceBlockSwitch+0x11ee>
 8071e7f:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8071e85:	83 f8 01             	cmp    $0x1,%eax
 8071e88:	75 16                	jne    8071ea0 <SafeDecodeDistanceBlockSwitch+0x117e>
 8071e8a:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8071e90:	83 c0 04             	add    $0x4,%eax
 8071e93:	8b 00                	mov    (%eax),%eax
 8071e95:	83 c0 01             	add    $0x1,%eax
 8071e98:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8071e9e:	eb 29                	jmp    8071ec9 <SafeDecodeDistanceBlockSwitch+0x11a7>
 8071ea0:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8071ea6:	85 c0                	test   %eax,%eax
 8071ea8:	75 10                	jne    8071eba <SafeDecodeDistanceBlockSwitch+0x1198>
 8071eaa:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8071eb0:	8b 00                	mov    (%eax),%eax
 8071eb2:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8071eb8:	eb 0f                	jmp    8071ec9 <SafeDecodeDistanceBlockSwitch+0x11a7>
 8071eba:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8071ec0:	83 e8 02             	sub    $0x2,%eax
 8071ec3:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8071ec9:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8071ecf:	39 85 d8 fd ff ff    	cmp    %eax,-0x228(%ebp)
 8071ed5:	77 12                	ja     8071ee9 <SafeDecodeDistanceBlockSwitch+0x11c7>
 8071ed7:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8071edd:	2b 85 d8 fd ff ff    	sub    -0x228(%ebp),%eax
 8071ee3:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 8071ee9:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8071eef:	8b 50 04             	mov    0x4(%eax),%edx
 8071ef2:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8071ef8:	89 10                	mov    %edx,(%eax)
 8071efa:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8071f00:	8d 50 04             	lea    0x4(%eax),%edx
 8071f03:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 8071f09:	89 02                	mov    %eax,(%edx)
 8071f0b:	b8 01 00 00 00       	mov    $0x1,%eax
 8071f10:	85 c0                	test   %eax,%eax
 8071f12:	75 07                	jne    8071f1b <SafeDecodeDistanceBlockSwitch+0x11f9>
 8071f14:	b8 00 00 00 00       	mov    $0x0,%eax
 8071f19:	eb 51                	jmp    8071f6c <SafeDecodeDistanceBlockSwitch+0x124a>
 8071f1b:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8071f21:	8b 90 f8 00 00 00    	mov    0xf8(%eax),%edx
 8071f27:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8071f2d:	8b 80 e8 00 00 00    	mov    0xe8(%eax),%eax
 8071f33:	c1 e0 02             	shl    $0x2,%eax
 8071f36:	01 c2                	add    %eax,%edx
 8071f38:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8071f3e:	89 50 70             	mov    %edx,0x70(%eax)
 8071f41:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8071f47:	8b 50 70             	mov    0x70(%eax),%edx
 8071f4a:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8071f50:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8071f56:	01 d0                	add    %edx,%eax
 8071f58:	0f b6 10             	movzbl (%eax),%edx
 8071f5b:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 8071f61:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
 8071f67:	b8 01 00 00 00       	mov    $0x1,%eax
 8071f6c:	81 c4 4c 02 00 00    	add    $0x24c,%esp
 8071f72:	5b                   	pop    %ebx
 8071f73:	5e                   	pop    %esi
 8071f74:	5d                   	pop    %ebp
 8071f75:	c3                   	ret    

08071f76 <UnwrittenBytes>:
 8071f76:	55                   	push   %ebp
 8071f77:	89 e5                	mov    %esp,%ebp
 8071f79:	83 ec 10             	sub    $0x10,%esp
 8071f7c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8071f80:	74 18                	je     8071f9a <UnwrittenBytes+0x24>
 8071f82:	8b 45 08             	mov    0x8(%ebp),%eax
 8071f85:	8b 50 30             	mov    0x30(%eax),%edx
 8071f88:	8b 45 08             	mov    0x8(%ebp),%eax
 8071f8b:	8b 40 3c             	mov    0x3c(%eax),%eax
 8071f8e:	39 c2                	cmp    %eax,%edx
 8071f90:	7e 08                	jle    8071f9a <UnwrittenBytes+0x24>
 8071f92:	8b 45 08             	mov    0x8(%ebp),%eax
 8071f95:	8b 40 3c             	mov    0x3c(%eax),%eax
 8071f98:	eb 06                	jmp    8071fa0 <UnwrittenBytes+0x2a>
 8071f9a:	8b 45 08             	mov    0x8(%ebp),%eax
 8071f9d:	8b 40 30             	mov    0x30(%eax),%eax
 8071fa0:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8071fa3:	8b 45 08             	mov    0x8(%ebp),%eax
 8071fa6:	8b 90 0c 01 00 00    	mov    0x10c(%eax),%edx
 8071fac:	8b 45 08             	mov    0x8(%ebp),%eax
 8071faf:	8b 40 3c             	mov    0x3c(%eax),%eax
 8071fb2:	0f af d0             	imul   %eax,%edx
 8071fb5:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8071fb8:	01 d0                	add    %edx,%eax
 8071fba:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8071fbd:	8b 45 08             	mov    0x8(%ebp),%eax
 8071fc0:	8b 80 10 01 00 00    	mov    0x110(%eax),%eax
 8071fc6:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8071fc9:	29 c2                	sub    %eax,%edx
 8071fcb:	89 d0                	mov    %edx,%eax
 8071fcd:	c9                   	leave  
 8071fce:	c3                   	ret    

08071fcf <WriteRingBuffer>:
 8071fcf:	55                   	push   %ebp
 8071fd0:	89 e5                	mov    %esp,%ebp
 8071fd2:	56                   	push   %esi
 8071fd3:	53                   	push   %ebx
 8071fd4:	83 ec 20             	sub    $0x20,%esp
 8071fd7:	e8 14 7b fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8071fdc:	81 c3 24 e0 03 00    	add    $0x3e024,%ebx
 8071fe2:	8b 45 08             	mov    0x8(%ebp),%eax
 8071fe5:	8b 50 5c             	mov    0x5c(%eax),%edx
 8071fe8:	8b 45 08             	mov    0x8(%ebp),%eax
 8071feb:	8b 88 10 01 00 00    	mov    0x110(%eax),%ecx
 8071ff1:	8b 45 08             	mov    0x8(%ebp),%eax
 8071ff4:	8b 40 40             	mov    0x40(%eax),%eax
 8071ff7:	21 c8                	and    %ecx,%eax
 8071ff9:	01 d0                	add    %edx,%eax
 8071ffb:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8071ffe:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8072005:	00 
 8072006:	8b 45 08             	mov    0x8(%ebp),%eax
 8072009:	89 04 24             	mov    %eax,(%esp)
 807200c:	e8 65 ff ff ff       	call   8071f76 <UnwrittenBytes>
 8072011:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8072014:	8b 45 0c             	mov    0xc(%ebp),%eax
 8072017:	8b 00                	mov    (%eax),%eax
 8072019:	89 45 ec             	mov    %eax,-0x14(%ebp)
 807201c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 807201f:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8072022:	76 06                	jbe    807202a <WriteRingBuffer+0x5b>
 8072024:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8072027:	89 45 ec             	mov    %eax,-0x14(%ebp)
 807202a:	8b 45 08             	mov    0x8(%ebp),%eax
 807202d:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8072033:	85 c0                	test   %eax,%eax
 8072035:	79 0a                	jns    8072041 <WriteRingBuffer+0x72>
 8072037:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
 807203c:	e9 49 01 00 00       	jmp    807218a <WriteRingBuffer+0x1bb>
 8072041:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8072045:	74 13                	je     807205a <WriteRingBuffer+0x8b>
 8072047:	8b 45 10             	mov    0x10(%ebp),%eax
 807204a:	8b 00                	mov    (%eax),%eax
 807204c:	85 c0                	test   %eax,%eax
 807204e:	75 0a                	jne    807205a <WriteRingBuffer+0x8b>
 8072050:	8b 45 10             	mov    0x10(%ebp),%eax
 8072053:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8072056:	89 10                	mov    %edx,(%eax)
 8072058:	eb 30                	jmp    807208a <WriteRingBuffer+0xbb>
 807205a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 807205e:	74 2a                	je     807208a <WriteRingBuffer+0xbb>
 8072060:	8b 45 10             	mov    0x10(%ebp),%eax
 8072063:	8b 00                	mov    (%eax),%eax
 8072065:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8072068:	89 54 24 08          	mov    %edx,0x8(%esp)
 807206c:	8b 55 f0             	mov    -0x10(%ebp),%edx
 807206f:	89 54 24 04          	mov    %edx,0x4(%esp)
 8072073:	89 04 24             	mov    %eax,(%esp)
 8072076:	e8 35 1b fe ff       	call   8053bb0 <__interceptor_memcpy>
 807207b:	8b 45 10             	mov    0x10(%ebp),%eax
 807207e:	8b 10                	mov    (%eax),%edx
 8072080:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8072083:	01 c2                	add    %eax,%edx
 8072085:	8b 45 10             	mov    0x10(%ebp),%eax
 8072088:	89 10                	mov    %edx,(%eax)
 807208a:	8b 45 0c             	mov    0xc(%ebp),%eax
 807208d:	8b 00                	mov    (%eax),%eax
 807208f:	2b 45 ec             	sub    -0x14(%ebp),%eax
 8072092:	89 c2                	mov    %eax,%edx
 8072094:	8b 45 0c             	mov    0xc(%ebp),%eax
 8072097:	89 10                	mov    %edx,(%eax)
 8072099:	8b 45 08             	mov    0x8(%ebp),%eax
 807209c:	8b 90 10 01 00 00    	mov    0x110(%eax),%edx
 80720a2:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80720a5:	01 c2                	add    %eax,%edx
 80720a7:	8b 45 08             	mov    0x8(%ebp),%eax
 80720aa:	89 90 10 01 00 00    	mov    %edx,0x110(%eax)
 80720b0:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
 80720b4:	74 0e                	je     80720c4 <WriteRingBuffer+0xf5>
 80720b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80720b9:	8b 90 10 01 00 00    	mov    0x110(%eax),%edx
 80720bf:	8b 45 14             	mov    0x14(%ebp),%eax
 80720c2:	89 10                	mov    %edx,(%eax)
 80720c4:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80720c7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 80720ca:	73 38                	jae    8072104 <WriteRingBuffer+0x135>
 80720cc:	8b 45 08             	mov    0x8(%ebp),%eax
 80720cf:	8b 50 3c             	mov    0x3c(%eax),%edx
 80720d2:	8b 45 08             	mov    0x8(%ebp),%eax
 80720d5:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 80720db:	be 01 00 00 00       	mov    $0x1,%esi
 80720e0:	89 c1                	mov    %eax,%ecx
 80720e2:	d3 e6                	shl    %cl,%esi
 80720e4:	89 f0                	mov    %esi,%eax
 80720e6:	39 c2                	cmp    %eax,%edx
 80720e8:	74 06                	je     80720f0 <WriteRingBuffer+0x121>
 80720ea:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 80720ee:	74 0a                	je     80720fa <WriteRingBuffer+0x12b>
 80720f0:	b8 03 00 00 00       	mov    $0x3,%eax
 80720f5:	e9 90 00 00 00       	jmp    807218a <WriteRingBuffer+0x1bb>
 80720fa:	b8 01 00 00 00       	mov    $0x1,%eax
 80720ff:	e9 86 00 00 00       	jmp    807218a <WriteRingBuffer+0x1bb>
 8072104:	8b 45 08             	mov    0x8(%ebp),%eax
 8072107:	8b 50 3c             	mov    0x3c(%eax),%edx
 807210a:	8b 45 08             	mov    0x8(%ebp),%eax
 807210d:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 8072113:	be 01 00 00 00       	mov    $0x1,%esi
 8072118:	89 c1                	mov    %eax,%ecx
 807211a:	d3 e6                	shl    %cl,%esi
 807211c:	89 f0                	mov    %esi,%eax
 807211e:	39 c2                	cmp    %eax,%edx
 8072120:	75 63                	jne    8072185 <WriteRingBuffer+0x1b6>
 8072122:	8b 45 08             	mov    0x8(%ebp),%eax
 8072125:	8b 50 30             	mov    0x30(%eax),%edx
 8072128:	8b 45 08             	mov    0x8(%ebp),%eax
 807212b:	8b 40 3c             	mov    0x3c(%eax),%eax
 807212e:	39 c2                	cmp    %eax,%edx
 8072130:	7c 53                	jl     8072185 <WriteRingBuffer+0x1b6>
 8072132:	8b 45 08             	mov    0x8(%ebp),%eax
 8072135:	8b 50 30             	mov    0x30(%eax),%edx
 8072138:	8b 45 08             	mov    0x8(%ebp),%eax
 807213b:	8b 40 3c             	mov    0x3c(%eax),%eax
 807213e:	29 c2                	sub    %eax,%edx
 8072140:	8b 45 08             	mov    0x8(%ebp),%eax
 8072143:	89 50 30             	mov    %edx,0x30(%eax)
 8072146:	8b 45 08             	mov    0x8(%ebp),%eax
 8072149:	8b 80 0c 01 00 00    	mov    0x10c(%eax),%eax
 807214f:	8d 50 01             	lea    0x1(%eax),%edx
 8072152:	8b 45 08             	mov    0x8(%ebp),%eax
 8072155:	89 90 0c 01 00 00    	mov    %edx,0x10c(%eax)
 807215b:	8b 45 08             	mov    0x8(%ebp),%eax
 807215e:	8b 40 30             	mov    0x30(%eax),%eax
 8072161:	85 c0                	test   %eax,%eax
 8072163:	0f 95 c2             	setne  %dl
 8072166:	8b 45 08             	mov    0x8(%ebp),%eax
 8072169:	83 e2 01             	and    $0x1,%edx
 807216c:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
 8072173:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 807217a:	83 e2 f7             	and    $0xfffffff7,%edx
 807217d:	09 ca                	or     %ecx,%edx
 807217f:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8072185:	b8 01 00 00 00       	mov    $0x1,%eax
 807218a:	83 c4 20             	add    $0x20,%esp
 807218d:	5b                   	pop    %ebx
 807218e:	5e                   	pop    %esi
 807218f:	5d                   	pop    %ebp
 8072190:	c3                   	ret    

08072191 <WrapRingBuffer>:
 8072191:	55                   	push   %ebp
 8072192:	89 e5                	mov    %esp,%ebp
 8072194:	53                   	push   %ebx
 8072195:	83 ec 14             	sub    $0x14,%esp
 8072198:	e8 53 79 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 807219d:	81 c3 63 de 03 00    	add    $0x3de63,%ebx
 80721a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80721a6:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 80721ad:	83 e0 08             	and    $0x8,%eax
 80721b0:	84 c0                	test   %al,%al
 80721b2:	74 37                	je     80721eb <WrapRingBuffer+0x5a>
 80721b4:	8b 45 08             	mov    0x8(%ebp),%eax
 80721b7:	8b 40 30             	mov    0x30(%eax),%eax
 80721ba:	89 c1                	mov    %eax,%ecx
 80721bc:	8b 45 08             	mov    0x8(%ebp),%eax
 80721bf:	8b 50 60             	mov    0x60(%eax),%edx
 80721c2:	8b 45 08             	mov    0x8(%ebp),%eax
 80721c5:	8b 40 5c             	mov    0x5c(%eax),%eax
 80721c8:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80721cc:	89 54 24 04          	mov    %edx,0x4(%esp)
 80721d0:	89 04 24             	mov    %eax,(%esp)
 80721d3:	e8 d8 19 fe ff       	call   8053bb0 <__interceptor_memcpy>
 80721d8:	8b 45 08             	mov    0x8(%ebp),%eax
 80721db:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 80721e2:	83 e2 f7             	and    $0xfffffff7,%edx
 80721e5:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 80721eb:	83 c4 14             	add    $0x14,%esp
 80721ee:	5b                   	pop    %ebx
 80721ef:	5d                   	pop    %ebp
 80721f0:	c3                   	ret    

080721f1 <BrotliEnsureRingBuffer>:
 80721f1:	55                   	push   %ebp
 80721f2:	89 e5                	mov    %esp,%ebp
 80721f4:	53                   	push   %ebx
 80721f5:	83 ec 24             	sub    $0x24,%esp
 80721f8:	e8 f3 78 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80721fd:	81 c3 03 de 03 00    	add    $0x3de03,%ebx
 8072203:	8b 45 08             	mov    0x8(%ebp),%eax
 8072206:	8b 40 5c             	mov    0x5c(%eax),%eax
 8072209:	89 45 f4             	mov    %eax,-0xc(%ebp)
 807220c:	8b 45 08             	mov    0x8(%ebp),%eax
 807220f:	8b 50 3c             	mov    0x3c(%eax),%edx
 8072212:	8b 45 08             	mov    0x8(%ebp),%eax
 8072215:	8b 80 34 02 00 00    	mov    0x234(%eax),%eax
 807221b:	39 c2                	cmp    %eax,%edx
 807221d:	75 0a                	jne    8072229 <BrotliEnsureRingBuffer+0x38>
 807221f:	b8 01 00 00 00       	mov    $0x1,%eax
 8072224:	e9 f8 00 00 00       	jmp    8072321 <BrotliEnsureRingBuffer+0x130>
 8072229:	8b 45 08             	mov    0x8(%ebp),%eax
 807222c:	8b 40 18             	mov    0x18(%eax),%eax
 807222f:	8b 55 08             	mov    0x8(%ebp),%edx
 8072232:	8b 92 34 02 00 00    	mov    0x234(%edx),%edx
 8072238:	89 d1                	mov    %edx,%ecx
 807223a:	ba 2a 00 00 00       	mov    $0x2a,%edx
 807223f:	01 d1                	add    %edx,%ecx
 8072241:	8b 55 08             	mov    0x8(%ebp),%edx
 8072244:	8b 52 20             	mov    0x20(%edx),%edx
 8072247:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 807224b:	89 14 24             	mov    %edx,(%esp)
 807224e:	ff d0                	call   *%eax
 8072250:	8b 55 08             	mov    0x8(%ebp),%edx
 8072253:	89 42 5c             	mov    %eax,0x5c(%edx)
 8072256:	8b 45 08             	mov    0x8(%ebp),%eax
 8072259:	8b 40 5c             	mov    0x5c(%eax),%eax
 807225c:	85 c0                	test   %eax,%eax
 807225e:	75 13                	jne    8072273 <BrotliEnsureRingBuffer+0x82>
 8072260:	8b 45 08             	mov    0x8(%ebp),%eax
 8072263:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8072266:	89 50 5c             	mov    %edx,0x5c(%eax)
 8072269:	b8 00 00 00 00       	mov    $0x0,%eax
 807226e:	e9 ae 00 00 00       	jmp    8072321 <BrotliEnsureRingBuffer+0x130>
 8072273:	8b 45 08             	mov    0x8(%ebp),%eax
 8072276:	8b 50 5c             	mov    0x5c(%eax),%edx
 8072279:	8b 45 08             	mov    0x8(%ebp),%eax
 807227c:	8b 80 34 02 00 00    	mov    0x234(%eax),%eax
 8072282:	83 e8 02             	sub    $0x2,%eax
 8072285:	01 d0                	add    %edx,%eax
 8072287:	c6 00 00             	movb   $0x0,(%eax)
 807228a:	8b 45 08             	mov    0x8(%ebp),%eax
 807228d:	8b 50 5c             	mov    0x5c(%eax),%edx
 8072290:	8b 45 08             	mov    0x8(%ebp),%eax
 8072293:	8b 80 34 02 00 00    	mov    0x234(%eax),%eax
 8072299:	83 e8 01             	sub    $0x1,%eax
 807229c:	01 d0                	add    %edx,%eax
 807229e:	c6 00 00             	movb   $0x0,(%eax)
 80722a1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 80722a5:	74 40                	je     80722e7 <BrotliEnsureRingBuffer+0xf6>
 80722a7:	8b 45 08             	mov    0x8(%ebp),%eax
 80722aa:	8b 40 30             	mov    0x30(%eax),%eax
 80722ad:	89 c2                	mov    %eax,%edx
 80722af:	8b 45 08             	mov    0x8(%ebp),%eax
 80722b2:	8b 40 5c             	mov    0x5c(%eax),%eax
 80722b5:	89 54 24 08          	mov    %edx,0x8(%esp)
 80722b9:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80722bc:	89 54 24 04          	mov    %edx,0x4(%esp)
 80722c0:	89 04 24             	mov    %eax,(%esp)
 80722c3:	e8 e8 18 fe ff       	call   8053bb0 <__interceptor_memcpy>
 80722c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80722cb:	8b 40 1c             	mov    0x1c(%eax),%eax
 80722ce:	8b 55 08             	mov    0x8(%ebp),%edx
 80722d1:	8b 52 20             	mov    0x20(%edx),%edx
 80722d4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 80722d7:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 80722db:	89 14 24             	mov    %edx,(%esp)
 80722de:	ff d0                	call   *%eax
 80722e0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80722e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80722ea:	8b 90 34 02 00 00    	mov    0x234(%eax),%edx
 80722f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80722f3:	89 50 3c             	mov    %edx,0x3c(%eax)
 80722f6:	8b 45 08             	mov    0x8(%ebp),%eax
 80722f9:	8b 80 34 02 00 00    	mov    0x234(%eax),%eax
 80722ff:	8d 50 ff             	lea    -0x1(%eax),%edx
 8072302:	8b 45 08             	mov    0x8(%ebp),%eax
 8072305:	89 50 40             	mov    %edx,0x40(%eax)
 8072308:	8b 45 08             	mov    0x8(%ebp),%eax
 807230b:	8b 50 5c             	mov    0x5c(%eax),%edx
 807230e:	8b 45 08             	mov    0x8(%ebp),%eax
 8072311:	8b 40 3c             	mov    0x3c(%eax),%eax
 8072314:	01 c2                	add    %eax,%edx
 8072316:	8b 45 08             	mov    0x8(%ebp),%eax
 8072319:	89 50 60             	mov    %edx,0x60(%eax)
 807231c:	b8 01 00 00 00       	mov    $0x1,%eax
 8072321:	83 c4 24             	add    $0x24,%esp
 8072324:	5b                   	pop    %ebx
 8072325:	5d                   	pop    %ebp
 8072326:	c3                   	ret    

08072327 <CopyUncompressedBlockToOutput>:
 8072327:	55                   	push   %ebp
 8072328:	89 e5                	mov    %esp,%ebp
 807232a:	56                   	push   %esi
 807232b:	53                   	push   %ebx
 807232c:	83 ec 50             	sub    $0x50,%esp
 807232f:	e8 bc 77 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8072334:	81 c3 cc dc 03 00    	add    $0x3dccc,%ebx
 807233a:	8b 45 14             	mov    0x14(%ebp),%eax
 807233d:	89 04 24             	mov    %eax,(%esp)
 8072340:	e8 ac fe ff ff       	call   80721f1 <BrotliEnsureRingBuffer>
 8072345:	85 c0                	test   %eax,%eax
 8072347:	75 0a                	jne    8072353 <CopyUncompressedBlockToOutput+0x2c>
 8072349:	b8 e6 ff ff ff       	mov    $0xffffffe6,%eax
 807234e:	e9 31 02 00 00       	jmp    8072584 <CopyUncompressedBlockToOutput+0x25d>
 8072353:	8b 45 14             	mov    0x14(%ebp),%eax
 8072356:	8b 80 20 02 00 00    	mov    0x220(%eax),%eax
 807235c:	85 c0                	test   %eax,%eax
 807235e:	74 0b                	je     807236b <CopyUncompressedBlockToOutput+0x44>
 8072360:	83 f8 01             	cmp    $0x1,%eax
 8072363:	0f 84 a8 01 00 00    	je     8072511 <CopyUncompressedBlockToOutput+0x1ea>
 8072369:	eb e8                	jmp    8072353 <CopyUncompressedBlockToOutput+0x2c>
 807236b:	8b 45 14             	mov    0x14(%ebp),%eax
 807236e:	83 c0 08             	add    $0x8,%eax
 8072371:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8072374:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8072377:	8b 50 0c             	mov    0xc(%eax),%edx
 807237a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 807237d:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8072380:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8072383:	8b 40 04             	mov    0x4(%eax),%eax
 8072386:	b9 20 00 00 00       	mov    $0x20,%ecx
 807238b:	29 c1                	sub    %eax,%ecx
 807238d:	89 c8                	mov    %ecx,%eax
 807238f:	c1 e8 03             	shr    $0x3,%eax
 8072392:	01 d0                	add    %edx,%eax
 8072394:	89 45 cc             	mov    %eax,-0x34(%ebp)
 8072397:	8b 45 14             	mov    0x14(%ebp),%eax
 807239a:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 80723a0:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 80723a3:	7d 0c                	jge    80723b1 <CopyUncompressedBlockToOutput+0x8a>
 80723a5:	8b 45 14             	mov    0x14(%ebp),%eax
 80723a8:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 80723ae:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80723b1:	8b 45 14             	mov    0x14(%ebp),%eax
 80723b4:	8b 50 30             	mov    0x30(%eax),%edx
 80723b7:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80723ba:	01 c2                	add    %eax,%edx
 80723bc:	8b 45 14             	mov    0x14(%ebp),%eax
 80723bf:	8b 40 3c             	mov    0x3c(%eax),%eax
 80723c2:	39 c2                	cmp    %eax,%edx
 80723c4:	7e 13                	jle    80723d9 <CopyUncompressedBlockToOutput+0xb2>
 80723c6:	8b 45 14             	mov    0x14(%ebp),%eax
 80723c9:	8b 50 3c             	mov    0x3c(%eax),%edx
 80723cc:	8b 45 14             	mov    0x14(%ebp),%eax
 80723cf:	8b 40 30             	mov    0x30(%eax),%eax
 80723d2:	29 c2                	sub    %eax,%edx
 80723d4:	89 d0                	mov    %edx,%eax
 80723d6:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80723d9:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80723dc:	8b 55 14             	mov    0x14(%ebp),%edx
 80723df:	8d 4a 08             	lea    0x8(%edx),%ecx
 80723e2:	8b 55 14             	mov    0x14(%ebp),%edx
 80723e5:	8b 72 5c             	mov    0x5c(%edx),%esi
 80723e8:	8b 55 14             	mov    0x14(%ebp),%edx
 80723eb:	8b 52 30             	mov    0x30(%edx),%edx
 80723ee:	01 f2                	add    %esi,%edx
 80723f0:	89 55 dc             	mov    %edx,-0x24(%ebp)
 80723f3:	89 4d e0             	mov    %ecx,-0x20(%ebp)
 80723f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80723f9:	eb 44                	jmp    807243f <CopyUncompressedBlockToOutput+0x118>
 80723fb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80723fe:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8072401:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8072404:	8b 10                	mov    (%eax),%edx
 8072406:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8072409:	8b 40 04             	mov    0x4(%eax),%eax
 807240c:	89 c1                	mov    %eax,%ecx
 807240e:	d3 ea                	shr    %cl,%edx
 8072410:	89 d0                	mov    %edx,%eax
 8072412:	89 c2                	mov    %eax,%edx
 8072414:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8072417:	88 10                	mov    %dl,(%eax)
 8072419:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807241c:	89 45 ec             	mov    %eax,-0x14(%ebp)
 807241f:	c7 45 f0 08 00 00 00 	movl   $0x8,-0x10(%ebp)
 8072426:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8072429:	8b 50 04             	mov    0x4(%eax),%edx
 807242c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 807242f:	01 c2                	add    %eax,%edx
 8072431:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8072434:	89 50 04             	mov    %edx,0x4(%eax)
 8072437:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 807243b:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)
 807243f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072442:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8072445:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8072448:	8b 40 04             	mov    0x4(%eax),%eax
 807244b:	ba 20 00 00 00       	mov    $0x20,%edx
 8072450:	29 c2                	sub    %eax,%edx
 8072452:	89 d0                	mov    %edx,%eax
 8072454:	83 f8 07             	cmp    $0x7,%eax
 8072457:	76 06                	jbe    807245f <CopyUncompressedBlockToOutput+0x138>
 8072459:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 807245d:	75 9c                	jne    80723fb <CopyUncompressedBlockToOutput+0xd4>
 807245f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072462:	8b 40 08             	mov    0x8(%eax),%eax
 8072465:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8072468:	89 54 24 08          	mov    %edx,0x8(%esp)
 807246c:	89 44 24 04          	mov    %eax,0x4(%esp)
 8072470:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8072473:	89 04 24             	mov    %eax,(%esp)
 8072476:	e8 35 17 fe ff       	call   8053bb0 <__interceptor_memcpy>
 807247b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807247e:	8b 40 0c             	mov    0xc(%eax),%eax
 8072481:	2b 45 e4             	sub    -0x1c(%ebp),%eax
 8072484:	89 c2                	mov    %eax,%edx
 8072486:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072489:	89 50 0c             	mov    %edx,0xc(%eax)
 807248c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807248f:	8b 50 08             	mov    0x8(%eax),%edx
 8072492:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8072495:	01 c2                	add    %eax,%edx
 8072497:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807249a:	89 50 08             	mov    %edx,0x8(%eax)
 807249d:	8b 45 14             	mov    0x14(%ebp),%eax
 80724a0:	8b 50 30             	mov    0x30(%eax),%edx
 80724a3:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80724a6:	01 c2                	add    %eax,%edx
 80724a8:	8b 45 14             	mov    0x14(%ebp),%eax
 80724ab:	89 50 30             	mov    %edx,0x30(%eax)
 80724ae:	8b 45 14             	mov    0x14(%ebp),%eax
 80724b1:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 80724b7:	2b 45 cc             	sub    -0x34(%ebp),%eax
 80724ba:	89 c2                	mov    %eax,%edx
 80724bc:	8b 45 14             	mov    0x14(%ebp),%eax
 80724bf:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 80724c5:	8b 45 14             	mov    0x14(%ebp),%eax
 80724c8:	8b 50 30             	mov    0x30(%eax),%edx
 80724cb:	8b 45 14             	mov    0x14(%ebp),%eax
 80724ce:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 80724d4:	be 01 00 00 00       	mov    $0x1,%esi
 80724d9:	89 c1                	mov    %eax,%ecx
 80724db:	d3 e6                	shl    %cl,%esi
 80724dd:	89 f0                	mov    %esi,%eax
 80724df:	39 c2                	cmp    %eax,%edx
 80724e1:	7d 21                	jge    8072504 <CopyUncompressedBlockToOutput+0x1dd>
 80724e3:	8b 45 14             	mov    0x14(%ebp),%eax
 80724e6:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 80724ec:	85 c0                	test   %eax,%eax
 80724ee:	75 0a                	jne    80724fa <CopyUncompressedBlockToOutput+0x1d3>
 80724f0:	b8 01 00 00 00       	mov    $0x1,%eax
 80724f5:	e9 8a 00 00 00       	jmp    8072584 <CopyUncompressedBlockToOutput+0x25d>
 80724fa:	b8 02 00 00 00       	mov    $0x2,%eax
 80724ff:	e9 80 00 00 00       	jmp    8072584 <CopyUncompressedBlockToOutput+0x25d>
 8072504:	8b 45 14             	mov    0x14(%ebp),%eax
 8072507:	c7 80 20 02 00 00 01 	movl   $0x1,0x220(%eax)
 807250e:	00 00 00 
 8072511:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 8072518:	00 
 8072519:	8b 45 10             	mov    0x10(%ebp),%eax
 807251c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8072520:	8b 45 0c             	mov    0xc(%ebp),%eax
 8072523:	89 44 24 08          	mov    %eax,0x8(%esp)
 8072527:	8b 45 08             	mov    0x8(%ebp),%eax
 807252a:	89 44 24 04          	mov    %eax,0x4(%esp)
 807252e:	8b 45 14             	mov    0x14(%ebp),%eax
 8072531:	89 04 24             	mov    %eax,(%esp)
 8072534:	e8 96 fa ff ff       	call   8071fcf <WriteRingBuffer>
 8072539:	89 45 d0             	mov    %eax,-0x30(%ebp)
 807253c:	83 7d d0 01          	cmpl   $0x1,-0x30(%ebp)
 8072540:	74 05                	je     8072547 <CopyUncompressedBlockToOutput+0x220>
 8072542:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8072545:	eb 3d                	jmp    8072584 <CopyUncompressedBlockToOutput+0x25d>
 8072547:	8b 45 14             	mov    0x14(%ebp),%eax
 807254a:	8b 50 3c             	mov    0x3c(%eax),%edx
 807254d:	8b 45 14             	mov    0x14(%ebp),%eax
 8072550:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 8072556:	be 01 00 00 00       	mov    $0x1,%esi
 807255b:	89 c1                	mov    %eax,%ecx
 807255d:	d3 e6                	shl    %cl,%esi
 807255f:	89 f0                	mov    %esi,%eax
 8072561:	39 c2                	cmp    %eax,%edx
 8072563:	75 0c                	jne    8072571 <CopyUncompressedBlockToOutput+0x24a>
 8072565:	8b 45 14             	mov    0x14(%ebp),%eax
 8072568:	8b 50 34             	mov    0x34(%eax),%edx
 807256b:	8b 45 14             	mov    0x14(%ebp),%eax
 807256e:	89 50 38             	mov    %edx,0x38(%eax)
 8072571:	8b 45 14             	mov    0x14(%ebp),%eax
 8072574:	c7 80 20 02 00 00 00 	movl   $0x0,0x220(%eax)
 807257b:	00 00 00 
 807257e:	90                   	nop
 807257f:	e9 cf fd ff ff       	jmp    8072353 <CopyUncompressedBlockToOutput+0x2c>
 8072584:	83 c4 50             	add    $0x50,%esp
 8072587:	5b                   	pop    %ebx
 8072588:	5e                   	pop    %esi
 8072589:	5d                   	pop    %ebp
 807258a:	c3                   	ret    

0807258b <BrotliCalculateRingBufferSize>:
 807258b:	55                   	push   %ebp
 807258c:	89 e5                	mov    %esp,%ebp
 807258e:	83 ec 10             	sub    $0x10,%esp
 8072591:	8b 45 08             	mov    0x8(%ebp),%eax
 8072594:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 807259a:	ba 01 00 00 00       	mov    $0x1,%edx
 807259f:	89 c1                	mov    %eax,%ecx
 80725a1:	d3 e2                	shl    %cl,%edx
 80725a3:	89 d0                	mov    %edx,%eax
 80725a5:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80725a8:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80725ab:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80725ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80725b1:	8b 40 3c             	mov    0x3c(%eax),%eax
 80725b4:	85 c0                	test   %eax,%eax
 80725b6:	74 08                	je     80725c0 <BrotliCalculateRingBufferSize+0x35>
 80725b8:	8b 45 08             	mov    0x8(%ebp),%eax
 80725bb:	8b 40 3c             	mov    0x3c(%eax),%eax
 80725be:	eb 05                	jmp    80725c5 <BrotliCalculateRingBufferSize+0x3a>
 80725c0:	b8 00 04 00 00       	mov    $0x400,%eax
 80725c5:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80725c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80725cb:	8b 40 3c             	mov    0x3c(%eax),%eax
 80725ce:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 80725d1:	75 02                	jne    80725d5 <BrotliCalculateRingBufferSize+0x4a>
 80725d3:	eb 74                	jmp    8072649 <BrotliCalculateRingBufferSize+0xbe>
 80725d5:	8b 45 08             	mov    0x8(%ebp),%eax
 80725d8:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 80725df:	83 e0 04             	and    $0x4,%eax
 80725e2:	84 c0                	test   %al,%al
 80725e4:	74 02                	je     80725e8 <BrotliCalculateRingBufferSize+0x5d>
 80725e6:	eb 61                	jmp    8072649 <BrotliCalculateRingBufferSize+0xbe>
 80725e8:	8b 45 08             	mov    0x8(%ebp),%eax
 80725eb:	8b 40 5c             	mov    0x5c(%eax),%eax
 80725ee:	85 c0                	test   %eax,%eax
 80725f0:	75 09                	jne    80725fb <BrotliCalculateRingBufferSize+0x70>
 80725f2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80725f9:	eb 09                	jmp    8072604 <BrotliCalculateRingBufferSize+0x79>
 80725fb:	8b 45 08             	mov    0x8(%ebp),%eax
 80725fe:	8b 40 30             	mov    0x30(%eax),%eax
 8072601:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8072604:	8b 45 08             	mov    0x8(%ebp),%eax
 8072607:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807260d:	01 45 f4             	add    %eax,-0xc(%ebp)
 8072610:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8072613:	39 45 fc             	cmp    %eax,-0x4(%ebp)
 8072616:	0f 4d 45 fc          	cmovge -0x4(%ebp),%eax
 807261a:	89 45 fc             	mov    %eax,-0x4(%ebp)
 807261d:	8b 45 08             	mov    0x8(%ebp),%eax
 8072620:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 8072627:	83 e0 10             	and    $0x10,%eax
 807262a:	84 c0                	test   %al,%al
 807262c:	74 0f                	je     807263d <BrotliCalculateRingBufferSize+0xb2>
 807262e:	eb 03                	jmp    8072633 <BrotliCalculateRingBufferSize+0xa8>
 8072630:	d1 7d f0             	sarl   -0x10(%ebp)
 8072633:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8072636:	d1 f8                	sar    %eax
 8072638:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 807263b:	7d f3                	jge    8072630 <BrotliCalculateRingBufferSize+0xa5>
 807263d:	8b 45 08             	mov    0x8(%ebp),%eax
 8072640:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8072643:	89 90 34 02 00 00    	mov    %edx,0x234(%eax)
 8072649:	c9                   	leave  
 807264a:	c3                   	ret    

0807264b <ReadContextModes>:
 807264b:	55                   	push   %ebp
 807264c:	89 e5                	mov    %esp,%ebp
 807264e:	53                   	push   %ebx
 807264f:	83 ec 40             	sub    $0x40,%esp
 8072652:	e8 99 74 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8072657:	81 c3 a9 d9 03 00    	add    $0x3d9a9,%ebx
 807265d:	8b 45 08             	mov    0x8(%ebp),%eax
 8072660:	83 c0 08             	add    $0x8,%eax
 8072663:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8072666:	8b 45 08             	mov    0x8(%ebp),%eax
 8072669:	8b 40 04             	mov    0x4(%eax),%eax
 807266c:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 807266f:	e9 46 01 00 00       	jmp    80727ba <ReadContextModes+0x16f>
 8072674:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8072677:	89 45 cc             	mov    %eax,-0x34(%ebp)
 807267a:	c7 45 d0 02 00 00 00 	movl   $0x2,-0x30(%ebp)
 8072681:	8d 45 c0             	lea    -0x40(%ebp),%eax
 8072684:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8072687:	e9 81 00 00 00       	jmp    807270d <ReadContextModes+0xc2>
 807268c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 807268f:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8072692:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8072695:	8b 40 0c             	mov    0xc(%eax),%eax
 8072698:	85 c0                	test   %eax,%eax
 807269a:	75 07                	jne    80726a3 <ReadContextModes+0x58>
 807269c:	b8 00 00 00 00       	mov    $0x0,%eax
 80726a1:	eb 5c                	jmp    80726ff <ReadContextModes+0xb4>
 80726a3:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726a6:	8b 00                	mov    (%eax),%eax
 80726a8:	c1 e8 08             	shr    $0x8,%eax
 80726ab:	89 c2                	mov    %eax,%edx
 80726ad:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726b0:	89 10                	mov    %edx,(%eax)
 80726b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726b5:	8b 10                	mov    (%eax),%edx
 80726b7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726ba:	8b 40 08             	mov    0x8(%eax),%eax
 80726bd:	0f b6 00             	movzbl (%eax),%eax
 80726c0:	0f b6 c0             	movzbl %al,%eax
 80726c3:	c1 e0 18             	shl    $0x18,%eax
 80726c6:	09 c2                	or     %eax,%edx
 80726c8:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726cb:	89 10                	mov    %edx,(%eax)
 80726cd:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726d0:	8b 40 04             	mov    0x4(%eax),%eax
 80726d3:	8d 50 f8             	lea    -0x8(%eax),%edx
 80726d6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726d9:	89 50 04             	mov    %edx,0x4(%eax)
 80726dc:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726df:	8b 40 0c             	mov    0xc(%eax),%eax
 80726e2:	8d 50 ff             	lea    -0x1(%eax),%edx
 80726e5:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726e8:	89 50 0c             	mov    %edx,0xc(%eax)
 80726eb:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726ee:	8b 40 08             	mov    0x8(%eax),%eax
 80726f1:	8d 50 01             	lea    0x1(%eax),%edx
 80726f4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80726f7:	89 50 08             	mov    %edx,0x8(%eax)
 80726fa:	b8 01 00 00 00       	mov    $0x1,%eax
 80726ff:	85 c0                	test   %eax,%eax
 8072701:	75 0a                	jne    807270d <ReadContextModes+0xc2>
 8072703:	b8 00 00 00 00       	mov    $0x0,%eax
 8072708:	e9 82 00 00 00       	jmp    807278f <ReadContextModes+0x144>
 807270d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8072710:	89 45 dc             	mov    %eax,-0x24(%ebp)
 8072713:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8072716:	8b 40 04             	mov    0x4(%eax),%eax
 8072719:	ba 20 00 00 00       	mov    $0x20,%edx
 807271e:	29 c2                	sub    %eax,%edx
 8072720:	89 d0                	mov    %edx,%eax
 8072722:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 8072725:	0f 87 61 ff ff ff    	ja     807268c <ReadContextModes+0x41>
 807272b:	8b 45 cc             	mov    -0x34(%ebp),%eax
 807272e:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8072731:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8072734:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8072737:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 807273a:	89 45 e8             	mov    %eax,-0x18(%ebp)
 807273d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072740:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8072743:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8072746:	8b 10                	mov    (%eax),%edx
 8072748:	8b 45 ec             	mov    -0x14(%ebp),%eax
 807274b:	8b 40 04             	mov    0x4(%eax),%eax
 807274e:	89 c1                	mov    %eax,%ecx
 8072750:	d3 ea                	shr    %cl,%edx
 8072752:	89 d0                	mov    %edx,%eax
 8072754:	89 c2                	mov    %eax,%edx
 8072756:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8072759:	89 45 f0             	mov    %eax,-0x10(%ebp)
 807275c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 807275f:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8072766:	21 c2                	and    %eax,%edx
 8072768:	8b 45 e8             	mov    -0x18(%ebp),%eax
 807276b:	89 10                	mov    %edx,(%eax)
 807276d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072770:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8072773:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8072776:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8072779:	8b 45 f4             	mov    -0xc(%ebp),%eax
 807277c:	8b 50 04             	mov    0x4(%eax),%edx
 807277f:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8072782:	01 c2                	add    %eax,%edx
 8072784:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8072787:	89 50 04             	mov    %edx,0x4(%eax)
 807278a:	b8 01 00 00 00       	mov    $0x1,%eax
 807278f:	85 c0                	test   %eax,%eax
 8072791:	75 10                	jne    80727a3 <ReadContextModes+0x158>
 8072793:	8b 45 08             	mov    0x8(%ebp),%eax
 8072796:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 8072799:	89 50 04             	mov    %edx,0x4(%eax)
 807279c:	b8 02 00 00 00       	mov    $0x2,%eax
 80727a1:	eb 2e                	jmp    80727d1 <ReadContextModes+0x186>
 80727a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80727a6:	8b 90 40 02 00 00    	mov    0x240(%eax),%edx
 80727ac:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 80727af:	01 c2                	add    %eax,%edx
 80727b1:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80727b4:	88 02                	mov    %al,(%edx)
 80727b6:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 80727ba:	8b 45 08             	mov    0x8(%ebp),%eax
 80727bd:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax
 80727c3:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 80727c6:	0f 8f a8 fe ff ff    	jg     8072674 <ReadContextModes+0x29>
 80727cc:	b8 01 00 00 00       	mov    $0x1,%eax
 80727d1:	83 c4 40             	add    $0x40,%esp
 80727d4:	5b                   	pop    %ebx
 80727d5:	5d                   	pop    %ebp
 80727d6:	c3                   	ret    

080727d7 <CalculateDistanceLut>:
 80727d7:	55                   	push   %ebp
 80727d8:	89 e5                	mov    %esp,%ebp
 80727da:	83 ec 30             	sub    $0x30,%esp
 80727dd:	8b 45 08             	mov    0x8(%ebp),%eax
 80727e0:	05 6c 02 00 00       	add    $0x26c,%eax
 80727e5:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80727e8:	8b 45 08             	mov    0x8(%ebp),%eax
 80727eb:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 80727f1:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80727f4:	8b 45 08             	mov    0x8(%ebp),%eax
 80727f7:	8b 80 f0 00 00 00    	mov    0xf0(%eax),%eax
 80727fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8072800:	8b 45 08             	mov    0x8(%ebp),%eax
 8072803:	0f b7 80 9e 00 00 00 	movzwl 0x9e(%eax),%eax
 807280a:	0f b7 c0             	movzwl %ax,%eax
 807280d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8072810:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8072813:	ba 01 00 00 00       	mov    $0x1,%edx
 8072818:	89 c1                	mov    %eax,%ecx
 807281a:	d3 e2                	shl    %cl,%edx
 807281c:	89 d0                	mov    %edx,%eax
 807281e:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8072821:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
 8072828:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 807282f:	c7 45 e4 10 00 00 00 	movl   $0x10,-0x1c(%ebp)
 8072836:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 807283d:	eb 28                	jmp    8072867 <CalculateDistanceLut+0x90>
 807283f:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8072842:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8072845:	01 d0                	add    %edx,%eax
 8072847:	c6 00 00             	movb   $0x0,(%eax)
 807284a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 807284d:	8d 48 01             	lea    0x1(%eax),%ecx
 8072850:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8072853:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8072856:	81 c2 88 00 00 00    	add    $0x88,%edx
 807285c:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
 807285f:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 8072863:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 8072867:	8b 45 d8             	mov    -0x28(%ebp),%eax
 807286a:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 807286d:	72 d0                	jb     807283f <CalculateDistanceLut+0x68>
 807286f:	eb 6c                	jmp    80728dd <CalculateDistanceLut+0x106>
 8072871:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072874:	8d 50 02             	lea    0x2(%eax),%edx
 8072877:	8b 45 dc             	mov    -0x24(%ebp),%eax
 807287a:	89 c1                	mov    %eax,%ecx
 807287c:	d3 e2                	shl    %cl,%edx
 807287e:	89 d0                	mov    %edx,%eax
 8072880:	8d 50 fc             	lea    -0x4(%eax),%edx
 8072883:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8072886:	89 c1                	mov    %eax,%ecx
 8072888:	d3 e2                	shl    %cl,%edx
 807288a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 807288d:	01 d0                	add    %edx,%eax
 807288f:	83 c0 01             	add    $0x1,%eax
 8072892:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8072895:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 807289c:	eb 2d                	jmp    80728cb <CalculateDistanceLut+0xf4>
 807289e:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80728a1:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 80728a4:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80728a7:	01 ca                	add    %ecx,%edx
 80728a9:	88 02                	mov    %al,(%edx)
 80728ab:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80728ae:	8b 55 fc             	mov    -0x4(%ebp),%edx
 80728b1:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 80728b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80728b7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80728ba:	81 c2 88 00 00 00    	add    $0x88,%edx
 80728c0:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
 80728c3:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 80728c7:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 80728cb:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80728ce:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 80728d1:	72 cb                	jb     807289e <CalculateDistanceLut+0xc7>
 80728d3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80728d6:	01 45 dc             	add    %eax,-0x24(%ebp)
 80728d9:	83 75 e0 01          	xorl   $0x1,-0x20(%ebp)
 80728dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80728e0:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 80728e3:	72 8c                	jb     8072871 <CalculateDistanceLut+0x9a>
 80728e5:	c9                   	leave  
 80728e6:	c3                   	ret    

080728e7 <ProcessCommands>:
 80728e7:	55                   	push   %ebp
 80728e8:	89 e5                	mov    %esp,%ebp
 80728ea:	56                   	push   %esi
 80728eb:	53                   	push   %ebx
 80728ec:	81 ec 40 0a 00 00    	sub    $0xa40,%esp
 80728f2:	e8 f9 71 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80728f7:	81 c3 09 d7 03 00    	add    $0x3d709,%ebx
 80728fd:	c7 85 fc f5 ff ff 00 	movl   $0x0,-0xa04(%ebp)
 8072904:	00 00 00 
 8072907:	8b 45 08             	mov    0x8(%ebp),%eax
 807290a:	89 85 00 f6 ff ff    	mov    %eax,-0xa00(%ebp)
 8072910:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072916:	8b 40 30             	mov    0x30(%eax),%eax
 8072919:	89 85 04 f6 ff ff    	mov    %eax,-0x9fc(%ebp)
 807291f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072925:	8b 40 04             	mov    0x4(%eax),%eax
 8072928:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807292e:	c7 85 08 f6 ff ff 01 	movl   $0x1,-0x9f8(%ebp)
 8072935:	00 00 00 
 8072938:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807293e:	83 c0 08             	add    $0x8,%eax
 8072941:	89 85 0c f6 ff ff    	mov    %eax,-0x9f4(%ebp)
 8072947:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 807294d:	89 85 10 f6 ff ff    	mov    %eax,-0x9f0(%ebp)
 8072953:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8072959:	89 85 14 f6 ff ff    	mov    %eax,-0x9ec(%ebp)
 807295f:	c7 85 18 f6 ff ff 1c 	movl   $0x1c,-0x9e8(%ebp)
 8072966:	00 00 00 
 8072969:	83 bd 10 f6 ff ff 00 	cmpl   $0x0,-0x9f0(%ebp)
 8072970:	74 07                	je     8072979 <ProcessCommands+0x92>
 8072972:	b8 01 00 00 00       	mov    $0x1,%eax
 8072977:	eb 2d                	jmp    80729a6 <ProcessCommands+0xbf>
 8072979:	8b 85 14 f6 ff ff    	mov    -0x9ec(%ebp),%eax
 807297f:	89 85 1c f6 ff ff    	mov    %eax,-0x9e4(%ebp)
 8072985:	8b 85 18 f6 ff ff    	mov    -0x9e8(%ebp),%eax
 807298b:	89 85 20 f6 ff ff    	mov    %eax,-0x9e0(%ebp)
 8072991:	8b 85 1c f6 ff ff    	mov    -0x9e4(%ebp),%eax
 8072997:	8b 40 0c             	mov    0xc(%eax),%eax
 807299a:	39 85 20 f6 ff ff    	cmp    %eax,-0x9e0(%ebp)
 80729a0:	0f 96 c0             	setbe  %al
 80729a3:	0f b6 c0             	movzbl %al,%eax
 80729a6:	85 c0                	test   %eax,%eax
 80729a8:	75 0f                	jne    80729b9 <ProcessCommands+0xd2>
 80729aa:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 80729b1:	00 00 00 
 80729b4:	e9 a0 5d 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 80729b9:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 80729c0:	75 0e                	jne    80729d0 <ProcessCommands+0xe9>
 80729c2:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80729c8:	89 04 24             	mov    %eax,(%esp)
 80729cb:	e8 26 f4 00 00       	call   8081df6 <BrotliWarmupBitReader>
 80729d0:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80729d6:	8b 00                	mov    (%eax),%eax
 80729d8:	83 f8 07             	cmp    $0x7,%eax
 80729db:	74 3d                	je     8072a1a <ProcessCommands+0x133>
 80729dd:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80729e3:	8b 00                	mov    (%eax),%eax
 80729e5:	83 f8 08             	cmp    $0x8,%eax
 80729e8:	0f 84 9f 27 00 00    	je     807518d <ProcessCommands+0x28a6>
 80729ee:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80729f4:	8b 00                	mov    (%eax),%eax
 80729f6:	83 f8 09             	cmp    $0x9,%eax
 80729f9:	0f 84 4f 3a 00 00    	je     807644e <ProcessCommands+0x3b67>
 80729ff:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072a05:	8b 00                	mov    (%eax),%eax
 8072a07:	83 f8 0a             	cmp    $0xa,%eax
 8072a0a:	0f 84 95 5c 00 00    	je     80786a5 <ProcessCommands+0x5dbe>
 8072a10:	b8 e1 ff ff ff       	mov    $0xffffffe1,%eax
 8072a15:	e9 63 5d 00 00       	jmp    807877d <ProcessCommands+0x5e96>
 8072a1a:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8072a21:	74 0c                	je     8072a2f <ProcessCommands+0x148>
 8072a23:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072a29:	c7 00 07 00 00 00    	movl   $0x7,(%eax)
 8072a2f:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 8072a35:	89 85 24 f6 ff ff    	mov    %eax,-0x9dc(%ebp)
 8072a3b:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8072a41:	89 85 28 f6 ff ff    	mov    %eax,-0x9d8(%ebp)
 8072a47:	c7 85 2c f6 ff ff 1c 	movl   $0x1c,-0x9d4(%ebp)
 8072a4e:	00 00 00 
 8072a51:	83 bd 24 f6 ff ff 00 	cmpl   $0x0,-0x9dc(%ebp)
 8072a58:	74 07                	je     8072a61 <ProcessCommands+0x17a>
 8072a5a:	b8 01 00 00 00       	mov    $0x1,%eax
 8072a5f:	eb 2d                	jmp    8072a8e <ProcessCommands+0x1a7>
 8072a61:	8b 85 28 f6 ff ff    	mov    -0x9d8(%ebp),%eax
 8072a67:	89 85 30 f6 ff ff    	mov    %eax,-0x9d0(%ebp)
 8072a6d:	8b 85 2c f6 ff ff    	mov    -0x9d4(%ebp),%eax
 8072a73:	89 85 34 f6 ff ff    	mov    %eax,-0x9cc(%ebp)
 8072a79:	8b 85 30 f6 ff ff    	mov    -0x9d0(%ebp),%eax
 8072a7f:	8b 40 0c             	mov    0xc(%eax),%eax
 8072a82:	39 85 34 f6 ff ff    	cmp    %eax,-0x9cc(%ebp)
 8072a88:	0f 96 c0             	setbe  %al
 8072a8b:	0f b6 c0             	movzbl %al,%eax
 8072a8e:	85 c0                	test   %eax,%eax
 8072a90:	75 1b                	jne    8072aad <ProcessCommands+0x1c6>
 8072a92:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072a98:	c7 00 07 00 00 00    	movl   $0x7,(%eax)
 8072a9e:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8072aa5:	00 00 00 
 8072aa8:	e9 ac 5c 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8072aad:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072ab3:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
 8072ab9:	85 c0                	test   %eax,%eax
 8072abb:	0f 94 c0             	sete   %al
 8072abe:	0f b6 c0             	movzbl %al,%eax
 8072ac1:	85 c0                	test   %eax,%eax
 8072ac3:	74 41                	je     8072b06 <ProcessCommands+0x21f>
 8072ac5:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8072acc:	74 25                	je     8072af3 <ProcessCommands+0x20c>
 8072ace:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072ad4:	89 04 24             	mov    %eax,(%esp)
 8072ad7:	e8 ce bd ff ff       	call   806e8aa <SafeDecodeCommandBlockSwitch>
 8072adc:	85 c0                	test   %eax,%eax
 8072ade:	0f 85 36 ff ff ff    	jne    8072a1a <ProcessCommands+0x133>
 8072ae4:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8072aeb:	00 00 00 
 8072aee:	e9 66 5c 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8072af3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072af9:	89 04 24             	mov    %eax,(%esp)
 8072afc:	e8 85 ab ff ff       	call   806d686 <DecodeCommandBlockSwitch>
 8072b01:	e9 14 ff ff ff       	jmp    8072a1a <ProcessCommands+0x133>
 8072b06:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8072b0d:	0f 84 38 13 00 00    	je     8073e4b <ProcessCommands+0x1564>
 8072b13:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8072b19:	89 85 38 f6 ff ff    	mov    %eax,-0x9c8(%ebp)
 8072b1f:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8072b25:	89 85 3c f6 ff ff    	mov    %eax,-0x9c4(%ebp)
 8072b2b:	8d 85 e8 f5 ff ff    	lea    -0xa18(%ebp),%eax
 8072b31:	89 85 40 f6 ff ff    	mov    %eax,-0x9c0(%ebp)
 8072b37:	c7 85 44 f6 ff ff 01 	movl   $0x1,-0x9bc(%ebp)
 8072b3e:	00 00 00 
 8072b41:	8b 85 38 f6 ff ff    	mov    -0x9c8(%ebp),%eax
 8072b47:	89 85 48 f6 ff ff    	mov    %eax,-0x9b8(%ebp)
 8072b4d:	8b 85 3c f6 ff ff    	mov    -0x9c4(%ebp),%eax
 8072b53:	89 85 4c f6 ff ff    	mov    %eax,-0x9b4(%ebp)
 8072b59:	8b 85 40 f6 ff ff    	mov    -0x9c0(%ebp),%eax
 8072b5f:	89 85 50 f6 ff ff    	mov    %eax,-0x9b0(%ebp)
 8072b65:	c7 85 f0 f5 ff ff 00 	movl   $0x0,-0xa10(%ebp)
 8072b6c:	00 00 00 
 8072b6f:	83 bd 44 f6 ff ff 00 	cmpl   $0x0,-0x9bc(%ebp)
 8072b76:	0f 85 0c 02 00 00    	jne    8072d88 <ProcessCommands+0x4a1>
 8072b7c:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8072b82:	8b 40 64             	mov    0x64(%eax),%eax
 8072b85:	89 85 54 f6 ff ff    	mov    %eax,-0x9ac(%ebp)
 8072b8b:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8072b91:	89 85 58 f6 ff ff    	mov    %eax,-0x9a8(%ebp)
 8072b97:	8b 85 58 f6 ff ff    	mov    -0x9a8(%ebp),%eax
 8072b9d:	89 85 5c f6 ff ff    	mov    %eax,-0x9a4(%ebp)
 8072ba3:	8b 85 5c f6 ff ff    	mov    -0x9a4(%ebp),%eax
 8072ba9:	89 85 60 f6 ff ff    	mov    %eax,-0x9a0(%ebp)
 8072baf:	c7 85 64 f6 ff ff 10 	movl   $0x10,-0x99c(%ebp)
 8072bb6:	00 00 00 
 8072bb9:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072bbf:	8b 40 04             	mov    0x4(%eax),%eax
 8072bc2:	83 f8 0f             	cmp    $0xf,%eax
 8072bc5:	0f 86 86 00 00 00    	jbe    8072c51 <ProcessCommands+0x36a>
 8072bcb:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072bd1:	8b 00                	mov    (%eax),%eax
 8072bd3:	c1 e8 10             	shr    $0x10,%eax
 8072bd6:	89 c2                	mov    %eax,%edx
 8072bd8:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072bde:	89 10                	mov    %edx,(%eax)
 8072be0:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072be6:	8b 40 04             	mov    0x4(%eax),%eax
 8072be9:	83 f0 10             	xor    $0x10,%eax
 8072bec:	89 c2                	mov    %eax,%edx
 8072bee:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072bf4:	89 50 04             	mov    %edx,0x4(%eax)
 8072bf7:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072bfd:	8b 10                	mov    (%eax),%edx
 8072bff:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072c05:	8b 40 08             	mov    0x8(%eax),%eax
 8072c08:	89 85 68 f6 ff ff    	mov    %eax,-0x998(%ebp)
 8072c0e:	8b 85 68 f6 ff ff    	mov    -0x998(%ebp),%eax
 8072c14:	0f b7 00             	movzwl (%eax),%eax
 8072c17:	0f b7 c0             	movzwl %ax,%eax
 8072c1a:	c1 e0 10             	shl    $0x10,%eax
 8072c1d:	09 c2                	or     %eax,%edx
 8072c1f:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072c25:	89 10                	mov    %edx,(%eax)
 8072c27:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072c2d:	8b 40 0c             	mov    0xc(%eax),%eax
 8072c30:	8d 50 fe             	lea    -0x2(%eax),%edx
 8072c33:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072c39:	89 50 0c             	mov    %edx,0xc(%eax)
 8072c3c:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072c42:	8b 40 08             	mov    0x8(%eax),%eax
 8072c45:	8d 50 02             	lea    0x2(%eax),%edx
 8072c48:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8072c4e:	89 50 08             	mov    %edx,0x8(%eax)
 8072c51:	8b 85 5c f6 ff ff    	mov    -0x9a4(%ebp),%eax
 8072c57:	89 85 6c f6 ff ff    	mov    %eax,-0x994(%ebp)
 8072c5d:	8b 85 6c f6 ff ff    	mov    -0x994(%ebp),%eax
 8072c63:	8b 10                	mov    (%eax),%edx
 8072c65:	8b 85 6c f6 ff ff    	mov    -0x994(%ebp),%eax
 8072c6b:	8b 40 04             	mov    0x4(%eax),%eax
 8072c6e:	89 c1                	mov    %eax,%ecx
 8072c70:	d3 ea                	shr    %cl,%edx
 8072c72:	89 d0                	mov    %edx,%eax
 8072c74:	89 85 70 f6 ff ff    	mov    %eax,-0x990(%ebp)
 8072c7a:	8b 85 54 f6 ff ff    	mov    -0x9ac(%ebp),%eax
 8072c80:	89 85 74 f6 ff ff    	mov    %eax,-0x98c(%ebp)
 8072c86:	8b 85 58 f6 ff ff    	mov    -0x9a8(%ebp),%eax
 8072c8c:	89 85 78 f6 ff ff    	mov    %eax,-0x988(%ebp)
 8072c92:	8b 85 70 f6 ff ff    	mov    -0x990(%ebp),%eax
 8072c98:	0f b6 c0             	movzbl %al,%eax
 8072c9b:	c1 e0 02             	shl    $0x2,%eax
 8072c9e:	01 85 74 f6 ff ff    	add    %eax,-0x98c(%ebp)
 8072ca4:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8072caa:	0f b6 00             	movzbl (%eax),%eax
 8072cad:	3c 08                	cmp    $0x8,%al
 8072caf:	0f 86 83 00 00 00    	jbe    8072d38 <ProcessCommands+0x451>
 8072cb5:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8072cbb:	0f b6 00             	movzbl (%eax),%eax
 8072cbe:	0f b6 c0             	movzbl %al,%eax
 8072cc1:	83 e8 08             	sub    $0x8,%eax
 8072cc4:	89 85 7c f6 ff ff    	mov    %eax,-0x984(%ebp)
 8072cca:	8b 85 78 f6 ff ff    	mov    -0x988(%ebp),%eax
 8072cd0:	89 85 80 f6 ff ff    	mov    %eax,-0x980(%ebp)
 8072cd6:	c7 85 84 f6 ff ff 08 	movl   $0x8,-0x97c(%ebp)
 8072cdd:	00 00 00 
 8072ce0:	8b 85 80 f6 ff ff    	mov    -0x980(%ebp),%eax
 8072ce6:	8b 50 04             	mov    0x4(%eax),%edx
 8072ce9:	8b 85 84 f6 ff ff    	mov    -0x97c(%ebp),%eax
 8072cef:	01 c2                	add    %eax,%edx
 8072cf1:	8b 85 80 f6 ff ff    	mov    -0x980(%ebp),%eax
 8072cf7:	89 50 04             	mov    %edx,0x4(%eax)
 8072cfa:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8072d00:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8072d04:	0f b7 d0             	movzwl %ax,%edx
 8072d07:	8b 85 70 f6 ff ff    	mov    -0x990(%ebp),%eax
 8072d0d:	c1 e8 08             	shr    $0x8,%eax
 8072d10:	89 c1                	mov    %eax,%ecx
 8072d12:	8b 85 7c f6 ff ff    	mov    -0x984(%ebp),%eax
 8072d18:	89 85 88 f6 ff ff    	mov    %eax,-0x978(%ebp)
 8072d1e:	8b 85 88 f6 ff ff    	mov    -0x978(%ebp),%eax
 8072d24:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8072d2b:	21 c8                	and    %ecx,%eax
 8072d2d:	01 d0                	add    %edx,%eax
 8072d2f:	c1 e0 02             	shl    $0x2,%eax
 8072d32:	01 85 74 f6 ff ff    	add    %eax,-0x98c(%ebp)
 8072d38:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8072d3e:	0f b6 00             	movzbl (%eax),%eax
 8072d41:	0f b6 c0             	movzbl %al,%eax
 8072d44:	8b 95 78 f6 ff ff    	mov    -0x988(%ebp),%edx
 8072d4a:	89 95 8c f6 ff ff    	mov    %edx,-0x974(%ebp)
 8072d50:	89 85 90 f6 ff ff    	mov    %eax,-0x970(%ebp)
 8072d56:	8b 85 8c f6 ff ff    	mov    -0x974(%ebp),%eax
 8072d5c:	8b 50 04             	mov    0x4(%eax),%edx
 8072d5f:	8b 85 90 f6 ff ff    	mov    -0x970(%ebp),%eax
 8072d65:	01 c2                	add    %eax,%edx
 8072d67:	8b 85 8c f6 ff ff    	mov    -0x974(%ebp),%eax
 8072d6d:	89 50 04             	mov    %edx,0x4(%eax)
 8072d70:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8072d76:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8072d7a:	0f b7 c0             	movzwl %ax,%eax
 8072d7d:	89 85 ec f5 ff ff    	mov    %eax,-0xa14(%ebp)
 8072d83:	e9 22 03 00 00       	jmp    80730aa <ProcessCommands+0x7c3>
 8072d88:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8072d8e:	89 85 94 f6 ff ff    	mov    %eax,-0x96c(%ebp)
 8072d94:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8072d97:	89 85 98 f6 ff ff    	mov    %eax,-0x968(%ebp)
 8072d9d:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8072da3:	8b 10                	mov    (%eax),%edx
 8072da5:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8072dab:	89 10                	mov    %edx,(%eax)
 8072dad:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8072db3:	8b 50 04             	mov    0x4(%eax),%edx
 8072db6:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8072dbc:	89 50 04             	mov    %edx,0x4(%eax)
 8072dbf:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8072dc5:	8b 50 08             	mov    0x8(%eax),%edx
 8072dc8:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8072dce:	89 50 08             	mov    %edx,0x8(%eax)
 8072dd1:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8072dd7:	8b 50 0c             	mov    0xc(%eax),%edx
 8072dda:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8072de0:	89 50 0c             	mov    %edx,0xc(%eax)
 8072de3:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8072de9:	8b 40 64             	mov    0x64(%eax),%eax
 8072dec:	89 85 9c f6 ff ff    	mov    %eax,-0x964(%ebp)
 8072df2:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8072df8:	89 85 a0 f6 ff ff    	mov    %eax,-0x960(%ebp)
 8072dfe:	8d 85 ec f5 ff ff    	lea    -0xa14(%ebp),%eax
 8072e04:	89 85 a4 f6 ff ff    	mov    %eax,-0x95c(%ebp)
 8072e0a:	8b 85 a0 f6 ff ff    	mov    -0x960(%ebp),%eax
 8072e10:	89 85 a8 f6 ff ff    	mov    %eax,-0x958(%ebp)
 8072e16:	c7 85 ac f6 ff ff 0f 	movl   $0xf,-0x954(%ebp)
 8072e1d:	00 00 00 
 8072e20:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8072e23:	89 85 b0 f6 ff ff    	mov    %eax,-0x950(%ebp)
 8072e29:	e9 a8 00 00 00       	jmp    8072ed6 <ProcessCommands+0x5ef>
 8072e2e:	8b 85 a8 f6 ff ff    	mov    -0x958(%ebp),%eax
 8072e34:	89 85 b4 f6 ff ff    	mov    %eax,-0x94c(%ebp)
 8072e3a:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e40:	8b 40 0c             	mov    0xc(%eax),%eax
 8072e43:	85 c0                	test   %eax,%eax
 8072e45:	75 07                	jne    8072e4e <ProcessCommands+0x567>
 8072e47:	b8 00 00 00 00       	mov    $0x0,%eax
 8072e4c:	eb 7d                	jmp    8072ecb <ProcessCommands+0x5e4>
 8072e4e:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e54:	8b 00                	mov    (%eax),%eax
 8072e56:	c1 e8 08             	shr    $0x8,%eax
 8072e59:	89 c2                	mov    %eax,%edx
 8072e5b:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e61:	89 10                	mov    %edx,(%eax)
 8072e63:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e69:	8b 10                	mov    (%eax),%edx
 8072e6b:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e71:	8b 40 08             	mov    0x8(%eax),%eax
 8072e74:	0f b6 00             	movzbl (%eax),%eax
 8072e77:	0f b6 c0             	movzbl %al,%eax
 8072e7a:	c1 e0 18             	shl    $0x18,%eax
 8072e7d:	09 c2                	or     %eax,%edx
 8072e7f:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e85:	89 10                	mov    %edx,(%eax)
 8072e87:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e8d:	8b 40 04             	mov    0x4(%eax),%eax
 8072e90:	8d 50 f8             	lea    -0x8(%eax),%edx
 8072e93:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072e99:	89 50 04             	mov    %edx,0x4(%eax)
 8072e9c:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072ea2:	8b 40 0c             	mov    0xc(%eax),%eax
 8072ea5:	8d 50 ff             	lea    -0x1(%eax),%edx
 8072ea8:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072eae:	89 50 0c             	mov    %edx,0xc(%eax)
 8072eb1:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072eb7:	8b 40 08             	mov    0x8(%eax),%eax
 8072eba:	8d 50 01             	lea    0x1(%eax),%edx
 8072ebd:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8072ec3:	89 50 08             	mov    %edx,0x8(%eax)
 8072ec6:	b8 01 00 00 00       	mov    $0x1,%eax
 8072ecb:	85 c0                	test   %eax,%eax
 8072ecd:	75 07                	jne    8072ed6 <ProcessCommands+0x5ef>
 8072ecf:	b8 00 00 00 00       	mov    $0x0,%eax
 8072ed4:	eb 77                	jmp    8072f4d <ProcessCommands+0x666>
 8072ed6:	8b 85 a8 f6 ff ff    	mov    -0x958(%ebp),%eax
 8072edc:	89 85 b8 f6 ff ff    	mov    %eax,-0x948(%ebp)
 8072ee2:	8b 85 b8 f6 ff ff    	mov    -0x948(%ebp),%eax
 8072ee8:	8b 40 04             	mov    0x4(%eax),%eax
 8072eeb:	ba 20 00 00 00       	mov    $0x20,%edx
 8072ef0:	29 c2                	sub    %eax,%edx
 8072ef2:	89 d0                	mov    %edx,%eax
 8072ef4:	39 85 ac f6 ff ff    	cmp    %eax,-0x954(%ebp)
 8072efa:	0f 87 2e ff ff ff    	ja     8072e2e <ProcessCommands+0x547>
 8072f00:	8b 85 a8 f6 ff ff    	mov    -0x958(%ebp),%eax
 8072f06:	89 85 bc f6 ff ff    	mov    %eax,-0x944(%ebp)
 8072f0c:	8b 85 bc f6 ff ff    	mov    -0x944(%ebp),%eax
 8072f12:	8b 10                	mov    (%eax),%edx
 8072f14:	8b 85 bc f6 ff ff    	mov    -0x944(%ebp),%eax
 8072f1a:	8b 40 04             	mov    0x4(%eax),%eax
 8072f1d:	89 c1                	mov    %eax,%ecx
 8072f1f:	d3 ea                	shr    %cl,%edx
 8072f21:	89 d0                	mov    %edx,%eax
 8072f23:	89 c2                	mov    %eax,%edx
 8072f25:	8b 85 ac f6 ff ff    	mov    -0x954(%ebp),%eax
 8072f2b:	89 85 c0 f6 ff ff    	mov    %eax,-0x940(%ebp)
 8072f31:	8b 85 c0 f6 ff ff    	mov    -0x940(%ebp),%eax
 8072f37:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8072f3e:	21 c2                	and    %eax,%edx
 8072f40:	8b 85 b0 f6 ff ff    	mov    -0x950(%ebp),%eax
 8072f46:	89 10                	mov    %edx,(%eax)
 8072f48:	b8 01 00 00 00       	mov    $0x1,%eax
 8072f4d:	85 c0                	test   %eax,%eax
 8072f4f:	0f 95 c0             	setne  %al
 8072f52:	0f b6 c0             	movzbl %al,%eax
 8072f55:	85 c0                	test   %eax,%eax
 8072f57:	0f 84 1d 01 00 00    	je     807307a <ProcessCommands+0x793>
 8072f5d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8072f60:	89 85 c4 f6 ff ff    	mov    %eax,-0x93c(%ebp)
 8072f66:	8b 85 9c f6 ff ff    	mov    -0x964(%ebp),%eax
 8072f6c:	89 85 c8 f6 ff ff    	mov    %eax,-0x938(%ebp)
 8072f72:	8b 85 a0 f6 ff ff    	mov    -0x960(%ebp),%eax
 8072f78:	89 85 cc f6 ff ff    	mov    %eax,-0x934(%ebp)
 8072f7e:	8b 85 c4 f6 ff ff    	mov    -0x93c(%ebp),%eax
 8072f84:	0f b6 c0             	movzbl %al,%eax
 8072f87:	c1 e0 02             	shl    $0x2,%eax
 8072f8a:	01 85 c8 f6 ff ff    	add    %eax,-0x938(%ebp)
 8072f90:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8072f96:	0f b6 00             	movzbl (%eax),%eax
 8072f99:	3c 08                	cmp    $0x8,%al
 8072f9b:	0f 86 83 00 00 00    	jbe    8073024 <ProcessCommands+0x73d>
 8072fa1:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8072fa7:	0f b6 00             	movzbl (%eax),%eax
 8072faa:	0f b6 c0             	movzbl %al,%eax
 8072fad:	83 e8 08             	sub    $0x8,%eax
 8072fb0:	89 85 d0 f6 ff ff    	mov    %eax,-0x930(%ebp)
 8072fb6:	8b 85 cc f6 ff ff    	mov    -0x934(%ebp),%eax
 8072fbc:	89 85 d4 f6 ff ff    	mov    %eax,-0x92c(%ebp)
 8072fc2:	c7 85 d8 f6 ff ff 08 	movl   $0x8,-0x928(%ebp)
 8072fc9:	00 00 00 
 8072fcc:	8b 85 d4 f6 ff ff    	mov    -0x92c(%ebp),%eax
 8072fd2:	8b 50 04             	mov    0x4(%eax),%edx
 8072fd5:	8b 85 d8 f6 ff ff    	mov    -0x928(%ebp),%eax
 8072fdb:	01 c2                	add    %eax,%edx
 8072fdd:	8b 85 d4 f6 ff ff    	mov    -0x92c(%ebp),%eax
 8072fe3:	89 50 04             	mov    %edx,0x4(%eax)
 8072fe6:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8072fec:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8072ff0:	0f b7 d0             	movzwl %ax,%edx
 8072ff3:	8b 85 c4 f6 ff ff    	mov    -0x93c(%ebp),%eax
 8072ff9:	c1 e8 08             	shr    $0x8,%eax
 8072ffc:	89 c1                	mov    %eax,%ecx
 8072ffe:	8b 85 d0 f6 ff ff    	mov    -0x930(%ebp),%eax
 8073004:	89 85 dc f6 ff ff    	mov    %eax,-0x924(%ebp)
 807300a:	8b 85 dc f6 ff ff    	mov    -0x924(%ebp),%eax
 8073010:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8073017:	21 c8                	and    %ecx,%eax
 8073019:	01 d0                	add    %edx,%eax
 807301b:	c1 e0 02             	shl    $0x2,%eax
 807301e:	01 85 c8 f6 ff ff    	add    %eax,-0x938(%ebp)
 8073024:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 807302a:	0f b6 00             	movzbl (%eax),%eax
 807302d:	0f b6 c0             	movzbl %al,%eax
 8073030:	8b 95 cc f6 ff ff    	mov    -0x934(%ebp),%edx
 8073036:	89 95 e0 f6 ff ff    	mov    %edx,-0x920(%ebp)
 807303c:	89 85 e4 f6 ff ff    	mov    %eax,-0x91c(%ebp)
 8073042:	8b 85 e0 f6 ff ff    	mov    -0x920(%ebp),%eax
 8073048:	8b 50 04             	mov    0x4(%eax),%edx
 807304b:	8b 85 e4 f6 ff ff    	mov    -0x91c(%ebp),%eax
 8073051:	01 c2                	add    %eax,%edx
 8073053:	8b 85 e0 f6 ff ff    	mov    -0x920(%ebp),%eax
 8073059:	89 50 04             	mov    %edx,0x4(%eax)
 807305c:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8073062:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8073066:	0f b7 c0             	movzwl %ax,%eax
 8073069:	89 c2                	mov    %eax,%edx
 807306b:	8b 85 a4 f6 ff ff    	mov    -0x95c(%ebp),%eax
 8073071:	89 10                	mov    %edx,(%eax)
 8073073:	b8 01 00 00 00       	mov    $0x1,%eax
 8073078:	eb 22                	jmp    807309c <ProcessCommands+0x7b5>
 807307a:	8b 85 a4 f6 ff ff    	mov    -0x95c(%ebp),%eax
 8073080:	89 44 24 08          	mov    %eax,0x8(%esp)
 8073084:	8b 85 a0 f6 ff ff    	mov    -0x960(%ebp),%eax
 807308a:	89 44 24 04          	mov    %eax,0x4(%esp)
 807308e:	8b 85 9c f6 ff ff    	mov    -0x964(%ebp),%eax
 8073094:	89 04 24             	mov    %eax,(%esp)
 8073097:	e8 30 59 ff ff       	call   80689cc <SafeDecodeSymbol>
 807309c:	85 c0                	test   %eax,%eax
 807309e:	75 0a                	jne    80730aa <ProcessCommands+0x7c3>
 80730a0:	b8 00 00 00 00       	mov    $0x0,%eax
 80730a5:	e9 8a 0d 00 00       	jmp    8073e34 <ProcessCommands+0x154d>
 80730aa:	8b 85 ec f5 ff ff    	mov    -0xa14(%ebp),%eax
 80730b0:	8b 94 c3 a4 82 fd ff 	mov    -0x27d5c(%ebx,%eax,8),%edx
 80730b7:	8b 84 c3 a0 82 fd ff 	mov    -0x27d60(%ebx,%eax,8),%eax
 80730be:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80730c1:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 80730c4:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax
 80730c8:	0f be d0             	movsbl %al,%edx
 80730cb:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 80730d1:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 80730d7:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax
 80730db:	0f b6 d0             	movzbl %al,%edx
 80730de:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 80730e4:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 80730ea:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 80730f0:	8b 50 70             	mov    0x70(%eax),%edx
 80730f3:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 80730f9:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 80730ff:	01 d0                	add    %edx,%eax
 8073101:	0f b6 10             	movzbl (%eax),%edx
 8073104:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 807310a:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
 8073110:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
 8073114:	0f b7 d0             	movzwl %ax,%edx
 8073117:	8b 85 50 f6 ff ff    	mov    -0x9b0(%ebp),%eax
 807311d:	89 10                	mov    %edx,(%eax)
 807311f:	83 bd 44 f6 ff ff 00 	cmpl   $0x0,-0x9bc(%ebp)
 8073126:	0f 85 7b 08 00 00    	jne    80739a7 <ProcessCommands+0x10c0>
 807312c:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8073130:	84 c0                	test   %al,%al
 8073132:	0f 95 c0             	setne  %al
 8073135:	0f b6 c0             	movzbl %al,%eax
 8073138:	85 c0                	test   %eax,%eax
 807313a:	0f 84 31 04 00 00    	je     8073571 <ProcessCommands+0xc8a>
 8073140:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8073144:	0f b6 c0             	movzbl %al,%eax
 8073147:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 807314d:	89 95 e8 f6 ff ff    	mov    %edx,-0x918(%ebp)
 8073153:	89 85 ec f6 ff ff    	mov    %eax,-0x914(%ebp)
 8073159:	83 bd ec f6 ff ff 10 	cmpl   $0x10,-0x914(%ebp)
 8073160:	0f 87 59 01 00 00    	ja     80732bf <ProcessCommands+0x9d8>
 8073166:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 807316c:	89 85 f0 f6 ff ff    	mov    %eax,-0x910(%ebp)
 8073172:	8b 85 ec f6 ff ff    	mov    -0x914(%ebp),%eax
 8073178:	89 85 f4 f6 ff ff    	mov    %eax,-0x90c(%ebp)
 807317e:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8073184:	8b 40 04             	mov    0x4(%eax),%eax
 8073187:	83 f8 0f             	cmp    $0xf,%eax
 807318a:	0f 86 86 00 00 00    	jbe    8073216 <ProcessCommands+0x92f>
 8073190:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8073196:	8b 00                	mov    (%eax),%eax
 8073198:	c1 e8 10             	shr    $0x10,%eax
 807319b:	89 c2                	mov    %eax,%edx
 807319d:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731a3:	89 10                	mov    %edx,(%eax)
 80731a5:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731ab:	8b 40 04             	mov    0x4(%eax),%eax
 80731ae:	83 f0 10             	xor    $0x10,%eax
 80731b1:	89 c2                	mov    %eax,%edx
 80731b3:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731b9:	89 50 04             	mov    %edx,0x4(%eax)
 80731bc:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731c2:	8b 10                	mov    (%eax),%edx
 80731c4:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731ca:	8b 40 08             	mov    0x8(%eax),%eax
 80731cd:	89 85 f8 f6 ff ff    	mov    %eax,-0x908(%ebp)
 80731d3:	8b 85 f8 f6 ff ff    	mov    -0x908(%ebp),%eax
 80731d9:	0f b7 00             	movzwl (%eax),%eax
 80731dc:	0f b7 c0             	movzwl %ax,%eax
 80731df:	c1 e0 10             	shl    $0x10,%eax
 80731e2:	09 c2                	or     %eax,%edx
 80731e4:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731ea:	89 10                	mov    %edx,(%eax)
 80731ec:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731f2:	8b 40 0c             	mov    0xc(%eax),%eax
 80731f5:	8d 50 fe             	lea    -0x2(%eax),%edx
 80731f8:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80731fe:	89 50 0c             	mov    %edx,0xc(%eax)
 8073201:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8073207:	8b 40 08             	mov    0x8(%eax),%eax
 807320a:	8d 50 02             	lea    0x2(%eax),%edx
 807320d:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8073213:	89 50 08             	mov    %edx,0x8(%eax)
 8073216:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 807321c:	89 85 fc f6 ff ff    	mov    %eax,-0x904(%ebp)
 8073222:	8b 85 ec f6 ff ff    	mov    -0x914(%ebp),%eax
 8073228:	89 85 00 f7 ff ff    	mov    %eax,-0x900(%ebp)
 807322e:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8073234:	89 85 04 f7 ff ff    	mov    %eax,-0x8fc(%ebp)
 807323a:	8b 85 fc f6 ff ff    	mov    -0x904(%ebp),%eax
 8073240:	89 85 08 f7 ff ff    	mov    %eax,-0x8f8(%ebp)
 8073246:	8b 85 08 f7 ff ff    	mov    -0x8f8(%ebp),%eax
 807324c:	8b 10                	mov    (%eax),%edx
 807324e:	8b 85 08 f7 ff ff    	mov    -0x8f8(%ebp),%eax
 8073254:	8b 40 04             	mov    0x4(%eax),%eax
 8073257:	89 c1                	mov    %eax,%ecx
 8073259:	d3 ea                	shr    %cl,%edx
 807325b:	89 d0                	mov    %edx,%eax
 807325d:	89 c2                	mov    %eax,%edx
 807325f:	8b 85 00 f7 ff ff    	mov    -0x900(%ebp),%eax
 8073265:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%ebp)
 807326b:	8b 85 0c f7 ff ff    	mov    -0x8f4(%ebp),%eax
 8073271:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8073278:	21 c2                	and    %eax,%edx
 807327a:	8b 85 04 f7 ff ff    	mov    -0x8fc(%ebp),%eax
 8073280:	89 10                	mov    %edx,(%eax)
 8073282:	8b 85 fc f6 ff ff    	mov    -0x904(%ebp),%eax
 8073288:	89 85 10 f7 ff ff    	mov    %eax,-0x8f0(%ebp)
 807328e:	8b 85 00 f7 ff ff    	mov    -0x900(%ebp),%eax
 8073294:	89 85 14 f7 ff ff    	mov    %eax,-0x8ec(%ebp)
 807329a:	8b 85 10 f7 ff ff    	mov    -0x8f0(%ebp),%eax
 80732a0:	8b 50 04             	mov    0x4(%eax),%edx
 80732a3:	8b 85 14 f7 ff ff    	mov    -0x8ec(%ebp),%eax
 80732a9:	01 c2                	add    %eax,%edx
 80732ab:	8b 85 10 f7 ff ff    	mov    -0x8f0(%ebp),%eax
 80732b1:	89 50 04             	mov    %edx,0x4(%eax)
 80732b4:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 80732ba:	e9 ac 02 00 00       	jmp    807356b <ProcessCommands+0xc84>
 80732bf:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 80732c5:	89 85 18 f7 ff ff    	mov    %eax,-0x8e8(%ebp)
 80732cb:	c7 85 1c f7 ff ff 10 	movl   $0x10,-0x8e4(%ebp)
 80732d2:	00 00 00 
 80732d5:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80732db:	8b 40 04             	mov    0x4(%eax),%eax
 80732de:	83 f8 0f             	cmp    $0xf,%eax
 80732e1:	0f 86 86 00 00 00    	jbe    807336d <ProcessCommands+0xa86>
 80732e7:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80732ed:	8b 00                	mov    (%eax),%eax
 80732ef:	c1 e8 10             	shr    $0x10,%eax
 80732f2:	89 c2                	mov    %eax,%edx
 80732f4:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80732fa:	89 10                	mov    %edx,(%eax)
 80732fc:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073302:	8b 40 04             	mov    0x4(%eax),%eax
 8073305:	83 f0 10             	xor    $0x10,%eax
 8073308:	89 c2                	mov    %eax,%edx
 807330a:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073310:	89 50 04             	mov    %edx,0x4(%eax)
 8073313:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073319:	8b 10                	mov    (%eax),%edx
 807331b:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073321:	8b 40 08             	mov    0x8(%eax),%eax
 8073324:	89 85 20 f7 ff ff    	mov    %eax,-0x8e0(%ebp)
 807332a:	8b 85 20 f7 ff ff    	mov    -0x8e0(%ebp),%eax
 8073330:	0f b7 00             	movzwl (%eax),%eax
 8073333:	0f b7 c0             	movzwl %ax,%eax
 8073336:	c1 e0 10             	shl    $0x10,%eax
 8073339:	09 c2                	or     %eax,%edx
 807333b:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073341:	89 10                	mov    %edx,(%eax)
 8073343:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073349:	8b 40 0c             	mov    0xc(%eax),%eax
 807334c:	8d 50 fe             	lea    -0x2(%eax),%edx
 807334f:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 8073355:	89 50 0c             	mov    %edx,0xc(%eax)
 8073358:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 807335e:	8b 40 08             	mov    0x8(%eax),%eax
 8073361:	8d 50 02             	lea    0x2(%eax),%edx
 8073364:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 807336a:	89 50 08             	mov    %edx,0x8(%eax)
 807336d:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 8073373:	89 85 24 f7 ff ff    	mov    %eax,-0x8dc(%ebp)
 8073379:	c7 85 28 f7 ff ff 10 	movl   $0x10,-0x8d8(%ebp)
 8073380:	00 00 00 
 8073383:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 8073389:	89 85 2c f7 ff ff    	mov    %eax,-0x8d4(%ebp)
 807338f:	8b 85 24 f7 ff ff    	mov    -0x8dc(%ebp),%eax
 8073395:	89 85 30 f7 ff ff    	mov    %eax,-0x8d0(%ebp)
 807339b:	8b 85 30 f7 ff ff    	mov    -0x8d0(%ebp),%eax
 80733a1:	8b 10                	mov    (%eax),%edx
 80733a3:	8b 85 30 f7 ff ff    	mov    -0x8d0(%ebp),%eax
 80733a9:	8b 40 04             	mov    0x4(%eax),%eax
 80733ac:	89 c1                	mov    %eax,%ecx
 80733ae:	d3 ea                	shr    %cl,%edx
 80733b0:	89 d0                	mov    %edx,%eax
 80733b2:	89 c2                	mov    %eax,%edx
 80733b4:	8b 85 28 f7 ff ff    	mov    -0x8d8(%ebp),%eax
 80733ba:	89 85 34 f7 ff ff    	mov    %eax,-0x8cc(%ebp)
 80733c0:	8b 85 34 f7 ff ff    	mov    -0x8cc(%ebp),%eax
 80733c6:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80733cd:	21 c2                	and    %eax,%edx
 80733cf:	8b 85 2c f7 ff ff    	mov    -0x8d4(%ebp),%eax
 80733d5:	89 10                	mov    %edx,(%eax)
 80733d7:	8b 85 24 f7 ff ff    	mov    -0x8dc(%ebp),%eax
 80733dd:	89 85 38 f7 ff ff    	mov    %eax,-0x8c8(%ebp)
 80733e3:	8b 85 28 f7 ff ff    	mov    -0x8d8(%ebp),%eax
 80733e9:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%ebp)
 80733ef:	8b 85 38 f7 ff ff    	mov    -0x8c8(%ebp),%eax
 80733f5:	8b 50 04             	mov    0x4(%eax),%edx
 80733f8:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 80733fe:	01 c2                	add    %eax,%edx
 8073400:	8b 85 38 f7 ff ff    	mov    -0x8c8(%ebp),%eax
 8073406:	89 50 04             	mov    %edx,0x4(%eax)
 8073409:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 807340f:	89 85 40 f7 ff ff    	mov    %eax,-0x8c0(%ebp)
 8073415:	c7 85 44 f7 ff ff 08 	movl   $0x8,-0x8bc(%ebp)
 807341c:	00 00 00 
 807341f:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8073425:	8b 40 04             	mov    0x4(%eax),%eax
 8073428:	83 f8 0f             	cmp    $0xf,%eax
 807342b:	0f 86 86 00 00 00    	jbe    80734b7 <ProcessCommands+0xbd0>
 8073431:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8073437:	8b 00                	mov    (%eax),%eax
 8073439:	c1 e8 10             	shr    $0x10,%eax
 807343c:	89 c2                	mov    %eax,%edx
 807343e:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8073444:	89 10                	mov    %edx,(%eax)
 8073446:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807344c:	8b 40 04             	mov    0x4(%eax),%eax
 807344f:	83 f0 10             	xor    $0x10,%eax
 8073452:	89 c2                	mov    %eax,%edx
 8073454:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807345a:	89 50 04             	mov    %edx,0x4(%eax)
 807345d:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8073463:	8b 10                	mov    (%eax),%edx
 8073465:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807346b:	8b 40 08             	mov    0x8(%eax),%eax
 807346e:	89 85 48 f7 ff ff    	mov    %eax,-0x8b8(%ebp)
 8073474:	8b 85 48 f7 ff ff    	mov    -0x8b8(%ebp),%eax
 807347a:	0f b7 00             	movzwl (%eax),%eax
 807347d:	0f b7 c0             	movzwl %ax,%eax
 8073480:	c1 e0 10             	shl    $0x10,%eax
 8073483:	09 c2                	or     %eax,%edx
 8073485:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807348b:	89 10                	mov    %edx,(%eax)
 807348d:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8073493:	8b 40 0c             	mov    0xc(%eax),%eax
 8073496:	8d 50 fe             	lea    -0x2(%eax),%edx
 8073499:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807349f:	89 50 0c             	mov    %edx,0xc(%eax)
 80734a2:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80734a8:	8b 40 08             	mov    0x8(%eax),%eax
 80734ab:	8d 50 02             	lea    0x2(%eax),%edx
 80734ae:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80734b4:	89 50 08             	mov    %edx,0x8(%eax)
 80734b7:	8b 85 ec f6 ff ff    	mov    -0x914(%ebp),%eax
 80734bd:	8d 50 f0             	lea    -0x10(%eax),%edx
 80734c0:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 80734c6:	89 85 4c f7 ff ff    	mov    %eax,-0x8b4(%ebp)
 80734cc:	89 95 50 f7 ff ff    	mov    %edx,-0x8b0(%ebp)
 80734d2:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 80734d8:	89 85 54 f7 ff ff    	mov    %eax,-0x8ac(%ebp)
 80734de:	8b 85 4c f7 ff ff    	mov    -0x8b4(%ebp),%eax
 80734e4:	89 85 58 f7 ff ff    	mov    %eax,-0x8a8(%ebp)
 80734ea:	8b 85 58 f7 ff ff    	mov    -0x8a8(%ebp),%eax
 80734f0:	8b 10                	mov    (%eax),%edx
 80734f2:	8b 85 58 f7 ff ff    	mov    -0x8a8(%ebp),%eax
 80734f8:	8b 40 04             	mov    0x4(%eax),%eax
 80734fb:	89 c1                	mov    %eax,%ecx
 80734fd:	d3 ea                	shr    %cl,%edx
 80734ff:	89 d0                	mov    %edx,%eax
 8073501:	89 c2                	mov    %eax,%edx
 8073503:	8b 85 50 f7 ff ff    	mov    -0x8b0(%ebp),%eax
 8073509:	89 85 5c f7 ff ff    	mov    %eax,-0x8a4(%ebp)
 807350f:	8b 85 5c f7 ff ff    	mov    -0x8a4(%ebp),%eax
 8073515:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807351c:	21 c2                	and    %eax,%edx
 807351e:	8b 85 54 f7 ff ff    	mov    -0x8ac(%ebp),%eax
 8073524:	89 10                	mov    %edx,(%eax)
 8073526:	8b 85 4c f7 ff ff    	mov    -0x8b4(%ebp),%eax
 807352c:	89 85 60 f7 ff ff    	mov    %eax,-0x8a0(%ebp)
 8073532:	8b 85 50 f7 ff ff    	mov    -0x8b0(%ebp),%eax
 8073538:	89 85 64 f7 ff ff    	mov    %eax,-0x89c(%ebp)
 807353e:	8b 85 60 f7 ff ff    	mov    -0x8a0(%ebp),%eax
 8073544:	8b 50 04             	mov    0x4(%eax),%edx
 8073547:	8b 85 64 f7 ff ff    	mov    -0x89c(%ebp),%eax
 807354d:	01 c2                	add    %eax,%edx
 807354f:	8b 85 60 f7 ff ff    	mov    -0x8a0(%ebp),%eax
 8073555:	89 50 04             	mov    %edx,0x4(%eax)
 8073558:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807355e:	c1 e0 10             	shl    $0x10,%eax
 8073561:	89 c2                	mov    %eax,%edx
 8073563:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8073569:	09 d0                	or     %edx,%eax
 807356b:	89 85 f0 f5 ff ff    	mov    %eax,-0xa10(%ebp)
 8073571:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 8073575:	0f b6 c0             	movzbl %al,%eax
 8073578:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 807357e:	89 95 68 f7 ff ff    	mov    %edx,-0x898(%ebp)
 8073584:	89 85 6c f7 ff ff    	mov    %eax,-0x894(%ebp)
 807358a:	83 bd 6c f7 ff ff 10 	cmpl   $0x10,-0x894(%ebp)
 8073591:	0f 87 59 01 00 00    	ja     80736f0 <ProcessCommands+0xe09>
 8073597:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 807359d:	89 85 70 f7 ff ff    	mov    %eax,-0x890(%ebp)
 80735a3:	8b 85 6c f7 ff ff    	mov    -0x894(%ebp),%eax
 80735a9:	89 85 74 f7 ff ff    	mov    %eax,-0x88c(%ebp)
 80735af:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735b5:	8b 40 04             	mov    0x4(%eax),%eax
 80735b8:	83 f8 0f             	cmp    $0xf,%eax
 80735bb:	0f 86 86 00 00 00    	jbe    8073647 <ProcessCommands+0xd60>
 80735c1:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735c7:	8b 00                	mov    (%eax),%eax
 80735c9:	c1 e8 10             	shr    $0x10,%eax
 80735cc:	89 c2                	mov    %eax,%edx
 80735ce:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735d4:	89 10                	mov    %edx,(%eax)
 80735d6:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735dc:	8b 40 04             	mov    0x4(%eax),%eax
 80735df:	83 f0 10             	xor    $0x10,%eax
 80735e2:	89 c2                	mov    %eax,%edx
 80735e4:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735ea:	89 50 04             	mov    %edx,0x4(%eax)
 80735ed:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735f3:	8b 10                	mov    (%eax),%edx
 80735f5:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80735fb:	8b 40 08             	mov    0x8(%eax),%eax
 80735fe:	89 85 78 f7 ff ff    	mov    %eax,-0x888(%ebp)
 8073604:	8b 85 78 f7 ff ff    	mov    -0x888(%ebp),%eax
 807360a:	0f b7 00             	movzwl (%eax),%eax
 807360d:	0f b7 c0             	movzwl %ax,%eax
 8073610:	c1 e0 10             	shl    $0x10,%eax
 8073613:	09 c2                	or     %eax,%edx
 8073615:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 807361b:	89 10                	mov    %edx,(%eax)
 807361d:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8073623:	8b 40 0c             	mov    0xc(%eax),%eax
 8073626:	8d 50 fe             	lea    -0x2(%eax),%edx
 8073629:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 807362f:	89 50 0c             	mov    %edx,0xc(%eax)
 8073632:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8073638:	8b 40 08             	mov    0x8(%eax),%eax
 807363b:	8d 50 02             	lea    0x2(%eax),%edx
 807363e:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8073644:	89 50 08             	mov    %edx,0x8(%eax)
 8073647:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 807364d:	89 85 7c f7 ff ff    	mov    %eax,-0x884(%ebp)
 8073653:	8b 85 6c f7 ff ff    	mov    -0x894(%ebp),%eax
 8073659:	89 85 80 f7 ff ff    	mov    %eax,-0x880(%ebp)
 807365f:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8073665:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%ebp)
 807366b:	8b 85 7c f7 ff ff    	mov    -0x884(%ebp),%eax
 8073671:	89 85 88 f7 ff ff    	mov    %eax,-0x878(%ebp)
 8073677:	8b 85 88 f7 ff ff    	mov    -0x878(%ebp),%eax
 807367d:	8b 10                	mov    (%eax),%edx
 807367f:	8b 85 88 f7 ff ff    	mov    -0x878(%ebp),%eax
 8073685:	8b 40 04             	mov    0x4(%eax),%eax
 8073688:	89 c1                	mov    %eax,%ecx
 807368a:	d3 ea                	shr    %cl,%edx
 807368c:	89 d0                	mov    %edx,%eax
 807368e:	89 c2                	mov    %eax,%edx
 8073690:	8b 85 80 f7 ff ff    	mov    -0x880(%ebp),%eax
 8073696:	89 85 8c f7 ff ff    	mov    %eax,-0x874(%ebp)
 807369c:	8b 85 8c f7 ff ff    	mov    -0x874(%ebp),%eax
 80736a2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80736a9:	21 c2                	and    %eax,%edx
 80736ab:	8b 85 84 f7 ff ff    	mov    -0x87c(%ebp),%eax
 80736b1:	89 10                	mov    %edx,(%eax)
 80736b3:	8b 85 7c f7 ff ff    	mov    -0x884(%ebp),%eax
 80736b9:	89 85 90 f7 ff ff    	mov    %eax,-0x870(%ebp)
 80736bf:	8b 85 80 f7 ff ff    	mov    -0x880(%ebp),%eax
 80736c5:	89 85 94 f7 ff ff    	mov    %eax,-0x86c(%ebp)
 80736cb:	8b 85 90 f7 ff ff    	mov    -0x870(%ebp),%eax
 80736d1:	8b 50 04             	mov    0x4(%eax),%edx
 80736d4:	8b 85 94 f7 ff ff    	mov    -0x86c(%ebp),%eax
 80736da:	01 c2                	add    %eax,%edx
 80736dc:	8b 85 90 f7 ff ff    	mov    -0x870(%ebp),%eax
 80736e2:	89 50 04             	mov    %edx,0x4(%eax)
 80736e5:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 80736eb:	e9 ac 02 00 00       	jmp    807399c <ProcessCommands+0x10b5>
 80736f0:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 80736f6:	89 85 98 f7 ff ff    	mov    %eax,-0x868(%ebp)
 80736fc:	c7 85 9c f7 ff ff 10 	movl   $0x10,-0x864(%ebp)
 8073703:	00 00 00 
 8073706:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807370c:	8b 40 04             	mov    0x4(%eax),%eax
 807370f:	83 f8 0f             	cmp    $0xf,%eax
 8073712:	0f 86 86 00 00 00    	jbe    807379e <ProcessCommands+0xeb7>
 8073718:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807371e:	8b 00                	mov    (%eax),%eax
 8073720:	c1 e8 10             	shr    $0x10,%eax
 8073723:	89 c2                	mov    %eax,%edx
 8073725:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807372b:	89 10                	mov    %edx,(%eax)
 807372d:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8073733:	8b 40 04             	mov    0x4(%eax),%eax
 8073736:	83 f0 10             	xor    $0x10,%eax
 8073739:	89 c2                	mov    %eax,%edx
 807373b:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8073741:	89 50 04             	mov    %edx,0x4(%eax)
 8073744:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807374a:	8b 10                	mov    (%eax),%edx
 807374c:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8073752:	8b 40 08             	mov    0x8(%eax),%eax
 8073755:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%ebp)
 807375b:	8b 85 a0 f7 ff ff    	mov    -0x860(%ebp),%eax
 8073761:	0f b7 00             	movzwl (%eax),%eax
 8073764:	0f b7 c0             	movzwl %ax,%eax
 8073767:	c1 e0 10             	shl    $0x10,%eax
 807376a:	09 c2                	or     %eax,%edx
 807376c:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8073772:	89 10                	mov    %edx,(%eax)
 8073774:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807377a:	8b 40 0c             	mov    0xc(%eax),%eax
 807377d:	8d 50 fe             	lea    -0x2(%eax),%edx
 8073780:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8073786:	89 50 0c             	mov    %edx,0xc(%eax)
 8073789:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807378f:	8b 40 08             	mov    0x8(%eax),%eax
 8073792:	8d 50 02             	lea    0x2(%eax),%edx
 8073795:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807379b:	89 50 08             	mov    %edx,0x8(%eax)
 807379e:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 80737a4:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%ebp)
 80737aa:	c7 85 a8 f7 ff ff 10 	movl   $0x10,-0x858(%ebp)
 80737b1:	00 00 00 
 80737b4:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 80737ba:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%ebp)
 80737c0:	8b 85 a4 f7 ff ff    	mov    -0x85c(%ebp),%eax
 80737c6:	89 85 b0 f7 ff ff    	mov    %eax,-0x850(%ebp)
 80737cc:	8b 85 b0 f7 ff ff    	mov    -0x850(%ebp),%eax
 80737d2:	8b 10                	mov    (%eax),%edx
 80737d4:	8b 85 b0 f7 ff ff    	mov    -0x850(%ebp),%eax
 80737da:	8b 40 04             	mov    0x4(%eax),%eax
 80737dd:	89 c1                	mov    %eax,%ecx
 80737df:	d3 ea                	shr    %cl,%edx
 80737e1:	89 d0                	mov    %edx,%eax
 80737e3:	89 c2                	mov    %eax,%edx
 80737e5:	8b 85 a8 f7 ff ff    	mov    -0x858(%ebp),%eax
 80737eb:	89 85 b4 f7 ff ff    	mov    %eax,-0x84c(%ebp)
 80737f1:	8b 85 b4 f7 ff ff    	mov    -0x84c(%ebp),%eax
 80737f7:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80737fe:	21 c2                	and    %eax,%edx
 8073800:	8b 85 ac f7 ff ff    	mov    -0x854(%ebp),%eax
 8073806:	89 10                	mov    %edx,(%eax)
 8073808:	8b 85 a4 f7 ff ff    	mov    -0x85c(%ebp),%eax
 807380e:	89 85 b8 f7 ff ff    	mov    %eax,-0x848(%ebp)
 8073814:	8b 85 a8 f7 ff ff    	mov    -0x858(%ebp),%eax
 807381a:	89 85 bc f7 ff ff    	mov    %eax,-0x844(%ebp)
 8073820:	8b 85 b8 f7 ff ff    	mov    -0x848(%ebp),%eax
 8073826:	8b 50 04             	mov    0x4(%eax),%edx
 8073829:	8b 85 bc f7 ff ff    	mov    -0x844(%ebp),%eax
 807382f:	01 c2                	add    %eax,%edx
 8073831:	8b 85 b8 f7 ff ff    	mov    -0x848(%ebp),%eax
 8073837:	89 50 04             	mov    %edx,0x4(%eax)
 807383a:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 8073840:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%ebp)
 8073846:	c7 85 c4 f7 ff ff 08 	movl   $0x8,-0x83c(%ebp)
 807384d:	00 00 00 
 8073850:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8073856:	8b 40 04             	mov    0x4(%eax),%eax
 8073859:	83 f8 0f             	cmp    $0xf,%eax
 807385c:	0f 86 86 00 00 00    	jbe    80738e8 <ProcessCommands+0x1001>
 8073862:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8073868:	8b 00                	mov    (%eax),%eax
 807386a:	c1 e8 10             	shr    $0x10,%eax
 807386d:	89 c2                	mov    %eax,%edx
 807386f:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8073875:	89 10                	mov    %edx,(%eax)
 8073877:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807387d:	8b 40 04             	mov    0x4(%eax),%eax
 8073880:	83 f0 10             	xor    $0x10,%eax
 8073883:	89 c2                	mov    %eax,%edx
 8073885:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807388b:	89 50 04             	mov    %edx,0x4(%eax)
 807388e:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8073894:	8b 10                	mov    (%eax),%edx
 8073896:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807389c:	8b 40 08             	mov    0x8(%eax),%eax
 807389f:	89 85 c8 f7 ff ff    	mov    %eax,-0x838(%ebp)
 80738a5:	8b 85 c8 f7 ff ff    	mov    -0x838(%ebp),%eax
 80738ab:	0f b7 00             	movzwl (%eax),%eax
 80738ae:	0f b7 c0             	movzwl %ax,%eax
 80738b1:	c1 e0 10             	shl    $0x10,%eax
 80738b4:	09 c2                	or     %eax,%edx
 80738b6:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 80738bc:	89 10                	mov    %edx,(%eax)
 80738be:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 80738c4:	8b 40 0c             	mov    0xc(%eax),%eax
 80738c7:	8d 50 fe             	lea    -0x2(%eax),%edx
 80738ca:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 80738d0:	89 50 0c             	mov    %edx,0xc(%eax)
 80738d3:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 80738d9:	8b 40 08             	mov    0x8(%eax),%eax
 80738dc:	8d 50 02             	lea    0x2(%eax),%edx
 80738df:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 80738e5:	89 50 08             	mov    %edx,0x8(%eax)
 80738e8:	8b 85 6c f7 ff ff    	mov    -0x894(%ebp),%eax
 80738ee:	8d 50 f0             	lea    -0x10(%eax),%edx
 80738f1:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 80738f7:	89 85 cc f7 ff ff    	mov    %eax,-0x834(%ebp)
 80738fd:	89 95 d0 f7 ff ff    	mov    %edx,-0x830(%ebp)
 8073903:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8073909:	89 85 d4 f7 ff ff    	mov    %eax,-0x82c(%ebp)
 807390f:	8b 85 cc f7 ff ff    	mov    -0x834(%ebp),%eax
 8073915:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%ebp)
 807391b:	8b 85 d8 f7 ff ff    	mov    -0x828(%ebp),%eax
 8073921:	8b 10                	mov    (%eax),%edx
 8073923:	8b 85 d8 f7 ff ff    	mov    -0x828(%ebp),%eax
 8073929:	8b 40 04             	mov    0x4(%eax),%eax
 807392c:	89 c1                	mov    %eax,%ecx
 807392e:	d3 ea                	shr    %cl,%edx
 8073930:	89 d0                	mov    %edx,%eax
 8073932:	89 c2                	mov    %eax,%edx
 8073934:	8b 85 d0 f7 ff ff    	mov    -0x830(%ebp),%eax
 807393a:	89 85 dc f7 ff ff    	mov    %eax,-0x824(%ebp)
 8073940:	8b 85 dc f7 ff ff    	mov    -0x824(%ebp),%eax
 8073946:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807394d:	21 c2                	and    %eax,%edx
 807394f:	8b 85 d4 f7 ff ff    	mov    -0x82c(%ebp),%eax
 8073955:	89 10                	mov    %edx,(%eax)
 8073957:	8b 85 cc f7 ff ff    	mov    -0x834(%ebp),%eax
 807395d:	89 85 e0 f7 ff ff    	mov    %eax,-0x820(%ebp)
 8073963:	8b 85 d0 f7 ff ff    	mov    -0x830(%ebp),%eax
 8073969:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%ebp)
 807396f:	8b 85 e0 f7 ff ff    	mov    -0x820(%ebp),%eax
 8073975:	8b 50 04             	mov    0x4(%eax),%edx
 8073978:	8b 85 e4 f7 ff ff    	mov    -0x81c(%ebp),%eax
 807397e:	01 c2                	add    %eax,%edx
 8073980:	8b 85 e0 f7 ff ff    	mov    -0x820(%ebp),%eax
 8073986:	89 50 04             	mov    %edx,0x4(%eax)
 8073989:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807398f:	c1 e0 10             	shl    $0x10,%eax
 8073992:	89 c2                	mov    %eax,%edx
 8073994:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807399a:	09 d0                	or     %edx,%eax
 807399c:	89 85 f8 f5 ff ff    	mov    %eax,-0xa08(%ebp)
 80739a2:	e9 3a 04 00 00       	jmp    8073de1 <ProcessCommands+0x14fa>
 80739a7:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 80739ab:	0f b6 c0             	movzbl %al,%eax
 80739ae:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 80739b4:	89 95 e8 f7 ff ff    	mov    %edx,-0x818(%ebp)
 80739ba:	89 85 ec f7 ff ff    	mov    %eax,-0x814(%ebp)
 80739c0:	8d 85 f0 f5 ff ff    	lea    -0xa10(%ebp),%eax
 80739c6:	89 85 f0 f7 ff ff    	mov    %eax,-0x810(%ebp)
 80739cc:	83 bd ec f7 ff ff 00 	cmpl   $0x0,-0x814(%ebp)
 80739d3:	0f 84 a3 01 00 00    	je     8073b7c <ProcessCommands+0x1295>
 80739d9:	8b 85 e8 f7 ff ff    	mov    -0x818(%ebp),%eax
 80739df:	89 85 f4 f7 ff ff    	mov    %eax,-0x80c(%ebp)
 80739e5:	8b 85 ec f7 ff ff    	mov    -0x814(%ebp),%eax
 80739eb:	89 85 f8 f7 ff ff    	mov    %eax,-0x808(%ebp)
 80739f1:	8b 85 f0 f7 ff ff    	mov    -0x810(%ebp),%eax
 80739f7:	89 85 fc f7 ff ff    	mov    %eax,-0x804(%ebp)
 80739fd:	e9 ab 00 00 00       	jmp    8073aad <ProcessCommands+0x11c6>
 8073a02:	8b 85 f4 f7 ff ff    	mov    -0x80c(%ebp),%eax
 8073a08:	89 85 00 f8 ff ff    	mov    %eax,-0x800(%ebp)
 8073a0e:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a14:	8b 40 0c             	mov    0xc(%eax),%eax
 8073a17:	85 c0                	test   %eax,%eax
 8073a19:	75 07                	jne    8073a22 <ProcessCommands+0x113b>
 8073a1b:	b8 00 00 00 00       	mov    $0x0,%eax
 8073a20:	eb 7d                	jmp    8073a9f <ProcessCommands+0x11b8>
 8073a22:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a28:	8b 00                	mov    (%eax),%eax
 8073a2a:	c1 e8 08             	shr    $0x8,%eax
 8073a2d:	89 c2                	mov    %eax,%edx
 8073a2f:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a35:	89 10                	mov    %edx,(%eax)
 8073a37:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a3d:	8b 10                	mov    (%eax),%edx
 8073a3f:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a45:	8b 40 08             	mov    0x8(%eax),%eax
 8073a48:	0f b6 00             	movzbl (%eax),%eax
 8073a4b:	0f b6 c0             	movzbl %al,%eax
 8073a4e:	c1 e0 18             	shl    $0x18,%eax
 8073a51:	09 c2                	or     %eax,%edx
 8073a53:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a59:	89 10                	mov    %edx,(%eax)
 8073a5b:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a61:	8b 40 04             	mov    0x4(%eax),%eax
 8073a64:	8d 50 f8             	lea    -0x8(%eax),%edx
 8073a67:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a6d:	89 50 04             	mov    %edx,0x4(%eax)
 8073a70:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a76:	8b 40 0c             	mov    0xc(%eax),%eax
 8073a79:	8d 50 ff             	lea    -0x1(%eax),%edx
 8073a7c:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a82:	89 50 0c             	mov    %edx,0xc(%eax)
 8073a85:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a8b:	8b 40 08             	mov    0x8(%eax),%eax
 8073a8e:	8d 50 01             	lea    0x1(%eax),%edx
 8073a91:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8073a97:	89 50 08             	mov    %edx,0x8(%eax)
 8073a9a:	b8 01 00 00 00       	mov    $0x1,%eax
 8073a9f:	85 c0                	test   %eax,%eax
 8073aa1:	75 0a                	jne    8073aad <ProcessCommands+0x11c6>
 8073aa3:	b8 00 00 00 00       	mov    $0x0,%eax
 8073aa8:	e9 e0 00 00 00       	jmp    8073b8d <ProcessCommands+0x12a6>
 8073aad:	8b 85 f4 f7 ff ff    	mov    -0x80c(%ebp),%eax
 8073ab3:	89 85 04 f8 ff ff    	mov    %eax,-0x7fc(%ebp)
 8073ab9:	8b 85 04 f8 ff ff    	mov    -0x7fc(%ebp),%eax
 8073abf:	8b 40 04             	mov    0x4(%eax),%eax
 8073ac2:	ba 20 00 00 00       	mov    $0x20,%edx
 8073ac7:	29 c2                	sub    %eax,%edx
 8073ac9:	89 d0                	mov    %edx,%eax
 8073acb:	39 85 f8 f7 ff ff    	cmp    %eax,-0x808(%ebp)
 8073ad1:	0f 87 2b ff ff ff    	ja     8073a02 <ProcessCommands+0x111b>
 8073ad7:	8b 85 f4 f7 ff ff    	mov    -0x80c(%ebp),%eax
 8073add:	89 85 08 f8 ff ff    	mov    %eax,-0x7f8(%ebp)
 8073ae3:	8b 85 f8 f7 ff ff    	mov    -0x808(%ebp),%eax
 8073ae9:	89 85 0c f8 ff ff    	mov    %eax,-0x7f4(%ebp)
 8073aef:	8b 85 fc f7 ff ff    	mov    -0x804(%ebp),%eax
 8073af5:	89 85 10 f8 ff ff    	mov    %eax,-0x7f0(%ebp)
 8073afb:	8b 85 08 f8 ff ff    	mov    -0x7f8(%ebp),%eax
 8073b01:	89 85 14 f8 ff ff    	mov    %eax,-0x7ec(%ebp)
 8073b07:	8b 85 14 f8 ff ff    	mov    -0x7ec(%ebp),%eax
 8073b0d:	8b 10                	mov    (%eax),%edx
 8073b0f:	8b 85 14 f8 ff ff    	mov    -0x7ec(%ebp),%eax
 8073b15:	8b 40 04             	mov    0x4(%eax),%eax
 8073b18:	89 c1                	mov    %eax,%ecx
 8073b1a:	d3 ea                	shr    %cl,%edx
 8073b1c:	89 d0                	mov    %edx,%eax
 8073b1e:	89 c2                	mov    %eax,%edx
 8073b20:	8b 85 0c f8 ff ff    	mov    -0x7f4(%ebp),%eax
 8073b26:	89 85 18 f8 ff ff    	mov    %eax,-0x7e8(%ebp)
 8073b2c:	8b 85 18 f8 ff ff    	mov    -0x7e8(%ebp),%eax
 8073b32:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8073b39:	21 c2                	and    %eax,%edx
 8073b3b:	8b 85 10 f8 ff ff    	mov    -0x7f0(%ebp),%eax
 8073b41:	89 10                	mov    %edx,(%eax)
 8073b43:	8b 85 08 f8 ff ff    	mov    -0x7f8(%ebp),%eax
 8073b49:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%ebp)
 8073b4f:	8b 85 0c f8 ff ff    	mov    -0x7f4(%ebp),%eax
 8073b55:	89 85 20 f8 ff ff    	mov    %eax,-0x7e0(%ebp)
 8073b5b:	8b 85 1c f8 ff ff    	mov    -0x7e4(%ebp),%eax
 8073b61:	8b 50 04             	mov    0x4(%eax),%edx
 8073b64:	8b 85 20 f8 ff ff    	mov    -0x7e0(%ebp),%eax
 8073b6a:	01 c2                	add    %eax,%edx
 8073b6c:	8b 85 1c f8 ff ff    	mov    -0x7e4(%ebp),%eax
 8073b72:	89 50 04             	mov    %edx,0x4(%eax)
 8073b75:	b8 01 00 00 00       	mov    $0x1,%eax
 8073b7a:	eb 11                	jmp    8073b8d <ProcessCommands+0x12a6>
 8073b7c:	8b 85 f0 f7 ff ff    	mov    -0x810(%ebp),%eax
 8073b82:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8073b88:	b8 01 00 00 00       	mov    $0x1,%eax
 8073b8d:	85 c0                	test   %eax,%eax
 8073b8f:	0f 84 ea 01 00 00    	je     8073d7f <ProcessCommands+0x1498>
 8073b95:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 8073b99:	0f b6 c0             	movzbl %al,%eax
 8073b9c:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 8073ba2:	89 95 24 f8 ff ff    	mov    %edx,-0x7dc(%ebp)
 8073ba8:	89 85 28 f8 ff ff    	mov    %eax,-0x7d8(%ebp)
 8073bae:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8073bb4:	89 85 2c f8 ff ff    	mov    %eax,-0x7d4(%ebp)
 8073bba:	83 bd 28 f8 ff ff 00 	cmpl   $0x0,-0x7d8(%ebp)
 8073bc1:	0f 84 a3 01 00 00    	je     8073d6a <ProcessCommands+0x1483>
 8073bc7:	8b 85 24 f8 ff ff    	mov    -0x7dc(%ebp),%eax
 8073bcd:	89 85 30 f8 ff ff    	mov    %eax,-0x7d0(%ebp)
 8073bd3:	8b 85 28 f8 ff ff    	mov    -0x7d8(%ebp),%eax
 8073bd9:	89 85 34 f8 ff ff    	mov    %eax,-0x7cc(%ebp)
 8073bdf:	8b 85 2c f8 ff ff    	mov    -0x7d4(%ebp),%eax
 8073be5:	89 85 38 f8 ff ff    	mov    %eax,-0x7c8(%ebp)
 8073beb:	e9 ab 00 00 00       	jmp    8073c9b <ProcessCommands+0x13b4>
 8073bf0:	8b 85 30 f8 ff ff    	mov    -0x7d0(%ebp),%eax
 8073bf6:	89 85 3c f8 ff ff    	mov    %eax,-0x7c4(%ebp)
 8073bfc:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c02:	8b 40 0c             	mov    0xc(%eax),%eax
 8073c05:	85 c0                	test   %eax,%eax
 8073c07:	75 07                	jne    8073c10 <ProcessCommands+0x1329>
 8073c09:	b8 00 00 00 00       	mov    $0x0,%eax
 8073c0e:	eb 7d                	jmp    8073c8d <ProcessCommands+0x13a6>
 8073c10:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c16:	8b 00                	mov    (%eax),%eax
 8073c18:	c1 e8 08             	shr    $0x8,%eax
 8073c1b:	89 c2                	mov    %eax,%edx
 8073c1d:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c23:	89 10                	mov    %edx,(%eax)
 8073c25:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c2b:	8b 10                	mov    (%eax),%edx
 8073c2d:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c33:	8b 40 08             	mov    0x8(%eax),%eax
 8073c36:	0f b6 00             	movzbl (%eax),%eax
 8073c39:	0f b6 c0             	movzbl %al,%eax
 8073c3c:	c1 e0 18             	shl    $0x18,%eax
 8073c3f:	09 c2                	or     %eax,%edx
 8073c41:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c47:	89 10                	mov    %edx,(%eax)
 8073c49:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c4f:	8b 40 04             	mov    0x4(%eax),%eax
 8073c52:	8d 50 f8             	lea    -0x8(%eax),%edx
 8073c55:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c5b:	89 50 04             	mov    %edx,0x4(%eax)
 8073c5e:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c64:	8b 40 0c             	mov    0xc(%eax),%eax
 8073c67:	8d 50 ff             	lea    -0x1(%eax),%edx
 8073c6a:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c70:	89 50 0c             	mov    %edx,0xc(%eax)
 8073c73:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c79:	8b 40 08             	mov    0x8(%eax),%eax
 8073c7c:	8d 50 01             	lea    0x1(%eax),%edx
 8073c7f:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8073c85:	89 50 08             	mov    %edx,0x8(%eax)
 8073c88:	b8 01 00 00 00       	mov    $0x1,%eax
 8073c8d:	85 c0                	test   %eax,%eax
 8073c8f:	75 0a                	jne    8073c9b <ProcessCommands+0x13b4>
 8073c91:	b8 00 00 00 00       	mov    $0x0,%eax
 8073c96:	e9 e0 00 00 00       	jmp    8073d7b <ProcessCommands+0x1494>
 8073c9b:	8b 85 30 f8 ff ff    	mov    -0x7d0(%ebp),%eax
 8073ca1:	89 85 40 f8 ff ff    	mov    %eax,-0x7c0(%ebp)
 8073ca7:	8b 85 40 f8 ff ff    	mov    -0x7c0(%ebp),%eax
 8073cad:	8b 40 04             	mov    0x4(%eax),%eax
 8073cb0:	ba 20 00 00 00       	mov    $0x20,%edx
 8073cb5:	29 c2                	sub    %eax,%edx
 8073cb7:	89 d0                	mov    %edx,%eax
 8073cb9:	39 85 34 f8 ff ff    	cmp    %eax,-0x7cc(%ebp)
 8073cbf:	0f 87 2b ff ff ff    	ja     8073bf0 <ProcessCommands+0x1309>
 8073cc5:	8b 85 30 f8 ff ff    	mov    -0x7d0(%ebp),%eax
 8073ccb:	89 85 44 f8 ff ff    	mov    %eax,-0x7bc(%ebp)
 8073cd1:	8b 85 34 f8 ff ff    	mov    -0x7cc(%ebp),%eax
 8073cd7:	89 85 48 f8 ff ff    	mov    %eax,-0x7b8(%ebp)
 8073cdd:	8b 85 38 f8 ff ff    	mov    -0x7c8(%ebp),%eax
 8073ce3:	89 85 4c f8 ff ff    	mov    %eax,-0x7b4(%ebp)
 8073ce9:	8b 85 44 f8 ff ff    	mov    -0x7bc(%ebp),%eax
 8073cef:	89 85 50 f8 ff ff    	mov    %eax,-0x7b0(%ebp)
 8073cf5:	8b 85 50 f8 ff ff    	mov    -0x7b0(%ebp),%eax
 8073cfb:	8b 10                	mov    (%eax),%edx
 8073cfd:	8b 85 50 f8 ff ff    	mov    -0x7b0(%ebp),%eax
 8073d03:	8b 40 04             	mov    0x4(%eax),%eax
 8073d06:	89 c1                	mov    %eax,%ecx
 8073d08:	d3 ea                	shr    %cl,%edx
 8073d0a:	89 d0                	mov    %edx,%eax
 8073d0c:	89 c2                	mov    %eax,%edx
 8073d0e:	8b 85 48 f8 ff ff    	mov    -0x7b8(%ebp),%eax
 8073d14:	89 85 54 f8 ff ff    	mov    %eax,-0x7ac(%ebp)
 8073d1a:	8b 85 54 f8 ff ff    	mov    -0x7ac(%ebp),%eax
 8073d20:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8073d27:	21 c2                	and    %eax,%edx
 8073d29:	8b 85 4c f8 ff ff    	mov    -0x7b4(%ebp),%eax
 8073d2f:	89 10                	mov    %edx,(%eax)
 8073d31:	8b 85 44 f8 ff ff    	mov    -0x7bc(%ebp),%eax
 8073d37:	89 85 58 f8 ff ff    	mov    %eax,-0x7a8(%ebp)
 8073d3d:	8b 85 48 f8 ff ff    	mov    -0x7b8(%ebp),%eax
 8073d43:	89 85 5c f8 ff ff    	mov    %eax,-0x7a4(%ebp)
 8073d49:	8b 85 58 f8 ff ff    	mov    -0x7a8(%ebp),%eax
 8073d4f:	8b 50 04             	mov    0x4(%eax),%edx
 8073d52:	8b 85 5c f8 ff ff    	mov    -0x7a4(%ebp),%eax
 8073d58:	01 c2                	add    %eax,%edx
 8073d5a:	8b 85 58 f8 ff ff    	mov    -0x7a8(%ebp),%eax
 8073d60:	89 50 04             	mov    %edx,0x4(%eax)
 8073d63:	b8 01 00 00 00       	mov    $0x1,%eax
 8073d68:	eb 11                	jmp    8073d7b <ProcessCommands+0x1494>
 8073d6a:	8b 85 2c f8 ff ff    	mov    -0x7d4(%ebp),%eax
 8073d70:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8073d76:	b8 01 00 00 00       	mov    $0x1,%eax
 8073d7b:	85 c0                	test   %eax,%eax
 8073d7d:	75 62                	jne    8073de1 <ProcessCommands+0x14fa>
 8073d7f:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8073d85:	89 85 60 f8 ff ff    	mov    %eax,-0x7a0(%ebp)
 8073d8b:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8073d8e:	89 85 64 f8 ff ff    	mov    %eax,-0x79c(%ebp)
 8073d94:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8073d9a:	8b 10                	mov    (%eax),%edx
 8073d9c:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8073da2:	89 10                	mov    %edx,(%eax)
 8073da4:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8073daa:	8b 50 04             	mov    0x4(%eax),%edx
 8073dad:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8073db3:	89 50 04             	mov    %edx,0x4(%eax)
 8073db6:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8073dbc:	8b 50 08             	mov    0x8(%eax),%edx
 8073dbf:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8073dc5:	89 50 08             	mov    %edx,0x8(%eax)
 8073dc8:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8073dce:	8b 50 0c             	mov    0xc(%eax),%edx
 8073dd1:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8073dd7:	89 50 0c             	mov    %edx,0xc(%eax)
 8073dda:	b8 00 00 00 00       	mov    $0x0,%eax
 8073ddf:	eb 53                	jmp    8073e34 <ProcessCommands+0x154d>
 8073de1:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax
 8073de5:	0f b7 d0             	movzwl %ax,%edx
 8073de8:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 8073dee:	01 c2                	add    %eax,%edx
 8073df0:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8073df6:	89 90 04 01 00 00    	mov    %edx,0x104(%eax)
 8073dfc:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8073e02:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
 8073e08:	8d 50 ff             	lea    -0x1(%eax),%edx
 8073e0b:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8073e11:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)
 8073e17:	8b 85 50 f6 ff ff    	mov    -0x9b0(%ebp),%eax
 8073e1d:	8b 10                	mov    (%eax),%edx
 8073e1f:	8b 85 f0 f5 ff ff    	mov    -0xa10(%ebp),%eax
 8073e25:	01 c2                	add    %eax,%edx
 8073e27:	8b 85 50 f6 ff ff    	mov    -0x9b0(%ebp),%eax
 8073e2d:	89 10                	mov    %edx,(%eax)
 8073e2f:	b8 01 00 00 00       	mov    $0x1,%eax
 8073e34:	85 c0                	test   %eax,%eax
 8073e36:	0f 85 20 13 00 00    	jne    807515c <ProcessCommands+0x2875>
 8073e3c:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8073e43:	00 00 00 
 8073e46:	e9 0e 49 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8073e4b:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8073e51:	89 85 68 f8 ff ff    	mov    %eax,-0x798(%ebp)
 8073e57:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8073e5d:	89 85 6c f8 ff ff    	mov    %eax,-0x794(%ebp)
 8073e63:	8d 85 e8 f5 ff ff    	lea    -0xa18(%ebp),%eax
 8073e69:	89 85 70 f8 ff ff    	mov    %eax,-0x790(%ebp)
 8073e6f:	c7 85 74 f8 ff ff 00 	movl   $0x0,-0x78c(%ebp)
 8073e76:	00 00 00 
 8073e79:	8b 85 68 f8 ff ff    	mov    -0x798(%ebp),%eax
 8073e7f:	89 85 78 f8 ff ff    	mov    %eax,-0x788(%ebp)
 8073e85:	8b 85 6c f8 ff ff    	mov    -0x794(%ebp),%eax
 8073e8b:	89 85 7c f8 ff ff    	mov    %eax,-0x784(%ebp)
 8073e91:	8b 85 70 f8 ff ff    	mov    -0x790(%ebp),%eax
 8073e97:	89 85 80 f8 ff ff    	mov    %eax,-0x780(%ebp)
 8073e9d:	c7 85 f0 f5 ff ff 00 	movl   $0x0,-0xa10(%ebp)
 8073ea4:	00 00 00 
 8073ea7:	83 bd 74 f8 ff ff 00 	cmpl   $0x0,-0x78c(%ebp)
 8073eae:	0f 85 0c 02 00 00    	jne    80740c0 <ProcessCommands+0x17d9>
 8073eb4:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8073eba:	8b 40 64             	mov    0x64(%eax),%eax
 8073ebd:	89 85 84 f8 ff ff    	mov    %eax,-0x77c(%ebp)
 8073ec3:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 8073ec9:	89 85 88 f8 ff ff    	mov    %eax,-0x778(%ebp)
 8073ecf:	8b 85 88 f8 ff ff    	mov    -0x778(%ebp),%eax
 8073ed5:	89 85 8c f8 ff ff    	mov    %eax,-0x774(%ebp)
 8073edb:	8b 85 8c f8 ff ff    	mov    -0x774(%ebp),%eax
 8073ee1:	89 85 90 f8 ff ff    	mov    %eax,-0x770(%ebp)
 8073ee7:	c7 85 94 f8 ff ff 10 	movl   $0x10,-0x76c(%ebp)
 8073eee:	00 00 00 
 8073ef1:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073ef7:	8b 40 04             	mov    0x4(%eax),%eax
 8073efa:	83 f8 0f             	cmp    $0xf,%eax
 8073efd:	0f 86 86 00 00 00    	jbe    8073f89 <ProcessCommands+0x16a2>
 8073f03:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f09:	8b 00                	mov    (%eax),%eax
 8073f0b:	c1 e8 10             	shr    $0x10,%eax
 8073f0e:	89 c2                	mov    %eax,%edx
 8073f10:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f16:	89 10                	mov    %edx,(%eax)
 8073f18:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f1e:	8b 40 04             	mov    0x4(%eax),%eax
 8073f21:	83 f0 10             	xor    $0x10,%eax
 8073f24:	89 c2                	mov    %eax,%edx
 8073f26:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f2c:	89 50 04             	mov    %edx,0x4(%eax)
 8073f2f:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f35:	8b 10                	mov    (%eax),%edx
 8073f37:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f3d:	8b 40 08             	mov    0x8(%eax),%eax
 8073f40:	89 85 98 f8 ff ff    	mov    %eax,-0x768(%ebp)
 8073f46:	8b 85 98 f8 ff ff    	mov    -0x768(%ebp),%eax
 8073f4c:	0f b7 00             	movzwl (%eax),%eax
 8073f4f:	0f b7 c0             	movzwl %ax,%eax
 8073f52:	c1 e0 10             	shl    $0x10,%eax
 8073f55:	09 c2                	or     %eax,%edx
 8073f57:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f5d:	89 10                	mov    %edx,(%eax)
 8073f5f:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f65:	8b 40 0c             	mov    0xc(%eax),%eax
 8073f68:	8d 50 fe             	lea    -0x2(%eax),%edx
 8073f6b:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f71:	89 50 0c             	mov    %edx,0xc(%eax)
 8073f74:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f7a:	8b 40 08             	mov    0x8(%eax),%eax
 8073f7d:	8d 50 02             	lea    0x2(%eax),%edx
 8073f80:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8073f86:	89 50 08             	mov    %edx,0x8(%eax)
 8073f89:	8b 85 8c f8 ff ff    	mov    -0x774(%ebp),%eax
 8073f8f:	89 85 9c f8 ff ff    	mov    %eax,-0x764(%ebp)
 8073f95:	8b 85 9c f8 ff ff    	mov    -0x764(%ebp),%eax
 8073f9b:	8b 10                	mov    (%eax),%edx
 8073f9d:	8b 85 9c f8 ff ff    	mov    -0x764(%ebp),%eax
 8073fa3:	8b 40 04             	mov    0x4(%eax),%eax
 8073fa6:	89 c1                	mov    %eax,%ecx
 8073fa8:	d3 ea                	shr    %cl,%edx
 8073faa:	89 d0                	mov    %edx,%eax
 8073fac:	89 85 a0 f8 ff ff    	mov    %eax,-0x760(%ebp)
 8073fb2:	8b 85 84 f8 ff ff    	mov    -0x77c(%ebp),%eax
 8073fb8:	89 85 a4 f8 ff ff    	mov    %eax,-0x75c(%ebp)
 8073fbe:	8b 85 88 f8 ff ff    	mov    -0x778(%ebp),%eax
 8073fc4:	89 85 a8 f8 ff ff    	mov    %eax,-0x758(%ebp)
 8073fca:	8b 85 a0 f8 ff ff    	mov    -0x760(%ebp),%eax
 8073fd0:	0f b6 c0             	movzbl %al,%eax
 8073fd3:	c1 e0 02             	shl    $0x2,%eax
 8073fd6:	01 85 a4 f8 ff ff    	add    %eax,-0x75c(%ebp)
 8073fdc:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8073fe2:	0f b6 00             	movzbl (%eax),%eax
 8073fe5:	3c 08                	cmp    $0x8,%al
 8073fe7:	0f 86 83 00 00 00    	jbe    8074070 <ProcessCommands+0x1789>
 8073fed:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8073ff3:	0f b6 00             	movzbl (%eax),%eax
 8073ff6:	0f b6 c0             	movzbl %al,%eax
 8073ff9:	83 e8 08             	sub    $0x8,%eax
 8073ffc:	89 85 ac f8 ff ff    	mov    %eax,-0x754(%ebp)
 8074002:	8b 85 a8 f8 ff ff    	mov    -0x758(%ebp),%eax
 8074008:	89 85 b0 f8 ff ff    	mov    %eax,-0x750(%ebp)
 807400e:	c7 85 b4 f8 ff ff 08 	movl   $0x8,-0x74c(%ebp)
 8074015:	00 00 00 
 8074018:	8b 85 b0 f8 ff ff    	mov    -0x750(%ebp),%eax
 807401e:	8b 50 04             	mov    0x4(%eax),%edx
 8074021:	8b 85 b4 f8 ff ff    	mov    -0x74c(%ebp),%eax
 8074027:	01 c2                	add    %eax,%edx
 8074029:	8b 85 b0 f8 ff ff    	mov    -0x750(%ebp),%eax
 807402f:	89 50 04             	mov    %edx,0x4(%eax)
 8074032:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8074038:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807403c:	0f b7 d0             	movzwl %ax,%edx
 807403f:	8b 85 a0 f8 ff ff    	mov    -0x760(%ebp),%eax
 8074045:	c1 e8 08             	shr    $0x8,%eax
 8074048:	89 c1                	mov    %eax,%ecx
 807404a:	8b 85 ac f8 ff ff    	mov    -0x754(%ebp),%eax
 8074050:	89 85 b8 f8 ff ff    	mov    %eax,-0x748(%ebp)
 8074056:	8b 85 b8 f8 ff ff    	mov    -0x748(%ebp),%eax
 807405c:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8074063:	21 c8                	and    %ecx,%eax
 8074065:	01 d0                	add    %edx,%eax
 8074067:	c1 e0 02             	shl    $0x2,%eax
 807406a:	01 85 a4 f8 ff ff    	add    %eax,-0x75c(%ebp)
 8074070:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8074076:	0f b6 00             	movzbl (%eax),%eax
 8074079:	0f b6 c0             	movzbl %al,%eax
 807407c:	8b 95 a8 f8 ff ff    	mov    -0x758(%ebp),%edx
 8074082:	89 95 bc f8 ff ff    	mov    %edx,-0x744(%ebp)
 8074088:	89 85 c0 f8 ff ff    	mov    %eax,-0x740(%ebp)
 807408e:	8b 85 bc f8 ff ff    	mov    -0x744(%ebp),%eax
 8074094:	8b 50 04             	mov    0x4(%eax),%edx
 8074097:	8b 85 c0 f8 ff ff    	mov    -0x740(%ebp),%eax
 807409d:	01 c2                	add    %eax,%edx
 807409f:	8b 85 bc f8 ff ff    	mov    -0x744(%ebp),%eax
 80740a5:	89 50 04             	mov    %edx,0x4(%eax)
 80740a8:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 80740ae:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80740b2:	0f b7 c0             	movzwl %ax,%eax
 80740b5:	89 85 ec f5 ff ff    	mov    %eax,-0xa14(%ebp)
 80740bb:	e9 1c 03 00 00       	jmp    80743dc <ProcessCommands+0x1af5>
 80740c0:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 80740c6:	89 85 c4 f8 ff ff    	mov    %eax,-0x73c(%ebp)
 80740cc:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80740cf:	89 85 c8 f8 ff ff    	mov    %eax,-0x738(%ebp)
 80740d5:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 80740db:	8b 10                	mov    (%eax),%edx
 80740dd:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 80740e3:	89 10                	mov    %edx,(%eax)
 80740e5:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 80740eb:	8b 50 04             	mov    0x4(%eax),%edx
 80740ee:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 80740f4:	89 50 04             	mov    %edx,0x4(%eax)
 80740f7:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 80740fd:	8b 50 08             	mov    0x8(%eax),%edx
 8074100:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 8074106:	89 50 08             	mov    %edx,0x8(%eax)
 8074109:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 807410f:	8b 50 0c             	mov    0xc(%eax),%edx
 8074112:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 8074118:	89 50 0c             	mov    %edx,0xc(%eax)
 807411b:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8074121:	8b 40 64             	mov    0x64(%eax),%eax
 8074124:	89 85 cc f8 ff ff    	mov    %eax,-0x734(%ebp)
 807412a:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 8074130:	89 85 d0 f8 ff ff    	mov    %eax,-0x730(%ebp)
 8074136:	8d 85 ec f5 ff ff    	lea    -0xa14(%ebp),%eax
 807413c:	89 85 d4 f8 ff ff    	mov    %eax,-0x72c(%ebp)
 8074142:	8b 85 d0 f8 ff ff    	mov    -0x730(%ebp),%eax
 8074148:	89 85 d8 f8 ff ff    	mov    %eax,-0x728(%ebp)
 807414e:	c7 85 dc f8 ff ff 0f 	movl   $0xf,-0x724(%ebp)
 8074155:	00 00 00 
 8074158:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807415b:	89 85 e0 f8 ff ff    	mov    %eax,-0x720(%ebp)
 8074161:	e9 a8 00 00 00       	jmp    807420e <ProcessCommands+0x1927>
 8074166:	8b 85 d8 f8 ff ff    	mov    -0x728(%ebp),%eax
 807416c:	89 85 e4 f8 ff ff    	mov    %eax,-0x71c(%ebp)
 8074172:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 8074178:	8b 40 0c             	mov    0xc(%eax),%eax
 807417b:	85 c0                	test   %eax,%eax
 807417d:	75 07                	jne    8074186 <ProcessCommands+0x189f>
 807417f:	b8 00 00 00 00       	mov    $0x0,%eax
 8074184:	eb 7d                	jmp    8074203 <ProcessCommands+0x191c>
 8074186:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807418c:	8b 00                	mov    (%eax),%eax
 807418e:	c1 e8 08             	shr    $0x8,%eax
 8074191:	89 c2                	mov    %eax,%edx
 8074193:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 8074199:	89 10                	mov    %edx,(%eax)
 807419b:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741a1:	8b 10                	mov    (%eax),%edx
 80741a3:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741a9:	8b 40 08             	mov    0x8(%eax),%eax
 80741ac:	0f b6 00             	movzbl (%eax),%eax
 80741af:	0f b6 c0             	movzbl %al,%eax
 80741b2:	c1 e0 18             	shl    $0x18,%eax
 80741b5:	09 c2                	or     %eax,%edx
 80741b7:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741bd:	89 10                	mov    %edx,(%eax)
 80741bf:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741c5:	8b 40 04             	mov    0x4(%eax),%eax
 80741c8:	8d 50 f8             	lea    -0x8(%eax),%edx
 80741cb:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741d1:	89 50 04             	mov    %edx,0x4(%eax)
 80741d4:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741da:	8b 40 0c             	mov    0xc(%eax),%eax
 80741dd:	8d 50 ff             	lea    -0x1(%eax),%edx
 80741e0:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741e6:	89 50 0c             	mov    %edx,0xc(%eax)
 80741e9:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741ef:	8b 40 08             	mov    0x8(%eax),%eax
 80741f2:	8d 50 01             	lea    0x1(%eax),%edx
 80741f5:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 80741fb:	89 50 08             	mov    %edx,0x8(%eax)
 80741fe:	b8 01 00 00 00       	mov    $0x1,%eax
 8074203:	85 c0                	test   %eax,%eax
 8074205:	75 07                	jne    807420e <ProcessCommands+0x1927>
 8074207:	b8 00 00 00 00       	mov    $0x0,%eax
 807420c:	eb 77                	jmp    8074285 <ProcessCommands+0x199e>
 807420e:	8b 85 d8 f8 ff ff    	mov    -0x728(%ebp),%eax
 8074214:	89 85 e8 f8 ff ff    	mov    %eax,-0x718(%ebp)
 807421a:	8b 85 e8 f8 ff ff    	mov    -0x718(%ebp),%eax
 8074220:	8b 40 04             	mov    0x4(%eax),%eax
 8074223:	ba 20 00 00 00       	mov    $0x20,%edx
 8074228:	29 c2                	sub    %eax,%edx
 807422a:	89 d0                	mov    %edx,%eax
 807422c:	39 85 dc f8 ff ff    	cmp    %eax,-0x724(%ebp)
 8074232:	0f 87 2e ff ff ff    	ja     8074166 <ProcessCommands+0x187f>
 8074238:	8b 85 d8 f8 ff ff    	mov    -0x728(%ebp),%eax
 807423e:	89 85 ec f8 ff ff    	mov    %eax,-0x714(%ebp)
 8074244:	8b 85 ec f8 ff ff    	mov    -0x714(%ebp),%eax
 807424a:	8b 10                	mov    (%eax),%edx
 807424c:	8b 85 ec f8 ff ff    	mov    -0x714(%ebp),%eax
 8074252:	8b 40 04             	mov    0x4(%eax),%eax
 8074255:	89 c1                	mov    %eax,%ecx
 8074257:	d3 ea                	shr    %cl,%edx
 8074259:	89 d0                	mov    %edx,%eax
 807425b:	89 c2                	mov    %eax,%edx
 807425d:	8b 85 dc f8 ff ff    	mov    -0x724(%ebp),%eax
 8074263:	89 85 f0 f8 ff ff    	mov    %eax,-0x710(%ebp)
 8074269:	8b 85 f0 f8 ff ff    	mov    -0x710(%ebp),%eax
 807426f:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8074276:	21 c2                	and    %eax,%edx
 8074278:	8b 85 e0 f8 ff ff    	mov    -0x720(%ebp),%eax
 807427e:	89 10                	mov    %edx,(%eax)
 8074280:	b8 01 00 00 00       	mov    $0x1,%eax
 8074285:	85 c0                	test   %eax,%eax
 8074287:	0f 95 c0             	setne  %al
 807428a:	0f b6 c0             	movzbl %al,%eax
 807428d:	85 c0                	test   %eax,%eax
 807428f:	0f 84 1d 01 00 00    	je     80743b2 <ProcessCommands+0x1acb>
 8074295:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8074298:	89 85 f4 f8 ff ff    	mov    %eax,-0x70c(%ebp)
 807429e:	8b 85 cc f8 ff ff    	mov    -0x734(%ebp),%eax
 80742a4:	89 85 f8 f8 ff ff    	mov    %eax,-0x708(%ebp)
 80742aa:	8b 85 d0 f8 ff ff    	mov    -0x730(%ebp),%eax
 80742b0:	89 85 fc f8 ff ff    	mov    %eax,-0x704(%ebp)
 80742b6:	8b 85 f4 f8 ff ff    	mov    -0x70c(%ebp),%eax
 80742bc:	0f b6 c0             	movzbl %al,%eax
 80742bf:	c1 e0 02             	shl    $0x2,%eax
 80742c2:	01 85 f8 f8 ff ff    	add    %eax,-0x708(%ebp)
 80742c8:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 80742ce:	0f b6 00             	movzbl (%eax),%eax
 80742d1:	3c 08                	cmp    $0x8,%al
 80742d3:	0f 86 83 00 00 00    	jbe    807435c <ProcessCommands+0x1a75>
 80742d9:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 80742df:	0f b6 00             	movzbl (%eax),%eax
 80742e2:	0f b6 c0             	movzbl %al,%eax
 80742e5:	83 e8 08             	sub    $0x8,%eax
 80742e8:	89 85 00 f9 ff ff    	mov    %eax,-0x700(%ebp)
 80742ee:	8b 85 fc f8 ff ff    	mov    -0x704(%ebp),%eax
 80742f4:	89 85 04 f9 ff ff    	mov    %eax,-0x6fc(%ebp)
 80742fa:	c7 85 08 f9 ff ff 08 	movl   $0x8,-0x6f8(%ebp)
 8074301:	00 00 00 
 8074304:	8b 85 04 f9 ff ff    	mov    -0x6fc(%ebp),%eax
 807430a:	8b 50 04             	mov    0x4(%eax),%edx
 807430d:	8b 85 08 f9 ff ff    	mov    -0x6f8(%ebp),%eax
 8074313:	01 c2                	add    %eax,%edx
 8074315:	8b 85 04 f9 ff ff    	mov    -0x6fc(%ebp),%eax
 807431b:	89 50 04             	mov    %edx,0x4(%eax)
 807431e:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 8074324:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8074328:	0f b7 d0             	movzwl %ax,%edx
 807432b:	8b 85 f4 f8 ff ff    	mov    -0x70c(%ebp),%eax
 8074331:	c1 e8 08             	shr    $0x8,%eax
 8074334:	89 c1                	mov    %eax,%ecx
 8074336:	8b 85 00 f9 ff ff    	mov    -0x700(%ebp),%eax
 807433c:	89 85 0c f9 ff ff    	mov    %eax,-0x6f4(%ebp)
 8074342:	8b 85 0c f9 ff ff    	mov    -0x6f4(%ebp),%eax
 8074348:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807434f:	21 c8                	and    %ecx,%eax
 8074351:	01 d0                	add    %edx,%eax
 8074353:	c1 e0 02             	shl    $0x2,%eax
 8074356:	01 85 f8 f8 ff ff    	add    %eax,-0x708(%ebp)
 807435c:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 8074362:	0f b6 00             	movzbl (%eax),%eax
 8074365:	0f b6 c0             	movzbl %al,%eax
 8074368:	8b 95 fc f8 ff ff    	mov    -0x704(%ebp),%edx
 807436e:	89 95 10 f9 ff ff    	mov    %edx,-0x6f0(%ebp)
 8074374:	89 85 14 f9 ff ff    	mov    %eax,-0x6ec(%ebp)
 807437a:	8b 85 10 f9 ff ff    	mov    -0x6f0(%ebp),%eax
 8074380:	8b 50 04             	mov    0x4(%eax),%edx
 8074383:	8b 85 14 f9 ff ff    	mov    -0x6ec(%ebp),%eax
 8074389:	01 c2                	add    %eax,%edx
 807438b:	8b 85 10 f9 ff ff    	mov    -0x6f0(%ebp),%eax
 8074391:	89 50 04             	mov    %edx,0x4(%eax)
 8074394:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 807439a:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807439e:	0f b7 c0             	movzwl %ax,%eax
 80743a1:	89 c2                	mov    %eax,%edx
 80743a3:	8b 85 d4 f8 ff ff    	mov    -0x72c(%ebp),%eax
 80743a9:	89 10                	mov    %edx,(%eax)
 80743ab:	b8 01 00 00 00       	mov    $0x1,%eax
 80743b0:	eb 22                	jmp    80743d4 <ProcessCommands+0x1aed>
 80743b2:	8b 85 d4 f8 ff ff    	mov    -0x72c(%ebp),%eax
 80743b8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80743bc:	8b 85 d0 f8 ff ff    	mov    -0x730(%ebp),%eax
 80743c2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80743c6:	8b 85 cc f8 ff ff    	mov    -0x734(%ebp),%eax
 80743cc:	89 04 24             	mov    %eax,(%esp)
 80743cf:	e8 f8 45 ff ff       	call   80689cc <SafeDecodeSymbol>
 80743d4:	85 c0                	test   %eax,%eax
 80743d6:	0f 84 80 0d 00 00    	je     807515c <ProcessCommands+0x2875>
 80743dc:	8b 85 ec f5 ff ff    	mov    -0xa14(%ebp),%eax
 80743e2:	8b 94 c3 a4 82 fd ff 	mov    -0x27d5c(%ebx,%eax,8),%edx
 80743e9:	8b 84 c3 a0 82 fd ff 	mov    -0x27d60(%ebx,%eax,8),%eax
 80743f0:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80743f3:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 80743f6:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax
 80743fa:	0f be d0             	movsbl %al,%edx
 80743fd:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8074403:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8074409:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax
 807440d:	0f b6 d0             	movzbl %al,%edx
 8074410:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8074416:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 807441c:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8074422:	8b 50 70             	mov    0x70(%eax),%edx
 8074425:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807442b:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8074431:	01 d0                	add    %edx,%eax
 8074433:	0f b6 10             	movzbl (%eax),%edx
 8074436:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807443c:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
 8074442:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
 8074446:	0f b7 d0             	movzwl %ax,%edx
 8074449:	8b 85 80 f8 ff ff    	mov    -0x780(%ebp),%eax
 807444f:	89 10                	mov    %edx,(%eax)
 8074451:	83 bd 74 f8 ff ff 00 	cmpl   $0x0,-0x78c(%ebp)
 8074458:	0f 85 7b 08 00 00    	jne    8074cd9 <ProcessCommands+0x23f2>
 807445e:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8074462:	84 c0                	test   %al,%al
 8074464:	0f 95 c0             	setne  %al
 8074467:	0f b6 c0             	movzbl %al,%eax
 807446a:	85 c0                	test   %eax,%eax
 807446c:	0f 84 31 04 00 00    	je     80748a3 <ProcessCommands+0x1fbc>
 8074472:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8074476:	0f b6 c0             	movzbl %al,%eax
 8074479:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 807447f:	89 95 18 f9 ff ff    	mov    %edx,-0x6e8(%ebp)
 8074485:	89 85 1c f9 ff ff    	mov    %eax,-0x6e4(%ebp)
 807448b:	83 bd 1c f9 ff ff 10 	cmpl   $0x10,-0x6e4(%ebp)
 8074492:	0f 87 59 01 00 00    	ja     80745f1 <ProcessCommands+0x1d0a>
 8074498:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807449e:	89 85 20 f9 ff ff    	mov    %eax,-0x6e0(%ebp)
 80744a4:	8b 85 1c f9 ff ff    	mov    -0x6e4(%ebp),%eax
 80744aa:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%ebp)
 80744b0:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744b6:	8b 40 04             	mov    0x4(%eax),%eax
 80744b9:	83 f8 0f             	cmp    $0xf,%eax
 80744bc:	0f 86 86 00 00 00    	jbe    8074548 <ProcessCommands+0x1c61>
 80744c2:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744c8:	8b 00                	mov    (%eax),%eax
 80744ca:	c1 e8 10             	shr    $0x10,%eax
 80744cd:	89 c2                	mov    %eax,%edx
 80744cf:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744d5:	89 10                	mov    %edx,(%eax)
 80744d7:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744dd:	8b 40 04             	mov    0x4(%eax),%eax
 80744e0:	83 f0 10             	xor    $0x10,%eax
 80744e3:	89 c2                	mov    %eax,%edx
 80744e5:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744eb:	89 50 04             	mov    %edx,0x4(%eax)
 80744ee:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744f4:	8b 10                	mov    (%eax),%edx
 80744f6:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 80744fc:	8b 40 08             	mov    0x8(%eax),%eax
 80744ff:	89 85 28 f9 ff ff    	mov    %eax,-0x6d8(%ebp)
 8074505:	8b 85 28 f9 ff ff    	mov    -0x6d8(%ebp),%eax
 807450b:	0f b7 00             	movzwl (%eax),%eax
 807450e:	0f b7 c0             	movzwl %ax,%eax
 8074511:	c1 e0 10             	shl    $0x10,%eax
 8074514:	09 c2                	or     %eax,%edx
 8074516:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807451c:	89 10                	mov    %edx,(%eax)
 807451e:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 8074524:	8b 40 0c             	mov    0xc(%eax),%eax
 8074527:	8d 50 fe             	lea    -0x2(%eax),%edx
 807452a:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 8074530:	89 50 0c             	mov    %edx,0xc(%eax)
 8074533:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 8074539:	8b 40 08             	mov    0x8(%eax),%eax
 807453c:	8d 50 02             	lea    0x2(%eax),%edx
 807453f:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 8074545:	89 50 08             	mov    %edx,0x8(%eax)
 8074548:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807454e:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%ebp)
 8074554:	8b 85 1c f9 ff ff    	mov    -0x6e4(%ebp),%eax
 807455a:	89 85 30 f9 ff ff    	mov    %eax,-0x6d0(%ebp)
 8074560:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8074566:	89 85 34 f9 ff ff    	mov    %eax,-0x6cc(%ebp)
 807456c:	8b 85 2c f9 ff ff    	mov    -0x6d4(%ebp),%eax
 8074572:	89 85 38 f9 ff ff    	mov    %eax,-0x6c8(%ebp)
 8074578:	8b 85 38 f9 ff ff    	mov    -0x6c8(%ebp),%eax
 807457e:	8b 10                	mov    (%eax),%edx
 8074580:	8b 85 38 f9 ff ff    	mov    -0x6c8(%ebp),%eax
 8074586:	8b 40 04             	mov    0x4(%eax),%eax
 8074589:	89 c1                	mov    %eax,%ecx
 807458b:	d3 ea                	shr    %cl,%edx
 807458d:	89 d0                	mov    %edx,%eax
 807458f:	89 c2                	mov    %eax,%edx
 8074591:	8b 85 30 f9 ff ff    	mov    -0x6d0(%ebp),%eax
 8074597:	89 85 3c f9 ff ff    	mov    %eax,-0x6c4(%ebp)
 807459d:	8b 85 3c f9 ff ff    	mov    -0x6c4(%ebp),%eax
 80745a3:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80745aa:	21 c2                	and    %eax,%edx
 80745ac:	8b 85 34 f9 ff ff    	mov    -0x6cc(%ebp),%eax
 80745b2:	89 10                	mov    %edx,(%eax)
 80745b4:	8b 85 2c f9 ff ff    	mov    -0x6d4(%ebp),%eax
 80745ba:	89 85 40 f9 ff ff    	mov    %eax,-0x6c0(%ebp)
 80745c0:	8b 85 30 f9 ff ff    	mov    -0x6d0(%ebp),%eax
 80745c6:	89 85 44 f9 ff ff    	mov    %eax,-0x6bc(%ebp)
 80745cc:	8b 85 40 f9 ff ff    	mov    -0x6c0(%ebp),%eax
 80745d2:	8b 50 04             	mov    0x4(%eax),%edx
 80745d5:	8b 85 44 f9 ff ff    	mov    -0x6bc(%ebp),%eax
 80745db:	01 c2                	add    %eax,%edx
 80745dd:	8b 85 40 f9 ff ff    	mov    -0x6c0(%ebp),%eax
 80745e3:	89 50 04             	mov    %edx,0x4(%eax)
 80745e6:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 80745ec:	e9 ac 02 00 00       	jmp    807489d <ProcessCommands+0x1fb6>
 80745f1:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 80745f7:	89 85 48 f9 ff ff    	mov    %eax,-0x6b8(%ebp)
 80745fd:	c7 85 4c f9 ff ff 10 	movl   $0x10,-0x6b4(%ebp)
 8074604:	00 00 00 
 8074607:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807460d:	8b 40 04             	mov    0x4(%eax),%eax
 8074610:	83 f8 0f             	cmp    $0xf,%eax
 8074613:	0f 86 86 00 00 00    	jbe    807469f <ProcessCommands+0x1db8>
 8074619:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807461f:	8b 00                	mov    (%eax),%eax
 8074621:	c1 e8 10             	shr    $0x10,%eax
 8074624:	89 c2                	mov    %eax,%edx
 8074626:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807462c:	89 10                	mov    %edx,(%eax)
 807462e:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 8074634:	8b 40 04             	mov    0x4(%eax),%eax
 8074637:	83 f0 10             	xor    $0x10,%eax
 807463a:	89 c2                	mov    %eax,%edx
 807463c:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 8074642:	89 50 04             	mov    %edx,0x4(%eax)
 8074645:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807464b:	8b 10                	mov    (%eax),%edx
 807464d:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 8074653:	8b 40 08             	mov    0x8(%eax),%eax
 8074656:	89 85 50 f9 ff ff    	mov    %eax,-0x6b0(%ebp)
 807465c:	8b 85 50 f9 ff ff    	mov    -0x6b0(%ebp),%eax
 8074662:	0f b7 00             	movzwl (%eax),%eax
 8074665:	0f b7 c0             	movzwl %ax,%eax
 8074668:	c1 e0 10             	shl    $0x10,%eax
 807466b:	09 c2                	or     %eax,%edx
 807466d:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 8074673:	89 10                	mov    %edx,(%eax)
 8074675:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807467b:	8b 40 0c             	mov    0xc(%eax),%eax
 807467e:	8d 50 fe             	lea    -0x2(%eax),%edx
 8074681:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 8074687:	89 50 0c             	mov    %edx,0xc(%eax)
 807468a:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 8074690:	8b 40 08             	mov    0x8(%eax),%eax
 8074693:	8d 50 02             	lea    0x2(%eax),%edx
 8074696:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807469c:	89 50 08             	mov    %edx,0x8(%eax)
 807469f:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 80746a5:	89 85 54 f9 ff ff    	mov    %eax,-0x6ac(%ebp)
 80746ab:	c7 85 58 f9 ff ff 10 	movl   $0x10,-0x6a8(%ebp)
 80746b2:	00 00 00 
 80746b5:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 80746bb:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%ebp)
 80746c1:	8b 85 54 f9 ff ff    	mov    -0x6ac(%ebp),%eax
 80746c7:	89 85 60 f9 ff ff    	mov    %eax,-0x6a0(%ebp)
 80746cd:	8b 85 60 f9 ff ff    	mov    -0x6a0(%ebp),%eax
 80746d3:	8b 10                	mov    (%eax),%edx
 80746d5:	8b 85 60 f9 ff ff    	mov    -0x6a0(%ebp),%eax
 80746db:	8b 40 04             	mov    0x4(%eax),%eax
 80746de:	89 c1                	mov    %eax,%ecx
 80746e0:	d3 ea                	shr    %cl,%edx
 80746e2:	89 d0                	mov    %edx,%eax
 80746e4:	89 c2                	mov    %eax,%edx
 80746e6:	8b 85 58 f9 ff ff    	mov    -0x6a8(%ebp),%eax
 80746ec:	89 85 64 f9 ff ff    	mov    %eax,-0x69c(%ebp)
 80746f2:	8b 85 64 f9 ff ff    	mov    -0x69c(%ebp),%eax
 80746f8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80746ff:	21 c2                	and    %eax,%edx
 8074701:	8b 85 5c f9 ff ff    	mov    -0x6a4(%ebp),%eax
 8074707:	89 10                	mov    %edx,(%eax)
 8074709:	8b 85 54 f9 ff ff    	mov    -0x6ac(%ebp),%eax
 807470f:	89 85 68 f9 ff ff    	mov    %eax,-0x698(%ebp)
 8074715:	8b 85 58 f9 ff ff    	mov    -0x6a8(%ebp),%eax
 807471b:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%ebp)
 8074721:	8b 85 68 f9 ff ff    	mov    -0x698(%ebp),%eax
 8074727:	8b 50 04             	mov    0x4(%eax),%edx
 807472a:	8b 85 6c f9 ff ff    	mov    -0x694(%ebp),%eax
 8074730:	01 c2                	add    %eax,%edx
 8074732:	8b 85 68 f9 ff ff    	mov    -0x698(%ebp),%eax
 8074738:	89 50 04             	mov    %edx,0x4(%eax)
 807473b:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 8074741:	89 85 70 f9 ff ff    	mov    %eax,-0x690(%ebp)
 8074747:	c7 85 74 f9 ff ff 08 	movl   $0x8,-0x68c(%ebp)
 807474e:	00 00 00 
 8074751:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 8074757:	8b 40 04             	mov    0x4(%eax),%eax
 807475a:	83 f8 0f             	cmp    $0xf,%eax
 807475d:	0f 86 86 00 00 00    	jbe    80747e9 <ProcessCommands+0x1f02>
 8074763:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 8074769:	8b 00                	mov    (%eax),%eax
 807476b:	c1 e8 10             	shr    $0x10,%eax
 807476e:	89 c2                	mov    %eax,%edx
 8074770:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 8074776:	89 10                	mov    %edx,(%eax)
 8074778:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807477e:	8b 40 04             	mov    0x4(%eax),%eax
 8074781:	83 f0 10             	xor    $0x10,%eax
 8074784:	89 c2                	mov    %eax,%edx
 8074786:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807478c:	89 50 04             	mov    %edx,0x4(%eax)
 807478f:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 8074795:	8b 10                	mov    (%eax),%edx
 8074797:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807479d:	8b 40 08             	mov    0x8(%eax),%eax
 80747a0:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%ebp)
 80747a6:	8b 85 78 f9 ff ff    	mov    -0x688(%ebp),%eax
 80747ac:	0f b7 00             	movzwl (%eax),%eax
 80747af:	0f b7 c0             	movzwl %ax,%eax
 80747b2:	c1 e0 10             	shl    $0x10,%eax
 80747b5:	09 c2                	or     %eax,%edx
 80747b7:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 80747bd:	89 10                	mov    %edx,(%eax)
 80747bf:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 80747c5:	8b 40 0c             	mov    0xc(%eax),%eax
 80747c8:	8d 50 fe             	lea    -0x2(%eax),%edx
 80747cb:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 80747d1:	89 50 0c             	mov    %edx,0xc(%eax)
 80747d4:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 80747da:	8b 40 08             	mov    0x8(%eax),%eax
 80747dd:	8d 50 02             	lea    0x2(%eax),%edx
 80747e0:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 80747e6:	89 50 08             	mov    %edx,0x8(%eax)
 80747e9:	8b 85 1c f9 ff ff    	mov    -0x6e4(%ebp),%eax
 80747ef:	8d 50 f0             	lea    -0x10(%eax),%edx
 80747f2:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 80747f8:	89 85 7c f9 ff ff    	mov    %eax,-0x684(%ebp)
 80747fe:	89 95 80 f9 ff ff    	mov    %edx,-0x680(%ebp)
 8074804:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807480a:	89 85 84 f9 ff ff    	mov    %eax,-0x67c(%ebp)
 8074810:	8b 85 7c f9 ff ff    	mov    -0x684(%ebp),%eax
 8074816:	89 85 88 f9 ff ff    	mov    %eax,-0x678(%ebp)
 807481c:	8b 85 88 f9 ff ff    	mov    -0x678(%ebp),%eax
 8074822:	8b 10                	mov    (%eax),%edx
 8074824:	8b 85 88 f9 ff ff    	mov    -0x678(%ebp),%eax
 807482a:	8b 40 04             	mov    0x4(%eax),%eax
 807482d:	89 c1                	mov    %eax,%ecx
 807482f:	d3 ea                	shr    %cl,%edx
 8074831:	89 d0                	mov    %edx,%eax
 8074833:	89 c2                	mov    %eax,%edx
 8074835:	8b 85 80 f9 ff ff    	mov    -0x680(%ebp),%eax
 807483b:	89 85 8c f9 ff ff    	mov    %eax,-0x674(%ebp)
 8074841:	8b 85 8c f9 ff ff    	mov    -0x674(%ebp),%eax
 8074847:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807484e:	21 c2                	and    %eax,%edx
 8074850:	8b 85 84 f9 ff ff    	mov    -0x67c(%ebp),%eax
 8074856:	89 10                	mov    %edx,(%eax)
 8074858:	8b 85 7c f9 ff ff    	mov    -0x684(%ebp),%eax
 807485e:	89 85 90 f9 ff ff    	mov    %eax,-0x670(%ebp)
 8074864:	8b 85 80 f9 ff ff    	mov    -0x680(%ebp),%eax
 807486a:	89 85 94 f9 ff ff    	mov    %eax,-0x66c(%ebp)
 8074870:	8b 85 90 f9 ff ff    	mov    -0x670(%ebp),%eax
 8074876:	8b 50 04             	mov    0x4(%eax),%edx
 8074879:	8b 85 94 f9 ff ff    	mov    -0x66c(%ebp),%eax
 807487f:	01 c2                	add    %eax,%edx
 8074881:	8b 85 90 f9 ff ff    	mov    -0x670(%ebp),%eax
 8074887:	89 50 04             	mov    %edx,0x4(%eax)
 807488a:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 8074890:	c1 e0 10             	shl    $0x10,%eax
 8074893:	89 c2                	mov    %eax,%edx
 8074895:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807489b:	09 d0                	or     %edx,%eax
 807489d:	89 85 f0 f5 ff ff    	mov    %eax,-0xa10(%ebp)
 80748a3:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 80748a7:	0f b6 c0             	movzbl %al,%eax
 80748aa:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 80748b0:	89 95 98 f9 ff ff    	mov    %edx,-0x668(%ebp)
 80748b6:	89 85 9c f9 ff ff    	mov    %eax,-0x664(%ebp)
 80748bc:	83 bd 9c f9 ff ff 10 	cmpl   $0x10,-0x664(%ebp)
 80748c3:	0f 87 59 01 00 00    	ja     8074a22 <ProcessCommands+0x213b>
 80748c9:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 80748cf:	89 85 a0 f9 ff ff    	mov    %eax,-0x660(%ebp)
 80748d5:	8b 85 9c f9 ff ff    	mov    -0x664(%ebp),%eax
 80748db:	89 85 a4 f9 ff ff    	mov    %eax,-0x65c(%ebp)
 80748e1:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 80748e7:	8b 40 04             	mov    0x4(%eax),%eax
 80748ea:	83 f8 0f             	cmp    $0xf,%eax
 80748ed:	0f 86 86 00 00 00    	jbe    8074979 <ProcessCommands+0x2092>
 80748f3:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 80748f9:	8b 00                	mov    (%eax),%eax
 80748fb:	c1 e8 10             	shr    $0x10,%eax
 80748fe:	89 c2                	mov    %eax,%edx
 8074900:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 8074906:	89 10                	mov    %edx,(%eax)
 8074908:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807490e:	8b 40 04             	mov    0x4(%eax),%eax
 8074911:	83 f0 10             	xor    $0x10,%eax
 8074914:	89 c2                	mov    %eax,%edx
 8074916:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807491c:	89 50 04             	mov    %edx,0x4(%eax)
 807491f:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 8074925:	8b 10                	mov    (%eax),%edx
 8074927:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807492d:	8b 40 08             	mov    0x8(%eax),%eax
 8074930:	89 85 a8 f9 ff ff    	mov    %eax,-0x658(%ebp)
 8074936:	8b 85 a8 f9 ff ff    	mov    -0x658(%ebp),%eax
 807493c:	0f b7 00             	movzwl (%eax),%eax
 807493f:	0f b7 c0             	movzwl %ax,%eax
 8074942:	c1 e0 10             	shl    $0x10,%eax
 8074945:	09 c2                	or     %eax,%edx
 8074947:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807494d:	89 10                	mov    %edx,(%eax)
 807494f:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 8074955:	8b 40 0c             	mov    0xc(%eax),%eax
 8074958:	8d 50 fe             	lea    -0x2(%eax),%edx
 807495b:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 8074961:	89 50 0c             	mov    %edx,0xc(%eax)
 8074964:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807496a:	8b 40 08             	mov    0x8(%eax),%eax
 807496d:	8d 50 02             	lea    0x2(%eax),%edx
 8074970:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 8074976:	89 50 08             	mov    %edx,0x8(%eax)
 8074979:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807497f:	89 85 ac f9 ff ff    	mov    %eax,-0x654(%ebp)
 8074985:	8b 85 9c f9 ff ff    	mov    -0x664(%ebp),%eax
 807498b:	89 85 b0 f9 ff ff    	mov    %eax,-0x650(%ebp)
 8074991:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8074997:	89 85 b4 f9 ff ff    	mov    %eax,-0x64c(%ebp)
 807499d:	8b 85 ac f9 ff ff    	mov    -0x654(%ebp),%eax
 80749a3:	89 85 b8 f9 ff ff    	mov    %eax,-0x648(%ebp)
 80749a9:	8b 85 b8 f9 ff ff    	mov    -0x648(%ebp),%eax
 80749af:	8b 10                	mov    (%eax),%edx
 80749b1:	8b 85 b8 f9 ff ff    	mov    -0x648(%ebp),%eax
 80749b7:	8b 40 04             	mov    0x4(%eax),%eax
 80749ba:	89 c1                	mov    %eax,%ecx
 80749bc:	d3 ea                	shr    %cl,%edx
 80749be:	89 d0                	mov    %edx,%eax
 80749c0:	89 c2                	mov    %eax,%edx
 80749c2:	8b 85 b0 f9 ff ff    	mov    -0x650(%ebp),%eax
 80749c8:	89 85 bc f9 ff ff    	mov    %eax,-0x644(%ebp)
 80749ce:	8b 85 bc f9 ff ff    	mov    -0x644(%ebp),%eax
 80749d4:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80749db:	21 c2                	and    %eax,%edx
 80749dd:	8b 85 b4 f9 ff ff    	mov    -0x64c(%ebp),%eax
 80749e3:	89 10                	mov    %edx,(%eax)
 80749e5:	8b 85 ac f9 ff ff    	mov    -0x654(%ebp),%eax
 80749eb:	89 85 c0 f9 ff ff    	mov    %eax,-0x640(%ebp)
 80749f1:	8b 85 b0 f9 ff ff    	mov    -0x650(%ebp),%eax
 80749f7:	89 85 c4 f9 ff ff    	mov    %eax,-0x63c(%ebp)
 80749fd:	8b 85 c0 f9 ff ff    	mov    -0x640(%ebp),%eax
 8074a03:	8b 50 04             	mov    0x4(%eax),%edx
 8074a06:	8b 85 c4 f9 ff ff    	mov    -0x63c(%ebp),%eax
 8074a0c:	01 c2                	add    %eax,%edx
 8074a0e:	8b 85 c0 f9 ff ff    	mov    -0x640(%ebp),%eax
 8074a14:	89 50 04             	mov    %edx,0x4(%eax)
 8074a17:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 8074a1d:	e9 ac 02 00 00       	jmp    8074cce <ProcessCommands+0x23e7>
 8074a22:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 8074a28:	89 85 c8 f9 ff ff    	mov    %eax,-0x638(%ebp)
 8074a2e:	c7 85 cc f9 ff ff 10 	movl   $0x10,-0x634(%ebp)
 8074a35:	00 00 00 
 8074a38:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a3e:	8b 40 04             	mov    0x4(%eax),%eax
 8074a41:	83 f8 0f             	cmp    $0xf,%eax
 8074a44:	0f 86 86 00 00 00    	jbe    8074ad0 <ProcessCommands+0x21e9>
 8074a4a:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a50:	8b 00                	mov    (%eax),%eax
 8074a52:	c1 e8 10             	shr    $0x10,%eax
 8074a55:	89 c2                	mov    %eax,%edx
 8074a57:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a5d:	89 10                	mov    %edx,(%eax)
 8074a5f:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a65:	8b 40 04             	mov    0x4(%eax),%eax
 8074a68:	83 f0 10             	xor    $0x10,%eax
 8074a6b:	89 c2                	mov    %eax,%edx
 8074a6d:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a73:	89 50 04             	mov    %edx,0x4(%eax)
 8074a76:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a7c:	8b 10                	mov    (%eax),%edx
 8074a7e:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074a84:	8b 40 08             	mov    0x8(%eax),%eax
 8074a87:	89 85 d0 f9 ff ff    	mov    %eax,-0x630(%ebp)
 8074a8d:	8b 85 d0 f9 ff ff    	mov    -0x630(%ebp),%eax
 8074a93:	0f b7 00             	movzwl (%eax),%eax
 8074a96:	0f b7 c0             	movzwl %ax,%eax
 8074a99:	c1 e0 10             	shl    $0x10,%eax
 8074a9c:	09 c2                	or     %eax,%edx
 8074a9e:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074aa4:	89 10                	mov    %edx,(%eax)
 8074aa6:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074aac:	8b 40 0c             	mov    0xc(%eax),%eax
 8074aaf:	8d 50 fe             	lea    -0x2(%eax),%edx
 8074ab2:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074ab8:	89 50 0c             	mov    %edx,0xc(%eax)
 8074abb:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074ac1:	8b 40 08             	mov    0x8(%eax),%eax
 8074ac4:	8d 50 02             	lea    0x2(%eax),%edx
 8074ac7:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 8074acd:	89 50 08             	mov    %edx,0x8(%eax)
 8074ad0:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 8074ad6:	89 85 d4 f9 ff ff    	mov    %eax,-0x62c(%ebp)
 8074adc:	c7 85 d8 f9 ff ff 10 	movl   $0x10,-0x628(%ebp)
 8074ae3:	00 00 00 
 8074ae6:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 8074aec:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%ebp)
 8074af2:	8b 85 d4 f9 ff ff    	mov    -0x62c(%ebp),%eax
 8074af8:	89 85 e0 f9 ff ff    	mov    %eax,-0x620(%ebp)
 8074afe:	8b 85 e0 f9 ff ff    	mov    -0x620(%ebp),%eax
 8074b04:	8b 10                	mov    (%eax),%edx
 8074b06:	8b 85 e0 f9 ff ff    	mov    -0x620(%ebp),%eax
 8074b0c:	8b 40 04             	mov    0x4(%eax),%eax
 8074b0f:	89 c1                	mov    %eax,%ecx
 8074b11:	d3 ea                	shr    %cl,%edx
 8074b13:	89 d0                	mov    %edx,%eax
 8074b15:	89 c2                	mov    %eax,%edx
 8074b17:	8b 85 d8 f9 ff ff    	mov    -0x628(%ebp),%eax
 8074b1d:	89 85 e4 f9 ff ff    	mov    %eax,-0x61c(%ebp)
 8074b23:	8b 85 e4 f9 ff ff    	mov    -0x61c(%ebp),%eax
 8074b29:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8074b30:	21 c2                	and    %eax,%edx
 8074b32:	8b 85 dc f9 ff ff    	mov    -0x624(%ebp),%eax
 8074b38:	89 10                	mov    %edx,(%eax)
 8074b3a:	8b 85 d4 f9 ff ff    	mov    -0x62c(%ebp),%eax
 8074b40:	89 85 e8 f9 ff ff    	mov    %eax,-0x618(%ebp)
 8074b46:	8b 85 d8 f9 ff ff    	mov    -0x628(%ebp),%eax
 8074b4c:	89 85 ec f9 ff ff    	mov    %eax,-0x614(%ebp)
 8074b52:	8b 85 e8 f9 ff ff    	mov    -0x618(%ebp),%eax
 8074b58:	8b 50 04             	mov    0x4(%eax),%edx
 8074b5b:	8b 85 ec f9 ff ff    	mov    -0x614(%ebp),%eax
 8074b61:	01 c2                	add    %eax,%edx
 8074b63:	8b 85 e8 f9 ff ff    	mov    -0x618(%ebp),%eax
 8074b69:	89 50 04             	mov    %edx,0x4(%eax)
 8074b6c:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 8074b72:	89 85 f0 f9 ff ff    	mov    %eax,-0x610(%ebp)
 8074b78:	c7 85 f4 f9 ff ff 08 	movl   $0x8,-0x60c(%ebp)
 8074b7f:	00 00 00 
 8074b82:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074b88:	8b 40 04             	mov    0x4(%eax),%eax
 8074b8b:	83 f8 0f             	cmp    $0xf,%eax
 8074b8e:	0f 86 86 00 00 00    	jbe    8074c1a <ProcessCommands+0x2333>
 8074b94:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074b9a:	8b 00                	mov    (%eax),%eax
 8074b9c:	c1 e8 10             	shr    $0x10,%eax
 8074b9f:	89 c2                	mov    %eax,%edx
 8074ba1:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074ba7:	89 10                	mov    %edx,(%eax)
 8074ba9:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074baf:	8b 40 04             	mov    0x4(%eax),%eax
 8074bb2:	83 f0 10             	xor    $0x10,%eax
 8074bb5:	89 c2                	mov    %eax,%edx
 8074bb7:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074bbd:	89 50 04             	mov    %edx,0x4(%eax)
 8074bc0:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074bc6:	8b 10                	mov    (%eax),%edx
 8074bc8:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074bce:	8b 40 08             	mov    0x8(%eax),%eax
 8074bd1:	89 85 f8 f9 ff ff    	mov    %eax,-0x608(%ebp)
 8074bd7:	8b 85 f8 f9 ff ff    	mov    -0x608(%ebp),%eax
 8074bdd:	0f b7 00             	movzwl (%eax),%eax
 8074be0:	0f b7 c0             	movzwl %ax,%eax
 8074be3:	c1 e0 10             	shl    $0x10,%eax
 8074be6:	09 c2                	or     %eax,%edx
 8074be8:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074bee:	89 10                	mov    %edx,(%eax)
 8074bf0:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074bf6:	8b 40 0c             	mov    0xc(%eax),%eax
 8074bf9:	8d 50 fe             	lea    -0x2(%eax),%edx
 8074bfc:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074c02:	89 50 0c             	mov    %edx,0xc(%eax)
 8074c05:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074c0b:	8b 40 08             	mov    0x8(%eax),%eax
 8074c0e:	8d 50 02             	lea    0x2(%eax),%edx
 8074c11:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 8074c17:	89 50 08             	mov    %edx,0x8(%eax)
 8074c1a:	8b 85 9c f9 ff ff    	mov    -0x664(%ebp),%eax
 8074c20:	8d 50 f0             	lea    -0x10(%eax),%edx
 8074c23:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 8074c29:	89 85 fc f9 ff ff    	mov    %eax,-0x604(%ebp)
 8074c2f:	89 95 00 fa ff ff    	mov    %edx,-0x600(%ebp)
 8074c35:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8074c3b:	89 85 04 fa ff ff    	mov    %eax,-0x5fc(%ebp)
 8074c41:	8b 85 fc f9 ff ff    	mov    -0x604(%ebp),%eax
 8074c47:	89 85 08 fa ff ff    	mov    %eax,-0x5f8(%ebp)
 8074c4d:	8b 85 08 fa ff ff    	mov    -0x5f8(%ebp),%eax
 8074c53:	8b 10                	mov    (%eax),%edx
 8074c55:	8b 85 08 fa ff ff    	mov    -0x5f8(%ebp),%eax
 8074c5b:	8b 40 04             	mov    0x4(%eax),%eax
 8074c5e:	89 c1                	mov    %eax,%ecx
 8074c60:	d3 ea                	shr    %cl,%edx
 8074c62:	89 d0                	mov    %edx,%eax
 8074c64:	89 c2                	mov    %eax,%edx
 8074c66:	8b 85 00 fa ff ff    	mov    -0x600(%ebp),%eax
 8074c6c:	89 85 0c fa ff ff    	mov    %eax,-0x5f4(%ebp)
 8074c72:	8b 85 0c fa ff ff    	mov    -0x5f4(%ebp),%eax
 8074c78:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8074c7f:	21 c2                	and    %eax,%edx
 8074c81:	8b 85 04 fa ff ff    	mov    -0x5fc(%ebp),%eax
 8074c87:	89 10                	mov    %edx,(%eax)
 8074c89:	8b 85 fc f9 ff ff    	mov    -0x604(%ebp),%eax
 8074c8f:	89 85 10 fa ff ff    	mov    %eax,-0x5f0(%ebp)
 8074c95:	8b 85 00 fa ff ff    	mov    -0x600(%ebp),%eax
 8074c9b:	89 85 14 fa ff ff    	mov    %eax,-0x5ec(%ebp)
 8074ca1:	8b 85 10 fa ff ff    	mov    -0x5f0(%ebp),%eax
 8074ca7:	8b 50 04             	mov    0x4(%eax),%edx
 8074caa:	8b 85 14 fa ff ff    	mov    -0x5ec(%ebp),%eax
 8074cb0:	01 c2                	add    %eax,%edx
 8074cb2:	8b 85 10 fa ff ff    	mov    -0x5f0(%ebp),%eax
 8074cb8:	89 50 04             	mov    %edx,0x4(%eax)
 8074cbb:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 8074cc1:	c1 e0 10             	shl    $0x10,%eax
 8074cc4:	89 c2                	mov    %eax,%edx
 8074cc6:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8074ccc:	09 d0                	or     %edx,%eax
 8074cce:	89 85 f8 f5 ff ff    	mov    %eax,-0xa08(%ebp)
 8074cd4:	e9 35 04 00 00       	jmp    807510e <ProcessCommands+0x2827>
 8074cd9:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8074cdd:	0f b6 c0             	movzbl %al,%eax
 8074ce0:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 8074ce6:	89 95 18 fa ff ff    	mov    %edx,-0x5e8(%ebp)
 8074cec:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%ebp)
 8074cf2:	8d 85 f0 f5 ff ff    	lea    -0xa10(%ebp),%eax
 8074cf8:	89 85 20 fa ff ff    	mov    %eax,-0x5e0(%ebp)
 8074cfe:	83 bd 1c fa ff ff 00 	cmpl   $0x0,-0x5e4(%ebp)
 8074d05:	0f 84 a3 01 00 00    	je     8074eae <ProcessCommands+0x25c7>
 8074d0b:	8b 85 18 fa ff ff    	mov    -0x5e8(%ebp),%eax
 8074d11:	89 85 24 fa ff ff    	mov    %eax,-0x5dc(%ebp)
 8074d17:	8b 85 1c fa ff ff    	mov    -0x5e4(%ebp),%eax
 8074d1d:	89 85 28 fa ff ff    	mov    %eax,-0x5d8(%ebp)
 8074d23:	8b 85 20 fa ff ff    	mov    -0x5e0(%ebp),%eax
 8074d29:	89 85 2c fa ff ff    	mov    %eax,-0x5d4(%ebp)
 8074d2f:	e9 ab 00 00 00       	jmp    8074ddf <ProcessCommands+0x24f8>
 8074d34:	8b 85 24 fa ff ff    	mov    -0x5dc(%ebp),%eax
 8074d3a:	89 85 30 fa ff ff    	mov    %eax,-0x5d0(%ebp)
 8074d40:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d46:	8b 40 0c             	mov    0xc(%eax),%eax
 8074d49:	85 c0                	test   %eax,%eax
 8074d4b:	75 07                	jne    8074d54 <ProcessCommands+0x246d>
 8074d4d:	b8 00 00 00 00       	mov    $0x0,%eax
 8074d52:	eb 7d                	jmp    8074dd1 <ProcessCommands+0x24ea>
 8074d54:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d5a:	8b 00                	mov    (%eax),%eax
 8074d5c:	c1 e8 08             	shr    $0x8,%eax
 8074d5f:	89 c2                	mov    %eax,%edx
 8074d61:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d67:	89 10                	mov    %edx,(%eax)
 8074d69:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d6f:	8b 10                	mov    (%eax),%edx
 8074d71:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d77:	8b 40 08             	mov    0x8(%eax),%eax
 8074d7a:	0f b6 00             	movzbl (%eax),%eax
 8074d7d:	0f b6 c0             	movzbl %al,%eax
 8074d80:	c1 e0 18             	shl    $0x18,%eax
 8074d83:	09 c2                	or     %eax,%edx
 8074d85:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d8b:	89 10                	mov    %edx,(%eax)
 8074d8d:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d93:	8b 40 04             	mov    0x4(%eax),%eax
 8074d96:	8d 50 f8             	lea    -0x8(%eax),%edx
 8074d99:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074d9f:	89 50 04             	mov    %edx,0x4(%eax)
 8074da2:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074da8:	8b 40 0c             	mov    0xc(%eax),%eax
 8074dab:	8d 50 ff             	lea    -0x1(%eax),%edx
 8074dae:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074db4:	89 50 0c             	mov    %edx,0xc(%eax)
 8074db7:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074dbd:	8b 40 08             	mov    0x8(%eax),%eax
 8074dc0:	8d 50 01             	lea    0x1(%eax),%edx
 8074dc3:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 8074dc9:	89 50 08             	mov    %edx,0x8(%eax)
 8074dcc:	b8 01 00 00 00       	mov    $0x1,%eax
 8074dd1:	85 c0                	test   %eax,%eax
 8074dd3:	75 0a                	jne    8074ddf <ProcessCommands+0x24f8>
 8074dd5:	b8 00 00 00 00       	mov    $0x0,%eax
 8074dda:	e9 e0 00 00 00       	jmp    8074ebf <ProcessCommands+0x25d8>
 8074ddf:	8b 85 24 fa ff ff    	mov    -0x5dc(%ebp),%eax
 8074de5:	89 85 34 fa ff ff    	mov    %eax,-0x5cc(%ebp)
 8074deb:	8b 85 34 fa ff ff    	mov    -0x5cc(%ebp),%eax
 8074df1:	8b 40 04             	mov    0x4(%eax),%eax
 8074df4:	ba 20 00 00 00       	mov    $0x20,%edx
 8074df9:	29 c2                	sub    %eax,%edx
 8074dfb:	89 d0                	mov    %edx,%eax
 8074dfd:	39 85 28 fa ff ff    	cmp    %eax,-0x5d8(%ebp)
 8074e03:	0f 87 2b ff ff ff    	ja     8074d34 <ProcessCommands+0x244d>
 8074e09:	8b 85 24 fa ff ff    	mov    -0x5dc(%ebp),%eax
 8074e0f:	89 85 38 fa ff ff    	mov    %eax,-0x5c8(%ebp)
 8074e15:	8b 85 28 fa ff ff    	mov    -0x5d8(%ebp),%eax
 8074e1b:	89 85 3c fa ff ff    	mov    %eax,-0x5c4(%ebp)
 8074e21:	8b 85 2c fa ff ff    	mov    -0x5d4(%ebp),%eax
 8074e27:	89 85 40 fa ff ff    	mov    %eax,-0x5c0(%ebp)
 8074e2d:	8b 85 38 fa ff ff    	mov    -0x5c8(%ebp),%eax
 8074e33:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%ebp)
 8074e39:	8b 85 44 fa ff ff    	mov    -0x5bc(%ebp),%eax
 8074e3f:	8b 10                	mov    (%eax),%edx
 8074e41:	8b 85 44 fa ff ff    	mov    -0x5bc(%ebp),%eax
 8074e47:	8b 40 04             	mov    0x4(%eax),%eax
 8074e4a:	89 c1                	mov    %eax,%ecx
 8074e4c:	d3 ea                	shr    %cl,%edx
 8074e4e:	89 d0                	mov    %edx,%eax
 8074e50:	89 c2                	mov    %eax,%edx
 8074e52:	8b 85 3c fa ff ff    	mov    -0x5c4(%ebp),%eax
 8074e58:	89 85 48 fa ff ff    	mov    %eax,-0x5b8(%ebp)
 8074e5e:	8b 85 48 fa ff ff    	mov    -0x5b8(%ebp),%eax
 8074e64:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8074e6b:	21 c2                	and    %eax,%edx
 8074e6d:	8b 85 40 fa ff ff    	mov    -0x5c0(%ebp),%eax
 8074e73:	89 10                	mov    %edx,(%eax)
 8074e75:	8b 85 38 fa ff ff    	mov    -0x5c8(%ebp),%eax
 8074e7b:	89 85 4c fa ff ff    	mov    %eax,-0x5b4(%ebp)
 8074e81:	8b 85 3c fa ff ff    	mov    -0x5c4(%ebp),%eax
 8074e87:	89 85 50 fa ff ff    	mov    %eax,-0x5b0(%ebp)
 8074e8d:	8b 85 4c fa ff ff    	mov    -0x5b4(%ebp),%eax
 8074e93:	8b 50 04             	mov    0x4(%eax),%edx
 8074e96:	8b 85 50 fa ff ff    	mov    -0x5b0(%ebp),%eax
 8074e9c:	01 c2                	add    %eax,%edx
 8074e9e:	8b 85 4c fa ff ff    	mov    -0x5b4(%ebp),%eax
 8074ea4:	89 50 04             	mov    %edx,0x4(%eax)
 8074ea7:	b8 01 00 00 00       	mov    $0x1,%eax
 8074eac:	eb 11                	jmp    8074ebf <ProcessCommands+0x25d8>
 8074eae:	8b 85 20 fa ff ff    	mov    -0x5e0(%ebp),%eax
 8074eb4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8074eba:	b8 01 00 00 00       	mov    $0x1,%eax
 8074ebf:	85 c0                	test   %eax,%eax
 8074ec1:	0f 84 ea 01 00 00    	je     80750b1 <ProcessCommands+0x27ca>
 8074ec7:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 8074ecb:	0f b6 c0             	movzbl %al,%eax
 8074ece:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 8074ed4:	89 95 54 fa ff ff    	mov    %edx,-0x5ac(%ebp)
 8074eda:	89 85 58 fa ff ff    	mov    %eax,-0x5a8(%ebp)
 8074ee0:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8074ee6:	89 85 5c fa ff ff    	mov    %eax,-0x5a4(%ebp)
 8074eec:	83 bd 58 fa ff ff 00 	cmpl   $0x0,-0x5a8(%ebp)
 8074ef3:	0f 84 a3 01 00 00    	je     807509c <ProcessCommands+0x27b5>
 8074ef9:	8b 85 54 fa ff ff    	mov    -0x5ac(%ebp),%eax
 8074eff:	89 85 60 fa ff ff    	mov    %eax,-0x5a0(%ebp)
 8074f05:	8b 85 58 fa ff ff    	mov    -0x5a8(%ebp),%eax
 8074f0b:	89 85 64 fa ff ff    	mov    %eax,-0x59c(%ebp)
 8074f11:	8b 85 5c fa ff ff    	mov    -0x5a4(%ebp),%eax
 8074f17:	89 85 68 fa ff ff    	mov    %eax,-0x598(%ebp)
 8074f1d:	e9 ab 00 00 00       	jmp    8074fcd <ProcessCommands+0x26e6>
 8074f22:	8b 85 60 fa ff ff    	mov    -0x5a0(%ebp),%eax
 8074f28:	89 85 6c fa ff ff    	mov    %eax,-0x594(%ebp)
 8074f2e:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f34:	8b 40 0c             	mov    0xc(%eax),%eax
 8074f37:	85 c0                	test   %eax,%eax
 8074f39:	75 07                	jne    8074f42 <ProcessCommands+0x265b>
 8074f3b:	b8 00 00 00 00       	mov    $0x0,%eax
 8074f40:	eb 7d                	jmp    8074fbf <ProcessCommands+0x26d8>
 8074f42:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f48:	8b 00                	mov    (%eax),%eax
 8074f4a:	c1 e8 08             	shr    $0x8,%eax
 8074f4d:	89 c2                	mov    %eax,%edx
 8074f4f:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f55:	89 10                	mov    %edx,(%eax)
 8074f57:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f5d:	8b 10                	mov    (%eax),%edx
 8074f5f:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f65:	8b 40 08             	mov    0x8(%eax),%eax
 8074f68:	0f b6 00             	movzbl (%eax),%eax
 8074f6b:	0f b6 c0             	movzbl %al,%eax
 8074f6e:	c1 e0 18             	shl    $0x18,%eax
 8074f71:	09 c2                	or     %eax,%edx
 8074f73:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f79:	89 10                	mov    %edx,(%eax)
 8074f7b:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f81:	8b 40 04             	mov    0x4(%eax),%eax
 8074f84:	8d 50 f8             	lea    -0x8(%eax),%edx
 8074f87:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f8d:	89 50 04             	mov    %edx,0x4(%eax)
 8074f90:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074f96:	8b 40 0c             	mov    0xc(%eax),%eax
 8074f99:	8d 50 ff             	lea    -0x1(%eax),%edx
 8074f9c:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074fa2:	89 50 0c             	mov    %edx,0xc(%eax)
 8074fa5:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074fab:	8b 40 08             	mov    0x8(%eax),%eax
 8074fae:	8d 50 01             	lea    0x1(%eax),%edx
 8074fb1:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 8074fb7:	89 50 08             	mov    %edx,0x8(%eax)
 8074fba:	b8 01 00 00 00       	mov    $0x1,%eax
 8074fbf:	85 c0                	test   %eax,%eax
 8074fc1:	75 0a                	jne    8074fcd <ProcessCommands+0x26e6>
 8074fc3:	b8 00 00 00 00       	mov    $0x0,%eax
 8074fc8:	e9 e0 00 00 00       	jmp    80750ad <ProcessCommands+0x27c6>
 8074fcd:	8b 85 60 fa ff ff    	mov    -0x5a0(%ebp),%eax
 8074fd3:	89 85 70 fa ff ff    	mov    %eax,-0x590(%ebp)
 8074fd9:	8b 85 70 fa ff ff    	mov    -0x590(%ebp),%eax
 8074fdf:	8b 40 04             	mov    0x4(%eax),%eax
 8074fe2:	ba 20 00 00 00       	mov    $0x20,%edx
 8074fe7:	29 c2                	sub    %eax,%edx
 8074fe9:	89 d0                	mov    %edx,%eax
 8074feb:	39 85 64 fa ff ff    	cmp    %eax,-0x59c(%ebp)
 8074ff1:	0f 87 2b ff ff ff    	ja     8074f22 <ProcessCommands+0x263b>
 8074ff7:	8b 85 60 fa ff ff    	mov    -0x5a0(%ebp),%eax
 8074ffd:	89 85 74 fa ff ff    	mov    %eax,-0x58c(%ebp)
 8075003:	8b 85 64 fa ff ff    	mov    -0x59c(%ebp),%eax
 8075009:	89 85 78 fa ff ff    	mov    %eax,-0x588(%ebp)
 807500f:	8b 85 68 fa ff ff    	mov    -0x598(%ebp),%eax
 8075015:	89 85 7c fa ff ff    	mov    %eax,-0x584(%ebp)
 807501b:	8b 85 74 fa ff ff    	mov    -0x58c(%ebp),%eax
 8075021:	89 85 80 fa ff ff    	mov    %eax,-0x580(%ebp)
 8075027:	8b 85 80 fa ff ff    	mov    -0x580(%ebp),%eax
 807502d:	8b 10                	mov    (%eax),%edx
 807502f:	8b 85 80 fa ff ff    	mov    -0x580(%ebp),%eax
 8075035:	8b 40 04             	mov    0x4(%eax),%eax
 8075038:	89 c1                	mov    %eax,%ecx
 807503a:	d3 ea                	shr    %cl,%edx
 807503c:	89 d0                	mov    %edx,%eax
 807503e:	89 c2                	mov    %eax,%edx
 8075040:	8b 85 78 fa ff ff    	mov    -0x588(%ebp),%eax
 8075046:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%ebp)
 807504c:	8b 85 84 fa ff ff    	mov    -0x57c(%ebp),%eax
 8075052:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8075059:	21 c2                	and    %eax,%edx
 807505b:	8b 85 7c fa ff ff    	mov    -0x584(%ebp),%eax
 8075061:	89 10                	mov    %edx,(%eax)
 8075063:	8b 85 74 fa ff ff    	mov    -0x58c(%ebp),%eax
 8075069:	89 85 88 fa ff ff    	mov    %eax,-0x578(%ebp)
 807506f:	8b 85 78 fa ff ff    	mov    -0x588(%ebp),%eax
 8075075:	89 85 8c fa ff ff    	mov    %eax,-0x574(%ebp)
 807507b:	8b 85 88 fa ff ff    	mov    -0x578(%ebp),%eax
 8075081:	8b 50 04             	mov    0x4(%eax),%edx
 8075084:	8b 85 8c fa ff ff    	mov    -0x574(%ebp),%eax
 807508a:	01 c2                	add    %eax,%edx
 807508c:	8b 85 88 fa ff ff    	mov    -0x578(%ebp),%eax
 8075092:	89 50 04             	mov    %edx,0x4(%eax)
 8075095:	b8 01 00 00 00       	mov    $0x1,%eax
 807509a:	eb 11                	jmp    80750ad <ProcessCommands+0x27c6>
 807509c:	8b 85 5c fa ff ff    	mov    -0x5a4(%ebp),%eax
 80750a2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 80750a8:	b8 01 00 00 00       	mov    $0x1,%eax
 80750ad:	85 c0                	test   %eax,%eax
 80750af:	75 5d                	jne    807510e <ProcessCommands+0x2827>
 80750b1:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 80750b7:	89 85 90 fa ff ff    	mov    %eax,-0x570(%ebp)
 80750bd:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80750c0:	89 85 94 fa ff ff    	mov    %eax,-0x56c(%ebp)
 80750c6:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 80750cc:	8b 10                	mov    (%eax),%edx
 80750ce:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 80750d4:	89 10                	mov    %edx,(%eax)
 80750d6:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 80750dc:	8b 50 04             	mov    0x4(%eax),%edx
 80750df:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 80750e5:	89 50 04             	mov    %edx,0x4(%eax)
 80750e8:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 80750ee:	8b 50 08             	mov    0x8(%eax),%edx
 80750f1:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 80750f7:	89 50 08             	mov    %edx,0x8(%eax)
 80750fa:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 8075100:	8b 50 0c             	mov    0xc(%eax),%edx
 8075103:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 8075109:	89 50 0c             	mov    %edx,0xc(%eax)
 807510c:	eb 4e                	jmp    807515c <ProcessCommands+0x2875>
 807510e:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax
 8075112:	0f b7 d0             	movzwl %ax,%edx
 8075115:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807511b:	01 c2                	add    %eax,%edx
 807511d:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8075123:	89 90 04 01 00 00    	mov    %edx,0x104(%eax)
 8075129:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807512f:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
 8075135:	8d 50 ff             	lea    -0x1(%eax),%edx
 8075138:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807513e:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)
 8075144:	8b 85 80 f8 ff ff    	mov    -0x780(%ebp),%eax
 807514a:	8b 10                	mov    (%eax),%edx
 807514c:	8b 85 f0 f5 ff ff    	mov    -0xa10(%ebp),%eax
 8075152:	01 c2                	add    %eax,%edx
 8075154:	8b 85 80 f8 ff ff    	mov    -0x780(%ebp),%eax
 807515a:	89 10                	mov    %edx,(%eax)
 807515c:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8075162:	85 c0                	test   %eax,%eax
 8075164:	0f 84 e4 12 00 00    	je     807644e <ProcessCommands+0x3b67>
 807516a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075170:	8b 90 b4 00 00 00    	mov    0xb4(%eax),%edx
 8075176:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807517c:	29 c2                	sub    %eax,%edx
 807517e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075184:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 807518a:	eb 01                	jmp    807518d <ProcessCommands+0x28a6>
 807518c:	90                   	nop
 807518d:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8075194:	74 0c                	je     80751a2 <ProcessCommands+0x28bb>
 8075196:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807519c:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 80751a2:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80751a8:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax
 80751ae:	85 c0                	test   %eax,%eax
 80751b0:	0f 84 53 0b 00 00    	je     8075d09 <ProcessCommands+0x3422>
 80751b6:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80751bc:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 80751c2:	8b 95 fc f5 ff ff    	mov    -0xa04(%ebp),%edx
 80751c8:	89 95 98 fa ff ff    	mov    %edx,-0x568(%ebp)
 80751ce:	89 85 9c fa ff ff    	mov    %eax,-0x564(%ebp)
 80751d4:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80751da:	89 85 a0 fa ff ff    	mov    %eax,-0x560(%ebp)
 80751e0:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 80751e6:	89 85 a4 fa ff ff    	mov    %eax,-0x55c(%ebp)
 80751ec:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 80751f2:	89 85 a8 fa ff ff    	mov    %eax,-0x558(%ebp)
 80751f8:	83 bd 98 fa ff ff 00 	cmpl   $0x0,-0x568(%ebp)
 80751ff:	0f 85 38 01 00 00    	jne    807533d <ProcessCommands+0x2a56>
 8075205:	8b 85 a0 fa ff ff    	mov    -0x560(%ebp),%eax
 807520b:	89 85 ac fa ff ff    	mov    %eax,-0x554(%ebp)
 8075211:	c7 85 b0 fa ff ff 08 	movl   $0x8,-0x550(%ebp)
 8075218:	00 00 00 
 807521b:	8b 85 ac fa ff ff    	mov    -0x554(%ebp),%eax
 8075221:	89 85 b4 fa ff ff    	mov    %eax,-0x54c(%ebp)
 8075227:	8b 85 b0 fa ff ff    	mov    -0x550(%ebp),%eax
 807522d:	89 85 b8 fa ff ff    	mov    %eax,-0x548(%ebp)
 8075233:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 8075239:	8b 40 04             	mov    0x4(%eax),%eax
 807523c:	83 f8 0f             	cmp    $0xf,%eax
 807523f:	0f 86 86 00 00 00    	jbe    80752cb <ProcessCommands+0x29e4>
 8075245:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807524b:	8b 00                	mov    (%eax),%eax
 807524d:	c1 e8 10             	shr    $0x10,%eax
 8075250:	89 c2                	mov    %eax,%edx
 8075252:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 8075258:	89 10                	mov    %edx,(%eax)
 807525a:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 8075260:	8b 40 04             	mov    0x4(%eax),%eax
 8075263:	83 f0 10             	xor    $0x10,%eax
 8075266:	89 c2                	mov    %eax,%edx
 8075268:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807526e:	89 50 04             	mov    %edx,0x4(%eax)
 8075271:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 8075277:	8b 10                	mov    (%eax),%edx
 8075279:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807527f:	8b 40 08             	mov    0x8(%eax),%eax
 8075282:	89 85 bc fa ff ff    	mov    %eax,-0x544(%ebp)
 8075288:	8b 85 bc fa ff ff    	mov    -0x544(%ebp),%eax
 807528e:	0f b7 00             	movzwl (%eax),%eax
 8075291:	0f b7 c0             	movzwl %ax,%eax
 8075294:	c1 e0 10             	shl    $0x10,%eax
 8075297:	09 c2                	or     %eax,%edx
 8075299:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807529f:	89 10                	mov    %edx,(%eax)
 80752a1:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 80752a7:	8b 40 0c             	mov    0xc(%eax),%eax
 80752aa:	8d 50 fe             	lea    -0x2(%eax),%edx
 80752ad:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 80752b3:	89 50 0c             	mov    %edx,0xc(%eax)
 80752b6:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 80752bc:	8b 40 08             	mov    0x8(%eax),%eax
 80752bf:	8d 50 02             	lea    0x2(%eax),%edx
 80752c2:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 80752c8:	89 50 08             	mov    %edx,0x8(%eax)
 80752cb:	8b 85 ac fa ff ff    	mov    -0x554(%ebp),%eax
 80752d1:	89 85 c0 fa ff ff    	mov    %eax,-0x540(%ebp)
 80752d7:	8b 85 c0 fa ff ff    	mov    -0x540(%ebp),%eax
 80752dd:	8b 10                	mov    (%eax),%edx
 80752df:	8b 85 c0 fa ff ff    	mov    -0x540(%ebp),%eax
 80752e5:	8b 40 04             	mov    0x4(%eax),%eax
 80752e8:	89 c1                	mov    %eax,%ecx
 80752ea:	d3 ea                	shr    %cl,%edx
 80752ec:	89 d0                	mov    %edx,%eax
 80752ee:	89 c2                	mov    %eax,%edx
 80752f0:	8b 85 b0 fa ff ff    	mov    -0x550(%ebp),%eax
 80752f6:	89 85 c4 fa ff ff    	mov    %eax,-0x53c(%ebp)
 80752fc:	8b 85 c4 fa ff ff    	mov    -0x53c(%ebp),%eax
 8075302:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8075309:	21 d0                	and    %edx,%eax
 807530b:	c1 e0 02             	shl    $0x2,%eax
 807530e:	01 85 9c fa ff ff    	add    %eax,-0x564(%ebp)
 8075314:	8b 85 9c fa ff ff    	mov    -0x564(%ebp),%eax
 807531a:	0f b6 00             	movzbl (%eax),%eax
 807531d:	0f b6 d0             	movzbl %al,%edx
 8075320:	8b 85 a4 fa ff ff    	mov    -0x55c(%ebp),%eax
 8075326:	89 10                	mov    %edx,(%eax)
 8075328:	8b 85 9c fa ff ff    	mov    -0x564(%ebp),%eax
 807532e:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8075332:	0f b7 d0             	movzwl %ax,%edx
 8075335:	8b 85 a8 fa ff ff    	mov    -0x558(%ebp),%eax
 807533b:	89 10                	mov    %edx,(%eax)
 807533d:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 8075343:	89 85 c8 fa ff ff    	mov    %eax,-0x538(%ebp)
 8075349:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807534f:	89 85 cc fa ff ff    	mov    %eax,-0x534(%ebp)
 8075355:	c7 85 d0 fa ff ff 1c 	movl   $0x1c,-0x530(%ebp)
 807535c:	00 00 00 
 807535f:	83 bd c8 fa ff ff 00 	cmpl   $0x0,-0x538(%ebp)
 8075366:	74 07                	je     807536f <ProcessCommands+0x2a88>
 8075368:	b8 01 00 00 00       	mov    $0x1,%eax
 807536d:	eb 2d                	jmp    807539c <ProcessCommands+0x2ab5>
 807536f:	8b 85 cc fa ff ff    	mov    -0x534(%ebp),%eax
 8075375:	89 85 d4 fa ff ff    	mov    %eax,-0x52c(%ebp)
 807537b:	8b 85 d0 fa ff ff    	mov    -0x530(%ebp),%eax
 8075381:	89 85 d8 fa ff ff    	mov    %eax,-0x528(%ebp)
 8075387:	8b 85 d4 fa ff ff    	mov    -0x52c(%ebp),%eax
 807538d:	8b 40 0c             	mov    0xc(%eax),%eax
 8075390:	39 85 d8 fa ff ff    	cmp    %eax,-0x528(%ebp)
 8075396:	0f 96 c0             	setbe  %al
 8075399:	0f b6 c0             	movzbl %al,%eax
 807539c:	85 c0                	test   %eax,%eax
 807539e:	75 1b                	jne    80753bb <ProcessCommands+0x2ad4>
 80753a0:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80753a6:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 80753ac:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 80753b3:	00 00 00 
 80753b6:	e9 9e 33 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 80753bb:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80753c1:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 80753c7:	85 c0                	test   %eax,%eax
 80753c9:	0f 94 c0             	sete   %al
 80753cc:	0f b6 c0             	movzbl %al,%eax
 80753cf:	85 c0                	test   %eax,%eax
 80753d1:	0f 84 d3 01 00 00    	je     80755aa <ProcessCommands+0x2cc3>
 80753d7:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 80753de:	74 21                	je     8075401 <ProcessCommands+0x2b1a>
 80753e0:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80753e6:	89 04 24             	mov    %eax,(%esp)
 80753e9:	e8 a0 6f ff ff       	call   806c38e <SafeDecodeLiteralBlockSwitch>
 80753ee:	85 c0                	test   %eax,%eax
 80753f0:	75 1d                	jne    807540f <ProcessCommands+0x2b28>
 80753f2:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 80753f9:	00 00 00 
 80753fc:	e9 58 33 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8075401:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075407:	89 04 24             	mov    %eax,(%esp)
 807540a:	e8 92 5c ff ff       	call   806b0a1 <DecodeLiteralBlockSwitch>
 807540f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075415:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 807541b:	8b 95 fc f5 ff ff    	mov    -0xa04(%ebp),%edx
 8075421:	89 95 dc fa ff ff    	mov    %edx,-0x524(%ebp)
 8075427:	89 85 e0 fa ff ff    	mov    %eax,-0x520(%ebp)
 807542d:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8075433:	89 85 e4 fa ff ff    	mov    %eax,-0x51c(%ebp)
 8075439:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807543f:	89 85 e8 fa ff ff    	mov    %eax,-0x518(%ebp)
 8075445:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807544b:	89 85 ec fa ff ff    	mov    %eax,-0x514(%ebp)
 8075451:	83 bd dc fa ff ff 00 	cmpl   $0x0,-0x524(%ebp)
 8075458:	0f 85 38 01 00 00    	jne    8075596 <ProcessCommands+0x2caf>
 807545e:	8b 85 e4 fa ff ff    	mov    -0x51c(%ebp),%eax
 8075464:	89 85 f0 fa ff ff    	mov    %eax,-0x510(%ebp)
 807546a:	c7 85 f4 fa ff ff 08 	movl   $0x8,-0x50c(%ebp)
 8075471:	00 00 00 
 8075474:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax
 807547a:	89 85 f8 fa ff ff    	mov    %eax,-0x508(%ebp)
 8075480:	8b 85 f4 fa ff ff    	mov    -0x50c(%ebp),%eax
 8075486:	89 85 fc fa ff ff    	mov    %eax,-0x504(%ebp)
 807548c:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 8075492:	8b 40 04             	mov    0x4(%eax),%eax
 8075495:	83 f8 0f             	cmp    $0xf,%eax
 8075498:	0f 86 86 00 00 00    	jbe    8075524 <ProcessCommands+0x2c3d>
 807549e:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754a4:	8b 00                	mov    (%eax),%eax
 80754a6:	c1 e8 10             	shr    $0x10,%eax
 80754a9:	89 c2                	mov    %eax,%edx
 80754ab:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754b1:	89 10                	mov    %edx,(%eax)
 80754b3:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754b9:	8b 40 04             	mov    0x4(%eax),%eax
 80754bc:	83 f0 10             	xor    $0x10,%eax
 80754bf:	89 c2                	mov    %eax,%edx
 80754c1:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754c7:	89 50 04             	mov    %edx,0x4(%eax)
 80754ca:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754d0:	8b 10                	mov    (%eax),%edx
 80754d2:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754d8:	8b 40 08             	mov    0x8(%eax),%eax
 80754db:	89 85 00 fb ff ff    	mov    %eax,-0x500(%ebp)
 80754e1:	8b 85 00 fb ff ff    	mov    -0x500(%ebp),%eax
 80754e7:	0f b7 00             	movzwl (%eax),%eax
 80754ea:	0f b7 c0             	movzwl %ax,%eax
 80754ed:	c1 e0 10             	shl    $0x10,%eax
 80754f0:	09 c2                	or     %eax,%edx
 80754f2:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 80754f8:	89 10                	mov    %edx,(%eax)
 80754fa:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 8075500:	8b 40 0c             	mov    0xc(%eax),%eax
 8075503:	8d 50 fe             	lea    -0x2(%eax),%edx
 8075506:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807550c:	89 50 0c             	mov    %edx,0xc(%eax)
 807550f:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 8075515:	8b 40 08             	mov    0x8(%eax),%eax
 8075518:	8d 50 02             	lea    0x2(%eax),%edx
 807551b:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 8075521:	89 50 08             	mov    %edx,0x8(%eax)
 8075524:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax
 807552a:	89 85 04 fb ff ff    	mov    %eax,-0x4fc(%ebp)
 8075530:	8b 85 04 fb ff ff    	mov    -0x4fc(%ebp),%eax
 8075536:	8b 10                	mov    (%eax),%edx
 8075538:	8b 85 04 fb ff ff    	mov    -0x4fc(%ebp),%eax
 807553e:	8b 40 04             	mov    0x4(%eax),%eax
 8075541:	89 c1                	mov    %eax,%ecx
 8075543:	d3 ea                	shr    %cl,%edx
 8075545:	89 d0                	mov    %edx,%eax
 8075547:	89 c2                	mov    %eax,%edx
 8075549:	8b 85 f4 fa ff ff    	mov    -0x50c(%ebp),%eax
 807554f:	89 85 08 fb ff ff    	mov    %eax,-0x4f8(%ebp)
 8075555:	8b 85 08 fb ff ff    	mov    -0x4f8(%ebp),%eax
 807555b:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8075562:	21 d0                	and    %edx,%eax
 8075564:	c1 e0 02             	shl    $0x2,%eax
 8075567:	01 85 e0 fa ff ff    	add    %eax,-0x520(%ebp)
 807556d:	8b 85 e0 fa ff ff    	mov    -0x520(%ebp),%eax
 8075573:	0f b6 00             	movzbl (%eax),%eax
 8075576:	0f b6 d0             	movzbl %al,%edx
 8075579:	8b 85 e8 fa ff ff    	mov    -0x518(%ebp),%eax
 807557f:	89 10                	mov    %edx,(%eax)
 8075581:	8b 85 e0 fa ff ff    	mov    -0x520(%ebp),%eax
 8075587:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807558b:	0f b7 d0             	movzwl %ax,%edx
 807558e:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax
 8075594:	89 10                	mov    %edx,(%eax)
 8075596:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807559c:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax
 80755a2:	85 c0                	test   %eax,%eax
 80755a4:	0f 84 e2 fb ff ff    	je     807518c <ProcessCommands+0x28a5>
 80755aa:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 80755b1:	0f 85 f3 03 00 00    	jne    80759aa <ProcessCommands+0x30c3>
 80755b7:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80755bd:	8b 50 5c             	mov    0x5c(%eax),%edx
 80755c0:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 80755c6:	8d 34 02             	lea    (%edx,%eax,1),%esi
 80755c9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80755cf:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 80755d5:	89 85 0c fb ff ff    	mov    %eax,-0x4f4(%ebp)
 80755db:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80755e1:	89 85 10 fb ff ff    	mov    %eax,-0x4f0(%ebp)
 80755e7:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 80755ed:	89 85 14 fb ff ff    	mov    %eax,-0x4ec(%ebp)
 80755f3:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 80755f9:	89 85 18 fb ff ff    	mov    %eax,-0x4e8(%ebp)
 80755ff:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax
 8075605:	8b 00                	mov    (%eax),%eax
 8075607:	89 85 1c fb ff ff    	mov    %eax,-0x4e4(%ebp)
 807560d:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 8075613:	8b 00                	mov    (%eax),%eax
 8075615:	83 f8 08             	cmp    $0x8,%eax
 8075618:	0f 97 c0             	seta   %al
 807561b:	0f b6 c0             	movzbl %al,%eax
 807561e:	85 c0                	test   %eax,%eax
 8075620:	0f 84 c4 01 00 00    	je     80757ea <ProcessCommands+0x2f03>
 8075626:	8b 85 10 fb ff ff    	mov    -0x4f0(%ebp),%eax
 807562c:	89 85 20 fb ff ff    	mov    %eax,-0x4e0(%ebp)
 8075632:	8b 85 20 fb ff ff    	mov    -0x4e0(%ebp),%eax
 8075638:	89 85 24 fb ff ff    	mov    %eax,-0x4dc(%ebp)
 807563e:	c7 85 28 fb ff ff 10 	movl   $0x10,-0x4d8(%ebp)
 8075645:	00 00 00 
 8075648:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807564e:	8b 40 04             	mov    0x4(%eax),%eax
 8075651:	83 f8 0f             	cmp    $0xf,%eax
 8075654:	0f 86 86 00 00 00    	jbe    80756e0 <ProcessCommands+0x2df9>
 807565a:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 8075660:	8b 00                	mov    (%eax),%eax
 8075662:	c1 e8 10             	shr    $0x10,%eax
 8075665:	89 c2                	mov    %eax,%edx
 8075667:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807566d:	89 10                	mov    %edx,(%eax)
 807566f:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 8075675:	8b 40 04             	mov    0x4(%eax),%eax
 8075678:	83 f0 10             	xor    $0x10,%eax
 807567b:	89 c2                	mov    %eax,%edx
 807567d:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 8075683:	89 50 04             	mov    %edx,0x4(%eax)
 8075686:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807568c:	8b 10                	mov    (%eax),%edx
 807568e:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 8075694:	8b 40 08             	mov    0x8(%eax),%eax
 8075697:	89 85 2c fb ff ff    	mov    %eax,-0x4d4(%ebp)
 807569d:	8b 85 2c fb ff ff    	mov    -0x4d4(%ebp),%eax
 80756a3:	0f b7 00             	movzwl (%eax),%eax
 80756a6:	0f b7 c0             	movzwl %ax,%eax
 80756a9:	c1 e0 10             	shl    $0x10,%eax
 80756ac:	09 c2                	or     %eax,%edx
 80756ae:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 80756b4:	89 10                	mov    %edx,(%eax)
 80756b6:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 80756bc:	8b 40 0c             	mov    0xc(%eax),%eax
 80756bf:	8d 50 fe             	lea    -0x2(%eax),%edx
 80756c2:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 80756c8:	89 50 0c             	mov    %edx,0xc(%eax)
 80756cb:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 80756d1:	8b 40 08             	mov    0x8(%eax),%eax
 80756d4:	8d 50 02             	lea    0x2(%eax),%edx
 80756d7:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 80756dd:	89 50 08             	mov    %edx,0x8(%eax)
 80756e0:	8b 85 20 fb ff ff    	mov    -0x4e0(%ebp),%eax
 80756e6:	89 85 30 fb ff ff    	mov    %eax,-0x4d0(%ebp)
 80756ec:	8b 85 30 fb ff ff    	mov    -0x4d0(%ebp),%eax
 80756f2:	8b 10                	mov    (%eax),%edx
 80756f4:	8b 85 30 fb ff ff    	mov    -0x4d0(%ebp),%eax
 80756fa:	8b 40 04             	mov    0x4(%eax),%eax
 80756fd:	89 c1                	mov    %eax,%ecx
 80756ff:	d3 ea                	shr    %cl,%edx
 8075701:	89 d0                	mov    %edx,%eax
 8075703:	89 85 34 fb ff ff    	mov    %eax,-0x4cc(%ebp)
 8075709:	8b 85 34 fb ff ff    	mov    -0x4cc(%ebp),%eax
 807570f:	0f b6 d0             	movzbl %al,%edx
 8075712:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax
 8075718:	8b 00                	mov    (%eax),%eax
 807571a:	01 d0                	add    %edx,%eax
 807571c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8075723:	8b 85 0c fb ff ff    	mov    -0x4f4(%ebp),%eax
 8075729:	01 d0                	add    %edx,%eax
 807572b:	89 85 38 fb ff ff    	mov    %eax,-0x4c8(%ebp)
 8075731:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 8075737:	8b 00                	mov    (%eax),%eax
 8075739:	83 e8 08             	sub    $0x8,%eax
 807573c:	89 85 3c fb ff ff    	mov    %eax,-0x4c4(%ebp)
 8075742:	8b 85 3c fb ff ff    	mov    -0x4c4(%ebp),%eax
 8075748:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807574f:	89 85 40 fb ff ff    	mov    %eax,-0x4c0(%ebp)
 8075755:	8b 85 10 fb ff ff    	mov    -0x4f0(%ebp),%eax
 807575b:	89 85 44 fb ff ff    	mov    %eax,-0x4bc(%ebp)
 8075761:	c7 85 48 fb ff ff 08 	movl   $0x8,-0x4b8(%ebp)
 8075768:	00 00 00 
 807576b:	8b 85 44 fb ff ff    	mov    -0x4bc(%ebp),%eax
 8075771:	8b 50 04             	mov    0x4(%eax),%edx
 8075774:	8b 85 48 fb ff ff    	mov    -0x4b8(%ebp),%eax
 807577a:	01 c2                	add    %eax,%edx
 807577c:	8b 85 44 fb ff ff    	mov    -0x4bc(%ebp),%eax
 8075782:	89 50 04             	mov    %edx,0x4(%eax)
 8075785:	8b 85 34 fb ff ff    	mov    -0x4cc(%ebp),%eax
 807578b:	c1 e8 08             	shr    $0x8,%eax
 807578e:	23 85 40 fb ff ff    	and    -0x4c0(%ebp),%eax
 8075794:	c1 e0 02             	shl    $0x2,%eax
 8075797:	01 85 38 fb ff ff    	add    %eax,-0x4c8(%ebp)
 807579d:	8b 85 38 fb ff ff    	mov    -0x4c8(%ebp),%eax
 80757a3:	0f b6 00             	movzbl (%eax),%eax
 80757a6:	0f b6 c0             	movzbl %al,%eax
 80757a9:	8b 95 10 fb ff ff    	mov    -0x4f0(%ebp),%edx
 80757af:	89 95 4c fb ff ff    	mov    %edx,-0x4b4(%ebp)
 80757b5:	89 85 50 fb ff ff    	mov    %eax,-0x4b0(%ebp)
 80757bb:	8b 85 4c fb ff ff    	mov    -0x4b4(%ebp),%eax
 80757c1:	8b 50 04             	mov    0x4(%eax),%edx
 80757c4:	8b 85 50 fb ff ff    	mov    -0x4b0(%ebp),%eax
 80757ca:	01 c2                	add    %eax,%edx
 80757cc:	8b 85 4c fb ff ff    	mov    -0x4b4(%ebp),%eax
 80757d2:	89 50 04             	mov    %edx,0x4(%eax)
 80757d5:	8b 85 38 fb ff ff    	mov    -0x4c8(%ebp),%eax
 80757db:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80757df:	0f b7 c0             	movzwl %ax,%eax
 80757e2:	89 85 1c fb ff ff    	mov    %eax,-0x4e4(%ebp)
 80757e8:	eb 34                	jmp    807581e <ProcessCommands+0x2f37>
 80757ea:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 80757f0:	8b 00                	mov    (%eax),%eax
 80757f2:	8b 95 10 fb ff ff    	mov    -0x4f0(%ebp),%edx
 80757f8:	89 95 54 fb ff ff    	mov    %edx,-0x4ac(%ebp)
 80757fe:	89 85 58 fb ff ff    	mov    %eax,-0x4a8(%ebp)
 8075804:	8b 85 54 fb ff ff    	mov    -0x4ac(%ebp),%eax
 807580a:	8b 50 04             	mov    0x4(%eax),%edx
 807580d:	8b 85 58 fb ff ff    	mov    -0x4a8(%ebp),%eax
 8075813:	01 c2                	add    %eax,%edx
 8075815:	8b 85 54 fb ff ff    	mov    -0x4ac(%ebp),%eax
 807581b:	89 50 04             	mov    %edx,0x4(%eax)
 807581e:	c7 85 5c fb ff ff 00 	movl   $0x0,-0x4a4(%ebp)
 8075825:	00 00 00 
 8075828:	8b 85 0c fb ff ff    	mov    -0x4f4(%ebp),%eax
 807582e:	89 85 60 fb ff ff    	mov    %eax,-0x4a0(%ebp)
 8075834:	8b 85 10 fb ff ff    	mov    -0x4f0(%ebp),%eax
 807583a:	89 85 64 fb ff ff    	mov    %eax,-0x49c(%ebp)
 8075840:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 8075846:	89 85 68 fb ff ff    	mov    %eax,-0x498(%ebp)
 807584c:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax
 8075852:	89 85 6c fb ff ff    	mov    %eax,-0x494(%ebp)
 8075858:	83 bd 5c fb ff ff 00 	cmpl   $0x0,-0x4a4(%ebp)
 807585f:	0f 85 38 01 00 00    	jne    807599d <ProcessCommands+0x30b6>
 8075865:	8b 85 64 fb ff ff    	mov    -0x49c(%ebp),%eax
 807586b:	89 85 70 fb ff ff    	mov    %eax,-0x490(%ebp)
 8075871:	c7 85 74 fb ff ff 08 	movl   $0x8,-0x48c(%ebp)
 8075878:	00 00 00 
 807587b:	8b 85 70 fb ff ff    	mov    -0x490(%ebp),%eax
 8075881:	89 85 78 fb ff ff    	mov    %eax,-0x488(%ebp)
 8075887:	8b 85 74 fb ff ff    	mov    -0x48c(%ebp),%eax
 807588d:	89 85 7c fb ff ff    	mov    %eax,-0x484(%ebp)
 8075893:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 8075899:	8b 40 04             	mov    0x4(%eax),%eax
 807589c:	83 f8 0f             	cmp    $0xf,%eax
 807589f:	0f 86 86 00 00 00    	jbe    807592b <ProcessCommands+0x3044>
 80758a5:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758ab:	8b 00                	mov    (%eax),%eax
 80758ad:	c1 e8 10             	shr    $0x10,%eax
 80758b0:	89 c2                	mov    %eax,%edx
 80758b2:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758b8:	89 10                	mov    %edx,(%eax)
 80758ba:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758c0:	8b 40 04             	mov    0x4(%eax),%eax
 80758c3:	83 f0 10             	xor    $0x10,%eax
 80758c6:	89 c2                	mov    %eax,%edx
 80758c8:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758ce:	89 50 04             	mov    %edx,0x4(%eax)
 80758d1:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758d7:	8b 10                	mov    (%eax),%edx
 80758d9:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758df:	8b 40 08             	mov    0x8(%eax),%eax
 80758e2:	89 85 80 fb ff ff    	mov    %eax,-0x480(%ebp)
 80758e8:	8b 85 80 fb ff ff    	mov    -0x480(%ebp),%eax
 80758ee:	0f b7 00             	movzwl (%eax),%eax
 80758f1:	0f b7 c0             	movzwl %ax,%eax
 80758f4:	c1 e0 10             	shl    $0x10,%eax
 80758f7:	09 c2                	or     %eax,%edx
 80758f9:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 80758ff:	89 10                	mov    %edx,(%eax)
 8075901:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 8075907:	8b 40 0c             	mov    0xc(%eax),%eax
 807590a:	8d 50 fe             	lea    -0x2(%eax),%edx
 807590d:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 8075913:	89 50 0c             	mov    %edx,0xc(%eax)
 8075916:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807591c:	8b 40 08             	mov    0x8(%eax),%eax
 807591f:	8d 50 02             	lea    0x2(%eax),%edx
 8075922:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 8075928:	89 50 08             	mov    %edx,0x8(%eax)
 807592b:	8b 85 70 fb ff ff    	mov    -0x490(%ebp),%eax
 8075931:	89 85 84 fb ff ff    	mov    %eax,-0x47c(%ebp)
 8075937:	8b 85 84 fb ff ff    	mov    -0x47c(%ebp),%eax
 807593d:	8b 10                	mov    (%eax),%edx
 807593f:	8b 85 84 fb ff ff    	mov    -0x47c(%ebp),%eax
 8075945:	8b 40 04             	mov    0x4(%eax),%eax
 8075948:	89 c1                	mov    %eax,%ecx
 807594a:	d3 ea                	shr    %cl,%edx
 807594c:	89 d0                	mov    %edx,%eax
 807594e:	89 c2                	mov    %eax,%edx
 8075950:	8b 85 74 fb ff ff    	mov    -0x48c(%ebp),%eax
 8075956:	89 85 88 fb ff ff    	mov    %eax,-0x478(%ebp)
 807595c:	8b 85 88 fb ff ff    	mov    -0x478(%ebp),%eax
 8075962:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8075969:	21 d0                	and    %edx,%eax
 807596b:	c1 e0 02             	shl    $0x2,%eax
 807596e:	01 85 60 fb ff ff    	add    %eax,-0x4a0(%ebp)
 8075974:	8b 85 60 fb ff ff    	mov    -0x4a0(%ebp),%eax
 807597a:	0f b6 00             	movzbl (%eax),%eax
 807597d:	0f b6 d0             	movzbl %al,%edx
 8075980:	8b 85 68 fb ff ff    	mov    -0x498(%ebp),%eax
 8075986:	89 10                	mov    %edx,(%eax)
 8075988:	8b 85 60 fb ff ff    	mov    -0x4a0(%ebp),%eax
 807598e:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8075992:	0f b7 d0             	movzwl %ax,%edx
 8075995:	8b 85 6c fb ff ff    	mov    -0x494(%ebp),%eax
 807599b:	89 10                	mov    %edx,(%eax)
 807599d:	8b 85 1c fb ff ff    	mov    -0x4e4(%ebp),%eax
 80759a3:	88 06                	mov    %al,(%esi)
 80759a5:	e9 e2 02 00 00       	jmp    8075c8c <ProcessCommands+0x33a5>
 80759aa:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80759b0:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 80759b6:	89 85 8c fb ff ff    	mov    %eax,-0x474(%ebp)
 80759bc:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80759c2:	89 85 90 fb ff ff    	mov    %eax,-0x470(%ebp)
 80759c8:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80759cb:	89 85 94 fb ff ff    	mov    %eax,-0x46c(%ebp)
 80759d1:	8b 85 90 fb ff ff    	mov    -0x470(%ebp),%eax
 80759d7:	89 85 98 fb ff ff    	mov    %eax,-0x468(%ebp)
 80759dd:	c7 85 9c fb ff ff 0f 	movl   $0xf,-0x464(%ebp)
 80759e4:	00 00 00 
 80759e7:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80759ea:	89 85 a0 fb ff ff    	mov    %eax,-0x460(%ebp)
 80759f0:	e9 a8 00 00 00       	jmp    8075a9d <ProcessCommands+0x31b6>
 80759f5:	8b 85 98 fb ff ff    	mov    -0x468(%ebp),%eax
 80759fb:	89 85 a4 fb ff ff    	mov    %eax,-0x45c(%ebp)
 8075a01:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a07:	8b 40 0c             	mov    0xc(%eax),%eax
 8075a0a:	85 c0                	test   %eax,%eax
 8075a0c:	75 07                	jne    8075a15 <ProcessCommands+0x312e>
 8075a0e:	b8 00 00 00 00       	mov    $0x0,%eax
 8075a13:	eb 7d                	jmp    8075a92 <ProcessCommands+0x31ab>
 8075a15:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a1b:	8b 00                	mov    (%eax),%eax
 8075a1d:	c1 e8 08             	shr    $0x8,%eax
 8075a20:	89 c2                	mov    %eax,%edx
 8075a22:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a28:	89 10                	mov    %edx,(%eax)
 8075a2a:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a30:	8b 10                	mov    (%eax),%edx
 8075a32:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a38:	8b 40 08             	mov    0x8(%eax),%eax
 8075a3b:	0f b6 00             	movzbl (%eax),%eax
 8075a3e:	0f b6 c0             	movzbl %al,%eax
 8075a41:	c1 e0 18             	shl    $0x18,%eax
 8075a44:	09 c2                	or     %eax,%edx
 8075a46:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a4c:	89 10                	mov    %edx,(%eax)
 8075a4e:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a54:	8b 40 04             	mov    0x4(%eax),%eax
 8075a57:	8d 50 f8             	lea    -0x8(%eax),%edx
 8075a5a:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a60:	89 50 04             	mov    %edx,0x4(%eax)
 8075a63:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a69:	8b 40 0c             	mov    0xc(%eax),%eax
 8075a6c:	8d 50 ff             	lea    -0x1(%eax),%edx
 8075a6f:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a75:	89 50 0c             	mov    %edx,0xc(%eax)
 8075a78:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a7e:	8b 40 08             	mov    0x8(%eax),%eax
 8075a81:	8d 50 01             	lea    0x1(%eax),%edx
 8075a84:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 8075a8a:	89 50 08             	mov    %edx,0x8(%eax)
 8075a8d:	b8 01 00 00 00       	mov    $0x1,%eax
 8075a92:	85 c0                	test   %eax,%eax
 8075a94:	75 07                	jne    8075a9d <ProcessCommands+0x31b6>
 8075a96:	b8 00 00 00 00       	mov    $0x0,%eax
 8075a9b:	eb 77                	jmp    8075b14 <ProcessCommands+0x322d>
 8075a9d:	8b 85 98 fb ff ff    	mov    -0x468(%ebp),%eax
 8075aa3:	89 85 a8 fb ff ff    	mov    %eax,-0x458(%ebp)
 8075aa9:	8b 85 a8 fb ff ff    	mov    -0x458(%ebp),%eax
 8075aaf:	8b 40 04             	mov    0x4(%eax),%eax
 8075ab2:	ba 20 00 00 00       	mov    $0x20,%edx
 8075ab7:	29 c2                	sub    %eax,%edx
 8075ab9:	89 d0                	mov    %edx,%eax
 8075abb:	39 85 9c fb ff ff    	cmp    %eax,-0x464(%ebp)
 8075ac1:	0f 87 2e ff ff ff    	ja     80759f5 <ProcessCommands+0x310e>
 8075ac7:	8b 85 98 fb ff ff    	mov    -0x468(%ebp),%eax
 8075acd:	89 85 ac fb ff ff    	mov    %eax,-0x454(%ebp)
 8075ad3:	8b 85 ac fb ff ff    	mov    -0x454(%ebp),%eax
 8075ad9:	8b 10                	mov    (%eax),%edx
 8075adb:	8b 85 ac fb ff ff    	mov    -0x454(%ebp),%eax
 8075ae1:	8b 40 04             	mov    0x4(%eax),%eax
 8075ae4:	89 c1                	mov    %eax,%ecx
 8075ae6:	d3 ea                	shr    %cl,%edx
 8075ae8:	89 d0                	mov    %edx,%eax
 8075aea:	89 c2                	mov    %eax,%edx
 8075aec:	8b 85 9c fb ff ff    	mov    -0x464(%ebp),%eax
 8075af2:	89 85 b0 fb ff ff    	mov    %eax,-0x450(%ebp)
 8075af8:	8b 85 b0 fb ff ff    	mov    -0x450(%ebp),%eax
 8075afe:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8075b05:	21 c2                	and    %eax,%edx
 8075b07:	8b 85 a0 fb ff ff    	mov    -0x460(%ebp),%eax
 8075b0d:	89 10                	mov    %edx,(%eax)
 8075b0f:	b8 01 00 00 00       	mov    $0x1,%eax
 8075b14:	85 c0                	test   %eax,%eax
 8075b16:	0f 95 c0             	setne  %al
 8075b19:	0f b6 c0             	movzbl %al,%eax
 8075b1c:	85 c0                	test   %eax,%eax
 8075b1e:	0f 84 1d 01 00 00    	je     8075c41 <ProcessCommands+0x335a>
 8075b24:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8075b27:	89 85 b4 fb ff ff    	mov    %eax,-0x44c(%ebp)
 8075b2d:	8b 85 8c fb ff ff    	mov    -0x474(%ebp),%eax
 8075b33:	89 85 b8 fb ff ff    	mov    %eax,-0x448(%ebp)
 8075b39:	8b 85 90 fb ff ff    	mov    -0x470(%ebp),%eax
 8075b3f:	89 85 bc fb ff ff    	mov    %eax,-0x444(%ebp)
 8075b45:	8b 85 b4 fb ff ff    	mov    -0x44c(%ebp),%eax
 8075b4b:	0f b6 c0             	movzbl %al,%eax
 8075b4e:	c1 e0 02             	shl    $0x2,%eax
 8075b51:	01 85 b8 fb ff ff    	add    %eax,-0x448(%ebp)
 8075b57:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 8075b5d:	0f b6 00             	movzbl (%eax),%eax
 8075b60:	3c 08                	cmp    $0x8,%al
 8075b62:	0f 86 83 00 00 00    	jbe    8075beb <ProcessCommands+0x3304>
 8075b68:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 8075b6e:	0f b6 00             	movzbl (%eax),%eax
 8075b71:	0f b6 c0             	movzbl %al,%eax
 8075b74:	83 e8 08             	sub    $0x8,%eax
 8075b77:	89 85 c0 fb ff ff    	mov    %eax,-0x440(%ebp)
 8075b7d:	8b 85 bc fb ff ff    	mov    -0x444(%ebp),%eax
 8075b83:	89 85 c4 fb ff ff    	mov    %eax,-0x43c(%ebp)
 8075b89:	c7 85 c8 fb ff ff 08 	movl   $0x8,-0x438(%ebp)
 8075b90:	00 00 00 
 8075b93:	8b 85 c4 fb ff ff    	mov    -0x43c(%ebp),%eax
 8075b99:	8b 50 04             	mov    0x4(%eax),%edx
 8075b9c:	8b 85 c8 fb ff ff    	mov    -0x438(%ebp),%eax
 8075ba2:	01 c2                	add    %eax,%edx
 8075ba4:	8b 85 c4 fb ff ff    	mov    -0x43c(%ebp),%eax
 8075baa:	89 50 04             	mov    %edx,0x4(%eax)
 8075bad:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 8075bb3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8075bb7:	0f b7 d0             	movzwl %ax,%edx
 8075bba:	8b 85 b4 fb ff ff    	mov    -0x44c(%ebp),%eax
 8075bc0:	c1 e8 08             	shr    $0x8,%eax
 8075bc3:	89 c1                	mov    %eax,%ecx
 8075bc5:	8b 85 c0 fb ff ff    	mov    -0x440(%ebp),%eax
 8075bcb:	89 85 cc fb ff ff    	mov    %eax,-0x434(%ebp)
 8075bd1:	8b 85 cc fb ff ff    	mov    -0x434(%ebp),%eax
 8075bd7:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8075bde:	21 c8                	and    %ecx,%eax
 8075be0:	01 d0                	add    %edx,%eax
 8075be2:	c1 e0 02             	shl    $0x2,%eax
 8075be5:	01 85 b8 fb ff ff    	add    %eax,-0x448(%ebp)
 8075beb:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 8075bf1:	0f b6 00             	movzbl (%eax),%eax
 8075bf4:	0f b6 c0             	movzbl %al,%eax
 8075bf7:	8b 95 bc fb ff ff    	mov    -0x444(%ebp),%edx
 8075bfd:	89 95 d0 fb ff ff    	mov    %edx,-0x430(%ebp)
 8075c03:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 8075c09:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 8075c0f:	8b 50 04             	mov    0x4(%eax),%edx
 8075c12:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 8075c18:	01 c2                	add    %eax,%edx
 8075c1a:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 8075c20:	89 50 04             	mov    %edx,0x4(%eax)
 8075c23:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 8075c29:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8075c2d:	0f b7 c0             	movzwl %ax,%eax
 8075c30:	89 c2                	mov    %eax,%edx
 8075c32:	8b 85 94 fb ff ff    	mov    -0x46c(%ebp),%eax
 8075c38:	89 10                	mov    %edx,(%eax)
 8075c3a:	b8 01 00 00 00       	mov    $0x1,%eax
 8075c3f:	eb 22                	jmp    8075c63 <ProcessCommands+0x337c>
 8075c41:	8b 85 94 fb ff ff    	mov    -0x46c(%ebp),%eax
 8075c47:	89 44 24 08          	mov    %eax,0x8(%esp)
 8075c4b:	8b 85 90 fb ff ff    	mov    -0x470(%ebp),%eax
 8075c51:	89 44 24 04          	mov    %eax,0x4(%esp)
 8075c55:	8b 85 8c fb ff ff    	mov    -0x474(%ebp),%eax
 8075c5b:	89 04 24             	mov    %eax,(%esp)
 8075c5e:	e8 69 2d ff ff       	call   80689cc <SafeDecodeSymbol>
 8075c63:	85 c0                	test   %eax,%eax
 8075c65:	75 0f                	jne    8075c76 <ProcessCommands+0x338f>
 8075c67:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8075c6e:	00 00 00 
 8075c71:	e9 e3 2a 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8075c76:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075c7c:	8b 50 5c             	mov    0x5c(%eax),%edx
 8075c7f:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 8075c85:	01 c2                	add    %eax,%edx
 8075c87:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8075c8a:	88 02                	mov    %al,(%edx)
 8075c8c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075c92:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 8075c98:	8d 50 ff             	lea    -0x1(%eax),%edx
 8075c9b:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075ca1:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)
 8075ca7:	83 85 04 f6 ff ff 01 	addl   $0x1,-0x9fc(%ebp)
 8075cae:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075cb4:	8b 40 3c             	mov    0x3c(%eax),%eax
 8075cb7:	39 85 04 f6 ff ff    	cmp    %eax,-0x9fc(%ebp)
 8075cbd:	0f 94 c0             	sete   %al
 8075cc0:	0f b6 c0             	movzbl %al,%eax
 8075cc3:	85 c0                	test   %eax,%eax
 8075cc5:	74 20                	je     8075ce7 <ProcessCommands+0x3400>
 8075cc7:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075ccd:	c7 00 0d 00 00 00    	movl   $0xd,(%eax)
 8075cd3:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8075cd9:	83 e8 01             	sub    $0x1,%eax
 8075cdc:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 8075ce2:	e9 72 2a 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8075ce7:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8075ced:	83 e8 01             	sub    $0x1,%eax
 8075cf0:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 8075cf6:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8075cfc:	85 c0                	test   %eax,%eax
 8075cfe:	0f 85 39 f6 ff ff    	jne    807533d <ProcessCommands+0x2a56>
 8075d04:	e9 1c 07 00 00       	jmp    8076425 <ProcessCommands+0x3b3e>
 8075d09:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075d0f:	8b 50 5c             	mov    0x5c(%eax),%edx
 8075d12:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 8075d18:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8075d1b:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075d21:	8b 40 40             	mov    0x40(%eax),%eax
 8075d24:	21 c8                	and    %ecx,%eax
 8075d26:	01 d0                	add    %edx,%eax
 8075d28:	0f b6 00             	movzbl (%eax),%eax
 8075d2b:	88 85 e5 f5 ff ff    	mov    %al,-0xa1b(%ebp)
 8075d31:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075d37:	8b 50 5c             	mov    0x5c(%eax),%edx
 8075d3a:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 8075d40:	8d 48 fe             	lea    -0x2(%eax),%ecx
 8075d43:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075d49:	8b 40 40             	mov    0x40(%eax),%eax
 8075d4c:	21 c8                	and    %ecx,%eax
 8075d4e:	01 d0                	add    %edx,%eax
 8075d50:	0f b6 00             	movzbl (%eax),%eax
 8075d53:	88 85 e6 f5 ff ff    	mov    %al,-0xa1a(%ebp)
 8075d59:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 8075d5f:	89 85 d8 fb ff ff    	mov    %eax,-0x428(%ebp)
 8075d65:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8075d6b:	89 85 dc fb ff ff    	mov    %eax,-0x424(%ebp)
 8075d71:	c7 85 e0 fb ff ff 1c 	movl   $0x1c,-0x420(%ebp)
 8075d78:	00 00 00 
 8075d7b:	83 bd d8 fb ff ff 00 	cmpl   $0x0,-0x428(%ebp)
 8075d82:	74 07                	je     8075d8b <ProcessCommands+0x34a4>
 8075d84:	b8 01 00 00 00       	mov    $0x1,%eax
 8075d89:	eb 2d                	jmp    8075db8 <ProcessCommands+0x34d1>
 8075d8b:	8b 85 dc fb ff ff    	mov    -0x424(%ebp),%eax
 8075d91:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%ebp)
 8075d97:	8b 85 e0 fb ff ff    	mov    -0x420(%ebp),%eax
 8075d9d:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%ebp)
 8075da3:	8b 85 e4 fb ff ff    	mov    -0x41c(%ebp),%eax
 8075da9:	8b 40 0c             	mov    0xc(%eax),%eax
 8075dac:	39 85 e8 fb ff ff    	cmp    %eax,-0x418(%ebp)
 8075db2:	0f 96 c0             	setbe  %al
 8075db5:	0f b6 c0             	movzbl %al,%eax
 8075db8:	85 c0                	test   %eax,%eax
 8075dba:	75 1b                	jne    8075dd7 <ProcessCommands+0x34f0>
 8075dbc:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075dc2:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 8075dc8:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8075dcf:	00 00 00 
 8075dd2:	e9 82 29 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8075dd7:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075ddd:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 8075de3:	85 c0                	test   %eax,%eax
 8075de5:	0f 94 c0             	sete   %al
 8075de8:	0f b6 c0             	movzbl %al,%eax
 8075deb:	85 c0                	test   %eax,%eax
 8075ded:	74 4c                	je     8075e3b <ProcessCommands+0x3554>
 8075def:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8075df6:	74 21                	je     8075e19 <ProcessCommands+0x3532>
 8075df8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075dfe:	89 04 24             	mov    %eax,(%esp)
 8075e01:	e8 88 65 ff ff       	call   806c38e <SafeDecodeLiteralBlockSwitch>
 8075e06:	85 c0                	test   %eax,%eax
 8075e08:	75 1d                	jne    8075e27 <ProcessCommands+0x3540>
 8075e0a:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8075e11:	00 00 00 
 8075e14:	e9 40 29 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8075e19:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075e1f:	89 04 24             	mov    %eax,(%esp)
 8075e22:	e8 7a 52 ff ff       	call   806b0a1 <DecodeLiteralBlockSwitch>
 8075e27:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075e2d:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax
 8075e33:	85 c0                	test   %eax,%eax
 8075e35:	0f 85 52 f3 ff ff    	jne    807518d <ProcessCommands+0x28a6>
 8075e3b:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075e41:	8b 50 68             	mov    0x68(%eax),%edx
 8075e44:	0f b6 85 e5 f5 ff ff 	movzbl -0xa1b(%ebp),%eax
 8075e4b:	01 d0                	add    %edx,%eax
 8075e4d:	0f b6 10             	movzbl (%eax),%edx
 8075e50:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075e56:	8b 40 68             	mov    0x68(%eax),%eax
 8075e59:	0f b6 8d e6 f5 ff ff 	movzbl -0xa1a(%ebp),%ecx
 8075e60:	81 c1 00 01 00 00    	add    $0x100,%ecx
 8075e66:	01 c8                	add    %ecx,%eax
 8075e68:	0f b6 00             	movzbl (%eax),%eax
 8075e6b:	09 d0                	or     %edx,%eax
 8075e6d:	88 85 e7 f5 ff ff    	mov    %al,-0xa19(%ebp)
 8075e73:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075e79:	8b 50 74             	mov    0x74(%eax),%edx
 8075e7c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8075e82:	8b 48 6c             	mov    0x6c(%eax),%ecx
 8075e85:	0f b6 85 e7 f5 ff ff 	movzbl -0xa19(%ebp),%eax
 8075e8c:	01 c8                	add    %ecx,%eax
 8075e8e:	0f b6 00             	movzbl (%eax),%eax
 8075e91:	0f b6 c0             	movzbl %al,%eax
 8075e94:	c1 e0 02             	shl    $0x2,%eax
 8075e97:	01 d0                	add    %edx,%eax
 8075e99:	8b 00                	mov    (%eax),%eax
 8075e9b:	89 85 ec fb ff ff    	mov    %eax,-0x414(%ebp)
 8075ea1:	0f b6 85 e5 f5 ff ff 	movzbl -0xa1b(%ebp),%eax
 8075ea8:	88 85 e6 f5 ff ff    	mov    %al,-0xa1a(%ebp)
 8075eae:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8075eb5:	0f 85 09 02 00 00    	jne    80760c4 <ProcessCommands+0x37dd>
 8075ebb:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
 8075ec1:	89 85 f0 fb ff ff    	mov    %eax,-0x410(%ebp)
 8075ec7:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8075ecd:	89 85 f4 fb ff ff    	mov    %eax,-0x40c(%ebp)
 8075ed3:	8b 85 f4 fb ff ff    	mov    -0x40c(%ebp),%eax
 8075ed9:	89 85 f8 fb ff ff    	mov    %eax,-0x408(%ebp)
 8075edf:	8b 85 f8 fb ff ff    	mov    -0x408(%ebp),%eax
 8075ee5:	89 85 fc fb ff ff    	mov    %eax,-0x404(%ebp)
 8075eeb:	c7 85 00 fc ff ff 10 	movl   $0x10,-0x400(%ebp)
 8075ef2:	00 00 00 
 8075ef5:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075efb:	8b 40 04             	mov    0x4(%eax),%eax
 8075efe:	83 f8 0f             	cmp    $0xf,%eax
 8075f01:	0f 86 86 00 00 00    	jbe    8075f8d <ProcessCommands+0x36a6>
 8075f07:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f0d:	8b 00                	mov    (%eax),%eax
 8075f0f:	c1 e8 10             	shr    $0x10,%eax
 8075f12:	89 c2                	mov    %eax,%edx
 8075f14:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f1a:	89 10                	mov    %edx,(%eax)
 8075f1c:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f22:	8b 40 04             	mov    0x4(%eax),%eax
 8075f25:	83 f0 10             	xor    $0x10,%eax
 8075f28:	89 c2                	mov    %eax,%edx
 8075f2a:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f30:	89 50 04             	mov    %edx,0x4(%eax)
 8075f33:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f39:	8b 10                	mov    (%eax),%edx
 8075f3b:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f41:	8b 40 08             	mov    0x8(%eax),%eax
 8075f44:	89 85 04 fc ff ff    	mov    %eax,-0x3fc(%ebp)
 8075f4a:	8b 85 04 fc ff ff    	mov    -0x3fc(%ebp),%eax
 8075f50:	0f b7 00             	movzwl (%eax),%eax
 8075f53:	0f b7 c0             	movzwl %ax,%eax
 8075f56:	c1 e0 10             	shl    $0x10,%eax
 8075f59:	09 c2                	or     %eax,%edx
 8075f5b:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f61:	89 10                	mov    %edx,(%eax)
 8075f63:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f69:	8b 40 0c             	mov    0xc(%eax),%eax
 8075f6c:	8d 50 fe             	lea    -0x2(%eax),%edx
 8075f6f:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f75:	89 50 0c             	mov    %edx,0xc(%eax)
 8075f78:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f7e:	8b 40 08             	mov    0x8(%eax),%eax
 8075f81:	8d 50 02             	lea    0x2(%eax),%edx
 8075f84:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 8075f8a:	89 50 08             	mov    %edx,0x8(%eax)
 8075f8d:	8b 85 f8 fb ff ff    	mov    -0x408(%ebp),%eax
 8075f93:	89 85 08 fc ff ff    	mov    %eax,-0x3f8(%ebp)
 8075f99:	8b 85 08 fc ff ff    	mov    -0x3f8(%ebp),%eax
 8075f9f:	8b 10                	mov    (%eax),%edx
 8075fa1:	8b 85 08 fc ff ff    	mov    -0x3f8(%ebp),%eax
 8075fa7:	8b 40 04             	mov    0x4(%eax),%eax
 8075faa:	89 c1                	mov    %eax,%ecx
 8075fac:	d3 ea                	shr    %cl,%edx
 8075fae:	89 d0                	mov    %edx,%eax
 8075fb0:	89 85 0c fc ff ff    	mov    %eax,-0x3f4(%ebp)
 8075fb6:	8b 85 f0 fb ff ff    	mov    -0x410(%ebp),%eax
 8075fbc:	89 85 10 fc ff ff    	mov    %eax,-0x3f0(%ebp)
 8075fc2:	8b 85 f4 fb ff ff    	mov    -0x40c(%ebp),%eax
 8075fc8:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%ebp)
 8075fce:	8b 85 0c fc ff ff    	mov    -0x3f4(%ebp),%eax
 8075fd4:	0f b6 c0             	movzbl %al,%eax
 8075fd7:	c1 e0 02             	shl    $0x2,%eax
 8075fda:	01 85 10 fc ff ff    	add    %eax,-0x3f0(%ebp)
 8075fe0:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 8075fe6:	0f b6 00             	movzbl (%eax),%eax
 8075fe9:	3c 08                	cmp    $0x8,%al
 8075feb:	0f 86 83 00 00 00    	jbe    8076074 <ProcessCommands+0x378d>
 8075ff1:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 8075ff7:	0f b6 00             	movzbl (%eax),%eax
 8075ffa:	0f b6 c0             	movzbl %al,%eax
 8075ffd:	83 e8 08             	sub    $0x8,%eax
 8076000:	89 85 18 fc ff ff    	mov    %eax,-0x3e8(%ebp)
 8076006:	8b 85 14 fc ff ff    	mov    -0x3ec(%ebp),%eax
 807600c:	89 85 1c fc ff ff    	mov    %eax,-0x3e4(%ebp)
 8076012:	c7 85 20 fc ff ff 08 	movl   $0x8,-0x3e0(%ebp)
 8076019:	00 00 00 
 807601c:	8b 85 1c fc ff ff    	mov    -0x3e4(%ebp),%eax
 8076022:	8b 50 04             	mov    0x4(%eax),%edx
 8076025:	8b 85 20 fc ff ff    	mov    -0x3e0(%ebp),%eax
 807602b:	01 c2                	add    %eax,%edx
 807602d:	8b 85 1c fc ff ff    	mov    -0x3e4(%ebp),%eax
 8076033:	89 50 04             	mov    %edx,0x4(%eax)
 8076036:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807603c:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8076040:	0f b7 d0             	movzwl %ax,%edx
 8076043:	8b 85 0c fc ff ff    	mov    -0x3f4(%ebp),%eax
 8076049:	c1 e8 08             	shr    $0x8,%eax
 807604c:	89 c1                	mov    %eax,%ecx
 807604e:	8b 85 18 fc ff ff    	mov    -0x3e8(%ebp),%eax
 8076054:	89 85 24 fc ff ff    	mov    %eax,-0x3dc(%ebp)
 807605a:	8b 85 24 fc ff ff    	mov    -0x3dc(%ebp),%eax
 8076060:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8076067:	21 c8                	and    %ecx,%eax
 8076069:	01 d0                	add    %edx,%eax
 807606b:	c1 e0 02             	shl    $0x2,%eax
 807606e:	01 85 10 fc ff ff    	add    %eax,-0x3f0(%ebp)
 8076074:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807607a:	0f b6 00             	movzbl (%eax),%eax
 807607d:	0f b6 c0             	movzbl %al,%eax
 8076080:	8b 95 14 fc ff ff    	mov    -0x3ec(%ebp),%edx
 8076086:	89 95 28 fc ff ff    	mov    %edx,-0x3d8(%ebp)
 807608c:	89 85 2c fc ff ff    	mov    %eax,-0x3d4(%ebp)
 8076092:	8b 85 28 fc ff ff    	mov    -0x3d8(%ebp),%eax
 8076098:	8b 50 04             	mov    0x4(%eax),%edx
 807609b:	8b 85 2c fc ff ff    	mov    -0x3d4(%ebp),%eax
 80760a1:	01 c2                	add    %eax,%edx
 80760a3:	8b 85 28 fc ff ff    	mov    -0x3d8(%ebp),%eax
 80760a9:	89 50 04             	mov    %edx,0x4(%eax)
 80760ac:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 80760b2:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80760b6:	0f b7 c0             	movzwl %ax,%eax
 80760b9:	88 85 e5 f5 ff ff    	mov    %al,-0xa1b(%ebp)
 80760bf:	e9 cf 02 00 00       	jmp    8076393 <ProcessCommands+0x3aac>
 80760c4:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
 80760ca:	89 85 30 fc ff ff    	mov    %eax,-0x3d0(%ebp)
 80760d0:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80760d6:	89 85 34 fc ff ff    	mov    %eax,-0x3cc(%ebp)
 80760dc:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80760df:	89 85 38 fc ff ff    	mov    %eax,-0x3c8(%ebp)
 80760e5:	8b 85 34 fc ff ff    	mov    -0x3cc(%ebp),%eax
 80760eb:	89 85 3c fc ff ff    	mov    %eax,-0x3c4(%ebp)
 80760f1:	c7 85 40 fc ff ff 0f 	movl   $0xf,-0x3c0(%ebp)
 80760f8:	00 00 00 
 80760fb:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80760fe:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%ebp)
 8076104:	e9 a8 00 00 00       	jmp    80761b1 <ProcessCommands+0x38ca>
 8076109:	8b 85 3c fc ff ff    	mov    -0x3c4(%ebp),%eax
 807610f:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%ebp)
 8076115:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807611b:	8b 40 0c             	mov    0xc(%eax),%eax
 807611e:	85 c0                	test   %eax,%eax
 8076120:	75 07                	jne    8076129 <ProcessCommands+0x3842>
 8076122:	b8 00 00 00 00       	mov    $0x0,%eax
 8076127:	eb 7d                	jmp    80761a6 <ProcessCommands+0x38bf>
 8076129:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807612f:	8b 00                	mov    (%eax),%eax
 8076131:	c1 e8 08             	shr    $0x8,%eax
 8076134:	89 c2                	mov    %eax,%edx
 8076136:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807613c:	89 10                	mov    %edx,(%eax)
 807613e:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 8076144:	8b 10                	mov    (%eax),%edx
 8076146:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807614c:	8b 40 08             	mov    0x8(%eax),%eax
 807614f:	0f b6 00             	movzbl (%eax),%eax
 8076152:	0f b6 c0             	movzbl %al,%eax
 8076155:	c1 e0 18             	shl    $0x18,%eax
 8076158:	09 c2                	or     %eax,%edx
 807615a:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 8076160:	89 10                	mov    %edx,(%eax)
 8076162:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 8076168:	8b 40 04             	mov    0x4(%eax),%eax
 807616b:	8d 50 f8             	lea    -0x8(%eax),%edx
 807616e:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 8076174:	89 50 04             	mov    %edx,0x4(%eax)
 8076177:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807617d:	8b 40 0c             	mov    0xc(%eax),%eax
 8076180:	8d 50 ff             	lea    -0x1(%eax),%edx
 8076183:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 8076189:	89 50 0c             	mov    %edx,0xc(%eax)
 807618c:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 8076192:	8b 40 08             	mov    0x8(%eax),%eax
 8076195:	8d 50 01             	lea    0x1(%eax),%edx
 8076198:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807619e:	89 50 08             	mov    %edx,0x8(%eax)
 80761a1:	b8 01 00 00 00       	mov    $0x1,%eax
 80761a6:	85 c0                	test   %eax,%eax
 80761a8:	75 07                	jne    80761b1 <ProcessCommands+0x38ca>
 80761aa:	b8 00 00 00 00       	mov    $0x0,%eax
 80761af:	eb 77                	jmp    8076228 <ProcessCommands+0x3941>
 80761b1:	8b 85 3c fc ff ff    	mov    -0x3c4(%ebp),%eax
 80761b7:	89 85 4c fc ff ff    	mov    %eax,-0x3b4(%ebp)
 80761bd:	8b 85 4c fc ff ff    	mov    -0x3b4(%ebp),%eax
 80761c3:	8b 40 04             	mov    0x4(%eax),%eax
 80761c6:	ba 20 00 00 00       	mov    $0x20,%edx
 80761cb:	29 c2                	sub    %eax,%edx
 80761cd:	89 d0                	mov    %edx,%eax
 80761cf:	39 85 40 fc ff ff    	cmp    %eax,-0x3c0(%ebp)
 80761d5:	0f 87 2e ff ff ff    	ja     8076109 <ProcessCommands+0x3822>
 80761db:	8b 85 3c fc ff ff    	mov    -0x3c4(%ebp),%eax
 80761e1:	89 85 50 fc ff ff    	mov    %eax,-0x3b0(%ebp)
 80761e7:	8b 85 50 fc ff ff    	mov    -0x3b0(%ebp),%eax
 80761ed:	8b 10                	mov    (%eax),%edx
 80761ef:	8b 85 50 fc ff ff    	mov    -0x3b0(%ebp),%eax
 80761f5:	8b 40 04             	mov    0x4(%eax),%eax
 80761f8:	89 c1                	mov    %eax,%ecx
 80761fa:	d3 ea                	shr    %cl,%edx
 80761fc:	89 d0                	mov    %edx,%eax
 80761fe:	89 c2                	mov    %eax,%edx
 8076200:	8b 85 40 fc ff ff    	mov    -0x3c0(%ebp),%eax
 8076206:	89 85 54 fc ff ff    	mov    %eax,-0x3ac(%ebp)
 807620c:	8b 85 54 fc ff ff    	mov    -0x3ac(%ebp),%eax
 8076212:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8076219:	21 c2                	and    %eax,%edx
 807621b:	8b 85 44 fc ff ff    	mov    -0x3bc(%ebp),%eax
 8076221:	89 10                	mov    %edx,(%eax)
 8076223:	b8 01 00 00 00       	mov    $0x1,%eax
 8076228:	85 c0                	test   %eax,%eax
 807622a:	0f 95 c0             	setne  %al
 807622d:	0f b6 c0             	movzbl %al,%eax
 8076230:	85 c0                	test   %eax,%eax
 8076232:	0f 84 1d 01 00 00    	je     8076355 <ProcessCommands+0x3a6e>
 8076238:	8b 45 e8             	mov    -0x18(%ebp),%eax
 807623b:	89 85 58 fc ff ff    	mov    %eax,-0x3a8(%ebp)
 8076241:	8b 85 30 fc ff ff    	mov    -0x3d0(%ebp),%eax
 8076247:	89 85 5c fc ff ff    	mov    %eax,-0x3a4(%ebp)
 807624d:	8b 85 34 fc ff ff    	mov    -0x3cc(%ebp),%eax
 8076253:	89 85 60 fc ff ff    	mov    %eax,-0x3a0(%ebp)
 8076259:	8b 85 58 fc ff ff    	mov    -0x3a8(%ebp),%eax
 807625f:	0f b6 c0             	movzbl %al,%eax
 8076262:	c1 e0 02             	shl    $0x2,%eax
 8076265:	01 85 5c fc ff ff    	add    %eax,-0x3a4(%ebp)
 807626b:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 8076271:	0f b6 00             	movzbl (%eax),%eax
 8076274:	3c 08                	cmp    $0x8,%al
 8076276:	0f 86 83 00 00 00    	jbe    80762ff <ProcessCommands+0x3a18>
 807627c:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 8076282:	0f b6 00             	movzbl (%eax),%eax
 8076285:	0f b6 c0             	movzbl %al,%eax
 8076288:	83 e8 08             	sub    $0x8,%eax
 807628b:	89 85 64 fc ff ff    	mov    %eax,-0x39c(%ebp)
 8076291:	8b 85 60 fc ff ff    	mov    -0x3a0(%ebp),%eax
 8076297:	89 85 68 fc ff ff    	mov    %eax,-0x398(%ebp)
 807629d:	c7 85 6c fc ff ff 08 	movl   $0x8,-0x394(%ebp)
 80762a4:	00 00 00 
 80762a7:	8b 85 68 fc ff ff    	mov    -0x398(%ebp),%eax
 80762ad:	8b 50 04             	mov    0x4(%eax),%edx
 80762b0:	8b 85 6c fc ff ff    	mov    -0x394(%ebp),%eax
 80762b6:	01 c2                	add    %eax,%edx
 80762b8:	8b 85 68 fc ff ff    	mov    -0x398(%ebp),%eax
 80762be:	89 50 04             	mov    %edx,0x4(%eax)
 80762c1:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 80762c7:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80762cb:	0f b7 d0             	movzwl %ax,%edx
 80762ce:	8b 85 58 fc ff ff    	mov    -0x3a8(%ebp),%eax
 80762d4:	c1 e8 08             	shr    $0x8,%eax
 80762d7:	89 c1                	mov    %eax,%ecx
 80762d9:	8b 85 64 fc ff ff    	mov    -0x39c(%ebp),%eax
 80762df:	89 85 70 fc ff ff    	mov    %eax,-0x390(%ebp)
 80762e5:	8b 85 70 fc ff ff    	mov    -0x390(%ebp),%eax
 80762eb:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80762f2:	21 c8                	and    %ecx,%eax
 80762f4:	01 d0                	add    %edx,%eax
 80762f6:	c1 e0 02             	shl    $0x2,%eax
 80762f9:	01 85 5c fc ff ff    	add    %eax,-0x3a4(%ebp)
 80762ff:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 8076305:	0f b6 00             	movzbl (%eax),%eax
 8076308:	0f b6 c0             	movzbl %al,%eax
 807630b:	8b 95 60 fc ff ff    	mov    -0x3a0(%ebp),%edx
 8076311:	89 95 74 fc ff ff    	mov    %edx,-0x38c(%ebp)
 8076317:	89 85 78 fc ff ff    	mov    %eax,-0x388(%ebp)
 807631d:	8b 85 74 fc ff ff    	mov    -0x38c(%ebp),%eax
 8076323:	8b 50 04             	mov    0x4(%eax),%edx
 8076326:	8b 85 78 fc ff ff    	mov    -0x388(%ebp),%eax
 807632c:	01 c2                	add    %eax,%edx
 807632e:	8b 85 74 fc ff ff    	mov    -0x38c(%ebp),%eax
 8076334:	89 50 04             	mov    %edx,0x4(%eax)
 8076337:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 807633d:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8076341:	0f b7 c0             	movzwl %ax,%eax
 8076344:	89 c2                	mov    %eax,%edx
 8076346:	8b 85 38 fc ff ff    	mov    -0x3c8(%ebp),%eax
 807634c:	89 10                	mov    %edx,(%eax)
 807634e:	b8 01 00 00 00       	mov    $0x1,%eax
 8076353:	eb 22                	jmp    8076377 <ProcessCommands+0x3a90>
 8076355:	8b 85 38 fc ff ff    	mov    -0x3c8(%ebp),%eax
 807635b:	89 44 24 08          	mov    %eax,0x8(%esp)
 807635f:	8b 85 34 fc ff ff    	mov    -0x3cc(%ebp),%eax
 8076365:	89 44 24 04          	mov    %eax,0x4(%esp)
 8076369:	8b 85 30 fc ff ff    	mov    -0x3d0(%ebp),%eax
 807636f:	89 04 24             	mov    %eax,(%esp)
 8076372:	e8 55 26 ff ff       	call   80689cc <SafeDecodeSymbol>
 8076377:	85 c0                	test   %eax,%eax
 8076379:	75 0f                	jne    807638a <ProcessCommands+0x3aa3>
 807637b:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8076382:	00 00 00 
 8076385:	e9 cf 23 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 807638a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807638d:	88 85 e5 f5 ff ff    	mov    %al,-0xa1b(%ebp)
 8076393:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8076399:	8b 50 5c             	mov    0x5c(%eax),%edx
 807639c:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 80763a2:	01 c2                	add    %eax,%edx
 80763a4:	0f b6 85 e5 f5 ff ff 	movzbl -0xa1b(%ebp),%eax
 80763ab:	88 02                	mov    %al,(%edx)
 80763ad:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80763b3:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 80763b9:	8d 50 ff             	lea    -0x1(%eax),%edx
 80763bc:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80763c2:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)
 80763c8:	83 85 04 f6 ff ff 01 	addl   $0x1,-0x9fc(%ebp)
 80763cf:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80763d5:	8b 40 3c             	mov    0x3c(%eax),%eax
 80763d8:	39 85 04 f6 ff ff    	cmp    %eax,-0x9fc(%ebp)
 80763de:	0f 94 c0             	sete   %al
 80763e1:	0f b6 c0             	movzbl %al,%eax
 80763e4:	85 c0                	test   %eax,%eax
 80763e6:	74 20                	je     8076408 <ProcessCommands+0x3b21>
 80763e8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80763ee:	c7 00 0d 00 00 00    	movl   $0xd,(%eax)
 80763f4:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 80763fa:	83 e8 01             	sub    $0x1,%eax
 80763fd:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 8076403:	e9 51 23 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8076408:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807640e:	83 e8 01             	sub    $0x1,%eax
 8076411:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 8076417:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807641d:	85 c0                	test   %eax,%eax
 807641f:	0f 85 34 f9 ff ff    	jne    8075d59 <ProcessCommands+0x3472>
 8076425:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807642b:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8076431:	85 c0                	test   %eax,%eax
 8076433:	0f 9e c0             	setle  %al
 8076436:	0f b6 c0             	movzbl %al,%eax
 8076439:	85 c0                	test   %eax,%eax
 807643b:	74 11                	je     807644e <ProcessCommands+0x3b67>
 807643d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8076443:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 8076449:	e9 0b 23 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 807644e:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8076455:	74 0c                	je     8076463 <ProcessCommands+0x3b7c>
 8076457:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807645d:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
 8076463:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8076469:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807646f:	85 c0                	test   %eax,%eax
 8076471:	78 61                	js     80764d4 <ProcessCommands+0x3bed>
 8076473:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8076479:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807647f:	85 c0                	test   %eax,%eax
 8076481:	0f 94 c0             	sete   %al
 8076484:	0f b6 d0             	movzbl %al,%edx
 8076487:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807648d:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 8076493:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8076499:	8b 40 44             	mov    0x44(%eax),%eax
 807649c:	8d 50 ff             	lea    -0x1(%eax),%edx
 807649f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80764a5:	89 50 44             	mov    %edx,0x44(%eax)
 80764a8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80764ae:	8b 40 44             	mov    0x44(%eax),%eax
 80764b1:	83 e0 03             	and    $0x3,%eax
 80764b4:	89 c2                	mov    %eax,%edx
 80764b6:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80764bc:	83 c2 10             	add    $0x10,%edx
 80764bf:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 80764c3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80764c9:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 80764cf:	e9 5f 1d 00 00       	jmp    8078233 <ProcessCommands+0x594c>
 80764d4:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80764da:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 80764e0:	85 c0                	test   %eax,%eax
 80764e2:	0f 94 c0             	sete   %al
 80764e5:	0f b6 c0             	movzbl %al,%eax
 80764e8:	85 c0                	test   %eax,%eax
 80764ea:	74 38                	je     8076524 <ProcessCommands+0x3c3d>
 80764ec:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 80764f3:	74 21                	je     8076516 <ProcessCommands+0x3c2f>
 80764f5:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80764fb:	89 04 24             	mov    %eax,(%esp)
 80764fe:	e8 1f a8 ff ff       	call   8070d22 <SafeDecodeDistanceBlockSwitch>
 8076503:	85 c0                	test   %eax,%eax
 8076505:	75 1d                	jne    8076524 <ProcessCommands+0x3c3d>
 8076507:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807650e:	00 00 00 
 8076511:	e9 43 22 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 8076516:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807651c:	89 04 24             	mov    %eax,(%esp)
 807651f:	e8 b6 95 ff ff       	call   806fada <DecodeDistanceBlockSwitch>
 8076524:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807652b:	0f 84 a7 0e 00 00    	je     80773d8 <ProcessCommands+0x4af1>
 8076531:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8076537:	89 85 7c fc ff ff    	mov    %eax,-0x384(%ebp)
 807653d:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8076543:	89 85 80 fc ff ff    	mov    %eax,-0x380(%ebp)
 8076549:	c7 85 84 fc ff ff 01 	movl   $0x1,-0x37c(%ebp)
 8076550:	00 00 00 
 8076553:	8b 85 7c fc ff ff    	mov    -0x384(%ebp),%eax
 8076559:	89 85 88 fc ff ff    	mov    %eax,-0x378(%ebp)
 807655f:	8b 85 80 fc ff ff    	mov    -0x380(%ebp),%eax
 8076565:	89 85 8c fc ff ff    	mov    %eax,-0x374(%ebp)
 807656b:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076571:	05 6c 02 00 00       	add    $0x26c,%eax
 8076576:	89 85 90 fc ff ff    	mov    %eax,-0x370(%ebp)
 807657c:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076582:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx
 8076588:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807658e:	0f b6 80 00 01 00 00 	movzbl 0x100(%eax),%eax
 8076595:	0f b6 c0             	movzbl %al,%eax
 8076598:	c1 e0 02             	shl    $0x2,%eax
 807659b:	01 d0                	add    %edx,%eax
 807659d:	8b 00                	mov    (%eax),%eax
 807659f:	89 85 94 fc ff ff    	mov    %eax,-0x36c(%ebp)
 80765a5:	83 bd 84 fc ff ff 00 	cmpl   $0x0,-0x37c(%ebp)
 80765ac:	0f 85 09 02 00 00    	jne    80767bb <ProcessCommands+0x3ed4>
 80765b2:	8b 85 94 fc ff ff    	mov    -0x36c(%ebp),%eax
 80765b8:	89 85 98 fc ff ff    	mov    %eax,-0x368(%ebp)
 80765be:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 80765c4:	89 85 9c fc ff ff    	mov    %eax,-0x364(%ebp)
 80765ca:	8b 85 9c fc ff ff    	mov    -0x364(%ebp),%eax
 80765d0:	89 85 a0 fc ff ff    	mov    %eax,-0x360(%ebp)
 80765d6:	8b 85 a0 fc ff ff    	mov    -0x360(%ebp),%eax
 80765dc:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%ebp)
 80765e2:	c7 85 a8 fc ff ff 10 	movl   $0x10,-0x358(%ebp)
 80765e9:	00 00 00 
 80765ec:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 80765f2:	8b 40 04             	mov    0x4(%eax),%eax
 80765f5:	83 f8 0f             	cmp    $0xf,%eax
 80765f8:	0f 86 86 00 00 00    	jbe    8076684 <ProcessCommands+0x3d9d>
 80765fe:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076604:	8b 00                	mov    (%eax),%eax
 8076606:	c1 e8 10             	shr    $0x10,%eax
 8076609:	89 c2                	mov    %eax,%edx
 807660b:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076611:	89 10                	mov    %edx,(%eax)
 8076613:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076619:	8b 40 04             	mov    0x4(%eax),%eax
 807661c:	83 f0 10             	xor    $0x10,%eax
 807661f:	89 c2                	mov    %eax,%edx
 8076621:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076627:	89 50 04             	mov    %edx,0x4(%eax)
 807662a:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076630:	8b 10                	mov    (%eax),%edx
 8076632:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076638:	8b 40 08             	mov    0x8(%eax),%eax
 807663b:	89 85 ac fc ff ff    	mov    %eax,-0x354(%ebp)
 8076641:	8b 85 ac fc ff ff    	mov    -0x354(%ebp),%eax
 8076647:	0f b7 00             	movzwl (%eax),%eax
 807664a:	0f b7 c0             	movzwl %ax,%eax
 807664d:	c1 e0 10             	shl    $0x10,%eax
 8076650:	09 c2                	or     %eax,%edx
 8076652:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076658:	89 10                	mov    %edx,(%eax)
 807665a:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076660:	8b 40 0c             	mov    0xc(%eax),%eax
 8076663:	8d 50 fe             	lea    -0x2(%eax),%edx
 8076666:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807666c:	89 50 0c             	mov    %edx,0xc(%eax)
 807666f:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076675:	8b 40 08             	mov    0x8(%eax),%eax
 8076678:	8d 50 02             	lea    0x2(%eax),%edx
 807667b:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 8076681:	89 50 08             	mov    %edx,0x8(%eax)
 8076684:	8b 85 a0 fc ff ff    	mov    -0x360(%ebp),%eax
 807668a:	89 85 b0 fc ff ff    	mov    %eax,-0x350(%ebp)
 8076690:	8b 85 b0 fc ff ff    	mov    -0x350(%ebp),%eax
 8076696:	8b 10                	mov    (%eax),%edx
 8076698:	8b 85 b0 fc ff ff    	mov    -0x350(%ebp),%eax
 807669e:	8b 40 04             	mov    0x4(%eax),%eax
 80766a1:	89 c1                	mov    %eax,%ecx
 80766a3:	d3 ea                	shr    %cl,%edx
 80766a5:	89 d0                	mov    %edx,%eax
 80766a7:	89 85 b4 fc ff ff    	mov    %eax,-0x34c(%ebp)
 80766ad:	8b 85 98 fc ff ff    	mov    -0x368(%ebp),%eax
 80766b3:	89 85 b8 fc ff ff    	mov    %eax,-0x348(%ebp)
 80766b9:	8b 85 9c fc ff ff    	mov    -0x364(%ebp),%eax
 80766bf:	89 85 bc fc ff ff    	mov    %eax,-0x344(%ebp)
 80766c5:	8b 85 b4 fc ff ff    	mov    -0x34c(%ebp),%eax
 80766cb:	0f b6 c0             	movzbl %al,%eax
 80766ce:	c1 e0 02             	shl    $0x2,%eax
 80766d1:	01 85 b8 fc ff ff    	add    %eax,-0x348(%ebp)
 80766d7:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 80766dd:	0f b6 00             	movzbl (%eax),%eax
 80766e0:	3c 08                	cmp    $0x8,%al
 80766e2:	0f 86 83 00 00 00    	jbe    807676b <ProcessCommands+0x3e84>
 80766e8:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 80766ee:	0f b6 00             	movzbl (%eax),%eax
 80766f1:	0f b6 c0             	movzbl %al,%eax
 80766f4:	83 e8 08             	sub    $0x8,%eax
 80766f7:	89 85 c0 fc ff ff    	mov    %eax,-0x340(%ebp)
 80766fd:	8b 85 bc fc ff ff    	mov    -0x344(%ebp),%eax
 8076703:	89 85 c4 fc ff ff    	mov    %eax,-0x33c(%ebp)
 8076709:	c7 85 c8 fc ff ff 08 	movl   $0x8,-0x338(%ebp)
 8076710:	00 00 00 
 8076713:	8b 85 c4 fc ff ff    	mov    -0x33c(%ebp),%eax
 8076719:	8b 50 04             	mov    0x4(%eax),%edx
 807671c:	8b 85 c8 fc ff ff    	mov    -0x338(%ebp),%eax
 8076722:	01 c2                	add    %eax,%edx
 8076724:	8b 85 c4 fc ff ff    	mov    -0x33c(%ebp),%eax
 807672a:	89 50 04             	mov    %edx,0x4(%eax)
 807672d:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 8076733:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8076737:	0f b7 d0             	movzwl %ax,%edx
 807673a:	8b 85 b4 fc ff ff    	mov    -0x34c(%ebp),%eax
 8076740:	c1 e8 08             	shr    $0x8,%eax
 8076743:	89 c1                	mov    %eax,%ecx
 8076745:	8b 85 c0 fc ff ff    	mov    -0x340(%ebp),%eax
 807674b:	89 85 cc fc ff ff    	mov    %eax,-0x334(%ebp)
 8076751:	8b 85 cc fc ff ff    	mov    -0x334(%ebp),%eax
 8076757:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807675e:	21 c8                	and    %ecx,%eax
 8076760:	01 d0                	add    %edx,%eax
 8076762:	c1 e0 02             	shl    $0x2,%eax
 8076765:	01 85 b8 fc ff ff    	add    %eax,-0x348(%ebp)
 807676b:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 8076771:	0f b6 00             	movzbl (%eax),%eax
 8076774:	0f b6 c0             	movzbl %al,%eax
 8076777:	8b 95 bc fc ff ff    	mov    -0x344(%ebp),%edx
 807677d:	89 95 d0 fc ff ff    	mov    %edx,-0x330(%ebp)
 8076783:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%ebp)
 8076789:	8b 85 d0 fc ff ff    	mov    -0x330(%ebp),%eax
 807678f:	8b 50 04             	mov    0x4(%eax),%edx
 8076792:	8b 85 d4 fc ff ff    	mov    -0x32c(%ebp),%eax
 8076798:	01 c2                	add    %eax,%edx
 807679a:	8b 85 d0 fc ff ff    	mov    -0x330(%ebp),%eax
 80767a0:	89 50 04             	mov    %edx,0x4(%eax)
 80767a3:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 80767a9:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80767ad:	0f b7 c0             	movzwl %ax,%eax
 80767b0:	89 85 f4 f5 ff ff    	mov    %eax,-0xa0c(%ebp)
 80767b6:	e9 1f 03 00 00       	jmp    8076ada <ProcessCommands+0x41f3>
 80767bb:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 80767c1:	89 85 d8 fc ff ff    	mov    %eax,-0x328(%ebp)
 80767c7:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80767ca:	89 85 dc fc ff ff    	mov    %eax,-0x324(%ebp)
 80767d0:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 80767d6:	8b 10                	mov    (%eax),%edx
 80767d8:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 80767de:	89 10                	mov    %edx,(%eax)
 80767e0:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 80767e6:	8b 50 04             	mov    0x4(%eax),%edx
 80767e9:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 80767ef:	89 50 04             	mov    %edx,0x4(%eax)
 80767f2:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 80767f8:	8b 50 08             	mov    0x8(%eax),%edx
 80767fb:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 8076801:	89 50 08             	mov    %edx,0x8(%eax)
 8076804:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 807680a:	8b 50 0c             	mov    0xc(%eax),%edx
 807680d:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 8076813:	89 50 0c             	mov    %edx,0xc(%eax)
 8076816:	8b 85 94 fc ff ff    	mov    -0x36c(%ebp),%eax
 807681c:	89 85 e0 fc ff ff    	mov    %eax,-0x320(%ebp)
 8076822:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 8076828:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%ebp)
 807682e:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 8076834:	89 85 e8 fc ff ff    	mov    %eax,-0x318(%ebp)
 807683a:	8b 85 e4 fc ff ff    	mov    -0x31c(%ebp),%eax
 8076840:	89 85 ec fc ff ff    	mov    %eax,-0x314(%ebp)
 8076846:	c7 85 f0 fc ff ff 0f 	movl   $0xf,-0x310(%ebp)
 807684d:	00 00 00 
 8076850:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8076853:	89 85 f4 fc ff ff    	mov    %eax,-0x30c(%ebp)
 8076859:	e9 a8 00 00 00       	jmp    8076906 <ProcessCommands+0x401f>
 807685e:	8b 85 ec fc ff ff    	mov    -0x314(%ebp),%eax
 8076864:	89 85 f8 fc ff ff    	mov    %eax,-0x308(%ebp)
 807686a:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 8076870:	8b 40 0c             	mov    0xc(%eax),%eax
 8076873:	85 c0                	test   %eax,%eax
 8076875:	75 07                	jne    807687e <ProcessCommands+0x3f97>
 8076877:	b8 00 00 00 00       	mov    $0x0,%eax
 807687c:	eb 7d                	jmp    80768fb <ProcessCommands+0x4014>
 807687e:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 8076884:	8b 00                	mov    (%eax),%eax
 8076886:	c1 e8 08             	shr    $0x8,%eax
 8076889:	89 c2                	mov    %eax,%edx
 807688b:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 8076891:	89 10                	mov    %edx,(%eax)
 8076893:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 8076899:	8b 10                	mov    (%eax),%edx
 807689b:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768a1:	8b 40 08             	mov    0x8(%eax),%eax
 80768a4:	0f b6 00             	movzbl (%eax),%eax
 80768a7:	0f b6 c0             	movzbl %al,%eax
 80768aa:	c1 e0 18             	shl    $0x18,%eax
 80768ad:	09 c2                	or     %eax,%edx
 80768af:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768b5:	89 10                	mov    %edx,(%eax)
 80768b7:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768bd:	8b 40 04             	mov    0x4(%eax),%eax
 80768c0:	8d 50 f8             	lea    -0x8(%eax),%edx
 80768c3:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768c9:	89 50 04             	mov    %edx,0x4(%eax)
 80768cc:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768d2:	8b 40 0c             	mov    0xc(%eax),%eax
 80768d5:	8d 50 ff             	lea    -0x1(%eax),%edx
 80768d8:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768de:	89 50 0c             	mov    %edx,0xc(%eax)
 80768e1:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768e7:	8b 40 08             	mov    0x8(%eax),%eax
 80768ea:	8d 50 01             	lea    0x1(%eax),%edx
 80768ed:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 80768f3:	89 50 08             	mov    %edx,0x8(%eax)
 80768f6:	b8 01 00 00 00       	mov    $0x1,%eax
 80768fb:	85 c0                	test   %eax,%eax
 80768fd:	75 07                	jne    8076906 <ProcessCommands+0x401f>
 80768ff:	b8 00 00 00 00       	mov    $0x0,%eax
 8076904:	eb 77                	jmp    807697d <ProcessCommands+0x4096>
 8076906:	8b 85 ec fc ff ff    	mov    -0x314(%ebp),%eax
 807690c:	89 85 fc fc ff ff    	mov    %eax,-0x304(%ebp)
 8076912:	8b 85 fc fc ff ff    	mov    -0x304(%ebp),%eax
 8076918:	8b 40 04             	mov    0x4(%eax),%eax
 807691b:	ba 20 00 00 00       	mov    $0x20,%edx
 8076920:	29 c2                	sub    %eax,%edx
 8076922:	89 d0                	mov    %edx,%eax
 8076924:	39 85 f0 fc ff ff    	cmp    %eax,-0x310(%ebp)
 807692a:	0f 87 2e ff ff ff    	ja     807685e <ProcessCommands+0x3f77>
 8076930:	8b 85 ec fc ff ff    	mov    -0x314(%ebp),%eax
 8076936:	89 85 00 fd ff ff    	mov    %eax,-0x300(%ebp)
 807693c:	8b 85 00 fd ff ff    	mov    -0x300(%ebp),%eax
 8076942:	8b 10                	mov    (%eax),%edx
 8076944:	8b 85 00 fd ff ff    	mov    -0x300(%ebp),%eax
 807694a:	8b 40 04             	mov    0x4(%eax),%eax
 807694d:	89 c1                	mov    %eax,%ecx
 807694f:	d3 ea                	shr    %cl,%edx
 8076951:	89 d0                	mov    %edx,%eax
 8076953:	89 c2                	mov    %eax,%edx
 8076955:	8b 85 f0 fc ff ff    	mov    -0x310(%ebp),%eax
 807695b:	89 85 04 fd ff ff    	mov    %eax,-0x2fc(%ebp)
 8076961:	8b 85 04 fd ff ff    	mov    -0x2fc(%ebp),%eax
 8076967:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807696e:	21 c2                	and    %eax,%edx
 8076970:	8b 85 f4 fc ff ff    	mov    -0x30c(%ebp),%eax
 8076976:	89 10                	mov    %edx,(%eax)
 8076978:	b8 01 00 00 00       	mov    $0x1,%eax
 807697d:	85 c0                	test   %eax,%eax
 807697f:	0f 95 c0             	setne  %al
 8076982:	0f b6 c0             	movzbl %al,%eax
 8076985:	85 c0                	test   %eax,%eax
 8076987:	0f 84 1d 01 00 00    	je     8076aaa <ProcessCommands+0x41c3>
 807698d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8076990:	89 85 08 fd ff ff    	mov    %eax,-0x2f8(%ebp)
 8076996:	8b 85 e0 fc ff ff    	mov    -0x320(%ebp),%eax
 807699c:	89 85 0c fd ff ff    	mov    %eax,-0x2f4(%ebp)
 80769a2:	8b 85 e4 fc ff ff    	mov    -0x31c(%ebp),%eax
 80769a8:	89 85 10 fd ff ff    	mov    %eax,-0x2f0(%ebp)
 80769ae:	8b 85 08 fd ff ff    	mov    -0x2f8(%ebp),%eax
 80769b4:	0f b6 c0             	movzbl %al,%eax
 80769b7:	c1 e0 02             	shl    $0x2,%eax
 80769ba:	01 85 0c fd ff ff    	add    %eax,-0x2f4(%ebp)
 80769c0:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 80769c6:	0f b6 00             	movzbl (%eax),%eax
 80769c9:	3c 08                	cmp    $0x8,%al
 80769cb:	0f 86 83 00 00 00    	jbe    8076a54 <ProcessCommands+0x416d>
 80769d1:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 80769d7:	0f b6 00             	movzbl (%eax),%eax
 80769da:	0f b6 c0             	movzbl %al,%eax
 80769dd:	83 e8 08             	sub    $0x8,%eax
 80769e0:	89 85 14 fd ff ff    	mov    %eax,-0x2ec(%ebp)
 80769e6:	8b 85 10 fd ff ff    	mov    -0x2f0(%ebp),%eax
 80769ec:	89 85 18 fd ff ff    	mov    %eax,-0x2e8(%ebp)
 80769f2:	c7 85 1c fd ff ff 08 	movl   $0x8,-0x2e4(%ebp)
 80769f9:	00 00 00 
 80769fc:	8b 85 18 fd ff ff    	mov    -0x2e8(%ebp),%eax
 8076a02:	8b 50 04             	mov    0x4(%eax),%edx
 8076a05:	8b 85 1c fd ff ff    	mov    -0x2e4(%ebp),%eax
 8076a0b:	01 c2                	add    %eax,%edx
 8076a0d:	8b 85 18 fd ff ff    	mov    -0x2e8(%ebp),%eax
 8076a13:	89 50 04             	mov    %edx,0x4(%eax)
 8076a16:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 8076a1c:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8076a20:	0f b7 d0             	movzwl %ax,%edx
 8076a23:	8b 85 08 fd ff ff    	mov    -0x2f8(%ebp),%eax
 8076a29:	c1 e8 08             	shr    $0x8,%eax
 8076a2c:	89 c1                	mov    %eax,%ecx
 8076a2e:	8b 85 14 fd ff ff    	mov    -0x2ec(%ebp),%eax
 8076a34:	89 85 20 fd ff ff    	mov    %eax,-0x2e0(%ebp)
 8076a3a:	8b 85 20 fd ff ff    	mov    -0x2e0(%ebp),%eax
 8076a40:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8076a47:	21 c8                	and    %ecx,%eax
 8076a49:	01 d0                	add    %edx,%eax
 8076a4b:	c1 e0 02             	shl    $0x2,%eax
 8076a4e:	01 85 0c fd ff ff    	add    %eax,-0x2f4(%ebp)
 8076a54:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 8076a5a:	0f b6 00             	movzbl (%eax),%eax
 8076a5d:	0f b6 c0             	movzbl %al,%eax
 8076a60:	8b 95 10 fd ff ff    	mov    -0x2f0(%ebp),%edx
 8076a66:	89 95 24 fd ff ff    	mov    %edx,-0x2dc(%ebp)
 8076a6c:	89 85 28 fd ff ff    	mov    %eax,-0x2d8(%ebp)
 8076a72:	8b 85 24 fd ff ff    	mov    -0x2dc(%ebp),%eax
 8076a78:	8b 50 04             	mov    0x4(%eax),%edx
 8076a7b:	8b 85 28 fd ff ff    	mov    -0x2d8(%ebp),%eax
 8076a81:	01 c2                	add    %eax,%edx
 8076a83:	8b 85 24 fd ff ff    	mov    -0x2dc(%ebp),%eax
 8076a89:	89 50 04             	mov    %edx,0x4(%eax)
 8076a8c:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 8076a92:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8076a96:	0f b7 c0             	movzwl %ax,%eax
 8076a99:	89 c2                	mov    %eax,%edx
 8076a9b:	8b 85 e8 fc ff ff    	mov    -0x318(%ebp),%eax
 8076aa1:	89 10                	mov    %edx,(%eax)
 8076aa3:	b8 01 00 00 00       	mov    $0x1,%eax
 8076aa8:	eb 22                	jmp    8076acc <ProcessCommands+0x41e5>
 8076aaa:	8b 85 e8 fc ff ff    	mov    -0x318(%ebp),%eax
 8076ab0:	89 44 24 08          	mov    %eax,0x8(%esp)
 8076ab4:	8b 85 e4 fc ff ff    	mov    -0x31c(%ebp),%eax
 8076aba:	89 44 24 04          	mov    %eax,0x4(%esp)
 8076abe:	8b 85 e0 fc ff ff    	mov    -0x320(%ebp),%eax
 8076ac4:	89 04 24             	mov    %eax,(%esp)
 8076ac7:	e8 00 1f ff ff       	call   80689cc <SafeDecodeSymbol>
 8076acc:	85 c0                	test   %eax,%eax
 8076ace:	75 0a                	jne    8076ada <ProcessCommands+0x41f3>
 8076ad0:	b8 00 00 00 00       	mov    $0x0,%eax
 8076ad5:	e9 e7 08 00 00       	jmp    80773c1 <ProcessCommands+0x4ada>
 8076ada:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076ae0:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 8076ae6:	8d 50 ff             	lea    -0x1(%eax),%edx
 8076ae9:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076aef:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 8076af5:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076afb:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)
 8076b02:	00 00 00 
 8076b05:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8076b0b:	83 e0 f0             	and    $0xfffffff0,%eax
 8076b0e:	85 c0                	test   %eax,%eax
 8076b10:	0f 85 8b 01 00 00    	jne    8076ca1 <ProcessCommands+0x43ba>
 8076b16:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8076b1c:	89 c2                	mov    %eax,%edx
 8076b1e:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076b24:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8076b2a:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 8076b30:	89 85 2c fd ff ff    	mov    %eax,-0x2d4(%ebp)
 8076b36:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076b3c:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076b42:	83 e8 03             	sub    $0x3,%eax
 8076b45:	89 85 30 fd ff ff    	mov    %eax,-0x2d0(%ebp)
 8076b4b:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076b51:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076b57:	83 f8 03             	cmp    $0x3,%eax
 8076b5a:	7f 73                	jg     8076bcf <ProcessCommands+0x42e8>
 8076b5c:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076b62:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076b68:	ba 01 00 00 00       	mov    $0x1,%edx
 8076b6d:	89 c1                	mov    %eax,%ecx
 8076b6f:	d3 fa                	sar    %cl,%edx
 8076b71:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076b77:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 8076b7d:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076b83:	8b 40 44             	mov    0x44(%eax),%eax
 8076b86:	2b 85 30 fd ff ff    	sub    -0x2d0(%ebp),%eax
 8076b8c:	83 e0 03             	and    $0x3,%eax
 8076b8f:	89 c2                	mov    %eax,%edx
 8076b91:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076b97:	83 c2 10             	add    $0x10,%edx
 8076b9a:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 8076b9e:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076ba4:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8076baa:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076bb0:	8b 50 44             	mov    0x44(%eax),%edx
 8076bb3:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076bb9:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8076bbf:	29 c2                	sub    %eax,%edx
 8076bc1:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076bc7:	89 50 44             	mov    %edx,0x44(%eax)
 8076bca:	e9 c8 00 00 00       	jmp    8076c97 <ProcessCommands+0x43b0>
 8076bcf:	c7 85 34 fd ff ff 03 	movl   $0x3,-0x2cc(%ebp)
 8076bd6:	00 00 00 
 8076bd9:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076bdf:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076be5:	83 e8 0a             	sub    $0xa,%eax
 8076be8:	89 85 38 fd ff ff    	mov    %eax,-0x2c8(%ebp)
 8076bee:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076bf4:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076bfa:	83 f8 09             	cmp    $0x9,%eax
 8076bfd:	7f 17                	jg     8076c16 <ProcessCommands+0x432f>
 8076bff:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076c05:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076c0b:	83 e8 04             	sub    $0x4,%eax
 8076c0e:	89 85 38 fd ff ff    	mov    %eax,-0x2c8(%ebp)
 8076c14:	eb 0a                	jmp    8076c20 <ProcessCommands+0x4339>
 8076c16:	c7 85 34 fd ff ff 02 	movl   $0x2,-0x2cc(%ebp)
 8076c1d:	00 00 00 
 8076c20:	8b 85 38 fd ff ff    	mov    -0x2c8(%ebp),%eax
 8076c26:	c1 e0 02             	shl    $0x2,%eax
 8076c29:	ba 42 51 60 00       	mov    $0x605142,%edx
 8076c2e:	89 c1                	mov    %eax,%ecx
 8076c30:	d3 fa                	sar    %cl,%edx
 8076c32:	89 d0                	mov    %edx,%eax
 8076c34:	83 e0 0f             	and    $0xf,%eax
 8076c37:	83 e8 03             	sub    $0x3,%eax
 8076c3a:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%ebp)
 8076c40:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076c46:	8b 50 44             	mov    0x44(%eax),%edx
 8076c49:	8b 85 34 fd ff ff    	mov    -0x2cc(%ebp),%eax
 8076c4f:	01 d0                	add    %edx,%eax
 8076c51:	83 e0 03             	and    $0x3,%eax
 8076c54:	89 c2                	mov    %eax,%edx
 8076c56:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076c5c:	83 c2 10             	add    $0x10,%edx
 8076c5f:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 8076c63:	8b 85 3c fd ff ff    	mov    -0x2c4(%ebp),%eax
 8076c69:	01 c2                	add    %eax,%edx
 8076c6b:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076c71:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8076c77:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076c7d:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8076c83:	85 c0                	test   %eax,%eax
 8076c85:	7f 10                	jg     8076c97 <ProcessCommands+0x43b0>
 8076c87:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 8076c8d:	c7 80 08 01 00 00 ff 	movl   $0x7fffffff,0x108(%eax)
 8076c94:	ff ff 7f 
 8076c97:	b8 01 00 00 00       	mov    $0x1,%eax
 8076c9c:	e9 20 07 00 00       	jmp    80773c1 <ProcessCommands+0x4ada>
 8076ca1:	83 bd 84 fc ff ff 00 	cmpl   $0x0,-0x37c(%ebp)
 8076ca8:	0f 85 33 04 00 00    	jne    80770e1 <ProcessCommands+0x47fa>
 8076cae:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8076cb4:	8b 95 90 fc ff ff    	mov    -0x370(%ebp),%edx
 8076cba:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 8076cbe:	0f b6 c0             	movzbl %al,%eax
 8076cc1:	8b 95 8c fc ff ff    	mov    -0x374(%ebp),%edx
 8076cc7:	89 95 40 fd ff ff    	mov    %edx,-0x2c0(%ebp)
 8076ccd:	89 85 44 fd ff ff    	mov    %eax,-0x2bc(%ebp)
 8076cd3:	83 bd 44 fd ff ff 10 	cmpl   $0x10,-0x2bc(%ebp)
 8076cda:	0f 87 53 01 00 00    	ja     8076e33 <ProcessCommands+0x454c>
 8076ce0:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 8076ce6:	89 85 48 fd ff ff    	mov    %eax,-0x2b8(%ebp)
 8076cec:	8b 85 44 fd ff ff    	mov    -0x2bc(%ebp),%eax
 8076cf2:	89 85 4c fd ff ff    	mov    %eax,-0x2b4(%ebp)
 8076cf8:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076cfe:	8b 40 04             	mov    0x4(%eax),%eax
 8076d01:	83 f8 0f             	cmp    $0xf,%eax
 8076d04:	0f 86 86 00 00 00    	jbe    8076d90 <ProcessCommands+0x44a9>
 8076d0a:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d10:	8b 00                	mov    (%eax),%eax
 8076d12:	c1 e8 10             	shr    $0x10,%eax
 8076d15:	89 c2                	mov    %eax,%edx
 8076d17:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d1d:	89 10                	mov    %edx,(%eax)
 8076d1f:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d25:	8b 40 04             	mov    0x4(%eax),%eax
 8076d28:	83 f0 10             	xor    $0x10,%eax
 8076d2b:	89 c2                	mov    %eax,%edx
 8076d2d:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d33:	89 50 04             	mov    %edx,0x4(%eax)
 8076d36:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d3c:	8b 10                	mov    (%eax),%edx
 8076d3e:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d44:	8b 40 08             	mov    0x8(%eax),%eax
 8076d47:	89 85 50 fd ff ff    	mov    %eax,-0x2b0(%ebp)
 8076d4d:	8b 85 50 fd ff ff    	mov    -0x2b0(%ebp),%eax
 8076d53:	0f b7 00             	movzwl (%eax),%eax
 8076d56:	0f b7 c0             	movzwl %ax,%eax
 8076d59:	c1 e0 10             	shl    $0x10,%eax
 8076d5c:	09 c2                	or     %eax,%edx
 8076d5e:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d64:	89 10                	mov    %edx,(%eax)
 8076d66:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d6c:	8b 40 0c             	mov    0xc(%eax),%eax
 8076d6f:	8d 50 fe             	lea    -0x2(%eax),%edx
 8076d72:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d78:	89 50 0c             	mov    %edx,0xc(%eax)
 8076d7b:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d81:	8b 40 08             	mov    0x8(%eax),%eax
 8076d84:	8d 50 02             	lea    0x2(%eax),%edx
 8076d87:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 8076d8d:	89 50 08             	mov    %edx,0x8(%eax)
 8076d90:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 8076d96:	89 85 54 fd ff ff    	mov    %eax,-0x2ac(%ebp)
 8076d9c:	8b 85 44 fd ff ff    	mov    -0x2bc(%ebp),%eax
 8076da2:	89 85 58 fd ff ff    	mov    %eax,-0x2a8(%ebp)
 8076da8:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8076dab:	89 85 5c fd ff ff    	mov    %eax,-0x2a4(%ebp)
 8076db1:	8b 85 54 fd ff ff    	mov    -0x2ac(%ebp),%eax
 8076db7:	89 85 60 fd ff ff    	mov    %eax,-0x2a0(%ebp)
 8076dbd:	8b 85 60 fd ff ff    	mov    -0x2a0(%ebp),%eax
 8076dc3:	8b 10                	mov    (%eax),%edx
 8076dc5:	8b 85 60 fd ff ff    	mov    -0x2a0(%ebp),%eax
 8076dcb:	8b 40 04             	mov    0x4(%eax),%eax
 8076dce:	89 c1                	mov    %eax,%ecx
 8076dd0:	d3 ea                	shr    %cl,%edx
 8076dd2:	89 d0                	mov    %edx,%eax
 8076dd4:	89 c2                	mov    %eax,%edx
 8076dd6:	8b 85 58 fd ff ff    	mov    -0x2a8(%ebp),%eax
 8076ddc:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%ebp)
 8076de2:	8b 85 64 fd ff ff    	mov    -0x29c(%ebp),%eax
 8076de8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8076def:	21 c2                	and    %eax,%edx
 8076df1:	8b 85 5c fd ff ff    	mov    -0x2a4(%ebp),%eax
 8076df7:	89 10                	mov    %edx,(%eax)
 8076df9:	8b 85 54 fd ff ff    	mov    -0x2ac(%ebp),%eax
 8076dff:	89 85 68 fd ff ff    	mov    %eax,-0x298(%ebp)
 8076e05:	8b 85 58 fd ff ff    	mov    -0x2a8(%ebp),%eax
 8076e0b:	89 85 6c fd ff ff    	mov    %eax,-0x294(%ebp)
 8076e11:	8b 85 68 fd ff ff    	mov    -0x298(%ebp),%eax
 8076e17:	8b 50 04             	mov    0x4(%eax),%edx
 8076e1a:	8b 85 6c fd ff ff    	mov    -0x294(%ebp),%eax
 8076e20:	01 c2                	add    %eax,%edx
 8076e22:	8b 85 68 fd ff ff    	mov    -0x298(%ebp),%eax
 8076e28:	89 50 04             	mov    %edx,0x4(%eax)
 8076e2b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8076e2e:	e9 a6 02 00 00       	jmp    80770d9 <ProcessCommands+0x47f2>
 8076e33:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 8076e39:	89 85 70 fd ff ff    	mov    %eax,-0x290(%ebp)
 8076e3f:	c7 85 74 fd ff ff 10 	movl   $0x10,-0x28c(%ebp)
 8076e46:	00 00 00 
 8076e49:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e4f:	8b 40 04             	mov    0x4(%eax),%eax
 8076e52:	83 f8 0f             	cmp    $0xf,%eax
 8076e55:	0f 86 86 00 00 00    	jbe    8076ee1 <ProcessCommands+0x45fa>
 8076e5b:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e61:	8b 00                	mov    (%eax),%eax
 8076e63:	c1 e8 10             	shr    $0x10,%eax
 8076e66:	89 c2                	mov    %eax,%edx
 8076e68:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e6e:	89 10                	mov    %edx,(%eax)
 8076e70:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e76:	8b 40 04             	mov    0x4(%eax),%eax
 8076e79:	83 f0 10             	xor    $0x10,%eax
 8076e7c:	89 c2                	mov    %eax,%edx
 8076e7e:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e84:	89 50 04             	mov    %edx,0x4(%eax)
 8076e87:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e8d:	8b 10                	mov    (%eax),%edx
 8076e8f:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076e95:	8b 40 08             	mov    0x8(%eax),%eax
 8076e98:	89 85 78 fd ff ff    	mov    %eax,-0x288(%ebp)
 8076e9e:	8b 85 78 fd ff ff    	mov    -0x288(%ebp),%eax
 8076ea4:	0f b7 00             	movzwl (%eax),%eax
 8076ea7:	0f b7 c0             	movzwl %ax,%eax
 8076eaa:	c1 e0 10             	shl    $0x10,%eax
 8076ead:	09 c2                	or     %eax,%edx
 8076eaf:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076eb5:	89 10                	mov    %edx,(%eax)
 8076eb7:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076ebd:	8b 40 0c             	mov    0xc(%eax),%eax
 8076ec0:	8d 50 fe             	lea    -0x2(%eax),%edx
 8076ec3:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076ec9:	89 50 0c             	mov    %edx,0xc(%eax)
 8076ecc:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076ed2:	8b 40 08             	mov    0x8(%eax),%eax
 8076ed5:	8d 50 02             	lea    0x2(%eax),%edx
 8076ed8:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 8076ede:	89 50 08             	mov    %edx,0x8(%eax)
 8076ee1:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 8076ee7:	89 85 7c fd ff ff    	mov    %eax,-0x284(%ebp)
 8076eed:	c7 85 80 fd ff ff 10 	movl   $0x10,-0x280(%ebp)
 8076ef4:	00 00 00 
 8076ef7:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8076efd:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%ebp)
 8076f03:	8b 85 7c fd ff ff    	mov    -0x284(%ebp),%eax
 8076f09:	89 85 88 fd ff ff    	mov    %eax,-0x278(%ebp)
 8076f0f:	8b 85 88 fd ff ff    	mov    -0x278(%ebp),%eax
 8076f15:	8b 10                	mov    (%eax),%edx
 8076f17:	8b 85 88 fd ff ff    	mov    -0x278(%ebp),%eax
 8076f1d:	8b 40 04             	mov    0x4(%eax),%eax
 8076f20:	89 c1                	mov    %eax,%ecx
 8076f22:	d3 ea                	shr    %cl,%edx
 8076f24:	89 d0                	mov    %edx,%eax
 8076f26:	89 c2                	mov    %eax,%edx
 8076f28:	8b 85 80 fd ff ff    	mov    -0x280(%ebp),%eax
 8076f2e:	89 85 8c fd ff ff    	mov    %eax,-0x274(%ebp)
 8076f34:	8b 85 8c fd ff ff    	mov    -0x274(%ebp),%eax
 8076f3a:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8076f41:	21 c2                	and    %eax,%edx
 8076f43:	8b 85 84 fd ff ff    	mov    -0x27c(%ebp),%eax
 8076f49:	89 10                	mov    %edx,(%eax)
 8076f4b:	8b 85 7c fd ff ff    	mov    -0x284(%ebp),%eax
 8076f51:	89 85 90 fd ff ff    	mov    %eax,-0x270(%ebp)
 8076f57:	8b 85 80 fd ff ff    	mov    -0x280(%ebp),%eax
 8076f5d:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%ebp)
 8076f63:	8b 85 90 fd ff ff    	mov    -0x270(%ebp),%eax
 8076f69:	8b 50 04             	mov    0x4(%eax),%edx
 8076f6c:	8b 85 94 fd ff ff    	mov    -0x26c(%ebp),%eax
 8076f72:	01 c2                	add    %eax,%edx
 8076f74:	8b 85 90 fd ff ff    	mov    -0x270(%ebp),%eax
 8076f7a:	89 50 04             	mov    %edx,0x4(%eax)
 8076f7d:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 8076f83:	89 85 98 fd ff ff    	mov    %eax,-0x268(%ebp)
 8076f89:	c7 85 9c fd ff ff 10 	movl   $0x10,-0x264(%ebp)
 8076f90:	00 00 00 
 8076f93:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076f99:	8b 40 04             	mov    0x4(%eax),%eax
 8076f9c:	83 f8 0f             	cmp    $0xf,%eax
 8076f9f:	0f 86 86 00 00 00    	jbe    807702b <ProcessCommands+0x4744>
 8076fa5:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fab:	8b 00                	mov    (%eax),%eax
 8076fad:	c1 e8 10             	shr    $0x10,%eax
 8076fb0:	89 c2                	mov    %eax,%edx
 8076fb2:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fb8:	89 10                	mov    %edx,(%eax)
 8076fba:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fc0:	8b 40 04             	mov    0x4(%eax),%eax
 8076fc3:	83 f0 10             	xor    $0x10,%eax
 8076fc6:	89 c2                	mov    %eax,%edx
 8076fc8:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fce:	89 50 04             	mov    %edx,0x4(%eax)
 8076fd1:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fd7:	8b 10                	mov    (%eax),%edx
 8076fd9:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fdf:	8b 40 08             	mov    0x8(%eax),%eax
 8076fe2:	89 85 a0 fd ff ff    	mov    %eax,-0x260(%ebp)
 8076fe8:	8b 85 a0 fd ff ff    	mov    -0x260(%ebp),%eax
 8076fee:	0f b7 00             	movzwl (%eax),%eax
 8076ff1:	0f b7 c0             	movzwl %ax,%eax
 8076ff4:	c1 e0 10             	shl    $0x10,%eax
 8076ff7:	09 c2                	or     %eax,%edx
 8076ff9:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8076fff:	89 10                	mov    %edx,(%eax)
 8077001:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8077007:	8b 40 0c             	mov    0xc(%eax),%eax
 807700a:	8d 50 fe             	lea    -0x2(%eax),%edx
 807700d:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8077013:	89 50 0c             	mov    %edx,0xc(%eax)
 8077016:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807701c:	8b 40 08             	mov    0x8(%eax),%eax
 807701f:	8d 50 02             	lea    0x2(%eax),%edx
 8077022:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 8077028:	89 50 08             	mov    %edx,0x8(%eax)
 807702b:	8b 85 44 fd ff ff    	mov    -0x2bc(%ebp),%eax
 8077031:	8d 50 f0             	lea    -0x10(%eax),%edx
 8077034:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807703a:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%ebp)
 8077040:	89 95 a8 fd ff ff    	mov    %edx,-0x258(%ebp)
 8077046:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8077049:	89 85 ac fd ff ff    	mov    %eax,-0x254(%ebp)
 807704f:	8b 85 a4 fd ff ff    	mov    -0x25c(%ebp),%eax
 8077055:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807705b:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 8077061:	8b 10                	mov    (%eax),%edx
 8077063:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 8077069:	8b 40 04             	mov    0x4(%eax),%eax
 807706c:	89 c1                	mov    %eax,%ecx
 807706e:	d3 ea                	shr    %cl,%edx
 8077070:	89 d0                	mov    %edx,%eax
 8077072:	89 c2                	mov    %eax,%edx
 8077074:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 807707a:	89 85 b4 fd ff ff    	mov    %eax,-0x24c(%ebp)
 8077080:	8b 85 b4 fd ff ff    	mov    -0x24c(%ebp),%eax
 8077086:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807708d:	21 c2                	and    %eax,%edx
 807708f:	8b 85 ac fd ff ff    	mov    -0x254(%ebp),%eax
 8077095:	89 10                	mov    %edx,(%eax)
 8077097:	8b 85 a4 fd ff ff    	mov    -0x25c(%ebp),%eax
 807709d:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 80770a3:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 80770a9:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 80770af:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 80770b5:	8b 50 04             	mov    0x4(%eax),%edx
 80770b8:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 80770be:	01 c2                	add    %eax,%edx
 80770c0:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 80770c6:	89 50 04             	mov    %edx,0x4(%eax)
 80770c9:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80770cc:	c1 e0 10             	shl    $0x10,%eax
 80770cf:	89 c2                	mov    %eax,%edx
 80770d1:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 80770d7:	09 d0                	or     %edx,%eax
 80770d9:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80770dc:	e9 a1 02 00 00       	jmp    8077382 <ProcessCommands+0x4a9b>
 80770e1:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 80770e7:	8b 95 90 fc ff ff    	mov    -0x370(%ebp),%edx
 80770ed:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 80770f1:	0f b6 c0             	movzbl %al,%eax
 80770f4:	8b 95 8c fc ff ff    	mov    -0x374(%ebp),%edx
 80770fa:	89 95 c0 fd ff ff    	mov    %edx,-0x240(%ebp)
 8077100:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%ebp)
 8077106:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8077109:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 807710f:	83 bd c4 fd ff ff 00 	cmpl   $0x0,-0x23c(%ebp)
 8077116:	0f 84 d4 01 00 00    	je     80772f0 <ProcessCommands+0x4a09>
 807711c:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8077122:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 8077128:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 807712e:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 8077134:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807713a:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 8077140:	83 bd d0 fd ff ff 18 	cmpl   $0x18,-0x230(%ebp)
 8077147:	0f 86 b0 00 00 00    	jbe    80771fd <ProcessCommands+0x4916>
 807714d:	e9 7a 01 00 00       	jmp    80772cc <ProcessCommands+0x49e5>
 8077152:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 8077158:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 807715e:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 8077164:	8b 40 0c             	mov    0xc(%eax),%eax
 8077167:	85 c0                	test   %eax,%eax
 8077169:	75 07                	jne    8077172 <ProcessCommands+0x488b>
 807716b:	b8 00 00 00 00       	mov    $0x0,%eax
 8077170:	eb 7d                	jmp    80771ef <ProcessCommands+0x4908>
 8077172:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 8077178:	8b 00                	mov    (%eax),%eax
 807717a:	c1 e8 08             	shr    $0x8,%eax
 807717d:	89 c2                	mov    %eax,%edx
 807717f:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 8077185:	89 10                	mov    %edx,(%eax)
 8077187:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807718d:	8b 10                	mov    (%eax),%edx
 807718f:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 8077195:	8b 40 08             	mov    0x8(%eax),%eax
 8077198:	0f b6 00             	movzbl (%eax),%eax
 807719b:	0f b6 c0             	movzbl %al,%eax
 807719e:	c1 e0 18             	shl    $0x18,%eax
 80771a1:	09 c2                	or     %eax,%edx
 80771a3:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771a9:	89 10                	mov    %edx,(%eax)
 80771ab:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771b1:	8b 40 04             	mov    0x4(%eax),%eax
 80771b4:	8d 50 f8             	lea    -0x8(%eax),%edx
 80771b7:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771bd:	89 50 04             	mov    %edx,0x4(%eax)
 80771c0:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771c6:	8b 40 0c             	mov    0xc(%eax),%eax
 80771c9:	8d 50 ff             	lea    -0x1(%eax),%edx
 80771cc:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771d2:	89 50 0c             	mov    %edx,0xc(%eax)
 80771d5:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771db:	8b 40 08             	mov    0x8(%eax),%eax
 80771de:	8d 50 01             	lea    0x1(%eax),%edx
 80771e1:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 80771e7:	89 50 08             	mov    %edx,0x8(%eax)
 80771ea:	b8 01 00 00 00       	mov    $0x1,%eax
 80771ef:	85 c0                	test   %eax,%eax
 80771f1:	75 0a                	jne    80771fd <ProcessCommands+0x4916>
 80771f3:	b8 00 00 00 00       	mov    $0x0,%eax
 80771f8:	e9 04 01 00 00       	jmp    8077301 <ProcessCommands+0x4a1a>
 80771fd:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 8077203:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 8077209:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 807720f:	8b 40 04             	mov    0x4(%eax),%eax
 8077212:	ba 20 00 00 00       	mov    $0x20,%edx
 8077217:	29 c2                	sub    %eax,%edx
 8077219:	89 d0                	mov    %edx,%eax
 807721b:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%ebp)
 8077221:	0f 87 2b ff ff ff    	ja     8077152 <ProcessCommands+0x486b>
 8077227:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807722d:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 8077233:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 8077239:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 807723f:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 8077245:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 807724b:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 8077251:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 8077257:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807725d:	8b 10                	mov    (%eax),%edx
 807725f:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 8077265:	8b 40 04             	mov    0x4(%eax),%eax
 8077268:	89 c1                	mov    %eax,%ecx
 807726a:	d3 ea                	shr    %cl,%edx
 807726c:	89 d0                	mov    %edx,%eax
 807726e:	89 c2                	mov    %eax,%edx
 8077270:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 8077276:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 807727c:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 8077282:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8077289:	21 c2                	and    %eax,%edx
 807728b:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 8077291:	89 10                	mov    %edx,(%eax)
 8077293:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 8077299:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 807729f:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 80772a5:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 80772ab:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 80772b1:	8b 50 04             	mov    0x4(%eax),%edx
 80772b4:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 80772ba:	01 c2                	add    %eax,%edx
 80772bc:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 80772c2:	89 50 04             	mov    %edx,0x4(%eax)
 80772c5:	b8 01 00 00 00       	mov    $0x1,%eax
 80772ca:	eb 35                	jmp    8077301 <ProcessCommands+0x4a1a>
 80772cc:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 80772d2:	89 44 24 08          	mov    %eax,0x8(%esp)
 80772d6:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 80772dc:	89 44 24 04          	mov    %eax,0x4(%esp)
 80772e0:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 80772e6:	89 04 24             	mov    %eax,(%esp)
 80772e9:	e8 52 ac 00 00       	call   8081f40 <BrotliSafeReadBits32Slow>
 80772ee:	eb 11                	jmp    8077301 <ProcessCommands+0x4a1a>
 80772f0:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 80772f6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 80772fc:	b8 01 00 00 00       	mov    $0x1,%eax
 8077301:	85 c0                	test   %eax,%eax
 8077303:	75 7d                	jne    8077382 <ProcessCommands+0x4a9b>
 8077305:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807730b:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 8077311:	8d 50 01             	lea    0x1(%eax),%edx
 8077314:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807731a:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 8077320:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 8077326:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 807732c:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807732f:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 8077335:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807733b:	8b 10                	mov    (%eax),%edx
 807733d:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8077343:	89 10                	mov    %edx,(%eax)
 8077345:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807734b:	8b 50 04             	mov    0x4(%eax),%edx
 807734e:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8077354:	89 50 04             	mov    %edx,0x4(%eax)
 8077357:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807735d:	8b 50 08             	mov    0x8(%eax),%edx
 8077360:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8077366:	89 50 08             	mov    %edx,0x8(%eax)
 8077369:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807736f:	8b 50 0c             	mov    0xc(%eax),%edx
 8077372:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 8077378:	89 50 0c             	mov    %edx,0xc(%eax)
 807737b:	b8 00 00 00 00       	mov    $0x0,%eax
 8077380:	eb 3f                	jmp    80773c1 <ProcessCommands+0x4ada>
 8077382:	8b 95 f4 f5 ff ff    	mov    -0xa0c(%ebp),%edx
 8077388:	8b 85 90 fc ff ff    	mov    -0x370(%ebp),%eax
 807738e:	81 c2 88 00 00 00    	add    $0x88,%edx
 8077394:	8b 14 90             	mov    (%eax,%edx,4),%edx
 8077397:	8b 75 e0             	mov    -0x20(%ebp),%esi
 807739a:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 80773a0:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 80773a6:	89 c1                	mov    %eax,%ecx
 80773a8:	d3 e6                	shl    %cl,%esi
 80773aa:	89 f0                	mov    %esi,%eax
 80773ac:	01 d0                	add    %edx,%eax
 80773ae:	89 c2                	mov    %eax,%edx
 80773b0:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 80773b6:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 80773bc:	b8 01 00 00 00       	mov    $0x1,%eax
 80773c1:	85 c0                	test   %eax,%eax
 80773c3:	0f 85 6a 0e 00 00    	jne    8078233 <ProcessCommands+0x594c>
 80773c9:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 80773d0:	00 00 00 
 80773d3:	e9 81 13 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 80773d8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80773de:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 80773e4:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80773ea:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 80773f0:	c7 85 0c fe ff ff 00 	movl   $0x0,-0x1f4(%ebp)
 80773f7:	00 00 00 
 80773fa:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 8077400:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 8077406:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807740c:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 8077412:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8077418:	05 6c 02 00 00       	add    $0x26c,%eax
 807741d:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 8077423:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8077429:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx
 807742f:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8077435:	0f b6 80 00 01 00 00 	movzbl 0x100(%eax),%eax
 807743c:	0f b6 c0             	movzbl %al,%eax
 807743f:	c1 e0 02             	shl    $0x2,%eax
 8077442:	01 d0                	add    %edx,%eax
 8077444:	8b 00                	mov    (%eax),%eax
 8077446:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%ebp)
 807744c:	83 bd 0c fe ff ff 00 	cmpl   $0x0,-0x1f4(%ebp)
 8077453:	0f 85 09 02 00 00    	jne    8077662 <ProcessCommands+0x4d7b>
 8077459:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 807745f:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 8077465:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807746b:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 8077471:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 8077477:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 807747d:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 8077483:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 8077489:	c7 85 30 fe ff ff 10 	movl   $0x10,-0x1d0(%ebp)
 8077490:	00 00 00 
 8077493:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 8077499:	8b 40 04             	mov    0x4(%eax),%eax
 807749c:	83 f8 0f             	cmp    $0xf,%eax
 807749f:	0f 86 86 00 00 00    	jbe    807752b <ProcessCommands+0x4c44>
 80774a5:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774ab:	8b 00                	mov    (%eax),%eax
 80774ad:	c1 e8 10             	shr    $0x10,%eax
 80774b0:	89 c2                	mov    %eax,%edx
 80774b2:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774b8:	89 10                	mov    %edx,(%eax)
 80774ba:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774c0:	8b 40 04             	mov    0x4(%eax),%eax
 80774c3:	83 f0 10             	xor    $0x10,%eax
 80774c6:	89 c2                	mov    %eax,%edx
 80774c8:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774ce:	89 50 04             	mov    %edx,0x4(%eax)
 80774d1:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774d7:	8b 10                	mov    (%eax),%edx
 80774d9:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774df:	8b 40 08             	mov    0x8(%eax),%eax
 80774e2:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 80774e8:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 80774ee:	0f b7 00             	movzwl (%eax),%eax
 80774f1:	0f b7 c0             	movzwl %ax,%eax
 80774f4:	c1 e0 10             	shl    $0x10,%eax
 80774f7:	09 c2                	or     %eax,%edx
 80774f9:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 80774ff:	89 10                	mov    %edx,(%eax)
 8077501:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 8077507:	8b 40 0c             	mov    0xc(%eax),%eax
 807750a:	8d 50 fe             	lea    -0x2(%eax),%edx
 807750d:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 8077513:	89 50 0c             	mov    %edx,0xc(%eax)
 8077516:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807751c:	8b 40 08             	mov    0x8(%eax),%eax
 807751f:	8d 50 02             	lea    0x2(%eax),%edx
 8077522:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 8077528:	89 50 08             	mov    %edx,0x8(%eax)
 807752b:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 8077531:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 8077537:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 807753d:	8b 10                	mov    (%eax),%edx
 807753f:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 8077545:	8b 40 04             	mov    0x4(%eax),%eax
 8077548:	89 c1                	mov    %eax,%ecx
 807754a:	d3 ea                	shr    %cl,%edx
 807754c:	89 d0                	mov    %edx,%eax
 807754e:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 8077554:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 807755a:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 8077560:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 8077566:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%ebp)
 807756c:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 8077572:	0f b6 c0             	movzbl %al,%eax
 8077575:	c1 e0 02             	shl    $0x2,%eax
 8077578:	01 85 40 fe ff ff    	add    %eax,-0x1c0(%ebp)
 807757e:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8077584:	0f b6 00             	movzbl (%eax),%eax
 8077587:	3c 08                	cmp    $0x8,%al
 8077589:	0f 86 83 00 00 00    	jbe    8077612 <ProcessCommands+0x4d2b>
 807758f:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8077595:	0f b6 00             	movzbl (%eax),%eax
 8077598:	0f b6 c0             	movzbl %al,%eax
 807759b:	83 e8 08             	sub    $0x8,%eax
 807759e:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 80775a4:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 80775aa:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 80775b0:	c7 85 50 fe ff ff 08 	movl   $0x8,-0x1b0(%ebp)
 80775b7:	00 00 00 
 80775ba:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 80775c0:	8b 50 04             	mov    0x4(%eax),%edx
 80775c3:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 80775c9:	01 c2                	add    %eax,%edx
 80775cb:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 80775d1:	89 50 04             	mov    %edx,0x4(%eax)
 80775d4:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 80775da:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80775de:	0f b7 d0             	movzwl %ax,%edx
 80775e1:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 80775e7:	c1 e8 08             	shr    $0x8,%eax
 80775ea:	89 c1                	mov    %eax,%ecx
 80775ec:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 80775f2:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 80775f8:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 80775fe:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8077605:	21 c8                	and    %ecx,%eax
 8077607:	01 d0                	add    %edx,%eax
 8077609:	c1 e0 02             	shl    $0x2,%eax
 807760c:	01 85 40 fe ff ff    	add    %eax,-0x1c0(%ebp)
 8077612:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8077618:	0f b6 00             	movzbl (%eax),%eax
 807761b:	0f b6 c0             	movzbl %al,%eax
 807761e:	8b 95 44 fe ff ff    	mov    -0x1bc(%ebp),%edx
 8077624:	89 95 58 fe ff ff    	mov    %edx,-0x1a8(%ebp)
 807762a:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 8077630:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 8077636:	8b 50 04             	mov    0x4(%eax),%edx
 8077639:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 807763f:	01 c2                	add    %eax,%edx
 8077641:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 8077647:	89 50 04             	mov    %edx,0x4(%eax)
 807764a:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 8077650:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8077654:	0f b7 c0             	movzwl %ax,%eax
 8077657:	89 85 f4 f5 ff ff    	mov    %eax,-0xa0c(%ebp)
 807765d:	e9 19 03 00 00       	jmp    807797b <ProcessCommands+0x5094>
 8077662:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 8077668:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 807766e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8077671:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%ebp)
 8077677:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807767d:	8b 10                	mov    (%eax),%edx
 807767f:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 8077685:	89 10                	mov    %edx,(%eax)
 8077687:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807768d:	8b 50 04             	mov    0x4(%eax),%edx
 8077690:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 8077696:	89 50 04             	mov    %edx,0x4(%eax)
 8077699:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807769f:	8b 50 08             	mov    0x8(%eax),%edx
 80776a2:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 80776a8:	89 50 08             	mov    %edx,0x8(%eax)
 80776ab:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 80776b1:	8b 50 0c             	mov    0xc(%eax),%edx
 80776b4:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 80776ba:	89 50 0c             	mov    %edx,0xc(%eax)
 80776bd:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 80776c3:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 80776c9:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 80776cf:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 80776d5:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 80776db:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 80776e1:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 80776e7:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 80776ed:	c7 85 78 fe ff ff 0f 	movl   $0xf,-0x188(%ebp)
 80776f4:	00 00 00 
 80776f7:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80776fa:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 8077700:	e9 a8 00 00 00       	jmp    80777ad <ProcessCommands+0x4ec6>
 8077705:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807770b:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 8077711:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077717:	8b 40 0c             	mov    0xc(%eax),%eax
 807771a:	85 c0                	test   %eax,%eax
 807771c:	75 07                	jne    8077725 <ProcessCommands+0x4e3e>
 807771e:	b8 00 00 00 00       	mov    $0x0,%eax
 8077723:	eb 7d                	jmp    80777a2 <ProcessCommands+0x4ebb>
 8077725:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807772b:	8b 00                	mov    (%eax),%eax
 807772d:	c1 e8 08             	shr    $0x8,%eax
 8077730:	89 c2                	mov    %eax,%edx
 8077732:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077738:	89 10                	mov    %edx,(%eax)
 807773a:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077740:	8b 10                	mov    (%eax),%edx
 8077742:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077748:	8b 40 08             	mov    0x8(%eax),%eax
 807774b:	0f b6 00             	movzbl (%eax),%eax
 807774e:	0f b6 c0             	movzbl %al,%eax
 8077751:	c1 e0 18             	shl    $0x18,%eax
 8077754:	09 c2                	or     %eax,%edx
 8077756:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807775c:	89 10                	mov    %edx,(%eax)
 807775e:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077764:	8b 40 04             	mov    0x4(%eax),%eax
 8077767:	8d 50 f8             	lea    -0x8(%eax),%edx
 807776a:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077770:	89 50 04             	mov    %edx,0x4(%eax)
 8077773:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077779:	8b 40 0c             	mov    0xc(%eax),%eax
 807777c:	8d 50 ff             	lea    -0x1(%eax),%edx
 807777f:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 8077785:	89 50 0c             	mov    %edx,0xc(%eax)
 8077788:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807778e:	8b 40 08             	mov    0x8(%eax),%eax
 8077791:	8d 50 01             	lea    0x1(%eax),%edx
 8077794:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807779a:	89 50 08             	mov    %edx,0x8(%eax)
 807779d:	b8 01 00 00 00       	mov    $0x1,%eax
 80777a2:	85 c0                	test   %eax,%eax
 80777a4:	75 07                	jne    80777ad <ProcessCommands+0x4ec6>
 80777a6:	b8 00 00 00 00       	mov    $0x0,%eax
 80777ab:	eb 77                	jmp    8077824 <ProcessCommands+0x4f3d>
 80777ad:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 80777b3:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 80777b9:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 80777bf:	8b 40 04             	mov    0x4(%eax),%eax
 80777c2:	ba 20 00 00 00       	mov    $0x20,%edx
 80777c7:	29 c2                	sub    %eax,%edx
 80777c9:	89 d0                	mov    %edx,%eax
 80777cb:	39 85 78 fe ff ff    	cmp    %eax,-0x188(%ebp)
 80777d1:	0f 87 2e ff ff ff    	ja     8077705 <ProcessCommands+0x4e1e>
 80777d7:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 80777dd:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 80777e3:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 80777e9:	8b 10                	mov    (%eax),%edx
 80777eb:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 80777f1:	8b 40 04             	mov    0x4(%eax),%eax
 80777f4:	89 c1                	mov    %eax,%ecx
 80777f6:	d3 ea                	shr    %cl,%edx
 80777f8:	89 d0                	mov    %edx,%eax
 80777fa:	89 c2                	mov    %eax,%edx
 80777fc:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 8077802:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 8077808:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 807780e:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8077815:	21 c2                	and    %eax,%edx
 8077817:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807781d:	89 10                	mov    %edx,(%eax)
 807781f:	b8 01 00 00 00       	mov    $0x1,%eax
 8077824:	85 c0                	test   %eax,%eax
 8077826:	0f 95 c0             	setne  %al
 8077829:	0f b6 c0             	movzbl %al,%eax
 807782c:	85 c0                	test   %eax,%eax
 807782e:	0f 84 1d 01 00 00    	je     8077951 <ProcessCommands+0x506a>
 8077834:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8077837:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 807783d:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 8077843:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 8077849:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 807784f:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 8077855:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807785b:	0f b6 c0             	movzbl %al,%eax
 807785e:	c1 e0 02             	shl    $0x2,%eax
 8077861:	01 85 94 fe ff ff    	add    %eax,-0x16c(%ebp)
 8077867:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807786d:	0f b6 00             	movzbl (%eax),%eax
 8077870:	3c 08                	cmp    $0x8,%al
 8077872:	0f 86 83 00 00 00    	jbe    80778fb <ProcessCommands+0x5014>
 8077878:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807787e:	0f b6 00             	movzbl (%eax),%eax
 8077881:	0f b6 c0             	movzbl %al,%eax
 8077884:	83 e8 08             	sub    $0x8,%eax
 8077887:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 807788d:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 8077893:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 8077899:	c7 85 a4 fe ff ff 08 	movl   $0x8,-0x15c(%ebp)
 80778a0:	00 00 00 
 80778a3:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 80778a9:	8b 50 04             	mov    0x4(%eax),%edx
 80778ac:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 80778b2:	01 c2                	add    %eax,%edx
 80778b4:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 80778ba:	89 50 04             	mov    %edx,0x4(%eax)
 80778bd:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 80778c3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 80778c7:	0f b7 d0             	movzwl %ax,%edx
 80778ca:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 80778d0:	c1 e8 08             	shr    $0x8,%eax
 80778d3:	89 c1                	mov    %eax,%ecx
 80778d5:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 80778db:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 80778e1:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 80778e7:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80778ee:	21 c8                	and    %ecx,%eax
 80778f0:	01 d0                	add    %edx,%eax
 80778f2:	c1 e0 02             	shl    $0x2,%eax
 80778f5:	01 85 94 fe ff ff    	add    %eax,-0x16c(%ebp)
 80778fb:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 8077901:	0f b6 00             	movzbl (%eax),%eax
 8077904:	0f b6 c0             	movzbl %al,%eax
 8077907:	8b 95 98 fe ff ff    	mov    -0x168(%ebp),%edx
 807790d:	89 95 ac fe ff ff    	mov    %edx,-0x154(%ebp)
 8077913:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 8077919:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807791f:	8b 50 04             	mov    0x4(%eax),%edx
 8077922:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
 8077928:	01 c2                	add    %eax,%edx
 807792a:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 8077930:	89 50 04             	mov    %edx,0x4(%eax)
 8077933:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 8077939:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807793d:	0f b7 c0             	movzwl %ax,%eax
 8077940:	89 c2                	mov    %eax,%edx
 8077942:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8077948:	89 10                	mov    %edx,(%eax)
 807794a:	b8 01 00 00 00       	mov    $0x1,%eax
 807794f:	eb 22                	jmp    8077973 <ProcessCommands+0x508c>
 8077951:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 8077957:	89 44 24 08          	mov    %eax,0x8(%esp)
 807795b:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 8077961:	89 44 24 04          	mov    %eax,0x4(%esp)
 8077965:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 807796b:	89 04 24             	mov    %eax,(%esp)
 807796e:	e8 59 10 ff ff       	call   80689cc <SafeDecodeSymbol>
 8077973:	85 c0                	test   %eax,%eax
 8077975:	0f 84 b8 08 00 00    	je     8078233 <ProcessCommands+0x594c>
 807797b:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8077981:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 8077987:	8d 50 ff             	lea    -0x1(%eax),%edx
 807798a:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8077990:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 8077996:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807799c:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)
 80779a3:	00 00 00 
 80779a6:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 80779ac:	83 e0 f0             	and    $0xfffffff0,%eax
 80779af:	85 c0                	test   %eax,%eax
 80779b1:	0f 85 8a 01 00 00    	jne    8077b41 <ProcessCommands+0x525a>
 80779b7:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 80779bd:	89 c2                	mov    %eax,%edx
 80779bf:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 80779c5:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 80779cb:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 80779d1:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 80779d7:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 80779dd:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 80779e3:	83 e8 03             	sub    $0x3,%eax
 80779e6:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 80779ec:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 80779f2:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 80779f8:	83 f8 03             	cmp    $0x3,%eax
 80779fb:	7f 73                	jg     8077a70 <ProcessCommands+0x5189>
 80779fd:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a03:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8077a09:	ba 01 00 00 00       	mov    $0x1,%edx
 8077a0e:	89 c1                	mov    %eax,%ecx
 8077a10:	d3 fa                	sar    %cl,%edx
 8077a12:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a18:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 8077a1e:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a24:	8b 40 44             	mov    0x44(%eax),%eax
 8077a27:	2b 85 b8 fe ff ff    	sub    -0x148(%ebp),%eax
 8077a2d:	83 e0 03             	and    $0x3,%eax
 8077a30:	89 c2                	mov    %eax,%edx
 8077a32:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a38:	83 c2 10             	add    $0x10,%edx
 8077a3b:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 8077a3f:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a45:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8077a4b:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a51:	8b 50 44             	mov    0x44(%eax),%edx
 8077a54:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a5a:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8077a60:	29 c2                	sub    %eax,%edx
 8077a62:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a68:	89 50 44             	mov    %edx,0x44(%eax)
 8077a6b:	e9 c3 07 00 00       	jmp    8078233 <ProcessCommands+0x594c>
 8077a70:	c7 85 bc fe ff ff 03 	movl   $0x3,-0x144(%ebp)
 8077a77:	00 00 00 
 8077a7a:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a80:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8077a86:	83 e8 0a             	sub    $0xa,%eax
 8077a89:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 8077a8f:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077a95:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8077a9b:	83 f8 09             	cmp    $0x9,%eax
 8077a9e:	7f 17                	jg     8077ab7 <ProcessCommands+0x51d0>
 8077aa0:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077aa6:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8077aac:	83 e8 04             	sub    $0x4,%eax
 8077aaf:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 8077ab5:	eb 0a                	jmp    8077ac1 <ProcessCommands+0x51da>
 8077ab7:	c7 85 bc fe ff ff 02 	movl   $0x2,-0x144(%ebp)
 8077abe:	00 00 00 
 8077ac1:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 8077ac7:	c1 e0 02             	shl    $0x2,%eax
 8077aca:	ba 42 51 60 00       	mov    $0x605142,%edx
 8077acf:	89 c1                	mov    %eax,%ecx
 8077ad1:	d3 fa                	sar    %cl,%edx
 8077ad3:	89 d0                	mov    %edx,%eax
 8077ad5:	83 e0 0f             	and    $0xf,%eax
 8077ad8:	83 e8 03             	sub    $0x3,%eax
 8077adb:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 8077ae1:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077ae7:	8b 50 44             	mov    0x44(%eax),%edx
 8077aea:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 8077af0:	01 d0                	add    %edx,%eax
 8077af2:	83 e0 03             	and    $0x3,%eax
 8077af5:	89 c2                	mov    %eax,%edx
 8077af7:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077afd:	83 c2 10             	add    $0x10,%edx
 8077b00:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 8077b04:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 8077b0a:	01 c2                	add    %eax,%edx
 8077b0c:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077b12:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8077b18:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077b1e:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 8077b24:	85 c0                	test   %eax,%eax
 8077b26:	0f 8f 07 07 00 00    	jg     8078233 <ProcessCommands+0x594c>
 8077b2c:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 8077b32:	c7 80 08 01 00 00 ff 	movl   $0x7fffffff,0x108(%eax)
 8077b39:	ff ff 7f 
 8077b3c:	e9 f2 06 00 00       	jmp    8078233 <ProcessCommands+0x594c>
 8077b41:	83 bd 0c fe ff ff 00 	cmpl   $0x0,-0x1f4(%ebp)
 8077b48:	0f 85 33 04 00 00    	jne    8077f81 <ProcessCommands+0x569a>
 8077b4e:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8077b54:	8b 95 18 fe ff ff    	mov    -0x1e8(%ebp),%edx
 8077b5a:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 8077b5e:	0f b6 c0             	movzbl %al,%eax
 8077b61:	8b 95 14 fe ff ff    	mov    -0x1ec(%ebp),%edx
 8077b67:	89 95 c8 fe ff ff    	mov    %edx,-0x138(%ebp)
 8077b6d:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 8077b73:	83 bd cc fe ff ff 10 	cmpl   $0x10,-0x134(%ebp)
 8077b7a:	0f 87 53 01 00 00    	ja     8077cd3 <ProcessCommands+0x53ec>
 8077b80:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8077b86:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 8077b8c:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 8077b92:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 8077b98:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077b9e:	8b 40 04             	mov    0x4(%eax),%eax
 8077ba1:	83 f8 0f             	cmp    $0xf,%eax
 8077ba4:	0f 86 86 00 00 00    	jbe    8077c30 <ProcessCommands+0x5349>
 8077baa:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077bb0:	8b 00                	mov    (%eax),%eax
 8077bb2:	c1 e8 10             	shr    $0x10,%eax
 8077bb5:	89 c2                	mov    %eax,%edx
 8077bb7:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077bbd:	89 10                	mov    %edx,(%eax)
 8077bbf:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077bc5:	8b 40 04             	mov    0x4(%eax),%eax
 8077bc8:	83 f0 10             	xor    $0x10,%eax
 8077bcb:	89 c2                	mov    %eax,%edx
 8077bcd:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077bd3:	89 50 04             	mov    %edx,0x4(%eax)
 8077bd6:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077bdc:	8b 10                	mov    (%eax),%edx
 8077bde:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077be4:	8b 40 08             	mov    0x8(%eax),%eax
 8077be7:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 8077bed:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 8077bf3:	0f b7 00             	movzwl (%eax),%eax
 8077bf6:	0f b7 c0             	movzwl %ax,%eax
 8077bf9:	c1 e0 10             	shl    $0x10,%eax
 8077bfc:	09 c2                	or     %eax,%edx
 8077bfe:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077c04:	89 10                	mov    %edx,(%eax)
 8077c06:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077c0c:	8b 40 0c             	mov    0xc(%eax),%eax
 8077c0f:	8d 50 fe             	lea    -0x2(%eax),%edx
 8077c12:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077c18:	89 50 0c             	mov    %edx,0xc(%eax)
 8077c1b:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077c21:	8b 40 08             	mov    0x8(%eax),%eax
 8077c24:	8d 50 02             	lea    0x2(%eax),%edx
 8077c27:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 8077c2d:	89 50 08             	mov    %edx,0x8(%eax)
 8077c30:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8077c36:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 8077c3c:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 8077c42:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 8077c48:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8077c4b:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 8077c51:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 8077c57:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 8077c5d:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8077c63:	8b 10                	mov    (%eax),%edx
 8077c65:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 8077c6b:	8b 40 04             	mov    0x4(%eax),%eax
 8077c6e:	89 c1                	mov    %eax,%ecx
 8077c70:	d3 ea                	shr    %cl,%edx
 8077c72:	89 d0                	mov    %edx,%eax
 8077c74:	89 c2                	mov    %eax,%edx
 8077c76:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 8077c7c:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 8077c82:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 8077c88:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8077c8f:	21 c2                	and    %eax,%edx
 8077c91:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 8077c97:	89 10                	mov    %edx,(%eax)
 8077c99:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 8077c9f:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 8077ca5:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 8077cab:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 8077cb1:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 8077cb7:	8b 50 04             	mov    0x4(%eax),%edx
 8077cba:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 8077cc0:	01 c2                	add    %eax,%edx
 8077cc2:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 8077cc8:	89 50 04             	mov    %edx,0x4(%eax)
 8077ccb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8077cce:	e9 a6 02 00 00       	jmp    8077f79 <ProcessCommands+0x5692>
 8077cd3:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8077cd9:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 8077cdf:	c7 85 fc fe ff ff 10 	movl   $0x10,-0x104(%ebp)
 8077ce6:	00 00 00 
 8077ce9:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077cef:	8b 40 04             	mov    0x4(%eax),%eax
 8077cf2:	83 f8 0f             	cmp    $0xf,%eax
 8077cf5:	0f 86 86 00 00 00    	jbe    8077d81 <ProcessCommands+0x549a>
 8077cfb:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d01:	8b 00                	mov    (%eax),%eax
 8077d03:	c1 e8 10             	shr    $0x10,%eax
 8077d06:	89 c2                	mov    %eax,%edx
 8077d08:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d0e:	89 10                	mov    %edx,(%eax)
 8077d10:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d16:	8b 40 04             	mov    0x4(%eax),%eax
 8077d19:	83 f0 10             	xor    $0x10,%eax
 8077d1c:	89 c2                	mov    %eax,%edx
 8077d1e:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d24:	89 50 04             	mov    %edx,0x4(%eax)
 8077d27:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d2d:	8b 10                	mov    (%eax),%edx
 8077d2f:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d35:	8b 40 08             	mov    0x8(%eax),%eax
 8077d38:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 8077d3e:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 8077d44:	0f b7 00             	movzwl (%eax),%eax
 8077d47:	0f b7 c0             	movzwl %ax,%eax
 8077d4a:	c1 e0 10             	shl    $0x10,%eax
 8077d4d:	09 c2                	or     %eax,%edx
 8077d4f:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d55:	89 10                	mov    %edx,(%eax)
 8077d57:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d5d:	8b 40 0c             	mov    0xc(%eax),%eax
 8077d60:	8d 50 fe             	lea    -0x2(%eax),%edx
 8077d63:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d69:	89 50 0c             	mov    %edx,0xc(%eax)
 8077d6c:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d72:	8b 40 08             	mov    0x8(%eax),%eax
 8077d75:	8d 50 02             	lea    0x2(%eax),%edx
 8077d78:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 8077d7e:	89 50 08             	mov    %edx,0x8(%eax)
 8077d81:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8077d87:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 8077d8d:	c7 85 08 ff ff ff 10 	movl   $0x10,-0xf8(%ebp)
 8077d94:	00 00 00 
 8077d97:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8077d9d:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 8077da3:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8077da9:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 8077daf:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 8077db5:	8b 10                	mov    (%eax),%edx
 8077db7:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 8077dbd:	8b 40 04             	mov    0x4(%eax),%eax
 8077dc0:	89 c1                	mov    %eax,%ecx
 8077dc2:	d3 ea                	shr    %cl,%edx
 8077dc4:	89 d0                	mov    %edx,%eax
 8077dc6:	89 c2                	mov    %eax,%edx
 8077dc8:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 8077dce:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 8077dd4:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 8077dda:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8077de1:	21 c2                	and    %eax,%edx
 8077de3:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 8077de9:	89 10                	mov    %edx,(%eax)
 8077deb:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 8077df1:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 8077df7:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 8077dfd:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 8077e03:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 8077e09:	8b 50 04             	mov    0x4(%eax),%edx
 8077e0c:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 8077e12:	01 c2                	add    %eax,%edx
 8077e14:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 8077e1a:	89 50 04             	mov    %edx,0x4(%eax)
 8077e1d:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8077e23:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 8077e29:	c7 85 24 ff ff ff 10 	movl   $0x10,-0xdc(%ebp)
 8077e30:	00 00 00 
 8077e33:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e39:	8b 40 04             	mov    0x4(%eax),%eax
 8077e3c:	83 f8 0f             	cmp    $0xf,%eax
 8077e3f:	0f 86 86 00 00 00    	jbe    8077ecb <ProcessCommands+0x55e4>
 8077e45:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e4b:	8b 00                	mov    (%eax),%eax
 8077e4d:	c1 e8 10             	shr    $0x10,%eax
 8077e50:	89 c2                	mov    %eax,%edx
 8077e52:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e58:	89 10                	mov    %edx,(%eax)
 8077e5a:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e60:	8b 40 04             	mov    0x4(%eax),%eax
 8077e63:	83 f0 10             	xor    $0x10,%eax
 8077e66:	89 c2                	mov    %eax,%edx
 8077e68:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e6e:	89 50 04             	mov    %edx,0x4(%eax)
 8077e71:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e77:	8b 10                	mov    (%eax),%edx
 8077e79:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e7f:	8b 40 08             	mov    0x8(%eax),%eax
 8077e82:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 8077e88:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 8077e8e:	0f b7 00             	movzwl (%eax),%eax
 8077e91:	0f b7 c0             	movzwl %ax,%eax
 8077e94:	c1 e0 10             	shl    $0x10,%eax
 8077e97:	09 c2                	or     %eax,%edx
 8077e99:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077e9f:	89 10                	mov    %edx,(%eax)
 8077ea1:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077ea7:	8b 40 0c             	mov    0xc(%eax),%eax
 8077eaa:	8d 50 fe             	lea    -0x2(%eax),%edx
 8077ead:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077eb3:	89 50 0c             	mov    %edx,0xc(%eax)
 8077eb6:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077ebc:	8b 40 08             	mov    0x8(%eax),%eax
 8077ebf:	8d 50 02             	lea    0x2(%eax),%edx
 8077ec2:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 8077ec8:	89 50 08             	mov    %edx,0x8(%eax)
 8077ecb:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 8077ed1:	8d 50 f0             	lea    -0x10(%eax),%edx
 8077ed4:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 8077eda:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 8077ee0:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%ebp)
 8077ee6:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8077ee9:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 8077eef:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 8077ef5:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 8077efb:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 8077f01:	8b 10                	mov    (%eax),%edx
 8077f03:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 8077f09:	8b 40 04             	mov    0x4(%eax),%eax
 8077f0c:	89 c1                	mov    %eax,%ecx
 8077f0e:	d3 ea                	shr    %cl,%edx
 8077f10:	89 d0                	mov    %edx,%eax
 8077f12:	89 c2                	mov    %eax,%edx
 8077f14:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8077f1a:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 8077f20:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 8077f26:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8077f2d:	21 c2                	and    %eax,%edx
 8077f2f:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 8077f35:	89 10                	mov    %edx,(%eax)
 8077f37:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 8077f3d:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 8077f43:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 8077f49:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 8077f4f:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8077f55:	8b 50 04             	mov    0x4(%eax),%edx
 8077f58:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 8077f5e:	01 c2                	add    %eax,%edx
 8077f60:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 8077f66:	89 50 04             	mov    %edx,0x4(%eax)
 8077f69:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8077f6c:	c1 e0 10             	shl    $0x10,%eax
 8077f6f:	89 c2                	mov    %eax,%edx
 8077f71:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 8077f77:	09 d0                	or     %edx,%eax
 8077f79:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8077f7c:	e9 78 02 00 00       	jmp    80781f9 <ProcessCommands+0x5912>
 8077f81:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8077f87:	8b 95 18 fe ff ff    	mov    -0x1e8(%ebp),%edx
 8077f8d:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 8077f91:	0f b6 c0             	movzbl %al,%eax
 8077f94:	8b 95 14 fe ff ff    	mov    -0x1ec(%ebp),%edx
 8077f9a:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
 8077fa0:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 8077fa6:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8077fa9:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 8077faf:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%ebp)
 8077fb6:	0f 84 ce 01 00 00    	je     807818a <ProcessCommands+0x58a3>
 8077fbc:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 8077fc2:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 8077fc8:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 8077fce:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 8077fd4:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8077fda:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 8077fe0:	83 bd 58 ff ff ff 18 	cmpl   $0x18,-0xa8(%ebp)
 8077fe7:	0f 86 b0 00 00 00    	jbe    807809d <ProcessCommands+0x57b6>
 8077fed:	e9 74 01 00 00       	jmp    8078166 <ProcessCommands+0x587f>
 8077ff2:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8077ff8:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8077ffe:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078004:	8b 40 0c             	mov    0xc(%eax),%eax
 8078007:	85 c0                	test   %eax,%eax
 8078009:	75 07                	jne    8078012 <ProcessCommands+0x572b>
 807800b:	b8 00 00 00 00       	mov    $0x0,%eax
 8078010:	eb 7d                	jmp    807808f <ProcessCommands+0x57a8>
 8078012:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078018:	8b 00                	mov    (%eax),%eax
 807801a:	c1 e8 08             	shr    $0x8,%eax
 807801d:	89 c2                	mov    %eax,%edx
 807801f:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078025:	89 10                	mov    %edx,(%eax)
 8078027:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807802d:	8b 10                	mov    (%eax),%edx
 807802f:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078035:	8b 40 08             	mov    0x8(%eax),%eax
 8078038:	0f b6 00             	movzbl (%eax),%eax
 807803b:	0f b6 c0             	movzbl %al,%eax
 807803e:	c1 e0 18             	shl    $0x18,%eax
 8078041:	09 c2                	or     %eax,%edx
 8078043:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078049:	89 10                	mov    %edx,(%eax)
 807804b:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078051:	8b 40 04             	mov    0x4(%eax),%eax
 8078054:	8d 50 f8             	lea    -0x8(%eax),%edx
 8078057:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807805d:	89 50 04             	mov    %edx,0x4(%eax)
 8078060:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078066:	8b 40 0c             	mov    0xc(%eax),%eax
 8078069:	8d 50 ff             	lea    -0x1(%eax),%edx
 807806c:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078072:	89 50 0c             	mov    %edx,0xc(%eax)
 8078075:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807807b:	8b 40 08             	mov    0x8(%eax),%eax
 807807e:	8d 50 01             	lea    0x1(%eax),%edx
 8078081:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 8078087:	89 50 08             	mov    %edx,0x8(%eax)
 807808a:	b8 01 00 00 00       	mov    $0x1,%eax
 807808f:	85 c0                	test   %eax,%eax
 8078091:	75 0a                	jne    807809d <ProcessCommands+0x57b6>
 8078093:	b8 00 00 00 00       	mov    $0x0,%eax
 8078098:	e9 fe 00 00 00       	jmp    807819b <ProcessCommands+0x58b4>
 807809d:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80780a3:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 80780a9:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 80780af:	8b 40 04             	mov    0x4(%eax),%eax
 80780b2:	ba 20 00 00 00       	mov    $0x20,%edx
 80780b7:	29 c2                	sub    %eax,%edx
 80780b9:	89 d0                	mov    %edx,%eax
 80780bb:	39 85 58 ff ff ff    	cmp    %eax,-0xa8(%ebp)
 80780c1:	0f 87 2b ff ff ff    	ja     8077ff2 <ProcessCommands+0x570b>
 80780c7:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 80780cd:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 80780d3:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 80780d9:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 80780df:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 80780e5:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 80780eb:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 80780f1:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 80780f7:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 80780fd:	8b 10                	mov    (%eax),%edx
 80780ff:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8078105:	8b 40 04             	mov    0x4(%eax),%eax
 8078108:	89 c1                	mov    %eax,%ecx
 807810a:	d3 ea                	shr    %cl,%edx
 807810c:	89 d0                	mov    %edx,%eax
 807810e:	89 c2                	mov    %eax,%edx
 8078110:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8078116:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 807811c:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 8078122:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8078129:	21 c2                	and    %eax,%edx
 807812b:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8078131:	89 10                	mov    %edx,(%eax)
 8078133:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8078139:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 807813f:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8078145:	89 45 80             	mov    %eax,-0x80(%ebp)
 8078148:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 807814e:	8b 50 04             	mov    0x4(%eax),%edx
 8078151:	8b 45 80             	mov    -0x80(%ebp),%eax
 8078154:	01 c2                	add    %eax,%edx
 8078156:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 807815c:	89 50 04             	mov    %edx,0x4(%eax)
 807815f:	b8 01 00 00 00       	mov    $0x1,%eax
 8078164:	eb 35                	jmp    807819b <ProcessCommands+0x58b4>
 8078166:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807816c:	89 44 24 08          	mov    %eax,0x8(%esp)
 8078170:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 8078176:	89 44 24 04          	mov    %eax,0x4(%esp)
 807817a:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 8078180:	89 04 24             	mov    %eax,(%esp)
 8078183:	e8 b8 9d 00 00       	call   8081f40 <BrotliSafeReadBits32Slow>
 8078188:	eb 11                	jmp    807819b <ProcessCommands+0x58b4>
 807818a:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 8078190:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8078196:	b8 01 00 00 00       	mov    $0x1,%eax
 807819b:	85 c0                	test   %eax,%eax
 807819d:	75 5a                	jne    80781f9 <ProcessCommands+0x5912>
 807819f:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 80781a5:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 80781ab:	8d 50 01             	lea    0x1(%eax),%edx
 80781ae:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 80781b4:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 80781ba:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 80781c0:	89 45 84             	mov    %eax,-0x7c(%ebp)
 80781c3:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80781c6:	89 45 88             	mov    %eax,-0x78(%ebp)
 80781c9:	8b 45 88             	mov    -0x78(%ebp),%eax
 80781cc:	8b 10                	mov    (%eax),%edx
 80781ce:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80781d1:	89 10                	mov    %edx,(%eax)
 80781d3:	8b 45 88             	mov    -0x78(%ebp),%eax
 80781d6:	8b 50 04             	mov    0x4(%eax),%edx
 80781d9:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80781dc:	89 50 04             	mov    %edx,0x4(%eax)
 80781df:	8b 45 88             	mov    -0x78(%ebp),%eax
 80781e2:	8b 50 08             	mov    0x8(%eax),%edx
 80781e5:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80781e8:	89 50 08             	mov    %edx,0x8(%eax)
 80781eb:	8b 45 88             	mov    -0x78(%ebp),%eax
 80781ee:	8b 50 0c             	mov    0xc(%eax),%edx
 80781f1:	8b 45 84             	mov    -0x7c(%ebp),%eax
 80781f4:	89 50 0c             	mov    %edx,0xc(%eax)
 80781f7:	eb 3a                	jmp    8078233 <ProcessCommands+0x594c>
 80781f9:	8b 95 f4 f5 ff ff    	mov    -0xa0c(%ebp),%edx
 80781ff:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 8078205:	81 c2 88 00 00 00    	add    $0x88,%edx
 807820b:	8b 14 90             	mov    (%eax,%edx,4),%edx
 807820e:	8b 75 e0             	mov    -0x20(%ebp),%esi
 8078211:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 8078217:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 807821d:	89 c1                	mov    %eax,%ecx
 807821f:	d3 e6                	shl    %cl,%esi
 8078221:	89 f0                	mov    %esi,%eax
 8078223:	01 d0                	add    %edx,%eax
 8078225:	89 c2                	mov    %eax,%edx
 8078227:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807822d:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8078233:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078239:	8b 50 38             	mov    0x38(%eax),%edx
 807823c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078242:	8b 40 34             	mov    0x34(%eax),%eax
 8078245:	39 c2                	cmp    %eax,%edx
 8078247:	74 1d                	je     8078266 <ProcessCommands+0x597f>
 8078249:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807824f:	8b 50 34             	mov    0x34(%eax),%edx
 8078252:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 8078258:	39 c2                	cmp    %eax,%edx
 807825a:	0f 4f d0             	cmovg  %eax,%edx
 807825d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078263:	89 50 38             	mov    %edx,0x38(%eax)
 8078266:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807826c:	8b 80 04 01 00 00    	mov    0x104(%eax),%eax
 8078272:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 8078278:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807827e:	8b 90 08 01 00 00    	mov    0x108(%eax),%edx
 8078284:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807828a:	8b 40 38             	mov    0x38(%eax),%eax
 807828d:	39 c2                	cmp    %eax,%edx
 807828f:	0f 8e 1f 02 00 00    	jle    80784b4 <ProcessCommands+0x5bcd>
 8078295:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807829b:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 80782a1:	3d fc ff ff 7f       	cmp    $0x7ffffffc,%eax
 80782a6:	7e 0a                	jle    80782b2 <ProcessCommands+0x59cb>
 80782a8:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
 80782ad:	e9 cb 04 00 00       	jmp    807877d <ProcessCommands+0x5e96>
 80782b2:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 80782b8:	83 f8 03             	cmp    $0x3,%eax
 80782bb:	0f 8e e9 01 00 00    	jle    80784aa <ProcessCommands+0x5bc3>
 80782c1:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 80782c7:	83 f8 18             	cmp    $0x18,%eax
 80782ca:	0f 8f da 01 00 00    	jg     80784aa <ProcessCommands+0x5bc3>
 80782d0:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80782d6:	8b 90 08 01 00 00    	mov    0x108(%eax),%edx
 80782dc:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80782e2:	8b 40 38             	mov    0x38(%eax),%eax
 80782e5:	29 c2                	sub    %eax,%edx
 80782e7:	89 d0                	mov    %edx,%eax
 80782e9:	83 e8 01             	sub    $0x1,%eax
 80782ec:	89 45 8c             	mov    %eax,-0x74(%ebp)
 80782ef:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80782f5:	8b 80 44 02 00 00    	mov    0x244(%eax),%eax
 80782fb:	89 45 90             	mov    %eax,-0x70(%ebp)
 80782fe:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078304:	8b 80 48 02 00 00    	mov    0x248(%eax),%eax
 807830a:	89 45 94             	mov    %eax,-0x6c(%ebp)
 807830d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078313:	8b 80 44 02 00 00    	mov    0x244(%eax),%eax
 8078319:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 807831f:	83 c2 08             	add    $0x8,%edx
 8078322:	8b 04 90             	mov    (%eax,%edx,4),%eax
 8078325:	89 45 98             	mov    %eax,-0x68(%ebp)
 8078328:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807832e:	8b 90 44 02 00 00    	mov    0x244(%eax),%edx
 8078334:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807833a:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 807833e:	0f b6 c0             	movzbl %al,%eax
 8078341:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8078344:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8078347:	89 45 a0             	mov    %eax,-0x60(%ebp)
 807834a:	8b 45 a0             	mov    -0x60(%ebp),%eax
 807834d:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8078354:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8078357:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 807835a:	8b 55 8c             	mov    -0x74(%ebp),%edx
 807835d:	21 d0                	and    %edx,%eax
 807835f:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8078362:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8078365:	8b 55 8c             	mov    -0x74(%ebp),%edx
 8078368:	89 c1                	mov    %eax,%ecx
 807836a:	d3 fa                	sar    %cl,%edx
 807836c:	89 d0                	mov    %edx,%eax
 807836e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8078371:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078377:	8b 50 44             	mov    0x44(%eax),%edx
 807837a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078380:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8078386:	01 c2                	add    %eax,%edx
 8078388:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807838e:	89 50 44             	mov    %edx,0x44(%eax)
 8078391:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8078397:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 807839b:	01 45 98             	add    %eax,-0x68(%ebp)
 807839e:	8b 45 90             	mov    -0x70(%ebp),%eax
 80783a1:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 80783a7:	85 c0                	test   %eax,%eax
 80783a9:	0f 94 c0             	sete   %al
 80783ac:	0f b6 c0             	movzbl %al,%eax
 80783af:	85 c0                	test   %eax,%eax
 80783b1:	74 0a                	je     80783bd <ProcessCommands+0x5ad6>
 80783b3:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
 80783b8:	e9 c0 03 00 00       	jmp    807877d <ProcessCommands+0x5e96>
 80783bd:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80783c0:	8b 40 0c             	mov    0xc(%eax),%eax
 80783c3:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 80783c6:	0f 8d d4 00 00 00    	jge    80784a0 <ProcessCommands+0x5bb9>
 80783cc:	8b 45 90             	mov    -0x70(%ebp),%eax
 80783cf:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 80783d5:	8b 45 98             	mov    -0x68(%ebp),%eax
 80783d8:	01 d0                	add    %edx,%eax
 80783da:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80783dd:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 80783e3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80783e6:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80783e9:	0f b7 40 18          	movzwl 0x18(%eax),%eax
 80783ed:	98                   	cwtl   
 80783ee:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 80783f1:	75 29                	jne    807841c <ProcessCommands+0x5b35>
 80783f3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80783f6:	8b 95 00 f6 ff ff    	mov    -0xa00(%ebp),%edx
 80783fc:	8b 4a 5c             	mov    0x5c(%edx),%ecx
 80783ff:	8b 95 04 f6 ff ff    	mov    -0x9fc(%ebp),%edx
 8078405:	01 ca                	add    %ecx,%edx
 8078407:	89 44 24 08          	mov    %eax,0x8(%esp)
 807840b:	8b 45 b0             	mov    -0x50(%ebp),%eax
 807840e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8078412:	89 14 24             	mov    %edx,(%esp)
 8078415:	e8 96 b7 fd ff       	call   8053bb0 <__interceptor_memcpy>
 807841a:	eb 38                	jmp    8078454 <ProcessCommands+0x5b6d>
 807841c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078422:	8b 50 5c             	mov    0x5c(%eax),%edx
 8078425:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807842b:	01 c2                	add    %eax,%edx
 807842d:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8078430:	89 44 24 10          	mov    %eax,0x10(%esp)
 8078434:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8078437:	89 44 24 0c          	mov    %eax,0xc(%esp)
 807843b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 807843e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8078442:	8b 45 b0             	mov    -0x50(%ebp),%eax
 8078445:	89 44 24 04          	mov    %eax,0x4(%esp)
 8078449:	89 14 24             	mov    %edx,(%esp)
 807844c:	e8 4e a1 00 00       	call   808259f <BrotliTransformDictionaryWord>
 8078451:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8078454:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8078457:	01 85 04 f6 ff ff    	add    %eax,-0x9fc(%ebp)
 807845d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078463:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8078469:	2b 45 b4             	sub    -0x4c(%ebp),%eax
 807846c:	89 c2                	mov    %eax,%edx
 807846e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078474:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 807847a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078480:	8b 40 3c             	mov    0x3c(%eax),%eax
 8078483:	39 85 04 f6 ff ff    	cmp    %eax,-0x9fc(%ebp)
 8078489:	0f 8c f1 01 00 00    	jl     8078680 <ProcessCommands+0x5d99>
 807848f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078495:	c7 00 0f 00 00 00    	movl   $0xf,(%eax)
 807849b:	e9 b9 02 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 80784a0:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
 80784a5:	e9 d3 02 00 00       	jmp    807877d <ProcessCommands+0x5e96>
 80784aa:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
 80784af:	e9 c9 02 00 00       	jmp    807877d <ProcessCommands+0x5e96>
 80784b4:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80784ba:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 80784c0:	8b 95 04 f6 ff ff    	mov    -0x9fc(%ebp),%edx
 80784c6:	29 c2                	sub    %eax,%edx
 80784c8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80784ce:	8b 40 40             	mov    0x40(%eax),%eax
 80784d1:	21 d0                	and    %edx,%eax
 80784d3:	89 45 b8             	mov    %eax,-0x48(%ebp)
 80784d6:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80784dc:	8b 50 5c             	mov    0x5c(%eax),%edx
 80784df:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 80784e5:	01 d0                	add    %edx,%eax
 80784e7:	89 45 bc             	mov    %eax,-0x44(%ebp)
 80784ea:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80784f0:	8b 50 5c             	mov    0x5c(%eax),%edx
 80784f3:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80784f6:	01 d0                	add    %edx,%eax
 80784f8:	89 45 c0             	mov    %eax,-0x40(%ebp)
 80784fb:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 8078501:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 8078507:	01 d0                	add    %edx,%eax
 8078509:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 807850c:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 8078512:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8078515:	01 d0                	add    %edx,%eax
 8078517:	89 45 c8             	mov    %eax,-0x38(%ebp)
 807851a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078520:	8b 40 44             	mov    0x44(%eax),%eax
 8078523:	83 e0 03             	and    $0x3,%eax
 8078526:	89 c1                	mov    %eax,%ecx
 8078528:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807852e:	8b 90 08 01 00 00    	mov    0x108(%eax),%edx
 8078534:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807853a:	83 c1 10             	add    $0x10,%ecx
 807853d:	89 54 88 08          	mov    %edx,0x8(%eax,%ecx,4)
 8078541:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078547:	8b 40 44             	mov    0x44(%eax),%eax
 807854a:	8d 50 01             	lea    0x1(%eax),%edx
 807854d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078553:	89 50 44             	mov    %edx,0x44(%eax)
 8078556:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807855c:	8b 90 b4 00 00 00    	mov    0xb4(%eax),%edx
 8078562:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8078568:	29 c2                	sub    %eax,%edx
 807856a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078570:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 8078576:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8078579:	89 45 cc             	mov    %eax,-0x34(%ebp)
 807857c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 807857f:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8078582:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8078585:	8b 10                	mov    (%eax),%edx
 8078587:	89 55 e8             	mov    %edx,-0x18(%ebp)
 807858a:	8b 50 04             	mov    0x4(%eax),%edx
 807858d:	89 55 ec             	mov    %edx,-0x14(%ebp)
 8078590:	8b 50 08             	mov    0x8(%eax),%edx
 8078593:	89 55 f0             	mov    %edx,-0x10(%ebp)
 8078596:	8b 40 0c             	mov    0xc(%eax),%eax
 8078599:	89 45 f4             	mov    %eax,-0xc(%ebp)
 807859c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 807859f:	8b 55 e8             	mov    -0x18(%ebp),%edx
 80785a2:	89 10                	mov    %edx,(%eax)
 80785a4:	8b 55 ec             	mov    -0x14(%ebp),%edx
 80785a7:	89 50 04             	mov    %edx,0x4(%eax)
 80785aa:	8b 55 f0             	mov    -0x10(%ebp),%edx
 80785ad:	89 50 08             	mov    %edx,0x8(%eax)
 80785b0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80785b3:	89 50 0c             	mov    %edx,0xc(%eax)
 80785b6:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 80785bc:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 80785bf:	7d 0c                	jge    80785cd <ProcessCommands+0x5ce6>
 80785c1:	8b 45 b8             	mov    -0x48(%ebp),%eax
 80785c4:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 80785c7:	0f 8c d8 00 00 00    	jl     80786a5 <ProcessCommands+0x5dbe>
 80785cd:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80785d3:	8b 40 3c             	mov    0x3c(%eax),%eax
 80785d6:	39 45 c4             	cmp    %eax,-0x3c(%ebp)
 80785d9:	0f 8d c6 00 00 00    	jge    80786a5 <ProcessCommands+0x5dbe>
 80785df:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80785e5:	8b 40 3c             	mov    0x3c(%eax),%eax
 80785e8:	39 45 c8             	cmp    %eax,-0x38(%ebp)
 80785eb:	0f 8d b4 00 00 00    	jge    80786a5 <ProcessCommands+0x5dbe>
 80785f1:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 80785f7:	01 85 04 f6 ff ff    	add    %eax,-0x9fc(%ebp)
 80785fd:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8078603:	83 f8 10             	cmp    $0x10,%eax
 8078606:	7e 78                	jle    8078680 <ProcessCommands+0x5d99>
 8078608:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807860e:	83 f8 20             	cmp    $0x20,%eax
 8078611:	7e 27                	jle    807863a <ProcessCommands+0x5d53>
 8078613:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8078619:	83 e8 10             	sub    $0x10,%eax
 807861c:	8b 55 c0             	mov    -0x40(%ebp),%edx
 807861f:	8d 4a 10             	lea    0x10(%edx),%ecx
 8078622:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8078625:	83 c2 10             	add    $0x10,%edx
 8078628:	89 44 24 08          	mov    %eax,0x8(%esp)
 807862c:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8078630:	89 14 24             	mov    %edx,(%esp)
 8078633:	e8 78 b5 fd ff       	call   8053bb0 <__interceptor_memcpy>
 8078638:	eb 46                	jmp    8078680 <ProcessCommands+0x5d99>
 807863a:	8b 45 c0             	mov    -0x40(%ebp),%eax
 807863d:	83 c0 10             	add    $0x10,%eax
 8078640:	8b 55 bc             	mov    -0x44(%ebp),%edx
 8078643:	83 c2 10             	add    $0x10,%edx
 8078646:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 8078649:	89 45 d8             	mov    %eax,-0x28(%ebp)
 807864c:	8b 45 d8             	mov    -0x28(%ebp),%eax
 807864f:	8b 10                	mov    (%eax),%edx
 8078651:	89 55 e8             	mov    %edx,-0x18(%ebp)
 8078654:	8b 50 04             	mov    0x4(%eax),%edx
 8078657:	89 55 ec             	mov    %edx,-0x14(%ebp)
 807865a:	8b 50 08             	mov    0x8(%eax),%edx
 807865d:	89 55 f0             	mov    %edx,-0x10(%ebp)
 8078660:	8b 40 0c             	mov    0xc(%eax),%eax
 8078663:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8078666:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8078669:	8b 55 e8             	mov    -0x18(%ebp),%edx
 807866c:	89 10                	mov    %edx,(%eax)
 807866e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8078671:	89 50 04             	mov    %edx,0x4(%eax)
 8078674:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8078677:	89 50 08             	mov    %edx,0x8(%eax)
 807867a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 807867d:	89 50 0c             	mov    %edx,0xc(%eax)
 8078680:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078686:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807868c:	85 c0                	test   %eax,%eax
 807868e:	0f 8f 86 a3 ff ff    	jg     8072a1a <ProcessCommands+0x133>
 8078694:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807869a:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 80786a0:	e9 b4 00 00 00       	jmp    8078759 <ProcessCommands+0x5e72>
 80786a5:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80786ab:	8b 40 3c             	mov    0x3c(%eax),%eax
 80786ae:	2b 85 04 f6 ff ff    	sub    -0x9fc(%ebp),%eax
 80786b4:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80786b7:	eb 67                	jmp    8078720 <ProcessCommands+0x5e39>
 80786b9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80786bf:	8b 50 5c             	mov    0x5c(%eax),%edx
 80786c2:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 80786c8:	01 c2                	add    %eax,%edx
 80786ca:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80786d0:	8b 48 5c             	mov    0x5c(%eax),%ecx
 80786d3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80786d9:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 80786df:	8b b5 04 f6 ff ff    	mov    -0x9fc(%ebp),%esi
 80786e5:	29 c6                	sub    %eax,%esi
 80786e7:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80786ed:	8b 40 40             	mov    0x40(%eax),%eax
 80786f0:	21 f0                	and    %esi,%eax
 80786f2:	01 c8                	add    %ecx,%eax
 80786f4:	0f b6 00             	movzbl (%eax),%eax
 80786f7:	88 02                	mov    %al,(%edx)
 80786f9:	83 85 04 f6 ff ff 01 	addl   $0x1,-0x9fc(%ebp)
 8078700:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)
 8078704:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 8078708:	0f 94 c0             	sete   %al
 807870b:	0f b6 c0             	movzbl %al,%eax
 807870e:	85 c0                	test   %eax,%eax
 8078710:	74 0e                	je     8078720 <ProcessCommands+0x5e39>
 8078712:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078718:	c7 00 10 00 00 00    	movl   $0x10,(%eax)
 807871e:	eb 39                	jmp    8078759 <ProcessCommands+0x5e72>
 8078720:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8078726:	83 e8 01             	sub    $0x1,%eax
 8078729:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807872f:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 8078735:	85 c0                	test   %eax,%eax
 8078737:	79 80                	jns    80786b9 <ProcessCommands+0x5dd2>
 8078739:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807873f:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8078745:	85 c0                	test   %eax,%eax
 8078747:	0f 8f cd a2 ff ff    	jg     8072a1a <ProcessCommands+0x133>
 807874d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078753:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 8078759:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807875f:	8b 95 04 f6 ff ff    	mov    -0x9fc(%ebp),%edx
 8078765:	89 50 30             	mov    %edx,0x30(%eax)
 8078768:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 807876e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078774:	89 50 04             	mov    %edx,0x4(%eax)
 8078777:	8b 85 08 f6 ff ff    	mov    -0x9f8(%ebp),%eax
 807877d:	81 c4 40 0a 00 00    	add    $0xa40,%esp
 8078783:	5b                   	pop    %ebx
 8078784:	5e                   	pop    %esi
 8078785:	5d                   	pop    %ebp
 8078786:	c3                   	ret    

08078787 <SafeProcessCommands>:
 8078787:	55                   	push   %ebp
 8078788:	89 e5                	mov    %esp,%ebp
 807878a:	56                   	push   %esi
 807878b:	53                   	push   %ebx
 807878c:	81 ec 40 0a 00 00    	sub    $0xa40,%esp
 8078792:	e8 59 13 fd ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8078797:	81 c3 69 78 03 00    	add    $0x37869,%ebx
 807879d:	c7 85 fc f5 ff ff 01 	movl   $0x1,-0xa04(%ebp)
 80787a4:	00 00 00 
 80787a7:	8b 45 08             	mov    0x8(%ebp),%eax
 80787aa:	89 85 00 f6 ff ff    	mov    %eax,-0xa00(%ebp)
 80787b0:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80787b6:	8b 40 30             	mov    0x30(%eax),%eax
 80787b9:	89 85 04 f6 ff ff    	mov    %eax,-0x9fc(%ebp)
 80787bf:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80787c5:	8b 40 04             	mov    0x4(%eax),%eax
 80787c8:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 80787ce:	c7 85 08 f6 ff ff 01 	movl   $0x1,-0x9f8(%ebp)
 80787d5:	00 00 00 
 80787d8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80787de:	83 c0 08             	add    $0x8,%eax
 80787e1:	89 85 0c f6 ff ff    	mov    %eax,-0x9f4(%ebp)
 80787e7:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 80787ed:	89 85 10 f6 ff ff    	mov    %eax,-0x9f0(%ebp)
 80787f3:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80787f9:	89 85 14 f6 ff ff    	mov    %eax,-0x9ec(%ebp)
 80787ff:	c7 85 18 f6 ff ff 1c 	movl   $0x1c,-0x9e8(%ebp)
 8078806:	00 00 00 
 8078809:	83 bd 10 f6 ff ff 00 	cmpl   $0x0,-0x9f0(%ebp)
 8078810:	74 07                	je     8078819 <SafeProcessCommands+0x92>
 8078812:	b8 01 00 00 00       	mov    $0x1,%eax
 8078817:	eb 2d                	jmp    8078846 <SafeProcessCommands+0xbf>
 8078819:	8b 85 14 f6 ff ff    	mov    -0x9ec(%ebp),%eax
 807881f:	89 85 1c f6 ff ff    	mov    %eax,-0x9e4(%ebp)
 8078825:	8b 85 18 f6 ff ff    	mov    -0x9e8(%ebp),%eax
 807882b:	89 85 20 f6 ff ff    	mov    %eax,-0x9e0(%ebp)
 8078831:	8b 85 1c f6 ff ff    	mov    -0x9e4(%ebp),%eax
 8078837:	8b 40 0c             	mov    0xc(%eax),%eax
 807883a:	39 85 20 f6 ff ff    	cmp    %eax,-0x9e0(%ebp)
 8078840:	0f 96 c0             	setbe  %al
 8078843:	0f b6 c0             	movzbl %al,%eax
 8078846:	85 c0                	test   %eax,%eax
 8078848:	75 0f                	jne    8078859 <SafeProcessCommands+0xd2>
 807884a:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8078851:	00 00 00 
 8078854:	e9 a0 5d 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 8078859:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 8078860:	75 0e                	jne    8078870 <SafeProcessCommands+0xe9>
 8078862:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8078868:	89 04 24             	mov    %eax,(%esp)
 807886b:	e8 86 95 00 00       	call   8081df6 <BrotliWarmupBitReader>
 8078870:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078876:	8b 00                	mov    (%eax),%eax
 8078878:	83 f8 07             	cmp    $0x7,%eax
 807887b:	74 3d                	je     80788ba <SafeProcessCommands+0x133>
 807887d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078883:	8b 00                	mov    (%eax),%eax
 8078885:	83 f8 08             	cmp    $0x8,%eax
 8078888:	0f 84 9f 27 00 00    	je     807b02d <SafeProcessCommands+0x28a6>
 807888e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078894:	8b 00                	mov    (%eax),%eax
 8078896:	83 f8 09             	cmp    $0x9,%eax
 8078899:	0f 84 4f 3a 00 00    	je     807c2ee <SafeProcessCommands+0x3b67>
 807889f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80788a5:	8b 00                	mov    (%eax),%eax
 80788a7:	83 f8 0a             	cmp    $0xa,%eax
 80788aa:	0f 84 95 5c 00 00    	je     807e545 <SafeProcessCommands+0x5dbe>
 80788b0:	b8 e1 ff ff ff       	mov    $0xffffffe1,%eax
 80788b5:	e9 63 5d 00 00       	jmp    807e61d <SafeProcessCommands+0x5e96>
 80788ba:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 80788c1:	74 0c                	je     80788cf <SafeProcessCommands+0x148>
 80788c3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80788c9:	c7 00 07 00 00 00    	movl   $0x7,(%eax)
 80788cf:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 80788d5:	89 85 24 f6 ff ff    	mov    %eax,-0x9dc(%ebp)
 80788db:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80788e1:	89 85 28 f6 ff ff    	mov    %eax,-0x9d8(%ebp)
 80788e7:	c7 85 2c f6 ff ff 1c 	movl   $0x1c,-0x9d4(%ebp)
 80788ee:	00 00 00 
 80788f1:	83 bd 24 f6 ff ff 00 	cmpl   $0x0,-0x9dc(%ebp)
 80788f8:	74 07                	je     8078901 <SafeProcessCommands+0x17a>
 80788fa:	b8 01 00 00 00       	mov    $0x1,%eax
 80788ff:	eb 2d                	jmp    807892e <SafeProcessCommands+0x1a7>
 8078901:	8b 85 28 f6 ff ff    	mov    -0x9d8(%ebp),%eax
 8078907:	89 85 30 f6 ff ff    	mov    %eax,-0x9d0(%ebp)
 807890d:	8b 85 2c f6 ff ff    	mov    -0x9d4(%ebp),%eax
 8078913:	89 85 34 f6 ff ff    	mov    %eax,-0x9cc(%ebp)
 8078919:	8b 85 30 f6 ff ff    	mov    -0x9d0(%ebp),%eax
 807891f:	8b 40 0c             	mov    0xc(%eax),%eax
 8078922:	39 85 34 f6 ff ff    	cmp    %eax,-0x9cc(%ebp)
 8078928:	0f 96 c0             	setbe  %al
 807892b:	0f b6 c0             	movzbl %al,%eax
 807892e:	85 c0                	test   %eax,%eax
 8078930:	75 1b                	jne    807894d <SafeProcessCommands+0x1c6>
 8078932:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078938:	c7 00 07 00 00 00    	movl   $0x7,(%eax)
 807893e:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8078945:	00 00 00 
 8078948:	e9 ac 5c 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807894d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078953:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
 8078959:	85 c0                	test   %eax,%eax
 807895b:	0f 94 c0             	sete   %al
 807895e:	0f b6 c0             	movzbl %al,%eax
 8078961:	85 c0                	test   %eax,%eax
 8078963:	74 41                	je     80789a6 <SafeProcessCommands+0x21f>
 8078965:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807896c:	74 25                	je     8078993 <SafeProcessCommands+0x20c>
 807896e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078974:	89 04 24             	mov    %eax,(%esp)
 8078977:	e8 2e 5f ff ff       	call   806e8aa <SafeDecodeCommandBlockSwitch>
 807897c:	85 c0                	test   %eax,%eax
 807897e:	0f 85 36 ff ff ff    	jne    80788ba <SafeProcessCommands+0x133>
 8078984:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807898b:	00 00 00 
 807898e:	e9 66 5c 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 8078993:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8078999:	89 04 24             	mov    %eax,(%esp)
 807899c:	e8 e5 4c ff ff       	call   806d686 <DecodeCommandBlockSwitch>
 80789a1:	e9 14 ff ff ff       	jmp    80788ba <SafeProcessCommands+0x133>
 80789a6:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 80789ad:	0f 84 38 13 00 00    	je     8079ceb <SafeProcessCommands+0x1564>
 80789b3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 80789b9:	89 85 38 f6 ff ff    	mov    %eax,-0x9c8(%ebp)
 80789bf:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 80789c5:	89 85 3c f6 ff ff    	mov    %eax,-0x9c4(%ebp)
 80789cb:	8d 85 e8 f5 ff ff    	lea    -0xa18(%ebp),%eax
 80789d1:	89 85 40 f6 ff ff    	mov    %eax,-0x9c0(%ebp)
 80789d7:	c7 85 44 f6 ff ff 01 	movl   $0x1,-0x9bc(%ebp)
 80789de:	00 00 00 
 80789e1:	8b 85 38 f6 ff ff    	mov    -0x9c8(%ebp),%eax
 80789e7:	89 85 48 f6 ff ff    	mov    %eax,-0x9b8(%ebp)
 80789ed:	8b 85 3c f6 ff ff    	mov    -0x9c4(%ebp),%eax
 80789f3:	89 85 4c f6 ff ff    	mov    %eax,-0x9b4(%ebp)
 80789f9:	8b 85 40 f6 ff ff    	mov    -0x9c0(%ebp),%eax
 80789ff:	89 85 50 f6 ff ff    	mov    %eax,-0x9b0(%ebp)
 8078a05:	c7 85 f0 f5 ff ff 00 	movl   $0x0,-0xa10(%ebp)
 8078a0c:	00 00 00 
 8078a0f:	83 bd 44 f6 ff ff 00 	cmpl   $0x0,-0x9bc(%ebp)
 8078a16:	0f 85 0c 02 00 00    	jne    8078c28 <SafeProcessCommands+0x4a1>
 8078a1c:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078a22:	8b 40 64             	mov    0x64(%eax),%eax
 8078a25:	89 85 54 f6 ff ff    	mov    %eax,-0x9ac(%ebp)
 8078a2b:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8078a31:	89 85 58 f6 ff ff    	mov    %eax,-0x9a8(%ebp)
 8078a37:	8b 85 58 f6 ff ff    	mov    -0x9a8(%ebp),%eax
 8078a3d:	89 85 5c f6 ff ff    	mov    %eax,-0x9a4(%ebp)
 8078a43:	8b 85 5c f6 ff ff    	mov    -0x9a4(%ebp),%eax
 8078a49:	89 85 60 f6 ff ff    	mov    %eax,-0x9a0(%ebp)
 8078a4f:	c7 85 64 f6 ff ff 10 	movl   $0x10,-0x99c(%ebp)
 8078a56:	00 00 00 
 8078a59:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078a5f:	8b 40 04             	mov    0x4(%eax),%eax
 8078a62:	83 f8 0f             	cmp    $0xf,%eax
 8078a65:	0f 86 86 00 00 00    	jbe    8078af1 <SafeProcessCommands+0x36a>
 8078a6b:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078a71:	8b 00                	mov    (%eax),%eax
 8078a73:	c1 e8 10             	shr    $0x10,%eax
 8078a76:	89 c2                	mov    %eax,%edx
 8078a78:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078a7e:	89 10                	mov    %edx,(%eax)
 8078a80:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078a86:	8b 40 04             	mov    0x4(%eax),%eax
 8078a89:	83 f0 10             	xor    $0x10,%eax
 8078a8c:	89 c2                	mov    %eax,%edx
 8078a8e:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078a94:	89 50 04             	mov    %edx,0x4(%eax)
 8078a97:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078a9d:	8b 10                	mov    (%eax),%edx
 8078a9f:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078aa5:	8b 40 08             	mov    0x8(%eax),%eax
 8078aa8:	89 85 68 f6 ff ff    	mov    %eax,-0x998(%ebp)
 8078aae:	8b 85 68 f6 ff ff    	mov    -0x998(%ebp),%eax
 8078ab4:	0f b7 00             	movzwl (%eax),%eax
 8078ab7:	0f b7 c0             	movzwl %ax,%eax
 8078aba:	c1 e0 10             	shl    $0x10,%eax
 8078abd:	09 c2                	or     %eax,%edx
 8078abf:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078ac5:	89 10                	mov    %edx,(%eax)
 8078ac7:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078acd:	8b 40 0c             	mov    0xc(%eax),%eax
 8078ad0:	8d 50 fe             	lea    -0x2(%eax),%edx
 8078ad3:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078ad9:	89 50 0c             	mov    %edx,0xc(%eax)
 8078adc:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078ae2:	8b 40 08             	mov    0x8(%eax),%eax
 8078ae5:	8d 50 02             	lea    0x2(%eax),%edx
 8078ae8:	8b 85 60 f6 ff ff    	mov    -0x9a0(%ebp),%eax
 8078aee:	89 50 08             	mov    %edx,0x8(%eax)
 8078af1:	8b 85 5c f6 ff ff    	mov    -0x9a4(%ebp),%eax
 8078af7:	89 85 6c f6 ff ff    	mov    %eax,-0x994(%ebp)
 8078afd:	8b 85 6c f6 ff ff    	mov    -0x994(%ebp),%eax
 8078b03:	8b 10                	mov    (%eax),%edx
 8078b05:	8b 85 6c f6 ff ff    	mov    -0x994(%ebp),%eax
 8078b0b:	8b 40 04             	mov    0x4(%eax),%eax
 8078b0e:	89 c1                	mov    %eax,%ecx
 8078b10:	d3 ea                	shr    %cl,%edx
 8078b12:	89 d0                	mov    %edx,%eax
 8078b14:	89 85 70 f6 ff ff    	mov    %eax,-0x990(%ebp)
 8078b1a:	8b 85 54 f6 ff ff    	mov    -0x9ac(%ebp),%eax
 8078b20:	89 85 74 f6 ff ff    	mov    %eax,-0x98c(%ebp)
 8078b26:	8b 85 58 f6 ff ff    	mov    -0x9a8(%ebp),%eax
 8078b2c:	89 85 78 f6 ff ff    	mov    %eax,-0x988(%ebp)
 8078b32:	8b 85 70 f6 ff ff    	mov    -0x990(%ebp),%eax
 8078b38:	0f b6 c0             	movzbl %al,%eax
 8078b3b:	c1 e0 02             	shl    $0x2,%eax
 8078b3e:	01 85 74 f6 ff ff    	add    %eax,-0x98c(%ebp)
 8078b44:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8078b4a:	0f b6 00             	movzbl (%eax),%eax
 8078b4d:	3c 08                	cmp    $0x8,%al
 8078b4f:	0f 86 83 00 00 00    	jbe    8078bd8 <SafeProcessCommands+0x451>
 8078b55:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8078b5b:	0f b6 00             	movzbl (%eax),%eax
 8078b5e:	0f b6 c0             	movzbl %al,%eax
 8078b61:	83 e8 08             	sub    $0x8,%eax
 8078b64:	89 85 7c f6 ff ff    	mov    %eax,-0x984(%ebp)
 8078b6a:	8b 85 78 f6 ff ff    	mov    -0x988(%ebp),%eax
 8078b70:	89 85 80 f6 ff ff    	mov    %eax,-0x980(%ebp)
 8078b76:	c7 85 84 f6 ff ff 08 	movl   $0x8,-0x97c(%ebp)
 8078b7d:	00 00 00 
 8078b80:	8b 85 80 f6 ff ff    	mov    -0x980(%ebp),%eax
 8078b86:	8b 50 04             	mov    0x4(%eax),%edx
 8078b89:	8b 85 84 f6 ff ff    	mov    -0x97c(%ebp),%eax
 8078b8f:	01 c2                	add    %eax,%edx
 8078b91:	8b 85 80 f6 ff ff    	mov    -0x980(%ebp),%eax
 8078b97:	89 50 04             	mov    %edx,0x4(%eax)
 8078b9a:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8078ba0:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8078ba4:	0f b7 d0             	movzwl %ax,%edx
 8078ba7:	8b 85 70 f6 ff ff    	mov    -0x990(%ebp),%eax
 8078bad:	c1 e8 08             	shr    $0x8,%eax
 8078bb0:	89 c1                	mov    %eax,%ecx
 8078bb2:	8b 85 7c f6 ff ff    	mov    -0x984(%ebp),%eax
 8078bb8:	89 85 88 f6 ff ff    	mov    %eax,-0x978(%ebp)
 8078bbe:	8b 85 88 f6 ff ff    	mov    -0x978(%ebp),%eax
 8078bc4:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8078bcb:	21 c8                	and    %ecx,%eax
 8078bcd:	01 d0                	add    %edx,%eax
 8078bcf:	c1 e0 02             	shl    $0x2,%eax
 8078bd2:	01 85 74 f6 ff ff    	add    %eax,-0x98c(%ebp)
 8078bd8:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8078bde:	0f b6 00             	movzbl (%eax),%eax
 8078be1:	0f b6 c0             	movzbl %al,%eax
 8078be4:	8b 95 78 f6 ff ff    	mov    -0x988(%ebp),%edx
 8078bea:	89 95 8c f6 ff ff    	mov    %edx,-0x974(%ebp)
 8078bf0:	89 85 90 f6 ff ff    	mov    %eax,-0x970(%ebp)
 8078bf6:	8b 85 8c f6 ff ff    	mov    -0x974(%ebp),%eax
 8078bfc:	8b 50 04             	mov    0x4(%eax),%edx
 8078bff:	8b 85 90 f6 ff ff    	mov    -0x970(%ebp),%eax
 8078c05:	01 c2                	add    %eax,%edx
 8078c07:	8b 85 8c f6 ff ff    	mov    -0x974(%ebp),%eax
 8078c0d:	89 50 04             	mov    %edx,0x4(%eax)
 8078c10:	8b 85 74 f6 ff ff    	mov    -0x98c(%ebp),%eax
 8078c16:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8078c1a:	0f b7 c0             	movzwl %ax,%eax
 8078c1d:	89 85 ec f5 ff ff    	mov    %eax,-0xa14(%ebp)
 8078c23:	e9 22 03 00 00       	jmp    8078f4a <SafeProcessCommands+0x7c3>
 8078c28:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8078c2e:	89 85 94 f6 ff ff    	mov    %eax,-0x96c(%ebp)
 8078c34:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8078c37:	89 85 98 f6 ff ff    	mov    %eax,-0x968(%ebp)
 8078c3d:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8078c43:	8b 10                	mov    (%eax),%edx
 8078c45:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8078c4b:	89 10                	mov    %edx,(%eax)
 8078c4d:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8078c53:	8b 50 04             	mov    0x4(%eax),%edx
 8078c56:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8078c5c:	89 50 04             	mov    %edx,0x4(%eax)
 8078c5f:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8078c65:	8b 50 08             	mov    0x8(%eax),%edx
 8078c68:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8078c6e:	89 50 08             	mov    %edx,0x8(%eax)
 8078c71:	8b 85 94 f6 ff ff    	mov    -0x96c(%ebp),%eax
 8078c77:	8b 50 0c             	mov    0xc(%eax),%edx
 8078c7a:	8b 85 98 f6 ff ff    	mov    -0x968(%ebp),%eax
 8078c80:	89 50 0c             	mov    %edx,0xc(%eax)
 8078c83:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078c89:	8b 40 64             	mov    0x64(%eax),%eax
 8078c8c:	89 85 9c f6 ff ff    	mov    %eax,-0x964(%ebp)
 8078c92:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8078c98:	89 85 a0 f6 ff ff    	mov    %eax,-0x960(%ebp)
 8078c9e:	8d 85 ec f5 ff ff    	lea    -0xa14(%ebp),%eax
 8078ca4:	89 85 a4 f6 ff ff    	mov    %eax,-0x95c(%ebp)
 8078caa:	8b 85 a0 f6 ff ff    	mov    -0x960(%ebp),%eax
 8078cb0:	89 85 a8 f6 ff ff    	mov    %eax,-0x958(%ebp)
 8078cb6:	c7 85 ac f6 ff ff 0f 	movl   $0xf,-0x954(%ebp)
 8078cbd:	00 00 00 
 8078cc0:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8078cc3:	89 85 b0 f6 ff ff    	mov    %eax,-0x950(%ebp)
 8078cc9:	e9 a8 00 00 00       	jmp    8078d76 <SafeProcessCommands+0x5ef>
 8078cce:	8b 85 a8 f6 ff ff    	mov    -0x958(%ebp),%eax
 8078cd4:	89 85 b4 f6 ff ff    	mov    %eax,-0x94c(%ebp)
 8078cda:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078ce0:	8b 40 0c             	mov    0xc(%eax),%eax
 8078ce3:	85 c0                	test   %eax,%eax
 8078ce5:	75 07                	jne    8078cee <SafeProcessCommands+0x567>
 8078ce7:	b8 00 00 00 00       	mov    $0x0,%eax
 8078cec:	eb 7d                	jmp    8078d6b <SafeProcessCommands+0x5e4>
 8078cee:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078cf4:	8b 00                	mov    (%eax),%eax
 8078cf6:	c1 e8 08             	shr    $0x8,%eax
 8078cf9:	89 c2                	mov    %eax,%edx
 8078cfb:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d01:	89 10                	mov    %edx,(%eax)
 8078d03:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d09:	8b 10                	mov    (%eax),%edx
 8078d0b:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d11:	8b 40 08             	mov    0x8(%eax),%eax
 8078d14:	0f b6 00             	movzbl (%eax),%eax
 8078d17:	0f b6 c0             	movzbl %al,%eax
 8078d1a:	c1 e0 18             	shl    $0x18,%eax
 8078d1d:	09 c2                	or     %eax,%edx
 8078d1f:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d25:	89 10                	mov    %edx,(%eax)
 8078d27:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d2d:	8b 40 04             	mov    0x4(%eax),%eax
 8078d30:	8d 50 f8             	lea    -0x8(%eax),%edx
 8078d33:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d39:	89 50 04             	mov    %edx,0x4(%eax)
 8078d3c:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d42:	8b 40 0c             	mov    0xc(%eax),%eax
 8078d45:	8d 50 ff             	lea    -0x1(%eax),%edx
 8078d48:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d4e:	89 50 0c             	mov    %edx,0xc(%eax)
 8078d51:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d57:	8b 40 08             	mov    0x8(%eax),%eax
 8078d5a:	8d 50 01             	lea    0x1(%eax),%edx
 8078d5d:	8b 85 b4 f6 ff ff    	mov    -0x94c(%ebp),%eax
 8078d63:	89 50 08             	mov    %edx,0x8(%eax)
 8078d66:	b8 01 00 00 00       	mov    $0x1,%eax
 8078d6b:	85 c0                	test   %eax,%eax
 8078d6d:	75 07                	jne    8078d76 <SafeProcessCommands+0x5ef>
 8078d6f:	b8 00 00 00 00       	mov    $0x0,%eax
 8078d74:	eb 77                	jmp    8078ded <SafeProcessCommands+0x666>
 8078d76:	8b 85 a8 f6 ff ff    	mov    -0x958(%ebp),%eax
 8078d7c:	89 85 b8 f6 ff ff    	mov    %eax,-0x948(%ebp)
 8078d82:	8b 85 b8 f6 ff ff    	mov    -0x948(%ebp),%eax
 8078d88:	8b 40 04             	mov    0x4(%eax),%eax
 8078d8b:	ba 20 00 00 00       	mov    $0x20,%edx
 8078d90:	29 c2                	sub    %eax,%edx
 8078d92:	89 d0                	mov    %edx,%eax
 8078d94:	39 85 ac f6 ff ff    	cmp    %eax,-0x954(%ebp)
 8078d9a:	0f 87 2e ff ff ff    	ja     8078cce <SafeProcessCommands+0x547>
 8078da0:	8b 85 a8 f6 ff ff    	mov    -0x958(%ebp),%eax
 8078da6:	89 85 bc f6 ff ff    	mov    %eax,-0x944(%ebp)
 8078dac:	8b 85 bc f6 ff ff    	mov    -0x944(%ebp),%eax
 8078db2:	8b 10                	mov    (%eax),%edx
 8078db4:	8b 85 bc f6 ff ff    	mov    -0x944(%ebp),%eax
 8078dba:	8b 40 04             	mov    0x4(%eax),%eax
 8078dbd:	89 c1                	mov    %eax,%ecx
 8078dbf:	d3 ea                	shr    %cl,%edx
 8078dc1:	89 d0                	mov    %edx,%eax
 8078dc3:	89 c2                	mov    %eax,%edx
 8078dc5:	8b 85 ac f6 ff ff    	mov    -0x954(%ebp),%eax
 8078dcb:	89 85 c0 f6 ff ff    	mov    %eax,-0x940(%ebp)
 8078dd1:	8b 85 c0 f6 ff ff    	mov    -0x940(%ebp),%eax
 8078dd7:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8078dde:	21 c2                	and    %eax,%edx
 8078de0:	8b 85 b0 f6 ff ff    	mov    -0x950(%ebp),%eax
 8078de6:	89 10                	mov    %edx,(%eax)
 8078de8:	b8 01 00 00 00       	mov    $0x1,%eax
 8078ded:	85 c0                	test   %eax,%eax
 8078def:	0f 95 c0             	setne  %al
 8078df2:	0f b6 c0             	movzbl %al,%eax
 8078df5:	85 c0                	test   %eax,%eax
 8078df7:	0f 84 1d 01 00 00    	je     8078f1a <SafeProcessCommands+0x793>
 8078dfd:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8078e00:	89 85 c4 f6 ff ff    	mov    %eax,-0x93c(%ebp)
 8078e06:	8b 85 9c f6 ff ff    	mov    -0x964(%ebp),%eax
 8078e0c:	89 85 c8 f6 ff ff    	mov    %eax,-0x938(%ebp)
 8078e12:	8b 85 a0 f6 ff ff    	mov    -0x960(%ebp),%eax
 8078e18:	89 85 cc f6 ff ff    	mov    %eax,-0x934(%ebp)
 8078e1e:	8b 85 c4 f6 ff ff    	mov    -0x93c(%ebp),%eax
 8078e24:	0f b6 c0             	movzbl %al,%eax
 8078e27:	c1 e0 02             	shl    $0x2,%eax
 8078e2a:	01 85 c8 f6 ff ff    	add    %eax,-0x938(%ebp)
 8078e30:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8078e36:	0f b6 00             	movzbl (%eax),%eax
 8078e39:	3c 08                	cmp    $0x8,%al
 8078e3b:	0f 86 83 00 00 00    	jbe    8078ec4 <SafeProcessCommands+0x73d>
 8078e41:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8078e47:	0f b6 00             	movzbl (%eax),%eax
 8078e4a:	0f b6 c0             	movzbl %al,%eax
 8078e4d:	83 e8 08             	sub    $0x8,%eax
 8078e50:	89 85 d0 f6 ff ff    	mov    %eax,-0x930(%ebp)
 8078e56:	8b 85 cc f6 ff ff    	mov    -0x934(%ebp),%eax
 8078e5c:	89 85 d4 f6 ff ff    	mov    %eax,-0x92c(%ebp)
 8078e62:	c7 85 d8 f6 ff ff 08 	movl   $0x8,-0x928(%ebp)
 8078e69:	00 00 00 
 8078e6c:	8b 85 d4 f6 ff ff    	mov    -0x92c(%ebp),%eax
 8078e72:	8b 50 04             	mov    0x4(%eax),%edx
 8078e75:	8b 85 d8 f6 ff ff    	mov    -0x928(%ebp),%eax
 8078e7b:	01 c2                	add    %eax,%edx
 8078e7d:	8b 85 d4 f6 ff ff    	mov    -0x92c(%ebp),%eax
 8078e83:	89 50 04             	mov    %edx,0x4(%eax)
 8078e86:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8078e8c:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8078e90:	0f b7 d0             	movzwl %ax,%edx
 8078e93:	8b 85 c4 f6 ff ff    	mov    -0x93c(%ebp),%eax
 8078e99:	c1 e8 08             	shr    $0x8,%eax
 8078e9c:	89 c1                	mov    %eax,%ecx
 8078e9e:	8b 85 d0 f6 ff ff    	mov    -0x930(%ebp),%eax
 8078ea4:	89 85 dc f6 ff ff    	mov    %eax,-0x924(%ebp)
 8078eaa:	8b 85 dc f6 ff ff    	mov    -0x924(%ebp),%eax
 8078eb0:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8078eb7:	21 c8                	and    %ecx,%eax
 8078eb9:	01 d0                	add    %edx,%eax
 8078ebb:	c1 e0 02             	shl    $0x2,%eax
 8078ebe:	01 85 c8 f6 ff ff    	add    %eax,-0x938(%ebp)
 8078ec4:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8078eca:	0f b6 00             	movzbl (%eax),%eax
 8078ecd:	0f b6 c0             	movzbl %al,%eax
 8078ed0:	8b 95 cc f6 ff ff    	mov    -0x934(%ebp),%edx
 8078ed6:	89 95 e0 f6 ff ff    	mov    %edx,-0x920(%ebp)
 8078edc:	89 85 e4 f6 ff ff    	mov    %eax,-0x91c(%ebp)
 8078ee2:	8b 85 e0 f6 ff ff    	mov    -0x920(%ebp),%eax
 8078ee8:	8b 50 04             	mov    0x4(%eax),%edx
 8078eeb:	8b 85 e4 f6 ff ff    	mov    -0x91c(%ebp),%eax
 8078ef1:	01 c2                	add    %eax,%edx
 8078ef3:	8b 85 e0 f6 ff ff    	mov    -0x920(%ebp),%eax
 8078ef9:	89 50 04             	mov    %edx,0x4(%eax)
 8078efc:	8b 85 c8 f6 ff ff    	mov    -0x938(%ebp),%eax
 8078f02:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8078f06:	0f b7 c0             	movzwl %ax,%eax
 8078f09:	89 c2                	mov    %eax,%edx
 8078f0b:	8b 85 a4 f6 ff ff    	mov    -0x95c(%ebp),%eax
 8078f11:	89 10                	mov    %edx,(%eax)
 8078f13:	b8 01 00 00 00       	mov    $0x1,%eax
 8078f18:	eb 22                	jmp    8078f3c <SafeProcessCommands+0x7b5>
 8078f1a:	8b 85 a4 f6 ff ff    	mov    -0x95c(%ebp),%eax
 8078f20:	89 44 24 08          	mov    %eax,0x8(%esp)
 8078f24:	8b 85 a0 f6 ff ff    	mov    -0x960(%ebp),%eax
 8078f2a:	89 44 24 04          	mov    %eax,0x4(%esp)
 8078f2e:	8b 85 9c f6 ff ff    	mov    -0x964(%ebp),%eax
 8078f34:	89 04 24             	mov    %eax,(%esp)
 8078f37:	e8 90 fa fe ff       	call   80689cc <SafeDecodeSymbol>
 8078f3c:	85 c0                	test   %eax,%eax
 8078f3e:	75 0a                	jne    8078f4a <SafeProcessCommands+0x7c3>
 8078f40:	b8 00 00 00 00       	mov    $0x0,%eax
 8078f45:	e9 8a 0d 00 00       	jmp    8079cd4 <SafeProcessCommands+0x154d>
 8078f4a:	8b 85 ec f5 ff ff    	mov    -0xa14(%ebp),%eax
 8078f50:	8b 94 c3 a4 82 fd ff 	mov    -0x27d5c(%ebx,%eax,8),%edx
 8078f57:	8b 84 c3 a0 82 fd ff 	mov    -0x27d60(%ebx,%eax,8),%eax
 8078f5e:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8078f61:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 8078f64:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax
 8078f68:	0f be d0             	movsbl %al,%edx
 8078f6b:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078f71:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 8078f77:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax
 8078f7b:	0f b6 d0             	movzbl %al,%edx
 8078f7e:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078f84:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 8078f8a:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078f90:	8b 50 70             	mov    0x70(%eax),%edx
 8078f93:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078f99:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 8078f9f:	01 d0                	add    %edx,%eax
 8078fa1:	0f b6 10             	movzbl (%eax),%edx
 8078fa4:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8078faa:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
 8078fb0:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
 8078fb4:	0f b7 d0             	movzwl %ax,%edx
 8078fb7:	8b 85 50 f6 ff ff    	mov    -0x9b0(%ebp),%eax
 8078fbd:	89 10                	mov    %edx,(%eax)
 8078fbf:	83 bd 44 f6 ff ff 00 	cmpl   $0x0,-0x9bc(%ebp)
 8078fc6:	0f 85 7b 08 00 00    	jne    8079847 <SafeProcessCommands+0x10c0>
 8078fcc:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8078fd0:	84 c0                	test   %al,%al
 8078fd2:	0f 95 c0             	setne  %al
 8078fd5:	0f b6 c0             	movzbl %al,%eax
 8078fd8:	85 c0                	test   %eax,%eax
 8078fda:	0f 84 31 04 00 00    	je     8079411 <SafeProcessCommands+0xc8a>
 8078fe0:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 8078fe4:	0f b6 c0             	movzbl %al,%eax
 8078fe7:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 8078fed:	89 95 e8 f6 ff ff    	mov    %edx,-0x918(%ebp)
 8078ff3:	89 85 ec f6 ff ff    	mov    %eax,-0x914(%ebp)
 8078ff9:	83 bd ec f6 ff ff 10 	cmpl   $0x10,-0x914(%ebp)
 8079000:	0f 87 59 01 00 00    	ja     807915f <SafeProcessCommands+0x9d8>
 8079006:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 807900c:	89 85 f0 f6 ff ff    	mov    %eax,-0x910(%ebp)
 8079012:	8b 85 ec f6 ff ff    	mov    -0x914(%ebp),%eax
 8079018:	89 85 f4 f6 ff ff    	mov    %eax,-0x90c(%ebp)
 807901e:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8079024:	8b 40 04             	mov    0x4(%eax),%eax
 8079027:	83 f8 0f             	cmp    $0xf,%eax
 807902a:	0f 86 86 00 00 00    	jbe    80790b6 <SafeProcessCommands+0x92f>
 8079030:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8079036:	8b 00                	mov    (%eax),%eax
 8079038:	c1 e8 10             	shr    $0x10,%eax
 807903b:	89 c2                	mov    %eax,%edx
 807903d:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8079043:	89 10                	mov    %edx,(%eax)
 8079045:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 807904b:	8b 40 04             	mov    0x4(%eax),%eax
 807904e:	83 f0 10             	xor    $0x10,%eax
 8079051:	89 c2                	mov    %eax,%edx
 8079053:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8079059:	89 50 04             	mov    %edx,0x4(%eax)
 807905c:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8079062:	8b 10                	mov    (%eax),%edx
 8079064:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 807906a:	8b 40 08             	mov    0x8(%eax),%eax
 807906d:	89 85 f8 f6 ff ff    	mov    %eax,-0x908(%ebp)
 8079073:	8b 85 f8 f6 ff ff    	mov    -0x908(%ebp),%eax
 8079079:	0f b7 00             	movzwl (%eax),%eax
 807907c:	0f b7 c0             	movzwl %ax,%eax
 807907f:	c1 e0 10             	shl    $0x10,%eax
 8079082:	09 c2                	or     %eax,%edx
 8079084:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 807908a:	89 10                	mov    %edx,(%eax)
 807908c:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 8079092:	8b 40 0c             	mov    0xc(%eax),%eax
 8079095:	8d 50 fe             	lea    -0x2(%eax),%edx
 8079098:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 807909e:	89 50 0c             	mov    %edx,0xc(%eax)
 80790a1:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80790a7:	8b 40 08             	mov    0x8(%eax),%eax
 80790aa:	8d 50 02             	lea    0x2(%eax),%edx
 80790ad:	8b 85 f0 f6 ff ff    	mov    -0x910(%ebp),%eax
 80790b3:	89 50 08             	mov    %edx,0x8(%eax)
 80790b6:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 80790bc:	89 85 fc f6 ff ff    	mov    %eax,-0x904(%ebp)
 80790c2:	8b 85 ec f6 ff ff    	mov    -0x914(%ebp),%eax
 80790c8:	89 85 00 f7 ff ff    	mov    %eax,-0x900(%ebp)
 80790ce:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 80790d4:	89 85 04 f7 ff ff    	mov    %eax,-0x8fc(%ebp)
 80790da:	8b 85 fc f6 ff ff    	mov    -0x904(%ebp),%eax
 80790e0:	89 85 08 f7 ff ff    	mov    %eax,-0x8f8(%ebp)
 80790e6:	8b 85 08 f7 ff ff    	mov    -0x8f8(%ebp),%eax
 80790ec:	8b 10                	mov    (%eax),%edx
 80790ee:	8b 85 08 f7 ff ff    	mov    -0x8f8(%ebp),%eax
 80790f4:	8b 40 04             	mov    0x4(%eax),%eax
 80790f7:	89 c1                	mov    %eax,%ecx
 80790f9:	d3 ea                	shr    %cl,%edx
 80790fb:	89 d0                	mov    %edx,%eax
 80790fd:	89 c2                	mov    %eax,%edx
 80790ff:	8b 85 00 f7 ff ff    	mov    -0x900(%ebp),%eax
 8079105:	89 85 0c f7 ff ff    	mov    %eax,-0x8f4(%ebp)
 807910b:	8b 85 0c f7 ff ff    	mov    -0x8f4(%ebp),%eax
 8079111:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8079118:	21 c2                	and    %eax,%edx
 807911a:	8b 85 04 f7 ff ff    	mov    -0x8fc(%ebp),%eax
 8079120:	89 10                	mov    %edx,(%eax)
 8079122:	8b 85 fc f6 ff ff    	mov    -0x904(%ebp),%eax
 8079128:	89 85 10 f7 ff ff    	mov    %eax,-0x8f0(%ebp)
 807912e:	8b 85 00 f7 ff ff    	mov    -0x900(%ebp),%eax
 8079134:	89 85 14 f7 ff ff    	mov    %eax,-0x8ec(%ebp)
 807913a:	8b 85 10 f7 ff ff    	mov    -0x8f0(%ebp),%eax
 8079140:	8b 50 04             	mov    0x4(%eax),%edx
 8079143:	8b 85 14 f7 ff ff    	mov    -0x8ec(%ebp),%eax
 8079149:	01 c2                	add    %eax,%edx
 807914b:	8b 85 10 f7 ff ff    	mov    -0x8f0(%ebp),%eax
 8079151:	89 50 04             	mov    %edx,0x4(%eax)
 8079154:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807915a:	e9 ac 02 00 00       	jmp    807940b <SafeProcessCommands+0xc84>
 807915f:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 8079165:	89 85 18 f7 ff ff    	mov    %eax,-0x8e8(%ebp)
 807916b:	c7 85 1c f7 ff ff 10 	movl   $0x10,-0x8e4(%ebp)
 8079172:	00 00 00 
 8079175:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 807917b:	8b 40 04             	mov    0x4(%eax),%eax
 807917e:	83 f8 0f             	cmp    $0xf,%eax
 8079181:	0f 86 86 00 00 00    	jbe    807920d <SafeProcessCommands+0xa86>
 8079187:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 807918d:	8b 00                	mov    (%eax),%eax
 807918f:	c1 e8 10             	shr    $0x10,%eax
 8079192:	89 c2                	mov    %eax,%edx
 8079194:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 807919a:	89 10                	mov    %edx,(%eax)
 807919c:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791a2:	8b 40 04             	mov    0x4(%eax),%eax
 80791a5:	83 f0 10             	xor    $0x10,%eax
 80791a8:	89 c2                	mov    %eax,%edx
 80791aa:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791b0:	89 50 04             	mov    %edx,0x4(%eax)
 80791b3:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791b9:	8b 10                	mov    (%eax),%edx
 80791bb:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791c1:	8b 40 08             	mov    0x8(%eax),%eax
 80791c4:	89 85 20 f7 ff ff    	mov    %eax,-0x8e0(%ebp)
 80791ca:	8b 85 20 f7 ff ff    	mov    -0x8e0(%ebp),%eax
 80791d0:	0f b7 00             	movzwl (%eax),%eax
 80791d3:	0f b7 c0             	movzwl %ax,%eax
 80791d6:	c1 e0 10             	shl    $0x10,%eax
 80791d9:	09 c2                	or     %eax,%edx
 80791db:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791e1:	89 10                	mov    %edx,(%eax)
 80791e3:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791e9:	8b 40 0c             	mov    0xc(%eax),%eax
 80791ec:	8d 50 fe             	lea    -0x2(%eax),%edx
 80791ef:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791f5:	89 50 0c             	mov    %edx,0xc(%eax)
 80791f8:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 80791fe:	8b 40 08             	mov    0x8(%eax),%eax
 8079201:	8d 50 02             	lea    0x2(%eax),%edx
 8079204:	8b 85 18 f7 ff ff    	mov    -0x8e8(%ebp),%eax
 807920a:	89 50 08             	mov    %edx,0x8(%eax)
 807920d:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 8079213:	89 85 24 f7 ff ff    	mov    %eax,-0x8dc(%ebp)
 8079219:	c7 85 28 f7 ff ff 10 	movl   $0x10,-0x8d8(%ebp)
 8079220:	00 00 00 
 8079223:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 8079229:	89 85 2c f7 ff ff    	mov    %eax,-0x8d4(%ebp)
 807922f:	8b 85 24 f7 ff ff    	mov    -0x8dc(%ebp),%eax
 8079235:	89 85 30 f7 ff ff    	mov    %eax,-0x8d0(%ebp)
 807923b:	8b 85 30 f7 ff ff    	mov    -0x8d0(%ebp),%eax
 8079241:	8b 10                	mov    (%eax),%edx
 8079243:	8b 85 30 f7 ff ff    	mov    -0x8d0(%ebp),%eax
 8079249:	8b 40 04             	mov    0x4(%eax),%eax
 807924c:	89 c1                	mov    %eax,%ecx
 807924e:	d3 ea                	shr    %cl,%edx
 8079250:	89 d0                	mov    %edx,%eax
 8079252:	89 c2                	mov    %eax,%edx
 8079254:	8b 85 28 f7 ff ff    	mov    -0x8d8(%ebp),%eax
 807925a:	89 85 34 f7 ff ff    	mov    %eax,-0x8cc(%ebp)
 8079260:	8b 85 34 f7 ff ff    	mov    -0x8cc(%ebp),%eax
 8079266:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807926d:	21 c2                	and    %eax,%edx
 807926f:	8b 85 2c f7 ff ff    	mov    -0x8d4(%ebp),%eax
 8079275:	89 10                	mov    %edx,(%eax)
 8079277:	8b 85 24 f7 ff ff    	mov    -0x8dc(%ebp),%eax
 807927d:	89 85 38 f7 ff ff    	mov    %eax,-0x8c8(%ebp)
 8079283:	8b 85 28 f7 ff ff    	mov    -0x8d8(%ebp),%eax
 8079289:	89 85 3c f7 ff ff    	mov    %eax,-0x8c4(%ebp)
 807928f:	8b 85 38 f7 ff ff    	mov    -0x8c8(%ebp),%eax
 8079295:	8b 50 04             	mov    0x4(%eax),%edx
 8079298:	8b 85 3c f7 ff ff    	mov    -0x8c4(%ebp),%eax
 807929e:	01 c2                	add    %eax,%edx
 80792a0:	8b 85 38 f7 ff ff    	mov    -0x8c8(%ebp),%eax
 80792a6:	89 50 04             	mov    %edx,0x4(%eax)
 80792a9:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 80792af:	89 85 40 f7 ff ff    	mov    %eax,-0x8c0(%ebp)
 80792b5:	c7 85 44 f7 ff ff 08 	movl   $0x8,-0x8bc(%ebp)
 80792bc:	00 00 00 
 80792bf:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80792c5:	8b 40 04             	mov    0x4(%eax),%eax
 80792c8:	83 f8 0f             	cmp    $0xf,%eax
 80792cb:	0f 86 86 00 00 00    	jbe    8079357 <SafeProcessCommands+0xbd0>
 80792d1:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80792d7:	8b 00                	mov    (%eax),%eax
 80792d9:	c1 e8 10             	shr    $0x10,%eax
 80792dc:	89 c2                	mov    %eax,%edx
 80792de:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80792e4:	89 10                	mov    %edx,(%eax)
 80792e6:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80792ec:	8b 40 04             	mov    0x4(%eax),%eax
 80792ef:	83 f0 10             	xor    $0x10,%eax
 80792f2:	89 c2                	mov    %eax,%edx
 80792f4:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 80792fa:	89 50 04             	mov    %edx,0x4(%eax)
 80792fd:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8079303:	8b 10                	mov    (%eax),%edx
 8079305:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807930b:	8b 40 08             	mov    0x8(%eax),%eax
 807930e:	89 85 48 f7 ff ff    	mov    %eax,-0x8b8(%ebp)
 8079314:	8b 85 48 f7 ff ff    	mov    -0x8b8(%ebp),%eax
 807931a:	0f b7 00             	movzwl (%eax),%eax
 807931d:	0f b7 c0             	movzwl %ax,%eax
 8079320:	c1 e0 10             	shl    $0x10,%eax
 8079323:	09 c2                	or     %eax,%edx
 8079325:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807932b:	89 10                	mov    %edx,(%eax)
 807932d:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8079333:	8b 40 0c             	mov    0xc(%eax),%eax
 8079336:	8d 50 fe             	lea    -0x2(%eax),%edx
 8079339:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 807933f:	89 50 0c             	mov    %edx,0xc(%eax)
 8079342:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8079348:	8b 40 08             	mov    0x8(%eax),%eax
 807934b:	8d 50 02             	lea    0x2(%eax),%edx
 807934e:	8b 85 40 f7 ff ff    	mov    -0x8c0(%ebp),%eax
 8079354:	89 50 08             	mov    %edx,0x8(%eax)
 8079357:	8b 85 ec f6 ff ff    	mov    -0x914(%ebp),%eax
 807935d:	8d 50 f0             	lea    -0x10(%eax),%edx
 8079360:	8b 85 e8 f6 ff ff    	mov    -0x918(%ebp),%eax
 8079366:	89 85 4c f7 ff ff    	mov    %eax,-0x8b4(%ebp)
 807936c:	89 95 50 f7 ff ff    	mov    %edx,-0x8b0(%ebp)
 8079372:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8079378:	89 85 54 f7 ff ff    	mov    %eax,-0x8ac(%ebp)
 807937e:	8b 85 4c f7 ff ff    	mov    -0x8b4(%ebp),%eax
 8079384:	89 85 58 f7 ff ff    	mov    %eax,-0x8a8(%ebp)
 807938a:	8b 85 58 f7 ff ff    	mov    -0x8a8(%ebp),%eax
 8079390:	8b 10                	mov    (%eax),%edx
 8079392:	8b 85 58 f7 ff ff    	mov    -0x8a8(%ebp),%eax
 8079398:	8b 40 04             	mov    0x4(%eax),%eax
 807939b:	89 c1                	mov    %eax,%ecx
 807939d:	d3 ea                	shr    %cl,%edx
 807939f:	89 d0                	mov    %edx,%eax
 80793a1:	89 c2                	mov    %eax,%edx
 80793a3:	8b 85 50 f7 ff ff    	mov    -0x8b0(%ebp),%eax
 80793a9:	89 85 5c f7 ff ff    	mov    %eax,-0x8a4(%ebp)
 80793af:	8b 85 5c f7 ff ff    	mov    -0x8a4(%ebp),%eax
 80793b5:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80793bc:	21 c2                	and    %eax,%edx
 80793be:	8b 85 54 f7 ff ff    	mov    -0x8ac(%ebp),%eax
 80793c4:	89 10                	mov    %edx,(%eax)
 80793c6:	8b 85 4c f7 ff ff    	mov    -0x8b4(%ebp),%eax
 80793cc:	89 85 60 f7 ff ff    	mov    %eax,-0x8a0(%ebp)
 80793d2:	8b 85 50 f7 ff ff    	mov    -0x8b0(%ebp),%eax
 80793d8:	89 85 64 f7 ff ff    	mov    %eax,-0x89c(%ebp)
 80793de:	8b 85 60 f7 ff ff    	mov    -0x8a0(%ebp),%eax
 80793e4:	8b 50 04             	mov    0x4(%eax),%edx
 80793e7:	8b 85 64 f7 ff ff    	mov    -0x89c(%ebp),%eax
 80793ed:	01 c2                	add    %eax,%edx
 80793ef:	8b 85 60 f7 ff ff    	mov    -0x8a0(%ebp),%eax
 80793f5:	89 50 04             	mov    %edx,0x4(%eax)
 80793f8:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 80793fe:	c1 e0 10             	shl    $0x10,%eax
 8079401:	89 c2                	mov    %eax,%edx
 8079403:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 8079409:	09 d0                	or     %edx,%eax
 807940b:	89 85 f0 f5 ff ff    	mov    %eax,-0xa10(%ebp)
 8079411:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 8079415:	0f b6 c0             	movzbl %al,%eax
 8079418:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 807941e:	89 95 68 f7 ff ff    	mov    %edx,-0x898(%ebp)
 8079424:	89 85 6c f7 ff ff    	mov    %eax,-0x894(%ebp)
 807942a:	83 bd 6c f7 ff ff 10 	cmpl   $0x10,-0x894(%ebp)
 8079431:	0f 87 59 01 00 00    	ja     8079590 <SafeProcessCommands+0xe09>
 8079437:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 807943d:	89 85 70 f7 ff ff    	mov    %eax,-0x890(%ebp)
 8079443:	8b 85 6c f7 ff ff    	mov    -0x894(%ebp),%eax
 8079449:	89 85 74 f7 ff ff    	mov    %eax,-0x88c(%ebp)
 807944f:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8079455:	8b 40 04             	mov    0x4(%eax),%eax
 8079458:	83 f8 0f             	cmp    $0xf,%eax
 807945b:	0f 86 86 00 00 00    	jbe    80794e7 <SafeProcessCommands+0xd60>
 8079461:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8079467:	8b 00                	mov    (%eax),%eax
 8079469:	c1 e8 10             	shr    $0x10,%eax
 807946c:	89 c2                	mov    %eax,%edx
 807946e:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8079474:	89 10                	mov    %edx,(%eax)
 8079476:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 807947c:	8b 40 04             	mov    0x4(%eax),%eax
 807947f:	83 f0 10             	xor    $0x10,%eax
 8079482:	89 c2                	mov    %eax,%edx
 8079484:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 807948a:	89 50 04             	mov    %edx,0x4(%eax)
 807948d:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 8079493:	8b 10                	mov    (%eax),%edx
 8079495:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 807949b:	8b 40 08             	mov    0x8(%eax),%eax
 807949e:	89 85 78 f7 ff ff    	mov    %eax,-0x888(%ebp)
 80794a4:	8b 85 78 f7 ff ff    	mov    -0x888(%ebp),%eax
 80794aa:	0f b7 00             	movzwl (%eax),%eax
 80794ad:	0f b7 c0             	movzwl %ax,%eax
 80794b0:	c1 e0 10             	shl    $0x10,%eax
 80794b3:	09 c2                	or     %eax,%edx
 80794b5:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80794bb:	89 10                	mov    %edx,(%eax)
 80794bd:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80794c3:	8b 40 0c             	mov    0xc(%eax),%eax
 80794c6:	8d 50 fe             	lea    -0x2(%eax),%edx
 80794c9:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80794cf:	89 50 0c             	mov    %edx,0xc(%eax)
 80794d2:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80794d8:	8b 40 08             	mov    0x8(%eax),%eax
 80794db:	8d 50 02             	lea    0x2(%eax),%edx
 80794de:	8b 85 70 f7 ff ff    	mov    -0x890(%ebp),%eax
 80794e4:	89 50 08             	mov    %edx,0x8(%eax)
 80794e7:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 80794ed:	89 85 7c f7 ff ff    	mov    %eax,-0x884(%ebp)
 80794f3:	8b 85 6c f7 ff ff    	mov    -0x894(%ebp),%eax
 80794f9:	89 85 80 f7 ff ff    	mov    %eax,-0x880(%ebp)
 80794ff:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8079505:	89 85 84 f7 ff ff    	mov    %eax,-0x87c(%ebp)
 807950b:	8b 85 7c f7 ff ff    	mov    -0x884(%ebp),%eax
 8079511:	89 85 88 f7 ff ff    	mov    %eax,-0x878(%ebp)
 8079517:	8b 85 88 f7 ff ff    	mov    -0x878(%ebp),%eax
 807951d:	8b 10                	mov    (%eax),%edx
 807951f:	8b 85 88 f7 ff ff    	mov    -0x878(%ebp),%eax
 8079525:	8b 40 04             	mov    0x4(%eax),%eax
 8079528:	89 c1                	mov    %eax,%ecx
 807952a:	d3 ea                	shr    %cl,%edx
 807952c:	89 d0                	mov    %edx,%eax
 807952e:	89 c2                	mov    %eax,%edx
 8079530:	8b 85 80 f7 ff ff    	mov    -0x880(%ebp),%eax
 8079536:	89 85 8c f7 ff ff    	mov    %eax,-0x874(%ebp)
 807953c:	8b 85 8c f7 ff ff    	mov    -0x874(%ebp),%eax
 8079542:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8079549:	21 c2                	and    %eax,%edx
 807954b:	8b 85 84 f7 ff ff    	mov    -0x87c(%ebp),%eax
 8079551:	89 10                	mov    %edx,(%eax)
 8079553:	8b 85 7c f7 ff ff    	mov    -0x884(%ebp),%eax
 8079559:	89 85 90 f7 ff ff    	mov    %eax,-0x870(%ebp)
 807955f:	8b 85 80 f7 ff ff    	mov    -0x880(%ebp),%eax
 8079565:	89 85 94 f7 ff ff    	mov    %eax,-0x86c(%ebp)
 807956b:	8b 85 90 f7 ff ff    	mov    -0x870(%ebp),%eax
 8079571:	8b 50 04             	mov    0x4(%eax),%edx
 8079574:	8b 85 94 f7 ff ff    	mov    -0x86c(%ebp),%eax
 807957a:	01 c2                	add    %eax,%edx
 807957c:	8b 85 90 f7 ff ff    	mov    -0x870(%ebp),%eax
 8079582:	89 50 04             	mov    %edx,0x4(%eax)
 8079585:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807958b:	e9 ac 02 00 00       	jmp    807983c <SafeProcessCommands+0x10b5>
 8079590:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 8079596:	89 85 98 f7 ff ff    	mov    %eax,-0x868(%ebp)
 807959c:	c7 85 9c f7 ff ff 10 	movl   $0x10,-0x864(%ebp)
 80795a3:	00 00 00 
 80795a6:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795ac:	8b 40 04             	mov    0x4(%eax),%eax
 80795af:	83 f8 0f             	cmp    $0xf,%eax
 80795b2:	0f 86 86 00 00 00    	jbe    807963e <SafeProcessCommands+0xeb7>
 80795b8:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795be:	8b 00                	mov    (%eax),%eax
 80795c0:	c1 e8 10             	shr    $0x10,%eax
 80795c3:	89 c2                	mov    %eax,%edx
 80795c5:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795cb:	89 10                	mov    %edx,(%eax)
 80795cd:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795d3:	8b 40 04             	mov    0x4(%eax),%eax
 80795d6:	83 f0 10             	xor    $0x10,%eax
 80795d9:	89 c2                	mov    %eax,%edx
 80795db:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795e1:	89 50 04             	mov    %edx,0x4(%eax)
 80795e4:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795ea:	8b 10                	mov    (%eax),%edx
 80795ec:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 80795f2:	8b 40 08             	mov    0x8(%eax),%eax
 80795f5:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%ebp)
 80795fb:	8b 85 a0 f7 ff ff    	mov    -0x860(%ebp),%eax
 8079601:	0f b7 00             	movzwl (%eax),%eax
 8079604:	0f b7 c0             	movzwl %ax,%eax
 8079607:	c1 e0 10             	shl    $0x10,%eax
 807960a:	09 c2                	or     %eax,%edx
 807960c:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8079612:	89 10                	mov    %edx,(%eax)
 8079614:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807961a:	8b 40 0c             	mov    0xc(%eax),%eax
 807961d:	8d 50 fe             	lea    -0x2(%eax),%edx
 8079620:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 8079626:	89 50 0c             	mov    %edx,0xc(%eax)
 8079629:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807962f:	8b 40 08             	mov    0x8(%eax),%eax
 8079632:	8d 50 02             	lea    0x2(%eax),%edx
 8079635:	8b 85 98 f7 ff ff    	mov    -0x868(%ebp),%eax
 807963b:	89 50 08             	mov    %edx,0x8(%eax)
 807963e:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 8079644:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%ebp)
 807964a:	c7 85 a8 f7 ff ff 10 	movl   $0x10,-0x858(%ebp)
 8079651:	00 00 00 
 8079654:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807965a:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%ebp)
 8079660:	8b 85 a4 f7 ff ff    	mov    -0x85c(%ebp),%eax
 8079666:	89 85 b0 f7 ff ff    	mov    %eax,-0x850(%ebp)
 807966c:	8b 85 b0 f7 ff ff    	mov    -0x850(%ebp),%eax
 8079672:	8b 10                	mov    (%eax),%edx
 8079674:	8b 85 b0 f7 ff ff    	mov    -0x850(%ebp),%eax
 807967a:	8b 40 04             	mov    0x4(%eax),%eax
 807967d:	89 c1                	mov    %eax,%ecx
 807967f:	d3 ea                	shr    %cl,%edx
 8079681:	89 d0                	mov    %edx,%eax
 8079683:	89 c2                	mov    %eax,%edx
 8079685:	8b 85 a8 f7 ff ff    	mov    -0x858(%ebp),%eax
 807968b:	89 85 b4 f7 ff ff    	mov    %eax,-0x84c(%ebp)
 8079691:	8b 85 b4 f7 ff ff    	mov    -0x84c(%ebp),%eax
 8079697:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807969e:	21 c2                	and    %eax,%edx
 80796a0:	8b 85 ac f7 ff ff    	mov    -0x854(%ebp),%eax
 80796a6:	89 10                	mov    %edx,(%eax)
 80796a8:	8b 85 a4 f7 ff ff    	mov    -0x85c(%ebp),%eax
 80796ae:	89 85 b8 f7 ff ff    	mov    %eax,-0x848(%ebp)
 80796b4:	8b 85 a8 f7 ff ff    	mov    -0x858(%ebp),%eax
 80796ba:	89 85 bc f7 ff ff    	mov    %eax,-0x844(%ebp)
 80796c0:	8b 85 b8 f7 ff ff    	mov    -0x848(%ebp),%eax
 80796c6:	8b 50 04             	mov    0x4(%eax),%edx
 80796c9:	8b 85 bc f7 ff ff    	mov    -0x844(%ebp),%eax
 80796cf:	01 c2                	add    %eax,%edx
 80796d1:	8b 85 b8 f7 ff ff    	mov    -0x848(%ebp),%eax
 80796d7:	89 50 04             	mov    %edx,0x4(%eax)
 80796da:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 80796e0:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%ebp)
 80796e6:	c7 85 c4 f7 ff ff 08 	movl   $0x8,-0x83c(%ebp)
 80796ed:	00 00 00 
 80796f0:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 80796f6:	8b 40 04             	mov    0x4(%eax),%eax
 80796f9:	83 f8 0f             	cmp    $0xf,%eax
 80796fc:	0f 86 86 00 00 00    	jbe    8079788 <SafeProcessCommands+0x1001>
 8079702:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079708:	8b 00                	mov    (%eax),%eax
 807970a:	c1 e8 10             	shr    $0x10,%eax
 807970d:	89 c2                	mov    %eax,%edx
 807970f:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079715:	89 10                	mov    %edx,(%eax)
 8079717:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807971d:	8b 40 04             	mov    0x4(%eax),%eax
 8079720:	83 f0 10             	xor    $0x10,%eax
 8079723:	89 c2                	mov    %eax,%edx
 8079725:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807972b:	89 50 04             	mov    %edx,0x4(%eax)
 807972e:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079734:	8b 10                	mov    (%eax),%edx
 8079736:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807973c:	8b 40 08             	mov    0x8(%eax),%eax
 807973f:	89 85 c8 f7 ff ff    	mov    %eax,-0x838(%ebp)
 8079745:	8b 85 c8 f7 ff ff    	mov    -0x838(%ebp),%eax
 807974b:	0f b7 00             	movzwl (%eax),%eax
 807974e:	0f b7 c0             	movzwl %ax,%eax
 8079751:	c1 e0 10             	shl    $0x10,%eax
 8079754:	09 c2                	or     %eax,%edx
 8079756:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 807975c:	89 10                	mov    %edx,(%eax)
 807975e:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079764:	8b 40 0c             	mov    0xc(%eax),%eax
 8079767:	8d 50 fe             	lea    -0x2(%eax),%edx
 807976a:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079770:	89 50 0c             	mov    %edx,0xc(%eax)
 8079773:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079779:	8b 40 08             	mov    0x8(%eax),%eax
 807977c:	8d 50 02             	lea    0x2(%eax),%edx
 807977f:	8b 85 c0 f7 ff ff    	mov    -0x840(%ebp),%eax
 8079785:	89 50 08             	mov    %edx,0x8(%eax)
 8079788:	8b 85 6c f7 ff ff    	mov    -0x894(%ebp),%eax
 807978e:	8d 50 f0             	lea    -0x10(%eax),%edx
 8079791:	8b 85 68 f7 ff ff    	mov    -0x898(%ebp),%eax
 8079797:	89 85 cc f7 ff ff    	mov    %eax,-0x834(%ebp)
 807979d:	89 95 d0 f7 ff ff    	mov    %edx,-0x830(%ebp)
 80797a3:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 80797a9:	89 85 d4 f7 ff ff    	mov    %eax,-0x82c(%ebp)
 80797af:	8b 85 cc f7 ff ff    	mov    -0x834(%ebp),%eax
 80797b5:	89 85 d8 f7 ff ff    	mov    %eax,-0x828(%ebp)
 80797bb:	8b 85 d8 f7 ff ff    	mov    -0x828(%ebp),%eax
 80797c1:	8b 10                	mov    (%eax),%edx
 80797c3:	8b 85 d8 f7 ff ff    	mov    -0x828(%ebp),%eax
 80797c9:	8b 40 04             	mov    0x4(%eax),%eax
 80797cc:	89 c1                	mov    %eax,%ecx
 80797ce:	d3 ea                	shr    %cl,%edx
 80797d0:	89 d0                	mov    %edx,%eax
 80797d2:	89 c2                	mov    %eax,%edx
 80797d4:	8b 85 d0 f7 ff ff    	mov    -0x830(%ebp),%eax
 80797da:	89 85 dc f7 ff ff    	mov    %eax,-0x824(%ebp)
 80797e0:	8b 85 dc f7 ff ff    	mov    -0x824(%ebp),%eax
 80797e6:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80797ed:	21 c2                	and    %eax,%edx
 80797ef:	8b 85 d4 f7 ff ff    	mov    -0x82c(%ebp),%eax
 80797f5:	89 10                	mov    %edx,(%eax)
 80797f7:	8b 85 cc f7 ff ff    	mov    -0x834(%ebp),%eax
 80797fd:	89 85 e0 f7 ff ff    	mov    %eax,-0x820(%ebp)
 8079803:	8b 85 d0 f7 ff ff    	mov    -0x830(%ebp),%eax
 8079809:	89 85 e4 f7 ff ff    	mov    %eax,-0x81c(%ebp)
 807980f:	8b 85 e0 f7 ff ff    	mov    -0x820(%ebp),%eax
 8079815:	8b 50 04             	mov    0x4(%eax),%edx
 8079818:	8b 85 e4 f7 ff ff    	mov    -0x81c(%ebp),%eax
 807981e:	01 c2                	add    %eax,%edx
 8079820:	8b 85 e0 f7 ff ff    	mov    -0x820(%ebp),%eax
 8079826:	89 50 04             	mov    %edx,0x4(%eax)
 8079829:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807982f:	c1 e0 10             	shl    $0x10,%eax
 8079832:	89 c2                	mov    %eax,%edx
 8079834:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807983a:	09 d0                	or     %edx,%eax
 807983c:	89 85 f8 f5 ff ff    	mov    %eax,-0xa08(%ebp)
 8079842:	e9 3a 04 00 00       	jmp    8079c81 <SafeProcessCommands+0x14fa>
 8079847:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 807984b:	0f b6 c0             	movzbl %al,%eax
 807984e:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 8079854:	89 95 e8 f7 ff ff    	mov    %edx,-0x818(%ebp)
 807985a:	89 85 ec f7 ff ff    	mov    %eax,-0x814(%ebp)
 8079860:	8d 85 f0 f5 ff ff    	lea    -0xa10(%ebp),%eax
 8079866:	89 85 f0 f7 ff ff    	mov    %eax,-0x810(%ebp)
 807986c:	83 bd ec f7 ff ff 00 	cmpl   $0x0,-0x814(%ebp)
 8079873:	0f 84 a3 01 00 00    	je     8079a1c <SafeProcessCommands+0x1295>
 8079879:	8b 85 e8 f7 ff ff    	mov    -0x818(%ebp),%eax
 807987f:	89 85 f4 f7 ff ff    	mov    %eax,-0x80c(%ebp)
 8079885:	8b 85 ec f7 ff ff    	mov    -0x814(%ebp),%eax
 807988b:	89 85 f8 f7 ff ff    	mov    %eax,-0x808(%ebp)
 8079891:	8b 85 f0 f7 ff ff    	mov    -0x810(%ebp),%eax
 8079897:	89 85 fc f7 ff ff    	mov    %eax,-0x804(%ebp)
 807989d:	e9 ab 00 00 00       	jmp    807994d <SafeProcessCommands+0x11c6>
 80798a2:	8b 85 f4 f7 ff ff    	mov    -0x80c(%ebp),%eax
 80798a8:	89 85 00 f8 ff ff    	mov    %eax,-0x800(%ebp)
 80798ae:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 80798b4:	8b 40 0c             	mov    0xc(%eax),%eax
 80798b7:	85 c0                	test   %eax,%eax
 80798b9:	75 07                	jne    80798c2 <SafeProcessCommands+0x113b>
 80798bb:	b8 00 00 00 00       	mov    $0x0,%eax
 80798c0:	eb 7d                	jmp    807993f <SafeProcessCommands+0x11b8>
 80798c2:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 80798c8:	8b 00                	mov    (%eax),%eax
 80798ca:	c1 e8 08             	shr    $0x8,%eax
 80798cd:	89 c2                	mov    %eax,%edx
 80798cf:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 80798d5:	89 10                	mov    %edx,(%eax)
 80798d7:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 80798dd:	8b 10                	mov    (%eax),%edx
 80798df:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 80798e5:	8b 40 08             	mov    0x8(%eax),%eax
 80798e8:	0f b6 00             	movzbl (%eax),%eax
 80798eb:	0f b6 c0             	movzbl %al,%eax
 80798ee:	c1 e0 18             	shl    $0x18,%eax
 80798f1:	09 c2                	or     %eax,%edx
 80798f3:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 80798f9:	89 10                	mov    %edx,(%eax)
 80798fb:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8079901:	8b 40 04             	mov    0x4(%eax),%eax
 8079904:	8d 50 f8             	lea    -0x8(%eax),%edx
 8079907:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 807990d:	89 50 04             	mov    %edx,0x4(%eax)
 8079910:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8079916:	8b 40 0c             	mov    0xc(%eax),%eax
 8079919:	8d 50 ff             	lea    -0x1(%eax),%edx
 807991c:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8079922:	89 50 0c             	mov    %edx,0xc(%eax)
 8079925:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 807992b:	8b 40 08             	mov    0x8(%eax),%eax
 807992e:	8d 50 01             	lea    0x1(%eax),%edx
 8079931:	8b 85 00 f8 ff ff    	mov    -0x800(%ebp),%eax
 8079937:	89 50 08             	mov    %edx,0x8(%eax)
 807993a:	b8 01 00 00 00       	mov    $0x1,%eax
 807993f:	85 c0                	test   %eax,%eax
 8079941:	75 0a                	jne    807994d <SafeProcessCommands+0x11c6>
 8079943:	b8 00 00 00 00       	mov    $0x0,%eax
 8079948:	e9 e0 00 00 00       	jmp    8079a2d <SafeProcessCommands+0x12a6>
 807994d:	8b 85 f4 f7 ff ff    	mov    -0x80c(%ebp),%eax
 8079953:	89 85 04 f8 ff ff    	mov    %eax,-0x7fc(%ebp)
 8079959:	8b 85 04 f8 ff ff    	mov    -0x7fc(%ebp),%eax
 807995f:	8b 40 04             	mov    0x4(%eax),%eax
 8079962:	ba 20 00 00 00       	mov    $0x20,%edx
 8079967:	29 c2                	sub    %eax,%edx
 8079969:	89 d0                	mov    %edx,%eax
 807996b:	39 85 f8 f7 ff ff    	cmp    %eax,-0x808(%ebp)
 8079971:	0f 87 2b ff ff ff    	ja     80798a2 <SafeProcessCommands+0x111b>
 8079977:	8b 85 f4 f7 ff ff    	mov    -0x80c(%ebp),%eax
 807997d:	89 85 08 f8 ff ff    	mov    %eax,-0x7f8(%ebp)
 8079983:	8b 85 f8 f7 ff ff    	mov    -0x808(%ebp),%eax
 8079989:	89 85 0c f8 ff ff    	mov    %eax,-0x7f4(%ebp)
 807998f:	8b 85 fc f7 ff ff    	mov    -0x804(%ebp),%eax
 8079995:	89 85 10 f8 ff ff    	mov    %eax,-0x7f0(%ebp)
 807999b:	8b 85 08 f8 ff ff    	mov    -0x7f8(%ebp),%eax
 80799a1:	89 85 14 f8 ff ff    	mov    %eax,-0x7ec(%ebp)
 80799a7:	8b 85 14 f8 ff ff    	mov    -0x7ec(%ebp),%eax
 80799ad:	8b 10                	mov    (%eax),%edx
 80799af:	8b 85 14 f8 ff ff    	mov    -0x7ec(%ebp),%eax
 80799b5:	8b 40 04             	mov    0x4(%eax),%eax
 80799b8:	89 c1                	mov    %eax,%ecx
 80799ba:	d3 ea                	shr    %cl,%edx
 80799bc:	89 d0                	mov    %edx,%eax
 80799be:	89 c2                	mov    %eax,%edx
 80799c0:	8b 85 0c f8 ff ff    	mov    -0x7f4(%ebp),%eax
 80799c6:	89 85 18 f8 ff ff    	mov    %eax,-0x7e8(%ebp)
 80799cc:	8b 85 18 f8 ff ff    	mov    -0x7e8(%ebp),%eax
 80799d2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 80799d9:	21 c2                	and    %eax,%edx
 80799db:	8b 85 10 f8 ff ff    	mov    -0x7f0(%ebp),%eax
 80799e1:	89 10                	mov    %edx,(%eax)
 80799e3:	8b 85 08 f8 ff ff    	mov    -0x7f8(%ebp),%eax
 80799e9:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%ebp)
 80799ef:	8b 85 0c f8 ff ff    	mov    -0x7f4(%ebp),%eax
 80799f5:	89 85 20 f8 ff ff    	mov    %eax,-0x7e0(%ebp)
 80799fb:	8b 85 1c f8 ff ff    	mov    -0x7e4(%ebp),%eax
 8079a01:	8b 50 04             	mov    0x4(%eax),%edx
 8079a04:	8b 85 20 f8 ff ff    	mov    -0x7e0(%ebp),%eax
 8079a0a:	01 c2                	add    %eax,%edx
 8079a0c:	8b 85 1c f8 ff ff    	mov    -0x7e4(%ebp),%eax
 8079a12:	89 50 04             	mov    %edx,0x4(%eax)
 8079a15:	b8 01 00 00 00       	mov    $0x1,%eax
 8079a1a:	eb 11                	jmp    8079a2d <SafeProcessCommands+0x12a6>
 8079a1c:	8b 85 f0 f7 ff ff    	mov    -0x810(%ebp),%eax
 8079a22:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8079a28:	b8 01 00 00 00       	mov    $0x1,%eax
 8079a2d:	85 c0                	test   %eax,%eax
 8079a2f:	0f 84 ea 01 00 00    	je     8079c1f <SafeProcessCommands+0x1498>
 8079a35:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 8079a39:	0f b6 c0             	movzbl %al,%eax
 8079a3c:	8b 95 4c f6 ff ff    	mov    -0x9b4(%ebp),%edx
 8079a42:	89 95 24 f8 ff ff    	mov    %edx,-0x7dc(%ebp)
 8079a48:	89 85 28 f8 ff ff    	mov    %eax,-0x7d8(%ebp)
 8079a4e:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 8079a54:	89 85 2c f8 ff ff    	mov    %eax,-0x7d4(%ebp)
 8079a5a:	83 bd 28 f8 ff ff 00 	cmpl   $0x0,-0x7d8(%ebp)
 8079a61:	0f 84 a3 01 00 00    	je     8079c0a <SafeProcessCommands+0x1483>
 8079a67:	8b 85 24 f8 ff ff    	mov    -0x7dc(%ebp),%eax
 8079a6d:	89 85 30 f8 ff ff    	mov    %eax,-0x7d0(%ebp)
 8079a73:	8b 85 28 f8 ff ff    	mov    -0x7d8(%ebp),%eax
 8079a79:	89 85 34 f8 ff ff    	mov    %eax,-0x7cc(%ebp)
 8079a7f:	8b 85 2c f8 ff ff    	mov    -0x7d4(%ebp),%eax
 8079a85:	89 85 38 f8 ff ff    	mov    %eax,-0x7c8(%ebp)
 8079a8b:	e9 ab 00 00 00       	jmp    8079b3b <SafeProcessCommands+0x13b4>
 8079a90:	8b 85 30 f8 ff ff    	mov    -0x7d0(%ebp),%eax
 8079a96:	89 85 3c f8 ff ff    	mov    %eax,-0x7c4(%ebp)
 8079a9c:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079aa2:	8b 40 0c             	mov    0xc(%eax),%eax
 8079aa5:	85 c0                	test   %eax,%eax
 8079aa7:	75 07                	jne    8079ab0 <SafeProcessCommands+0x1329>
 8079aa9:	b8 00 00 00 00       	mov    $0x0,%eax
 8079aae:	eb 7d                	jmp    8079b2d <SafeProcessCommands+0x13a6>
 8079ab0:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079ab6:	8b 00                	mov    (%eax),%eax
 8079ab8:	c1 e8 08             	shr    $0x8,%eax
 8079abb:	89 c2                	mov    %eax,%edx
 8079abd:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079ac3:	89 10                	mov    %edx,(%eax)
 8079ac5:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079acb:	8b 10                	mov    (%eax),%edx
 8079acd:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079ad3:	8b 40 08             	mov    0x8(%eax),%eax
 8079ad6:	0f b6 00             	movzbl (%eax),%eax
 8079ad9:	0f b6 c0             	movzbl %al,%eax
 8079adc:	c1 e0 18             	shl    $0x18,%eax
 8079adf:	09 c2                	or     %eax,%edx
 8079ae1:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079ae7:	89 10                	mov    %edx,(%eax)
 8079ae9:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079aef:	8b 40 04             	mov    0x4(%eax),%eax
 8079af2:	8d 50 f8             	lea    -0x8(%eax),%edx
 8079af5:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079afb:	89 50 04             	mov    %edx,0x4(%eax)
 8079afe:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079b04:	8b 40 0c             	mov    0xc(%eax),%eax
 8079b07:	8d 50 ff             	lea    -0x1(%eax),%edx
 8079b0a:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079b10:	89 50 0c             	mov    %edx,0xc(%eax)
 8079b13:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079b19:	8b 40 08             	mov    0x8(%eax),%eax
 8079b1c:	8d 50 01             	lea    0x1(%eax),%edx
 8079b1f:	8b 85 3c f8 ff ff    	mov    -0x7c4(%ebp),%eax
 8079b25:	89 50 08             	mov    %edx,0x8(%eax)
 8079b28:	b8 01 00 00 00       	mov    $0x1,%eax
 8079b2d:	85 c0                	test   %eax,%eax
 8079b2f:	75 0a                	jne    8079b3b <SafeProcessCommands+0x13b4>
 8079b31:	b8 00 00 00 00       	mov    $0x0,%eax
 8079b36:	e9 e0 00 00 00       	jmp    8079c1b <SafeProcessCommands+0x1494>
 8079b3b:	8b 85 30 f8 ff ff    	mov    -0x7d0(%ebp),%eax
 8079b41:	89 85 40 f8 ff ff    	mov    %eax,-0x7c0(%ebp)
 8079b47:	8b 85 40 f8 ff ff    	mov    -0x7c0(%ebp),%eax
 8079b4d:	8b 40 04             	mov    0x4(%eax),%eax
 8079b50:	ba 20 00 00 00       	mov    $0x20,%edx
 8079b55:	29 c2                	sub    %eax,%edx
 8079b57:	89 d0                	mov    %edx,%eax
 8079b59:	39 85 34 f8 ff ff    	cmp    %eax,-0x7cc(%ebp)
 8079b5f:	0f 87 2b ff ff ff    	ja     8079a90 <SafeProcessCommands+0x1309>
 8079b65:	8b 85 30 f8 ff ff    	mov    -0x7d0(%ebp),%eax
 8079b6b:	89 85 44 f8 ff ff    	mov    %eax,-0x7bc(%ebp)
 8079b71:	8b 85 34 f8 ff ff    	mov    -0x7cc(%ebp),%eax
 8079b77:	89 85 48 f8 ff ff    	mov    %eax,-0x7b8(%ebp)
 8079b7d:	8b 85 38 f8 ff ff    	mov    -0x7c8(%ebp),%eax
 8079b83:	89 85 4c f8 ff ff    	mov    %eax,-0x7b4(%ebp)
 8079b89:	8b 85 44 f8 ff ff    	mov    -0x7bc(%ebp),%eax
 8079b8f:	89 85 50 f8 ff ff    	mov    %eax,-0x7b0(%ebp)
 8079b95:	8b 85 50 f8 ff ff    	mov    -0x7b0(%ebp),%eax
 8079b9b:	8b 10                	mov    (%eax),%edx
 8079b9d:	8b 85 50 f8 ff ff    	mov    -0x7b0(%ebp),%eax
 8079ba3:	8b 40 04             	mov    0x4(%eax),%eax
 8079ba6:	89 c1                	mov    %eax,%ecx
 8079ba8:	d3 ea                	shr    %cl,%edx
 8079baa:	89 d0                	mov    %edx,%eax
 8079bac:	89 c2                	mov    %eax,%edx
 8079bae:	8b 85 48 f8 ff ff    	mov    -0x7b8(%ebp),%eax
 8079bb4:	89 85 54 f8 ff ff    	mov    %eax,-0x7ac(%ebp)
 8079bba:	8b 85 54 f8 ff ff    	mov    -0x7ac(%ebp),%eax
 8079bc0:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8079bc7:	21 c2                	and    %eax,%edx
 8079bc9:	8b 85 4c f8 ff ff    	mov    -0x7b4(%ebp),%eax
 8079bcf:	89 10                	mov    %edx,(%eax)
 8079bd1:	8b 85 44 f8 ff ff    	mov    -0x7bc(%ebp),%eax
 8079bd7:	89 85 58 f8 ff ff    	mov    %eax,-0x7a8(%ebp)
 8079bdd:	8b 85 48 f8 ff ff    	mov    -0x7b8(%ebp),%eax
 8079be3:	89 85 5c f8 ff ff    	mov    %eax,-0x7a4(%ebp)
 8079be9:	8b 85 58 f8 ff ff    	mov    -0x7a8(%ebp),%eax
 8079bef:	8b 50 04             	mov    0x4(%eax),%edx
 8079bf2:	8b 85 5c f8 ff ff    	mov    -0x7a4(%ebp),%eax
 8079bf8:	01 c2                	add    %eax,%edx
 8079bfa:	8b 85 58 f8 ff ff    	mov    -0x7a8(%ebp),%eax
 8079c00:	89 50 04             	mov    %edx,0x4(%eax)
 8079c03:	b8 01 00 00 00       	mov    $0x1,%eax
 8079c08:	eb 11                	jmp    8079c1b <SafeProcessCommands+0x1494>
 8079c0a:	8b 85 2c f8 ff ff    	mov    -0x7d4(%ebp),%eax
 8079c10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8079c16:	b8 01 00 00 00       	mov    $0x1,%eax
 8079c1b:	85 c0                	test   %eax,%eax
 8079c1d:	75 62                	jne    8079c81 <SafeProcessCommands+0x14fa>
 8079c1f:	8b 85 4c f6 ff ff    	mov    -0x9b4(%ebp),%eax
 8079c25:	89 85 60 f8 ff ff    	mov    %eax,-0x7a0(%ebp)
 8079c2b:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8079c2e:	89 85 64 f8 ff ff    	mov    %eax,-0x79c(%ebp)
 8079c34:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8079c3a:	8b 10                	mov    (%eax),%edx
 8079c3c:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8079c42:	89 10                	mov    %edx,(%eax)
 8079c44:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8079c4a:	8b 50 04             	mov    0x4(%eax),%edx
 8079c4d:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8079c53:	89 50 04             	mov    %edx,0x4(%eax)
 8079c56:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8079c5c:	8b 50 08             	mov    0x8(%eax),%edx
 8079c5f:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8079c65:	89 50 08             	mov    %edx,0x8(%eax)
 8079c68:	8b 85 64 f8 ff ff    	mov    -0x79c(%ebp),%eax
 8079c6e:	8b 50 0c             	mov    0xc(%eax),%edx
 8079c71:	8b 85 60 f8 ff ff    	mov    -0x7a0(%ebp),%eax
 8079c77:	89 50 0c             	mov    %edx,0xc(%eax)
 8079c7a:	b8 00 00 00 00       	mov    $0x0,%eax
 8079c7f:	eb 53                	jmp    8079cd4 <SafeProcessCommands+0x154d>
 8079c81:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax
 8079c85:	0f b7 d0             	movzwl %ax,%edx
 8079c88:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 8079c8e:	01 c2                	add    %eax,%edx
 8079c90:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8079c96:	89 90 04 01 00 00    	mov    %edx,0x104(%eax)
 8079c9c:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8079ca2:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
 8079ca8:	8d 50 ff             	lea    -0x1(%eax),%edx
 8079cab:	8b 85 48 f6 ff ff    	mov    -0x9b8(%ebp),%eax
 8079cb1:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)
 8079cb7:	8b 85 50 f6 ff ff    	mov    -0x9b0(%ebp),%eax
 8079cbd:	8b 10                	mov    (%eax),%edx
 8079cbf:	8b 85 f0 f5 ff ff    	mov    -0xa10(%ebp),%eax
 8079cc5:	01 c2                	add    %eax,%edx
 8079cc7:	8b 85 50 f6 ff ff    	mov    -0x9b0(%ebp),%eax
 8079ccd:	89 10                	mov    %edx,(%eax)
 8079ccf:	b8 01 00 00 00       	mov    $0x1,%eax
 8079cd4:	85 c0                	test   %eax,%eax
 8079cd6:	0f 85 20 13 00 00    	jne    807affc <SafeProcessCommands+0x2875>
 8079cdc:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 8079ce3:	00 00 00 
 8079ce6:	e9 0e 49 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 8079ceb:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 8079cf1:	89 85 68 f8 ff ff    	mov    %eax,-0x798(%ebp)
 8079cf7:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 8079cfd:	89 85 6c f8 ff ff    	mov    %eax,-0x794(%ebp)
 8079d03:	8d 85 e8 f5 ff ff    	lea    -0xa18(%ebp),%eax
 8079d09:	89 85 70 f8 ff ff    	mov    %eax,-0x790(%ebp)
 8079d0f:	c7 85 74 f8 ff ff 00 	movl   $0x0,-0x78c(%ebp)
 8079d16:	00 00 00 
 8079d19:	8b 85 68 f8 ff ff    	mov    -0x798(%ebp),%eax
 8079d1f:	89 85 78 f8 ff ff    	mov    %eax,-0x788(%ebp)
 8079d25:	8b 85 6c f8 ff ff    	mov    -0x794(%ebp),%eax
 8079d2b:	89 85 7c f8 ff ff    	mov    %eax,-0x784(%ebp)
 8079d31:	8b 85 70 f8 ff ff    	mov    -0x790(%ebp),%eax
 8079d37:	89 85 80 f8 ff ff    	mov    %eax,-0x780(%ebp)
 8079d3d:	c7 85 f0 f5 ff ff 00 	movl   $0x0,-0xa10(%ebp)
 8079d44:	00 00 00 
 8079d47:	83 bd 74 f8 ff ff 00 	cmpl   $0x0,-0x78c(%ebp)
 8079d4e:	0f 85 0c 02 00 00    	jne    8079f60 <SafeProcessCommands+0x17d9>
 8079d54:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8079d5a:	8b 40 64             	mov    0x64(%eax),%eax
 8079d5d:	89 85 84 f8 ff ff    	mov    %eax,-0x77c(%ebp)
 8079d63:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 8079d69:	89 85 88 f8 ff ff    	mov    %eax,-0x778(%ebp)
 8079d6f:	8b 85 88 f8 ff ff    	mov    -0x778(%ebp),%eax
 8079d75:	89 85 8c f8 ff ff    	mov    %eax,-0x774(%ebp)
 8079d7b:	8b 85 8c f8 ff ff    	mov    -0x774(%ebp),%eax
 8079d81:	89 85 90 f8 ff ff    	mov    %eax,-0x770(%ebp)
 8079d87:	c7 85 94 f8 ff ff 10 	movl   $0x10,-0x76c(%ebp)
 8079d8e:	00 00 00 
 8079d91:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079d97:	8b 40 04             	mov    0x4(%eax),%eax
 8079d9a:	83 f8 0f             	cmp    $0xf,%eax
 8079d9d:	0f 86 86 00 00 00    	jbe    8079e29 <SafeProcessCommands+0x16a2>
 8079da3:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079da9:	8b 00                	mov    (%eax),%eax
 8079dab:	c1 e8 10             	shr    $0x10,%eax
 8079dae:	89 c2                	mov    %eax,%edx
 8079db0:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079db6:	89 10                	mov    %edx,(%eax)
 8079db8:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079dbe:	8b 40 04             	mov    0x4(%eax),%eax
 8079dc1:	83 f0 10             	xor    $0x10,%eax
 8079dc4:	89 c2                	mov    %eax,%edx
 8079dc6:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079dcc:	89 50 04             	mov    %edx,0x4(%eax)
 8079dcf:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079dd5:	8b 10                	mov    (%eax),%edx
 8079dd7:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079ddd:	8b 40 08             	mov    0x8(%eax),%eax
 8079de0:	89 85 98 f8 ff ff    	mov    %eax,-0x768(%ebp)
 8079de6:	8b 85 98 f8 ff ff    	mov    -0x768(%ebp),%eax
 8079dec:	0f b7 00             	movzwl (%eax),%eax
 8079def:	0f b7 c0             	movzwl %ax,%eax
 8079df2:	c1 e0 10             	shl    $0x10,%eax
 8079df5:	09 c2                	or     %eax,%edx
 8079df7:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079dfd:	89 10                	mov    %edx,(%eax)
 8079dff:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079e05:	8b 40 0c             	mov    0xc(%eax),%eax
 8079e08:	8d 50 fe             	lea    -0x2(%eax),%edx
 8079e0b:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079e11:	89 50 0c             	mov    %edx,0xc(%eax)
 8079e14:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079e1a:	8b 40 08             	mov    0x8(%eax),%eax
 8079e1d:	8d 50 02             	lea    0x2(%eax),%edx
 8079e20:	8b 85 90 f8 ff ff    	mov    -0x770(%ebp),%eax
 8079e26:	89 50 08             	mov    %edx,0x8(%eax)
 8079e29:	8b 85 8c f8 ff ff    	mov    -0x774(%ebp),%eax
 8079e2f:	89 85 9c f8 ff ff    	mov    %eax,-0x764(%ebp)
 8079e35:	8b 85 9c f8 ff ff    	mov    -0x764(%ebp),%eax
 8079e3b:	8b 10                	mov    (%eax),%edx
 8079e3d:	8b 85 9c f8 ff ff    	mov    -0x764(%ebp),%eax
 8079e43:	8b 40 04             	mov    0x4(%eax),%eax
 8079e46:	89 c1                	mov    %eax,%ecx
 8079e48:	d3 ea                	shr    %cl,%edx
 8079e4a:	89 d0                	mov    %edx,%eax
 8079e4c:	89 85 a0 f8 ff ff    	mov    %eax,-0x760(%ebp)
 8079e52:	8b 85 84 f8 ff ff    	mov    -0x77c(%ebp),%eax
 8079e58:	89 85 a4 f8 ff ff    	mov    %eax,-0x75c(%ebp)
 8079e5e:	8b 85 88 f8 ff ff    	mov    -0x778(%ebp),%eax
 8079e64:	89 85 a8 f8 ff ff    	mov    %eax,-0x758(%ebp)
 8079e6a:	8b 85 a0 f8 ff ff    	mov    -0x760(%ebp),%eax
 8079e70:	0f b6 c0             	movzbl %al,%eax
 8079e73:	c1 e0 02             	shl    $0x2,%eax
 8079e76:	01 85 a4 f8 ff ff    	add    %eax,-0x75c(%ebp)
 8079e7c:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8079e82:	0f b6 00             	movzbl (%eax),%eax
 8079e85:	3c 08                	cmp    $0x8,%al
 8079e87:	0f 86 83 00 00 00    	jbe    8079f10 <SafeProcessCommands+0x1789>
 8079e8d:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8079e93:	0f b6 00             	movzbl (%eax),%eax
 8079e96:	0f b6 c0             	movzbl %al,%eax
 8079e99:	83 e8 08             	sub    $0x8,%eax
 8079e9c:	89 85 ac f8 ff ff    	mov    %eax,-0x754(%ebp)
 8079ea2:	8b 85 a8 f8 ff ff    	mov    -0x758(%ebp),%eax
 8079ea8:	89 85 b0 f8 ff ff    	mov    %eax,-0x750(%ebp)
 8079eae:	c7 85 b4 f8 ff ff 08 	movl   $0x8,-0x74c(%ebp)
 8079eb5:	00 00 00 
 8079eb8:	8b 85 b0 f8 ff ff    	mov    -0x750(%ebp),%eax
 8079ebe:	8b 50 04             	mov    0x4(%eax),%edx
 8079ec1:	8b 85 b4 f8 ff ff    	mov    -0x74c(%ebp),%eax
 8079ec7:	01 c2                	add    %eax,%edx
 8079ec9:	8b 85 b0 f8 ff ff    	mov    -0x750(%ebp),%eax
 8079ecf:	89 50 04             	mov    %edx,0x4(%eax)
 8079ed2:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8079ed8:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8079edc:	0f b7 d0             	movzwl %ax,%edx
 8079edf:	8b 85 a0 f8 ff ff    	mov    -0x760(%ebp),%eax
 8079ee5:	c1 e8 08             	shr    $0x8,%eax
 8079ee8:	89 c1                	mov    %eax,%ecx
 8079eea:	8b 85 ac f8 ff ff    	mov    -0x754(%ebp),%eax
 8079ef0:	89 85 b8 f8 ff ff    	mov    %eax,-0x748(%ebp)
 8079ef6:	8b 85 b8 f8 ff ff    	mov    -0x748(%ebp),%eax
 8079efc:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 8079f03:	21 c8                	and    %ecx,%eax
 8079f05:	01 d0                	add    %edx,%eax
 8079f07:	c1 e0 02             	shl    $0x2,%eax
 8079f0a:	01 85 a4 f8 ff ff    	add    %eax,-0x75c(%ebp)
 8079f10:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8079f16:	0f b6 00             	movzbl (%eax),%eax
 8079f19:	0f b6 c0             	movzbl %al,%eax
 8079f1c:	8b 95 a8 f8 ff ff    	mov    -0x758(%ebp),%edx
 8079f22:	89 95 bc f8 ff ff    	mov    %edx,-0x744(%ebp)
 8079f28:	89 85 c0 f8 ff ff    	mov    %eax,-0x740(%ebp)
 8079f2e:	8b 85 bc f8 ff ff    	mov    -0x744(%ebp),%eax
 8079f34:	8b 50 04             	mov    0x4(%eax),%edx
 8079f37:	8b 85 c0 f8 ff ff    	mov    -0x740(%ebp),%eax
 8079f3d:	01 c2                	add    %eax,%edx
 8079f3f:	8b 85 bc f8 ff ff    	mov    -0x744(%ebp),%eax
 8079f45:	89 50 04             	mov    %edx,0x4(%eax)
 8079f48:	8b 85 a4 f8 ff ff    	mov    -0x75c(%ebp),%eax
 8079f4e:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 8079f52:	0f b7 c0             	movzwl %ax,%eax
 8079f55:	89 85 ec f5 ff ff    	mov    %eax,-0xa14(%ebp)
 8079f5b:	e9 1c 03 00 00       	jmp    807a27c <SafeProcessCommands+0x1af5>
 8079f60:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 8079f66:	89 85 c4 f8 ff ff    	mov    %eax,-0x73c(%ebp)
 8079f6c:	8d 45 e8             	lea    -0x18(%ebp),%eax
 8079f6f:	89 85 c8 f8 ff ff    	mov    %eax,-0x738(%ebp)
 8079f75:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 8079f7b:	8b 10                	mov    (%eax),%edx
 8079f7d:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 8079f83:	89 10                	mov    %edx,(%eax)
 8079f85:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 8079f8b:	8b 50 04             	mov    0x4(%eax),%edx
 8079f8e:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 8079f94:	89 50 04             	mov    %edx,0x4(%eax)
 8079f97:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 8079f9d:	8b 50 08             	mov    0x8(%eax),%edx
 8079fa0:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 8079fa6:	89 50 08             	mov    %edx,0x8(%eax)
 8079fa9:	8b 85 c4 f8 ff ff    	mov    -0x73c(%ebp),%eax
 8079faf:	8b 50 0c             	mov    0xc(%eax),%edx
 8079fb2:	8b 85 c8 f8 ff ff    	mov    -0x738(%ebp),%eax
 8079fb8:	89 50 0c             	mov    %edx,0xc(%eax)
 8079fbb:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 8079fc1:	8b 40 64             	mov    0x64(%eax),%eax
 8079fc4:	89 85 cc f8 ff ff    	mov    %eax,-0x734(%ebp)
 8079fca:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 8079fd0:	89 85 d0 f8 ff ff    	mov    %eax,-0x730(%ebp)
 8079fd6:	8d 85 ec f5 ff ff    	lea    -0xa14(%ebp),%eax
 8079fdc:	89 85 d4 f8 ff ff    	mov    %eax,-0x72c(%ebp)
 8079fe2:	8b 85 d0 f8 ff ff    	mov    -0x730(%ebp),%eax
 8079fe8:	89 85 d8 f8 ff ff    	mov    %eax,-0x728(%ebp)
 8079fee:	c7 85 dc f8 ff ff 0f 	movl   $0xf,-0x724(%ebp)
 8079ff5:	00 00 00 
 8079ff8:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8079ffb:	89 85 e0 f8 ff ff    	mov    %eax,-0x720(%ebp)
 807a001:	e9 a8 00 00 00       	jmp    807a0ae <SafeProcessCommands+0x1927>
 807a006:	8b 85 d8 f8 ff ff    	mov    -0x728(%ebp),%eax
 807a00c:	89 85 e4 f8 ff ff    	mov    %eax,-0x71c(%ebp)
 807a012:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a018:	8b 40 0c             	mov    0xc(%eax),%eax
 807a01b:	85 c0                	test   %eax,%eax
 807a01d:	75 07                	jne    807a026 <SafeProcessCommands+0x189f>
 807a01f:	b8 00 00 00 00       	mov    $0x0,%eax
 807a024:	eb 7d                	jmp    807a0a3 <SafeProcessCommands+0x191c>
 807a026:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a02c:	8b 00                	mov    (%eax),%eax
 807a02e:	c1 e8 08             	shr    $0x8,%eax
 807a031:	89 c2                	mov    %eax,%edx
 807a033:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a039:	89 10                	mov    %edx,(%eax)
 807a03b:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a041:	8b 10                	mov    (%eax),%edx
 807a043:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a049:	8b 40 08             	mov    0x8(%eax),%eax
 807a04c:	0f b6 00             	movzbl (%eax),%eax
 807a04f:	0f b6 c0             	movzbl %al,%eax
 807a052:	c1 e0 18             	shl    $0x18,%eax
 807a055:	09 c2                	or     %eax,%edx
 807a057:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a05d:	89 10                	mov    %edx,(%eax)
 807a05f:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a065:	8b 40 04             	mov    0x4(%eax),%eax
 807a068:	8d 50 f8             	lea    -0x8(%eax),%edx
 807a06b:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a071:	89 50 04             	mov    %edx,0x4(%eax)
 807a074:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a07a:	8b 40 0c             	mov    0xc(%eax),%eax
 807a07d:	8d 50 ff             	lea    -0x1(%eax),%edx
 807a080:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a086:	89 50 0c             	mov    %edx,0xc(%eax)
 807a089:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a08f:	8b 40 08             	mov    0x8(%eax),%eax
 807a092:	8d 50 01             	lea    0x1(%eax),%edx
 807a095:	8b 85 e4 f8 ff ff    	mov    -0x71c(%ebp),%eax
 807a09b:	89 50 08             	mov    %edx,0x8(%eax)
 807a09e:	b8 01 00 00 00       	mov    $0x1,%eax
 807a0a3:	85 c0                	test   %eax,%eax
 807a0a5:	75 07                	jne    807a0ae <SafeProcessCommands+0x1927>
 807a0a7:	b8 00 00 00 00       	mov    $0x0,%eax
 807a0ac:	eb 77                	jmp    807a125 <SafeProcessCommands+0x199e>
 807a0ae:	8b 85 d8 f8 ff ff    	mov    -0x728(%ebp),%eax
 807a0b4:	89 85 e8 f8 ff ff    	mov    %eax,-0x718(%ebp)
 807a0ba:	8b 85 e8 f8 ff ff    	mov    -0x718(%ebp),%eax
 807a0c0:	8b 40 04             	mov    0x4(%eax),%eax
 807a0c3:	ba 20 00 00 00       	mov    $0x20,%edx
 807a0c8:	29 c2                	sub    %eax,%edx
 807a0ca:	89 d0                	mov    %edx,%eax
 807a0cc:	39 85 dc f8 ff ff    	cmp    %eax,-0x724(%ebp)
 807a0d2:	0f 87 2e ff ff ff    	ja     807a006 <SafeProcessCommands+0x187f>
 807a0d8:	8b 85 d8 f8 ff ff    	mov    -0x728(%ebp),%eax
 807a0de:	89 85 ec f8 ff ff    	mov    %eax,-0x714(%ebp)
 807a0e4:	8b 85 ec f8 ff ff    	mov    -0x714(%ebp),%eax
 807a0ea:	8b 10                	mov    (%eax),%edx
 807a0ec:	8b 85 ec f8 ff ff    	mov    -0x714(%ebp),%eax
 807a0f2:	8b 40 04             	mov    0x4(%eax),%eax
 807a0f5:	89 c1                	mov    %eax,%ecx
 807a0f7:	d3 ea                	shr    %cl,%edx
 807a0f9:	89 d0                	mov    %edx,%eax
 807a0fb:	89 c2                	mov    %eax,%edx
 807a0fd:	8b 85 dc f8 ff ff    	mov    -0x724(%ebp),%eax
 807a103:	89 85 f0 f8 ff ff    	mov    %eax,-0x710(%ebp)
 807a109:	8b 85 f0 f8 ff ff    	mov    -0x710(%ebp),%eax
 807a10f:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a116:	21 c2                	and    %eax,%edx
 807a118:	8b 85 e0 f8 ff ff    	mov    -0x720(%ebp),%eax
 807a11e:	89 10                	mov    %edx,(%eax)
 807a120:	b8 01 00 00 00       	mov    $0x1,%eax
 807a125:	85 c0                	test   %eax,%eax
 807a127:	0f 95 c0             	setne  %al
 807a12a:	0f b6 c0             	movzbl %al,%eax
 807a12d:	85 c0                	test   %eax,%eax
 807a12f:	0f 84 1d 01 00 00    	je     807a252 <SafeProcessCommands+0x1acb>
 807a135:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807a138:	89 85 f4 f8 ff ff    	mov    %eax,-0x70c(%ebp)
 807a13e:	8b 85 cc f8 ff ff    	mov    -0x734(%ebp),%eax
 807a144:	89 85 f8 f8 ff ff    	mov    %eax,-0x708(%ebp)
 807a14a:	8b 85 d0 f8 ff ff    	mov    -0x730(%ebp),%eax
 807a150:	89 85 fc f8 ff ff    	mov    %eax,-0x704(%ebp)
 807a156:	8b 85 f4 f8 ff ff    	mov    -0x70c(%ebp),%eax
 807a15c:	0f b6 c0             	movzbl %al,%eax
 807a15f:	c1 e0 02             	shl    $0x2,%eax
 807a162:	01 85 f8 f8 ff ff    	add    %eax,-0x708(%ebp)
 807a168:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 807a16e:	0f b6 00             	movzbl (%eax),%eax
 807a171:	3c 08                	cmp    $0x8,%al
 807a173:	0f 86 83 00 00 00    	jbe    807a1fc <SafeProcessCommands+0x1a75>
 807a179:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 807a17f:	0f b6 00             	movzbl (%eax),%eax
 807a182:	0f b6 c0             	movzbl %al,%eax
 807a185:	83 e8 08             	sub    $0x8,%eax
 807a188:	89 85 00 f9 ff ff    	mov    %eax,-0x700(%ebp)
 807a18e:	8b 85 fc f8 ff ff    	mov    -0x704(%ebp),%eax
 807a194:	89 85 04 f9 ff ff    	mov    %eax,-0x6fc(%ebp)
 807a19a:	c7 85 08 f9 ff ff 08 	movl   $0x8,-0x6f8(%ebp)
 807a1a1:	00 00 00 
 807a1a4:	8b 85 04 f9 ff ff    	mov    -0x6fc(%ebp),%eax
 807a1aa:	8b 50 04             	mov    0x4(%eax),%edx
 807a1ad:	8b 85 08 f9 ff ff    	mov    -0x6f8(%ebp),%eax
 807a1b3:	01 c2                	add    %eax,%edx
 807a1b5:	8b 85 04 f9 ff ff    	mov    -0x6fc(%ebp),%eax
 807a1bb:	89 50 04             	mov    %edx,0x4(%eax)
 807a1be:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 807a1c4:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807a1c8:	0f b7 d0             	movzwl %ax,%edx
 807a1cb:	8b 85 f4 f8 ff ff    	mov    -0x70c(%ebp),%eax
 807a1d1:	c1 e8 08             	shr    $0x8,%eax
 807a1d4:	89 c1                	mov    %eax,%ecx
 807a1d6:	8b 85 00 f9 ff ff    	mov    -0x700(%ebp),%eax
 807a1dc:	89 85 0c f9 ff ff    	mov    %eax,-0x6f4(%ebp)
 807a1e2:	8b 85 0c f9 ff ff    	mov    -0x6f4(%ebp),%eax
 807a1e8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a1ef:	21 c8                	and    %ecx,%eax
 807a1f1:	01 d0                	add    %edx,%eax
 807a1f3:	c1 e0 02             	shl    $0x2,%eax
 807a1f6:	01 85 f8 f8 ff ff    	add    %eax,-0x708(%ebp)
 807a1fc:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 807a202:	0f b6 00             	movzbl (%eax),%eax
 807a205:	0f b6 c0             	movzbl %al,%eax
 807a208:	8b 95 fc f8 ff ff    	mov    -0x704(%ebp),%edx
 807a20e:	89 95 10 f9 ff ff    	mov    %edx,-0x6f0(%ebp)
 807a214:	89 85 14 f9 ff ff    	mov    %eax,-0x6ec(%ebp)
 807a21a:	8b 85 10 f9 ff ff    	mov    -0x6f0(%ebp),%eax
 807a220:	8b 50 04             	mov    0x4(%eax),%edx
 807a223:	8b 85 14 f9 ff ff    	mov    -0x6ec(%ebp),%eax
 807a229:	01 c2                	add    %eax,%edx
 807a22b:	8b 85 10 f9 ff ff    	mov    -0x6f0(%ebp),%eax
 807a231:	89 50 04             	mov    %edx,0x4(%eax)
 807a234:	8b 85 f8 f8 ff ff    	mov    -0x708(%ebp),%eax
 807a23a:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807a23e:	0f b7 c0             	movzwl %ax,%eax
 807a241:	89 c2                	mov    %eax,%edx
 807a243:	8b 85 d4 f8 ff ff    	mov    -0x72c(%ebp),%eax
 807a249:	89 10                	mov    %edx,(%eax)
 807a24b:	b8 01 00 00 00       	mov    $0x1,%eax
 807a250:	eb 22                	jmp    807a274 <SafeProcessCommands+0x1aed>
 807a252:	8b 85 d4 f8 ff ff    	mov    -0x72c(%ebp),%eax
 807a258:	89 44 24 08          	mov    %eax,0x8(%esp)
 807a25c:	8b 85 d0 f8 ff ff    	mov    -0x730(%ebp),%eax
 807a262:	89 44 24 04          	mov    %eax,0x4(%esp)
 807a266:	8b 85 cc f8 ff ff    	mov    -0x734(%ebp),%eax
 807a26c:	89 04 24             	mov    %eax,(%esp)
 807a26f:	e8 58 e7 fe ff       	call   80689cc <SafeDecodeSymbol>
 807a274:	85 c0                	test   %eax,%eax
 807a276:	0f 84 80 0d 00 00    	je     807affc <SafeProcessCommands+0x2875>
 807a27c:	8b 85 ec f5 ff ff    	mov    -0xa14(%ebp),%eax
 807a282:	8b 94 c3 a4 82 fd ff 	mov    -0x27d5c(%ebx,%eax,8),%edx
 807a289:	8b 84 c3 a0 82 fd ff 	mov    -0x27d60(%ebx,%eax,8),%eax
 807a290:	89 45 e0             	mov    %eax,-0x20(%ebp)
 807a293:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 807a296:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax
 807a29a:	0f be d0             	movsbl %al,%edx
 807a29d:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807a2a3:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807a2a9:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax
 807a2ad:	0f b6 d0             	movzbl %al,%edx
 807a2b0:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807a2b6:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 807a2bc:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807a2c2:	8b 50 70             	mov    0x70(%eax),%edx
 807a2c5:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807a2cb:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 807a2d1:	01 d0                	add    %edx,%eax
 807a2d3:	0f b6 10             	movzbl (%eax),%edx
 807a2d6:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807a2dc:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
 807a2e2:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
 807a2e6:	0f b7 d0             	movzwl %ax,%edx
 807a2e9:	8b 85 80 f8 ff ff    	mov    -0x780(%ebp),%eax
 807a2ef:	89 10                	mov    %edx,(%eax)
 807a2f1:	83 bd 74 f8 ff ff 00 	cmpl   $0x0,-0x78c(%ebp)
 807a2f8:	0f 85 7b 08 00 00    	jne    807ab79 <SafeProcessCommands+0x23f2>
 807a2fe:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 807a302:	84 c0                	test   %al,%al
 807a304:	0f 95 c0             	setne  %al
 807a307:	0f b6 c0             	movzbl %al,%eax
 807a30a:	85 c0                	test   %eax,%eax
 807a30c:	0f 84 31 04 00 00    	je     807a743 <SafeProcessCommands+0x1fbc>
 807a312:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 807a316:	0f b6 c0             	movzbl %al,%eax
 807a319:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 807a31f:	89 95 18 f9 ff ff    	mov    %edx,-0x6e8(%ebp)
 807a325:	89 85 1c f9 ff ff    	mov    %eax,-0x6e4(%ebp)
 807a32b:	83 bd 1c f9 ff ff 10 	cmpl   $0x10,-0x6e4(%ebp)
 807a332:	0f 87 59 01 00 00    	ja     807a491 <SafeProcessCommands+0x1d0a>
 807a338:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807a33e:	89 85 20 f9 ff ff    	mov    %eax,-0x6e0(%ebp)
 807a344:	8b 85 1c f9 ff ff    	mov    -0x6e4(%ebp),%eax
 807a34a:	89 85 24 f9 ff ff    	mov    %eax,-0x6dc(%ebp)
 807a350:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a356:	8b 40 04             	mov    0x4(%eax),%eax
 807a359:	83 f8 0f             	cmp    $0xf,%eax
 807a35c:	0f 86 86 00 00 00    	jbe    807a3e8 <SafeProcessCommands+0x1c61>
 807a362:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a368:	8b 00                	mov    (%eax),%eax
 807a36a:	c1 e8 10             	shr    $0x10,%eax
 807a36d:	89 c2                	mov    %eax,%edx
 807a36f:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a375:	89 10                	mov    %edx,(%eax)
 807a377:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a37d:	8b 40 04             	mov    0x4(%eax),%eax
 807a380:	83 f0 10             	xor    $0x10,%eax
 807a383:	89 c2                	mov    %eax,%edx
 807a385:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a38b:	89 50 04             	mov    %edx,0x4(%eax)
 807a38e:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a394:	8b 10                	mov    (%eax),%edx
 807a396:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a39c:	8b 40 08             	mov    0x8(%eax),%eax
 807a39f:	89 85 28 f9 ff ff    	mov    %eax,-0x6d8(%ebp)
 807a3a5:	8b 85 28 f9 ff ff    	mov    -0x6d8(%ebp),%eax
 807a3ab:	0f b7 00             	movzwl (%eax),%eax
 807a3ae:	0f b7 c0             	movzwl %ax,%eax
 807a3b1:	c1 e0 10             	shl    $0x10,%eax
 807a3b4:	09 c2                	or     %eax,%edx
 807a3b6:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a3bc:	89 10                	mov    %edx,(%eax)
 807a3be:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a3c4:	8b 40 0c             	mov    0xc(%eax),%eax
 807a3c7:	8d 50 fe             	lea    -0x2(%eax),%edx
 807a3ca:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a3d0:	89 50 0c             	mov    %edx,0xc(%eax)
 807a3d3:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a3d9:	8b 40 08             	mov    0x8(%eax),%eax
 807a3dc:	8d 50 02             	lea    0x2(%eax),%edx
 807a3df:	8b 85 20 f9 ff ff    	mov    -0x6e0(%ebp),%eax
 807a3e5:	89 50 08             	mov    %edx,0x8(%eax)
 807a3e8:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807a3ee:	89 85 2c f9 ff ff    	mov    %eax,-0x6d4(%ebp)
 807a3f4:	8b 85 1c f9 ff ff    	mov    -0x6e4(%ebp),%eax
 807a3fa:	89 85 30 f9 ff ff    	mov    %eax,-0x6d0(%ebp)
 807a400:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807a406:	89 85 34 f9 ff ff    	mov    %eax,-0x6cc(%ebp)
 807a40c:	8b 85 2c f9 ff ff    	mov    -0x6d4(%ebp),%eax
 807a412:	89 85 38 f9 ff ff    	mov    %eax,-0x6c8(%ebp)
 807a418:	8b 85 38 f9 ff ff    	mov    -0x6c8(%ebp),%eax
 807a41e:	8b 10                	mov    (%eax),%edx
 807a420:	8b 85 38 f9 ff ff    	mov    -0x6c8(%ebp),%eax
 807a426:	8b 40 04             	mov    0x4(%eax),%eax
 807a429:	89 c1                	mov    %eax,%ecx
 807a42b:	d3 ea                	shr    %cl,%edx
 807a42d:	89 d0                	mov    %edx,%eax
 807a42f:	89 c2                	mov    %eax,%edx
 807a431:	8b 85 30 f9 ff ff    	mov    -0x6d0(%ebp),%eax
 807a437:	89 85 3c f9 ff ff    	mov    %eax,-0x6c4(%ebp)
 807a43d:	8b 85 3c f9 ff ff    	mov    -0x6c4(%ebp),%eax
 807a443:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a44a:	21 c2                	and    %eax,%edx
 807a44c:	8b 85 34 f9 ff ff    	mov    -0x6cc(%ebp),%eax
 807a452:	89 10                	mov    %edx,(%eax)
 807a454:	8b 85 2c f9 ff ff    	mov    -0x6d4(%ebp),%eax
 807a45a:	89 85 40 f9 ff ff    	mov    %eax,-0x6c0(%ebp)
 807a460:	8b 85 30 f9 ff ff    	mov    -0x6d0(%ebp),%eax
 807a466:	89 85 44 f9 ff ff    	mov    %eax,-0x6bc(%ebp)
 807a46c:	8b 85 40 f9 ff ff    	mov    -0x6c0(%ebp),%eax
 807a472:	8b 50 04             	mov    0x4(%eax),%edx
 807a475:	8b 85 44 f9 ff ff    	mov    -0x6bc(%ebp),%eax
 807a47b:	01 c2                	add    %eax,%edx
 807a47d:	8b 85 40 f9 ff ff    	mov    -0x6c0(%ebp),%eax
 807a483:	89 50 04             	mov    %edx,0x4(%eax)
 807a486:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807a48c:	e9 ac 02 00 00       	jmp    807a73d <SafeProcessCommands+0x1fb6>
 807a491:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807a497:	89 85 48 f9 ff ff    	mov    %eax,-0x6b8(%ebp)
 807a49d:	c7 85 4c f9 ff ff 10 	movl   $0x10,-0x6b4(%ebp)
 807a4a4:	00 00 00 
 807a4a7:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4ad:	8b 40 04             	mov    0x4(%eax),%eax
 807a4b0:	83 f8 0f             	cmp    $0xf,%eax
 807a4b3:	0f 86 86 00 00 00    	jbe    807a53f <SafeProcessCommands+0x1db8>
 807a4b9:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4bf:	8b 00                	mov    (%eax),%eax
 807a4c1:	c1 e8 10             	shr    $0x10,%eax
 807a4c4:	89 c2                	mov    %eax,%edx
 807a4c6:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4cc:	89 10                	mov    %edx,(%eax)
 807a4ce:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4d4:	8b 40 04             	mov    0x4(%eax),%eax
 807a4d7:	83 f0 10             	xor    $0x10,%eax
 807a4da:	89 c2                	mov    %eax,%edx
 807a4dc:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4e2:	89 50 04             	mov    %edx,0x4(%eax)
 807a4e5:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4eb:	8b 10                	mov    (%eax),%edx
 807a4ed:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a4f3:	8b 40 08             	mov    0x8(%eax),%eax
 807a4f6:	89 85 50 f9 ff ff    	mov    %eax,-0x6b0(%ebp)
 807a4fc:	8b 85 50 f9 ff ff    	mov    -0x6b0(%ebp),%eax
 807a502:	0f b7 00             	movzwl (%eax),%eax
 807a505:	0f b7 c0             	movzwl %ax,%eax
 807a508:	c1 e0 10             	shl    $0x10,%eax
 807a50b:	09 c2                	or     %eax,%edx
 807a50d:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a513:	89 10                	mov    %edx,(%eax)
 807a515:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a51b:	8b 40 0c             	mov    0xc(%eax),%eax
 807a51e:	8d 50 fe             	lea    -0x2(%eax),%edx
 807a521:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a527:	89 50 0c             	mov    %edx,0xc(%eax)
 807a52a:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a530:	8b 40 08             	mov    0x8(%eax),%eax
 807a533:	8d 50 02             	lea    0x2(%eax),%edx
 807a536:	8b 85 48 f9 ff ff    	mov    -0x6b8(%ebp),%eax
 807a53c:	89 50 08             	mov    %edx,0x8(%eax)
 807a53f:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807a545:	89 85 54 f9 ff ff    	mov    %eax,-0x6ac(%ebp)
 807a54b:	c7 85 58 f9 ff ff 10 	movl   $0x10,-0x6a8(%ebp)
 807a552:	00 00 00 
 807a555:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807a55b:	89 85 5c f9 ff ff    	mov    %eax,-0x6a4(%ebp)
 807a561:	8b 85 54 f9 ff ff    	mov    -0x6ac(%ebp),%eax
 807a567:	89 85 60 f9 ff ff    	mov    %eax,-0x6a0(%ebp)
 807a56d:	8b 85 60 f9 ff ff    	mov    -0x6a0(%ebp),%eax
 807a573:	8b 10                	mov    (%eax),%edx
 807a575:	8b 85 60 f9 ff ff    	mov    -0x6a0(%ebp),%eax
 807a57b:	8b 40 04             	mov    0x4(%eax),%eax
 807a57e:	89 c1                	mov    %eax,%ecx
 807a580:	d3 ea                	shr    %cl,%edx
 807a582:	89 d0                	mov    %edx,%eax
 807a584:	89 c2                	mov    %eax,%edx
 807a586:	8b 85 58 f9 ff ff    	mov    -0x6a8(%ebp),%eax
 807a58c:	89 85 64 f9 ff ff    	mov    %eax,-0x69c(%ebp)
 807a592:	8b 85 64 f9 ff ff    	mov    -0x69c(%ebp),%eax
 807a598:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a59f:	21 c2                	and    %eax,%edx
 807a5a1:	8b 85 5c f9 ff ff    	mov    -0x6a4(%ebp),%eax
 807a5a7:	89 10                	mov    %edx,(%eax)
 807a5a9:	8b 85 54 f9 ff ff    	mov    -0x6ac(%ebp),%eax
 807a5af:	89 85 68 f9 ff ff    	mov    %eax,-0x698(%ebp)
 807a5b5:	8b 85 58 f9 ff ff    	mov    -0x6a8(%ebp),%eax
 807a5bb:	89 85 6c f9 ff ff    	mov    %eax,-0x694(%ebp)
 807a5c1:	8b 85 68 f9 ff ff    	mov    -0x698(%ebp),%eax
 807a5c7:	8b 50 04             	mov    0x4(%eax),%edx
 807a5ca:	8b 85 6c f9 ff ff    	mov    -0x694(%ebp),%eax
 807a5d0:	01 c2                	add    %eax,%edx
 807a5d2:	8b 85 68 f9 ff ff    	mov    -0x698(%ebp),%eax
 807a5d8:	89 50 04             	mov    %edx,0x4(%eax)
 807a5db:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807a5e1:	89 85 70 f9 ff ff    	mov    %eax,-0x690(%ebp)
 807a5e7:	c7 85 74 f9 ff ff 08 	movl   $0x8,-0x68c(%ebp)
 807a5ee:	00 00 00 
 807a5f1:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a5f7:	8b 40 04             	mov    0x4(%eax),%eax
 807a5fa:	83 f8 0f             	cmp    $0xf,%eax
 807a5fd:	0f 86 86 00 00 00    	jbe    807a689 <SafeProcessCommands+0x1f02>
 807a603:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a609:	8b 00                	mov    (%eax),%eax
 807a60b:	c1 e8 10             	shr    $0x10,%eax
 807a60e:	89 c2                	mov    %eax,%edx
 807a610:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a616:	89 10                	mov    %edx,(%eax)
 807a618:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a61e:	8b 40 04             	mov    0x4(%eax),%eax
 807a621:	83 f0 10             	xor    $0x10,%eax
 807a624:	89 c2                	mov    %eax,%edx
 807a626:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a62c:	89 50 04             	mov    %edx,0x4(%eax)
 807a62f:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a635:	8b 10                	mov    (%eax),%edx
 807a637:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a63d:	8b 40 08             	mov    0x8(%eax),%eax
 807a640:	89 85 78 f9 ff ff    	mov    %eax,-0x688(%ebp)
 807a646:	8b 85 78 f9 ff ff    	mov    -0x688(%ebp),%eax
 807a64c:	0f b7 00             	movzwl (%eax),%eax
 807a64f:	0f b7 c0             	movzwl %ax,%eax
 807a652:	c1 e0 10             	shl    $0x10,%eax
 807a655:	09 c2                	or     %eax,%edx
 807a657:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a65d:	89 10                	mov    %edx,(%eax)
 807a65f:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a665:	8b 40 0c             	mov    0xc(%eax),%eax
 807a668:	8d 50 fe             	lea    -0x2(%eax),%edx
 807a66b:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a671:	89 50 0c             	mov    %edx,0xc(%eax)
 807a674:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a67a:	8b 40 08             	mov    0x8(%eax),%eax
 807a67d:	8d 50 02             	lea    0x2(%eax),%edx
 807a680:	8b 85 70 f9 ff ff    	mov    -0x690(%ebp),%eax
 807a686:	89 50 08             	mov    %edx,0x8(%eax)
 807a689:	8b 85 1c f9 ff ff    	mov    -0x6e4(%ebp),%eax
 807a68f:	8d 50 f0             	lea    -0x10(%eax),%edx
 807a692:	8b 85 18 f9 ff ff    	mov    -0x6e8(%ebp),%eax
 807a698:	89 85 7c f9 ff ff    	mov    %eax,-0x684(%ebp)
 807a69e:	89 95 80 f9 ff ff    	mov    %edx,-0x680(%ebp)
 807a6a4:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807a6aa:	89 85 84 f9 ff ff    	mov    %eax,-0x67c(%ebp)
 807a6b0:	8b 85 7c f9 ff ff    	mov    -0x684(%ebp),%eax
 807a6b6:	89 85 88 f9 ff ff    	mov    %eax,-0x678(%ebp)
 807a6bc:	8b 85 88 f9 ff ff    	mov    -0x678(%ebp),%eax
 807a6c2:	8b 10                	mov    (%eax),%edx
 807a6c4:	8b 85 88 f9 ff ff    	mov    -0x678(%ebp),%eax
 807a6ca:	8b 40 04             	mov    0x4(%eax),%eax
 807a6cd:	89 c1                	mov    %eax,%ecx
 807a6cf:	d3 ea                	shr    %cl,%edx
 807a6d1:	89 d0                	mov    %edx,%eax
 807a6d3:	89 c2                	mov    %eax,%edx
 807a6d5:	8b 85 80 f9 ff ff    	mov    -0x680(%ebp),%eax
 807a6db:	89 85 8c f9 ff ff    	mov    %eax,-0x674(%ebp)
 807a6e1:	8b 85 8c f9 ff ff    	mov    -0x674(%ebp),%eax
 807a6e7:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a6ee:	21 c2                	and    %eax,%edx
 807a6f0:	8b 85 84 f9 ff ff    	mov    -0x67c(%ebp),%eax
 807a6f6:	89 10                	mov    %edx,(%eax)
 807a6f8:	8b 85 7c f9 ff ff    	mov    -0x684(%ebp),%eax
 807a6fe:	89 85 90 f9 ff ff    	mov    %eax,-0x670(%ebp)
 807a704:	8b 85 80 f9 ff ff    	mov    -0x680(%ebp),%eax
 807a70a:	89 85 94 f9 ff ff    	mov    %eax,-0x66c(%ebp)
 807a710:	8b 85 90 f9 ff ff    	mov    -0x670(%ebp),%eax
 807a716:	8b 50 04             	mov    0x4(%eax),%edx
 807a719:	8b 85 94 f9 ff ff    	mov    -0x66c(%ebp),%eax
 807a71f:	01 c2                	add    %eax,%edx
 807a721:	8b 85 90 f9 ff ff    	mov    -0x670(%ebp),%eax
 807a727:	89 50 04             	mov    %edx,0x4(%eax)
 807a72a:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807a730:	c1 e0 10             	shl    $0x10,%eax
 807a733:	89 c2                	mov    %eax,%edx
 807a735:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807a73b:	09 d0                	or     %edx,%eax
 807a73d:	89 85 f0 f5 ff ff    	mov    %eax,-0xa10(%ebp)
 807a743:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 807a747:	0f b6 c0             	movzbl %al,%eax
 807a74a:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 807a750:	89 95 98 f9 ff ff    	mov    %edx,-0x668(%ebp)
 807a756:	89 85 9c f9 ff ff    	mov    %eax,-0x664(%ebp)
 807a75c:	83 bd 9c f9 ff ff 10 	cmpl   $0x10,-0x664(%ebp)
 807a763:	0f 87 59 01 00 00    	ja     807a8c2 <SafeProcessCommands+0x213b>
 807a769:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807a76f:	89 85 a0 f9 ff ff    	mov    %eax,-0x660(%ebp)
 807a775:	8b 85 9c f9 ff ff    	mov    -0x664(%ebp),%eax
 807a77b:	89 85 a4 f9 ff ff    	mov    %eax,-0x65c(%ebp)
 807a781:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a787:	8b 40 04             	mov    0x4(%eax),%eax
 807a78a:	83 f8 0f             	cmp    $0xf,%eax
 807a78d:	0f 86 86 00 00 00    	jbe    807a819 <SafeProcessCommands+0x2092>
 807a793:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a799:	8b 00                	mov    (%eax),%eax
 807a79b:	c1 e8 10             	shr    $0x10,%eax
 807a79e:	89 c2                	mov    %eax,%edx
 807a7a0:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7a6:	89 10                	mov    %edx,(%eax)
 807a7a8:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7ae:	8b 40 04             	mov    0x4(%eax),%eax
 807a7b1:	83 f0 10             	xor    $0x10,%eax
 807a7b4:	89 c2                	mov    %eax,%edx
 807a7b6:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7bc:	89 50 04             	mov    %edx,0x4(%eax)
 807a7bf:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7c5:	8b 10                	mov    (%eax),%edx
 807a7c7:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7cd:	8b 40 08             	mov    0x8(%eax),%eax
 807a7d0:	89 85 a8 f9 ff ff    	mov    %eax,-0x658(%ebp)
 807a7d6:	8b 85 a8 f9 ff ff    	mov    -0x658(%ebp),%eax
 807a7dc:	0f b7 00             	movzwl (%eax),%eax
 807a7df:	0f b7 c0             	movzwl %ax,%eax
 807a7e2:	c1 e0 10             	shl    $0x10,%eax
 807a7e5:	09 c2                	or     %eax,%edx
 807a7e7:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7ed:	89 10                	mov    %edx,(%eax)
 807a7ef:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a7f5:	8b 40 0c             	mov    0xc(%eax),%eax
 807a7f8:	8d 50 fe             	lea    -0x2(%eax),%edx
 807a7fb:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a801:	89 50 0c             	mov    %edx,0xc(%eax)
 807a804:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a80a:	8b 40 08             	mov    0x8(%eax),%eax
 807a80d:	8d 50 02             	lea    0x2(%eax),%edx
 807a810:	8b 85 a0 f9 ff ff    	mov    -0x660(%ebp),%eax
 807a816:	89 50 08             	mov    %edx,0x8(%eax)
 807a819:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807a81f:	89 85 ac f9 ff ff    	mov    %eax,-0x654(%ebp)
 807a825:	8b 85 9c f9 ff ff    	mov    -0x664(%ebp),%eax
 807a82b:	89 85 b0 f9 ff ff    	mov    %eax,-0x650(%ebp)
 807a831:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807a837:	89 85 b4 f9 ff ff    	mov    %eax,-0x64c(%ebp)
 807a83d:	8b 85 ac f9 ff ff    	mov    -0x654(%ebp),%eax
 807a843:	89 85 b8 f9 ff ff    	mov    %eax,-0x648(%ebp)
 807a849:	8b 85 b8 f9 ff ff    	mov    -0x648(%ebp),%eax
 807a84f:	8b 10                	mov    (%eax),%edx
 807a851:	8b 85 b8 f9 ff ff    	mov    -0x648(%ebp),%eax
 807a857:	8b 40 04             	mov    0x4(%eax),%eax
 807a85a:	89 c1                	mov    %eax,%ecx
 807a85c:	d3 ea                	shr    %cl,%edx
 807a85e:	89 d0                	mov    %edx,%eax
 807a860:	89 c2                	mov    %eax,%edx
 807a862:	8b 85 b0 f9 ff ff    	mov    -0x650(%ebp),%eax
 807a868:	89 85 bc f9 ff ff    	mov    %eax,-0x644(%ebp)
 807a86e:	8b 85 bc f9 ff ff    	mov    -0x644(%ebp),%eax
 807a874:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a87b:	21 c2                	and    %eax,%edx
 807a87d:	8b 85 b4 f9 ff ff    	mov    -0x64c(%ebp),%eax
 807a883:	89 10                	mov    %edx,(%eax)
 807a885:	8b 85 ac f9 ff ff    	mov    -0x654(%ebp),%eax
 807a88b:	89 85 c0 f9 ff ff    	mov    %eax,-0x640(%ebp)
 807a891:	8b 85 b0 f9 ff ff    	mov    -0x650(%ebp),%eax
 807a897:	89 85 c4 f9 ff ff    	mov    %eax,-0x63c(%ebp)
 807a89d:	8b 85 c0 f9 ff ff    	mov    -0x640(%ebp),%eax
 807a8a3:	8b 50 04             	mov    0x4(%eax),%edx
 807a8a6:	8b 85 c4 f9 ff ff    	mov    -0x63c(%ebp),%eax
 807a8ac:	01 c2                	add    %eax,%edx
 807a8ae:	8b 85 c0 f9 ff ff    	mov    -0x640(%ebp),%eax
 807a8b4:	89 50 04             	mov    %edx,0x4(%eax)
 807a8b7:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807a8bd:	e9 ac 02 00 00       	jmp    807ab6e <SafeProcessCommands+0x23e7>
 807a8c2:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807a8c8:	89 85 c8 f9 ff ff    	mov    %eax,-0x638(%ebp)
 807a8ce:	c7 85 cc f9 ff ff 10 	movl   $0x10,-0x634(%ebp)
 807a8d5:	00 00 00 
 807a8d8:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a8de:	8b 40 04             	mov    0x4(%eax),%eax
 807a8e1:	83 f8 0f             	cmp    $0xf,%eax
 807a8e4:	0f 86 86 00 00 00    	jbe    807a970 <SafeProcessCommands+0x21e9>
 807a8ea:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a8f0:	8b 00                	mov    (%eax),%eax
 807a8f2:	c1 e8 10             	shr    $0x10,%eax
 807a8f5:	89 c2                	mov    %eax,%edx
 807a8f7:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a8fd:	89 10                	mov    %edx,(%eax)
 807a8ff:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a905:	8b 40 04             	mov    0x4(%eax),%eax
 807a908:	83 f0 10             	xor    $0x10,%eax
 807a90b:	89 c2                	mov    %eax,%edx
 807a90d:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a913:	89 50 04             	mov    %edx,0x4(%eax)
 807a916:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a91c:	8b 10                	mov    (%eax),%edx
 807a91e:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a924:	8b 40 08             	mov    0x8(%eax),%eax
 807a927:	89 85 d0 f9 ff ff    	mov    %eax,-0x630(%ebp)
 807a92d:	8b 85 d0 f9 ff ff    	mov    -0x630(%ebp),%eax
 807a933:	0f b7 00             	movzwl (%eax),%eax
 807a936:	0f b7 c0             	movzwl %ax,%eax
 807a939:	c1 e0 10             	shl    $0x10,%eax
 807a93c:	09 c2                	or     %eax,%edx
 807a93e:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a944:	89 10                	mov    %edx,(%eax)
 807a946:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a94c:	8b 40 0c             	mov    0xc(%eax),%eax
 807a94f:	8d 50 fe             	lea    -0x2(%eax),%edx
 807a952:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a958:	89 50 0c             	mov    %edx,0xc(%eax)
 807a95b:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a961:	8b 40 08             	mov    0x8(%eax),%eax
 807a964:	8d 50 02             	lea    0x2(%eax),%edx
 807a967:	8b 85 c8 f9 ff ff    	mov    -0x638(%ebp),%eax
 807a96d:	89 50 08             	mov    %edx,0x8(%eax)
 807a970:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807a976:	89 85 d4 f9 ff ff    	mov    %eax,-0x62c(%ebp)
 807a97c:	c7 85 d8 f9 ff ff 10 	movl   $0x10,-0x628(%ebp)
 807a983:	00 00 00 
 807a986:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807a98c:	89 85 dc f9 ff ff    	mov    %eax,-0x624(%ebp)
 807a992:	8b 85 d4 f9 ff ff    	mov    -0x62c(%ebp),%eax
 807a998:	89 85 e0 f9 ff ff    	mov    %eax,-0x620(%ebp)
 807a99e:	8b 85 e0 f9 ff ff    	mov    -0x620(%ebp),%eax
 807a9a4:	8b 10                	mov    (%eax),%edx
 807a9a6:	8b 85 e0 f9 ff ff    	mov    -0x620(%ebp),%eax
 807a9ac:	8b 40 04             	mov    0x4(%eax),%eax
 807a9af:	89 c1                	mov    %eax,%ecx
 807a9b1:	d3 ea                	shr    %cl,%edx
 807a9b3:	89 d0                	mov    %edx,%eax
 807a9b5:	89 c2                	mov    %eax,%edx
 807a9b7:	8b 85 d8 f9 ff ff    	mov    -0x628(%ebp),%eax
 807a9bd:	89 85 e4 f9 ff ff    	mov    %eax,-0x61c(%ebp)
 807a9c3:	8b 85 e4 f9 ff ff    	mov    -0x61c(%ebp),%eax
 807a9c9:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807a9d0:	21 c2                	and    %eax,%edx
 807a9d2:	8b 85 dc f9 ff ff    	mov    -0x624(%ebp),%eax
 807a9d8:	89 10                	mov    %edx,(%eax)
 807a9da:	8b 85 d4 f9 ff ff    	mov    -0x62c(%ebp),%eax
 807a9e0:	89 85 e8 f9 ff ff    	mov    %eax,-0x618(%ebp)
 807a9e6:	8b 85 d8 f9 ff ff    	mov    -0x628(%ebp),%eax
 807a9ec:	89 85 ec f9 ff ff    	mov    %eax,-0x614(%ebp)
 807a9f2:	8b 85 e8 f9 ff ff    	mov    -0x618(%ebp),%eax
 807a9f8:	8b 50 04             	mov    0x4(%eax),%edx
 807a9fb:	8b 85 ec f9 ff ff    	mov    -0x614(%ebp),%eax
 807aa01:	01 c2                	add    %eax,%edx
 807aa03:	8b 85 e8 f9 ff ff    	mov    -0x618(%ebp),%eax
 807aa09:	89 50 04             	mov    %edx,0x4(%eax)
 807aa0c:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807aa12:	89 85 f0 f9 ff ff    	mov    %eax,-0x610(%ebp)
 807aa18:	c7 85 f4 f9 ff ff 08 	movl   $0x8,-0x60c(%ebp)
 807aa1f:	00 00 00 
 807aa22:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa28:	8b 40 04             	mov    0x4(%eax),%eax
 807aa2b:	83 f8 0f             	cmp    $0xf,%eax
 807aa2e:	0f 86 86 00 00 00    	jbe    807aaba <SafeProcessCommands+0x2333>
 807aa34:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa3a:	8b 00                	mov    (%eax),%eax
 807aa3c:	c1 e8 10             	shr    $0x10,%eax
 807aa3f:	89 c2                	mov    %eax,%edx
 807aa41:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa47:	89 10                	mov    %edx,(%eax)
 807aa49:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa4f:	8b 40 04             	mov    0x4(%eax),%eax
 807aa52:	83 f0 10             	xor    $0x10,%eax
 807aa55:	89 c2                	mov    %eax,%edx
 807aa57:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa5d:	89 50 04             	mov    %edx,0x4(%eax)
 807aa60:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa66:	8b 10                	mov    (%eax),%edx
 807aa68:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa6e:	8b 40 08             	mov    0x8(%eax),%eax
 807aa71:	89 85 f8 f9 ff ff    	mov    %eax,-0x608(%ebp)
 807aa77:	8b 85 f8 f9 ff ff    	mov    -0x608(%ebp),%eax
 807aa7d:	0f b7 00             	movzwl (%eax),%eax
 807aa80:	0f b7 c0             	movzwl %ax,%eax
 807aa83:	c1 e0 10             	shl    $0x10,%eax
 807aa86:	09 c2                	or     %eax,%edx
 807aa88:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa8e:	89 10                	mov    %edx,(%eax)
 807aa90:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aa96:	8b 40 0c             	mov    0xc(%eax),%eax
 807aa99:	8d 50 fe             	lea    -0x2(%eax),%edx
 807aa9c:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aaa2:	89 50 0c             	mov    %edx,0xc(%eax)
 807aaa5:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aaab:	8b 40 08             	mov    0x8(%eax),%eax
 807aaae:	8d 50 02             	lea    0x2(%eax),%edx
 807aab1:	8b 85 f0 f9 ff ff    	mov    -0x610(%ebp),%eax
 807aab7:	89 50 08             	mov    %edx,0x8(%eax)
 807aaba:	8b 85 9c f9 ff ff    	mov    -0x664(%ebp),%eax
 807aac0:	8d 50 f0             	lea    -0x10(%eax),%edx
 807aac3:	8b 85 98 f9 ff ff    	mov    -0x668(%ebp),%eax
 807aac9:	89 85 fc f9 ff ff    	mov    %eax,-0x604(%ebp)
 807aacf:	89 95 00 fa ff ff    	mov    %edx,-0x600(%ebp)
 807aad5:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807aadb:	89 85 04 fa ff ff    	mov    %eax,-0x5fc(%ebp)
 807aae1:	8b 85 fc f9 ff ff    	mov    -0x604(%ebp),%eax
 807aae7:	89 85 08 fa ff ff    	mov    %eax,-0x5f8(%ebp)
 807aaed:	8b 85 08 fa ff ff    	mov    -0x5f8(%ebp),%eax
 807aaf3:	8b 10                	mov    (%eax),%edx
 807aaf5:	8b 85 08 fa ff ff    	mov    -0x5f8(%ebp),%eax
 807aafb:	8b 40 04             	mov    0x4(%eax),%eax
 807aafe:	89 c1                	mov    %eax,%ecx
 807ab00:	d3 ea                	shr    %cl,%edx
 807ab02:	89 d0                	mov    %edx,%eax
 807ab04:	89 c2                	mov    %eax,%edx
 807ab06:	8b 85 00 fa ff ff    	mov    -0x600(%ebp),%eax
 807ab0c:	89 85 0c fa ff ff    	mov    %eax,-0x5f4(%ebp)
 807ab12:	8b 85 0c fa ff ff    	mov    -0x5f4(%ebp),%eax
 807ab18:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807ab1f:	21 c2                	and    %eax,%edx
 807ab21:	8b 85 04 fa ff ff    	mov    -0x5fc(%ebp),%eax
 807ab27:	89 10                	mov    %edx,(%eax)
 807ab29:	8b 85 fc f9 ff ff    	mov    -0x604(%ebp),%eax
 807ab2f:	89 85 10 fa ff ff    	mov    %eax,-0x5f0(%ebp)
 807ab35:	8b 85 00 fa ff ff    	mov    -0x600(%ebp),%eax
 807ab3b:	89 85 14 fa ff ff    	mov    %eax,-0x5ec(%ebp)
 807ab41:	8b 85 10 fa ff ff    	mov    -0x5f0(%ebp),%eax
 807ab47:	8b 50 04             	mov    0x4(%eax),%edx
 807ab4a:	8b 85 14 fa ff ff    	mov    -0x5ec(%ebp),%eax
 807ab50:	01 c2                	add    %eax,%edx
 807ab52:	8b 85 10 fa ff ff    	mov    -0x5f0(%ebp),%eax
 807ab58:	89 50 04             	mov    %edx,0x4(%eax)
 807ab5b:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807ab61:	c1 e0 10             	shl    $0x10,%eax
 807ab64:	89 c2                	mov    %eax,%edx
 807ab66:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807ab6c:	09 d0                	or     %edx,%eax
 807ab6e:	89 85 f8 f5 ff ff    	mov    %eax,-0xa08(%ebp)
 807ab74:	e9 35 04 00 00       	jmp    807afae <SafeProcessCommands+0x2827>
 807ab79:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
 807ab7d:	0f b6 c0             	movzbl %al,%eax
 807ab80:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 807ab86:	89 95 18 fa ff ff    	mov    %edx,-0x5e8(%ebp)
 807ab8c:	89 85 1c fa ff ff    	mov    %eax,-0x5e4(%ebp)
 807ab92:	8d 85 f0 f5 ff ff    	lea    -0xa10(%ebp),%eax
 807ab98:	89 85 20 fa ff ff    	mov    %eax,-0x5e0(%ebp)
 807ab9e:	83 bd 1c fa ff ff 00 	cmpl   $0x0,-0x5e4(%ebp)
 807aba5:	0f 84 a3 01 00 00    	je     807ad4e <SafeProcessCommands+0x25c7>
 807abab:	8b 85 18 fa ff ff    	mov    -0x5e8(%ebp),%eax
 807abb1:	89 85 24 fa ff ff    	mov    %eax,-0x5dc(%ebp)
 807abb7:	8b 85 1c fa ff ff    	mov    -0x5e4(%ebp),%eax
 807abbd:	89 85 28 fa ff ff    	mov    %eax,-0x5d8(%ebp)
 807abc3:	8b 85 20 fa ff ff    	mov    -0x5e0(%ebp),%eax
 807abc9:	89 85 2c fa ff ff    	mov    %eax,-0x5d4(%ebp)
 807abcf:	e9 ab 00 00 00       	jmp    807ac7f <SafeProcessCommands+0x24f8>
 807abd4:	8b 85 24 fa ff ff    	mov    -0x5dc(%ebp),%eax
 807abda:	89 85 30 fa ff ff    	mov    %eax,-0x5d0(%ebp)
 807abe0:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807abe6:	8b 40 0c             	mov    0xc(%eax),%eax
 807abe9:	85 c0                	test   %eax,%eax
 807abeb:	75 07                	jne    807abf4 <SafeProcessCommands+0x246d>
 807abed:	b8 00 00 00 00       	mov    $0x0,%eax
 807abf2:	eb 7d                	jmp    807ac71 <SafeProcessCommands+0x24ea>
 807abf4:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807abfa:	8b 00                	mov    (%eax),%eax
 807abfc:	c1 e8 08             	shr    $0x8,%eax
 807abff:	89 c2                	mov    %eax,%edx
 807ac01:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac07:	89 10                	mov    %edx,(%eax)
 807ac09:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac0f:	8b 10                	mov    (%eax),%edx
 807ac11:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac17:	8b 40 08             	mov    0x8(%eax),%eax
 807ac1a:	0f b6 00             	movzbl (%eax),%eax
 807ac1d:	0f b6 c0             	movzbl %al,%eax
 807ac20:	c1 e0 18             	shl    $0x18,%eax
 807ac23:	09 c2                	or     %eax,%edx
 807ac25:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac2b:	89 10                	mov    %edx,(%eax)
 807ac2d:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac33:	8b 40 04             	mov    0x4(%eax),%eax
 807ac36:	8d 50 f8             	lea    -0x8(%eax),%edx
 807ac39:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac3f:	89 50 04             	mov    %edx,0x4(%eax)
 807ac42:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac48:	8b 40 0c             	mov    0xc(%eax),%eax
 807ac4b:	8d 50 ff             	lea    -0x1(%eax),%edx
 807ac4e:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac54:	89 50 0c             	mov    %edx,0xc(%eax)
 807ac57:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac5d:	8b 40 08             	mov    0x8(%eax),%eax
 807ac60:	8d 50 01             	lea    0x1(%eax),%edx
 807ac63:	8b 85 30 fa ff ff    	mov    -0x5d0(%ebp),%eax
 807ac69:	89 50 08             	mov    %edx,0x8(%eax)
 807ac6c:	b8 01 00 00 00       	mov    $0x1,%eax
 807ac71:	85 c0                	test   %eax,%eax
 807ac73:	75 0a                	jne    807ac7f <SafeProcessCommands+0x24f8>
 807ac75:	b8 00 00 00 00       	mov    $0x0,%eax
 807ac7a:	e9 e0 00 00 00       	jmp    807ad5f <SafeProcessCommands+0x25d8>
 807ac7f:	8b 85 24 fa ff ff    	mov    -0x5dc(%ebp),%eax
 807ac85:	89 85 34 fa ff ff    	mov    %eax,-0x5cc(%ebp)
 807ac8b:	8b 85 34 fa ff ff    	mov    -0x5cc(%ebp),%eax
 807ac91:	8b 40 04             	mov    0x4(%eax),%eax
 807ac94:	ba 20 00 00 00       	mov    $0x20,%edx
 807ac99:	29 c2                	sub    %eax,%edx
 807ac9b:	89 d0                	mov    %edx,%eax
 807ac9d:	39 85 28 fa ff ff    	cmp    %eax,-0x5d8(%ebp)
 807aca3:	0f 87 2b ff ff ff    	ja     807abd4 <SafeProcessCommands+0x244d>
 807aca9:	8b 85 24 fa ff ff    	mov    -0x5dc(%ebp),%eax
 807acaf:	89 85 38 fa ff ff    	mov    %eax,-0x5c8(%ebp)
 807acb5:	8b 85 28 fa ff ff    	mov    -0x5d8(%ebp),%eax
 807acbb:	89 85 3c fa ff ff    	mov    %eax,-0x5c4(%ebp)
 807acc1:	8b 85 2c fa ff ff    	mov    -0x5d4(%ebp),%eax
 807acc7:	89 85 40 fa ff ff    	mov    %eax,-0x5c0(%ebp)
 807accd:	8b 85 38 fa ff ff    	mov    -0x5c8(%ebp),%eax
 807acd3:	89 85 44 fa ff ff    	mov    %eax,-0x5bc(%ebp)
 807acd9:	8b 85 44 fa ff ff    	mov    -0x5bc(%ebp),%eax
 807acdf:	8b 10                	mov    (%eax),%edx
 807ace1:	8b 85 44 fa ff ff    	mov    -0x5bc(%ebp),%eax
 807ace7:	8b 40 04             	mov    0x4(%eax),%eax
 807acea:	89 c1                	mov    %eax,%ecx
 807acec:	d3 ea                	shr    %cl,%edx
 807acee:	89 d0                	mov    %edx,%eax
 807acf0:	89 c2                	mov    %eax,%edx
 807acf2:	8b 85 3c fa ff ff    	mov    -0x5c4(%ebp),%eax
 807acf8:	89 85 48 fa ff ff    	mov    %eax,-0x5b8(%ebp)
 807acfe:	8b 85 48 fa ff ff    	mov    -0x5b8(%ebp),%eax
 807ad04:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807ad0b:	21 c2                	and    %eax,%edx
 807ad0d:	8b 85 40 fa ff ff    	mov    -0x5c0(%ebp),%eax
 807ad13:	89 10                	mov    %edx,(%eax)
 807ad15:	8b 85 38 fa ff ff    	mov    -0x5c8(%ebp),%eax
 807ad1b:	89 85 4c fa ff ff    	mov    %eax,-0x5b4(%ebp)
 807ad21:	8b 85 3c fa ff ff    	mov    -0x5c4(%ebp),%eax
 807ad27:	89 85 50 fa ff ff    	mov    %eax,-0x5b0(%ebp)
 807ad2d:	8b 85 4c fa ff ff    	mov    -0x5b4(%ebp),%eax
 807ad33:	8b 50 04             	mov    0x4(%eax),%edx
 807ad36:	8b 85 50 fa ff ff    	mov    -0x5b0(%ebp),%eax
 807ad3c:	01 c2                	add    %eax,%edx
 807ad3e:	8b 85 4c fa ff ff    	mov    -0x5b4(%ebp),%eax
 807ad44:	89 50 04             	mov    %edx,0x4(%eax)
 807ad47:	b8 01 00 00 00       	mov    $0x1,%eax
 807ad4c:	eb 11                	jmp    807ad5f <SafeProcessCommands+0x25d8>
 807ad4e:	8b 85 20 fa ff ff    	mov    -0x5e0(%ebp),%eax
 807ad54:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 807ad5a:	b8 01 00 00 00       	mov    $0x1,%eax
 807ad5f:	85 c0                	test   %eax,%eax
 807ad61:	0f 84 ea 01 00 00    	je     807af51 <SafeProcessCommands+0x27ca>
 807ad67:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax
 807ad6b:	0f b6 c0             	movzbl %al,%eax
 807ad6e:	8b 95 7c f8 ff ff    	mov    -0x784(%ebp),%edx
 807ad74:	89 95 54 fa ff ff    	mov    %edx,-0x5ac(%ebp)
 807ad7a:	89 85 58 fa ff ff    	mov    %eax,-0x5a8(%ebp)
 807ad80:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807ad86:	89 85 5c fa ff ff    	mov    %eax,-0x5a4(%ebp)
 807ad8c:	83 bd 58 fa ff ff 00 	cmpl   $0x0,-0x5a8(%ebp)
 807ad93:	0f 84 a3 01 00 00    	je     807af3c <SafeProcessCommands+0x27b5>
 807ad99:	8b 85 54 fa ff ff    	mov    -0x5ac(%ebp),%eax
 807ad9f:	89 85 60 fa ff ff    	mov    %eax,-0x5a0(%ebp)
 807ada5:	8b 85 58 fa ff ff    	mov    -0x5a8(%ebp),%eax
 807adab:	89 85 64 fa ff ff    	mov    %eax,-0x59c(%ebp)
 807adb1:	8b 85 5c fa ff ff    	mov    -0x5a4(%ebp),%eax
 807adb7:	89 85 68 fa ff ff    	mov    %eax,-0x598(%ebp)
 807adbd:	e9 ab 00 00 00       	jmp    807ae6d <SafeProcessCommands+0x26e6>
 807adc2:	8b 85 60 fa ff ff    	mov    -0x5a0(%ebp),%eax
 807adc8:	89 85 6c fa ff ff    	mov    %eax,-0x594(%ebp)
 807adce:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807add4:	8b 40 0c             	mov    0xc(%eax),%eax
 807add7:	85 c0                	test   %eax,%eax
 807add9:	75 07                	jne    807ade2 <SafeProcessCommands+0x265b>
 807addb:	b8 00 00 00 00       	mov    $0x0,%eax
 807ade0:	eb 7d                	jmp    807ae5f <SafeProcessCommands+0x26d8>
 807ade2:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ade8:	8b 00                	mov    (%eax),%eax
 807adea:	c1 e8 08             	shr    $0x8,%eax
 807aded:	89 c2                	mov    %eax,%edx
 807adef:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807adf5:	89 10                	mov    %edx,(%eax)
 807adf7:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807adfd:	8b 10                	mov    (%eax),%edx
 807adff:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae05:	8b 40 08             	mov    0x8(%eax),%eax
 807ae08:	0f b6 00             	movzbl (%eax),%eax
 807ae0b:	0f b6 c0             	movzbl %al,%eax
 807ae0e:	c1 e0 18             	shl    $0x18,%eax
 807ae11:	09 c2                	or     %eax,%edx
 807ae13:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae19:	89 10                	mov    %edx,(%eax)
 807ae1b:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae21:	8b 40 04             	mov    0x4(%eax),%eax
 807ae24:	8d 50 f8             	lea    -0x8(%eax),%edx
 807ae27:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae2d:	89 50 04             	mov    %edx,0x4(%eax)
 807ae30:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae36:	8b 40 0c             	mov    0xc(%eax),%eax
 807ae39:	8d 50 ff             	lea    -0x1(%eax),%edx
 807ae3c:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae42:	89 50 0c             	mov    %edx,0xc(%eax)
 807ae45:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae4b:	8b 40 08             	mov    0x8(%eax),%eax
 807ae4e:	8d 50 01             	lea    0x1(%eax),%edx
 807ae51:	8b 85 6c fa ff ff    	mov    -0x594(%ebp),%eax
 807ae57:	89 50 08             	mov    %edx,0x8(%eax)
 807ae5a:	b8 01 00 00 00       	mov    $0x1,%eax
 807ae5f:	85 c0                	test   %eax,%eax
 807ae61:	75 0a                	jne    807ae6d <SafeProcessCommands+0x26e6>
 807ae63:	b8 00 00 00 00       	mov    $0x0,%eax
 807ae68:	e9 e0 00 00 00       	jmp    807af4d <SafeProcessCommands+0x27c6>
 807ae6d:	8b 85 60 fa ff ff    	mov    -0x5a0(%ebp),%eax
 807ae73:	89 85 70 fa ff ff    	mov    %eax,-0x590(%ebp)
 807ae79:	8b 85 70 fa ff ff    	mov    -0x590(%ebp),%eax
 807ae7f:	8b 40 04             	mov    0x4(%eax),%eax
 807ae82:	ba 20 00 00 00       	mov    $0x20,%edx
 807ae87:	29 c2                	sub    %eax,%edx
 807ae89:	89 d0                	mov    %edx,%eax
 807ae8b:	39 85 64 fa ff ff    	cmp    %eax,-0x59c(%ebp)
 807ae91:	0f 87 2b ff ff ff    	ja     807adc2 <SafeProcessCommands+0x263b>
 807ae97:	8b 85 60 fa ff ff    	mov    -0x5a0(%ebp),%eax
 807ae9d:	89 85 74 fa ff ff    	mov    %eax,-0x58c(%ebp)
 807aea3:	8b 85 64 fa ff ff    	mov    -0x59c(%ebp),%eax
 807aea9:	89 85 78 fa ff ff    	mov    %eax,-0x588(%ebp)
 807aeaf:	8b 85 68 fa ff ff    	mov    -0x598(%ebp),%eax
 807aeb5:	89 85 7c fa ff ff    	mov    %eax,-0x584(%ebp)
 807aebb:	8b 85 74 fa ff ff    	mov    -0x58c(%ebp),%eax
 807aec1:	89 85 80 fa ff ff    	mov    %eax,-0x580(%ebp)
 807aec7:	8b 85 80 fa ff ff    	mov    -0x580(%ebp),%eax
 807aecd:	8b 10                	mov    (%eax),%edx
 807aecf:	8b 85 80 fa ff ff    	mov    -0x580(%ebp),%eax
 807aed5:	8b 40 04             	mov    0x4(%eax),%eax
 807aed8:	89 c1                	mov    %eax,%ecx
 807aeda:	d3 ea                	shr    %cl,%edx
 807aedc:	89 d0                	mov    %edx,%eax
 807aede:	89 c2                	mov    %eax,%edx
 807aee0:	8b 85 78 fa ff ff    	mov    -0x588(%ebp),%eax
 807aee6:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%ebp)
 807aeec:	8b 85 84 fa ff ff    	mov    -0x57c(%ebp),%eax
 807aef2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807aef9:	21 c2                	and    %eax,%edx
 807aefb:	8b 85 7c fa ff ff    	mov    -0x584(%ebp),%eax
 807af01:	89 10                	mov    %edx,(%eax)
 807af03:	8b 85 74 fa ff ff    	mov    -0x58c(%ebp),%eax
 807af09:	89 85 88 fa ff ff    	mov    %eax,-0x578(%ebp)
 807af0f:	8b 85 78 fa ff ff    	mov    -0x588(%ebp),%eax
 807af15:	89 85 8c fa ff ff    	mov    %eax,-0x574(%ebp)
 807af1b:	8b 85 88 fa ff ff    	mov    -0x578(%ebp),%eax
 807af21:	8b 50 04             	mov    0x4(%eax),%edx
 807af24:	8b 85 8c fa ff ff    	mov    -0x574(%ebp),%eax
 807af2a:	01 c2                	add    %eax,%edx
 807af2c:	8b 85 88 fa ff ff    	mov    -0x578(%ebp),%eax
 807af32:	89 50 04             	mov    %edx,0x4(%eax)
 807af35:	b8 01 00 00 00       	mov    $0x1,%eax
 807af3a:	eb 11                	jmp    807af4d <SafeProcessCommands+0x27c6>
 807af3c:	8b 85 5c fa ff ff    	mov    -0x5a4(%ebp),%eax
 807af42:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 807af48:	b8 01 00 00 00       	mov    $0x1,%eax
 807af4d:	85 c0                	test   %eax,%eax
 807af4f:	75 5d                	jne    807afae <SafeProcessCommands+0x2827>
 807af51:	8b 85 7c f8 ff ff    	mov    -0x784(%ebp),%eax
 807af57:	89 85 90 fa ff ff    	mov    %eax,-0x570(%ebp)
 807af5d:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807af60:	89 85 94 fa ff ff    	mov    %eax,-0x56c(%ebp)
 807af66:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 807af6c:	8b 10                	mov    (%eax),%edx
 807af6e:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 807af74:	89 10                	mov    %edx,(%eax)
 807af76:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 807af7c:	8b 50 04             	mov    0x4(%eax),%edx
 807af7f:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 807af85:	89 50 04             	mov    %edx,0x4(%eax)
 807af88:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 807af8e:	8b 50 08             	mov    0x8(%eax),%edx
 807af91:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 807af97:	89 50 08             	mov    %edx,0x8(%eax)
 807af9a:	8b 85 94 fa ff ff    	mov    -0x56c(%ebp),%eax
 807afa0:	8b 50 0c             	mov    0xc(%eax),%edx
 807afa3:	8b 85 90 fa ff ff    	mov    -0x570(%ebp),%eax
 807afa9:	89 50 0c             	mov    %edx,0xc(%eax)
 807afac:	eb 4e                	jmp    807affc <SafeProcessCommands+0x2875>
 807afae:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax
 807afb2:	0f b7 d0             	movzwl %ax,%edx
 807afb5:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807afbb:	01 c2                	add    %eax,%edx
 807afbd:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807afc3:	89 90 04 01 00 00    	mov    %edx,0x104(%eax)
 807afc9:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807afcf:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
 807afd5:	8d 50 ff             	lea    -0x1(%eax),%edx
 807afd8:	8b 85 78 f8 ff ff    	mov    -0x788(%ebp),%eax
 807afde:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)
 807afe4:	8b 85 80 f8 ff ff    	mov    -0x780(%ebp),%eax
 807afea:	8b 10                	mov    (%eax),%edx
 807afec:	8b 85 f0 f5 ff ff    	mov    -0xa10(%ebp),%eax
 807aff2:	01 c2                	add    %eax,%edx
 807aff4:	8b 85 80 f8 ff ff    	mov    -0x780(%ebp),%eax
 807affa:	89 10                	mov    %edx,(%eax)
 807affc:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807b002:	85 c0                	test   %eax,%eax
 807b004:	0f 84 e4 12 00 00    	je     807c2ee <SafeProcessCommands+0x3b67>
 807b00a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b010:	8b 90 b4 00 00 00    	mov    0xb4(%eax),%edx
 807b016:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807b01c:	29 c2                	sub    %eax,%edx
 807b01e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b024:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 807b02a:	eb 01                	jmp    807b02d <SafeProcessCommands+0x28a6>
 807b02c:	90                   	nop
 807b02d:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807b034:	74 0c                	je     807b042 <SafeProcessCommands+0x28bb>
 807b036:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b03c:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 807b042:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b048:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax
 807b04e:	85 c0                	test   %eax,%eax
 807b050:	0f 84 53 0b 00 00    	je     807bba9 <SafeProcessCommands+0x3422>
 807b056:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b05c:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 807b062:	8b 95 fc f5 ff ff    	mov    -0xa04(%ebp),%edx
 807b068:	89 95 98 fa ff ff    	mov    %edx,-0x568(%ebp)
 807b06e:	89 85 9c fa ff ff    	mov    %eax,-0x564(%ebp)
 807b074:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807b07a:	89 85 a0 fa ff ff    	mov    %eax,-0x560(%ebp)
 807b080:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807b086:	89 85 a4 fa ff ff    	mov    %eax,-0x55c(%ebp)
 807b08c:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807b092:	89 85 a8 fa ff ff    	mov    %eax,-0x558(%ebp)
 807b098:	83 bd 98 fa ff ff 00 	cmpl   $0x0,-0x568(%ebp)
 807b09f:	0f 85 38 01 00 00    	jne    807b1dd <SafeProcessCommands+0x2a56>
 807b0a5:	8b 85 a0 fa ff ff    	mov    -0x560(%ebp),%eax
 807b0ab:	89 85 ac fa ff ff    	mov    %eax,-0x554(%ebp)
 807b0b1:	c7 85 b0 fa ff ff 08 	movl   $0x8,-0x550(%ebp)
 807b0b8:	00 00 00 
 807b0bb:	8b 85 ac fa ff ff    	mov    -0x554(%ebp),%eax
 807b0c1:	89 85 b4 fa ff ff    	mov    %eax,-0x54c(%ebp)
 807b0c7:	8b 85 b0 fa ff ff    	mov    -0x550(%ebp),%eax
 807b0cd:	89 85 b8 fa ff ff    	mov    %eax,-0x548(%ebp)
 807b0d3:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b0d9:	8b 40 04             	mov    0x4(%eax),%eax
 807b0dc:	83 f8 0f             	cmp    $0xf,%eax
 807b0df:	0f 86 86 00 00 00    	jbe    807b16b <SafeProcessCommands+0x29e4>
 807b0e5:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b0eb:	8b 00                	mov    (%eax),%eax
 807b0ed:	c1 e8 10             	shr    $0x10,%eax
 807b0f0:	89 c2                	mov    %eax,%edx
 807b0f2:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b0f8:	89 10                	mov    %edx,(%eax)
 807b0fa:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b100:	8b 40 04             	mov    0x4(%eax),%eax
 807b103:	83 f0 10             	xor    $0x10,%eax
 807b106:	89 c2                	mov    %eax,%edx
 807b108:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b10e:	89 50 04             	mov    %edx,0x4(%eax)
 807b111:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b117:	8b 10                	mov    (%eax),%edx
 807b119:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b11f:	8b 40 08             	mov    0x8(%eax),%eax
 807b122:	89 85 bc fa ff ff    	mov    %eax,-0x544(%ebp)
 807b128:	8b 85 bc fa ff ff    	mov    -0x544(%ebp),%eax
 807b12e:	0f b7 00             	movzwl (%eax),%eax
 807b131:	0f b7 c0             	movzwl %ax,%eax
 807b134:	c1 e0 10             	shl    $0x10,%eax
 807b137:	09 c2                	or     %eax,%edx
 807b139:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b13f:	89 10                	mov    %edx,(%eax)
 807b141:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b147:	8b 40 0c             	mov    0xc(%eax),%eax
 807b14a:	8d 50 fe             	lea    -0x2(%eax),%edx
 807b14d:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b153:	89 50 0c             	mov    %edx,0xc(%eax)
 807b156:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b15c:	8b 40 08             	mov    0x8(%eax),%eax
 807b15f:	8d 50 02             	lea    0x2(%eax),%edx
 807b162:	8b 85 b4 fa ff ff    	mov    -0x54c(%ebp),%eax
 807b168:	89 50 08             	mov    %edx,0x8(%eax)
 807b16b:	8b 85 ac fa ff ff    	mov    -0x554(%ebp),%eax
 807b171:	89 85 c0 fa ff ff    	mov    %eax,-0x540(%ebp)
 807b177:	8b 85 c0 fa ff ff    	mov    -0x540(%ebp),%eax
 807b17d:	8b 10                	mov    (%eax),%edx
 807b17f:	8b 85 c0 fa ff ff    	mov    -0x540(%ebp),%eax
 807b185:	8b 40 04             	mov    0x4(%eax),%eax
 807b188:	89 c1                	mov    %eax,%ecx
 807b18a:	d3 ea                	shr    %cl,%edx
 807b18c:	89 d0                	mov    %edx,%eax
 807b18e:	89 c2                	mov    %eax,%edx
 807b190:	8b 85 b0 fa ff ff    	mov    -0x550(%ebp),%eax
 807b196:	89 85 c4 fa ff ff    	mov    %eax,-0x53c(%ebp)
 807b19c:	8b 85 c4 fa ff ff    	mov    -0x53c(%ebp),%eax
 807b1a2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807b1a9:	21 d0                	and    %edx,%eax
 807b1ab:	c1 e0 02             	shl    $0x2,%eax
 807b1ae:	01 85 9c fa ff ff    	add    %eax,-0x564(%ebp)
 807b1b4:	8b 85 9c fa ff ff    	mov    -0x564(%ebp),%eax
 807b1ba:	0f b6 00             	movzbl (%eax),%eax
 807b1bd:	0f b6 d0             	movzbl %al,%edx
 807b1c0:	8b 85 a4 fa ff ff    	mov    -0x55c(%ebp),%eax
 807b1c6:	89 10                	mov    %edx,(%eax)
 807b1c8:	8b 85 9c fa ff ff    	mov    -0x564(%ebp),%eax
 807b1ce:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807b1d2:	0f b7 d0             	movzwl %ax,%edx
 807b1d5:	8b 85 a8 fa ff ff    	mov    -0x558(%ebp),%eax
 807b1db:	89 10                	mov    %edx,(%eax)
 807b1dd:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 807b1e3:	89 85 c8 fa ff ff    	mov    %eax,-0x538(%ebp)
 807b1e9:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807b1ef:	89 85 cc fa ff ff    	mov    %eax,-0x534(%ebp)
 807b1f5:	c7 85 d0 fa ff ff 1c 	movl   $0x1c,-0x530(%ebp)
 807b1fc:	00 00 00 
 807b1ff:	83 bd c8 fa ff ff 00 	cmpl   $0x0,-0x538(%ebp)
 807b206:	74 07                	je     807b20f <SafeProcessCommands+0x2a88>
 807b208:	b8 01 00 00 00       	mov    $0x1,%eax
 807b20d:	eb 2d                	jmp    807b23c <SafeProcessCommands+0x2ab5>
 807b20f:	8b 85 cc fa ff ff    	mov    -0x534(%ebp),%eax
 807b215:	89 85 d4 fa ff ff    	mov    %eax,-0x52c(%ebp)
 807b21b:	8b 85 d0 fa ff ff    	mov    -0x530(%ebp),%eax
 807b221:	89 85 d8 fa ff ff    	mov    %eax,-0x528(%ebp)
 807b227:	8b 85 d4 fa ff ff    	mov    -0x52c(%ebp),%eax
 807b22d:	8b 40 0c             	mov    0xc(%eax),%eax
 807b230:	39 85 d8 fa ff ff    	cmp    %eax,-0x528(%ebp)
 807b236:	0f 96 c0             	setbe  %al
 807b239:	0f b6 c0             	movzbl %al,%eax
 807b23c:	85 c0                	test   %eax,%eax
 807b23e:	75 1b                	jne    807b25b <SafeProcessCommands+0x2ad4>
 807b240:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b246:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 807b24c:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807b253:	00 00 00 
 807b256:	e9 9e 33 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807b25b:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b261:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 807b267:	85 c0                	test   %eax,%eax
 807b269:	0f 94 c0             	sete   %al
 807b26c:	0f b6 c0             	movzbl %al,%eax
 807b26f:	85 c0                	test   %eax,%eax
 807b271:	0f 84 d3 01 00 00    	je     807b44a <SafeProcessCommands+0x2cc3>
 807b277:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807b27e:	74 21                	je     807b2a1 <SafeProcessCommands+0x2b1a>
 807b280:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b286:	89 04 24             	mov    %eax,(%esp)
 807b289:	e8 00 11 ff ff       	call   806c38e <SafeDecodeLiteralBlockSwitch>
 807b28e:	85 c0                	test   %eax,%eax
 807b290:	75 1d                	jne    807b2af <SafeProcessCommands+0x2b28>
 807b292:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807b299:	00 00 00 
 807b29c:	e9 58 33 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807b2a1:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b2a7:	89 04 24             	mov    %eax,(%esp)
 807b2aa:	e8 f2 fd fe ff       	call   806b0a1 <DecodeLiteralBlockSwitch>
 807b2af:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b2b5:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 807b2bb:	8b 95 fc f5 ff ff    	mov    -0xa04(%ebp),%edx
 807b2c1:	89 95 dc fa ff ff    	mov    %edx,-0x524(%ebp)
 807b2c7:	89 85 e0 fa ff ff    	mov    %eax,-0x520(%ebp)
 807b2cd:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807b2d3:	89 85 e4 fa ff ff    	mov    %eax,-0x51c(%ebp)
 807b2d9:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807b2df:	89 85 e8 fa ff ff    	mov    %eax,-0x518(%ebp)
 807b2e5:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807b2eb:	89 85 ec fa ff ff    	mov    %eax,-0x514(%ebp)
 807b2f1:	83 bd dc fa ff ff 00 	cmpl   $0x0,-0x524(%ebp)
 807b2f8:	0f 85 38 01 00 00    	jne    807b436 <SafeProcessCommands+0x2caf>
 807b2fe:	8b 85 e4 fa ff ff    	mov    -0x51c(%ebp),%eax
 807b304:	89 85 f0 fa ff ff    	mov    %eax,-0x510(%ebp)
 807b30a:	c7 85 f4 fa ff ff 08 	movl   $0x8,-0x50c(%ebp)
 807b311:	00 00 00 
 807b314:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax
 807b31a:	89 85 f8 fa ff ff    	mov    %eax,-0x508(%ebp)
 807b320:	8b 85 f4 fa ff ff    	mov    -0x50c(%ebp),%eax
 807b326:	89 85 fc fa ff ff    	mov    %eax,-0x504(%ebp)
 807b32c:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b332:	8b 40 04             	mov    0x4(%eax),%eax
 807b335:	83 f8 0f             	cmp    $0xf,%eax
 807b338:	0f 86 86 00 00 00    	jbe    807b3c4 <SafeProcessCommands+0x2c3d>
 807b33e:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b344:	8b 00                	mov    (%eax),%eax
 807b346:	c1 e8 10             	shr    $0x10,%eax
 807b349:	89 c2                	mov    %eax,%edx
 807b34b:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b351:	89 10                	mov    %edx,(%eax)
 807b353:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b359:	8b 40 04             	mov    0x4(%eax),%eax
 807b35c:	83 f0 10             	xor    $0x10,%eax
 807b35f:	89 c2                	mov    %eax,%edx
 807b361:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b367:	89 50 04             	mov    %edx,0x4(%eax)
 807b36a:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b370:	8b 10                	mov    (%eax),%edx
 807b372:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b378:	8b 40 08             	mov    0x8(%eax),%eax
 807b37b:	89 85 00 fb ff ff    	mov    %eax,-0x500(%ebp)
 807b381:	8b 85 00 fb ff ff    	mov    -0x500(%ebp),%eax
 807b387:	0f b7 00             	movzwl (%eax),%eax
 807b38a:	0f b7 c0             	movzwl %ax,%eax
 807b38d:	c1 e0 10             	shl    $0x10,%eax
 807b390:	09 c2                	or     %eax,%edx
 807b392:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b398:	89 10                	mov    %edx,(%eax)
 807b39a:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b3a0:	8b 40 0c             	mov    0xc(%eax),%eax
 807b3a3:	8d 50 fe             	lea    -0x2(%eax),%edx
 807b3a6:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b3ac:	89 50 0c             	mov    %edx,0xc(%eax)
 807b3af:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b3b5:	8b 40 08             	mov    0x8(%eax),%eax
 807b3b8:	8d 50 02             	lea    0x2(%eax),%edx
 807b3bb:	8b 85 f8 fa ff ff    	mov    -0x508(%ebp),%eax
 807b3c1:	89 50 08             	mov    %edx,0x8(%eax)
 807b3c4:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax
 807b3ca:	89 85 04 fb ff ff    	mov    %eax,-0x4fc(%ebp)
 807b3d0:	8b 85 04 fb ff ff    	mov    -0x4fc(%ebp),%eax
 807b3d6:	8b 10                	mov    (%eax),%edx
 807b3d8:	8b 85 04 fb ff ff    	mov    -0x4fc(%ebp),%eax
 807b3de:	8b 40 04             	mov    0x4(%eax),%eax
 807b3e1:	89 c1                	mov    %eax,%ecx
 807b3e3:	d3 ea                	shr    %cl,%edx
 807b3e5:	89 d0                	mov    %edx,%eax
 807b3e7:	89 c2                	mov    %eax,%edx
 807b3e9:	8b 85 f4 fa ff ff    	mov    -0x50c(%ebp),%eax
 807b3ef:	89 85 08 fb ff ff    	mov    %eax,-0x4f8(%ebp)
 807b3f5:	8b 85 08 fb ff ff    	mov    -0x4f8(%ebp),%eax
 807b3fb:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807b402:	21 d0                	and    %edx,%eax
 807b404:	c1 e0 02             	shl    $0x2,%eax
 807b407:	01 85 e0 fa ff ff    	add    %eax,-0x520(%ebp)
 807b40d:	8b 85 e0 fa ff ff    	mov    -0x520(%ebp),%eax
 807b413:	0f b6 00             	movzbl (%eax),%eax
 807b416:	0f b6 d0             	movzbl %al,%edx
 807b419:	8b 85 e8 fa ff ff    	mov    -0x518(%ebp),%eax
 807b41f:	89 10                	mov    %edx,(%eax)
 807b421:	8b 85 e0 fa ff ff    	mov    -0x520(%ebp),%eax
 807b427:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807b42b:	0f b7 d0             	movzwl %ax,%edx
 807b42e:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax
 807b434:	89 10                	mov    %edx,(%eax)
 807b436:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b43c:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax
 807b442:	85 c0                	test   %eax,%eax
 807b444:	0f 84 e2 fb ff ff    	je     807b02c <SafeProcessCommands+0x28a5>
 807b44a:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807b451:	0f 85 f3 03 00 00    	jne    807b84a <SafeProcessCommands+0x30c3>
 807b457:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b45d:	8b 50 5c             	mov    0x5c(%eax),%edx
 807b460:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807b466:	8d 34 02             	lea    (%edx,%eax,1),%esi
 807b469:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b46f:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 807b475:	89 85 0c fb ff ff    	mov    %eax,-0x4f4(%ebp)
 807b47b:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807b481:	89 85 10 fb ff ff    	mov    %eax,-0x4f0(%ebp)
 807b487:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807b48d:	89 85 14 fb ff ff    	mov    %eax,-0x4ec(%ebp)
 807b493:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807b499:	89 85 18 fb ff ff    	mov    %eax,-0x4e8(%ebp)
 807b49f:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax
 807b4a5:	8b 00                	mov    (%eax),%eax
 807b4a7:	89 85 1c fb ff ff    	mov    %eax,-0x4e4(%ebp)
 807b4ad:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 807b4b3:	8b 00                	mov    (%eax),%eax
 807b4b5:	83 f8 08             	cmp    $0x8,%eax
 807b4b8:	0f 97 c0             	seta   %al
 807b4bb:	0f b6 c0             	movzbl %al,%eax
 807b4be:	85 c0                	test   %eax,%eax
 807b4c0:	0f 84 c4 01 00 00    	je     807b68a <SafeProcessCommands+0x2f03>
 807b4c6:	8b 85 10 fb ff ff    	mov    -0x4f0(%ebp),%eax
 807b4cc:	89 85 20 fb ff ff    	mov    %eax,-0x4e0(%ebp)
 807b4d2:	8b 85 20 fb ff ff    	mov    -0x4e0(%ebp),%eax
 807b4d8:	89 85 24 fb ff ff    	mov    %eax,-0x4dc(%ebp)
 807b4de:	c7 85 28 fb ff ff 10 	movl   $0x10,-0x4d8(%ebp)
 807b4e5:	00 00 00 
 807b4e8:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b4ee:	8b 40 04             	mov    0x4(%eax),%eax
 807b4f1:	83 f8 0f             	cmp    $0xf,%eax
 807b4f4:	0f 86 86 00 00 00    	jbe    807b580 <SafeProcessCommands+0x2df9>
 807b4fa:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b500:	8b 00                	mov    (%eax),%eax
 807b502:	c1 e8 10             	shr    $0x10,%eax
 807b505:	89 c2                	mov    %eax,%edx
 807b507:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b50d:	89 10                	mov    %edx,(%eax)
 807b50f:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b515:	8b 40 04             	mov    0x4(%eax),%eax
 807b518:	83 f0 10             	xor    $0x10,%eax
 807b51b:	89 c2                	mov    %eax,%edx
 807b51d:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b523:	89 50 04             	mov    %edx,0x4(%eax)
 807b526:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b52c:	8b 10                	mov    (%eax),%edx
 807b52e:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b534:	8b 40 08             	mov    0x8(%eax),%eax
 807b537:	89 85 2c fb ff ff    	mov    %eax,-0x4d4(%ebp)
 807b53d:	8b 85 2c fb ff ff    	mov    -0x4d4(%ebp),%eax
 807b543:	0f b7 00             	movzwl (%eax),%eax
 807b546:	0f b7 c0             	movzwl %ax,%eax
 807b549:	c1 e0 10             	shl    $0x10,%eax
 807b54c:	09 c2                	or     %eax,%edx
 807b54e:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b554:	89 10                	mov    %edx,(%eax)
 807b556:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b55c:	8b 40 0c             	mov    0xc(%eax),%eax
 807b55f:	8d 50 fe             	lea    -0x2(%eax),%edx
 807b562:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b568:	89 50 0c             	mov    %edx,0xc(%eax)
 807b56b:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b571:	8b 40 08             	mov    0x8(%eax),%eax
 807b574:	8d 50 02             	lea    0x2(%eax),%edx
 807b577:	8b 85 24 fb ff ff    	mov    -0x4dc(%ebp),%eax
 807b57d:	89 50 08             	mov    %edx,0x8(%eax)
 807b580:	8b 85 20 fb ff ff    	mov    -0x4e0(%ebp),%eax
 807b586:	89 85 30 fb ff ff    	mov    %eax,-0x4d0(%ebp)
 807b58c:	8b 85 30 fb ff ff    	mov    -0x4d0(%ebp),%eax
 807b592:	8b 10                	mov    (%eax),%edx
 807b594:	8b 85 30 fb ff ff    	mov    -0x4d0(%ebp),%eax
 807b59a:	8b 40 04             	mov    0x4(%eax),%eax
 807b59d:	89 c1                	mov    %eax,%ecx
 807b59f:	d3 ea                	shr    %cl,%edx
 807b5a1:	89 d0                	mov    %edx,%eax
 807b5a3:	89 85 34 fb ff ff    	mov    %eax,-0x4cc(%ebp)
 807b5a9:	8b 85 34 fb ff ff    	mov    -0x4cc(%ebp),%eax
 807b5af:	0f b6 d0             	movzbl %al,%edx
 807b5b2:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax
 807b5b8:	8b 00                	mov    (%eax),%eax
 807b5ba:	01 d0                	add    %edx,%eax
 807b5bc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 807b5c3:	8b 85 0c fb ff ff    	mov    -0x4f4(%ebp),%eax
 807b5c9:	01 d0                	add    %edx,%eax
 807b5cb:	89 85 38 fb ff ff    	mov    %eax,-0x4c8(%ebp)
 807b5d1:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 807b5d7:	8b 00                	mov    (%eax),%eax
 807b5d9:	83 e8 08             	sub    $0x8,%eax
 807b5dc:	89 85 3c fb ff ff    	mov    %eax,-0x4c4(%ebp)
 807b5e2:	8b 85 3c fb ff ff    	mov    -0x4c4(%ebp),%eax
 807b5e8:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807b5ef:	89 85 40 fb ff ff    	mov    %eax,-0x4c0(%ebp)
 807b5f5:	8b 85 10 fb ff ff    	mov    -0x4f0(%ebp),%eax
 807b5fb:	89 85 44 fb ff ff    	mov    %eax,-0x4bc(%ebp)
 807b601:	c7 85 48 fb ff ff 08 	movl   $0x8,-0x4b8(%ebp)
 807b608:	00 00 00 
 807b60b:	8b 85 44 fb ff ff    	mov    -0x4bc(%ebp),%eax
 807b611:	8b 50 04             	mov    0x4(%eax),%edx
 807b614:	8b 85 48 fb ff ff    	mov    -0x4b8(%ebp),%eax
 807b61a:	01 c2                	add    %eax,%edx
 807b61c:	8b 85 44 fb ff ff    	mov    -0x4bc(%ebp),%eax
 807b622:	89 50 04             	mov    %edx,0x4(%eax)
 807b625:	8b 85 34 fb ff ff    	mov    -0x4cc(%ebp),%eax
 807b62b:	c1 e8 08             	shr    $0x8,%eax
 807b62e:	23 85 40 fb ff ff    	and    -0x4c0(%ebp),%eax
 807b634:	c1 e0 02             	shl    $0x2,%eax
 807b637:	01 85 38 fb ff ff    	add    %eax,-0x4c8(%ebp)
 807b63d:	8b 85 38 fb ff ff    	mov    -0x4c8(%ebp),%eax
 807b643:	0f b6 00             	movzbl (%eax),%eax
 807b646:	0f b6 c0             	movzbl %al,%eax
 807b649:	8b 95 10 fb ff ff    	mov    -0x4f0(%ebp),%edx
 807b64f:	89 95 4c fb ff ff    	mov    %edx,-0x4b4(%ebp)
 807b655:	89 85 50 fb ff ff    	mov    %eax,-0x4b0(%ebp)
 807b65b:	8b 85 4c fb ff ff    	mov    -0x4b4(%ebp),%eax
 807b661:	8b 50 04             	mov    0x4(%eax),%edx
 807b664:	8b 85 50 fb ff ff    	mov    -0x4b0(%ebp),%eax
 807b66a:	01 c2                	add    %eax,%edx
 807b66c:	8b 85 4c fb ff ff    	mov    -0x4b4(%ebp),%eax
 807b672:	89 50 04             	mov    %edx,0x4(%eax)
 807b675:	8b 85 38 fb ff ff    	mov    -0x4c8(%ebp),%eax
 807b67b:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807b67f:	0f b7 c0             	movzwl %ax,%eax
 807b682:	89 85 1c fb ff ff    	mov    %eax,-0x4e4(%ebp)
 807b688:	eb 34                	jmp    807b6be <SafeProcessCommands+0x2f37>
 807b68a:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 807b690:	8b 00                	mov    (%eax),%eax
 807b692:	8b 95 10 fb ff ff    	mov    -0x4f0(%ebp),%edx
 807b698:	89 95 54 fb ff ff    	mov    %edx,-0x4ac(%ebp)
 807b69e:	89 85 58 fb ff ff    	mov    %eax,-0x4a8(%ebp)
 807b6a4:	8b 85 54 fb ff ff    	mov    -0x4ac(%ebp),%eax
 807b6aa:	8b 50 04             	mov    0x4(%eax),%edx
 807b6ad:	8b 85 58 fb ff ff    	mov    -0x4a8(%ebp),%eax
 807b6b3:	01 c2                	add    %eax,%edx
 807b6b5:	8b 85 54 fb ff ff    	mov    -0x4ac(%ebp),%eax
 807b6bb:	89 50 04             	mov    %edx,0x4(%eax)
 807b6be:	c7 85 5c fb ff ff 00 	movl   $0x0,-0x4a4(%ebp)
 807b6c5:	00 00 00 
 807b6c8:	8b 85 0c fb ff ff    	mov    -0x4f4(%ebp),%eax
 807b6ce:	89 85 60 fb ff ff    	mov    %eax,-0x4a0(%ebp)
 807b6d4:	8b 85 10 fb ff ff    	mov    -0x4f0(%ebp),%eax
 807b6da:	89 85 64 fb ff ff    	mov    %eax,-0x49c(%ebp)
 807b6e0:	8b 85 14 fb ff ff    	mov    -0x4ec(%ebp),%eax
 807b6e6:	89 85 68 fb ff ff    	mov    %eax,-0x498(%ebp)
 807b6ec:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax
 807b6f2:	89 85 6c fb ff ff    	mov    %eax,-0x494(%ebp)
 807b6f8:	83 bd 5c fb ff ff 00 	cmpl   $0x0,-0x4a4(%ebp)
 807b6ff:	0f 85 38 01 00 00    	jne    807b83d <SafeProcessCommands+0x30b6>
 807b705:	8b 85 64 fb ff ff    	mov    -0x49c(%ebp),%eax
 807b70b:	89 85 70 fb ff ff    	mov    %eax,-0x490(%ebp)
 807b711:	c7 85 74 fb ff ff 08 	movl   $0x8,-0x48c(%ebp)
 807b718:	00 00 00 
 807b71b:	8b 85 70 fb ff ff    	mov    -0x490(%ebp),%eax
 807b721:	89 85 78 fb ff ff    	mov    %eax,-0x488(%ebp)
 807b727:	8b 85 74 fb ff ff    	mov    -0x48c(%ebp),%eax
 807b72d:	89 85 7c fb ff ff    	mov    %eax,-0x484(%ebp)
 807b733:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b739:	8b 40 04             	mov    0x4(%eax),%eax
 807b73c:	83 f8 0f             	cmp    $0xf,%eax
 807b73f:	0f 86 86 00 00 00    	jbe    807b7cb <SafeProcessCommands+0x3044>
 807b745:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b74b:	8b 00                	mov    (%eax),%eax
 807b74d:	c1 e8 10             	shr    $0x10,%eax
 807b750:	89 c2                	mov    %eax,%edx
 807b752:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b758:	89 10                	mov    %edx,(%eax)
 807b75a:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b760:	8b 40 04             	mov    0x4(%eax),%eax
 807b763:	83 f0 10             	xor    $0x10,%eax
 807b766:	89 c2                	mov    %eax,%edx
 807b768:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b76e:	89 50 04             	mov    %edx,0x4(%eax)
 807b771:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b777:	8b 10                	mov    (%eax),%edx
 807b779:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b77f:	8b 40 08             	mov    0x8(%eax),%eax
 807b782:	89 85 80 fb ff ff    	mov    %eax,-0x480(%ebp)
 807b788:	8b 85 80 fb ff ff    	mov    -0x480(%ebp),%eax
 807b78e:	0f b7 00             	movzwl (%eax),%eax
 807b791:	0f b7 c0             	movzwl %ax,%eax
 807b794:	c1 e0 10             	shl    $0x10,%eax
 807b797:	09 c2                	or     %eax,%edx
 807b799:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b79f:	89 10                	mov    %edx,(%eax)
 807b7a1:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b7a7:	8b 40 0c             	mov    0xc(%eax),%eax
 807b7aa:	8d 50 fe             	lea    -0x2(%eax),%edx
 807b7ad:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b7b3:	89 50 0c             	mov    %edx,0xc(%eax)
 807b7b6:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b7bc:	8b 40 08             	mov    0x8(%eax),%eax
 807b7bf:	8d 50 02             	lea    0x2(%eax),%edx
 807b7c2:	8b 85 78 fb ff ff    	mov    -0x488(%ebp),%eax
 807b7c8:	89 50 08             	mov    %edx,0x8(%eax)
 807b7cb:	8b 85 70 fb ff ff    	mov    -0x490(%ebp),%eax
 807b7d1:	89 85 84 fb ff ff    	mov    %eax,-0x47c(%ebp)
 807b7d7:	8b 85 84 fb ff ff    	mov    -0x47c(%ebp),%eax
 807b7dd:	8b 10                	mov    (%eax),%edx
 807b7df:	8b 85 84 fb ff ff    	mov    -0x47c(%ebp),%eax
 807b7e5:	8b 40 04             	mov    0x4(%eax),%eax
 807b7e8:	89 c1                	mov    %eax,%ecx
 807b7ea:	d3 ea                	shr    %cl,%edx
 807b7ec:	89 d0                	mov    %edx,%eax
 807b7ee:	89 c2                	mov    %eax,%edx
 807b7f0:	8b 85 74 fb ff ff    	mov    -0x48c(%ebp),%eax
 807b7f6:	89 85 88 fb ff ff    	mov    %eax,-0x478(%ebp)
 807b7fc:	8b 85 88 fb ff ff    	mov    -0x478(%ebp),%eax
 807b802:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807b809:	21 d0                	and    %edx,%eax
 807b80b:	c1 e0 02             	shl    $0x2,%eax
 807b80e:	01 85 60 fb ff ff    	add    %eax,-0x4a0(%ebp)
 807b814:	8b 85 60 fb ff ff    	mov    -0x4a0(%ebp),%eax
 807b81a:	0f b6 00             	movzbl (%eax),%eax
 807b81d:	0f b6 d0             	movzbl %al,%edx
 807b820:	8b 85 68 fb ff ff    	mov    -0x498(%ebp),%eax
 807b826:	89 10                	mov    %edx,(%eax)
 807b828:	8b 85 60 fb ff ff    	mov    -0x4a0(%ebp),%eax
 807b82e:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807b832:	0f b7 d0             	movzwl %ax,%edx
 807b835:	8b 85 6c fb ff ff    	mov    -0x494(%ebp),%eax
 807b83b:	89 10                	mov    %edx,(%eax)
 807b83d:	8b 85 1c fb ff ff    	mov    -0x4e4(%ebp),%eax
 807b843:	88 06                	mov    %al,(%esi)
 807b845:	e9 e2 02 00 00       	jmp    807bb2c <SafeProcessCommands+0x33a5>
 807b84a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807b850:	8b 80 fc 00 00 00    	mov    0xfc(%eax),%eax
 807b856:	89 85 8c fb ff ff    	mov    %eax,-0x474(%ebp)
 807b85c:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807b862:	89 85 90 fb ff ff    	mov    %eax,-0x470(%ebp)
 807b868:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807b86b:	89 85 94 fb ff ff    	mov    %eax,-0x46c(%ebp)
 807b871:	8b 85 90 fb ff ff    	mov    -0x470(%ebp),%eax
 807b877:	89 85 98 fb ff ff    	mov    %eax,-0x468(%ebp)
 807b87d:	c7 85 9c fb ff ff 0f 	movl   $0xf,-0x464(%ebp)
 807b884:	00 00 00 
 807b887:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807b88a:	89 85 a0 fb ff ff    	mov    %eax,-0x460(%ebp)
 807b890:	e9 a8 00 00 00       	jmp    807b93d <SafeProcessCommands+0x31b6>
 807b895:	8b 85 98 fb ff ff    	mov    -0x468(%ebp),%eax
 807b89b:	89 85 a4 fb ff ff    	mov    %eax,-0x45c(%ebp)
 807b8a1:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8a7:	8b 40 0c             	mov    0xc(%eax),%eax
 807b8aa:	85 c0                	test   %eax,%eax
 807b8ac:	75 07                	jne    807b8b5 <SafeProcessCommands+0x312e>
 807b8ae:	b8 00 00 00 00       	mov    $0x0,%eax
 807b8b3:	eb 7d                	jmp    807b932 <SafeProcessCommands+0x31ab>
 807b8b5:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8bb:	8b 00                	mov    (%eax),%eax
 807b8bd:	c1 e8 08             	shr    $0x8,%eax
 807b8c0:	89 c2                	mov    %eax,%edx
 807b8c2:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8c8:	89 10                	mov    %edx,(%eax)
 807b8ca:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8d0:	8b 10                	mov    (%eax),%edx
 807b8d2:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8d8:	8b 40 08             	mov    0x8(%eax),%eax
 807b8db:	0f b6 00             	movzbl (%eax),%eax
 807b8de:	0f b6 c0             	movzbl %al,%eax
 807b8e1:	c1 e0 18             	shl    $0x18,%eax
 807b8e4:	09 c2                	or     %eax,%edx
 807b8e6:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8ec:	89 10                	mov    %edx,(%eax)
 807b8ee:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b8f4:	8b 40 04             	mov    0x4(%eax),%eax
 807b8f7:	8d 50 f8             	lea    -0x8(%eax),%edx
 807b8fa:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b900:	89 50 04             	mov    %edx,0x4(%eax)
 807b903:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b909:	8b 40 0c             	mov    0xc(%eax),%eax
 807b90c:	8d 50 ff             	lea    -0x1(%eax),%edx
 807b90f:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b915:	89 50 0c             	mov    %edx,0xc(%eax)
 807b918:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b91e:	8b 40 08             	mov    0x8(%eax),%eax
 807b921:	8d 50 01             	lea    0x1(%eax),%edx
 807b924:	8b 85 a4 fb ff ff    	mov    -0x45c(%ebp),%eax
 807b92a:	89 50 08             	mov    %edx,0x8(%eax)
 807b92d:	b8 01 00 00 00       	mov    $0x1,%eax
 807b932:	85 c0                	test   %eax,%eax
 807b934:	75 07                	jne    807b93d <SafeProcessCommands+0x31b6>
 807b936:	b8 00 00 00 00       	mov    $0x0,%eax
 807b93b:	eb 77                	jmp    807b9b4 <SafeProcessCommands+0x322d>
 807b93d:	8b 85 98 fb ff ff    	mov    -0x468(%ebp),%eax
 807b943:	89 85 a8 fb ff ff    	mov    %eax,-0x458(%ebp)
 807b949:	8b 85 a8 fb ff ff    	mov    -0x458(%ebp),%eax
 807b94f:	8b 40 04             	mov    0x4(%eax),%eax
 807b952:	ba 20 00 00 00       	mov    $0x20,%edx
 807b957:	29 c2                	sub    %eax,%edx
 807b959:	89 d0                	mov    %edx,%eax
 807b95b:	39 85 9c fb ff ff    	cmp    %eax,-0x464(%ebp)
 807b961:	0f 87 2e ff ff ff    	ja     807b895 <SafeProcessCommands+0x310e>
 807b967:	8b 85 98 fb ff ff    	mov    -0x468(%ebp),%eax
 807b96d:	89 85 ac fb ff ff    	mov    %eax,-0x454(%ebp)
 807b973:	8b 85 ac fb ff ff    	mov    -0x454(%ebp),%eax
 807b979:	8b 10                	mov    (%eax),%edx
 807b97b:	8b 85 ac fb ff ff    	mov    -0x454(%ebp),%eax
 807b981:	8b 40 04             	mov    0x4(%eax),%eax
 807b984:	89 c1                	mov    %eax,%ecx
 807b986:	d3 ea                	shr    %cl,%edx
 807b988:	89 d0                	mov    %edx,%eax
 807b98a:	89 c2                	mov    %eax,%edx
 807b98c:	8b 85 9c fb ff ff    	mov    -0x464(%ebp),%eax
 807b992:	89 85 b0 fb ff ff    	mov    %eax,-0x450(%ebp)
 807b998:	8b 85 b0 fb ff ff    	mov    -0x450(%ebp),%eax
 807b99e:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807b9a5:	21 c2                	and    %eax,%edx
 807b9a7:	8b 85 a0 fb ff ff    	mov    -0x460(%ebp),%eax
 807b9ad:	89 10                	mov    %edx,(%eax)
 807b9af:	b8 01 00 00 00       	mov    $0x1,%eax
 807b9b4:	85 c0                	test   %eax,%eax
 807b9b6:	0f 95 c0             	setne  %al
 807b9b9:	0f b6 c0             	movzbl %al,%eax
 807b9bc:	85 c0                	test   %eax,%eax
 807b9be:	0f 84 1d 01 00 00    	je     807bae1 <SafeProcessCommands+0x335a>
 807b9c4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 807b9c7:	89 85 b4 fb ff ff    	mov    %eax,-0x44c(%ebp)
 807b9cd:	8b 85 8c fb ff ff    	mov    -0x474(%ebp),%eax
 807b9d3:	89 85 b8 fb ff ff    	mov    %eax,-0x448(%ebp)
 807b9d9:	8b 85 90 fb ff ff    	mov    -0x470(%ebp),%eax
 807b9df:	89 85 bc fb ff ff    	mov    %eax,-0x444(%ebp)
 807b9e5:	8b 85 b4 fb ff ff    	mov    -0x44c(%ebp),%eax
 807b9eb:	0f b6 c0             	movzbl %al,%eax
 807b9ee:	c1 e0 02             	shl    $0x2,%eax
 807b9f1:	01 85 b8 fb ff ff    	add    %eax,-0x448(%ebp)
 807b9f7:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 807b9fd:	0f b6 00             	movzbl (%eax),%eax
 807ba00:	3c 08                	cmp    $0x8,%al
 807ba02:	0f 86 83 00 00 00    	jbe    807ba8b <SafeProcessCommands+0x3304>
 807ba08:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 807ba0e:	0f b6 00             	movzbl (%eax),%eax
 807ba11:	0f b6 c0             	movzbl %al,%eax
 807ba14:	83 e8 08             	sub    $0x8,%eax
 807ba17:	89 85 c0 fb ff ff    	mov    %eax,-0x440(%ebp)
 807ba1d:	8b 85 bc fb ff ff    	mov    -0x444(%ebp),%eax
 807ba23:	89 85 c4 fb ff ff    	mov    %eax,-0x43c(%ebp)
 807ba29:	c7 85 c8 fb ff ff 08 	movl   $0x8,-0x438(%ebp)
 807ba30:	00 00 00 
 807ba33:	8b 85 c4 fb ff ff    	mov    -0x43c(%ebp),%eax
 807ba39:	8b 50 04             	mov    0x4(%eax),%edx
 807ba3c:	8b 85 c8 fb ff ff    	mov    -0x438(%ebp),%eax
 807ba42:	01 c2                	add    %eax,%edx
 807ba44:	8b 85 c4 fb ff ff    	mov    -0x43c(%ebp),%eax
 807ba4a:	89 50 04             	mov    %edx,0x4(%eax)
 807ba4d:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 807ba53:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807ba57:	0f b7 d0             	movzwl %ax,%edx
 807ba5a:	8b 85 b4 fb ff ff    	mov    -0x44c(%ebp),%eax
 807ba60:	c1 e8 08             	shr    $0x8,%eax
 807ba63:	89 c1                	mov    %eax,%ecx
 807ba65:	8b 85 c0 fb ff ff    	mov    -0x440(%ebp),%eax
 807ba6b:	89 85 cc fb ff ff    	mov    %eax,-0x434(%ebp)
 807ba71:	8b 85 cc fb ff ff    	mov    -0x434(%ebp),%eax
 807ba77:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807ba7e:	21 c8                	and    %ecx,%eax
 807ba80:	01 d0                	add    %edx,%eax
 807ba82:	c1 e0 02             	shl    $0x2,%eax
 807ba85:	01 85 b8 fb ff ff    	add    %eax,-0x448(%ebp)
 807ba8b:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 807ba91:	0f b6 00             	movzbl (%eax),%eax
 807ba94:	0f b6 c0             	movzbl %al,%eax
 807ba97:	8b 95 bc fb ff ff    	mov    -0x444(%ebp),%edx
 807ba9d:	89 95 d0 fb ff ff    	mov    %edx,-0x430(%ebp)
 807baa3:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
 807baa9:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 807baaf:	8b 50 04             	mov    0x4(%eax),%edx
 807bab2:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
 807bab8:	01 c2                	add    %eax,%edx
 807baba:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
 807bac0:	89 50 04             	mov    %edx,0x4(%eax)
 807bac3:	8b 85 b8 fb ff ff    	mov    -0x448(%ebp),%eax
 807bac9:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807bacd:	0f b7 c0             	movzwl %ax,%eax
 807bad0:	89 c2                	mov    %eax,%edx
 807bad2:	8b 85 94 fb ff ff    	mov    -0x46c(%ebp),%eax
 807bad8:	89 10                	mov    %edx,(%eax)
 807bada:	b8 01 00 00 00       	mov    $0x1,%eax
 807badf:	eb 22                	jmp    807bb03 <SafeProcessCommands+0x337c>
 807bae1:	8b 85 94 fb ff ff    	mov    -0x46c(%ebp),%eax
 807bae7:	89 44 24 08          	mov    %eax,0x8(%esp)
 807baeb:	8b 85 90 fb ff ff    	mov    -0x470(%ebp),%eax
 807baf1:	89 44 24 04          	mov    %eax,0x4(%esp)
 807baf5:	8b 85 8c fb ff ff    	mov    -0x474(%ebp),%eax
 807bafb:	89 04 24             	mov    %eax,(%esp)
 807bafe:	e8 c9 ce fe ff       	call   80689cc <SafeDecodeSymbol>
 807bb03:	85 c0                	test   %eax,%eax
 807bb05:	75 0f                	jne    807bb16 <SafeProcessCommands+0x338f>
 807bb07:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807bb0e:	00 00 00 
 807bb11:	e9 e3 2a 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807bb16:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bb1c:	8b 50 5c             	mov    0x5c(%eax),%edx
 807bb1f:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807bb25:	01 c2                	add    %eax,%edx
 807bb27:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807bb2a:	88 02                	mov    %al,(%edx)
 807bb2c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bb32:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 807bb38:	8d 50 ff             	lea    -0x1(%eax),%edx
 807bb3b:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bb41:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)
 807bb47:	83 85 04 f6 ff ff 01 	addl   $0x1,-0x9fc(%ebp)
 807bb4e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bb54:	8b 40 3c             	mov    0x3c(%eax),%eax
 807bb57:	39 85 04 f6 ff ff    	cmp    %eax,-0x9fc(%ebp)
 807bb5d:	0f 94 c0             	sete   %al
 807bb60:	0f b6 c0             	movzbl %al,%eax
 807bb63:	85 c0                	test   %eax,%eax
 807bb65:	74 20                	je     807bb87 <SafeProcessCommands+0x3400>
 807bb67:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bb6d:	c7 00 0d 00 00 00    	movl   $0xd,(%eax)
 807bb73:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807bb79:	83 e8 01             	sub    $0x1,%eax
 807bb7c:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807bb82:	e9 72 2a 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807bb87:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807bb8d:	83 e8 01             	sub    $0x1,%eax
 807bb90:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807bb96:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807bb9c:	85 c0                	test   %eax,%eax
 807bb9e:	0f 85 39 f6 ff ff    	jne    807b1dd <SafeProcessCommands+0x2a56>
 807bba4:	e9 1c 07 00 00       	jmp    807c2c5 <SafeProcessCommands+0x3b3e>
 807bba9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bbaf:	8b 50 5c             	mov    0x5c(%eax),%edx
 807bbb2:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807bbb8:	8d 48 ff             	lea    -0x1(%eax),%ecx
 807bbbb:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bbc1:	8b 40 40             	mov    0x40(%eax),%eax
 807bbc4:	21 c8                	and    %ecx,%eax
 807bbc6:	01 d0                	add    %edx,%eax
 807bbc8:	0f b6 00             	movzbl (%eax),%eax
 807bbcb:	88 85 e5 f5 ff ff    	mov    %al,-0xa1b(%ebp)
 807bbd1:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bbd7:	8b 50 5c             	mov    0x5c(%eax),%edx
 807bbda:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807bbe0:	8d 48 fe             	lea    -0x2(%eax),%ecx
 807bbe3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bbe9:	8b 40 40             	mov    0x40(%eax),%eax
 807bbec:	21 c8                	and    %ecx,%eax
 807bbee:	01 d0                	add    %edx,%eax
 807bbf0:	0f b6 00             	movzbl (%eax),%eax
 807bbf3:	88 85 e6 f5 ff ff    	mov    %al,-0xa1a(%ebp)
 807bbf9:	8b 85 fc f5 ff ff    	mov    -0xa04(%ebp),%eax
 807bbff:	89 85 d8 fb ff ff    	mov    %eax,-0x428(%ebp)
 807bc05:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807bc0b:	89 85 dc fb ff ff    	mov    %eax,-0x424(%ebp)
 807bc11:	c7 85 e0 fb ff ff 1c 	movl   $0x1c,-0x420(%ebp)
 807bc18:	00 00 00 
 807bc1b:	83 bd d8 fb ff ff 00 	cmpl   $0x0,-0x428(%ebp)
 807bc22:	74 07                	je     807bc2b <SafeProcessCommands+0x34a4>
 807bc24:	b8 01 00 00 00       	mov    $0x1,%eax
 807bc29:	eb 2d                	jmp    807bc58 <SafeProcessCommands+0x34d1>
 807bc2b:	8b 85 dc fb ff ff    	mov    -0x424(%ebp),%eax
 807bc31:	89 85 e4 fb ff ff    	mov    %eax,-0x41c(%ebp)
 807bc37:	8b 85 e0 fb ff ff    	mov    -0x420(%ebp),%eax
 807bc3d:	89 85 e8 fb ff ff    	mov    %eax,-0x418(%ebp)
 807bc43:	8b 85 e4 fb ff ff    	mov    -0x41c(%ebp),%eax
 807bc49:	8b 40 0c             	mov    0xc(%eax),%eax
 807bc4c:	39 85 e8 fb ff ff    	cmp    %eax,-0x418(%ebp)
 807bc52:	0f 96 c0             	setbe  %al
 807bc55:	0f b6 c0             	movzbl %al,%eax
 807bc58:	85 c0                	test   %eax,%eax
 807bc5a:	75 1b                	jne    807bc77 <SafeProcessCommands+0x34f0>
 807bc5c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bc62:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 807bc68:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807bc6f:	00 00 00 
 807bc72:	e9 82 29 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807bc77:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bc7d:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 807bc83:	85 c0                	test   %eax,%eax
 807bc85:	0f 94 c0             	sete   %al
 807bc88:	0f b6 c0             	movzbl %al,%eax
 807bc8b:	85 c0                	test   %eax,%eax
 807bc8d:	74 4c                	je     807bcdb <SafeProcessCommands+0x3554>
 807bc8f:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807bc96:	74 21                	je     807bcb9 <SafeProcessCommands+0x3532>
 807bc98:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bc9e:	89 04 24             	mov    %eax,(%esp)
 807bca1:	e8 e8 06 ff ff       	call   806c38e <SafeDecodeLiteralBlockSwitch>
 807bca6:	85 c0                	test   %eax,%eax
 807bca8:	75 1d                	jne    807bcc7 <SafeProcessCommands+0x3540>
 807bcaa:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807bcb1:	00 00 00 
 807bcb4:	e9 40 29 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807bcb9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bcbf:	89 04 24             	mov    %eax,(%esp)
 807bcc2:	e8 da f3 fe ff       	call   806b0a1 <DecodeLiteralBlockSwitch>
 807bcc7:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bccd:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax
 807bcd3:	85 c0                	test   %eax,%eax
 807bcd5:	0f 85 52 f3 ff ff    	jne    807b02d <SafeProcessCommands+0x28a6>
 807bcdb:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bce1:	8b 50 68             	mov    0x68(%eax),%edx
 807bce4:	0f b6 85 e5 f5 ff ff 	movzbl -0xa1b(%ebp),%eax
 807bceb:	01 d0                	add    %edx,%eax
 807bced:	0f b6 10             	movzbl (%eax),%edx
 807bcf0:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bcf6:	8b 40 68             	mov    0x68(%eax),%eax
 807bcf9:	0f b6 8d e6 f5 ff ff 	movzbl -0xa1a(%ebp),%ecx
 807bd00:	81 c1 00 01 00 00    	add    $0x100,%ecx
 807bd06:	01 c8                	add    %ecx,%eax
 807bd08:	0f b6 00             	movzbl (%eax),%eax
 807bd0b:	09 d0                	or     %edx,%eax
 807bd0d:	88 85 e7 f5 ff ff    	mov    %al,-0xa19(%ebp)
 807bd13:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bd19:	8b 50 74             	mov    0x74(%eax),%edx
 807bd1c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807bd22:	8b 48 6c             	mov    0x6c(%eax),%ecx
 807bd25:	0f b6 85 e7 f5 ff ff 	movzbl -0xa19(%ebp),%eax
 807bd2c:	01 c8                	add    %ecx,%eax
 807bd2e:	0f b6 00             	movzbl (%eax),%eax
 807bd31:	0f b6 c0             	movzbl %al,%eax
 807bd34:	c1 e0 02             	shl    $0x2,%eax
 807bd37:	01 d0                	add    %edx,%eax
 807bd39:	8b 00                	mov    (%eax),%eax
 807bd3b:	89 85 ec fb ff ff    	mov    %eax,-0x414(%ebp)
 807bd41:	0f b6 85 e5 f5 ff ff 	movzbl -0xa1b(%ebp),%eax
 807bd48:	88 85 e6 f5 ff ff    	mov    %al,-0xa1a(%ebp)
 807bd4e:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807bd55:	0f 85 09 02 00 00    	jne    807bf64 <SafeProcessCommands+0x37dd>
 807bd5b:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
 807bd61:	89 85 f0 fb ff ff    	mov    %eax,-0x410(%ebp)
 807bd67:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807bd6d:	89 85 f4 fb ff ff    	mov    %eax,-0x40c(%ebp)
 807bd73:	8b 85 f4 fb ff ff    	mov    -0x40c(%ebp),%eax
 807bd79:	89 85 f8 fb ff ff    	mov    %eax,-0x408(%ebp)
 807bd7f:	8b 85 f8 fb ff ff    	mov    -0x408(%ebp),%eax
 807bd85:	89 85 fc fb ff ff    	mov    %eax,-0x404(%ebp)
 807bd8b:	c7 85 00 fc ff ff 10 	movl   $0x10,-0x400(%ebp)
 807bd92:	00 00 00 
 807bd95:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bd9b:	8b 40 04             	mov    0x4(%eax),%eax
 807bd9e:	83 f8 0f             	cmp    $0xf,%eax
 807bda1:	0f 86 86 00 00 00    	jbe    807be2d <SafeProcessCommands+0x36a6>
 807bda7:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bdad:	8b 00                	mov    (%eax),%eax
 807bdaf:	c1 e8 10             	shr    $0x10,%eax
 807bdb2:	89 c2                	mov    %eax,%edx
 807bdb4:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bdba:	89 10                	mov    %edx,(%eax)
 807bdbc:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bdc2:	8b 40 04             	mov    0x4(%eax),%eax
 807bdc5:	83 f0 10             	xor    $0x10,%eax
 807bdc8:	89 c2                	mov    %eax,%edx
 807bdca:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bdd0:	89 50 04             	mov    %edx,0x4(%eax)
 807bdd3:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bdd9:	8b 10                	mov    (%eax),%edx
 807bddb:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807bde1:	8b 40 08             	mov    0x8(%eax),%eax
 807bde4:	89 85 04 fc ff ff    	mov    %eax,-0x3fc(%ebp)
 807bdea:	8b 85 04 fc ff ff    	mov    -0x3fc(%ebp),%eax
 807bdf0:	0f b7 00             	movzwl (%eax),%eax
 807bdf3:	0f b7 c0             	movzwl %ax,%eax
 807bdf6:	c1 e0 10             	shl    $0x10,%eax
 807bdf9:	09 c2                	or     %eax,%edx
 807bdfb:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807be01:	89 10                	mov    %edx,(%eax)
 807be03:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807be09:	8b 40 0c             	mov    0xc(%eax),%eax
 807be0c:	8d 50 fe             	lea    -0x2(%eax),%edx
 807be0f:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807be15:	89 50 0c             	mov    %edx,0xc(%eax)
 807be18:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807be1e:	8b 40 08             	mov    0x8(%eax),%eax
 807be21:	8d 50 02             	lea    0x2(%eax),%edx
 807be24:	8b 85 fc fb ff ff    	mov    -0x404(%ebp),%eax
 807be2a:	89 50 08             	mov    %edx,0x8(%eax)
 807be2d:	8b 85 f8 fb ff ff    	mov    -0x408(%ebp),%eax
 807be33:	89 85 08 fc ff ff    	mov    %eax,-0x3f8(%ebp)
 807be39:	8b 85 08 fc ff ff    	mov    -0x3f8(%ebp),%eax
 807be3f:	8b 10                	mov    (%eax),%edx
 807be41:	8b 85 08 fc ff ff    	mov    -0x3f8(%ebp),%eax
 807be47:	8b 40 04             	mov    0x4(%eax),%eax
 807be4a:	89 c1                	mov    %eax,%ecx
 807be4c:	d3 ea                	shr    %cl,%edx
 807be4e:	89 d0                	mov    %edx,%eax
 807be50:	89 85 0c fc ff ff    	mov    %eax,-0x3f4(%ebp)
 807be56:	8b 85 f0 fb ff ff    	mov    -0x410(%ebp),%eax
 807be5c:	89 85 10 fc ff ff    	mov    %eax,-0x3f0(%ebp)
 807be62:	8b 85 f4 fb ff ff    	mov    -0x40c(%ebp),%eax
 807be68:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%ebp)
 807be6e:	8b 85 0c fc ff ff    	mov    -0x3f4(%ebp),%eax
 807be74:	0f b6 c0             	movzbl %al,%eax
 807be77:	c1 e0 02             	shl    $0x2,%eax
 807be7a:	01 85 10 fc ff ff    	add    %eax,-0x3f0(%ebp)
 807be80:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807be86:	0f b6 00             	movzbl (%eax),%eax
 807be89:	3c 08                	cmp    $0x8,%al
 807be8b:	0f 86 83 00 00 00    	jbe    807bf14 <SafeProcessCommands+0x378d>
 807be91:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807be97:	0f b6 00             	movzbl (%eax),%eax
 807be9a:	0f b6 c0             	movzbl %al,%eax
 807be9d:	83 e8 08             	sub    $0x8,%eax
 807bea0:	89 85 18 fc ff ff    	mov    %eax,-0x3e8(%ebp)
 807bea6:	8b 85 14 fc ff ff    	mov    -0x3ec(%ebp),%eax
 807beac:	89 85 1c fc ff ff    	mov    %eax,-0x3e4(%ebp)
 807beb2:	c7 85 20 fc ff ff 08 	movl   $0x8,-0x3e0(%ebp)
 807beb9:	00 00 00 
 807bebc:	8b 85 1c fc ff ff    	mov    -0x3e4(%ebp),%eax
 807bec2:	8b 50 04             	mov    0x4(%eax),%edx
 807bec5:	8b 85 20 fc ff ff    	mov    -0x3e0(%ebp),%eax
 807becb:	01 c2                	add    %eax,%edx
 807becd:	8b 85 1c fc ff ff    	mov    -0x3e4(%ebp),%eax
 807bed3:	89 50 04             	mov    %edx,0x4(%eax)
 807bed6:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807bedc:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807bee0:	0f b7 d0             	movzwl %ax,%edx
 807bee3:	8b 85 0c fc ff ff    	mov    -0x3f4(%ebp),%eax
 807bee9:	c1 e8 08             	shr    $0x8,%eax
 807beec:	89 c1                	mov    %eax,%ecx
 807beee:	8b 85 18 fc ff ff    	mov    -0x3e8(%ebp),%eax
 807bef4:	89 85 24 fc ff ff    	mov    %eax,-0x3dc(%ebp)
 807befa:	8b 85 24 fc ff ff    	mov    -0x3dc(%ebp),%eax
 807bf00:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807bf07:	21 c8                	and    %ecx,%eax
 807bf09:	01 d0                	add    %edx,%eax
 807bf0b:	c1 e0 02             	shl    $0x2,%eax
 807bf0e:	01 85 10 fc ff ff    	add    %eax,-0x3f0(%ebp)
 807bf14:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807bf1a:	0f b6 00             	movzbl (%eax),%eax
 807bf1d:	0f b6 c0             	movzbl %al,%eax
 807bf20:	8b 95 14 fc ff ff    	mov    -0x3ec(%ebp),%edx
 807bf26:	89 95 28 fc ff ff    	mov    %edx,-0x3d8(%ebp)
 807bf2c:	89 85 2c fc ff ff    	mov    %eax,-0x3d4(%ebp)
 807bf32:	8b 85 28 fc ff ff    	mov    -0x3d8(%ebp),%eax
 807bf38:	8b 50 04             	mov    0x4(%eax),%edx
 807bf3b:	8b 85 2c fc ff ff    	mov    -0x3d4(%ebp),%eax
 807bf41:	01 c2                	add    %eax,%edx
 807bf43:	8b 85 28 fc ff ff    	mov    -0x3d8(%ebp),%eax
 807bf49:	89 50 04             	mov    %edx,0x4(%eax)
 807bf4c:	8b 85 10 fc ff ff    	mov    -0x3f0(%ebp),%eax
 807bf52:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807bf56:	0f b7 c0             	movzwl %ax,%eax
 807bf59:	88 85 e5 f5 ff ff    	mov    %al,-0xa1b(%ebp)
 807bf5f:	e9 cf 02 00 00       	jmp    807c233 <SafeProcessCommands+0x3aac>
 807bf64:	8b 85 ec fb ff ff    	mov    -0x414(%ebp),%eax
 807bf6a:	89 85 30 fc ff ff    	mov    %eax,-0x3d0(%ebp)
 807bf70:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807bf76:	89 85 34 fc ff ff    	mov    %eax,-0x3cc(%ebp)
 807bf7c:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807bf7f:	89 85 38 fc ff ff    	mov    %eax,-0x3c8(%ebp)
 807bf85:	8b 85 34 fc ff ff    	mov    -0x3cc(%ebp),%eax
 807bf8b:	89 85 3c fc ff ff    	mov    %eax,-0x3c4(%ebp)
 807bf91:	c7 85 40 fc ff ff 0f 	movl   $0xf,-0x3c0(%ebp)
 807bf98:	00 00 00 
 807bf9b:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807bf9e:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%ebp)
 807bfa4:	e9 a8 00 00 00       	jmp    807c051 <SafeProcessCommands+0x38ca>
 807bfa9:	8b 85 3c fc ff ff    	mov    -0x3c4(%ebp),%eax
 807bfaf:	89 85 48 fc ff ff    	mov    %eax,-0x3b8(%ebp)
 807bfb5:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807bfbb:	8b 40 0c             	mov    0xc(%eax),%eax
 807bfbe:	85 c0                	test   %eax,%eax
 807bfc0:	75 07                	jne    807bfc9 <SafeProcessCommands+0x3842>
 807bfc2:	b8 00 00 00 00       	mov    $0x0,%eax
 807bfc7:	eb 7d                	jmp    807c046 <SafeProcessCommands+0x38bf>
 807bfc9:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807bfcf:	8b 00                	mov    (%eax),%eax
 807bfd1:	c1 e8 08             	shr    $0x8,%eax
 807bfd4:	89 c2                	mov    %eax,%edx
 807bfd6:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807bfdc:	89 10                	mov    %edx,(%eax)
 807bfde:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807bfe4:	8b 10                	mov    (%eax),%edx
 807bfe6:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807bfec:	8b 40 08             	mov    0x8(%eax),%eax
 807bfef:	0f b6 00             	movzbl (%eax),%eax
 807bff2:	0f b6 c0             	movzbl %al,%eax
 807bff5:	c1 e0 18             	shl    $0x18,%eax
 807bff8:	09 c2                	or     %eax,%edx
 807bffa:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c000:	89 10                	mov    %edx,(%eax)
 807c002:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c008:	8b 40 04             	mov    0x4(%eax),%eax
 807c00b:	8d 50 f8             	lea    -0x8(%eax),%edx
 807c00e:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c014:	89 50 04             	mov    %edx,0x4(%eax)
 807c017:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c01d:	8b 40 0c             	mov    0xc(%eax),%eax
 807c020:	8d 50 ff             	lea    -0x1(%eax),%edx
 807c023:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c029:	89 50 0c             	mov    %edx,0xc(%eax)
 807c02c:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c032:	8b 40 08             	mov    0x8(%eax),%eax
 807c035:	8d 50 01             	lea    0x1(%eax),%edx
 807c038:	8b 85 48 fc ff ff    	mov    -0x3b8(%ebp),%eax
 807c03e:	89 50 08             	mov    %edx,0x8(%eax)
 807c041:	b8 01 00 00 00       	mov    $0x1,%eax
 807c046:	85 c0                	test   %eax,%eax
 807c048:	75 07                	jne    807c051 <SafeProcessCommands+0x38ca>
 807c04a:	b8 00 00 00 00       	mov    $0x0,%eax
 807c04f:	eb 77                	jmp    807c0c8 <SafeProcessCommands+0x3941>
 807c051:	8b 85 3c fc ff ff    	mov    -0x3c4(%ebp),%eax
 807c057:	89 85 4c fc ff ff    	mov    %eax,-0x3b4(%ebp)
 807c05d:	8b 85 4c fc ff ff    	mov    -0x3b4(%ebp),%eax
 807c063:	8b 40 04             	mov    0x4(%eax),%eax
 807c066:	ba 20 00 00 00       	mov    $0x20,%edx
 807c06b:	29 c2                	sub    %eax,%edx
 807c06d:	89 d0                	mov    %edx,%eax
 807c06f:	39 85 40 fc ff ff    	cmp    %eax,-0x3c0(%ebp)
 807c075:	0f 87 2e ff ff ff    	ja     807bfa9 <SafeProcessCommands+0x3822>
 807c07b:	8b 85 3c fc ff ff    	mov    -0x3c4(%ebp),%eax
 807c081:	89 85 50 fc ff ff    	mov    %eax,-0x3b0(%ebp)
 807c087:	8b 85 50 fc ff ff    	mov    -0x3b0(%ebp),%eax
 807c08d:	8b 10                	mov    (%eax),%edx
 807c08f:	8b 85 50 fc ff ff    	mov    -0x3b0(%ebp),%eax
 807c095:	8b 40 04             	mov    0x4(%eax),%eax
 807c098:	89 c1                	mov    %eax,%ecx
 807c09a:	d3 ea                	shr    %cl,%edx
 807c09c:	89 d0                	mov    %edx,%eax
 807c09e:	89 c2                	mov    %eax,%edx
 807c0a0:	8b 85 40 fc ff ff    	mov    -0x3c0(%ebp),%eax
 807c0a6:	89 85 54 fc ff ff    	mov    %eax,-0x3ac(%ebp)
 807c0ac:	8b 85 54 fc ff ff    	mov    -0x3ac(%ebp),%eax
 807c0b2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807c0b9:	21 c2                	and    %eax,%edx
 807c0bb:	8b 85 44 fc ff ff    	mov    -0x3bc(%ebp),%eax
 807c0c1:	89 10                	mov    %edx,(%eax)
 807c0c3:	b8 01 00 00 00       	mov    $0x1,%eax
 807c0c8:	85 c0                	test   %eax,%eax
 807c0ca:	0f 95 c0             	setne  %al
 807c0cd:	0f b6 c0             	movzbl %al,%eax
 807c0d0:	85 c0                	test   %eax,%eax
 807c0d2:	0f 84 1d 01 00 00    	je     807c1f5 <SafeProcessCommands+0x3a6e>
 807c0d8:	8b 45 e8             	mov    -0x18(%ebp),%eax
 807c0db:	89 85 58 fc ff ff    	mov    %eax,-0x3a8(%ebp)
 807c0e1:	8b 85 30 fc ff ff    	mov    -0x3d0(%ebp),%eax
 807c0e7:	89 85 5c fc ff ff    	mov    %eax,-0x3a4(%ebp)
 807c0ed:	8b 85 34 fc ff ff    	mov    -0x3cc(%ebp),%eax
 807c0f3:	89 85 60 fc ff ff    	mov    %eax,-0x3a0(%ebp)
 807c0f9:	8b 85 58 fc ff ff    	mov    -0x3a8(%ebp),%eax
 807c0ff:	0f b6 c0             	movzbl %al,%eax
 807c102:	c1 e0 02             	shl    $0x2,%eax
 807c105:	01 85 5c fc ff ff    	add    %eax,-0x3a4(%ebp)
 807c10b:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 807c111:	0f b6 00             	movzbl (%eax),%eax
 807c114:	3c 08                	cmp    $0x8,%al
 807c116:	0f 86 83 00 00 00    	jbe    807c19f <SafeProcessCommands+0x3a18>
 807c11c:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 807c122:	0f b6 00             	movzbl (%eax),%eax
 807c125:	0f b6 c0             	movzbl %al,%eax
 807c128:	83 e8 08             	sub    $0x8,%eax
 807c12b:	89 85 64 fc ff ff    	mov    %eax,-0x39c(%ebp)
 807c131:	8b 85 60 fc ff ff    	mov    -0x3a0(%ebp),%eax
 807c137:	89 85 68 fc ff ff    	mov    %eax,-0x398(%ebp)
 807c13d:	c7 85 6c fc ff ff 08 	movl   $0x8,-0x394(%ebp)
 807c144:	00 00 00 
 807c147:	8b 85 68 fc ff ff    	mov    -0x398(%ebp),%eax
 807c14d:	8b 50 04             	mov    0x4(%eax),%edx
 807c150:	8b 85 6c fc ff ff    	mov    -0x394(%ebp),%eax
 807c156:	01 c2                	add    %eax,%edx
 807c158:	8b 85 68 fc ff ff    	mov    -0x398(%ebp),%eax
 807c15e:	89 50 04             	mov    %edx,0x4(%eax)
 807c161:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 807c167:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807c16b:	0f b7 d0             	movzwl %ax,%edx
 807c16e:	8b 85 58 fc ff ff    	mov    -0x3a8(%ebp),%eax
 807c174:	c1 e8 08             	shr    $0x8,%eax
 807c177:	89 c1                	mov    %eax,%ecx
 807c179:	8b 85 64 fc ff ff    	mov    -0x39c(%ebp),%eax
 807c17f:	89 85 70 fc ff ff    	mov    %eax,-0x390(%ebp)
 807c185:	8b 85 70 fc ff ff    	mov    -0x390(%ebp),%eax
 807c18b:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807c192:	21 c8                	and    %ecx,%eax
 807c194:	01 d0                	add    %edx,%eax
 807c196:	c1 e0 02             	shl    $0x2,%eax
 807c199:	01 85 5c fc ff ff    	add    %eax,-0x3a4(%ebp)
 807c19f:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 807c1a5:	0f b6 00             	movzbl (%eax),%eax
 807c1a8:	0f b6 c0             	movzbl %al,%eax
 807c1ab:	8b 95 60 fc ff ff    	mov    -0x3a0(%ebp),%edx
 807c1b1:	89 95 74 fc ff ff    	mov    %edx,-0x38c(%ebp)
 807c1b7:	89 85 78 fc ff ff    	mov    %eax,-0x388(%ebp)
 807c1bd:	8b 85 74 fc ff ff    	mov    -0x38c(%ebp),%eax
 807c1c3:	8b 50 04             	mov    0x4(%eax),%edx
 807c1c6:	8b 85 78 fc ff ff    	mov    -0x388(%ebp),%eax
 807c1cc:	01 c2                	add    %eax,%edx
 807c1ce:	8b 85 74 fc ff ff    	mov    -0x38c(%ebp),%eax
 807c1d4:	89 50 04             	mov    %edx,0x4(%eax)
 807c1d7:	8b 85 5c fc ff ff    	mov    -0x3a4(%ebp),%eax
 807c1dd:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807c1e1:	0f b7 c0             	movzwl %ax,%eax
 807c1e4:	89 c2                	mov    %eax,%edx
 807c1e6:	8b 85 38 fc ff ff    	mov    -0x3c8(%ebp),%eax
 807c1ec:	89 10                	mov    %edx,(%eax)
 807c1ee:	b8 01 00 00 00       	mov    $0x1,%eax
 807c1f3:	eb 22                	jmp    807c217 <SafeProcessCommands+0x3a90>
 807c1f5:	8b 85 38 fc ff ff    	mov    -0x3c8(%ebp),%eax
 807c1fb:	89 44 24 08          	mov    %eax,0x8(%esp)
 807c1ff:	8b 85 34 fc ff ff    	mov    -0x3cc(%ebp),%eax
 807c205:	89 44 24 04          	mov    %eax,0x4(%esp)
 807c209:	8b 85 30 fc ff ff    	mov    -0x3d0(%ebp),%eax
 807c20f:	89 04 24             	mov    %eax,(%esp)
 807c212:	e8 b5 c7 fe ff       	call   80689cc <SafeDecodeSymbol>
 807c217:	85 c0                	test   %eax,%eax
 807c219:	75 0f                	jne    807c22a <SafeProcessCommands+0x3aa3>
 807c21b:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807c222:	00 00 00 
 807c225:	e9 cf 23 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807c22a:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807c22d:	88 85 e5 f5 ff ff    	mov    %al,-0xa1b(%ebp)
 807c233:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c239:	8b 50 5c             	mov    0x5c(%eax),%edx
 807c23c:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807c242:	01 c2                	add    %eax,%edx
 807c244:	0f b6 85 e5 f5 ff ff 	movzbl -0xa1b(%ebp),%eax
 807c24b:	88 02                	mov    %al,(%edx)
 807c24d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c253:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
 807c259:	8d 50 ff             	lea    -0x1(%eax),%edx
 807c25c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c262:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)
 807c268:	83 85 04 f6 ff ff 01 	addl   $0x1,-0x9fc(%ebp)
 807c26f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c275:	8b 40 3c             	mov    0x3c(%eax),%eax
 807c278:	39 85 04 f6 ff ff    	cmp    %eax,-0x9fc(%ebp)
 807c27e:	0f 94 c0             	sete   %al
 807c281:	0f b6 c0             	movzbl %al,%eax
 807c284:	85 c0                	test   %eax,%eax
 807c286:	74 20                	je     807c2a8 <SafeProcessCommands+0x3b21>
 807c288:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c28e:	c7 00 0d 00 00 00    	movl   $0xd,(%eax)
 807c294:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807c29a:	83 e8 01             	sub    $0x1,%eax
 807c29d:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807c2a3:	e9 51 23 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807c2a8:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807c2ae:	83 e8 01             	sub    $0x1,%eax
 807c2b1:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807c2b7:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807c2bd:	85 c0                	test   %eax,%eax
 807c2bf:	0f 85 34 f9 ff ff    	jne    807bbf9 <SafeProcessCommands+0x3472>
 807c2c5:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c2cb:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807c2d1:	85 c0                	test   %eax,%eax
 807c2d3:	0f 9e c0             	setle  %al
 807c2d6:	0f b6 c0             	movzbl %al,%eax
 807c2d9:	85 c0                	test   %eax,%eax
 807c2db:	74 11                	je     807c2ee <SafeProcessCommands+0x3b67>
 807c2dd:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c2e3:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 807c2e9:	e9 0b 23 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807c2ee:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807c2f5:	74 0c                	je     807c303 <SafeProcessCommands+0x3b7c>
 807c2f7:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c2fd:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
 807c303:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c309:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807c30f:	85 c0                	test   %eax,%eax
 807c311:	78 61                	js     807c374 <SafeProcessCommands+0x3bed>
 807c313:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c319:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807c31f:	85 c0                	test   %eax,%eax
 807c321:	0f 94 c0             	sete   %al
 807c324:	0f b6 d0             	movzbl %al,%edx
 807c327:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c32d:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 807c333:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c339:	8b 40 44             	mov    0x44(%eax),%eax
 807c33c:	8d 50 ff             	lea    -0x1(%eax),%edx
 807c33f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c345:	89 50 44             	mov    %edx,0x44(%eax)
 807c348:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c34e:	8b 40 44             	mov    0x44(%eax),%eax
 807c351:	83 e0 03             	and    $0x3,%eax
 807c354:	89 c2                	mov    %eax,%edx
 807c356:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c35c:	83 c2 10             	add    $0x10,%edx
 807c35f:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 807c363:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c369:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807c36f:	e9 5f 1d 00 00       	jmp    807e0d3 <SafeProcessCommands+0x594c>
 807c374:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c37a:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 807c380:	85 c0                	test   %eax,%eax
 807c382:	0f 94 c0             	sete   %al
 807c385:	0f b6 c0             	movzbl %al,%eax
 807c388:	85 c0                	test   %eax,%eax
 807c38a:	74 38                	je     807c3c4 <SafeProcessCommands+0x3c3d>
 807c38c:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807c393:	74 21                	je     807c3b6 <SafeProcessCommands+0x3c2f>
 807c395:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c39b:	89 04 24             	mov    %eax,(%esp)
 807c39e:	e8 7f 49 ff ff       	call   8070d22 <SafeDecodeDistanceBlockSwitch>
 807c3a3:	85 c0                	test   %eax,%eax
 807c3a5:	75 1d                	jne    807c3c4 <SafeProcessCommands+0x3c3d>
 807c3a7:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807c3ae:	00 00 00 
 807c3b1:	e9 43 22 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807c3b6:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c3bc:	89 04 24             	mov    %eax,(%esp)
 807c3bf:	e8 16 37 ff ff       	call   806fada <DecodeDistanceBlockSwitch>
 807c3c4:	83 bd fc f5 ff ff 00 	cmpl   $0x0,-0xa04(%ebp)
 807c3cb:	0f 84 a7 0e 00 00    	je     807d278 <SafeProcessCommands+0x4af1>
 807c3d1:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807c3d7:	89 85 7c fc ff ff    	mov    %eax,-0x384(%ebp)
 807c3dd:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807c3e3:	89 85 80 fc ff ff    	mov    %eax,-0x380(%ebp)
 807c3e9:	c7 85 84 fc ff ff 01 	movl   $0x1,-0x37c(%ebp)
 807c3f0:	00 00 00 
 807c3f3:	8b 85 7c fc ff ff    	mov    -0x384(%ebp),%eax
 807c3f9:	89 85 88 fc ff ff    	mov    %eax,-0x378(%ebp)
 807c3ff:	8b 85 80 fc ff ff    	mov    -0x380(%ebp),%eax
 807c405:	89 85 8c fc ff ff    	mov    %eax,-0x374(%ebp)
 807c40b:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c411:	05 6c 02 00 00       	add    $0x26c,%eax
 807c416:	89 85 90 fc ff ff    	mov    %eax,-0x370(%ebp)
 807c41c:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c422:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx
 807c428:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c42e:	0f b6 80 00 01 00 00 	movzbl 0x100(%eax),%eax
 807c435:	0f b6 c0             	movzbl %al,%eax
 807c438:	c1 e0 02             	shl    $0x2,%eax
 807c43b:	01 d0                	add    %edx,%eax
 807c43d:	8b 00                	mov    (%eax),%eax
 807c43f:	89 85 94 fc ff ff    	mov    %eax,-0x36c(%ebp)
 807c445:	83 bd 84 fc ff ff 00 	cmpl   $0x0,-0x37c(%ebp)
 807c44c:	0f 85 09 02 00 00    	jne    807c65b <SafeProcessCommands+0x3ed4>
 807c452:	8b 85 94 fc ff ff    	mov    -0x36c(%ebp),%eax
 807c458:	89 85 98 fc ff ff    	mov    %eax,-0x368(%ebp)
 807c45e:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 807c464:	89 85 9c fc ff ff    	mov    %eax,-0x364(%ebp)
 807c46a:	8b 85 9c fc ff ff    	mov    -0x364(%ebp),%eax
 807c470:	89 85 a0 fc ff ff    	mov    %eax,-0x360(%ebp)
 807c476:	8b 85 a0 fc ff ff    	mov    -0x360(%ebp),%eax
 807c47c:	89 85 a4 fc ff ff    	mov    %eax,-0x35c(%ebp)
 807c482:	c7 85 a8 fc ff ff 10 	movl   $0x10,-0x358(%ebp)
 807c489:	00 00 00 
 807c48c:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c492:	8b 40 04             	mov    0x4(%eax),%eax
 807c495:	83 f8 0f             	cmp    $0xf,%eax
 807c498:	0f 86 86 00 00 00    	jbe    807c524 <SafeProcessCommands+0x3d9d>
 807c49e:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4a4:	8b 00                	mov    (%eax),%eax
 807c4a6:	c1 e8 10             	shr    $0x10,%eax
 807c4a9:	89 c2                	mov    %eax,%edx
 807c4ab:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4b1:	89 10                	mov    %edx,(%eax)
 807c4b3:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4b9:	8b 40 04             	mov    0x4(%eax),%eax
 807c4bc:	83 f0 10             	xor    $0x10,%eax
 807c4bf:	89 c2                	mov    %eax,%edx
 807c4c1:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4c7:	89 50 04             	mov    %edx,0x4(%eax)
 807c4ca:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4d0:	8b 10                	mov    (%eax),%edx
 807c4d2:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4d8:	8b 40 08             	mov    0x8(%eax),%eax
 807c4db:	89 85 ac fc ff ff    	mov    %eax,-0x354(%ebp)
 807c4e1:	8b 85 ac fc ff ff    	mov    -0x354(%ebp),%eax
 807c4e7:	0f b7 00             	movzwl (%eax),%eax
 807c4ea:	0f b7 c0             	movzwl %ax,%eax
 807c4ed:	c1 e0 10             	shl    $0x10,%eax
 807c4f0:	09 c2                	or     %eax,%edx
 807c4f2:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c4f8:	89 10                	mov    %edx,(%eax)
 807c4fa:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c500:	8b 40 0c             	mov    0xc(%eax),%eax
 807c503:	8d 50 fe             	lea    -0x2(%eax),%edx
 807c506:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c50c:	89 50 0c             	mov    %edx,0xc(%eax)
 807c50f:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c515:	8b 40 08             	mov    0x8(%eax),%eax
 807c518:	8d 50 02             	lea    0x2(%eax),%edx
 807c51b:	8b 85 a4 fc ff ff    	mov    -0x35c(%ebp),%eax
 807c521:	89 50 08             	mov    %edx,0x8(%eax)
 807c524:	8b 85 a0 fc ff ff    	mov    -0x360(%ebp),%eax
 807c52a:	89 85 b0 fc ff ff    	mov    %eax,-0x350(%ebp)
 807c530:	8b 85 b0 fc ff ff    	mov    -0x350(%ebp),%eax
 807c536:	8b 10                	mov    (%eax),%edx
 807c538:	8b 85 b0 fc ff ff    	mov    -0x350(%ebp),%eax
 807c53e:	8b 40 04             	mov    0x4(%eax),%eax
 807c541:	89 c1                	mov    %eax,%ecx
 807c543:	d3 ea                	shr    %cl,%edx
 807c545:	89 d0                	mov    %edx,%eax
 807c547:	89 85 b4 fc ff ff    	mov    %eax,-0x34c(%ebp)
 807c54d:	8b 85 98 fc ff ff    	mov    -0x368(%ebp),%eax
 807c553:	89 85 b8 fc ff ff    	mov    %eax,-0x348(%ebp)
 807c559:	8b 85 9c fc ff ff    	mov    -0x364(%ebp),%eax
 807c55f:	89 85 bc fc ff ff    	mov    %eax,-0x344(%ebp)
 807c565:	8b 85 b4 fc ff ff    	mov    -0x34c(%ebp),%eax
 807c56b:	0f b6 c0             	movzbl %al,%eax
 807c56e:	c1 e0 02             	shl    $0x2,%eax
 807c571:	01 85 b8 fc ff ff    	add    %eax,-0x348(%ebp)
 807c577:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 807c57d:	0f b6 00             	movzbl (%eax),%eax
 807c580:	3c 08                	cmp    $0x8,%al
 807c582:	0f 86 83 00 00 00    	jbe    807c60b <SafeProcessCommands+0x3e84>
 807c588:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 807c58e:	0f b6 00             	movzbl (%eax),%eax
 807c591:	0f b6 c0             	movzbl %al,%eax
 807c594:	83 e8 08             	sub    $0x8,%eax
 807c597:	89 85 c0 fc ff ff    	mov    %eax,-0x340(%ebp)
 807c59d:	8b 85 bc fc ff ff    	mov    -0x344(%ebp),%eax
 807c5a3:	89 85 c4 fc ff ff    	mov    %eax,-0x33c(%ebp)
 807c5a9:	c7 85 c8 fc ff ff 08 	movl   $0x8,-0x338(%ebp)
 807c5b0:	00 00 00 
 807c5b3:	8b 85 c4 fc ff ff    	mov    -0x33c(%ebp),%eax
 807c5b9:	8b 50 04             	mov    0x4(%eax),%edx
 807c5bc:	8b 85 c8 fc ff ff    	mov    -0x338(%ebp),%eax
 807c5c2:	01 c2                	add    %eax,%edx
 807c5c4:	8b 85 c4 fc ff ff    	mov    -0x33c(%ebp),%eax
 807c5ca:	89 50 04             	mov    %edx,0x4(%eax)
 807c5cd:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 807c5d3:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807c5d7:	0f b7 d0             	movzwl %ax,%edx
 807c5da:	8b 85 b4 fc ff ff    	mov    -0x34c(%ebp),%eax
 807c5e0:	c1 e8 08             	shr    $0x8,%eax
 807c5e3:	89 c1                	mov    %eax,%ecx
 807c5e5:	8b 85 c0 fc ff ff    	mov    -0x340(%ebp),%eax
 807c5eb:	89 85 cc fc ff ff    	mov    %eax,-0x334(%ebp)
 807c5f1:	8b 85 cc fc ff ff    	mov    -0x334(%ebp),%eax
 807c5f7:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807c5fe:	21 c8                	and    %ecx,%eax
 807c600:	01 d0                	add    %edx,%eax
 807c602:	c1 e0 02             	shl    $0x2,%eax
 807c605:	01 85 b8 fc ff ff    	add    %eax,-0x348(%ebp)
 807c60b:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 807c611:	0f b6 00             	movzbl (%eax),%eax
 807c614:	0f b6 c0             	movzbl %al,%eax
 807c617:	8b 95 bc fc ff ff    	mov    -0x344(%ebp),%edx
 807c61d:	89 95 d0 fc ff ff    	mov    %edx,-0x330(%ebp)
 807c623:	89 85 d4 fc ff ff    	mov    %eax,-0x32c(%ebp)
 807c629:	8b 85 d0 fc ff ff    	mov    -0x330(%ebp),%eax
 807c62f:	8b 50 04             	mov    0x4(%eax),%edx
 807c632:	8b 85 d4 fc ff ff    	mov    -0x32c(%ebp),%eax
 807c638:	01 c2                	add    %eax,%edx
 807c63a:	8b 85 d0 fc ff ff    	mov    -0x330(%ebp),%eax
 807c640:	89 50 04             	mov    %edx,0x4(%eax)
 807c643:	8b 85 b8 fc ff ff    	mov    -0x348(%ebp),%eax
 807c649:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807c64d:	0f b7 c0             	movzwl %ax,%eax
 807c650:	89 85 f4 f5 ff ff    	mov    %eax,-0xa0c(%ebp)
 807c656:	e9 1f 03 00 00       	jmp    807c97a <SafeProcessCommands+0x41f3>
 807c65b:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 807c661:	89 85 d8 fc ff ff    	mov    %eax,-0x328(%ebp)
 807c667:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807c66a:	89 85 dc fc ff ff    	mov    %eax,-0x324(%ebp)
 807c670:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 807c676:	8b 10                	mov    (%eax),%edx
 807c678:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 807c67e:	89 10                	mov    %edx,(%eax)
 807c680:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 807c686:	8b 50 04             	mov    0x4(%eax),%edx
 807c689:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 807c68f:	89 50 04             	mov    %edx,0x4(%eax)
 807c692:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 807c698:	8b 50 08             	mov    0x8(%eax),%edx
 807c69b:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 807c6a1:	89 50 08             	mov    %edx,0x8(%eax)
 807c6a4:	8b 85 d8 fc ff ff    	mov    -0x328(%ebp),%eax
 807c6aa:	8b 50 0c             	mov    0xc(%eax),%edx
 807c6ad:	8b 85 dc fc ff ff    	mov    -0x324(%ebp),%eax
 807c6b3:	89 50 0c             	mov    %edx,0xc(%eax)
 807c6b6:	8b 85 94 fc ff ff    	mov    -0x36c(%ebp),%eax
 807c6bc:	89 85 e0 fc ff ff    	mov    %eax,-0x320(%ebp)
 807c6c2:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 807c6c8:	89 85 e4 fc ff ff    	mov    %eax,-0x31c(%ebp)
 807c6ce:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807c6d4:	89 85 e8 fc ff ff    	mov    %eax,-0x318(%ebp)
 807c6da:	8b 85 e4 fc ff ff    	mov    -0x31c(%ebp),%eax
 807c6e0:	89 85 ec fc ff ff    	mov    %eax,-0x314(%ebp)
 807c6e6:	c7 85 f0 fc ff ff 0f 	movl   $0xf,-0x310(%ebp)
 807c6ed:	00 00 00 
 807c6f0:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807c6f3:	89 85 f4 fc ff ff    	mov    %eax,-0x30c(%ebp)
 807c6f9:	e9 a8 00 00 00       	jmp    807c7a6 <SafeProcessCommands+0x401f>
 807c6fe:	8b 85 ec fc ff ff    	mov    -0x314(%ebp),%eax
 807c704:	89 85 f8 fc ff ff    	mov    %eax,-0x308(%ebp)
 807c70a:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c710:	8b 40 0c             	mov    0xc(%eax),%eax
 807c713:	85 c0                	test   %eax,%eax
 807c715:	75 07                	jne    807c71e <SafeProcessCommands+0x3f97>
 807c717:	b8 00 00 00 00       	mov    $0x0,%eax
 807c71c:	eb 7d                	jmp    807c79b <SafeProcessCommands+0x4014>
 807c71e:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c724:	8b 00                	mov    (%eax),%eax
 807c726:	c1 e8 08             	shr    $0x8,%eax
 807c729:	89 c2                	mov    %eax,%edx
 807c72b:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c731:	89 10                	mov    %edx,(%eax)
 807c733:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c739:	8b 10                	mov    (%eax),%edx
 807c73b:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c741:	8b 40 08             	mov    0x8(%eax),%eax
 807c744:	0f b6 00             	movzbl (%eax),%eax
 807c747:	0f b6 c0             	movzbl %al,%eax
 807c74a:	c1 e0 18             	shl    $0x18,%eax
 807c74d:	09 c2                	or     %eax,%edx
 807c74f:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c755:	89 10                	mov    %edx,(%eax)
 807c757:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c75d:	8b 40 04             	mov    0x4(%eax),%eax
 807c760:	8d 50 f8             	lea    -0x8(%eax),%edx
 807c763:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c769:	89 50 04             	mov    %edx,0x4(%eax)
 807c76c:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c772:	8b 40 0c             	mov    0xc(%eax),%eax
 807c775:	8d 50 ff             	lea    -0x1(%eax),%edx
 807c778:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c77e:	89 50 0c             	mov    %edx,0xc(%eax)
 807c781:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c787:	8b 40 08             	mov    0x8(%eax),%eax
 807c78a:	8d 50 01             	lea    0x1(%eax),%edx
 807c78d:	8b 85 f8 fc ff ff    	mov    -0x308(%ebp),%eax
 807c793:	89 50 08             	mov    %edx,0x8(%eax)
 807c796:	b8 01 00 00 00       	mov    $0x1,%eax
 807c79b:	85 c0                	test   %eax,%eax
 807c79d:	75 07                	jne    807c7a6 <SafeProcessCommands+0x401f>
 807c79f:	b8 00 00 00 00       	mov    $0x0,%eax
 807c7a4:	eb 77                	jmp    807c81d <SafeProcessCommands+0x4096>
 807c7a6:	8b 85 ec fc ff ff    	mov    -0x314(%ebp),%eax
 807c7ac:	89 85 fc fc ff ff    	mov    %eax,-0x304(%ebp)
 807c7b2:	8b 85 fc fc ff ff    	mov    -0x304(%ebp),%eax
 807c7b8:	8b 40 04             	mov    0x4(%eax),%eax
 807c7bb:	ba 20 00 00 00       	mov    $0x20,%edx
 807c7c0:	29 c2                	sub    %eax,%edx
 807c7c2:	89 d0                	mov    %edx,%eax
 807c7c4:	39 85 f0 fc ff ff    	cmp    %eax,-0x310(%ebp)
 807c7ca:	0f 87 2e ff ff ff    	ja     807c6fe <SafeProcessCommands+0x3f77>
 807c7d0:	8b 85 ec fc ff ff    	mov    -0x314(%ebp),%eax
 807c7d6:	89 85 00 fd ff ff    	mov    %eax,-0x300(%ebp)
 807c7dc:	8b 85 00 fd ff ff    	mov    -0x300(%ebp),%eax
 807c7e2:	8b 10                	mov    (%eax),%edx
 807c7e4:	8b 85 00 fd ff ff    	mov    -0x300(%ebp),%eax
 807c7ea:	8b 40 04             	mov    0x4(%eax),%eax
 807c7ed:	89 c1                	mov    %eax,%ecx
 807c7ef:	d3 ea                	shr    %cl,%edx
 807c7f1:	89 d0                	mov    %edx,%eax
 807c7f3:	89 c2                	mov    %eax,%edx
 807c7f5:	8b 85 f0 fc ff ff    	mov    -0x310(%ebp),%eax
 807c7fb:	89 85 04 fd ff ff    	mov    %eax,-0x2fc(%ebp)
 807c801:	8b 85 04 fd ff ff    	mov    -0x2fc(%ebp),%eax
 807c807:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807c80e:	21 c2                	and    %eax,%edx
 807c810:	8b 85 f4 fc ff ff    	mov    -0x30c(%ebp),%eax
 807c816:	89 10                	mov    %edx,(%eax)
 807c818:	b8 01 00 00 00       	mov    $0x1,%eax
 807c81d:	85 c0                	test   %eax,%eax
 807c81f:	0f 95 c0             	setne  %al
 807c822:	0f b6 c0             	movzbl %al,%eax
 807c825:	85 c0                	test   %eax,%eax
 807c827:	0f 84 1d 01 00 00    	je     807c94a <SafeProcessCommands+0x41c3>
 807c82d:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807c830:	89 85 08 fd ff ff    	mov    %eax,-0x2f8(%ebp)
 807c836:	8b 85 e0 fc ff ff    	mov    -0x320(%ebp),%eax
 807c83c:	89 85 0c fd ff ff    	mov    %eax,-0x2f4(%ebp)
 807c842:	8b 85 e4 fc ff ff    	mov    -0x31c(%ebp),%eax
 807c848:	89 85 10 fd ff ff    	mov    %eax,-0x2f0(%ebp)
 807c84e:	8b 85 08 fd ff ff    	mov    -0x2f8(%ebp),%eax
 807c854:	0f b6 c0             	movzbl %al,%eax
 807c857:	c1 e0 02             	shl    $0x2,%eax
 807c85a:	01 85 0c fd ff ff    	add    %eax,-0x2f4(%ebp)
 807c860:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 807c866:	0f b6 00             	movzbl (%eax),%eax
 807c869:	3c 08                	cmp    $0x8,%al
 807c86b:	0f 86 83 00 00 00    	jbe    807c8f4 <SafeProcessCommands+0x416d>
 807c871:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 807c877:	0f b6 00             	movzbl (%eax),%eax
 807c87a:	0f b6 c0             	movzbl %al,%eax
 807c87d:	83 e8 08             	sub    $0x8,%eax
 807c880:	89 85 14 fd ff ff    	mov    %eax,-0x2ec(%ebp)
 807c886:	8b 85 10 fd ff ff    	mov    -0x2f0(%ebp),%eax
 807c88c:	89 85 18 fd ff ff    	mov    %eax,-0x2e8(%ebp)
 807c892:	c7 85 1c fd ff ff 08 	movl   $0x8,-0x2e4(%ebp)
 807c899:	00 00 00 
 807c89c:	8b 85 18 fd ff ff    	mov    -0x2e8(%ebp),%eax
 807c8a2:	8b 50 04             	mov    0x4(%eax),%edx
 807c8a5:	8b 85 1c fd ff ff    	mov    -0x2e4(%ebp),%eax
 807c8ab:	01 c2                	add    %eax,%edx
 807c8ad:	8b 85 18 fd ff ff    	mov    -0x2e8(%ebp),%eax
 807c8b3:	89 50 04             	mov    %edx,0x4(%eax)
 807c8b6:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 807c8bc:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807c8c0:	0f b7 d0             	movzwl %ax,%edx
 807c8c3:	8b 85 08 fd ff ff    	mov    -0x2f8(%ebp),%eax
 807c8c9:	c1 e8 08             	shr    $0x8,%eax
 807c8cc:	89 c1                	mov    %eax,%ecx
 807c8ce:	8b 85 14 fd ff ff    	mov    -0x2ec(%ebp),%eax
 807c8d4:	89 85 20 fd ff ff    	mov    %eax,-0x2e0(%ebp)
 807c8da:	8b 85 20 fd ff ff    	mov    -0x2e0(%ebp),%eax
 807c8e0:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807c8e7:	21 c8                	and    %ecx,%eax
 807c8e9:	01 d0                	add    %edx,%eax
 807c8eb:	c1 e0 02             	shl    $0x2,%eax
 807c8ee:	01 85 0c fd ff ff    	add    %eax,-0x2f4(%ebp)
 807c8f4:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 807c8fa:	0f b6 00             	movzbl (%eax),%eax
 807c8fd:	0f b6 c0             	movzbl %al,%eax
 807c900:	8b 95 10 fd ff ff    	mov    -0x2f0(%ebp),%edx
 807c906:	89 95 24 fd ff ff    	mov    %edx,-0x2dc(%ebp)
 807c90c:	89 85 28 fd ff ff    	mov    %eax,-0x2d8(%ebp)
 807c912:	8b 85 24 fd ff ff    	mov    -0x2dc(%ebp),%eax
 807c918:	8b 50 04             	mov    0x4(%eax),%edx
 807c91b:	8b 85 28 fd ff ff    	mov    -0x2d8(%ebp),%eax
 807c921:	01 c2                	add    %eax,%edx
 807c923:	8b 85 24 fd ff ff    	mov    -0x2dc(%ebp),%eax
 807c929:	89 50 04             	mov    %edx,0x4(%eax)
 807c92c:	8b 85 0c fd ff ff    	mov    -0x2f4(%ebp),%eax
 807c932:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807c936:	0f b7 c0             	movzwl %ax,%eax
 807c939:	89 c2                	mov    %eax,%edx
 807c93b:	8b 85 e8 fc ff ff    	mov    -0x318(%ebp),%eax
 807c941:	89 10                	mov    %edx,(%eax)
 807c943:	b8 01 00 00 00       	mov    $0x1,%eax
 807c948:	eb 22                	jmp    807c96c <SafeProcessCommands+0x41e5>
 807c94a:	8b 85 e8 fc ff ff    	mov    -0x318(%ebp),%eax
 807c950:	89 44 24 08          	mov    %eax,0x8(%esp)
 807c954:	8b 85 e4 fc ff ff    	mov    -0x31c(%ebp),%eax
 807c95a:	89 44 24 04          	mov    %eax,0x4(%esp)
 807c95e:	8b 85 e0 fc ff ff    	mov    -0x320(%ebp),%eax
 807c964:	89 04 24             	mov    %eax,(%esp)
 807c967:	e8 60 c0 fe ff       	call   80689cc <SafeDecodeSymbol>
 807c96c:	85 c0                	test   %eax,%eax
 807c96e:	75 0a                	jne    807c97a <SafeProcessCommands+0x41f3>
 807c970:	b8 00 00 00 00       	mov    $0x0,%eax
 807c975:	e9 e7 08 00 00       	jmp    807d261 <SafeProcessCommands+0x4ada>
 807c97a:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c980:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 807c986:	8d 50 ff             	lea    -0x1(%eax),%edx
 807c989:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c98f:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 807c995:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c99b:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)
 807c9a2:	00 00 00 
 807c9a5:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807c9ab:	83 e0 f0             	and    $0xfffffff0,%eax
 807c9ae:	85 c0                	test   %eax,%eax
 807c9b0:	0f 85 8b 01 00 00    	jne    807cb41 <SafeProcessCommands+0x43ba>
 807c9b6:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807c9bc:	89 c2                	mov    %eax,%edx
 807c9be:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c9c4:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807c9ca:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807c9d0:	89 85 2c fd ff ff    	mov    %eax,-0x2d4(%ebp)
 807c9d6:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807c9dc:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807c9e2:	83 e8 03             	sub    $0x3,%eax
 807c9e5:	89 85 30 fd ff ff    	mov    %eax,-0x2d0(%ebp)
 807c9eb:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807c9f1:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807c9f7:	83 f8 03             	cmp    $0x3,%eax
 807c9fa:	7f 73                	jg     807ca6f <SafeProcessCommands+0x42e8>
 807c9fc:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca02:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807ca08:	ba 01 00 00 00       	mov    $0x1,%edx
 807ca0d:	89 c1                	mov    %eax,%ecx
 807ca0f:	d3 fa                	sar    %cl,%edx
 807ca11:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca17:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 807ca1d:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca23:	8b 40 44             	mov    0x44(%eax),%eax
 807ca26:	2b 85 30 fd ff ff    	sub    -0x2d0(%ebp),%eax
 807ca2c:	83 e0 03             	and    $0x3,%eax
 807ca2f:	89 c2                	mov    %eax,%edx
 807ca31:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca37:	83 c2 10             	add    $0x10,%edx
 807ca3a:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 807ca3e:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca44:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807ca4a:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca50:	8b 50 44             	mov    0x44(%eax),%edx
 807ca53:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca59:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 807ca5f:	29 c2                	sub    %eax,%edx
 807ca61:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca67:	89 50 44             	mov    %edx,0x44(%eax)
 807ca6a:	e9 c8 00 00 00       	jmp    807cb37 <SafeProcessCommands+0x43b0>
 807ca6f:	c7 85 34 fd ff ff 03 	movl   $0x3,-0x2cc(%ebp)
 807ca76:	00 00 00 
 807ca79:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca7f:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807ca85:	83 e8 0a             	sub    $0xa,%eax
 807ca88:	89 85 38 fd ff ff    	mov    %eax,-0x2c8(%ebp)
 807ca8e:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807ca94:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807ca9a:	83 f8 09             	cmp    $0x9,%eax
 807ca9d:	7f 17                	jg     807cab6 <SafeProcessCommands+0x432f>
 807ca9f:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807caa5:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807caab:	83 e8 04             	sub    $0x4,%eax
 807caae:	89 85 38 fd ff ff    	mov    %eax,-0x2c8(%ebp)
 807cab4:	eb 0a                	jmp    807cac0 <SafeProcessCommands+0x4339>
 807cab6:	c7 85 34 fd ff ff 02 	movl   $0x2,-0x2cc(%ebp)
 807cabd:	00 00 00 
 807cac0:	8b 85 38 fd ff ff    	mov    -0x2c8(%ebp),%eax
 807cac6:	c1 e0 02             	shl    $0x2,%eax
 807cac9:	ba 42 51 60 00       	mov    $0x605142,%edx
 807cace:	89 c1                	mov    %eax,%ecx
 807cad0:	d3 fa                	sar    %cl,%edx
 807cad2:	89 d0                	mov    %edx,%eax
 807cad4:	83 e0 0f             	and    $0xf,%eax
 807cad7:	83 e8 03             	sub    $0x3,%eax
 807cada:	89 85 3c fd ff ff    	mov    %eax,-0x2c4(%ebp)
 807cae0:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807cae6:	8b 50 44             	mov    0x44(%eax),%edx
 807cae9:	8b 85 34 fd ff ff    	mov    -0x2cc(%ebp),%eax
 807caef:	01 d0                	add    %edx,%eax
 807caf1:	83 e0 03             	and    $0x3,%eax
 807caf4:	89 c2                	mov    %eax,%edx
 807caf6:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807cafc:	83 c2 10             	add    $0x10,%edx
 807caff:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 807cb03:	8b 85 3c fd ff ff    	mov    -0x2c4(%ebp),%eax
 807cb09:	01 c2                	add    %eax,%edx
 807cb0b:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807cb11:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807cb17:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807cb1d:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807cb23:	85 c0                	test   %eax,%eax
 807cb25:	7f 10                	jg     807cb37 <SafeProcessCommands+0x43b0>
 807cb27:	8b 85 2c fd ff ff    	mov    -0x2d4(%ebp),%eax
 807cb2d:	c7 80 08 01 00 00 ff 	movl   $0x7fffffff,0x108(%eax)
 807cb34:	ff ff 7f 
 807cb37:	b8 01 00 00 00       	mov    $0x1,%eax
 807cb3c:	e9 20 07 00 00       	jmp    807d261 <SafeProcessCommands+0x4ada>
 807cb41:	83 bd 84 fc ff ff 00 	cmpl   $0x0,-0x37c(%ebp)
 807cb48:	0f 85 33 04 00 00    	jne    807cf81 <SafeProcessCommands+0x47fa>
 807cb4e:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807cb54:	8b 95 90 fc ff ff    	mov    -0x370(%ebp),%edx
 807cb5a:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 807cb5e:	0f b6 c0             	movzbl %al,%eax
 807cb61:	8b 95 8c fc ff ff    	mov    -0x374(%ebp),%edx
 807cb67:	89 95 40 fd ff ff    	mov    %edx,-0x2c0(%ebp)
 807cb6d:	89 85 44 fd ff ff    	mov    %eax,-0x2bc(%ebp)
 807cb73:	83 bd 44 fd ff ff 10 	cmpl   $0x10,-0x2bc(%ebp)
 807cb7a:	0f 87 53 01 00 00    	ja     807ccd3 <SafeProcessCommands+0x454c>
 807cb80:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807cb86:	89 85 48 fd ff ff    	mov    %eax,-0x2b8(%ebp)
 807cb8c:	8b 85 44 fd ff ff    	mov    -0x2bc(%ebp),%eax
 807cb92:	89 85 4c fd ff ff    	mov    %eax,-0x2b4(%ebp)
 807cb98:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cb9e:	8b 40 04             	mov    0x4(%eax),%eax
 807cba1:	83 f8 0f             	cmp    $0xf,%eax
 807cba4:	0f 86 86 00 00 00    	jbe    807cc30 <SafeProcessCommands+0x44a9>
 807cbaa:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cbb0:	8b 00                	mov    (%eax),%eax
 807cbb2:	c1 e8 10             	shr    $0x10,%eax
 807cbb5:	89 c2                	mov    %eax,%edx
 807cbb7:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cbbd:	89 10                	mov    %edx,(%eax)
 807cbbf:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cbc5:	8b 40 04             	mov    0x4(%eax),%eax
 807cbc8:	83 f0 10             	xor    $0x10,%eax
 807cbcb:	89 c2                	mov    %eax,%edx
 807cbcd:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cbd3:	89 50 04             	mov    %edx,0x4(%eax)
 807cbd6:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cbdc:	8b 10                	mov    (%eax),%edx
 807cbde:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cbe4:	8b 40 08             	mov    0x8(%eax),%eax
 807cbe7:	89 85 50 fd ff ff    	mov    %eax,-0x2b0(%ebp)
 807cbed:	8b 85 50 fd ff ff    	mov    -0x2b0(%ebp),%eax
 807cbf3:	0f b7 00             	movzwl (%eax),%eax
 807cbf6:	0f b7 c0             	movzwl %ax,%eax
 807cbf9:	c1 e0 10             	shl    $0x10,%eax
 807cbfc:	09 c2                	or     %eax,%edx
 807cbfe:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cc04:	89 10                	mov    %edx,(%eax)
 807cc06:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cc0c:	8b 40 0c             	mov    0xc(%eax),%eax
 807cc0f:	8d 50 fe             	lea    -0x2(%eax),%edx
 807cc12:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cc18:	89 50 0c             	mov    %edx,0xc(%eax)
 807cc1b:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cc21:	8b 40 08             	mov    0x8(%eax),%eax
 807cc24:	8d 50 02             	lea    0x2(%eax),%edx
 807cc27:	8b 85 48 fd ff ff    	mov    -0x2b8(%ebp),%eax
 807cc2d:	89 50 08             	mov    %edx,0x8(%eax)
 807cc30:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807cc36:	89 85 54 fd ff ff    	mov    %eax,-0x2ac(%ebp)
 807cc3c:	8b 85 44 fd ff ff    	mov    -0x2bc(%ebp),%eax
 807cc42:	89 85 58 fd ff ff    	mov    %eax,-0x2a8(%ebp)
 807cc48:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807cc4b:	89 85 5c fd ff ff    	mov    %eax,-0x2a4(%ebp)
 807cc51:	8b 85 54 fd ff ff    	mov    -0x2ac(%ebp),%eax
 807cc57:	89 85 60 fd ff ff    	mov    %eax,-0x2a0(%ebp)
 807cc5d:	8b 85 60 fd ff ff    	mov    -0x2a0(%ebp),%eax
 807cc63:	8b 10                	mov    (%eax),%edx
 807cc65:	8b 85 60 fd ff ff    	mov    -0x2a0(%ebp),%eax
 807cc6b:	8b 40 04             	mov    0x4(%eax),%eax
 807cc6e:	89 c1                	mov    %eax,%ecx
 807cc70:	d3 ea                	shr    %cl,%edx
 807cc72:	89 d0                	mov    %edx,%eax
 807cc74:	89 c2                	mov    %eax,%edx
 807cc76:	8b 85 58 fd ff ff    	mov    -0x2a8(%ebp),%eax
 807cc7c:	89 85 64 fd ff ff    	mov    %eax,-0x29c(%ebp)
 807cc82:	8b 85 64 fd ff ff    	mov    -0x29c(%ebp),%eax
 807cc88:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807cc8f:	21 c2                	and    %eax,%edx
 807cc91:	8b 85 5c fd ff ff    	mov    -0x2a4(%ebp),%eax
 807cc97:	89 10                	mov    %edx,(%eax)
 807cc99:	8b 85 54 fd ff ff    	mov    -0x2ac(%ebp),%eax
 807cc9f:	89 85 68 fd ff ff    	mov    %eax,-0x298(%ebp)
 807cca5:	8b 85 58 fd ff ff    	mov    -0x2a8(%ebp),%eax
 807ccab:	89 85 6c fd ff ff    	mov    %eax,-0x294(%ebp)
 807ccb1:	8b 85 68 fd ff ff    	mov    -0x298(%ebp),%eax
 807ccb7:	8b 50 04             	mov    0x4(%eax),%edx
 807ccba:	8b 85 6c fd ff ff    	mov    -0x294(%ebp),%eax
 807ccc0:	01 c2                	add    %eax,%edx
 807ccc2:	8b 85 68 fd ff ff    	mov    -0x298(%ebp),%eax
 807ccc8:	89 50 04             	mov    %edx,0x4(%eax)
 807cccb:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807ccce:	e9 a6 02 00 00       	jmp    807cf79 <SafeProcessCommands+0x47f2>
 807ccd3:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807ccd9:	89 85 70 fd ff ff    	mov    %eax,-0x290(%ebp)
 807ccdf:	c7 85 74 fd ff ff 10 	movl   $0x10,-0x28c(%ebp)
 807cce6:	00 00 00 
 807cce9:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807ccef:	8b 40 04             	mov    0x4(%eax),%eax
 807ccf2:	83 f8 0f             	cmp    $0xf,%eax
 807ccf5:	0f 86 86 00 00 00    	jbe    807cd81 <SafeProcessCommands+0x45fa>
 807ccfb:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd01:	8b 00                	mov    (%eax),%eax
 807cd03:	c1 e8 10             	shr    $0x10,%eax
 807cd06:	89 c2                	mov    %eax,%edx
 807cd08:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd0e:	89 10                	mov    %edx,(%eax)
 807cd10:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd16:	8b 40 04             	mov    0x4(%eax),%eax
 807cd19:	83 f0 10             	xor    $0x10,%eax
 807cd1c:	89 c2                	mov    %eax,%edx
 807cd1e:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd24:	89 50 04             	mov    %edx,0x4(%eax)
 807cd27:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd2d:	8b 10                	mov    (%eax),%edx
 807cd2f:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd35:	8b 40 08             	mov    0x8(%eax),%eax
 807cd38:	89 85 78 fd ff ff    	mov    %eax,-0x288(%ebp)
 807cd3e:	8b 85 78 fd ff ff    	mov    -0x288(%ebp),%eax
 807cd44:	0f b7 00             	movzwl (%eax),%eax
 807cd47:	0f b7 c0             	movzwl %ax,%eax
 807cd4a:	c1 e0 10             	shl    $0x10,%eax
 807cd4d:	09 c2                	or     %eax,%edx
 807cd4f:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd55:	89 10                	mov    %edx,(%eax)
 807cd57:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd5d:	8b 40 0c             	mov    0xc(%eax),%eax
 807cd60:	8d 50 fe             	lea    -0x2(%eax),%edx
 807cd63:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd69:	89 50 0c             	mov    %edx,0xc(%eax)
 807cd6c:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd72:	8b 40 08             	mov    0x8(%eax),%eax
 807cd75:	8d 50 02             	lea    0x2(%eax),%edx
 807cd78:	8b 85 70 fd ff ff    	mov    -0x290(%ebp),%eax
 807cd7e:	89 50 08             	mov    %edx,0x8(%eax)
 807cd81:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807cd87:	89 85 7c fd ff ff    	mov    %eax,-0x284(%ebp)
 807cd8d:	c7 85 80 fd ff ff 10 	movl   $0x10,-0x280(%ebp)
 807cd94:	00 00 00 
 807cd97:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807cd9d:	89 85 84 fd ff ff    	mov    %eax,-0x27c(%ebp)
 807cda3:	8b 85 7c fd ff ff    	mov    -0x284(%ebp),%eax
 807cda9:	89 85 88 fd ff ff    	mov    %eax,-0x278(%ebp)
 807cdaf:	8b 85 88 fd ff ff    	mov    -0x278(%ebp),%eax
 807cdb5:	8b 10                	mov    (%eax),%edx
 807cdb7:	8b 85 88 fd ff ff    	mov    -0x278(%ebp),%eax
 807cdbd:	8b 40 04             	mov    0x4(%eax),%eax
 807cdc0:	89 c1                	mov    %eax,%ecx
 807cdc2:	d3 ea                	shr    %cl,%edx
 807cdc4:	89 d0                	mov    %edx,%eax
 807cdc6:	89 c2                	mov    %eax,%edx
 807cdc8:	8b 85 80 fd ff ff    	mov    -0x280(%ebp),%eax
 807cdce:	89 85 8c fd ff ff    	mov    %eax,-0x274(%ebp)
 807cdd4:	8b 85 8c fd ff ff    	mov    -0x274(%ebp),%eax
 807cdda:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807cde1:	21 c2                	and    %eax,%edx
 807cde3:	8b 85 84 fd ff ff    	mov    -0x27c(%ebp),%eax
 807cde9:	89 10                	mov    %edx,(%eax)
 807cdeb:	8b 85 7c fd ff ff    	mov    -0x284(%ebp),%eax
 807cdf1:	89 85 90 fd ff ff    	mov    %eax,-0x270(%ebp)
 807cdf7:	8b 85 80 fd ff ff    	mov    -0x280(%ebp),%eax
 807cdfd:	89 85 94 fd ff ff    	mov    %eax,-0x26c(%ebp)
 807ce03:	8b 85 90 fd ff ff    	mov    -0x270(%ebp),%eax
 807ce09:	8b 50 04             	mov    0x4(%eax),%edx
 807ce0c:	8b 85 94 fd ff ff    	mov    -0x26c(%ebp),%eax
 807ce12:	01 c2                	add    %eax,%edx
 807ce14:	8b 85 90 fd ff ff    	mov    -0x270(%ebp),%eax
 807ce1a:	89 50 04             	mov    %edx,0x4(%eax)
 807ce1d:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807ce23:	89 85 98 fd ff ff    	mov    %eax,-0x268(%ebp)
 807ce29:	c7 85 9c fd ff ff 10 	movl   $0x10,-0x264(%ebp)
 807ce30:	00 00 00 
 807ce33:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce39:	8b 40 04             	mov    0x4(%eax),%eax
 807ce3c:	83 f8 0f             	cmp    $0xf,%eax
 807ce3f:	0f 86 86 00 00 00    	jbe    807cecb <SafeProcessCommands+0x4744>
 807ce45:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce4b:	8b 00                	mov    (%eax),%eax
 807ce4d:	c1 e8 10             	shr    $0x10,%eax
 807ce50:	89 c2                	mov    %eax,%edx
 807ce52:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce58:	89 10                	mov    %edx,(%eax)
 807ce5a:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce60:	8b 40 04             	mov    0x4(%eax),%eax
 807ce63:	83 f0 10             	xor    $0x10,%eax
 807ce66:	89 c2                	mov    %eax,%edx
 807ce68:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce6e:	89 50 04             	mov    %edx,0x4(%eax)
 807ce71:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce77:	8b 10                	mov    (%eax),%edx
 807ce79:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce7f:	8b 40 08             	mov    0x8(%eax),%eax
 807ce82:	89 85 a0 fd ff ff    	mov    %eax,-0x260(%ebp)
 807ce88:	8b 85 a0 fd ff ff    	mov    -0x260(%ebp),%eax
 807ce8e:	0f b7 00             	movzwl (%eax),%eax
 807ce91:	0f b7 c0             	movzwl %ax,%eax
 807ce94:	c1 e0 10             	shl    $0x10,%eax
 807ce97:	09 c2                	or     %eax,%edx
 807ce99:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ce9f:	89 10                	mov    %edx,(%eax)
 807cea1:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807cea7:	8b 40 0c             	mov    0xc(%eax),%eax
 807ceaa:	8d 50 fe             	lea    -0x2(%eax),%edx
 807cead:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807ceb3:	89 50 0c             	mov    %edx,0xc(%eax)
 807ceb6:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807cebc:	8b 40 08             	mov    0x8(%eax),%eax
 807cebf:	8d 50 02             	lea    0x2(%eax),%edx
 807cec2:	8b 85 98 fd ff ff    	mov    -0x268(%ebp),%eax
 807cec8:	89 50 08             	mov    %edx,0x8(%eax)
 807cecb:	8b 85 44 fd ff ff    	mov    -0x2bc(%ebp),%eax
 807ced1:	8d 50 f0             	lea    -0x10(%eax),%edx
 807ced4:	8b 85 40 fd ff ff    	mov    -0x2c0(%ebp),%eax
 807ceda:	89 85 a4 fd ff ff    	mov    %eax,-0x25c(%ebp)
 807cee0:	89 95 a8 fd ff ff    	mov    %edx,-0x258(%ebp)
 807cee6:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807cee9:	89 85 ac fd ff ff    	mov    %eax,-0x254(%ebp)
 807ceef:	8b 85 a4 fd ff ff    	mov    -0x25c(%ebp),%eax
 807cef5:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807cefb:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 807cf01:	8b 10                	mov    (%eax),%edx
 807cf03:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 807cf09:	8b 40 04             	mov    0x4(%eax),%eax
 807cf0c:	89 c1                	mov    %eax,%ecx
 807cf0e:	d3 ea                	shr    %cl,%edx
 807cf10:	89 d0                	mov    %edx,%eax
 807cf12:	89 c2                	mov    %eax,%edx
 807cf14:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 807cf1a:	89 85 b4 fd ff ff    	mov    %eax,-0x24c(%ebp)
 807cf20:	8b 85 b4 fd ff ff    	mov    -0x24c(%ebp),%eax
 807cf26:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807cf2d:	21 c2                	and    %eax,%edx
 807cf2f:	8b 85 ac fd ff ff    	mov    -0x254(%ebp),%eax
 807cf35:	89 10                	mov    %edx,(%eax)
 807cf37:	8b 85 a4 fd ff ff    	mov    -0x25c(%ebp),%eax
 807cf3d:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 807cf43:	8b 85 a8 fd ff ff    	mov    -0x258(%ebp),%eax
 807cf49:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 807cf4f:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 807cf55:	8b 50 04             	mov    0x4(%eax),%edx
 807cf58:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 807cf5e:	01 c2                	add    %eax,%edx
 807cf60:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 807cf66:	89 50 04             	mov    %edx,0x4(%eax)
 807cf69:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807cf6c:	c1 e0 10             	shl    $0x10,%eax
 807cf6f:	89 c2                	mov    %eax,%edx
 807cf71:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807cf77:	09 d0                	or     %edx,%eax
 807cf79:	89 45 e0             	mov    %eax,-0x20(%ebp)
 807cf7c:	e9 a1 02 00 00       	jmp    807d222 <SafeProcessCommands+0x4a9b>
 807cf81:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807cf87:	8b 95 90 fc ff ff    	mov    -0x370(%ebp),%edx
 807cf8d:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 807cf91:	0f b6 c0             	movzbl %al,%eax
 807cf94:	8b 95 8c fc ff ff    	mov    -0x374(%ebp),%edx
 807cf9a:	89 95 c0 fd ff ff    	mov    %edx,-0x240(%ebp)
 807cfa0:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%ebp)
 807cfa6:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807cfa9:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 807cfaf:	83 bd c4 fd ff ff 00 	cmpl   $0x0,-0x23c(%ebp)
 807cfb6:	0f 84 d4 01 00 00    	je     807d190 <SafeProcessCommands+0x4a09>
 807cfbc:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807cfc2:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 807cfc8:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 807cfce:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 807cfd4:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807cfda:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%ebp)
 807cfe0:	83 bd d0 fd ff ff 18 	cmpl   $0x18,-0x230(%ebp)
 807cfe7:	0f 86 b0 00 00 00    	jbe    807d09d <SafeProcessCommands+0x4916>
 807cfed:	e9 7a 01 00 00       	jmp    807d16c <SafeProcessCommands+0x49e5>
 807cff2:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807cff8:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 807cffe:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d004:	8b 40 0c             	mov    0xc(%eax),%eax
 807d007:	85 c0                	test   %eax,%eax
 807d009:	75 07                	jne    807d012 <SafeProcessCommands+0x488b>
 807d00b:	b8 00 00 00 00       	mov    $0x0,%eax
 807d010:	eb 7d                	jmp    807d08f <SafeProcessCommands+0x4908>
 807d012:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d018:	8b 00                	mov    (%eax),%eax
 807d01a:	c1 e8 08             	shr    $0x8,%eax
 807d01d:	89 c2                	mov    %eax,%edx
 807d01f:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d025:	89 10                	mov    %edx,(%eax)
 807d027:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d02d:	8b 10                	mov    (%eax),%edx
 807d02f:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d035:	8b 40 08             	mov    0x8(%eax),%eax
 807d038:	0f b6 00             	movzbl (%eax),%eax
 807d03b:	0f b6 c0             	movzbl %al,%eax
 807d03e:	c1 e0 18             	shl    $0x18,%eax
 807d041:	09 c2                	or     %eax,%edx
 807d043:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d049:	89 10                	mov    %edx,(%eax)
 807d04b:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d051:	8b 40 04             	mov    0x4(%eax),%eax
 807d054:	8d 50 f8             	lea    -0x8(%eax),%edx
 807d057:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d05d:	89 50 04             	mov    %edx,0x4(%eax)
 807d060:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d066:	8b 40 0c             	mov    0xc(%eax),%eax
 807d069:	8d 50 ff             	lea    -0x1(%eax),%edx
 807d06c:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d072:	89 50 0c             	mov    %edx,0xc(%eax)
 807d075:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d07b:	8b 40 08             	mov    0x8(%eax),%eax
 807d07e:	8d 50 01             	lea    0x1(%eax),%edx
 807d081:	8b 85 d8 fd ff ff    	mov    -0x228(%ebp),%eax
 807d087:	89 50 08             	mov    %edx,0x8(%eax)
 807d08a:	b8 01 00 00 00       	mov    $0x1,%eax
 807d08f:	85 c0                	test   %eax,%eax
 807d091:	75 0a                	jne    807d09d <SafeProcessCommands+0x4916>
 807d093:	b8 00 00 00 00       	mov    $0x0,%eax
 807d098:	e9 04 01 00 00       	jmp    807d1a1 <SafeProcessCommands+0x4a1a>
 807d09d:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807d0a3:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 807d0a9:	8b 85 dc fd ff ff    	mov    -0x224(%ebp),%eax
 807d0af:	8b 40 04             	mov    0x4(%eax),%eax
 807d0b2:	ba 20 00 00 00       	mov    $0x20,%edx
 807d0b7:	29 c2                	sub    %eax,%edx
 807d0b9:	89 d0                	mov    %edx,%eax
 807d0bb:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%ebp)
 807d0c1:	0f 87 2b ff ff ff    	ja     807cff2 <SafeProcessCommands+0x486b>
 807d0c7:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807d0cd:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 807d0d3:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 807d0d9:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 807d0df:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 807d0e5:	89 85 e8 fd ff ff    	mov    %eax,-0x218(%ebp)
 807d0eb:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 807d0f1:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 807d0f7:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807d0fd:	8b 10                	mov    (%eax),%edx
 807d0ff:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807d105:	8b 40 04             	mov    0x4(%eax),%eax
 807d108:	89 c1                	mov    %eax,%ecx
 807d10a:	d3 ea                	shr    %cl,%edx
 807d10c:	89 d0                	mov    %edx,%eax
 807d10e:	89 c2                	mov    %eax,%edx
 807d110:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 807d116:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 807d11c:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 807d122:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807d129:	21 c2                	and    %eax,%edx
 807d12b:	8b 85 e8 fd ff ff    	mov    -0x218(%ebp),%eax
 807d131:	89 10                	mov    %edx,(%eax)
 807d133:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 807d139:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 807d13f:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 807d145:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 807d14b:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 807d151:	8b 50 04             	mov    0x4(%eax),%edx
 807d154:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 807d15a:	01 c2                	add    %eax,%edx
 807d15c:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 807d162:	89 50 04             	mov    %edx,0x4(%eax)
 807d165:	b8 01 00 00 00       	mov    $0x1,%eax
 807d16a:	eb 35                	jmp    807d1a1 <SafeProcessCommands+0x4a1a>
 807d16c:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 807d172:	89 44 24 08          	mov    %eax,0x8(%esp)
 807d176:	8b 85 d0 fd ff ff    	mov    -0x230(%ebp),%eax
 807d17c:	89 44 24 04          	mov    %eax,0x4(%esp)
 807d180:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807d186:	89 04 24             	mov    %eax,(%esp)
 807d189:	e8 b2 4d 00 00       	call   8081f40 <BrotliSafeReadBits32Slow>
 807d18e:	eb 11                	jmp    807d1a1 <SafeProcessCommands+0x4a1a>
 807d190:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807d196:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 807d19c:	b8 01 00 00 00       	mov    $0x1,%eax
 807d1a1:	85 c0                	test   %eax,%eax
 807d1a3:	75 7d                	jne    807d222 <SafeProcessCommands+0x4a9b>
 807d1a5:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807d1ab:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 807d1b1:	8d 50 01             	lea    0x1(%eax),%edx
 807d1b4:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807d1ba:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 807d1c0:	8b 85 8c fc ff ff    	mov    -0x374(%ebp),%eax
 807d1c6:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 807d1cc:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807d1cf:	89 85 00 fe ff ff    	mov    %eax,-0x200(%ebp)
 807d1d5:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807d1db:	8b 10                	mov    (%eax),%edx
 807d1dd:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807d1e3:	89 10                	mov    %edx,(%eax)
 807d1e5:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807d1eb:	8b 50 04             	mov    0x4(%eax),%edx
 807d1ee:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807d1f4:	89 50 04             	mov    %edx,0x4(%eax)
 807d1f7:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807d1fd:	8b 50 08             	mov    0x8(%eax),%edx
 807d200:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807d206:	89 50 08             	mov    %edx,0x8(%eax)
 807d209:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807d20f:	8b 50 0c             	mov    0xc(%eax),%edx
 807d212:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807d218:	89 50 0c             	mov    %edx,0xc(%eax)
 807d21b:	b8 00 00 00 00       	mov    $0x0,%eax
 807d220:	eb 3f                	jmp    807d261 <SafeProcessCommands+0x4ada>
 807d222:	8b 95 f4 f5 ff ff    	mov    -0xa0c(%ebp),%edx
 807d228:	8b 85 90 fc ff ff    	mov    -0x370(%ebp),%eax
 807d22e:	81 c2 88 00 00 00    	add    $0x88,%edx
 807d234:	8b 14 90             	mov    (%eax,%edx,4),%edx
 807d237:	8b 75 e0             	mov    -0x20(%ebp),%esi
 807d23a:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807d240:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 807d246:	89 c1                	mov    %eax,%ecx
 807d248:	d3 e6                	shl    %cl,%esi
 807d24a:	89 f0                	mov    %esi,%eax
 807d24c:	01 d0                	add    %edx,%eax
 807d24e:	89 c2                	mov    %eax,%edx
 807d250:	8b 85 88 fc ff ff    	mov    -0x378(%ebp),%eax
 807d256:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807d25c:	b8 01 00 00 00       	mov    $0x1,%eax
 807d261:	85 c0                	test   %eax,%eax
 807d263:	0f 85 6a 0e 00 00    	jne    807e0d3 <SafeProcessCommands+0x594c>
 807d269:	c7 85 08 f6 ff ff 02 	movl   $0x2,-0x9f8(%ebp)
 807d270:	00 00 00 
 807d273:	e9 81 13 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807d278:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807d27e:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%ebp)
 807d284:	8b 85 0c f6 ff ff    	mov    -0x9f4(%ebp),%eax
 807d28a:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 807d290:	c7 85 0c fe ff ff 00 	movl   $0x0,-0x1f4(%ebp)
 807d297:	00 00 00 
 807d29a:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 807d2a0:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 807d2a6:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807d2ac:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 807d2b2:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d2b8:	05 6c 02 00 00       	add    $0x26c,%eax
 807d2bd:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 807d2c3:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d2c9:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx
 807d2cf:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d2d5:	0f b6 80 00 01 00 00 	movzbl 0x100(%eax),%eax
 807d2dc:	0f b6 c0             	movzbl %al,%eax
 807d2df:	c1 e0 02             	shl    $0x2,%eax
 807d2e2:	01 d0                	add    %edx,%eax
 807d2e4:	8b 00                	mov    (%eax),%eax
 807d2e6:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%ebp)
 807d2ec:	83 bd 0c fe ff ff 00 	cmpl   $0x0,-0x1f4(%ebp)
 807d2f3:	0f 85 09 02 00 00    	jne    807d502 <SafeProcessCommands+0x4d7b>
 807d2f9:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 807d2ff:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 807d305:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807d30b:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 807d311:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 807d317:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 807d31d:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 807d323:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 807d329:	c7 85 30 fe ff ff 10 	movl   $0x10,-0x1d0(%ebp)
 807d330:	00 00 00 
 807d333:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d339:	8b 40 04             	mov    0x4(%eax),%eax
 807d33c:	83 f8 0f             	cmp    $0xf,%eax
 807d33f:	0f 86 86 00 00 00    	jbe    807d3cb <SafeProcessCommands+0x4c44>
 807d345:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d34b:	8b 00                	mov    (%eax),%eax
 807d34d:	c1 e8 10             	shr    $0x10,%eax
 807d350:	89 c2                	mov    %eax,%edx
 807d352:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d358:	89 10                	mov    %edx,(%eax)
 807d35a:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d360:	8b 40 04             	mov    0x4(%eax),%eax
 807d363:	83 f0 10             	xor    $0x10,%eax
 807d366:	89 c2                	mov    %eax,%edx
 807d368:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d36e:	89 50 04             	mov    %edx,0x4(%eax)
 807d371:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d377:	8b 10                	mov    (%eax),%edx
 807d379:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d37f:	8b 40 08             	mov    0x8(%eax),%eax
 807d382:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 807d388:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 807d38e:	0f b7 00             	movzwl (%eax),%eax
 807d391:	0f b7 c0             	movzwl %ax,%eax
 807d394:	c1 e0 10             	shl    $0x10,%eax
 807d397:	09 c2                	or     %eax,%edx
 807d399:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d39f:	89 10                	mov    %edx,(%eax)
 807d3a1:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d3a7:	8b 40 0c             	mov    0xc(%eax),%eax
 807d3aa:	8d 50 fe             	lea    -0x2(%eax),%edx
 807d3ad:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d3b3:	89 50 0c             	mov    %edx,0xc(%eax)
 807d3b6:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d3bc:	8b 40 08             	mov    0x8(%eax),%eax
 807d3bf:	8d 50 02             	lea    0x2(%eax),%edx
 807d3c2:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807d3c8:	89 50 08             	mov    %edx,0x8(%eax)
 807d3cb:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 807d3d1:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 807d3d7:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 807d3dd:	8b 10                	mov    (%eax),%edx
 807d3df:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 807d3e5:	8b 40 04             	mov    0x4(%eax),%eax
 807d3e8:	89 c1                	mov    %eax,%ecx
 807d3ea:	d3 ea                	shr    %cl,%edx
 807d3ec:	89 d0                	mov    %edx,%eax
 807d3ee:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 807d3f4:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 807d3fa:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 807d400:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 807d406:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%ebp)
 807d40c:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 807d412:	0f b6 c0             	movzbl %al,%eax
 807d415:	c1 e0 02             	shl    $0x2,%eax
 807d418:	01 85 40 fe ff ff    	add    %eax,-0x1c0(%ebp)
 807d41e:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807d424:	0f b6 00             	movzbl (%eax),%eax
 807d427:	3c 08                	cmp    $0x8,%al
 807d429:	0f 86 83 00 00 00    	jbe    807d4b2 <SafeProcessCommands+0x4d2b>
 807d42f:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807d435:	0f b6 00             	movzbl (%eax),%eax
 807d438:	0f b6 c0             	movzbl %al,%eax
 807d43b:	83 e8 08             	sub    $0x8,%eax
 807d43e:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 807d444:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 807d44a:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 807d450:	c7 85 50 fe ff ff 08 	movl   $0x8,-0x1b0(%ebp)
 807d457:	00 00 00 
 807d45a:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 807d460:	8b 50 04             	mov    0x4(%eax),%edx
 807d463:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 807d469:	01 c2                	add    %eax,%edx
 807d46b:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 807d471:	89 50 04             	mov    %edx,0x4(%eax)
 807d474:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807d47a:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807d47e:	0f b7 d0             	movzwl %ax,%edx
 807d481:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 807d487:	c1 e8 08             	shr    $0x8,%eax
 807d48a:	89 c1                	mov    %eax,%ecx
 807d48c:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 807d492:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 807d498:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807d49e:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807d4a5:	21 c8                	and    %ecx,%eax
 807d4a7:	01 d0                	add    %edx,%eax
 807d4a9:	c1 e0 02             	shl    $0x2,%eax
 807d4ac:	01 85 40 fe ff ff    	add    %eax,-0x1c0(%ebp)
 807d4b2:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807d4b8:	0f b6 00             	movzbl (%eax),%eax
 807d4bb:	0f b6 c0             	movzbl %al,%eax
 807d4be:	8b 95 44 fe ff ff    	mov    -0x1bc(%ebp),%edx
 807d4c4:	89 95 58 fe ff ff    	mov    %edx,-0x1a8(%ebp)
 807d4ca:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%ebp)
 807d4d0:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 807d4d6:	8b 50 04             	mov    0x4(%eax),%edx
 807d4d9:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 807d4df:	01 c2                	add    %eax,%edx
 807d4e1:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 807d4e7:	89 50 04             	mov    %edx,0x4(%eax)
 807d4ea:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807d4f0:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807d4f4:	0f b7 c0             	movzwl %ax,%eax
 807d4f7:	89 85 f4 f5 ff ff    	mov    %eax,-0xa0c(%ebp)
 807d4fd:	e9 19 03 00 00       	jmp    807d81b <SafeProcessCommands+0x5094>
 807d502:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807d508:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 807d50e:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807d511:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%ebp)
 807d517:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807d51d:	8b 10                	mov    (%eax),%edx
 807d51f:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 807d525:	89 10                	mov    %edx,(%eax)
 807d527:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807d52d:	8b 50 04             	mov    0x4(%eax),%edx
 807d530:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 807d536:	89 50 04             	mov    %edx,0x4(%eax)
 807d539:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807d53f:	8b 50 08             	mov    0x8(%eax),%edx
 807d542:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 807d548:	89 50 08             	mov    %edx,0x8(%eax)
 807d54b:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807d551:	8b 50 0c             	mov    0xc(%eax),%edx
 807d554:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 807d55a:	89 50 0c             	mov    %edx,0xc(%eax)
 807d55d:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 807d563:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 807d569:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807d56f:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 807d575:	8d 85 f4 f5 ff ff    	lea    -0xa0c(%ebp),%eax
 807d57b:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 807d581:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 807d587:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%ebp)
 807d58d:	c7 85 78 fe ff ff 0f 	movl   $0xf,-0x188(%ebp)
 807d594:	00 00 00 
 807d597:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807d59a:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 807d5a0:	e9 a8 00 00 00       	jmp    807d64d <SafeProcessCommands+0x4ec6>
 807d5a5:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807d5ab:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 807d5b1:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d5b7:	8b 40 0c             	mov    0xc(%eax),%eax
 807d5ba:	85 c0                	test   %eax,%eax
 807d5bc:	75 07                	jne    807d5c5 <SafeProcessCommands+0x4e3e>
 807d5be:	b8 00 00 00 00       	mov    $0x0,%eax
 807d5c3:	eb 7d                	jmp    807d642 <SafeProcessCommands+0x4ebb>
 807d5c5:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d5cb:	8b 00                	mov    (%eax),%eax
 807d5cd:	c1 e8 08             	shr    $0x8,%eax
 807d5d0:	89 c2                	mov    %eax,%edx
 807d5d2:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d5d8:	89 10                	mov    %edx,(%eax)
 807d5da:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d5e0:	8b 10                	mov    (%eax),%edx
 807d5e2:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d5e8:	8b 40 08             	mov    0x8(%eax),%eax
 807d5eb:	0f b6 00             	movzbl (%eax),%eax
 807d5ee:	0f b6 c0             	movzbl %al,%eax
 807d5f1:	c1 e0 18             	shl    $0x18,%eax
 807d5f4:	09 c2                	or     %eax,%edx
 807d5f6:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d5fc:	89 10                	mov    %edx,(%eax)
 807d5fe:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d604:	8b 40 04             	mov    0x4(%eax),%eax
 807d607:	8d 50 f8             	lea    -0x8(%eax),%edx
 807d60a:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d610:	89 50 04             	mov    %edx,0x4(%eax)
 807d613:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d619:	8b 40 0c             	mov    0xc(%eax),%eax
 807d61c:	8d 50 ff             	lea    -0x1(%eax),%edx
 807d61f:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d625:	89 50 0c             	mov    %edx,0xc(%eax)
 807d628:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d62e:	8b 40 08             	mov    0x8(%eax),%eax
 807d631:	8d 50 01             	lea    0x1(%eax),%edx
 807d634:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807d63a:	89 50 08             	mov    %edx,0x8(%eax)
 807d63d:	b8 01 00 00 00       	mov    $0x1,%eax
 807d642:	85 c0                	test   %eax,%eax
 807d644:	75 07                	jne    807d64d <SafeProcessCommands+0x4ec6>
 807d646:	b8 00 00 00 00       	mov    $0x0,%eax
 807d64b:	eb 77                	jmp    807d6c4 <SafeProcessCommands+0x4f3d>
 807d64d:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807d653:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 807d659:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807d65f:	8b 40 04             	mov    0x4(%eax),%eax
 807d662:	ba 20 00 00 00       	mov    $0x20,%edx
 807d667:	29 c2                	sub    %eax,%edx
 807d669:	89 d0                	mov    %edx,%eax
 807d66b:	39 85 78 fe ff ff    	cmp    %eax,-0x188(%ebp)
 807d671:	0f 87 2e ff ff ff    	ja     807d5a5 <SafeProcessCommands+0x4e1e>
 807d677:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807d67d:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 807d683:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 807d689:	8b 10                	mov    (%eax),%edx
 807d68b:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 807d691:	8b 40 04             	mov    0x4(%eax),%eax
 807d694:	89 c1                	mov    %eax,%ecx
 807d696:	d3 ea                	shr    %cl,%edx
 807d698:	89 d0                	mov    %edx,%eax
 807d69a:	89 c2                	mov    %eax,%edx
 807d69c:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 807d6a2:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 807d6a8:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 807d6ae:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807d6b5:	21 c2                	and    %eax,%edx
 807d6b7:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807d6bd:	89 10                	mov    %edx,(%eax)
 807d6bf:	b8 01 00 00 00       	mov    $0x1,%eax
 807d6c4:	85 c0                	test   %eax,%eax
 807d6c6:	0f 95 c0             	setne  %al
 807d6c9:	0f b6 c0             	movzbl %al,%eax
 807d6cc:	85 c0                	test   %eax,%eax
 807d6ce:	0f 84 1d 01 00 00    	je     807d7f1 <SafeProcessCommands+0x506a>
 807d6d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807d6d7:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 807d6dd:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 807d6e3:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 807d6e9:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 807d6ef:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 807d6f5:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807d6fb:	0f b6 c0             	movzbl %al,%eax
 807d6fe:	c1 e0 02             	shl    $0x2,%eax
 807d701:	01 85 94 fe ff ff    	add    %eax,-0x16c(%ebp)
 807d707:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807d70d:	0f b6 00             	movzbl (%eax),%eax
 807d710:	3c 08                	cmp    $0x8,%al
 807d712:	0f 86 83 00 00 00    	jbe    807d79b <SafeProcessCommands+0x5014>
 807d718:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807d71e:	0f b6 00             	movzbl (%eax),%eax
 807d721:	0f b6 c0             	movzbl %al,%eax
 807d724:	83 e8 08             	sub    $0x8,%eax
 807d727:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 807d72d:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 807d733:	89 85 a0 fe ff ff    	mov    %eax,-0x160(%ebp)
 807d739:	c7 85 a4 fe ff ff 08 	movl   $0x8,-0x15c(%ebp)
 807d740:	00 00 00 
 807d743:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 807d749:	8b 50 04             	mov    0x4(%eax),%edx
 807d74c:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 807d752:	01 c2                	add    %eax,%edx
 807d754:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 807d75a:	89 50 04             	mov    %edx,0x4(%eax)
 807d75d:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807d763:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807d767:	0f b7 d0             	movzwl %ax,%edx
 807d76a:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807d770:	c1 e8 08             	shr    $0x8,%eax
 807d773:	89 c1                	mov    %eax,%ecx
 807d775:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 807d77b:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%ebp)
 807d781:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 807d787:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807d78e:	21 c8                	and    %ecx,%eax
 807d790:	01 d0                	add    %edx,%eax
 807d792:	c1 e0 02             	shl    $0x2,%eax
 807d795:	01 85 94 fe ff ff    	add    %eax,-0x16c(%ebp)
 807d79b:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807d7a1:	0f b6 00             	movzbl (%eax),%eax
 807d7a4:	0f b6 c0             	movzbl %al,%eax
 807d7a7:	8b 95 98 fe ff ff    	mov    -0x168(%ebp),%edx
 807d7ad:	89 95 ac fe ff ff    	mov    %edx,-0x154(%ebp)
 807d7b3:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 807d7b9:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807d7bf:	8b 50 04             	mov    0x4(%eax),%edx
 807d7c2:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
 807d7c8:	01 c2                	add    %eax,%edx
 807d7ca:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807d7d0:	89 50 04             	mov    %edx,0x4(%eax)
 807d7d3:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807d7d9:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807d7dd:	0f b7 c0             	movzwl %ax,%eax
 807d7e0:	89 c2                	mov    %eax,%edx
 807d7e2:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 807d7e8:	89 10                	mov    %edx,(%eax)
 807d7ea:	b8 01 00 00 00       	mov    $0x1,%eax
 807d7ef:	eb 22                	jmp    807d813 <SafeProcessCommands+0x508c>
 807d7f1:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 807d7f7:	89 44 24 08          	mov    %eax,0x8(%esp)
 807d7fb:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 807d801:	89 44 24 04          	mov    %eax,0x4(%esp)
 807d805:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 807d80b:	89 04 24             	mov    %eax,(%esp)
 807d80e:	e8 b9 b1 fe ff       	call   80689cc <SafeDecodeSymbol>
 807d813:	85 c0                	test   %eax,%eax
 807d815:	0f 84 b8 08 00 00    	je     807e0d3 <SafeProcessCommands+0x594c>
 807d81b:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d821:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 807d827:	8d 50 ff             	lea    -0x1(%eax),%edx
 807d82a:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d830:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 807d836:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d83c:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)
 807d843:	00 00 00 
 807d846:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807d84c:	83 e0 f0             	and    $0xfffffff0,%eax
 807d84f:	85 c0                	test   %eax,%eax
 807d851:	0f 85 8a 01 00 00    	jne    807d9e1 <SafeProcessCommands+0x525a>
 807d857:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807d85d:	89 c2                	mov    %eax,%edx
 807d85f:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d865:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807d86b:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807d871:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 807d877:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d87d:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d883:	83 e8 03             	sub    $0x3,%eax
 807d886:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 807d88c:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d892:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d898:	83 f8 03             	cmp    $0x3,%eax
 807d89b:	7f 73                	jg     807d910 <SafeProcessCommands+0x5189>
 807d89d:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8a3:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d8a9:	ba 01 00 00 00       	mov    $0x1,%edx
 807d8ae:	89 c1                	mov    %eax,%ecx
 807d8b0:	d3 fa                	sar    %cl,%edx
 807d8b2:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8b8:	89 90 b0 00 00 00    	mov    %edx,0xb0(%eax)
 807d8be:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8c4:	8b 40 44             	mov    0x44(%eax),%eax
 807d8c7:	2b 85 b8 fe ff ff    	sub    -0x148(%ebp),%eax
 807d8cd:	83 e0 03             	and    $0x3,%eax
 807d8d0:	89 c2                	mov    %eax,%edx
 807d8d2:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8d8:	83 c2 10             	add    $0x10,%edx
 807d8db:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 807d8df:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8e5:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807d8eb:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8f1:	8b 50 44             	mov    0x44(%eax),%edx
 807d8f4:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d8fa:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 807d900:	29 c2                	sub    %eax,%edx
 807d902:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d908:	89 50 44             	mov    %edx,0x44(%eax)
 807d90b:	e9 c3 07 00 00       	jmp    807e0d3 <SafeProcessCommands+0x594c>
 807d910:	c7 85 bc fe ff ff 03 	movl   $0x3,-0x144(%ebp)
 807d917:	00 00 00 
 807d91a:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d920:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d926:	83 e8 0a             	sub    $0xa,%eax
 807d929:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 807d92f:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d935:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d93b:	83 f8 09             	cmp    $0x9,%eax
 807d93e:	7f 17                	jg     807d957 <SafeProcessCommands+0x51d0>
 807d940:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d946:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d94c:	83 e8 04             	sub    $0x4,%eax
 807d94f:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 807d955:	eb 0a                	jmp    807d961 <SafeProcessCommands+0x51da>
 807d957:	c7 85 bc fe ff ff 02 	movl   $0x2,-0x144(%ebp)
 807d95e:	00 00 00 
 807d961:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807d967:	c1 e0 02             	shl    $0x2,%eax
 807d96a:	ba 42 51 60 00       	mov    $0x605142,%edx
 807d96f:	89 c1                	mov    %eax,%ecx
 807d971:	d3 fa                	sar    %cl,%edx
 807d973:	89 d0                	mov    %edx,%eax
 807d975:	83 e0 0f             	and    $0xf,%eax
 807d978:	83 e8 03             	sub    $0x3,%eax
 807d97b:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 807d981:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d987:	8b 50 44             	mov    0x44(%eax),%edx
 807d98a:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 807d990:	01 d0                	add    %edx,%eax
 807d992:	83 e0 03             	and    $0x3,%eax
 807d995:	89 c2                	mov    %eax,%edx
 807d997:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d99d:	83 c2 10             	add    $0x10,%edx
 807d9a0:	8b 54 90 08          	mov    0x8(%eax,%edx,4),%edx
 807d9a4:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 807d9aa:	01 c2                	add    %eax,%edx
 807d9ac:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d9b2:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807d9b8:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d9be:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807d9c4:	85 c0                	test   %eax,%eax
 807d9c6:	0f 8f 07 07 00 00    	jg     807e0d3 <SafeProcessCommands+0x594c>
 807d9cc:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807d9d2:	c7 80 08 01 00 00 ff 	movl   $0x7fffffff,0x108(%eax)
 807d9d9:	ff ff 7f 
 807d9dc:	e9 f2 06 00 00       	jmp    807e0d3 <SafeProcessCommands+0x594c>
 807d9e1:	83 bd 0c fe ff ff 00 	cmpl   $0x0,-0x1f4(%ebp)
 807d9e8:	0f 85 33 04 00 00    	jne    807de21 <SafeProcessCommands+0x569a>
 807d9ee:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807d9f4:	8b 95 18 fe ff ff    	mov    -0x1e8(%ebp),%edx
 807d9fa:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 807d9fe:	0f b6 c0             	movzbl %al,%eax
 807da01:	8b 95 14 fe ff ff    	mov    -0x1ec(%ebp),%edx
 807da07:	89 95 c8 fe ff ff    	mov    %edx,-0x138(%ebp)
 807da0d:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 807da13:	83 bd cc fe ff ff 10 	cmpl   $0x10,-0x134(%ebp)
 807da1a:	0f 87 53 01 00 00    	ja     807db73 <SafeProcessCommands+0x53ec>
 807da20:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807da26:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 807da2c:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807da32:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 807da38:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da3e:	8b 40 04             	mov    0x4(%eax),%eax
 807da41:	83 f8 0f             	cmp    $0xf,%eax
 807da44:	0f 86 86 00 00 00    	jbe    807dad0 <SafeProcessCommands+0x5349>
 807da4a:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da50:	8b 00                	mov    (%eax),%eax
 807da52:	c1 e8 10             	shr    $0x10,%eax
 807da55:	89 c2                	mov    %eax,%edx
 807da57:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da5d:	89 10                	mov    %edx,(%eax)
 807da5f:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da65:	8b 40 04             	mov    0x4(%eax),%eax
 807da68:	83 f0 10             	xor    $0x10,%eax
 807da6b:	89 c2                	mov    %eax,%edx
 807da6d:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da73:	89 50 04             	mov    %edx,0x4(%eax)
 807da76:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da7c:	8b 10                	mov    (%eax),%edx
 807da7e:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807da84:	8b 40 08             	mov    0x8(%eax),%eax
 807da87:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 807da8d:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 807da93:	0f b7 00             	movzwl (%eax),%eax
 807da96:	0f b7 c0             	movzwl %ax,%eax
 807da99:	c1 e0 10             	shl    $0x10,%eax
 807da9c:	09 c2                	or     %eax,%edx
 807da9e:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807daa4:	89 10                	mov    %edx,(%eax)
 807daa6:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807daac:	8b 40 0c             	mov    0xc(%eax),%eax
 807daaf:	8d 50 fe             	lea    -0x2(%eax),%edx
 807dab2:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807dab8:	89 50 0c             	mov    %edx,0xc(%eax)
 807dabb:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807dac1:	8b 40 08             	mov    0x8(%eax),%eax
 807dac4:	8d 50 02             	lea    0x2(%eax),%edx
 807dac7:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807dacd:	89 50 08             	mov    %edx,0x8(%eax)
 807dad0:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807dad6:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 807dadc:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807dae2:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 807dae8:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807daeb:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 807daf1:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 807daf7:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%ebp)
 807dafd:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 807db03:	8b 10                	mov    (%eax),%edx
 807db05:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 807db0b:	8b 40 04             	mov    0x4(%eax),%eax
 807db0e:	89 c1                	mov    %eax,%ecx
 807db10:	d3 ea                	shr    %cl,%edx
 807db12:	89 d0                	mov    %edx,%eax
 807db14:	89 c2                	mov    %eax,%edx
 807db16:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 807db1c:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 807db22:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 807db28:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807db2f:	21 c2                	and    %eax,%edx
 807db31:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 807db37:	89 10                	mov    %edx,(%eax)
 807db39:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 807db3f:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 807db45:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 807db4b:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 807db51:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807db57:	8b 50 04             	mov    0x4(%eax),%edx
 807db5a:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 807db60:	01 c2                	add    %eax,%edx
 807db62:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807db68:	89 50 04             	mov    %edx,0x4(%eax)
 807db6b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807db6e:	e9 a6 02 00 00       	jmp    807de19 <SafeProcessCommands+0x5692>
 807db73:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807db79:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 807db7f:	c7 85 fc fe ff ff 10 	movl   $0x10,-0x104(%ebp)
 807db86:	00 00 00 
 807db89:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807db8f:	8b 40 04             	mov    0x4(%eax),%eax
 807db92:	83 f8 0f             	cmp    $0xf,%eax
 807db95:	0f 86 86 00 00 00    	jbe    807dc21 <SafeProcessCommands+0x549a>
 807db9b:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dba1:	8b 00                	mov    (%eax),%eax
 807dba3:	c1 e8 10             	shr    $0x10,%eax
 807dba6:	89 c2                	mov    %eax,%edx
 807dba8:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbae:	89 10                	mov    %edx,(%eax)
 807dbb0:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbb6:	8b 40 04             	mov    0x4(%eax),%eax
 807dbb9:	83 f0 10             	xor    $0x10,%eax
 807dbbc:	89 c2                	mov    %eax,%edx
 807dbbe:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbc4:	89 50 04             	mov    %edx,0x4(%eax)
 807dbc7:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbcd:	8b 10                	mov    (%eax),%edx
 807dbcf:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbd5:	8b 40 08             	mov    0x8(%eax),%eax
 807dbd8:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 807dbde:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 807dbe4:	0f b7 00             	movzwl (%eax),%eax
 807dbe7:	0f b7 c0             	movzwl %ax,%eax
 807dbea:	c1 e0 10             	shl    $0x10,%eax
 807dbed:	09 c2                	or     %eax,%edx
 807dbef:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbf5:	89 10                	mov    %edx,(%eax)
 807dbf7:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dbfd:	8b 40 0c             	mov    0xc(%eax),%eax
 807dc00:	8d 50 fe             	lea    -0x2(%eax),%edx
 807dc03:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dc09:	89 50 0c             	mov    %edx,0xc(%eax)
 807dc0c:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dc12:	8b 40 08             	mov    0x8(%eax),%eax
 807dc15:	8d 50 02             	lea    0x2(%eax),%edx
 807dc18:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807dc1e:	89 50 08             	mov    %edx,0x8(%eax)
 807dc21:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807dc27:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 807dc2d:	c7 85 08 ff ff ff 10 	movl   $0x10,-0xf8(%ebp)
 807dc34:	00 00 00 
 807dc37:	8d 85 f8 f5 ff ff    	lea    -0xa08(%ebp),%eax
 807dc3d:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 807dc43:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 807dc49:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 807dc4f:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 807dc55:	8b 10                	mov    (%eax),%edx
 807dc57:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 807dc5d:	8b 40 04             	mov    0x4(%eax),%eax
 807dc60:	89 c1                	mov    %eax,%ecx
 807dc62:	d3 ea                	shr    %cl,%edx
 807dc64:	89 d0                	mov    %edx,%eax
 807dc66:	89 c2                	mov    %eax,%edx
 807dc68:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 807dc6e:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 807dc74:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 807dc7a:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807dc81:	21 c2                	and    %eax,%edx
 807dc83:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 807dc89:	89 10                	mov    %edx,(%eax)
 807dc8b:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 807dc91:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%ebp)
 807dc97:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 807dc9d:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 807dca3:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 807dca9:	8b 50 04             	mov    0x4(%eax),%edx
 807dcac:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807dcb2:	01 c2                	add    %eax,%edx
 807dcb4:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 807dcba:	89 50 04             	mov    %edx,0x4(%eax)
 807dcbd:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807dcc3:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 807dcc9:	c7 85 24 ff ff ff 10 	movl   $0x10,-0xdc(%ebp)
 807dcd0:	00 00 00 
 807dcd3:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dcd9:	8b 40 04             	mov    0x4(%eax),%eax
 807dcdc:	83 f8 0f             	cmp    $0xf,%eax
 807dcdf:	0f 86 86 00 00 00    	jbe    807dd6b <SafeProcessCommands+0x55e4>
 807dce5:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dceb:	8b 00                	mov    (%eax),%eax
 807dced:	c1 e8 10             	shr    $0x10,%eax
 807dcf0:	89 c2                	mov    %eax,%edx
 807dcf2:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dcf8:	89 10                	mov    %edx,(%eax)
 807dcfa:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd00:	8b 40 04             	mov    0x4(%eax),%eax
 807dd03:	83 f0 10             	xor    $0x10,%eax
 807dd06:	89 c2                	mov    %eax,%edx
 807dd08:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd0e:	89 50 04             	mov    %edx,0x4(%eax)
 807dd11:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd17:	8b 10                	mov    (%eax),%edx
 807dd19:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd1f:	8b 40 08             	mov    0x8(%eax),%eax
 807dd22:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 807dd28:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 807dd2e:	0f b7 00             	movzwl (%eax),%eax
 807dd31:	0f b7 c0             	movzwl %ax,%eax
 807dd34:	c1 e0 10             	shl    $0x10,%eax
 807dd37:	09 c2                	or     %eax,%edx
 807dd39:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd3f:	89 10                	mov    %edx,(%eax)
 807dd41:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd47:	8b 40 0c             	mov    0xc(%eax),%eax
 807dd4a:	8d 50 fe             	lea    -0x2(%eax),%edx
 807dd4d:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd53:	89 50 0c             	mov    %edx,0xc(%eax)
 807dd56:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd5c:	8b 40 08             	mov    0x8(%eax),%eax
 807dd5f:	8d 50 02             	lea    0x2(%eax),%edx
 807dd62:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807dd68:	89 50 08             	mov    %edx,0x8(%eax)
 807dd6b:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807dd71:	8d 50 f0             	lea    -0x10(%eax),%edx
 807dd74:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807dd7a:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 807dd80:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%ebp)
 807dd86:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807dd89:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 807dd8f:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 807dd95:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 807dd9b:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 807dda1:	8b 10                	mov    (%eax),%edx
 807dda3:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 807dda9:	8b 40 04             	mov    0x4(%eax),%eax
 807ddac:	89 c1                	mov    %eax,%ecx
 807ddae:	d3 ea                	shr    %cl,%edx
 807ddb0:	89 d0                	mov    %edx,%eax
 807ddb2:	89 c2                	mov    %eax,%edx
 807ddb4:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 807ddba:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 807ddc0:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 807ddc6:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807ddcd:	21 c2                	and    %eax,%edx
 807ddcf:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 807ddd5:	89 10                	mov    %edx,(%eax)
 807ddd7:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 807dddd:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 807dde3:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 807dde9:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
 807ddef:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 807ddf5:	8b 50 04             	mov    0x4(%eax),%edx
 807ddf8:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 807ddfe:	01 c2                	add    %eax,%edx
 807de00:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 807de06:	89 50 04             	mov    %edx,0x4(%eax)
 807de09:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807de0c:	c1 e0 10             	shl    $0x10,%eax
 807de0f:	89 c2                	mov    %eax,%edx
 807de11:	8b 85 f8 f5 ff ff    	mov    -0xa08(%ebp),%eax
 807de17:	09 d0                	or     %edx,%eax
 807de19:	89 45 e0             	mov    %eax,-0x20(%ebp)
 807de1c:	e9 78 02 00 00       	jmp    807e099 <SafeProcessCommands+0x5912>
 807de21:	8b 85 f4 f5 ff ff    	mov    -0xa0c(%ebp),%eax
 807de27:	8b 95 18 fe ff ff    	mov    -0x1e8(%ebp),%edx
 807de2d:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 807de31:	0f b6 c0             	movzbl %al,%eax
 807de34:	8b 95 14 fe ff ff    	mov    -0x1ec(%ebp),%edx
 807de3a:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
 807de40:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
 807de46:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807de49:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 807de4f:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%ebp)
 807de56:	0f 84 ce 01 00 00    	je     807e02a <SafeProcessCommands+0x58a3>
 807de5c:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807de62:	89 85 54 ff ff ff    	mov    %eax,-0xac(%ebp)
 807de68:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 807de6e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 807de74:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 807de7a:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%ebp)
 807de80:	83 bd 58 ff ff ff 18 	cmpl   $0x18,-0xa8(%ebp)
 807de87:	0f 86 b0 00 00 00    	jbe    807df3d <SafeProcessCommands+0x57b6>
 807de8d:	e9 74 01 00 00       	jmp    807e006 <SafeProcessCommands+0x587f>
 807de92:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 807de98:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 807de9e:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807dea4:	8b 40 0c             	mov    0xc(%eax),%eax
 807dea7:	85 c0                	test   %eax,%eax
 807dea9:	75 07                	jne    807deb2 <SafeProcessCommands+0x572b>
 807deab:	b8 00 00 00 00       	mov    $0x0,%eax
 807deb0:	eb 7d                	jmp    807df2f <SafeProcessCommands+0x57a8>
 807deb2:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807deb8:	8b 00                	mov    (%eax),%eax
 807deba:	c1 e8 08             	shr    $0x8,%eax
 807debd:	89 c2                	mov    %eax,%edx
 807debf:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807dec5:	89 10                	mov    %edx,(%eax)
 807dec7:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807decd:	8b 10                	mov    (%eax),%edx
 807decf:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807ded5:	8b 40 08             	mov    0x8(%eax),%eax
 807ded8:	0f b6 00             	movzbl (%eax),%eax
 807dedb:	0f b6 c0             	movzbl %al,%eax
 807dede:	c1 e0 18             	shl    $0x18,%eax
 807dee1:	09 c2                	or     %eax,%edx
 807dee3:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807dee9:	89 10                	mov    %edx,(%eax)
 807deeb:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807def1:	8b 40 04             	mov    0x4(%eax),%eax
 807def4:	8d 50 f8             	lea    -0x8(%eax),%edx
 807def7:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807defd:	89 50 04             	mov    %edx,0x4(%eax)
 807df00:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807df06:	8b 40 0c             	mov    0xc(%eax),%eax
 807df09:	8d 50 ff             	lea    -0x1(%eax),%edx
 807df0c:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807df12:	89 50 0c             	mov    %edx,0xc(%eax)
 807df15:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807df1b:	8b 40 08             	mov    0x8(%eax),%eax
 807df1e:	8d 50 01             	lea    0x1(%eax),%edx
 807df21:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807df27:	89 50 08             	mov    %edx,0x8(%eax)
 807df2a:	b8 01 00 00 00       	mov    $0x1,%eax
 807df2f:	85 c0                	test   %eax,%eax
 807df31:	75 0a                	jne    807df3d <SafeProcessCommands+0x57b6>
 807df33:	b8 00 00 00 00       	mov    $0x0,%eax
 807df38:	e9 fe 00 00 00       	jmp    807e03b <SafeProcessCommands+0x58b4>
 807df3d:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 807df43:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 807df49:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 807df4f:	8b 40 04             	mov    0x4(%eax),%eax
 807df52:	ba 20 00 00 00       	mov    $0x20,%edx
 807df57:	29 c2                	sub    %eax,%edx
 807df59:	89 d0                	mov    %edx,%eax
 807df5b:	39 85 58 ff ff ff    	cmp    %eax,-0xa8(%ebp)
 807df61:	0f 87 2b ff ff ff    	ja     807de92 <SafeProcessCommands+0x570b>
 807df67:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 807df6d:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 807df73:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 807df79:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 807df7f:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807df85:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 807df8b:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 807df91:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 807df97:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 807df9d:	8b 10                	mov    (%eax),%edx
 807df9f:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 807dfa5:	8b 40 04             	mov    0x4(%eax),%eax
 807dfa8:	89 c1                	mov    %eax,%ecx
 807dfaa:	d3 ea                	shr    %cl,%edx
 807dfac:	89 d0                	mov    %edx,%eax
 807dfae:	89 c2                	mov    %eax,%edx
 807dfb0:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 807dfb6:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 807dfbc:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 807dfc2:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807dfc9:	21 c2                	and    %eax,%edx
 807dfcb:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 807dfd1:	89 10                	mov    %edx,(%eax)
 807dfd3:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 807dfd9:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 807dfdf:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 807dfe5:	89 45 80             	mov    %eax,-0x80(%ebp)
 807dfe8:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 807dfee:	8b 50 04             	mov    0x4(%eax),%edx
 807dff1:	8b 45 80             	mov    -0x80(%ebp),%eax
 807dff4:	01 c2                	add    %eax,%edx
 807dff6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 807dffc:	89 50 04             	mov    %edx,0x4(%eax)
 807dfff:	b8 01 00 00 00       	mov    $0x1,%eax
 807e004:	eb 35                	jmp    807e03b <SafeProcessCommands+0x58b4>
 807e006:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807e00c:	89 44 24 08          	mov    %eax,0x8(%esp)
 807e010:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax
 807e016:	89 44 24 04          	mov    %eax,0x4(%esp)
 807e01a:	8b 85 54 ff ff ff    	mov    -0xac(%ebp),%eax
 807e020:	89 04 24             	mov    %eax,(%esp)
 807e023:	e8 18 3f 00 00       	call   8081f40 <BrotliSafeReadBits32Slow>
 807e028:	eb 11                	jmp    807e03b <SafeProcessCommands+0x58b4>
 807e02a:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 807e030:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 807e036:	b8 01 00 00 00       	mov    $0x1,%eax
 807e03b:	85 c0                	test   %eax,%eax
 807e03d:	75 5a                	jne    807e099 <SafeProcessCommands+0x5912>
 807e03f:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807e045:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax
 807e04b:	8d 50 01             	lea    0x1(%eax),%edx
 807e04e:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807e054:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)
 807e05a:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807e060:	89 45 84             	mov    %eax,-0x7c(%ebp)
 807e063:	8d 45 e8             	lea    -0x18(%ebp),%eax
 807e066:	89 45 88             	mov    %eax,-0x78(%ebp)
 807e069:	8b 45 88             	mov    -0x78(%ebp),%eax
 807e06c:	8b 10                	mov    (%eax),%edx
 807e06e:	8b 45 84             	mov    -0x7c(%ebp),%eax
 807e071:	89 10                	mov    %edx,(%eax)
 807e073:	8b 45 88             	mov    -0x78(%ebp),%eax
 807e076:	8b 50 04             	mov    0x4(%eax),%edx
 807e079:	8b 45 84             	mov    -0x7c(%ebp),%eax
 807e07c:	89 50 04             	mov    %edx,0x4(%eax)
 807e07f:	8b 45 88             	mov    -0x78(%ebp),%eax
 807e082:	8b 50 08             	mov    0x8(%eax),%edx
 807e085:	8b 45 84             	mov    -0x7c(%ebp),%eax
 807e088:	89 50 08             	mov    %edx,0x8(%eax)
 807e08b:	8b 45 88             	mov    -0x78(%ebp),%eax
 807e08e:	8b 50 0c             	mov    0xc(%eax),%edx
 807e091:	8b 45 84             	mov    -0x7c(%ebp),%eax
 807e094:	89 50 0c             	mov    %edx,0xc(%eax)
 807e097:	eb 3a                	jmp    807e0d3 <SafeProcessCommands+0x594c>
 807e099:	8b 95 f4 f5 ff ff    	mov    -0xa0c(%ebp),%edx
 807e09f:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 807e0a5:	81 c2 88 00 00 00    	add    $0x88,%edx
 807e0ab:	8b 14 90             	mov    (%eax,%edx,4),%edx
 807e0ae:	8b 75 e0             	mov    -0x20(%ebp),%esi
 807e0b1:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807e0b7:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 807e0bd:	89 c1                	mov    %eax,%ecx
 807e0bf:	d3 e6                	shl    %cl,%esi
 807e0c1:	89 f0                	mov    %esi,%eax
 807e0c3:	01 d0                	add    %edx,%eax
 807e0c5:	89 c2                	mov    %eax,%edx
 807e0c7:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807e0cd:	89 90 08 01 00 00    	mov    %edx,0x108(%eax)
 807e0d3:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e0d9:	8b 50 38             	mov    0x38(%eax),%edx
 807e0dc:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e0e2:	8b 40 34             	mov    0x34(%eax),%eax
 807e0e5:	39 c2                	cmp    %eax,%edx
 807e0e7:	74 1d                	je     807e106 <SafeProcessCommands+0x597f>
 807e0e9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e0ef:	8b 50 34             	mov    0x34(%eax),%edx
 807e0f2:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807e0f8:	39 c2                	cmp    %eax,%edx
 807e0fa:	0f 4f d0             	cmovg  %eax,%edx
 807e0fd:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e103:	89 50 38             	mov    %edx,0x38(%eax)
 807e106:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e10c:	8b 80 04 01 00 00    	mov    0x104(%eax),%eax
 807e112:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807e118:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e11e:	8b 90 08 01 00 00    	mov    0x108(%eax),%edx
 807e124:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e12a:	8b 40 38             	mov    0x38(%eax),%eax
 807e12d:	39 c2                	cmp    %eax,%edx
 807e12f:	0f 8e 1f 02 00 00    	jle    807e354 <SafeProcessCommands+0x5bcd>
 807e135:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e13b:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807e141:	3d fc ff ff 7f       	cmp    $0x7ffffffc,%eax
 807e146:	7e 0a                	jle    807e152 <SafeProcessCommands+0x59cb>
 807e148:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
 807e14d:	e9 cb 04 00 00       	jmp    807e61d <SafeProcessCommands+0x5e96>
 807e152:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e158:	83 f8 03             	cmp    $0x3,%eax
 807e15b:	0f 8e e9 01 00 00    	jle    807e34a <SafeProcessCommands+0x5bc3>
 807e161:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e167:	83 f8 18             	cmp    $0x18,%eax
 807e16a:	0f 8f da 01 00 00    	jg     807e34a <SafeProcessCommands+0x5bc3>
 807e170:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e176:	8b 90 08 01 00 00    	mov    0x108(%eax),%edx
 807e17c:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e182:	8b 40 38             	mov    0x38(%eax),%eax
 807e185:	29 c2                	sub    %eax,%edx
 807e187:	89 d0                	mov    %edx,%eax
 807e189:	83 e8 01             	sub    $0x1,%eax
 807e18c:	89 45 8c             	mov    %eax,-0x74(%ebp)
 807e18f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e195:	8b 80 44 02 00 00    	mov    0x244(%eax),%eax
 807e19b:	89 45 90             	mov    %eax,-0x70(%ebp)
 807e19e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e1a4:	8b 80 48 02 00 00    	mov    0x248(%eax),%eax
 807e1aa:	89 45 94             	mov    %eax,-0x6c(%ebp)
 807e1ad:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e1b3:	8b 80 44 02 00 00    	mov    0x244(%eax),%eax
 807e1b9:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 807e1bf:	83 c2 08             	add    $0x8,%edx
 807e1c2:	8b 04 90             	mov    (%eax,%edx,4),%eax
 807e1c5:	89 45 98             	mov    %eax,-0x68(%ebp)
 807e1c8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e1ce:	8b 90 44 02 00 00    	mov    0x244(%eax),%edx
 807e1d4:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e1da:	0f b6 04 02          	movzbl (%edx,%eax,1),%eax
 807e1de:	0f b6 c0             	movzbl %al,%eax
 807e1e1:	89 45 9c             	mov    %eax,-0x64(%ebp)
 807e1e4:	8b 45 9c             	mov    -0x64(%ebp),%eax
 807e1e7:	89 45 a0             	mov    %eax,-0x60(%ebp)
 807e1ea:	8b 45 a0             	mov    -0x60(%ebp),%eax
 807e1ed:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807e1f4:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 807e1f7:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 807e1fa:	8b 55 8c             	mov    -0x74(%ebp),%edx
 807e1fd:	21 d0                	and    %edx,%eax
 807e1ff:	89 45 a8             	mov    %eax,-0x58(%ebp)
 807e202:	8b 45 9c             	mov    -0x64(%ebp),%eax
 807e205:	8b 55 8c             	mov    -0x74(%ebp),%edx
 807e208:	89 c1                	mov    %eax,%ecx
 807e20a:	d3 fa                	sar    %cl,%edx
 807e20c:	89 d0                	mov    %edx,%eax
 807e20e:	89 45 ac             	mov    %eax,-0x54(%ebp)
 807e211:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e217:	8b 50 44             	mov    0x44(%eax),%edx
 807e21a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e220:	8b 80 b0 00 00 00    	mov    0xb0(%eax),%eax
 807e226:	01 c2                	add    %eax,%edx
 807e228:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e22e:	89 50 44             	mov    %edx,0x44(%eax)
 807e231:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e237:	0f af 45 a8          	imul   -0x58(%ebp),%eax
 807e23b:	01 45 98             	add    %eax,-0x68(%ebp)
 807e23e:	8b 45 90             	mov    -0x70(%ebp),%eax
 807e241:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 807e247:	85 c0                	test   %eax,%eax
 807e249:	0f 94 c0             	sete   %al
 807e24c:	0f b6 c0             	movzbl %al,%eax
 807e24f:	85 c0                	test   %eax,%eax
 807e251:	74 0a                	je     807e25d <SafeProcessCommands+0x5ad6>
 807e253:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
 807e258:	e9 c0 03 00 00       	jmp    807e61d <SafeProcessCommands+0x5e96>
 807e25d:	8b 45 94             	mov    -0x6c(%ebp),%eax
 807e260:	8b 40 0c             	mov    0xc(%eax),%eax
 807e263:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 807e266:	0f 8d d4 00 00 00    	jge    807e340 <SafeProcessCommands+0x5bb9>
 807e26c:	8b 45 90             	mov    -0x70(%ebp),%eax
 807e26f:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
 807e275:	8b 45 98             	mov    -0x68(%ebp),%eax
 807e278:	01 d0                	add    %edx,%eax
 807e27a:	89 45 b0             	mov    %eax,-0x50(%ebp)
 807e27d:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e283:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 807e286:	8b 45 94             	mov    -0x6c(%ebp),%eax
 807e289:	0f b7 40 18          	movzwl 0x18(%eax),%eax
 807e28d:	98                   	cwtl   
 807e28e:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 807e291:	75 29                	jne    807e2bc <SafeProcessCommands+0x5b35>
 807e293:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 807e296:	8b 95 00 f6 ff ff    	mov    -0xa00(%ebp),%edx
 807e29c:	8b 4a 5c             	mov    0x5c(%edx),%ecx
 807e29f:	8b 95 04 f6 ff ff    	mov    -0x9fc(%ebp),%edx
 807e2a5:	01 ca                	add    %ecx,%edx
 807e2a7:	89 44 24 08          	mov    %eax,0x8(%esp)
 807e2ab:	8b 45 b0             	mov    -0x50(%ebp),%eax
 807e2ae:	89 44 24 04          	mov    %eax,0x4(%esp)
 807e2b2:	89 14 24             	mov    %edx,(%esp)
 807e2b5:	e8 f6 58 fd ff       	call   8053bb0 <__interceptor_memcpy>
 807e2ba:	eb 38                	jmp    807e2f4 <SafeProcessCommands+0x5b6d>
 807e2bc:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e2c2:	8b 50 5c             	mov    0x5c(%eax),%edx
 807e2c5:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807e2cb:	01 c2                	add    %eax,%edx
 807e2cd:	8b 45 ac             	mov    -0x54(%ebp),%eax
 807e2d0:	89 44 24 10          	mov    %eax,0x10(%esp)
 807e2d4:	8b 45 94             	mov    -0x6c(%ebp),%eax
 807e2d7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 807e2db:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 807e2de:	89 44 24 08          	mov    %eax,0x8(%esp)
 807e2e2:	8b 45 b0             	mov    -0x50(%ebp),%eax
 807e2e5:	89 44 24 04          	mov    %eax,0x4(%esp)
 807e2e9:	89 14 24             	mov    %edx,(%esp)
 807e2ec:	e8 ae 42 00 00       	call   808259f <BrotliTransformDictionaryWord>
 807e2f1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 807e2f4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 807e2f7:	01 85 04 f6 ff ff    	add    %eax,-0x9fc(%ebp)
 807e2fd:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e303:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807e309:	2b 45 b4             	sub    -0x4c(%ebp),%eax
 807e30c:	89 c2                	mov    %eax,%edx
 807e30e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e314:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 807e31a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e320:	8b 40 3c             	mov    0x3c(%eax),%eax
 807e323:	39 85 04 f6 ff ff    	cmp    %eax,-0x9fc(%ebp)
 807e329:	0f 8c f1 01 00 00    	jl     807e520 <SafeProcessCommands+0x5d99>
 807e32f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e335:	c7 00 0f 00 00 00    	movl   $0xf,(%eax)
 807e33b:	e9 b9 02 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807e340:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
 807e345:	e9 d3 02 00 00       	jmp    807e61d <SafeProcessCommands+0x5e96>
 807e34a:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
 807e34f:	e9 c9 02 00 00       	jmp    807e61d <SafeProcessCommands+0x5e96>
 807e354:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e35a:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807e360:	8b 95 04 f6 ff ff    	mov    -0x9fc(%ebp),%edx
 807e366:	29 c2                	sub    %eax,%edx
 807e368:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e36e:	8b 40 40             	mov    0x40(%eax),%eax
 807e371:	21 d0                	and    %edx,%eax
 807e373:	89 45 b8             	mov    %eax,-0x48(%ebp)
 807e376:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e37c:	8b 50 5c             	mov    0x5c(%eax),%edx
 807e37f:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807e385:	01 d0                	add    %edx,%eax
 807e387:	89 45 bc             	mov    %eax,-0x44(%ebp)
 807e38a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e390:	8b 50 5c             	mov    0x5c(%eax),%edx
 807e393:	8b 45 b8             	mov    -0x48(%ebp),%eax
 807e396:	01 d0                	add    %edx,%eax
 807e398:	89 45 c0             	mov    %eax,-0x40(%ebp)
 807e39b:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 807e3a1:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807e3a7:	01 d0                	add    %edx,%eax
 807e3a9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 807e3ac:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 807e3b2:	8b 45 b8             	mov    -0x48(%ebp),%eax
 807e3b5:	01 d0                	add    %edx,%eax
 807e3b7:	89 45 c8             	mov    %eax,-0x38(%ebp)
 807e3ba:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e3c0:	8b 40 44             	mov    0x44(%eax),%eax
 807e3c3:	83 e0 03             	and    $0x3,%eax
 807e3c6:	89 c1                	mov    %eax,%ecx
 807e3c8:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e3ce:	8b 90 08 01 00 00    	mov    0x108(%eax),%edx
 807e3d4:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e3da:	83 c1 10             	add    $0x10,%ecx
 807e3dd:	89 54 88 08          	mov    %edx,0x8(%eax,%ecx,4)
 807e3e1:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e3e7:	8b 40 44             	mov    0x44(%eax),%eax
 807e3ea:	8d 50 01             	lea    0x1(%eax),%edx
 807e3ed:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e3f3:	89 50 44             	mov    %edx,0x44(%eax)
 807e3f6:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e3fc:	8b 90 b4 00 00 00    	mov    0xb4(%eax),%edx
 807e402:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e408:	29 c2                	sub    %eax,%edx
 807e40a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e410:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 807e416:	8b 45 bc             	mov    -0x44(%ebp),%eax
 807e419:	89 45 cc             	mov    %eax,-0x34(%ebp)
 807e41c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 807e41f:	89 45 d0             	mov    %eax,-0x30(%ebp)
 807e422:	8b 45 d0             	mov    -0x30(%ebp),%eax
 807e425:	8b 10                	mov    (%eax),%edx
 807e427:	89 55 e8             	mov    %edx,-0x18(%ebp)
 807e42a:	8b 50 04             	mov    0x4(%eax),%edx
 807e42d:	89 55 ec             	mov    %edx,-0x14(%ebp)
 807e430:	8b 50 08             	mov    0x8(%eax),%edx
 807e433:	89 55 f0             	mov    %edx,-0x10(%ebp)
 807e436:	8b 40 0c             	mov    0xc(%eax),%eax
 807e439:	89 45 f4             	mov    %eax,-0xc(%ebp)
 807e43c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 807e43f:	8b 55 e8             	mov    -0x18(%ebp),%edx
 807e442:	89 10                	mov    %edx,(%eax)
 807e444:	8b 55 ec             	mov    -0x14(%ebp),%edx
 807e447:	89 50 04             	mov    %edx,0x4(%eax)
 807e44a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 807e44d:	89 50 08             	mov    %edx,0x8(%eax)
 807e450:	8b 55 f4             	mov    -0xc(%ebp),%edx
 807e453:	89 50 0c             	mov    %edx,0xc(%eax)
 807e456:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807e45c:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 807e45f:	7d 0c                	jge    807e46d <SafeProcessCommands+0x5ce6>
 807e461:	8b 45 b8             	mov    -0x48(%ebp),%eax
 807e464:	3b 45 c4             	cmp    -0x3c(%ebp),%eax
 807e467:	0f 8c d8 00 00 00    	jl     807e545 <SafeProcessCommands+0x5dbe>
 807e46d:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e473:	8b 40 3c             	mov    0x3c(%eax),%eax
 807e476:	39 45 c4             	cmp    %eax,-0x3c(%ebp)
 807e479:	0f 8d c6 00 00 00    	jge    807e545 <SafeProcessCommands+0x5dbe>
 807e47f:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e485:	8b 40 3c             	mov    0x3c(%eax),%eax
 807e488:	39 45 c8             	cmp    %eax,-0x38(%ebp)
 807e48b:	0f 8d b4 00 00 00    	jge    807e545 <SafeProcessCommands+0x5dbe>
 807e491:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e497:	01 85 04 f6 ff ff    	add    %eax,-0x9fc(%ebp)
 807e49d:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e4a3:	83 f8 10             	cmp    $0x10,%eax
 807e4a6:	7e 78                	jle    807e520 <SafeProcessCommands+0x5d99>
 807e4a8:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e4ae:	83 f8 20             	cmp    $0x20,%eax
 807e4b1:	7e 27                	jle    807e4da <SafeProcessCommands+0x5d53>
 807e4b3:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e4b9:	83 e8 10             	sub    $0x10,%eax
 807e4bc:	8b 55 c0             	mov    -0x40(%ebp),%edx
 807e4bf:	8d 4a 10             	lea    0x10(%edx),%ecx
 807e4c2:	8b 55 bc             	mov    -0x44(%ebp),%edx
 807e4c5:	83 c2 10             	add    $0x10,%edx
 807e4c8:	89 44 24 08          	mov    %eax,0x8(%esp)
 807e4cc:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 807e4d0:	89 14 24             	mov    %edx,(%esp)
 807e4d3:	e8 d8 56 fd ff       	call   8053bb0 <__interceptor_memcpy>
 807e4d8:	eb 46                	jmp    807e520 <SafeProcessCommands+0x5d99>
 807e4da:	8b 45 c0             	mov    -0x40(%ebp),%eax
 807e4dd:	83 c0 10             	add    $0x10,%eax
 807e4e0:	8b 55 bc             	mov    -0x44(%ebp),%edx
 807e4e3:	83 c2 10             	add    $0x10,%edx
 807e4e6:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 807e4e9:	89 45 d8             	mov    %eax,-0x28(%ebp)
 807e4ec:	8b 45 d8             	mov    -0x28(%ebp),%eax
 807e4ef:	8b 10                	mov    (%eax),%edx
 807e4f1:	89 55 e8             	mov    %edx,-0x18(%ebp)
 807e4f4:	8b 50 04             	mov    0x4(%eax),%edx
 807e4f7:	89 55 ec             	mov    %edx,-0x14(%ebp)
 807e4fa:	8b 50 08             	mov    0x8(%eax),%edx
 807e4fd:	89 55 f0             	mov    %edx,-0x10(%ebp)
 807e500:	8b 40 0c             	mov    0xc(%eax),%eax
 807e503:	89 45 f4             	mov    %eax,-0xc(%ebp)
 807e506:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 807e509:	8b 55 e8             	mov    -0x18(%ebp),%edx
 807e50c:	89 10                	mov    %edx,(%eax)
 807e50e:	8b 55 ec             	mov    -0x14(%ebp),%edx
 807e511:	89 50 04             	mov    %edx,0x4(%eax)
 807e514:	8b 55 f0             	mov    -0x10(%ebp),%edx
 807e517:	89 50 08             	mov    %edx,0x8(%eax)
 807e51a:	8b 55 f4             	mov    -0xc(%ebp),%edx
 807e51d:	89 50 0c             	mov    %edx,0xc(%eax)
 807e520:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e526:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807e52c:	85 c0                	test   %eax,%eax
 807e52e:	0f 8f 86 a3 ff ff    	jg     80788ba <SafeProcessCommands+0x133>
 807e534:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e53a:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 807e540:	e9 b4 00 00 00       	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807e545:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e54b:	8b 40 3c             	mov    0x3c(%eax),%eax
 807e54e:	2b 85 04 f6 ff ff    	sub    -0x9fc(%ebp),%eax
 807e554:	89 45 dc             	mov    %eax,-0x24(%ebp)
 807e557:	eb 67                	jmp    807e5c0 <SafeProcessCommands+0x5e39>
 807e559:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e55f:	8b 50 5c             	mov    0x5c(%eax),%edx
 807e562:	8b 85 04 f6 ff ff    	mov    -0x9fc(%ebp),%eax
 807e568:	01 c2                	add    %eax,%edx
 807e56a:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e570:	8b 48 5c             	mov    0x5c(%eax),%ecx
 807e573:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e579:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
 807e57f:	8b b5 04 f6 ff ff    	mov    -0x9fc(%ebp),%esi
 807e585:	29 c6                	sub    %eax,%esi
 807e587:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e58d:	8b 40 40             	mov    0x40(%eax),%eax
 807e590:	21 f0                	and    %esi,%eax
 807e592:	01 c8                	add    %ecx,%eax
 807e594:	0f b6 00             	movzbl (%eax),%eax
 807e597:	88 02                	mov    %al,(%edx)
 807e599:	83 85 04 f6 ff ff 01 	addl   $0x1,-0x9fc(%ebp)
 807e5a0:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)
 807e5a4:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 807e5a8:	0f 94 c0             	sete   %al
 807e5ab:	0f b6 c0             	movzbl %al,%eax
 807e5ae:	85 c0                	test   %eax,%eax
 807e5b0:	74 0e                	je     807e5c0 <SafeProcessCommands+0x5e39>
 807e5b2:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e5b8:	c7 00 10 00 00 00    	movl   $0x10,(%eax)
 807e5be:	eb 39                	jmp    807e5f9 <SafeProcessCommands+0x5e72>
 807e5c0:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e5c6:	83 e8 01             	sub    $0x1,%eax
 807e5c9:	89 85 e8 f5 ff ff    	mov    %eax,-0xa18(%ebp)
 807e5cf:	8b 85 e8 f5 ff ff    	mov    -0xa18(%ebp),%eax
 807e5d5:	85 c0                	test   %eax,%eax
 807e5d7:	79 80                	jns    807e559 <SafeProcessCommands+0x5dd2>
 807e5d9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e5df:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807e5e5:	85 c0                	test   %eax,%eax
 807e5e7:	0f 8f cd a2 ff ff    	jg     80788ba <SafeProcessCommands+0x133>
 807e5ed:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e5f3:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 807e5f9:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e5ff:	8b 95 04 f6 ff ff    	mov    -0x9fc(%ebp),%edx
 807e605:	89 50 30             	mov    %edx,0x30(%eax)
 807e608:	8b 95 e8 f5 ff ff    	mov    -0xa18(%ebp),%edx
 807e60e:	8b 85 00 f6 ff ff    	mov    -0xa00(%ebp),%eax
 807e614:	89 50 04             	mov    %edx,0x4(%eax)
 807e617:	8b 85 08 f6 ff ff    	mov    -0x9f8(%ebp),%eax
 807e61d:	81 c4 40 0a 00 00    	add    $0xa40,%esp
 807e623:	5b                   	pop    %ebx
 807e624:	5e                   	pop    %esi
 807e625:	5d                   	pop    %ebp
 807e626:	c3                   	ret    

0807e627 <BrotliDecoderDecompress>:
 807e627:	55                   	push   %ebp
 807e628:	89 e5                	mov    %esp,%ebp
 807e62a:	53                   	push   %ebx
 807e62b:	81 ec e4 13 00 00    	sub    $0x13e4,%esp
 807e631:	e8 ba b4 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 807e636:	81 c3 ca 19 03 00    	add    $0x319ca,%ebx
 807e63c:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e63f:	89 85 44 ec ff ff    	mov    %eax,-0x13bc(%ebp)
 807e645:	8b 45 10             	mov    0x10(%ebp),%eax
 807e648:	89 85 40 ec ff ff    	mov    %eax,-0x13c0(%ebp)
 807e64e:	8b 45 14             	mov    0x14(%ebp),%eax
 807e651:	89 85 3c ec ff ff    	mov    %eax,-0x13c4(%ebp)
 807e657:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 807e65d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 807e660:	31 c0                	xor    %eax,%eax
 807e662:	c7 85 48 ec ff ff 00 	movl   $0x0,-0x13b8(%ebp)
 807e669:	00 00 00 
 807e66c:	8b 45 08             	mov    0x8(%ebp),%eax
 807e66f:	89 85 4c ec ff ff    	mov    %eax,-0x13b4(%ebp)
 807e675:	8b 85 44 ec ff ff    	mov    -0x13bc(%ebp),%eax
 807e67b:	89 85 50 ec ff ff    	mov    %eax,-0x13b0(%ebp)
 807e681:	8b 85 40 ec ff ff    	mov    -0x13c0(%ebp),%eax
 807e687:	8b 00                	mov    (%eax),%eax
 807e689:	89 85 54 ec ff ff    	mov    %eax,-0x13ac(%ebp)
 807e68f:	8b 85 3c ec ff ff    	mov    -0x13c4(%ebp),%eax
 807e695:	89 85 58 ec ff ff    	mov    %eax,-0x13a8(%ebp)
 807e69b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 807e6a2:	00 
 807e6a3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 807e6aa:	00 
 807e6ab:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 807e6b2:	00 
 807e6b3:	8d 85 60 ec ff ff    	lea    -0x13a0(%ebp),%eax
 807e6b9:	89 04 24             	mov    %eax,(%esp)
 807e6bc:	e8 b9 30 00 00       	call   808177a <BrotliDecoderStateInit>
 807e6c1:	85 c0                	test   %eax,%eax
 807e6c3:	75 07                	jne    807e6cc <BrotliDecoderDecompress+0xa5>
 807e6c5:	b8 00 00 00 00       	mov    $0x0,%eax
 807e6ca:	eb 7b                	jmp    807e747 <BrotliDecoderDecompress+0x120>
 807e6cc:	8d 85 48 ec ff ff    	lea    -0x13b8(%ebp),%eax
 807e6d2:	89 44 24 14          	mov    %eax,0x14(%esp)
 807e6d6:	8d 85 58 ec ff ff    	lea    -0x13a8(%ebp),%eax
 807e6dc:	89 44 24 10          	mov    %eax,0x10(%esp)
 807e6e0:	8d 85 54 ec ff ff    	lea    -0x13ac(%ebp),%eax
 807e6e6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 807e6ea:	8d 85 50 ec ff ff    	lea    -0x13b0(%ebp),%eax
 807e6f0:	89 44 24 08          	mov    %eax,0x8(%esp)
 807e6f4:	8d 85 4c ec ff ff    	lea    -0x13b4(%ebp),%eax
 807e6fa:	89 44 24 04          	mov    %eax,0x4(%esp)
 807e6fe:	8d 85 60 ec ff ff    	lea    -0x13a0(%ebp),%eax
 807e704:	89 04 24             	mov    %eax,(%esp)
 807e707:	e8 55 00 00 00       	call   807e761 <BrotliDecoderDecompressStream>
 807e70c:	89 85 5c ec ff ff    	mov    %eax,-0x13a4(%ebp)
 807e712:	8b 95 48 ec ff ff    	mov    -0x13b8(%ebp),%edx
 807e718:	8b 85 40 ec ff ff    	mov    -0x13c0(%ebp),%eax
 807e71e:	89 10                	mov    %edx,(%eax)
 807e720:	8d 85 60 ec ff ff    	lea    -0x13a0(%ebp),%eax
 807e726:	89 04 24             	mov    %eax,(%esp)
 807e729:	e8 57 35 00 00       	call   8081c85 <BrotliDecoderStateCleanup>
 807e72e:	83 bd 5c ec ff ff 01 	cmpl   $0x1,-0x13a4(%ebp)
 807e735:	74 0a                	je     807e741 <BrotliDecoderDecompress+0x11a>
 807e737:	c7 85 5c ec ff ff 00 	movl   $0x0,-0x13a4(%ebp)
 807e73e:	00 00 00 
 807e741:	8b 85 5c ec ff ff    	mov    -0x13a4(%ebp),%eax
 807e747:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 807e74a:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 807e751:	74 05                	je     807e758 <BrotliDecoderDecompress+0x131>
 807e753:	e8 68 44 00 00       	call   8082bc0 <__stack_chk_fail_local>
 807e758:	81 c4 e4 13 00 00    	add    $0x13e4,%esp
 807e75e:	5b                   	pop    %ebx
 807e75f:	5d                   	pop    %ebp
 807e760:	c3                   	ret    

0807e761 <BrotliDecoderDecompressStream>:
 807e761:	55                   	push   %ebp
 807e762:	89 e5                	mov    %esp,%ebp
 807e764:	57                   	push   %edi
 807e765:	56                   	push   %esi
 807e766:	53                   	push   %ebx
 807e767:	81 ec 6c 02 00 00    	sub    $0x26c,%esp
 807e76d:	e8 7e b3 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 807e772:	81 c3 8e 18 03 00    	add    $0x3188e,%ebx
 807e778:	c7 85 b0 fd ff ff 01 	movl   $0x1,-0x250(%ebp)
 807e77f:	00 00 00 
 807e782:	8b 45 08             	mov    0x8(%ebp),%eax
 807e785:	83 c0 08             	add    $0x8,%eax
 807e788:	89 85 c0 fd ff ff    	mov    %eax,-0x240(%ebp)
 807e78e:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
 807e792:	74 0e                	je     807e7a2 <BrotliDecoderDecompressStream+0x41>
 807e794:	8b 45 08             	mov    0x8(%ebp),%eax
 807e797:	8b 90 10 01 00 00    	mov    0x110(%eax),%edx
 807e79d:	8b 45 1c             	mov    0x1c(%ebp),%eax
 807e7a0:	89 10                	mov    %edx,(%eax)
 807e7a2:	8b 45 08             	mov    0x8(%ebp),%eax
 807e7a5:	8b 40 58             	mov    0x58(%eax),%eax
 807e7a8:	85 c0                	test   %eax,%eax
 807e7aa:	79 0a                	jns    807e7b6 <BrotliDecoderDecompressStream+0x55>
 807e7ac:	b8 00 00 00 00       	mov    $0x0,%eax
 807e7b1:	e9 32 1f 00 00       	jmp    80806e8 <.L1882+0x74>
 807e7b6:	8b 45 14             	mov    0x14(%ebp),%eax
 807e7b9:	8b 00                	mov    (%eax),%eax
 807e7bb:	85 c0                	test   %eax,%eax
 807e7bd:	74 27                	je     807e7e6 <BrotliDecoderDecompressStream+0x85>
 807e7bf:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
 807e7c3:	74 09                	je     807e7ce <BrotliDecoderDecompressStream+0x6d>
 807e7c5:	8b 45 18             	mov    0x18(%ebp),%eax
 807e7c8:	8b 00                	mov    (%eax),%eax
 807e7ca:	85 c0                	test   %eax,%eax
 807e7cc:	75 18                	jne    807e7e6 <BrotliDecoderDecompressStream+0x85>
 807e7ce:	c7 44 24 04 ec ff ff 	movl   $0xffffffec,0x4(%esp)
 807e7d5:	ff 
 807e7d6:	8b 45 08             	mov    0x8(%ebp),%eax
 807e7d9:	89 04 24             	mov    %eax,(%esp)
 807e7dc:	e8 5d 8a fe ff       	call   806723e <SaveErrorCode>
 807e7e1:	e9 02 1f 00 00       	jmp    80806e8 <.L1882+0x74>
 807e7e6:	8b 45 14             	mov    0x14(%ebp),%eax
 807e7e9:	8b 00                	mov    (%eax),%eax
 807e7eb:	85 c0                	test   %eax,%eax
 807e7ed:	75 07                	jne    807e7f6 <BrotliDecoderDecompressStream+0x95>
 807e7ef:	c7 45 18 00 00 00 00 	movl   $0x0,0x18(%ebp)
 807e7f6:	8b 45 08             	mov    0x8(%ebp),%eax
 807e7f9:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e7fc:	85 c0                	test   %eax,%eax
 807e7fe:	75 1e                	jne    807e81e <BrotliDecoderDecompressStream+0xbd>
 807e800:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e803:	8b 10                	mov    (%eax),%edx
 807e805:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e80b:	89 50 0c             	mov    %edx,0xc(%eax)
 807e80e:	8b 45 10             	mov    0x10(%ebp),%eax
 807e811:	8b 10                	mov    (%eax),%edx
 807e813:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e819:	89 50 08             	mov    %edx,0x8(%eax)
 807e81c:	eb 1c                	jmp    807e83a <BrotliDecoderDecompressStream+0xd9>
 807e81e:	c7 85 b0 fd ff ff 02 	movl   $0x2,-0x250(%ebp)
 807e825:	00 00 00 
 807e828:	8b 45 08             	mov    0x8(%ebp),%eax
 807e82b:	8d 50 24             	lea    0x24(%eax),%edx
 807e82e:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e834:	89 50 08             	mov    %edx,0x8(%eax)
 807e837:	eb 01                	jmp    807e83a <BrotliDecoderDecompressStream+0xd9>
 807e839:	90                   	nop
 807e83a:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807e841:	0f 84 80 02 00 00    	je     807eac7 <BrotliDecoderDecompressStream+0x366>
 807e847:	83 bd b0 fd ff ff 02 	cmpl   $0x2,-0x250(%ebp)
 807e84e:	0f 85 76 01 00 00    	jne    807e9ca <BrotliDecoderDecompressStream+0x269>
 807e854:	8b 45 08             	mov    0x8(%ebp),%eax
 807e857:	8b 40 5c             	mov    0x5c(%eax),%eax
 807e85a:	85 c0                	test   %eax,%eax
 807e85c:	74 48                	je     807e8a6 <BrotliDecoderDecompressStream+0x145>
 807e85e:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 807e865:	00 
 807e866:	8b 45 1c             	mov    0x1c(%ebp),%eax
 807e869:	89 44 24 0c          	mov    %eax,0xc(%esp)
 807e86d:	8b 45 18             	mov    0x18(%ebp),%eax
 807e870:	89 44 24 08          	mov    %eax,0x8(%esp)
 807e874:	8b 45 14             	mov    0x14(%ebp),%eax
 807e877:	89 44 24 04          	mov    %eax,0x4(%esp)
 807e87b:	8b 45 08             	mov    0x8(%ebp),%eax
 807e87e:	89 04 24             	mov    %eax,(%esp)
 807e881:	e8 49 37 ff ff       	call   8071fcf <WriteRingBuffer>
 807e886:	89 85 c4 fd ff ff    	mov    %eax,-0x23c(%ebp)
 807e88c:	83 bd c4 fd ff ff 00 	cmpl   $0x0,-0x23c(%ebp)
 807e893:	79 11                	jns    807e8a6 <BrotliDecoderDecompressStream+0x145>
 807e895:	8b 85 c4 fd ff ff    	mov    -0x23c(%ebp),%eax
 807e89b:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807e8a1:	e9 2d 1e 00 00       	jmp    80806d3 <.L1882+0x5f>
 807e8a6:	8b 45 08             	mov    0x8(%ebp),%eax
 807e8a9:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e8ac:	85 c0                	test   %eax,%eax
 807e8ae:	0f 84 ac 00 00 00    	je     807e960 <BrotliDecoderDecompressStream+0x1ff>
 807e8b4:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e8ba:	8b 40 0c             	mov    0xc(%eax),%eax
 807e8bd:	85 c0                	test   %eax,%eax
 807e8bf:	75 35                	jne    807e8f6 <BrotliDecoderDecompressStream+0x195>
 807e8c1:	8b 45 08             	mov    0x8(%ebp),%eax
 807e8c4:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
 807e8cb:	c7 85 b0 fd ff ff 01 	movl   $0x1,-0x250(%ebp)
 807e8d2:	00 00 00 
 807e8d5:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e8d8:	8b 10                	mov    (%eax),%edx
 807e8da:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e8e0:	89 50 0c             	mov    %edx,0xc(%eax)
 807e8e3:	8b 45 10             	mov    0x10(%ebp),%eax
 807e8e6:	8b 10                	mov    (%eax),%edx
 807e8e8:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e8ee:	89 50 08             	mov    %edx,0x8(%eax)
 807e8f1:	e9 d8 1d 00 00       	jmp    80806ce <.L1882+0x5a>
 807e8f6:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e8f9:	8b 00                	mov    (%eax),%eax
 807e8fb:	85 c0                	test   %eax,%eax
 807e8fd:	74 5c                	je     807e95b <BrotliDecoderDecompressStream+0x1fa>
 807e8ff:	c7 85 b0 fd ff ff 01 	movl   $0x1,-0x250(%ebp)
 807e906:	00 00 00 
 807e909:	8b 45 08             	mov    0x8(%ebp),%eax
 807e90c:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e90f:	8b 55 10             	mov    0x10(%ebp),%edx
 807e912:	8b 12                	mov    (%edx),%edx
 807e914:	0f b6 0a             	movzbl (%edx),%ecx
 807e917:	8b 55 08             	mov    0x8(%ebp),%edx
 807e91a:	88 4c 02 24          	mov    %cl,0x24(%edx,%eax,1)
 807e91e:	8b 45 08             	mov    0x8(%ebp),%eax
 807e921:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e924:	8d 50 01             	lea    0x1(%eax),%edx
 807e927:	8b 45 08             	mov    0x8(%ebp),%eax
 807e92a:	89 50 2c             	mov    %edx,0x2c(%eax)
 807e92d:	8b 45 08             	mov    0x8(%ebp),%eax
 807e930:	8b 50 2c             	mov    0x2c(%eax),%edx
 807e933:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e939:	89 50 0c             	mov    %edx,0xc(%eax)
 807e93c:	8b 45 10             	mov    0x10(%ebp),%eax
 807e93f:	8b 00                	mov    (%eax),%eax
 807e941:	8d 50 01             	lea    0x1(%eax),%edx
 807e944:	8b 45 10             	mov    0x10(%ebp),%eax
 807e947:	89 10                	mov    %edx,(%eax)
 807e949:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e94c:	8b 00                	mov    (%eax),%eax
 807e94e:	8d 50 ff             	lea    -0x1(%eax),%edx
 807e951:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e954:	89 10                	mov    %edx,(%eax)
 807e956:	e9 73 1d 00 00       	jmp    80806ce <.L1882+0x5a>
 807e95b:	e9 73 1d 00 00       	jmp    80806d3 <.L1882+0x5f>
 807e960:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e966:	8b 50 08             	mov    0x8(%eax),%edx
 807e969:	8b 45 10             	mov    0x10(%ebp),%eax
 807e96c:	89 10                	mov    %edx,(%eax)
 807e96e:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e974:	8b 50 0c             	mov    0xc(%eax),%edx
 807e977:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e97a:	89 10                	mov    %edx,(%eax)
 807e97c:	eb 3e                	jmp    807e9bc <BrotliDecoderDecompressStream+0x25b>
 807e97e:	8b 45 08             	mov    0x8(%ebp),%eax
 807e981:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e984:	8b 55 10             	mov    0x10(%ebp),%edx
 807e987:	8b 12                	mov    (%edx),%edx
 807e989:	0f b6 0a             	movzbl (%edx),%ecx
 807e98c:	8b 55 08             	mov    0x8(%ebp),%edx
 807e98f:	88 4c 02 24          	mov    %cl,0x24(%edx,%eax,1)
 807e993:	8b 45 08             	mov    0x8(%ebp),%eax
 807e996:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e999:	8d 50 01             	lea    0x1(%eax),%edx
 807e99c:	8b 45 08             	mov    0x8(%ebp),%eax
 807e99f:	89 50 2c             	mov    %edx,0x2c(%eax)
 807e9a2:	8b 45 10             	mov    0x10(%ebp),%eax
 807e9a5:	8b 00                	mov    (%eax),%eax
 807e9a7:	8d 50 01             	lea    0x1(%eax),%edx
 807e9aa:	8b 45 10             	mov    0x10(%ebp),%eax
 807e9ad:	89 10                	mov    %edx,(%eax)
 807e9af:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e9b2:	8b 00                	mov    (%eax),%eax
 807e9b4:	8d 50 ff             	lea    -0x1(%eax),%edx
 807e9b7:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e9ba:	89 10                	mov    %edx,(%eax)
 807e9bc:	8b 45 0c             	mov    0xc(%ebp),%eax
 807e9bf:	8b 00                	mov    (%eax),%eax
 807e9c1:	85 c0                	test   %eax,%eax
 807e9c3:	75 b9                	jne    807e97e <BrotliDecoderDecompressStream+0x21d>
 807e9c5:	e9 09 1d 00 00       	jmp    80806d3 <.L1882+0x5f>
 807e9ca:	8b 45 08             	mov    0x8(%ebp),%eax
 807e9cd:	8b 40 2c             	mov    0x2c(%eax),%eax
 807e9d0:	85 c0                	test   %eax,%eax
 807e9d2:	74 0f                	je     807e9e3 <BrotliDecoderDecompressStream+0x282>
 807e9d4:	8b 45 08             	mov    0x8(%ebp),%eax
 807e9d7:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
 807e9de:	e9 f0 1c 00 00       	jmp    80806d3 <.L1882+0x5f>
 807e9e3:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807e9e9:	89 85 ec fd ff ff    	mov    %eax,-0x214(%ebp)
 807e9ef:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807e9f5:	89 85 f0 fd ff ff    	mov    %eax,-0x210(%ebp)
 807e9fb:	8b 85 f0 fd ff ff    	mov    -0x210(%ebp),%eax
 807ea01:	8b 40 04             	mov    0x4(%eax),%eax
 807ea04:	ba 20 00 00 00       	mov    $0x20,%edx
 807ea09:	29 c2                	sub    %eax,%edx
 807ea0b:	89 d0                	mov    %edx,%eax
 807ea0d:	c1 e8 03             	shr    $0x3,%eax
 807ea10:	89 85 f4 fd ff ff    	mov    %eax,-0x20c(%ebp)
 807ea16:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 807ea1c:	c1 e0 03             	shl    $0x3,%eax
 807ea1f:	89 85 f8 fd ff ff    	mov    %eax,-0x208(%ebp)
 807ea25:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea2b:	8b 50 0c             	mov    0xc(%eax),%edx
 807ea2e:	8b 85 f4 fd ff ff    	mov    -0x20c(%ebp),%eax
 807ea34:	01 c2                	add    %eax,%edx
 807ea36:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea3c:	89 50 0c             	mov    %edx,0xc(%eax)
 807ea3f:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea45:	8b 40 08             	mov    0x8(%eax),%eax
 807ea48:	8b 95 f4 fd ff ff    	mov    -0x20c(%ebp),%edx
 807ea4e:	f7 da                	neg    %edx
 807ea50:	01 c2                	add    %eax,%edx
 807ea52:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea58:	89 50 08             	mov    %edx,0x8(%eax)
 807ea5b:	83 bd f8 fd ff ff 20 	cmpl   $0x20,-0x208(%ebp)
 807ea62:	75 0e                	jne    807ea72 <BrotliDecoderDecompressStream+0x311>
 807ea64:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea6a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 807ea70:	eb 1a                	jmp    807ea8c <BrotliDecoderDecompressStream+0x32b>
 807ea72:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea78:	8b 10                	mov    (%eax),%edx
 807ea7a:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 807ea80:	89 c1                	mov    %eax,%ecx
 807ea82:	d3 e2                	shl    %cl,%edx
 807ea84:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea8a:	89 10                	mov    %edx,(%eax)
 807ea8c:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807ea92:	8b 50 04             	mov    0x4(%eax),%edx
 807ea95:	8b 85 f8 fd ff ff    	mov    -0x208(%ebp),%eax
 807ea9b:	01 c2                	add    %eax,%edx
 807ea9d:	8b 85 ec fd ff ff    	mov    -0x214(%ebp),%eax
 807eaa3:	89 50 04             	mov    %edx,0x4(%eax)
 807eaa6:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807eaac:	8b 50 0c             	mov    0xc(%eax),%edx
 807eaaf:	8b 45 0c             	mov    0xc(%ebp),%eax
 807eab2:	89 10                	mov    %edx,(%eax)
 807eab4:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807eaba:	8b 50 08             	mov    0x8(%eax),%edx
 807eabd:	8b 45 10             	mov    0x10(%ebp),%eax
 807eac0:	89 10                	mov    %edx,(%eax)
 807eac2:	e9 0c 1c 00 00       	jmp    80806d3 <.L1882+0x5f>
 807eac7:	8b 45 08             	mov    0x8(%ebp),%eax
 807eaca:	8b 00                	mov    (%eax),%eax
 807eacc:	83 f8 1a             	cmp    $0x1a,%eax
 807eacf:	0f 87 64 fd ff ff    	ja     807e839 <BrotliDecoderDecompressStream+0xd8>
 807ead5:	c1 e0 02             	shl    $0x2,%eax
 807ead8:	8b 84 18 24 99 fd ff 	mov    -0x266dc(%eax,%ebx,1),%eax
 807eadf:	01 d8                	add    %ebx,%eax
 807eae1:	ff e0                	jmp    *%eax

0807eae3 <.L1860>:
 807eae3:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807eae9:	89 04 24             	mov    %eax,(%esp)
 807eaec:	e8 05 33 00 00       	call   8081df6 <BrotliWarmupBitReader>
 807eaf1:	85 c0                	test   %eax,%eax
 807eaf3:	75 0f                	jne    807eb04 <.L1860+0x21>
 807eaf5:	c7 85 b0 fd ff ff 02 	movl   $0x2,-0x250(%ebp)
 807eafc:	00 00 00 
 807eaff:	e9 ca 1b 00 00       	jmp    80806ce <.L1882+0x5a>
 807eb04:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807eb0a:	89 44 24 04          	mov    %eax,0x4(%esp)
 807eb0e:	8b 45 08             	mov    0x8(%ebp),%eax
 807eb11:	89 04 24             	mov    %eax,(%esp)
 807eb14:	e8 5f 87 fe ff       	call   8067278 <DecodeWindowBits>
 807eb19:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807eb1f:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807eb26:	74 05                	je     807eb2d <.L1860+0x4a>
 807eb28:	e9 a1 1b 00 00       	jmp    80806ce <.L1882+0x5a>
 807eb2d:	8b 45 08             	mov    0x8(%ebp),%eax
 807eb30:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 807eb37:	83 e0 20             	and    $0x20,%eax
 807eb3a:	84 c0                	test   %al,%al
 807eb3c:	74 0e                	je     807eb4c <.L1860+0x69>
 807eb3e:	8b 45 08             	mov    0x8(%ebp),%eax
 807eb41:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
 807eb47:	e9 82 1b 00 00       	jmp    80806ce <.L1882+0x5a>
 807eb4c:	8b 45 08             	mov    0x8(%ebp),%eax
 807eb4f:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
 807eb55:	e9 74 1b 00 00       	jmp    80806ce <.L1882+0x5a>

0807eb5a <.L1862>:
 807eb5a:	8b 45 08             	mov    0x8(%ebp),%eax
 807eb5d:	8d 90 30 02 00 00    	lea    0x230(%eax),%edx
 807eb63:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807eb69:	89 85 fc fd ff ff    	mov    %eax,-0x204(%ebp)
 807eb6f:	c7 85 00 fe ff ff 06 	movl   $0x6,-0x200(%ebp)
 807eb76:	00 00 00 
 807eb79:	89 95 04 fe ff ff    	mov    %edx,-0x1fc(%ebp)
 807eb7f:	e9 ab 00 00 00       	jmp    807ec2f <.L1862+0xd5>
 807eb84:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807eb8a:	89 85 08 fe ff ff    	mov    %eax,-0x1f8(%ebp)
 807eb90:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807eb96:	8b 40 0c             	mov    0xc(%eax),%eax
 807eb99:	85 c0                	test   %eax,%eax
 807eb9b:	75 07                	jne    807eba4 <.L1862+0x4a>
 807eb9d:	b8 00 00 00 00       	mov    $0x0,%eax
 807eba2:	eb 7d                	jmp    807ec21 <.L1862+0xc7>
 807eba4:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebaa:	8b 00                	mov    (%eax),%eax
 807ebac:	c1 e8 08             	shr    $0x8,%eax
 807ebaf:	89 c2                	mov    %eax,%edx
 807ebb1:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebb7:	89 10                	mov    %edx,(%eax)
 807ebb9:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebbf:	8b 10                	mov    (%eax),%edx
 807ebc1:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebc7:	8b 40 08             	mov    0x8(%eax),%eax
 807ebca:	0f b6 00             	movzbl (%eax),%eax
 807ebcd:	0f b6 c0             	movzbl %al,%eax
 807ebd0:	c1 e0 18             	shl    $0x18,%eax
 807ebd3:	09 c2                	or     %eax,%edx
 807ebd5:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebdb:	89 10                	mov    %edx,(%eax)
 807ebdd:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebe3:	8b 40 04             	mov    0x4(%eax),%eax
 807ebe6:	8d 50 f8             	lea    -0x8(%eax),%edx
 807ebe9:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebef:	89 50 04             	mov    %edx,0x4(%eax)
 807ebf2:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ebf8:	8b 40 0c             	mov    0xc(%eax),%eax
 807ebfb:	8d 50 ff             	lea    -0x1(%eax),%edx
 807ebfe:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ec04:	89 50 0c             	mov    %edx,0xc(%eax)
 807ec07:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ec0d:	8b 40 08             	mov    0x8(%eax),%eax
 807ec10:	8d 50 01             	lea    0x1(%eax),%edx
 807ec13:	8b 85 08 fe ff ff    	mov    -0x1f8(%ebp),%eax
 807ec19:	89 50 08             	mov    %edx,0x8(%eax)
 807ec1c:	b8 01 00 00 00       	mov    $0x1,%eax
 807ec21:	85 c0                	test   %eax,%eax
 807ec23:	75 0a                	jne    807ec2f <.L1862+0xd5>
 807ec25:	b8 00 00 00 00       	mov    $0x0,%eax
 807ec2a:	e9 cd 00 00 00       	jmp    807ecfc <.L1862+0x1a2>
 807ec2f:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807ec35:	89 85 0c fe ff ff    	mov    %eax,-0x1f4(%ebp)
 807ec3b:	8b 85 0c fe ff ff    	mov    -0x1f4(%ebp),%eax
 807ec41:	8b 40 04             	mov    0x4(%eax),%eax
 807ec44:	ba 20 00 00 00       	mov    $0x20,%edx
 807ec49:	29 c2                	sub    %eax,%edx
 807ec4b:	89 d0                	mov    %edx,%eax
 807ec4d:	39 85 00 fe ff ff    	cmp    %eax,-0x200(%ebp)
 807ec53:	0f 87 2b ff ff ff    	ja     807eb84 <.L1862+0x2a>
 807ec59:	8b 85 fc fd ff ff    	mov    -0x204(%ebp),%eax
 807ec5f:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%ebp)
 807ec65:	8b 85 00 fe ff ff    	mov    -0x200(%ebp),%eax
 807ec6b:	89 85 14 fe ff ff    	mov    %eax,-0x1ec(%ebp)
 807ec71:	8b 85 04 fe ff ff    	mov    -0x1fc(%ebp),%eax
 807ec77:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%ebp)
 807ec7d:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807ec83:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%ebp)
 807ec89:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 807ec8f:	8b 10                	mov    (%eax),%edx
 807ec91:	8b 85 1c fe ff ff    	mov    -0x1e4(%ebp),%eax
 807ec97:	8b 40 04             	mov    0x4(%eax),%eax
 807ec9a:	89 c1                	mov    %eax,%ecx
 807ec9c:	d3 ea                	shr    %cl,%edx
 807ec9e:	89 d0                	mov    %edx,%eax
 807eca0:	89 c2                	mov    %eax,%edx
 807eca2:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807eca8:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%ebp)
 807ecae:	8b 85 20 fe ff ff    	mov    -0x1e0(%ebp),%eax
 807ecb4:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807ecbb:	21 c2                	and    %eax,%edx
 807ecbd:	8b 85 18 fe ff ff    	mov    -0x1e8(%ebp),%eax
 807ecc3:	89 10                	mov    %edx,(%eax)
 807ecc5:	8b 85 10 fe ff ff    	mov    -0x1f0(%ebp),%eax
 807eccb:	89 85 24 fe ff ff    	mov    %eax,-0x1dc(%ebp)
 807ecd1:	8b 85 14 fe ff ff    	mov    -0x1ec(%ebp),%eax
 807ecd7:	89 85 28 fe ff ff    	mov    %eax,-0x1d8(%ebp)
 807ecdd:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 807ece3:	8b 50 04             	mov    0x4(%eax),%edx
 807ece6:	8b 85 28 fe ff ff    	mov    -0x1d8(%ebp),%eax
 807ecec:	01 c2                	add    %eax,%edx
 807ecee:	8b 85 24 fe ff ff    	mov    -0x1dc(%ebp),%eax
 807ecf4:	89 50 04             	mov    %edx,0x4(%eax)
 807ecf7:	b8 01 00 00 00       	mov    $0x1,%eax
 807ecfc:	85 c0                	test   %eax,%eax
 807ecfe:	75 0f                	jne    807ed0f <.L1862+0x1b5>
 807ed00:	c7 85 b0 fd ff ff 02 	movl   $0x2,-0x250(%ebp)
 807ed07:	00 00 00 
 807ed0a:	e9 bf 19 00 00       	jmp    80806ce <.L1882+0x5a>
 807ed0f:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed12:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 807ed18:	83 f8 09             	cmp    $0x9,%eax
 807ed1b:	76 0e                	jbe    807ed2b <.L1862+0x1d1>
 807ed1d:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed20:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 807ed26:	83 f8 1e             	cmp    $0x1e,%eax
 807ed29:	76 0f                	jbe    807ed3a <.L1862+0x1e0>
 807ed2b:	c7 85 b0 fd ff ff f3 	movl   $0xfffffff3,-0x250(%ebp)
 807ed32:	ff ff ff 
 807ed35:	e9 94 19 00 00       	jmp    80806ce <.L1882+0x5a>
 807ed3a:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed3d:	c7 00 02 00 00 00    	movl   $0x2,(%eax)

0807ed43 <.L1863>:
 807ed43:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed46:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 807ed4c:	ba 01 00 00 00       	mov    $0x1,%edx
 807ed51:	89 c1                	mov    %eax,%ecx
 807ed53:	d3 e2                	shl    %cl,%edx
 807ed55:	89 d0                	mov    %edx,%eax
 807ed57:	8d 50 f0             	lea    -0x10(%eax),%edx
 807ed5a:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed5d:	89 50 34             	mov    %edx,0x34(%eax)
 807ed60:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed63:	8b 40 18             	mov    0x18(%eax),%eax
 807ed66:	8b 55 08             	mov    0x8(%ebp),%edx
 807ed69:	8b 52 20             	mov    0x20(%edx),%edx
 807ed6c:	c7 44 24 04 30 30 00 	movl   $0x3030,0x4(%esp)
 807ed73:	00 
 807ed74:	89 14 24             	mov    %edx,(%esp)
 807ed77:	ff d0                	call   *%eax
 807ed79:	8b 55 08             	mov    0x8(%ebp),%edx
 807ed7c:	89 82 a4 00 00 00    	mov    %eax,0xa4(%edx)
 807ed82:	8b 45 08             	mov    0x8(%ebp),%eax
 807ed85:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 807ed8b:	85 c0                	test   %eax,%eax
 807ed8d:	75 0f                	jne    807ed9e <.L1863+0x5b>
 807ed8f:	c7 85 b0 fd ff ff e2 	movl   $0xffffffe2,-0x250(%ebp)
 807ed96:	ff ff ff 
 807ed99:	e9 30 19 00 00       	jmp    80806ce <.L1882+0x5a>
 807ed9e:	8b 45 08             	mov    0x8(%ebp),%eax
 807eda1:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 807eda7:	8d 90 a0 1d 00 00    	lea    0x1da0(%eax),%edx
 807edad:	8b 45 08             	mov    0x8(%ebp),%eax
 807edb0:	89 90 a8 00 00 00    	mov    %edx,0xa8(%eax)
 807edb6:	8b 45 08             	mov    0x8(%ebp),%eax
 807edb9:	c7 00 03 00 00 00    	movl   $0x3,(%eax)

0807edbf <.L1864>:
 807edbf:	8b 45 08             	mov    0x8(%ebp),%eax
 807edc2:	89 04 24             	mov    %eax,(%esp)
 807edc5:	e8 65 2c 00 00       	call   8081a2f <BrotliDecoderStateMetablockBegin>
 807edca:	8b 45 08             	mov    0x8(%ebp),%eax
 807edcd:	c7 00 04 00 00 00    	movl   $0x4,(%eax)

0807edd3 <.L1865>:
 807edd3:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807edd9:	89 44 24 04          	mov    %eax,0x4(%esp)
 807eddd:	8b 45 08             	mov    0x8(%ebp),%eax
 807ede0:	89 04 24             	mov    %eax,(%esp)
 807ede3:	e8 c9 8b fe ff       	call   80679b1 <DecodeMetaBlockLength>
 807ede8:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807edee:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807edf5:	74 05                	je     807edfc <.L1865+0x29>
 807edf7:	e9 d2 18 00 00       	jmp    80806ce <.L1882+0x5a>
 807edfc:	8b 45 08             	mov    0x8(%ebp),%eax
 807edff:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 807ee06:	83 e0 04             	and    $0x4,%eax
 807ee09:	84 c0                	test   %al,%al
 807ee0b:	75 15                	jne    807ee22 <.L1865+0x4f>
 807ee0d:	8b 45 08             	mov    0x8(%ebp),%eax
 807ee10:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 807ee17:	83 e0 02             	and    $0x2,%eax
 807ee1a:	84 c0                	test   %al,%al
 807ee1c:	0f 84 00 01 00 00    	je     807ef22 <.L1865+0x14f>
 807ee22:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807ee28:	89 85 2c fe ff ff    	mov    %eax,-0x1d4(%ebp)
 807ee2e:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807ee34:	89 85 30 fe ff ff    	mov    %eax,-0x1d0(%ebp)
 807ee3a:	8b 85 30 fe ff ff    	mov    -0x1d0(%ebp),%eax
 807ee40:	8b 40 04             	mov    0x4(%eax),%eax
 807ee43:	ba 20 00 00 00       	mov    $0x20,%edx
 807ee48:	29 c2                	sub    %eax,%edx
 807ee4a:	89 d0                	mov    %edx,%eax
 807ee4c:	83 e0 07             	and    $0x7,%eax
 807ee4f:	89 85 34 fe ff ff    	mov    %eax,-0x1cc(%ebp)
 807ee55:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 807ee5c:	83 bd 34 fe ff ff 00 	cmpl   $0x0,-0x1cc(%ebp)
 807ee63:	0f 84 9b 00 00 00    	je     807ef04 <.L1865+0x131>
 807ee69:	8b 85 2c fe ff ff    	mov    -0x1d4(%ebp),%eax
 807ee6f:	89 85 38 fe ff ff    	mov    %eax,-0x1c8(%ebp)
 807ee75:	8b 85 34 fe ff ff    	mov    -0x1cc(%ebp),%eax
 807ee7b:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%ebp)
 807ee81:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807ee84:	89 85 40 fe ff ff    	mov    %eax,-0x1c0(%ebp)
 807ee8a:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 807ee90:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%ebp)
 807ee96:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 807ee9c:	8b 10                	mov    (%eax),%edx
 807ee9e:	8b 85 44 fe ff ff    	mov    -0x1bc(%ebp),%eax
 807eea4:	8b 40 04             	mov    0x4(%eax),%eax
 807eea7:	89 c1                	mov    %eax,%ecx
 807eea9:	d3 ea                	shr    %cl,%edx
 807eeab:	89 d0                	mov    %edx,%eax
 807eead:	89 c2                	mov    %eax,%edx
 807eeaf:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 807eeb5:	89 85 48 fe ff ff    	mov    %eax,-0x1b8(%ebp)
 807eebb:	8b 85 48 fe ff ff    	mov    -0x1b8(%ebp),%eax
 807eec1:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807eec8:	21 c2                	and    %eax,%edx
 807eeca:	8b 85 40 fe ff ff    	mov    -0x1c0(%ebp),%eax
 807eed0:	89 10                	mov    %edx,(%eax)
 807eed2:	8b 85 38 fe ff ff    	mov    -0x1c8(%ebp),%eax
 807eed8:	89 85 4c fe ff ff    	mov    %eax,-0x1b4(%ebp)
 807eede:	8b 85 3c fe ff ff    	mov    -0x1c4(%ebp),%eax
 807eee4:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%ebp)
 807eeea:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 807eef0:	8b 50 04             	mov    0x4(%eax),%edx
 807eef3:	8b 85 50 fe ff ff    	mov    -0x1b0(%ebp),%eax
 807eef9:	01 c2                	add    %eax,%edx
 807eefb:	8b 85 4c fe ff ff    	mov    -0x1b4(%ebp),%eax
 807ef01:	89 50 04             	mov    %edx,0x4(%eax)
 807ef04:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807ef07:	85 c0                	test   %eax,%eax
 807ef09:	0f 94 c0             	sete   %al
 807ef0c:	0f b6 c0             	movzbl %al,%eax
 807ef0f:	85 c0                	test   %eax,%eax
 807ef11:	75 0f                	jne    807ef22 <.L1865+0x14f>
 807ef13:	c7 85 b0 fd ff ff f2 	movl   $0xfffffff2,-0x250(%ebp)
 807ef1a:	ff ff ff 
 807ef1d:	e9 ac 17 00 00       	jmp    80806ce <.L1882+0x5a>
 807ef22:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef25:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 807ef2c:	83 e0 04             	and    $0x4,%eax
 807ef2f:	84 c0                	test   %al,%al
 807ef31:	74 0e                	je     807ef41 <.L1865+0x16e>
 807ef33:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef36:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
 807ef3c:	e9 8d 17 00 00       	jmp    80806ce <.L1882+0x5a>
 807ef41:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef44:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807ef4a:	85 c0                	test   %eax,%eax
 807ef4c:	75 0e                	jne    807ef5c <.L1865+0x189>
 807ef4e:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef51:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 807ef57:	e9 72 17 00 00       	jmp    80806ce <.L1882+0x5a>
 807ef5c:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef5f:	89 04 24             	mov    %eax,(%esp)
 807ef62:	e8 24 36 ff ff       	call   807258b <BrotliCalculateRingBufferSize>
 807ef67:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef6a:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 807ef71:	83 e0 02             	and    $0x2,%eax
 807ef74:	84 c0                	test   %al,%al
 807ef76:	74 0e                	je     807ef86 <.L1865+0x1b3>
 807ef78:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef7b:	c7 00 0b 00 00 00    	movl   $0xb,(%eax)
 807ef81:	e9 48 17 00 00       	jmp    80806ce <.L1882+0x5a>
 807ef86:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef89:	c7 00 11 00 00 00    	movl   $0x11,(%eax)

0807ef8f <.L1873>:
 807ef8f:	8b 45 08             	mov    0x8(%ebp),%eax
 807ef92:	05 6c 02 00 00       	add    $0x26c,%eax
 807ef97:	89 85 c8 fd ff ff    	mov    %eax,-0x238(%ebp)
 807ef9d:	8b 45 08             	mov    0x8(%ebp),%eax
 807efa0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 807efa7:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807efad:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
 807efb4:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807efba:	8d 90 c8 00 00 00    	lea    0xc8(%eax),%edx
 807efc0:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807efc6:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)
 807efcc:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807efd2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 807efd9:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807efdf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 807efe5:	8b 85 c8 fd ff ff    	mov    -0x238(%ebp),%eax
 807efeb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 807eff2:	8b 45 08             	mov    0x8(%ebp),%eax
 807eff5:	c7 00 12 00 00 00    	movl   $0x12,(%eax)

0807effb <.L1874>:
 807effb:	8b 45 08             	mov    0x8(%ebp),%eax
 807effe:	8b 40 04             	mov    0x4(%eax),%eax
 807f001:	83 f8 02             	cmp    $0x2,%eax
 807f004:	7e 0e                	jle    807f014 <.L1874+0x19>
 807f006:	8b 45 08             	mov    0x8(%ebp),%eax
 807f009:	c7 00 05 00 00 00    	movl   $0x5,(%eax)
 807f00f:	e9 ba 16 00 00       	jmp    80806ce <.L1882+0x5a>
 807f014:	8b 45 08             	mov    0x8(%ebp),%eax
 807f017:	8b 40 04             	mov    0x4(%eax),%eax
 807f01a:	83 c0 30             	add    $0x30,%eax
 807f01d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 807f024:	8b 45 08             	mov    0x8(%ebp),%eax
 807f027:	01 d0                	add    %edx,%eax
 807f029:	83 c0 08             	add    $0x8,%eax
 807f02c:	89 44 24 08          	mov    %eax,0x8(%esp)
 807f030:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807f036:	89 44 24 04          	mov    %eax,0x4(%esp)
 807f03a:	8b 45 08             	mov    0x8(%ebp),%eax
 807f03d:	89 04 24             	mov    %eax,(%esp)
 807f040:	e8 a7 84 fe ff       	call   80674ec <DecodeVarLenUint8>
 807f045:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807f04b:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807f052:	74 05                	je     807f059 <.L1874+0x5e>
 807f054:	e9 75 16 00 00       	jmp    80806ce <.L1882+0x5a>
 807f059:	8b 45 08             	mov    0x8(%ebp),%eax
 807f05c:	8b 40 04             	mov    0x4(%eax),%eax
 807f05f:	8b 55 08             	mov    0x8(%ebp),%edx
 807f062:	8d 48 30             	lea    0x30(%eax),%ecx
 807f065:	8b 54 8a 08          	mov    0x8(%edx,%ecx,4),%edx
 807f069:	8d 4a 01             	lea    0x1(%edx),%ecx
 807f06c:	8b 55 08             	mov    0x8(%ebp),%edx
 807f06f:	83 c0 30             	add    $0x30,%eax
 807f072:	89 4c 82 08          	mov    %ecx,0x8(%edx,%eax,4)
 807f076:	8b 45 08             	mov    0x8(%ebp),%eax
 807f079:	8b 50 04             	mov    0x4(%eax),%edx
 807f07c:	8b 45 08             	mov    0x8(%ebp),%eax
 807f07f:	83 c2 30             	add    $0x30,%edx
 807f082:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 807f086:	83 f8 01             	cmp    $0x1,%eax
 807f089:	77 14                	ja     807f09f <.L1874+0xa4>
 807f08b:	8b 45 08             	mov    0x8(%ebp),%eax
 807f08e:	8b 40 04             	mov    0x4(%eax),%eax
 807f091:	8d 50 01             	lea    0x1(%eax),%edx
 807f094:	8b 45 08             	mov    0x8(%ebp),%eax
 807f097:	89 50 04             	mov    %edx,0x4(%eax)
 807f09a:	e9 2f 16 00 00       	jmp    80806ce <.L1882+0x5a>
 807f09f:	8b 45 08             	mov    0x8(%ebp),%eax
 807f0a2:	c7 00 13 00 00 00    	movl   $0x13,(%eax)

0807f0a8 <.L1875>:
 807f0a8:	8b 45 08             	mov    0x8(%ebp),%eax
 807f0ab:	8b 50 04             	mov    0x4(%eax),%edx
 807f0ae:	8b 45 08             	mov    0x8(%ebp),%eax
 807f0b1:	83 c2 30             	add    $0x30,%edx
 807f0b4:	8b 44 90 08          	mov    0x8(%eax,%edx,4),%eax
 807f0b8:	83 c0 02             	add    $0x2,%eax
 807f0bb:	89 85 cc fd ff ff    	mov    %eax,-0x234(%ebp)
 807f0c1:	8b 45 08             	mov    0x8(%ebp),%eax
 807f0c4:	8b 40 04             	mov    0x4(%eax),%eax
 807f0c7:	69 c0 78 02 00 00    	imul   $0x278,%eax,%eax
 807f0cd:	89 85 d0 fd ff ff    	mov    %eax,-0x230(%ebp)
 807f0d3:	8b 45 08             	mov    0x8(%ebp),%eax
 807f0d6:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
 807f0dc:	8b 95 d0 fd ff ff    	mov    -0x230(%ebp),%edx
 807f0e2:	c1 e2 02             	shl    $0x2,%edx
 807f0e5:	01 c2                	add    %eax,%edx
 807f0e7:	8b 45 08             	mov    0x8(%ebp),%eax
 807f0ea:	89 44 24 10          	mov    %eax,0x10(%esp)
 807f0ee:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 807f0f5:	00 
 807f0f6:	89 54 24 08          	mov    %edx,0x8(%esp)
 807f0fa:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807f100:	89 44 24 04          	mov    %eax,0x4(%esp)
 807f104:	8b 85 cc fd ff ff    	mov    -0x234(%ebp),%eax
 807f10a:	89 04 24             	mov    %eax,(%esp)
 807f10d:	e8 28 ab fe ff       	call   8069c3a <ReadHuffmanCode>
 807f112:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807f118:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807f11f:	74 05                	je     807f126 <.L1875+0x7e>
 807f121:	e9 a8 15 00 00       	jmp    80806ce <.L1882+0x5a>
 807f126:	8b 45 08             	mov    0x8(%ebp),%eax
 807f129:	c7 00 14 00 00 00    	movl   $0x14,(%eax)

0807f12f <.L1876>:
 807f12f:	c7 85 d4 fd ff ff 1a 	movl   $0x1a,-0x22c(%ebp)
 807f136:	00 00 00 
 807f139:	8b 45 08             	mov    0x8(%ebp),%eax
 807f13c:	8b 40 04             	mov    0x4(%eax),%eax
 807f13f:	69 c0 8c 01 00 00    	imul   $0x18c,%eax,%eax
 807f145:	89 85 d8 fd ff ff    	mov    %eax,-0x228(%ebp)
 807f14b:	8b 45 08             	mov    0x8(%ebp),%eax
 807f14e:	8b 80 a8 00 00 00    	mov    0xa8(%eax),%eax
 807f154:	8b 95 d8 fd ff ff    	mov    -0x228(%ebp),%edx
 807f15a:	c1 e2 02             	shl    $0x2,%edx
 807f15d:	01 c2                	add    %eax,%edx
 807f15f:	8b 45 08             	mov    0x8(%ebp),%eax
 807f162:	89 44 24 10          	mov    %eax,0x10(%esp)
 807f166:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 807f16d:	00 
 807f16e:	89 54 24 08          	mov    %edx,0x8(%esp)
 807f172:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 807f178:	89 44 24 04          	mov    %eax,0x4(%esp)
 807f17c:	8b 85 d4 fd ff ff    	mov    -0x22c(%ebp),%eax
 807f182:	89 04 24             	mov    %eax,(%esp)
 807f185:	e8 b0 aa fe ff       	call   8069c3a <ReadHuffmanCode>
 807f18a:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807f190:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807f197:	74 05                	je     807f19e <.L1876+0x6f>
 807f199:	e9 30 15 00 00       	jmp    80806ce <.L1882+0x5a>
 807f19e:	8b 45 08             	mov    0x8(%ebp),%eax
 807f1a1:	c7 00 15 00 00 00    	movl   $0x15,(%eax)

0807f1a7 <.L1877>:
 807f1a7:	8b 45 08             	mov    0x8(%ebp),%eax
 807f1aa:	8b 40 04             	mov    0x4(%eax),%eax
 807f1ad:	69 c0 8c 01 00 00    	imul   $0x18c,%eax,%eax
 807f1b3:	89 85 dc fd ff ff    	mov    %eax,-0x224(%ebp)
 807f1b9:	8b 45 08             	mov    0x8(%ebp),%eax
 807f1bc:	8b 80 a8 00 00 00    	mov    0xa8(%eax),%eax
 807f1c2:	8b 95 dc fd ff ff    	mov    -0x224(%ebp),%edx
 807f1c8:	c1 e2 02             	shl    $0x2,%edx
 807f1cb:	01 c2                	add    %eax,%edx
 807f1cd:	8b 45 08             	mov    0x8(%ebp),%eax
 807f1d0:	8b 40 04             	mov    0x4(%eax),%eax
 807f1d3:	83 c0 2c             	add    $0x2c,%eax
 807f1d6:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 807f1dd:	8b 45 08             	mov    0x8(%ebp),%eax
 807f1e0:	01 c8                	add    %ecx,%eax
 807f1e2:	8d 48 0c             	lea    0xc(%eax),%ecx
 807f1e5:	8b 45 08             	mov    0x8(%ebp),%eax
 807f1e8:	89 85 54 fe ff ff    	mov    %eax,-0x1ac(%ebp)
 807f1ee:	89 8d 58 fe ff ff    	mov    %ecx,-0x1a8(%ebp)
 807f1f4:	89 95 5c fe ff ff    	mov    %edx,-0x1a4(%ebp)
 807f1fa:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807f200:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%ebp)
 807f206:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807f20c:	8b 80 28 02 00 00    	mov    0x228(%eax),%eax
 807f212:	85 c0                	test   %eax,%eax
 807f214:	0f 85 c1 02 00 00    	jne    807f4db <.L1877+0x334>
 807f21a:	8b 85 5c fe ff ff    	mov    -0x1a4(%ebp),%eax
 807f220:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%ebp)
 807f226:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807f22c:	89 85 68 fe ff ff    	mov    %eax,-0x198(%ebp)
 807f232:	8d 45 d8             	lea    -0x28(%ebp),%eax
 807f235:	89 85 6c fe ff ff    	mov    %eax,-0x194(%ebp)
 807f23b:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 807f241:	89 85 70 fe ff ff    	mov    %eax,-0x190(%ebp)
 807f247:	c7 85 74 fe ff ff 0f 	movl   $0xf,-0x18c(%ebp)
 807f24e:	00 00 00 
 807f251:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807f254:	89 85 78 fe ff ff    	mov    %eax,-0x188(%ebp)
 807f25a:	e9 a8 00 00 00       	jmp    807f307 <.L1877+0x160>
 807f25f:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 807f265:	89 85 7c fe ff ff    	mov    %eax,-0x184(%ebp)
 807f26b:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f271:	8b 40 0c             	mov    0xc(%eax),%eax
 807f274:	85 c0                	test   %eax,%eax
 807f276:	75 07                	jne    807f27f <.L1877+0xd8>
 807f278:	b8 00 00 00 00       	mov    $0x0,%eax
 807f27d:	eb 7d                	jmp    807f2fc <.L1877+0x155>
 807f27f:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f285:	8b 00                	mov    (%eax),%eax
 807f287:	c1 e8 08             	shr    $0x8,%eax
 807f28a:	89 c2                	mov    %eax,%edx
 807f28c:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f292:	89 10                	mov    %edx,(%eax)
 807f294:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f29a:	8b 10                	mov    (%eax),%edx
 807f29c:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2a2:	8b 40 08             	mov    0x8(%eax),%eax
 807f2a5:	0f b6 00             	movzbl (%eax),%eax
 807f2a8:	0f b6 c0             	movzbl %al,%eax
 807f2ab:	c1 e0 18             	shl    $0x18,%eax
 807f2ae:	09 c2                	or     %eax,%edx
 807f2b0:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2b6:	89 10                	mov    %edx,(%eax)
 807f2b8:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2be:	8b 40 04             	mov    0x4(%eax),%eax
 807f2c1:	8d 50 f8             	lea    -0x8(%eax),%edx
 807f2c4:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2ca:	89 50 04             	mov    %edx,0x4(%eax)
 807f2cd:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2d3:	8b 40 0c             	mov    0xc(%eax),%eax
 807f2d6:	8d 50 ff             	lea    -0x1(%eax),%edx
 807f2d9:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2df:	89 50 0c             	mov    %edx,0xc(%eax)
 807f2e2:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2e8:	8b 40 08             	mov    0x8(%eax),%eax
 807f2eb:	8d 50 01             	lea    0x1(%eax),%edx
 807f2ee:	8b 85 7c fe ff ff    	mov    -0x184(%ebp),%eax
 807f2f4:	89 50 08             	mov    %edx,0x8(%eax)
 807f2f7:	b8 01 00 00 00       	mov    $0x1,%eax
 807f2fc:	85 c0                	test   %eax,%eax
 807f2fe:	75 07                	jne    807f307 <.L1877+0x160>
 807f300:	b8 00 00 00 00       	mov    $0x0,%eax
 807f305:	eb 77                	jmp    807f37e <.L1877+0x1d7>
 807f307:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 807f30d:	89 85 80 fe ff ff    	mov    %eax,-0x180(%ebp)
 807f313:	8b 85 80 fe ff ff    	mov    -0x180(%ebp),%eax
 807f319:	8b 40 04             	mov    0x4(%eax),%eax
 807f31c:	ba 20 00 00 00       	mov    $0x20,%edx
 807f321:	29 c2                	sub    %eax,%edx
 807f323:	89 d0                	mov    %edx,%eax
 807f325:	39 85 74 fe ff ff    	cmp    %eax,-0x18c(%ebp)
 807f32b:	0f 87 2e ff ff ff    	ja     807f25f <.L1877+0xb8>
 807f331:	8b 85 70 fe ff ff    	mov    -0x190(%ebp),%eax
 807f337:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%ebp)
 807f33d:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807f343:	8b 10                	mov    (%eax),%edx
 807f345:	8b 85 84 fe ff ff    	mov    -0x17c(%ebp),%eax
 807f34b:	8b 40 04             	mov    0x4(%eax),%eax
 807f34e:	89 c1                	mov    %eax,%ecx
 807f350:	d3 ea                	shr    %cl,%edx
 807f352:	89 d0                	mov    %edx,%eax
 807f354:	89 c2                	mov    %eax,%edx
 807f356:	8b 85 74 fe ff ff    	mov    -0x18c(%ebp),%eax
 807f35c:	89 85 88 fe ff ff    	mov    %eax,-0x178(%ebp)
 807f362:	8b 85 88 fe ff ff    	mov    -0x178(%ebp),%eax
 807f368:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807f36f:	21 c2                	and    %eax,%edx
 807f371:	8b 85 78 fe ff ff    	mov    -0x188(%ebp),%eax
 807f377:	89 10                	mov    %edx,(%eax)
 807f379:	b8 01 00 00 00       	mov    $0x1,%eax
 807f37e:	85 c0                	test   %eax,%eax
 807f380:	0f 95 c0             	setne  %al
 807f383:	0f b6 c0             	movzbl %al,%eax
 807f386:	85 c0                	test   %eax,%eax
 807f388:	0f 84 1d 01 00 00    	je     807f4ab <.L1877+0x304>
 807f38e:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807f391:	89 85 8c fe ff ff    	mov    %eax,-0x174(%ebp)
 807f397:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 807f39d:	89 85 90 fe ff ff    	mov    %eax,-0x170(%ebp)
 807f3a3:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 807f3a9:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
 807f3af:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 807f3b5:	0f b6 c0             	movzbl %al,%eax
 807f3b8:	c1 e0 02             	shl    $0x2,%eax
 807f3bb:	01 85 90 fe ff ff    	add    %eax,-0x170(%ebp)
 807f3c1:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807f3c7:	0f b6 00             	movzbl (%eax),%eax
 807f3ca:	3c 08                	cmp    $0x8,%al
 807f3cc:	0f 86 83 00 00 00    	jbe    807f455 <.L1877+0x2ae>
 807f3d2:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807f3d8:	0f b6 00             	movzbl (%eax),%eax
 807f3db:	0f b6 c0             	movzbl %al,%eax
 807f3de:	83 e8 08             	sub    $0x8,%eax
 807f3e1:	89 85 98 fe ff ff    	mov    %eax,-0x168(%ebp)
 807f3e7:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
 807f3ed:	89 85 9c fe ff ff    	mov    %eax,-0x164(%ebp)
 807f3f3:	c7 85 a0 fe ff ff 08 	movl   $0x8,-0x160(%ebp)
 807f3fa:	00 00 00 
 807f3fd:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 807f403:	8b 50 04             	mov    0x4(%eax),%edx
 807f406:	8b 85 a0 fe ff ff    	mov    -0x160(%ebp),%eax
 807f40c:	01 c2                	add    %eax,%edx
 807f40e:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
 807f414:	89 50 04             	mov    %edx,0x4(%eax)
 807f417:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807f41d:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807f421:	0f b7 d0             	movzwl %ax,%edx
 807f424:	8b 85 8c fe ff ff    	mov    -0x174(%ebp),%eax
 807f42a:	c1 e8 08             	shr    $0x8,%eax
 807f42d:	89 c1                	mov    %eax,%ecx
 807f42f:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
 807f435:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%ebp)
 807f43b:	8b 85 a4 fe ff ff    	mov    -0x15c(%ebp),%eax
 807f441:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807f448:	21 c8                	and    %ecx,%eax
 807f44a:	01 d0                	add    %edx,%eax
 807f44c:	c1 e0 02             	shl    $0x2,%eax
 807f44f:	01 85 90 fe ff ff    	add    %eax,-0x170(%ebp)
 807f455:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807f45b:	0f b6 00             	movzbl (%eax),%eax
 807f45e:	0f b6 c0             	movzbl %al,%eax
 807f461:	8b 95 94 fe ff ff    	mov    -0x16c(%ebp),%edx
 807f467:	89 95 a8 fe ff ff    	mov    %edx,-0x158(%ebp)
 807f46d:	89 85 ac fe ff ff    	mov    %eax,-0x154(%ebp)
 807f473:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 807f479:	8b 50 04             	mov    0x4(%eax),%edx
 807f47c:	8b 85 ac fe ff ff    	mov    -0x154(%ebp),%eax
 807f482:	01 c2                	add    %eax,%edx
 807f484:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
 807f48a:	89 50 04             	mov    %edx,0x4(%eax)
 807f48d:	8b 85 90 fe ff ff    	mov    -0x170(%ebp),%eax
 807f493:	0f b7 40 02          	movzwl 0x2(%eax),%eax
 807f497:	0f b7 c0             	movzwl %ax,%eax
 807f49a:	89 c2                	mov    %eax,%edx
 807f49c:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 807f4a2:	89 10                	mov    %edx,(%eax)
 807f4a4:	b8 01 00 00 00       	mov    $0x1,%eax
 807f4a9:	eb 22                	jmp    807f4cd <.L1877+0x326>
 807f4ab:	8b 85 6c fe ff ff    	mov    -0x194(%ebp),%eax
 807f4b1:	89 44 24 08          	mov    %eax,0x8(%esp)
 807f4b5:	8b 85 68 fe ff ff    	mov    -0x198(%ebp),%eax
 807f4bb:	89 44 24 04          	mov    %eax,0x4(%esp)
 807f4bf:	8b 85 64 fe ff ff    	mov    -0x19c(%ebp),%eax
 807f4c5:	89 04 24             	mov    %eax,(%esp)
 807f4c8:	e8 ff 94 fe ff       	call   80689cc <SafeDecodeSymbol>
 807f4cd:	85 c0                	test   %eax,%eax
 807f4cf:	75 19                	jne    807f4ea <.L1877+0x343>
 807f4d1:	b8 00 00 00 00       	mov    $0x0,%eax
 807f4d6:	e9 1b 02 00 00       	jmp    807f6f6 <.L1877+0x54f>
 807f4db:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807f4e1:	8b 80 b8 00 00 00    	mov    0xb8(%eax),%eax
 807f4e7:	89 45 d8             	mov    %eax,-0x28(%ebp)
 807f4ea:	8b 45 d8             	mov    -0x28(%ebp),%eax
 807f4ed:	0f b6 84 83 22 82 fd 	movzbl -0x27dde(%ebx,%eax,4),%eax
 807f4f4:	ff 
 807f4f5:	0f b6 c0             	movzbl %al,%eax
 807f4f8:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%ebp)
 807f4fe:	8b 85 60 fe ff ff    	mov    -0x1a0(%ebp),%eax
 807f504:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%ebp)
 807f50a:	8b 85 b0 fe ff ff    	mov    -0x150(%ebp),%eax
 807f510:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%ebp)
 807f516:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807f519:	89 85 bc fe ff ff    	mov    %eax,-0x144(%ebp)
 807f51f:	e9 ab 00 00 00       	jmp    807f5cf <.L1877+0x428>
 807f524:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807f52a:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%ebp)
 807f530:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f536:	8b 40 0c             	mov    0xc(%eax),%eax
 807f539:	85 c0                	test   %eax,%eax
 807f53b:	75 07                	jne    807f544 <.L1877+0x39d>
 807f53d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f542:	eb 7d                	jmp    807f5c1 <.L1877+0x41a>
 807f544:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f54a:	8b 00                	mov    (%eax),%eax
 807f54c:	c1 e8 08             	shr    $0x8,%eax
 807f54f:	89 c2                	mov    %eax,%edx
 807f551:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f557:	89 10                	mov    %edx,(%eax)
 807f559:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f55f:	8b 10                	mov    (%eax),%edx
 807f561:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f567:	8b 40 08             	mov    0x8(%eax),%eax
 807f56a:	0f b6 00             	movzbl (%eax),%eax
 807f56d:	0f b6 c0             	movzbl %al,%eax
 807f570:	c1 e0 18             	shl    $0x18,%eax
 807f573:	09 c2                	or     %eax,%edx
 807f575:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f57b:	89 10                	mov    %edx,(%eax)
 807f57d:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f583:	8b 40 04             	mov    0x4(%eax),%eax
 807f586:	8d 50 f8             	lea    -0x8(%eax),%edx
 807f589:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f58f:	89 50 04             	mov    %edx,0x4(%eax)
 807f592:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f598:	8b 40 0c             	mov    0xc(%eax),%eax
 807f59b:	8d 50 ff             	lea    -0x1(%eax),%edx
 807f59e:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f5a4:	89 50 0c             	mov    %edx,0xc(%eax)
 807f5a7:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f5ad:	8b 40 08             	mov    0x8(%eax),%eax
 807f5b0:	8d 50 01             	lea    0x1(%eax),%edx
 807f5b3:	8b 85 c0 fe ff ff    	mov    -0x140(%ebp),%eax
 807f5b9:	89 50 08             	mov    %edx,0x8(%eax)
 807f5bc:	b8 01 00 00 00       	mov    $0x1,%eax
 807f5c1:	85 c0                	test   %eax,%eax
 807f5c3:	75 0a                	jne    807f5cf <.L1877+0x428>
 807f5c5:	b8 00 00 00 00       	mov    $0x0,%eax
 807f5ca:	e9 cd 00 00 00       	jmp    807f69c <.L1877+0x4f5>
 807f5cf:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807f5d5:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%ebp)
 807f5db:	8b 85 c4 fe ff ff    	mov    -0x13c(%ebp),%eax
 807f5e1:	8b 40 04             	mov    0x4(%eax),%eax
 807f5e4:	ba 20 00 00 00       	mov    $0x20,%edx
 807f5e9:	29 c2                	sub    %eax,%edx
 807f5eb:	89 d0                	mov    %edx,%eax
 807f5ed:	39 85 b8 fe ff ff    	cmp    %eax,-0x148(%ebp)
 807f5f3:	0f 87 2b ff ff ff    	ja     807f524 <.L1877+0x37d>
 807f5f9:	8b 85 b4 fe ff ff    	mov    -0x14c(%ebp),%eax
 807f5ff:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%ebp)
 807f605:	8b 85 b8 fe ff ff    	mov    -0x148(%ebp),%eax
 807f60b:	89 85 cc fe ff ff    	mov    %eax,-0x134(%ebp)
 807f611:	8b 85 bc fe ff ff    	mov    -0x144(%ebp),%eax
 807f617:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
 807f61d:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807f623:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
 807f629:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807f62f:	8b 10                	mov    (%eax),%edx
 807f631:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
 807f637:	8b 40 04             	mov    0x4(%eax),%eax
 807f63a:	89 c1                	mov    %eax,%ecx
 807f63c:	d3 ea                	shr    %cl,%edx
 807f63e:	89 d0                	mov    %edx,%eax
 807f640:	89 c2                	mov    %eax,%edx
 807f642:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807f648:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)
 807f64e:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
 807f654:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807f65b:	21 c2                	and    %eax,%edx
 807f65d:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
 807f663:	89 10                	mov    %edx,(%eax)
 807f665:	8b 85 c8 fe ff ff    	mov    -0x138(%ebp),%eax
 807f66b:	89 85 dc fe ff ff    	mov    %eax,-0x124(%ebp)
 807f671:	8b 85 cc fe ff ff    	mov    -0x134(%ebp),%eax
 807f677:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)
 807f67d:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 807f683:	8b 50 04             	mov    0x4(%eax),%edx
 807f686:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
 807f68c:	01 c2                	add    %eax,%edx
 807f68e:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
 807f694:	89 50 04             	mov    %edx,0x4(%eax)
 807f697:	b8 01 00 00 00       	mov    $0x1,%eax
 807f69c:	85 c0                	test   %eax,%eax
 807f69e:	75 26                	jne    807f6c6 <.L1877+0x51f>
 807f6a0:	8b 55 d8             	mov    -0x28(%ebp),%edx
 807f6a3:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807f6a9:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)
 807f6af:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807f6b5:	c7 80 28 02 00 00 01 	movl   $0x1,0x228(%eax)
 807f6bc:	00 00 00 
 807f6bf:	b8 00 00 00 00       	mov    $0x0,%eax
 807f6c4:	eb 30                	jmp    807f6f6 <.L1877+0x54f>
 807f6c6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 807f6c9:	0f b7 84 83 20 82 fd 	movzwl -0x27de0(%ebx,%eax,4),%eax
 807f6d0:	ff 
 807f6d1:	0f b7 d0             	movzwl %ax,%edx
 807f6d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807f6d7:	01 c2                	add    %eax,%edx
 807f6d9:	8b 85 58 fe ff ff    	mov    -0x1a8(%ebp),%eax
 807f6df:	89 10                	mov    %edx,(%eax)
 807f6e1:	8b 85 54 fe ff ff    	mov    -0x1ac(%ebp),%eax
 807f6e7:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 807f6ee:	00 00 00 
 807f6f1:	b8 01 00 00 00       	mov    $0x1,%eax
 807f6f6:	85 c0                	test   %eax,%eax
 807f6f8:	75 0f                	jne    807f709 <.L1877+0x562>
 807f6fa:	c7 85 b0 fd ff ff 02 	movl   $0x2,-0x250(%ebp)
 807f701:	00 00 00 
 807f704:	e9 c5 0f 00 00       	jmp    80806ce <.L1882+0x5a>
 807f709:	8b 45 08             	mov    0x8(%ebp),%eax
 807f70c:	8b 40 04             	mov    0x4(%eax),%eax
 807f70f:	8d 50 01             	lea    0x1(%eax),%edx
 807f712:	8b 45 08             	mov    0x8(%ebp),%eax
 807f715:	89 50 04             	mov    %edx,0x4(%eax)
 807f718:	8b 45 08             	mov    0x8(%ebp),%eax
 807f71b:	c7 00 12 00 00 00    	movl   $0x12,(%eax)
 807f721:	e9 a8 0f 00 00       	jmp    80806ce <.L1882+0x5a>

0807f726 <.L1869>:
 807f726:	8b 45 08             	mov    0x8(%ebp),%eax
 807f729:	89 44 24 0c          	mov    %eax,0xc(%esp)
 807f72d:	8b 45 1c             	mov    0x1c(%ebp),%eax
 807f730:	89 44 24 08          	mov    %eax,0x8(%esp)
 807f734:	8b 45 18             	mov    0x18(%ebp),%eax
 807f737:	89 44 24 04          	mov    %eax,0x4(%esp)
 807f73b:	8b 45 14             	mov    0x14(%ebp),%eax
 807f73e:	89 04 24             	mov    %eax,(%esp)
 807f741:	e8 e1 2b ff ff       	call   8072327 <CopyUncompressedBlockToOutput>
 807f746:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807f74c:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807f753:	74 05                	je     807f75a <.L1869+0x34>
 807f755:	e9 74 0f 00 00       	jmp    80806ce <.L1882+0x5a>
 807f75a:	8b 45 08             	mov    0x8(%ebp),%eax
 807f75d:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 807f763:	e9 66 0f 00 00       	jmp    80806ce <.L1882+0x5a>
 807f768:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807f76e:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
 807f774:	c7 85 e8 fe ff ff 08 	movl   $0x8,-0x118(%ebp)
 807f77b:	00 00 00 
 807f77e:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807f781:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)
 807f787:	e9 ab 00 00 00       	jmp    807f837 <.L1869+0x111>
 807f78c:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 807f792:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)
 807f798:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f79e:	8b 40 0c             	mov    0xc(%eax),%eax
 807f7a1:	85 c0                	test   %eax,%eax
 807f7a3:	75 07                	jne    807f7ac <.L1869+0x86>
 807f7a5:	b8 00 00 00 00       	mov    $0x0,%eax
 807f7aa:	eb 7d                	jmp    807f829 <.L1869+0x103>
 807f7ac:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7b2:	8b 00                	mov    (%eax),%eax
 807f7b4:	c1 e8 08             	shr    $0x8,%eax
 807f7b7:	89 c2                	mov    %eax,%edx
 807f7b9:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7bf:	89 10                	mov    %edx,(%eax)
 807f7c1:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7c7:	8b 10                	mov    (%eax),%edx
 807f7c9:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7cf:	8b 40 08             	mov    0x8(%eax),%eax
 807f7d2:	0f b6 00             	movzbl (%eax),%eax
 807f7d5:	0f b6 c0             	movzbl %al,%eax
 807f7d8:	c1 e0 18             	shl    $0x18,%eax
 807f7db:	09 c2                	or     %eax,%edx
 807f7dd:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7e3:	89 10                	mov    %edx,(%eax)
 807f7e5:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7eb:	8b 40 04             	mov    0x4(%eax),%eax
 807f7ee:	8d 50 f8             	lea    -0x8(%eax),%edx
 807f7f1:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f7f7:	89 50 04             	mov    %edx,0x4(%eax)
 807f7fa:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f800:	8b 40 0c             	mov    0xc(%eax),%eax
 807f803:	8d 50 ff             	lea    -0x1(%eax),%edx
 807f806:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f80c:	89 50 0c             	mov    %edx,0xc(%eax)
 807f80f:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f815:	8b 40 08             	mov    0x8(%eax),%eax
 807f818:	8d 50 01             	lea    0x1(%eax),%edx
 807f81b:	8b 85 f0 fe ff ff    	mov    -0x110(%ebp),%eax
 807f821:	89 50 08             	mov    %edx,0x8(%eax)
 807f824:	b8 01 00 00 00       	mov    $0x1,%eax
 807f829:	85 c0                	test   %eax,%eax
 807f82b:	75 0a                	jne    807f837 <.L1869+0x111>
 807f82d:	b8 00 00 00 00       	mov    $0x0,%eax
 807f832:	e9 cd 00 00 00       	jmp    807f904 <.L1869+0x1de>
 807f837:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 807f83d:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)
 807f843:	8b 85 f4 fe ff ff    	mov    -0x10c(%ebp),%eax
 807f849:	8b 40 04             	mov    0x4(%eax),%eax
 807f84c:	ba 20 00 00 00       	mov    $0x20,%edx
 807f851:	29 c2                	sub    %eax,%edx
 807f853:	89 d0                	mov    %edx,%eax
 807f855:	39 85 e8 fe ff ff    	cmp    %eax,-0x118(%ebp)
 807f85b:	0f 87 2b ff ff ff    	ja     807f78c <.L1869+0x66>
 807f861:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
 807f867:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%ebp)
 807f86d:	8b 85 e8 fe ff ff    	mov    -0x118(%ebp),%eax
 807f873:	89 85 fc fe ff ff    	mov    %eax,-0x104(%ebp)
 807f879:	8b 85 ec fe ff ff    	mov    -0x114(%ebp),%eax
 807f87f:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
 807f885:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807f88b:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)
 807f891:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 807f897:	8b 10                	mov    (%eax),%edx
 807f899:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax
 807f89f:	8b 40 04             	mov    0x4(%eax),%eax
 807f8a2:	89 c1                	mov    %eax,%ecx
 807f8a4:	d3 ea                	shr    %cl,%edx
 807f8a6:	89 d0                	mov    %edx,%eax
 807f8a8:	89 c2                	mov    %eax,%edx
 807f8aa:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 807f8b0:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%ebp)
 807f8b6:	8b 85 08 ff ff ff    	mov    -0xf8(%ebp),%eax
 807f8bc:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807f8c3:	21 c2                	and    %eax,%edx
 807f8c5:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
 807f8cb:	89 10                	mov    %edx,(%eax)
 807f8cd:	8b 85 f8 fe ff ff    	mov    -0x108(%ebp),%eax
 807f8d3:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%ebp)
 807f8d9:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
 807f8df:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%ebp)
 807f8e5:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 807f8eb:	8b 50 04             	mov    0x4(%eax),%edx
 807f8ee:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax
 807f8f4:	01 c2                	add    %eax,%edx
 807f8f6:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax
 807f8fc:	89 50 04             	mov    %edx,0x4(%eax)
 807f8ff:	b8 01 00 00 00       	mov    $0x1,%eax
 807f904:	85 c0                	test   %eax,%eax
 807f906:	75 0c                	jne    807f914 <.L1869+0x1ee>
 807f908:	c7 85 b0 fd ff ff 02 	movl   $0x2,-0x250(%ebp)
 807f90f:	00 00 00 
 807f912:	eb 29                	jmp    807f93d <.L2021+0x12>
 807f914:	8b 45 08             	mov    0x8(%ebp),%eax
 807f917:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807f91d:	8d 50 ff             	lea    -0x1(%eax),%edx
 807f920:	8b 45 08             	mov    0x8(%ebp),%eax
 807f923:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)
 807f929:	eb 01                	jmp    807f92c <.L2021+0x1>

0807f92b <.L2021>:
 807f92b:	90                   	nop
 807f92c:	8b 45 08             	mov    0x8(%ebp),%eax
 807f92f:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 807f935:	85 c0                	test   %eax,%eax
 807f937:	0f 8f 2b fe ff ff    	jg     807f768 <.L1869+0x42>
 807f93d:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807f944:	75 0e                	jne    807f954 <.L2021+0x29>
 807f946:	8b 45 08             	mov    0x8(%ebp),%eax
 807f949:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 807f94f:	e9 7a 0d 00 00       	jmp    80806ce <.L1882+0x5a>
 807f954:	e9 75 0d 00 00       	jmp    80806ce <.L1882+0x5a>

0807f959 <.L1866>:
 807f959:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 807f95f:	89 85 14 ff ff ff    	mov    %eax,-0xec(%ebp)
 807f965:	c7 85 18 ff ff ff 06 	movl   $0x6,-0xe8(%ebp)
 807f96c:	00 00 00 
 807f96f:	8d 45 e0             	lea    -0x20(%ebp),%eax
 807f972:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)
 807f978:	e9 ab 00 00 00       	jmp    807fa28 <.L1866+0xcf>
 807f97d:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 807f983:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)
 807f989:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f98f:	8b 40 0c             	mov    0xc(%eax),%eax
 807f992:	85 c0                	test   %eax,%eax
 807f994:	75 07                	jne    807f99d <.L1866+0x44>
 807f996:	b8 00 00 00 00       	mov    $0x0,%eax
 807f99b:	eb 7d                	jmp    807fa1a <.L1866+0xc1>
 807f99d:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9a3:	8b 00                	mov    (%eax),%eax
 807f9a5:	c1 e8 08             	shr    $0x8,%eax
 807f9a8:	89 c2                	mov    %eax,%edx
 807f9aa:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9b0:	89 10                	mov    %edx,(%eax)
 807f9b2:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9b8:	8b 10                	mov    (%eax),%edx
 807f9ba:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9c0:	8b 40 08             	mov    0x8(%eax),%eax
 807f9c3:	0f b6 00             	movzbl (%eax),%eax
 807f9c6:	0f b6 c0             	movzbl %al,%eax
 807f9c9:	c1 e0 18             	shl    $0x18,%eax
 807f9cc:	09 c2                	or     %eax,%edx
 807f9ce:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9d4:	89 10                	mov    %edx,(%eax)
 807f9d6:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9dc:	8b 40 04             	mov    0x4(%eax),%eax
 807f9df:	8d 50 f8             	lea    -0x8(%eax),%edx
 807f9e2:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9e8:	89 50 04             	mov    %edx,0x4(%eax)
 807f9eb:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9f1:	8b 40 0c             	mov    0xc(%eax),%eax
 807f9f4:	8d 50 ff             	lea    -0x1(%eax),%edx
 807f9f7:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807f9fd:	89 50 0c             	mov    %edx,0xc(%eax)
 807fa00:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807fa06:	8b 40 08             	mov    0x8(%eax),%eax
 807fa09:	8d 50 01             	lea    0x1(%eax),%edx
 807fa0c:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax
 807fa12:	89 50 08             	mov    %edx,0x8(%eax)
 807fa15:	b8 01 00 00 00       	mov    $0x1,%eax
 807fa1a:	85 c0                	test   %eax,%eax
 807fa1c:	75 0a                	jne    807fa28 <.L1866+0xcf>
 807fa1e:	b8 00 00 00 00       	mov    $0x0,%eax
 807fa23:	e9 cd 00 00 00       	jmp    807faf5 <.L1866+0x19c>
 807fa28:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 807fa2e:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%ebp)
 807fa34:	8b 85 24 ff ff ff    	mov    -0xdc(%ebp),%eax
 807fa3a:	8b 40 04             	mov    0x4(%eax),%eax
 807fa3d:	ba 20 00 00 00       	mov    $0x20,%edx
 807fa42:	29 c2                	sub    %eax,%edx
 807fa44:	89 d0                	mov    %edx,%eax
 807fa46:	39 85 18 ff ff ff    	cmp    %eax,-0xe8(%ebp)
 807fa4c:	0f 87 2b ff ff ff    	ja     807f97d <.L1866+0x24>
 807fa52:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
 807fa58:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%ebp)
 807fa5e:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax
 807fa64:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
 807fa6a:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax
 807fa70:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%ebp)
 807fa76:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 807fa7c:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%ebp)
 807fa82:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 807fa88:	8b 10                	mov    (%eax),%edx
 807fa8a:	8b 85 34 ff ff ff    	mov    -0xcc(%ebp),%eax
 807fa90:	8b 40 04             	mov    0x4(%eax),%eax
 807fa93:	89 c1                	mov    %eax,%ecx
 807fa95:	d3 ea                	shr    %cl,%edx
 807fa97:	89 d0                	mov    %edx,%eax
 807fa99:	89 c2                	mov    %eax,%edx
 807fa9b:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 807faa1:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
 807faa7:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
 807faad:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807fab4:	21 c2                	and    %eax,%edx
 807fab6:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
 807fabc:	89 10                	mov    %edx,(%eax)
 807fabe:	8b 85 28 ff ff ff    	mov    -0xd8(%ebp),%eax
 807fac4:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%ebp)
 807faca:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
 807fad0:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
 807fad6:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 807fadc:	8b 50 04             	mov    0x4(%eax),%edx
 807fadf:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
 807fae5:	01 c2                	add    %eax,%edx
 807fae7:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
 807faed:	89 50 04             	mov    %edx,0x4(%eax)
 807faf0:	b8 01 00 00 00       	mov    $0x1,%eax
 807faf5:	85 c0                	test   %eax,%eax
 807faf7:	75 0f                	jne    807fb08 <.L1866+0x1af>
 807faf9:	c7 85 b0 fd ff ff 02 	movl   $0x2,-0x250(%ebp)
 807fb00:	00 00 00 
 807fb03:	e9 c6 0b 00 00       	jmp    80806ce <.L1882+0x5a>
 807fb08:	c7 85 44 ff ff ff 02 	movl   $0x2,-0xbc(%ebp)
 807fb0f:	00 00 00 
 807fb12:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
 807fb18:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 807fb1f:	89 c2                	mov    %eax,%edx
 807fb21:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807fb24:	21 c2                	and    %eax,%edx
 807fb26:	8b 45 08             	mov    0x8(%ebp),%eax
 807fb29:	89 90 ec 00 00 00    	mov    %edx,0xec(%eax)
 807fb2f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807fb32:	c1 e8 02             	shr    $0x2,%eax
 807fb35:	89 45 e0             	mov    %eax,-0x20(%ebp)
 807fb38:	8b 55 e0             	mov    -0x20(%ebp),%edx
 807fb3b:	8b 45 08             	mov    0x8(%ebp),%eax
 807fb3e:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 807fb44:	89 c1                	mov    %eax,%ecx
 807fb46:	d3 e2                	shl    %cl,%edx
 807fb48:	8b 45 08             	mov    0x8(%ebp),%eax
 807fb4b:	89 90 f0 00 00 00    	mov    %edx,0xf0(%eax)
 807fb51:	8b 45 08             	mov    0x8(%ebp),%eax
 807fb54:	8b 40 18             	mov    0x18(%eax),%eax
 807fb57:	8b 55 08             	mov    0x8(%ebp),%edx
 807fb5a:	8b 8a c8 00 00 00    	mov    0xc8(%edx),%ecx
 807fb60:	8b 55 08             	mov    0x8(%ebp),%edx
 807fb63:	8b 52 20             	mov    0x20(%edx),%edx
 807fb66:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 807fb6a:	89 14 24             	mov    %edx,(%esp)
 807fb6d:	ff d0                	call   *%eax
 807fb6f:	8b 55 08             	mov    0x8(%ebp),%edx
 807fb72:	89 82 40 02 00 00    	mov    %eax,0x240(%edx)
 807fb78:	8b 45 08             	mov    0x8(%ebp),%eax
 807fb7b:	8b 80 40 02 00 00    	mov    0x240(%eax),%eax
 807fb81:	85 c0                	test   %eax,%eax
 807fb83:	75 10                	jne    807fb95 <.L1866+0x23c>
 807fb85:	c7 85 b0 fd ff ff eb 	movl   $0xffffffeb,-0x250(%ebp)
 807fb8c:	ff ff ff 
 807fb8f:	90                   	nop
 807fb90:	e9 a4 ec ff ff       	jmp    807e839 <BrotliDecoderDecompressStream+0xd8>
 807fb95:	8b 45 08             	mov    0x8(%ebp),%eax
 807fb98:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 807fb9f:	8b 45 08             	mov    0x8(%ebp),%eax
 807fba2:	c7 00 06 00 00 00    	movl   $0x6,(%eax)

0807fba8 <.L1867>:
 807fba8:	8b 45 08             	mov    0x8(%ebp),%eax
 807fbab:	89 04 24             	mov    %eax,(%esp)
 807fbae:	e8 98 2a ff ff       	call   807264b <ReadContextModes>
 807fbb3:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807fbb9:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807fbc0:	74 05                	je     807fbc7 <.L1867+0x1f>
 807fbc2:	e9 07 0b 00 00       	jmp    80806ce <.L1882+0x5a>
 807fbc7:	8b 45 08             	mov    0x8(%ebp),%eax
 807fbca:	c7 00 16 00 00 00    	movl   $0x16,(%eax)

0807fbd0 <.L1878>:
 807fbd0:	8b 45 08             	mov    0x8(%ebp),%eax
 807fbd3:	8d b0 3c 02 00 00    	lea    0x23c(%eax),%esi
 807fbd9:	8b 45 08             	mov    0x8(%ebp),%eax
 807fbdc:	8d 88 38 02 00 00    	lea    0x238(%eax),%ecx
 807fbe2:	8b 45 08             	mov    0x8(%ebp),%eax
 807fbe5:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax
 807fbeb:	c1 e0 06             	shl    $0x6,%eax
 807fbee:	89 c2                	mov    %eax,%edx
 807fbf0:	8b 45 08             	mov    0x8(%ebp),%eax
 807fbf3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 807fbf7:	89 74 24 08          	mov    %esi,0x8(%esp)
 807fbfb:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 807fbff:	89 14 24             	mov    %edx,(%esp)
 807fc02:	e8 07 aa fe ff       	call   806a60e <DecodeContextMap>
 807fc07:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 807fc0d:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 807fc14:	74 05                	je     807fc1b <.L1878+0x4b>
 807fc16:	e9 b3 0a 00 00       	jmp    80806ce <.L1882+0x5a>
 807fc1b:	8b 45 08             	mov    0x8(%ebp),%eax
 807fc1e:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
 807fc24:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%ebp)
 807fc2b:	00 00 00 
 807fc2e:	eb 21                	jmp    807fc51 <.L1878+0x81>
 807fc30:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fc36:	8b 95 4c ff ff ff    	mov    -0xb4(%ebp),%edx
 807fc3c:	81 c2 90 00 00 00    	add    $0x90,%edx
 807fc42:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%eax,%edx,4)
 807fc49:	00 
 807fc4a:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%ebp)
 807fc51:	83 bd 4c ff ff ff 07 	cmpl   $0x7,-0xb4(%ebp)
 807fc58:	76 d6                	jbe    807fc30 <.L1878+0x60>
 807fc5a:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%ebp)
 807fc61:	00 00 00 
 807fc64:	e9 8f 01 00 00       	jmp    807fdf8 <.L1878+0x228>
 807fc69:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 807fc6f:	c1 e0 06             	shl    $0x6,%eax
 807fc72:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%ebp)
 807fc78:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%ebp)
 807fc7f:	00 00 00 
 807fc82:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fc88:	8b 90 3c 02 00 00    	mov    0x23c(%eax),%edx
 807fc8e:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 807fc94:	01 d0                	add    %edx,%eax
 807fc96:	0f b6 00             	movzbl (%eax),%eax
 807fc99:	0f b6 c0             	movzbl %al,%eax
 807fc9c:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%ebp)
 807fca2:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%ebp)
 807fca9:	00 00 00 
 807fcac:	e9 dc 00 00 00       	jmp    807fd8d <.L1878+0x1bd>
 807fcb1:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fcb7:	8b 88 3c 02 00 00    	mov    0x23c(%eax),%ecx
 807fcbd:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807fcc3:	8d 50 01             	lea    0x1(%eax),%edx
 807fcc6:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 807fccc:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
 807fcd2:	01 d0                	add    %edx,%eax
 807fcd4:	01 c8                	add    %ecx,%eax
 807fcd6:	0f b6 00             	movzbl (%eax),%eax
 807fcd9:	0f b6 c0             	movzbl %al,%eax
 807fcdc:	33 85 58 ff ff ff    	xor    -0xa8(%ebp),%eax
 807fce2:	09 85 54 ff ff ff    	or     %eax,-0xac(%ebp)
 807fce8:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fcee:	8b 88 3c 02 00 00    	mov    0x23c(%eax),%ecx
 807fcf4:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807fcfa:	8d 50 01             	lea    0x1(%eax),%edx
 807fcfd:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 807fd03:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
 807fd09:	01 d0                	add    %edx,%eax
 807fd0b:	01 c8                	add    %ecx,%eax
 807fd0d:	0f b6 00             	movzbl (%eax),%eax
 807fd10:	0f b6 c0             	movzbl %al,%eax
 807fd13:	33 85 58 ff ff ff    	xor    -0xa8(%ebp),%eax
 807fd19:	09 85 54 ff ff ff    	or     %eax,-0xac(%ebp)
 807fd1f:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fd25:	8b 88 3c 02 00 00    	mov    0x23c(%eax),%ecx
 807fd2b:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807fd31:	8d 50 01             	lea    0x1(%eax),%edx
 807fd34:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 807fd3a:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
 807fd40:	01 d0                	add    %edx,%eax
 807fd42:	01 c8                	add    %ecx,%eax
 807fd44:	0f b6 00             	movzbl (%eax),%eax
 807fd47:	0f b6 c0             	movzbl %al,%eax
 807fd4a:	33 85 58 ff ff ff    	xor    -0xa8(%ebp),%eax
 807fd50:	09 85 54 ff ff ff    	or     %eax,-0xac(%ebp)
 807fd56:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fd5c:	8b 88 3c 02 00 00    	mov    0x23c(%eax),%ecx
 807fd62:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax
 807fd68:	8d 50 01             	lea    0x1(%eax),%edx
 807fd6b:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%ebp)
 807fd71:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
 807fd77:	01 d0                	add    %edx,%eax
 807fd79:	01 c8                	add    %ecx,%eax
 807fd7b:	0f b6 00             	movzbl (%eax),%eax
 807fd7e:	0f b6 c0             	movzbl %al,%eax
 807fd81:	33 85 58 ff ff ff    	xor    -0xa8(%ebp),%eax
 807fd87:	09 85 54 ff ff ff    	or     %eax,-0xac(%ebp)
 807fd8d:	83 bd 5c ff ff ff 3f 	cmpl   $0x3f,-0xa4(%ebp)
 807fd94:	0f 86 17 ff ff ff    	jbe    807fcb1 <.L1878+0xe1>
 807fd9a:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%ebp)
 807fda1:	75 4e                	jne    807fdf1 <.L1878+0x221>
 807fda3:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 807fda9:	c1 e8 05             	shr    $0x5,%eax
 807fdac:	89 c7                	mov    %eax,%edi
 807fdae:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
 807fdb4:	c1 e8 05             	shr    $0x5,%eax
 807fdb7:	89 c2                	mov    %eax,%edx
 807fdb9:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fdbf:	81 c2 90 00 00 00    	add    $0x90,%edx
 807fdc5:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 807fdc9:	8b 95 4c ff ff ff    	mov    -0xb4(%ebp),%edx
 807fdcf:	83 e2 1f             	and    $0x1f,%edx
 807fdd2:	be 01 00 00 00       	mov    $0x1,%esi
 807fdd7:	89 d1                	mov    %edx,%ecx
 807fdd9:	d3 e6                	shl    %cl,%esi
 807fddb:	89 f2                	mov    %esi,%edx
 807fddd:	09 d0                	or     %edx,%eax
 807fddf:	89 c1                	mov    %eax,%ecx
 807fde1:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fde7:	8d 97 90 00 00 00    	lea    0x90(%edi),%edx
 807fded:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)
 807fdf1:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%ebp)
 807fdf8:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
 807fdfe:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax
 807fe04:	39 85 4c ff ff ff    	cmp    %eax,-0xb4(%ebp)
 807fe0a:	0f 82 59 fe ff ff    	jb     807fc69 <.L1878+0x99>
 807fe10:	8b 45 08             	mov    0x8(%ebp),%eax
 807fe13:	c7 00 17 00 00 00    	movl   $0x17,(%eax)

0807fe19 <.L1879>:
 807fe19:	8b 45 08             	mov    0x8(%ebp),%eax
 807fe1c:	8b 80 ec 00 00 00    	mov    0xec(%eax),%eax
 807fe22:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%ebp)
 807fe28:	8b 45 08             	mov    0x8(%ebp),%eax
 807fe2b:	8b 80 f0 00 00 00    	mov    0xf0(%eax),%eax
 807fe31:	89 85 e4 fd ff ff    	mov    %eax,-0x21c(%ebp)
 807fe37:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 807fe3d:	83 c0 01             	add    $0x1,%eax
 807fe40:	ba 18 00 00 00       	mov    $0x18,%edx
 807fe45:	89 c1                	mov    %eax,%ecx
 807fe47:	d3 e2                	shl    %cl,%edx
 807fe49:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 807fe4f:	01 d0                	add    %edx,%eax
 807fe51:	83 c0 10             	add    $0x10,%eax
 807fe54:	89 85 b4 fd ff ff    	mov    %eax,-0x24c(%ebp)
 807fe5a:	8b 85 b4 fd ff ff    	mov    -0x24c(%ebp),%eax
 807fe60:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 807fe66:	c7 85 e8 fd ff ff 01 	movl   $0x1,-0x218(%ebp)
 807fe6d:	00 00 00 
 807fe70:	8b 45 08             	mov    0x8(%ebp),%eax
 807fe73:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 807fe7a:	83 e0 20             	and    $0x20,%eax
 807fe7d:	84 c0                	test   %al,%al
 807fe7f:	0f 84 1e 02 00 00    	je     80800a3 <.L1879+0x28a>
 807fe85:	c7 85 60 ff ff ff fc 	movl   $0x7ffffffc,-0xa0(%ebp)
 807fe8c:	ff ff 7f 
 807fe8f:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 807fe95:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 807fe9b:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 807fea1:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)
 807fea7:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807fead:	3b 85 68 ff ff ff    	cmp    -0x98(%ebp),%eax
 807feb3:	77 26                	ja     807fedb <.L1879+0xc2>
 807feb5:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807febb:	83 c0 10             	add    $0x10,%eax
 807febe:	89 45 e0             	mov    %eax,-0x20(%ebp)
 807fec1:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807fec7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 807feca:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807fecd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 807fed0:	89 45 d8             	mov    %eax,-0x28(%ebp)
 807fed3:	89 55 dc             	mov    %edx,-0x24(%ebp)
 807fed6:	e9 9c 01 00 00       	jmp    8080077 <.L1879+0x25e>
 807fedb:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 807fee1:	83 c0 01             	add    $0x1,%eax
 807fee4:	89 85 6c ff ff ff    	mov    %eax,-0x94(%ebp)
 807feea:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 807fef0:	8b 95 6c ff ff ff    	mov    -0x94(%ebp),%edx
 807fef6:	29 c2                	sub    %eax,%edx
 807fef8:	89 d0                	mov    %edx,%eax
 807fefa:	83 e8 01             	sub    $0x1,%eax
 807fefd:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 807ff03:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%ebp)
 807ff0a:	00 00 00 
 807ff0d:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 807ff13:	ba 01 00 00 00       	mov    $0x1,%edx
 807ff18:	89 c1                	mov    %eax,%ecx
 807ff1a:	d3 e2                	shl    %cl,%edx
 807ff1c:	89 d0                	mov    %edx,%eax
 807ff1e:	83 e8 01             	sub    $0x1,%eax
 807ff21:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 807ff27:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 807ff2d:	8b 95 70 ff ff ff    	mov    -0x90(%ebp),%edx
 807ff33:	89 c1                	mov    %eax,%ecx
 807ff35:	d3 ea                	shr    %cl,%edx
 807ff37:	89 d0                	mov    %edx,%eax
 807ff39:	83 c0 04             	add    $0x4,%eax
 807ff3c:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
 807ff42:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 807ff48:	d1 e8                	shr    %eax
 807ff4a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 807ff50:	eb 0d                	jmp    807ff5f <.L1879+0x146>
 807ff52:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 807ff59:	d1 ad 7c ff ff ff    	shrl   -0x84(%ebp)
 807ff5f:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%ebp)
 807ff66:	75 ea                	jne    807ff52 <.L1879+0x139>
 807ff68:	83 ad 74 ff ff ff 01 	subl   $0x1,-0x8c(%ebp)
 807ff6f:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 807ff75:	8b 95 70 ff ff ff    	mov    -0x90(%ebp),%edx
 807ff7b:	89 c1                	mov    %eax,%ecx
 807ff7d:	d3 ea                	shr    %cl,%edx
 807ff7f:	89 d0                	mov    %edx,%eax
 807ff81:	83 e0 01             	and    $0x1,%eax
 807ff84:	89 45 80             	mov    %eax,-0x80(%ebp)
 807ff87:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 807ff8d:	83 e8 01             	sub    $0x1,%eax
 807ff90:	01 c0                	add    %eax,%eax
 807ff92:	0b 45 80             	or     -0x80(%ebp),%eax
 807ff95:	89 45 84             	mov    %eax,-0x7c(%ebp)
 807ff98:	83 7d 84 00          	cmpl   $0x0,-0x7c(%ebp)
 807ff9c:	75 26                	jne    807ffc4 <.L1879+0x1ab>
 807ff9e:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 807ffa4:	83 c0 10             	add    $0x10,%eax
 807ffa7:	89 45 e0             	mov    %eax,-0x20(%ebp)
 807ffaa:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 807ffb0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 807ffb3:	8b 45 e0             	mov    -0x20(%ebp),%eax
 807ffb6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 807ffb9:	89 45 d8             	mov    %eax,-0x28(%ebp)
 807ffbc:	89 55 dc             	mov    %edx,-0x24(%ebp)
 807ffbf:	e9 b3 00 00 00       	jmp    8080077 <.L1879+0x25e>
 807ffc4:	83 6d 84 01          	subl   $0x1,-0x7c(%ebp)
 807ffc8:	8b 45 84             	mov    -0x7c(%ebp),%eax
 807ffcb:	d1 e8                	shr    %eax
 807ffcd:	83 c0 01             	add    $0x1,%eax
 807ffd0:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
 807ffd6:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 807ffdc:	ba 01 00 00 00       	mov    $0x1,%edx
 807ffe1:	89 c1                	mov    %eax,%ecx
 807ffe3:	d3 e2                	shl    %cl,%edx
 807ffe5:	89 d0                	mov    %edx,%eax
 807ffe7:	83 e8 01             	sub    $0x1,%eax
 807ffea:	89 45 88             	mov    %eax,-0x78(%ebp)
 807ffed:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 807fff3:	83 c0 01             	add    $0x1,%eax
 807fff6:	ba 01 00 00 00       	mov    $0x1,%edx
 807fffb:	89 c1                	mov    %eax,%ecx
 807fffd:	d3 e2                	shl    %cl,%edx
 807ffff:	89 d0                	mov    %edx,%eax
 8080001:	83 e8 04             	sub    $0x4,%eax
 8080004:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8080007:	8b 45 84             	mov    -0x7c(%ebp),%eax
 808000a:	83 e0 01             	and    $0x1,%eax
 808000d:	89 c2                	mov    %eax,%edx
 808000f:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080015:	89 c1                	mov    %eax,%ecx
 8080017:	d3 e2                	shl    %cl,%edx
 8080019:	89 d0                	mov    %edx,%eax
 808001b:	01 45 8c             	add    %eax,-0x74(%ebp)
 808001e:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8080024:	8b 55 84             	mov    -0x7c(%ebp),%edx
 8080027:	89 c1                	mov    %eax,%ecx
 8080029:	d3 e2                	shl    %cl,%edx
 808002b:	89 d0                	mov    %edx,%eax
 808002d:	0b 85 78 ff ff ff    	or     -0x88(%ebp),%eax
 8080033:	89 c2                	mov    %eax,%edx
 8080035:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 808003b:	01 d0                	add    %edx,%eax
 808003d:	83 c0 11             	add    $0x11,%eax
 8080040:	89 45 e0             	mov    %eax,-0x20(%ebp)
 8080043:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8080046:	8b 55 88             	mov    -0x78(%ebp),%edx
 8080049:	01 c2                	add    %eax,%edx
 808004b:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8080051:	89 c1                	mov    %eax,%ecx
 8080053:	d3 e2                	shl    %cl,%edx
 8080055:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 808005b:	01 c2                	add    %eax,%edx
 808005d:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8080063:	01 d0                	add    %edx,%eax
 8080065:	83 c0 01             	add    $0x1,%eax
 8080068:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 808006b:	8b 45 e0             	mov    -0x20(%ebp),%eax
 808006e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8080071:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8080074:	89 55 dc             	mov    %edx,-0x24(%ebp)
 8080077:	8b 85 e0 fd ff ff    	mov    -0x220(%ebp),%eax
 808007d:	83 c0 01             	add    $0x1,%eax
 8080080:	ba 3e 00 00 00       	mov    $0x3e,%edx
 8080085:	89 c1                	mov    %eax,%ecx
 8080087:	d3 e2                	shl    %cl,%edx
 8080089:	8b 85 e4 fd ff ff    	mov    -0x21c(%ebp),%eax
 808008f:	01 d0                	add    %edx,%eax
 8080091:	83 c0 10             	add    $0x10,%eax
 8080094:	89 85 b4 fd ff ff    	mov    %eax,-0x24c(%ebp)
 808009a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 808009d:	89 85 b8 fd ff ff    	mov    %eax,-0x248(%ebp)
 80800a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80800a6:	8d b0 f8 00 00 00    	lea    0xf8(%eax),%esi
 80800ac:	8b 45 08             	mov    0x8(%ebp),%eax
 80800af:	8d 88 f4 00 00 00    	lea    0xf4(%eax),%ecx
 80800b5:	8b 45 08             	mov    0x8(%ebp),%eax
 80800b8:	8b 80 d0 00 00 00    	mov    0xd0(%eax),%eax
 80800be:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80800c5:	8b 45 08             	mov    0x8(%ebp),%eax
 80800c8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80800cc:	89 74 24 08          	mov    %esi,0x8(%esp)
 80800d0:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 80800d4:	89 14 24             	mov    %edx,(%esp)
 80800d7:	e8 32 a5 fe ff       	call   806a60e <DecodeContextMap>
 80800dc:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 80800e2:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 80800e9:	74 05                	je     80800f0 <.L1879+0x2d7>
 80800eb:	e9 de 05 00 00       	jmp    80806ce <.L1882+0x5a>
 80800f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80800f3:	8b 80 38 02 00 00    	mov    0x238(%eax),%eax
 80800f9:	8b 55 08             	mov    0x8(%ebp),%edx
 80800fc:	83 c2 74             	add    $0x74,%edx
 80800ff:	89 44 24 10          	mov    %eax,0x10(%esp)
 8080103:	c7 44 24 0c 00 01 00 	movl   $0x100,0xc(%esp)
 808010a:	00 
 808010b:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)
 8080112:	00 
 8080113:	89 54 24 04          	mov    %edx,0x4(%esp)
 8080117:	8b 45 08             	mov    0x8(%ebp),%eax
 808011a:	89 04 24             	mov    %eax,(%esp)
 808011d:	e8 c6 1b 00 00       	call   8081ce8 <BrotliDecoderHuffmanTreeGroupInit>
 8080122:	21 85 e8 fd ff ff    	and    %eax,-0x218(%ebp)
 8080128:	8b 45 08             	mov    0x8(%ebp),%eax
 808012b:	8b 80 cc 00 00 00    	mov    0xcc(%eax),%eax
 8080131:	8b 55 08             	mov    0x8(%ebp),%edx
 8080134:	81 c2 84 00 00 00    	add    $0x84,%edx
 808013a:	89 44 24 10          	mov    %eax,0x10(%esp)
 808013e:	c7 44 24 0c c0 02 00 	movl   $0x2c0,0xc(%esp)
 8080145:	00 
 8080146:	c7 44 24 08 c0 02 00 	movl   $0x2c0,0x8(%esp)
 808014d:	00 
 808014e:	89 54 24 04          	mov    %edx,0x4(%esp)
 8080152:	8b 45 08             	mov    0x8(%ebp),%eax
 8080155:	89 04 24             	mov    %eax,(%esp)
 8080158:	e8 8b 1b 00 00       	call   8081ce8 <BrotliDecoderHuffmanTreeGroupInit>
 808015d:	21 85 e8 fd ff ff    	and    %eax,-0x218(%ebp)
 8080163:	8b 45 08             	mov    0x8(%ebp),%eax
 8080166:	8b 80 f4 00 00 00    	mov    0xf4(%eax),%eax
 808016c:	8b 55 08             	mov    0x8(%ebp),%edx
 808016f:	81 c2 94 00 00 00    	add    $0x94,%edx
 8080175:	89 44 24 10          	mov    %eax,0x10(%esp)
 8080179:	8b 85 b8 fd ff ff    	mov    -0x248(%ebp),%eax
 808017f:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8080183:	8b 85 b4 fd ff ff    	mov    -0x24c(%ebp),%eax
 8080189:	89 44 24 08          	mov    %eax,0x8(%esp)
 808018d:	89 54 24 04          	mov    %edx,0x4(%esp)
 8080191:	8b 45 08             	mov    0x8(%ebp),%eax
 8080194:	89 04 24             	mov    %eax,(%esp)
 8080197:	e8 4c 1b 00 00       	call   8081ce8 <BrotliDecoderHuffmanTreeGroupInit>
 808019c:	21 85 e8 fd ff ff    	and    %eax,-0x218(%ebp)
 80801a2:	83 bd e8 fd ff ff 00 	cmpl   $0x0,-0x218(%ebp)
 80801a9:	75 18                	jne    80801c3 <.L1879+0x3aa>
 80801ab:	c7 44 24 04 ea ff ff 	movl   $0xffffffea,0x4(%esp)
 80801b2:	ff 
 80801b3:	8b 45 08             	mov    0x8(%ebp),%eax
 80801b6:	89 04 24             	mov    %eax,(%esp)
 80801b9:	e8 80 70 fe ff       	call   806723e <SaveErrorCode>
 80801be:	e9 25 05 00 00       	jmp    80806e8 <.L1882+0x74>
 80801c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80801c6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 80801cd:	8b 45 08             	mov    0x8(%ebp),%eax
 80801d0:	c7 00 18 00 00 00    	movl   $0x18,(%eax)

080801d6 <.L1880>:
 80801d6:	c7 85 bc fd ff ff 00 	movl   $0x0,-0x244(%ebp)
 80801dd:	00 00 00 
 80801e0:	8b 45 08             	mov    0x8(%ebp),%eax
 80801e3:	8b 40 04             	mov    0x4(%eax),%eax
 80801e6:	83 f8 01             	cmp    $0x1,%eax
 80801e9:	74 17                	je     8080202 <.L1880+0x2c>
 80801eb:	83 f8 02             	cmp    $0x2,%eax
 80801ee:	74 22                	je     8080212 <.L1880+0x3c>
 80801f0:	85 c0                	test   %eax,%eax
 80801f2:	75 2e                	jne    8080222 <.L1880+0x4c>
 80801f4:	8b 45 08             	mov    0x8(%ebp),%eax
 80801f7:	83 c0 74             	add    $0x74,%eax
 80801fa:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 8080200:	eb 38                	jmp    808023a <.L1880+0x64>
 8080202:	8b 45 08             	mov    0x8(%ebp),%eax
 8080205:	05 84 00 00 00       	add    $0x84,%eax
 808020a:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 8080210:	eb 28                	jmp    808023a <.L1880+0x64>
 8080212:	8b 45 08             	mov    0x8(%ebp),%eax
 8080215:	05 94 00 00 00       	add    $0x94,%eax
 808021a:	89 85 bc fd ff ff    	mov    %eax,-0x244(%ebp)
 8080220:	eb 18                	jmp    808023a <.L1880+0x64>
 8080222:	c7 44 24 04 e1 ff ff 	movl   $0xffffffe1,0x4(%esp)
 8080229:	ff 
 808022a:	8b 45 08             	mov    0x8(%ebp),%eax
 808022d:	89 04 24             	mov    %eax,(%esp)
 8080230:	e8 09 70 fe ff       	call   806723e <SaveErrorCode>
 8080235:	e9 ae 04 00 00       	jmp    80806e8 <.L1882+0x74>
 808023a:	8b 45 08             	mov    0x8(%ebp),%eax
 808023d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8080241:	8b 85 bc fd ff ff    	mov    -0x244(%ebp),%eax
 8080247:	89 04 24             	mov    %eax,(%esp)
 808024a:	e8 af a2 fe ff       	call   806a4fe <HuffmanTreeGroupDecode>
 808024f:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 8080255:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 808025c:	74 05                	je     8080263 <.L1880+0x8d>
 808025e:	e9 6b 04 00 00       	jmp    80806ce <.L1882+0x5a>
 8080263:	8b 45 08             	mov    0x8(%ebp),%eax
 8080266:	8b 40 04             	mov    0x4(%eax),%eax
 8080269:	8d 50 01             	lea    0x1(%eax),%edx
 808026c:	8b 45 08             	mov    0x8(%ebp),%eax
 808026f:	89 50 04             	mov    %edx,0x4(%eax)
 8080272:	8b 45 08             	mov    0x8(%ebp),%eax
 8080275:	8b 40 04             	mov    0x4(%eax),%eax
 8080278:	83 f8 02             	cmp    $0x2,%eax
 808027b:	7f 05                	jg     8080282 <.L1880+0xac>
 808027d:	e9 4c 04 00 00       	jmp    80806ce <.L1882+0x5a>
 8080282:	8b 45 08             	mov    0x8(%ebp),%eax
 8080285:	c7 00 19 00 00 00    	movl   $0x19,(%eax)

0808028b <.L1881>:
 808028b:	8b 45 08             	mov    0x8(%ebp),%eax
 808028e:	89 45 90             	mov    %eax,-0x70(%ebp)
 8080291:	8b 45 90             	mov    -0x70(%ebp),%eax
 8080294:	8b 80 d8 00 00 00    	mov    0xd8(%eax),%eax
 808029a:	89 45 94             	mov    %eax,-0x6c(%ebp)
 808029d:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80802a0:	c1 e0 06             	shl    $0x6,%eax
 80802a3:	89 45 98             	mov    %eax,-0x68(%ebp)
 80802a6:	8b 45 90             	mov    -0x70(%ebp),%eax
 80802a9:	8b 90 3c 02 00 00    	mov    0x23c(%eax),%edx
 80802af:	8b 45 98             	mov    -0x68(%ebp),%eax
 80802b2:	01 c2                	add    %eax,%edx
 80802b4:	8b 45 90             	mov    -0x70(%ebp),%eax
 80802b7:	89 50 6c             	mov    %edx,0x6c(%eax)
 80802ba:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80802bd:	c1 e8 05             	shr    $0x5,%eax
 80802c0:	89 c2                	mov    %eax,%edx
 80802c2:	8b 45 90             	mov    -0x70(%ebp),%eax
 80802c5:	81 c2 90 00 00 00    	add    $0x90,%edx
 80802cb:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax
 80802cf:	89 45 9c             	mov    %eax,-0x64(%ebp)
 80802d2:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80802d5:	83 e0 1f             	and    $0x1f,%eax
 80802d8:	8b 55 9c             	mov    -0x64(%ebp),%edx
 80802db:	89 c1                	mov    %eax,%ecx
 80802dd:	d3 ea                	shr    %cl,%edx
 80802df:	89 d0                	mov    %edx,%eax
 80802e1:	83 e0 01             	and    $0x1,%eax
 80802e4:	89 c2                	mov    %eax,%edx
 80802e6:	8b 45 90             	mov    -0x70(%ebp),%eax
 80802e9:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)
 80802ef:	8b 45 90             	mov    -0x70(%ebp),%eax
 80802f2:	8b 50 74             	mov    0x74(%eax),%edx
 80802f5:	8b 45 90             	mov    -0x70(%ebp),%eax
 80802f8:	8b 40 6c             	mov    0x6c(%eax),%eax
 80802fb:	0f b6 00             	movzbl (%eax),%eax
 80802fe:	0f b6 c0             	movzbl %al,%eax
 8080301:	c1 e0 02             	shl    $0x2,%eax
 8080304:	01 d0                	add    %edx,%eax
 8080306:	8b 10                	mov    (%eax),%edx
 8080308:	8b 45 90             	mov    -0x70(%ebp),%eax
 808030b:	89 90 fc 00 00 00    	mov    %edx,0xfc(%eax)
 8080311:	8b 45 90             	mov    -0x70(%ebp),%eax
 8080314:	8b 90 40 02 00 00    	mov    0x240(%eax),%edx
 808031a:	8b 45 94             	mov    -0x6c(%ebp),%eax
 808031d:	01 d0                	add    %edx,%eax
 808031f:	0f b6 00             	movzbl (%eax),%eax
 8080322:	83 e0 03             	and    $0x3,%eax
 8080325:	88 85 af fd ff ff    	mov    %al,-0x251(%ebp)
 808032b:	0f b6 85 af fd ff ff 	movzbl -0x251(%ebp),%eax
 8080332:	c1 e0 09             	shl    $0x9,%eax
 8080335:	89 c2                	mov    %eax,%edx
 8080337:	8d 83 20 79 fd ff    	lea    -0x286e0(%ebx),%eax
 808033d:	01 c2                	add    %eax,%edx
 808033f:	8b 45 90             	mov    -0x70(%ebp),%eax
 8080342:	89 50 68             	mov    %edx,0x68(%eax)
 8080345:	8b 45 08             	mov    0x8(%ebp),%eax
 8080348:	8b 90 f8 00 00 00    	mov    0xf8(%eax),%edx
 808034e:	8b 45 08             	mov    0x8(%ebp),%eax
 8080351:	89 50 70             	mov    %edx,0x70(%eax)
 8080354:	8b 45 08             	mov    0x8(%ebp),%eax
 8080357:	8b 80 84 00 00 00    	mov    0x84(%eax),%eax
 808035d:	8b 10                	mov    (%eax),%edx
 808035f:	8b 45 08             	mov    0x8(%ebp),%eax
 8080362:	89 50 64             	mov    %edx,0x64(%eax)
 8080365:	8b 45 08             	mov    0x8(%ebp),%eax
 8080368:	89 04 24             	mov    %eax,(%esp)
 808036b:	e8 81 1e ff ff       	call   80721f1 <BrotliEnsureRingBuffer>
 8080370:	85 c0                	test   %eax,%eax
 8080372:	75 0f                	jne    8080383 <.L1881+0xf8>
 8080374:	c7 85 b0 fd ff ff e5 	movl   $0xffffffe5,-0x250(%ebp)
 808037b:	ff ff ff 
 808037e:	e9 4b 03 00 00       	jmp    80806ce <.L1882+0x5a>
 8080383:	8b 45 08             	mov    0x8(%ebp),%eax
 8080386:	89 04 24             	mov    %eax,(%esp)
 8080389:	e8 49 24 ff ff       	call   80727d7 <CalculateDistanceLut>
 808038e:	8b 45 08             	mov    0x8(%ebp),%eax
 8080391:	c7 00 07 00 00 00    	movl   $0x7,(%eax)

08080397 <.L1868>:
 8080397:	8b 45 08             	mov    0x8(%ebp),%eax
 808039a:	89 04 24             	mov    %eax,(%esp)
 808039d:	e8 45 25 ff ff       	call   80728e7 <ProcessCommands>
 80803a2:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 80803a8:	83 bd b0 fd ff ff 02 	cmpl   $0x2,-0x250(%ebp)
 80803af:	75 16                	jne    80803c7 <.L1868+0x30>
 80803b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80803b4:	89 04 24             	mov    %eax,(%esp)
 80803b7:	e8 cb 83 ff ff       	call   8078787 <SafeProcessCommands>
 80803bc:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 80803c2:	e9 07 03 00 00       	jmp    80806ce <.L1882+0x5a>
 80803c7:	e9 02 03 00 00       	jmp    80806ce <.L1882+0x5a>

080803cc <.L1871>:
 80803cc:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 80803d3:	00 
 80803d4:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80803d7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80803db:	8b 45 18             	mov    0x18(%ebp),%eax
 80803de:	89 44 24 08          	mov    %eax,0x8(%esp)
 80803e2:	8b 45 14             	mov    0x14(%ebp),%eax
 80803e5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80803e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80803ec:	89 04 24             	mov    %eax,(%esp)
 80803ef:	e8 db 1b ff ff       	call   8071fcf <WriteRingBuffer>
 80803f4:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 80803fa:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 8080401:	74 05                	je     8080408 <.L1871+0x3c>
 8080403:	e9 c6 02 00 00       	jmp    80806ce <.L1882+0x5a>
 8080408:	8b 45 08             	mov    0x8(%ebp),%eax
 808040b:	89 04 24             	mov    %eax,(%esp)
 808040e:	e8 7e 1d ff ff       	call   8072191 <WrapRingBuffer>
 8080413:	8b 45 08             	mov    0x8(%ebp),%eax
 8080416:	8b 50 3c             	mov    0x3c(%eax),%edx
 8080419:	8b 45 08             	mov    0x8(%ebp),%eax
 808041c:	8b 80 30 02 00 00    	mov    0x230(%eax),%eax
 8080422:	be 01 00 00 00       	mov    $0x1,%esi
 8080427:	89 c1                	mov    %eax,%ecx
 8080429:	d3 e6                	shl    %cl,%esi
 808042b:	89 f0                	mov    %esi,%eax
 808042d:	39 c2                	cmp    %eax,%edx
 808042f:	75 0c                	jne    808043d <.L1871+0x71>
 8080431:	8b 45 08             	mov    0x8(%ebp),%eax
 8080434:	8b 50 34             	mov    0x34(%eax),%edx
 8080437:	8b 45 08             	mov    0x8(%ebp),%eax
 808043a:	89 50 38             	mov    %edx,0x38(%eax)
 808043d:	8b 45 08             	mov    0x8(%ebp),%eax
 8080440:	8b 00                	mov    (%eax),%eax
 8080442:	83 f8 0f             	cmp    $0xf,%eax
 8080445:	75 29                	jne    8080470 <.L1871+0xa4>
 8080447:	8b 45 08             	mov    0x8(%ebp),%eax
 808044a:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 8080450:	85 c0                	test   %eax,%eax
 8080452:	75 0e                	jne    8080462 <.L1871+0x96>
 8080454:	8b 45 08             	mov    0x8(%ebp),%eax
 8080457:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 808045d:	e9 6c 02 00 00       	jmp    80806ce <.L1882+0x5a>
 8080462:	8b 45 08             	mov    0x8(%ebp),%eax
 8080465:	c7 00 07 00 00 00    	movl   $0x7,(%eax)
 808046b:	e9 5e 02 00 00       	jmp    80806ce <.L1882+0x5a>
 8080470:	8b 45 08             	mov    0x8(%ebp),%eax
 8080473:	8b 00                	mov    (%eax),%eax
 8080475:	83 f8 10             	cmp    $0x10,%eax
 8080478:	75 0e                	jne    8080488 <.L1871+0xbc>
 808047a:	8b 45 08             	mov    0x8(%ebp),%eax
 808047d:	c7 00 0a 00 00 00    	movl   $0xa,(%eax)
 8080483:	e9 46 02 00 00       	jmp    80806ce <.L1882+0x5a>
 8080488:	8b 45 08             	mov    0x8(%ebp),%eax
 808048b:	8b 40 04             	mov    0x4(%eax),%eax
 808048e:	85 c0                	test   %eax,%eax
 8080490:	75 29                	jne    80804bb <.L1871+0xef>
 8080492:	8b 45 08             	mov    0x8(%ebp),%eax
 8080495:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 808049b:	85 c0                	test   %eax,%eax
 808049d:	75 0e                	jne    80804ad <.L1871+0xe1>
 808049f:	8b 45 08             	mov    0x8(%ebp),%eax
 80804a2:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
 80804a8:	e9 21 02 00 00       	jmp    80806ce <.L1882+0x5a>
 80804ad:	8b 45 08             	mov    0x8(%ebp),%eax
 80804b0:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
 80804b6:	e9 13 02 00 00       	jmp    80806ce <.L1882+0x5a>
 80804bb:	8b 45 08             	mov    0x8(%ebp),%eax
 80804be:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
 80804c4:	e9 05 02 00 00       	jmp    80806ce <.L1882+0x5a>

080804c9 <.L1872>:
 80804c9:	8b 45 08             	mov    0x8(%ebp),%eax
 80804cc:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
 80804d2:	85 c0                	test   %eax,%eax
 80804d4:	79 0f                	jns    80804e5 <.L1872+0x1c>
 80804d6:	c7 85 b0 fd ff ff f6 	movl   $0xfffffff6,-0x250(%ebp)
 80804dd:	ff ff ff 
 80804e0:	e9 e9 01 00 00       	jmp    80806ce <.L1882+0x5a>
 80804e5:	8b 45 08             	mov    0x8(%ebp),%eax
 80804e8:	89 04 24             	mov    %eax,(%esp)
 80804eb:	e8 91 16 00 00       	call   8081b81 <BrotliDecoderStateCleanupAfterMetablock>
 80804f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80804f3:	0f b6 80 2c 02 00 00 	movzbl 0x22c(%eax),%eax
 80804fa:	83 e0 01             	and    $0x1,%eax
 80804fd:	84 c0                	test   %al,%al
 80804ff:	75 0e                	jne    808050f <.L1872+0x46>
 8080501:	8b 45 08             	mov    0x8(%ebp),%eax
 8080504:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
 808050a:	e9 bf 01 00 00       	jmp    80806ce <.L1882+0x5a>
 808050f:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8080515:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8080518:	8b 45 a0             	mov    -0x60(%ebp),%eax
 808051b:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 808051e:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8080521:	8b 40 04             	mov    0x4(%eax),%eax
 8080524:	ba 20 00 00 00       	mov    $0x20,%edx
 8080529:	29 c2                	sub    %eax,%edx
 808052b:	89 d0                	mov    %edx,%eax
 808052d:	83 e0 07             	and    $0x7,%eax
 8080530:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8080533:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 808053a:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
 808053e:	74 5f                	je     808059f <.L1872+0xd6>
 8080540:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8080543:	89 45 ac             	mov    %eax,-0x54(%ebp)
 8080546:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8080549:	89 45 b0             	mov    %eax,-0x50(%ebp)
 808054c:	8d 45 e0             	lea    -0x20(%ebp),%eax
 808054f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8080552:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8080555:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8080558:	8b 45 b8             	mov    -0x48(%ebp),%eax
 808055b:	8b 10                	mov    (%eax),%edx
 808055d:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8080560:	8b 40 04             	mov    0x4(%eax),%eax
 8080563:	89 c1                	mov    %eax,%ecx
 8080565:	d3 ea                	shr    %cl,%edx
 8080567:	89 d0                	mov    %edx,%eax
 8080569:	89 c2                	mov    %eax,%edx
 808056b:	8b 45 b0             	mov    -0x50(%ebp),%eax
 808056e:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8080571:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8080574:	8b 84 83 20 81 fd ff 	mov    -0x27ee0(%ebx,%eax,4),%eax
 808057b:	21 c2                	and    %eax,%edx
 808057d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8080580:	89 10                	mov    %edx,(%eax)
 8080582:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8080585:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8080588:	8b 45 b0             	mov    -0x50(%ebp),%eax
 808058b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 808058e:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8080591:	8b 50 04             	mov    0x4(%eax),%edx
 8080594:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8080597:	01 c2                	add    %eax,%edx
 8080599:	8b 45 c0             	mov    -0x40(%ebp),%eax
 808059c:	89 50 04             	mov    %edx,0x4(%eax)
 808059f:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80805a2:	85 c0                	test   %eax,%eax
 80805a4:	0f 94 c0             	sete   %al
 80805a7:	0f b6 c0             	movzbl %al,%eax
 80805aa:	85 c0                	test   %eax,%eax
 80805ac:	75 0f                	jne    80805bd <.L1872+0xf4>
 80805ae:	c7 85 b0 fd ff ff f1 	movl   $0xfffffff1,-0x250(%ebp)
 80805b5:	ff ff ff 
 80805b8:	e9 11 01 00 00       	jmp    80806ce <.L1882+0x5a>
 80805bd:	8b 45 08             	mov    0x8(%ebp),%eax
 80805c0:	8b 40 2c             	mov    0x2c(%eax),%eax
 80805c3:	85 c0                	test   %eax,%eax
 80805c5:	0f 85 a0 00 00 00    	jne    808066b <.L1872+0x1a2>
 80805cb:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 80805d1:	89 45 c8             	mov    %eax,-0x38(%ebp)
 80805d4:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80805d7:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80805da:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80805dd:	8b 40 04             	mov    0x4(%eax),%eax
 80805e0:	ba 20 00 00 00       	mov    $0x20,%edx
 80805e5:	29 c2                	sub    %eax,%edx
 80805e7:	89 d0                	mov    %edx,%eax
 80805e9:	c1 e8 03             	shr    $0x3,%eax
 80805ec:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80805ef:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80805f2:	c1 e0 03             	shl    $0x3,%eax
 80805f5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80805f8:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80805fb:	8b 50 0c             	mov    0xc(%eax),%edx
 80805fe:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8080601:	01 c2                	add    %eax,%edx
 8080603:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8080606:	89 50 0c             	mov    %edx,0xc(%eax)
 8080609:	8b 45 c8             	mov    -0x38(%ebp),%eax
 808060c:	8b 40 08             	mov    0x8(%eax),%eax
 808060f:	8b 55 d0             	mov    -0x30(%ebp),%edx
 8080612:	f7 da                	neg    %edx
 8080614:	01 c2                	add    %eax,%edx
 8080616:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8080619:	89 50 08             	mov    %edx,0x8(%eax)
 808061c:	83 7d d4 20          	cmpl   $0x20,-0x2c(%ebp)
 8080620:	75 0b                	jne    808062d <.L1872+0x164>
 8080622:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8080625:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 808062b:	eb 11                	jmp    808063e <.L1872+0x175>
 808062d:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8080630:	8b 10                	mov    (%eax),%edx
 8080632:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8080635:	89 c1                	mov    %eax,%ecx
 8080637:	d3 e2                	shl    %cl,%edx
 8080639:	8b 45 c8             	mov    -0x38(%ebp),%eax
 808063c:	89 10                	mov    %edx,(%eax)
 808063e:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8080641:	8b 50 04             	mov    0x4(%eax),%edx
 8080644:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8080647:	01 c2                	add    %eax,%edx
 8080649:	8b 45 c8             	mov    -0x38(%ebp),%eax
 808064c:	89 50 04             	mov    %edx,0x4(%eax)
 808064f:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8080655:	8b 50 0c             	mov    0xc(%eax),%edx
 8080658:	8b 45 0c             	mov    0xc(%ebp),%eax
 808065b:	89 10                	mov    %edx,(%eax)
 808065d:	8b 85 c0 fd ff ff    	mov    -0x240(%ebp),%eax
 8080663:	8b 50 08             	mov    0x8(%eax),%edx
 8080666:	8b 45 10             	mov    0x10(%ebp),%eax
 8080669:	89 10                	mov    %edx,(%eax)
 808066b:	8b 45 08             	mov    0x8(%ebp),%eax
 808066e:	c7 00 1a 00 00 00    	movl   $0x1a,(%eax)

08080674 <.L1882>:
 8080674:	8b 45 08             	mov    0x8(%ebp),%eax
 8080677:	8b 40 5c             	mov    0x5c(%eax),%eax
 808067a:	85 c0                	test   %eax,%eax
 808067c:	74 39                	je     80806b7 <.L1882+0x43>
 808067e:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 8080685:	00 
 8080686:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8080689:	89 44 24 0c          	mov    %eax,0xc(%esp)
 808068d:	8b 45 18             	mov    0x18(%ebp),%eax
 8080690:	89 44 24 08          	mov    %eax,0x8(%esp)
 8080694:	8b 45 14             	mov    0x14(%ebp),%eax
 8080697:	89 44 24 04          	mov    %eax,0x4(%esp)
 808069b:	8b 45 08             	mov    0x8(%ebp),%eax
 808069e:	89 04 24             	mov    %eax,(%esp)
 80806a1:	e8 29 19 ff ff       	call   8071fcf <WriteRingBuffer>
 80806a6:	89 85 b0 fd ff ff    	mov    %eax,-0x250(%ebp)
 80806ac:	83 bd b0 fd ff ff 01 	cmpl   $0x1,-0x250(%ebp)
 80806b3:	74 02                	je     80806b7 <.L1882+0x43>
 80806b5:	eb 17                	jmp    80806ce <.L1882+0x5a>
 80806b7:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 80806bd:	89 44 24 04          	mov    %eax,0x4(%esp)
 80806c1:	8b 45 08             	mov    0x8(%ebp),%eax
 80806c4:	89 04 24             	mov    %eax,(%esp)
 80806c7:	e8 72 6b fe ff       	call   806723e <SaveErrorCode>
 80806cc:	eb 1a                	jmp    80806e8 <.L1882+0x74>
 80806ce:	e9 66 e1 ff ff       	jmp    807e839 <BrotliDecoderDecompressStream+0xd8>
 80806d3:	8b 85 b0 fd ff ff    	mov    -0x250(%ebp),%eax
 80806d9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80806dd:	8b 45 08             	mov    0x8(%ebp),%eax
 80806e0:	89 04 24             	mov    %eax,(%esp)
 80806e3:	e8 56 6b fe ff       	call   806723e <SaveErrorCode>
 80806e8:	81 c4 6c 02 00 00    	add    $0x26c,%esp
 80806ee:	5b                   	pop    %ebx
 80806ef:	5e                   	pop    %esi
 80806f0:	5f                   	pop    %edi
 80806f1:	5d                   	pop    %ebp
 80806f2:	c3                   	ret    

080806f3 <BrotliDecoderHasMoreOutput>:
 80806f3:	55                   	push   %ebp
 80806f4:	89 e5                	mov    %esp,%ebp
 80806f6:	83 ec 08             	sub    $0x8,%esp
 80806f9:	8b 45 08             	mov    0x8(%ebp),%eax
 80806fc:	8b 40 58             	mov    0x58(%eax),%eax
 80806ff:	85 c0                	test   %eax,%eax
 8080701:	79 07                	jns    808070a <BrotliDecoderHasMoreOutput+0x17>
 8080703:	b8 00 00 00 00       	mov    $0x0,%eax
 8080708:	eb 2d                	jmp    8080737 <BrotliDecoderHasMoreOutput+0x44>
 808070a:	8b 45 08             	mov    0x8(%ebp),%eax
 808070d:	8b 40 5c             	mov    0x5c(%eax),%eax
 8080710:	85 c0                	test   %eax,%eax
 8080712:	74 1e                	je     8080732 <BrotliDecoderHasMoreOutput+0x3f>
 8080714:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 808071b:	00 
 808071c:	8b 45 08             	mov    0x8(%ebp),%eax
 808071f:	89 04 24             	mov    %eax,(%esp)
 8080722:	e8 4f 18 ff ff       	call   8071f76 <UnwrittenBytes>
 8080727:	85 c0                	test   %eax,%eax
 8080729:	74 07                	je     8080732 <BrotliDecoderHasMoreOutput+0x3f>
 808072b:	b8 01 00 00 00       	mov    $0x1,%eax
 8080730:	eb 05                	jmp    8080737 <BrotliDecoderHasMoreOutput+0x44>
 8080732:	b8 00 00 00 00       	mov    $0x0,%eax
 8080737:	c9                   	leave  
 8080738:	c3                   	ret    

08080739 <BrotliDecoderTakeOutput>:
 8080739:	55                   	push   %ebp
 808073a:	89 e5                	mov    %esp,%ebp
 808073c:	83 ec 38             	sub    $0x38,%esp
 808073f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 8080746:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080749:	8b 00                	mov    (%eax),%eax
 808074b:	85 c0                	test   %eax,%eax
 808074d:	74 07                	je     8080756 <BrotliDecoderTakeOutput+0x1d>
 808074f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080752:	8b 00                	mov    (%eax),%eax
 8080754:	eb 05                	jmp    808075b <BrotliDecoderTakeOutput+0x22>
 8080756:	b8 00 00 00 01       	mov    $0x1000000,%eax
 808075b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 808075e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8080761:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8080764:	8b 45 08             	mov    0x8(%ebp),%eax
 8080767:	8b 40 5c             	mov    0x5c(%eax),%eax
 808076a:	85 c0                	test   %eax,%eax
 808076c:	74 0a                	je     8080778 <BrotliDecoderTakeOutput+0x3f>
 808076e:	8b 45 08             	mov    0x8(%ebp),%eax
 8080771:	8b 40 58             	mov    0x58(%eax),%eax
 8080774:	85 c0                	test   %eax,%eax
 8080776:	79 10                	jns    8080788 <BrotliDecoderTakeOutput+0x4f>
 8080778:	8b 45 0c             	mov    0xc(%ebp),%eax
 808077b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8080781:	b8 00 00 00 00       	mov    $0x0,%eax
 8080786:	eb 7d                	jmp    8080805 <BrotliDecoderTakeOutput+0xcc>
 8080788:	8b 45 08             	mov    0x8(%ebp),%eax
 808078b:	89 04 24             	mov    %eax,(%esp)
 808078e:	e8 fe 19 ff ff       	call   8072191 <WrapRingBuffer>
 8080793:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
 808079a:	00 
 808079b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80807a2:	00 
 80807a3:	8d 45 e8             	lea    -0x18(%ebp),%eax
 80807a6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80807aa:	8d 45 ec             	lea    -0x14(%ebp),%eax
 80807ad:	89 44 24 04          	mov    %eax,0x4(%esp)
 80807b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80807b4:	89 04 24             	mov    %eax,(%esp)
 80807b7:	e8 13 18 ff ff       	call   8071fcf <WriteRingBuffer>
 80807bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80807bf:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
 80807c3:	74 06                	je     80807cb <BrotliDecoderTakeOutput+0x92>
 80807c5:	83 7d f4 03          	cmpl   $0x3,-0xc(%ebp)
 80807c9:	75 0f                	jne    80807da <BrotliDecoderTakeOutput+0xa1>
 80807cb:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80807ce:	8b 55 f0             	mov    -0x10(%ebp),%edx
 80807d1:	29 c2                	sub    %eax,%edx
 80807d3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80807d6:	89 10                	mov    %edx,(%eax)
 80807d8:	eb 28                	jmp    8080802 <BrotliDecoderTakeOutput+0xc9>
 80807da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 80807de:	79 12                	jns    80807f2 <BrotliDecoderTakeOutput+0xb9>
 80807e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80807e3:	89 44 24 04          	mov    %eax,0x4(%esp)
 80807e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80807ea:	89 04 24             	mov    %eax,(%esp)
 80807ed:	e8 4c 6a fe ff       	call   806723e <SaveErrorCode>
 80807f2:	8b 45 0c             	mov    0xc(%ebp),%eax
 80807f5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 80807fb:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 8080802:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8080805:	c9                   	leave  
 8080806:	c3                   	ret    

08080807 <BrotliDecoderIsUsed>:
 8080807:	55                   	push   %ebp
 8080808:	89 e5                	mov    %esp,%ebp
 808080a:	83 ec 10             	sub    $0x10,%esp
 808080d:	8b 45 08             	mov    0x8(%ebp),%eax
 8080810:	8b 00                	mov    (%eax),%eax
 8080812:	85 c0                	test   %eax,%eax
 8080814:	75 1c                	jne    8080832 <BrotliDecoderIsUsed+0x2b>
 8080816:	8b 45 08             	mov    0x8(%ebp),%eax
 8080819:	83 c0 08             	add    $0x8,%eax
 808081c:	89 45 fc             	mov    %eax,-0x4(%ebp)
 808081f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8080822:	8b 40 04             	mov    0x4(%eax),%eax
 8080825:	ba 20 00 00 00       	mov    $0x20,%edx
 808082a:	29 c2                	sub    %eax,%edx
 808082c:	89 d0                	mov    %edx,%eax
 808082e:	85 c0                	test   %eax,%eax
 8080830:	74 07                	je     8080839 <BrotliDecoderIsUsed+0x32>
 8080832:	b8 01 00 00 00       	mov    $0x1,%eax
 8080837:	eb 05                	jmp    808083e <BrotliDecoderIsUsed+0x37>
 8080839:	b8 00 00 00 00       	mov    $0x0,%eax
 808083e:	c9                   	leave  
 808083f:	c3                   	ret    

08080840 <BrotliDecoderIsFinished>:
 8080840:	55                   	push   %ebp
 8080841:	89 e5                	mov    %esp,%ebp
 8080843:	53                   	push   %ebx
 8080844:	83 ec 14             	sub    $0x14,%esp
 8080847:	e8 a4 92 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 808084c:	81 c3 b4 f7 02 00    	add    $0x2f7b4,%ebx
 8080852:	8b 45 08             	mov    0x8(%ebp),%eax
 8080855:	8b 00                	mov    (%eax),%eax
 8080857:	83 f8 1a             	cmp    $0x1a,%eax
 808085a:	75 16                	jne    8080872 <BrotliDecoderIsFinished+0x32>
 808085c:	8b 45 08             	mov    0x8(%ebp),%eax
 808085f:	89 04 24             	mov    %eax,(%esp)
 8080862:	e8 8c fe ff ff       	call   80806f3 <BrotliDecoderHasMoreOutput>
 8080867:	85 c0                	test   %eax,%eax
 8080869:	75 07                	jne    8080872 <BrotliDecoderIsFinished+0x32>
 808086b:	b8 01 00 00 00       	mov    $0x1,%eax
 8080870:	eb 05                	jmp    8080877 <BrotliDecoderIsFinished+0x37>
 8080872:	b8 00 00 00 00       	mov    $0x0,%eax
 8080877:	83 c4 14             	add    $0x14,%esp
 808087a:	5b                   	pop    %ebx
 808087b:	5d                   	pop    %ebp
 808087c:	c3                   	ret    

0808087d <BrotliDecoderGetErrorCode>:
 808087d:	55                   	push   %ebp
 808087e:	89 e5                	mov    %esp,%ebp
 8080880:	8b 45 08             	mov    0x8(%ebp),%eax
 8080883:	8b 40 58             	mov    0x58(%eax),%eax
 8080886:	5d                   	pop    %ebp
 8080887:	c3                   	ret    

08080888 <BrotliDecoderErrorString>:
 8080888:	55                   	push   %ebp
 8080889:	89 e5                	mov    %esp,%ebp
 808088b:	e8 05 f7 fc ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8080890:	81 c1 70 f7 02 00    	add    $0x2f770,%ecx
 8080896:	8b 45 08             	mov    0x8(%ebp),%eax
 8080899:	83 c0 1f             	add    $0x1f,%eax
 808089c:	83 f8 22             	cmp    $0x22,%eax
 808089f:	0f 87 1d 01 00 00    	ja     80809c2 <.L2051>
 80808a5:	c1 e0 02             	shl    $0x2,%eax
 80808a8:	8b 84 08 34 9b fd ff 	mov    -0x264cc(%eax,%ecx,1),%eax
 80808af:	01 c8                	add    %ecx,%eax
 80808b1:	ff e0                	jmp    *%eax

080808b3 <.L2078>:
 80808b3:	8d 81 90 99 fd ff    	lea    -0x26670(%ecx),%eax
 80808b9:	e9 0a 01 00 00       	jmp    80809c8 <.L2051+0x6>

080808be <.L2079>:
 80808be:	8d 81 99 99 fd ff    	lea    -0x26667(%ecx),%eax
 80808c4:	e9 ff 00 00 00       	jmp    80809c8 <.L2051+0x6>

080808c9 <.L2080>:
 80808c9:	8d 81 a1 99 fd ff    	lea    -0x2665f(%ecx),%eax
 80808cf:	e9 f4 00 00 00       	jmp    80809c8 <.L2051+0x6>

080808d4 <.L2081>:
 80808d4:	8d 81 b2 99 fd ff    	lea    -0x2664e(%ecx),%eax
 80808da:	e9 e9 00 00 00       	jmp    80809c8 <.L2051+0x6>

080808df <.L2077>:
 80808df:	8d 81 c4 99 fd ff    	lea    -0x2663c(%ecx),%eax
 80808e5:	e9 de 00 00 00       	jmp    80809c8 <.L2051+0x6>

080808ea <.L2076>:
 80808ea:	8d 81 d5 99 fd ff    	lea    -0x2662b(%ecx),%eax
 80808f0:	e9 d3 00 00 00       	jmp    80809c8 <.L2051+0x6>

080808f5 <.L2075>:
 80808f5:	8d 81 de 99 fd ff    	lea    -0x26622(%ecx),%eax
 80808fb:	e9 c8 00 00 00       	jmp    80809c8 <.L2051+0x6>

08080900 <.L2074>:
 8080900:	8d 81 f4 99 fd ff    	lea    -0x2660c(%ecx),%eax
 8080906:	e9 bd 00 00 00       	jmp    80809c8 <.L2051+0x6>

0808090b <.L2073>:
 808090b:	8d 81 0c 9a fd ff    	lea    -0x265f4(%ecx),%eax
 8080911:	e9 b2 00 00 00       	jmp    80809c8 <.L2051+0x6>

08080916 <.L2072>:
 8080916:	8d 81 20 9a fd ff    	lea    -0x265e0(%ecx),%eax
 808091c:	e9 a7 00 00 00       	jmp    80809c8 <.L2051+0x6>

08080921 <.L2071>:
 8080921:	8d 81 29 9a fd ff    	lea    -0x265d7(%ecx),%eax
 8080927:	e9 9c 00 00 00       	jmp    80809c8 <.L2051+0x6>

0808092c <.L2070>:
 808092c:	8d 81 37 9a fd ff    	lea    -0x265c9(%ecx),%eax
 8080932:	e9 91 00 00 00       	jmp    80809c8 <.L2051+0x6>

08080937 <.L2069>:
 8080937:	8d 81 4a 9a fd ff    	lea    -0x265b6(%ecx),%eax
 808093d:	e9 86 00 00 00       	jmp    80809c8 <.L2051+0x6>

08080942 <.L2068>:
 8080942:	8d 81 59 9a fd ff    	lea    -0x265a7(%ecx),%eax
 8080948:	eb 7e                	jmp    80809c8 <.L2051+0x6>

0808094a <.L2067>:
 808094a:	8d 81 68 9a fd ff    	lea    -0x26598(%ecx),%eax
 8080950:	eb 76                	jmp    80809c8 <.L2051+0x6>

08080952 <.L2066>:
 8080952:	8d 81 72 9a fd ff    	lea    -0x2658e(%ecx),%eax
 8080958:	eb 6e                	jmp    80809c8 <.L2051+0x6>

0808095a <.L2065>:
 808095a:	8d 81 7d 9a fd ff    	lea    -0x26583(%ecx),%eax
 8080960:	eb 66                	jmp    80809c8 <.L2051+0x6>

08080962 <.L2064>:
 8080962:	8d 81 89 9a fd ff    	lea    -0x26577(%ecx),%eax
 8080968:	eb 5e                	jmp    80809c8 <.L2051+0x6>

0808096a <.L2063>:
 808096a:	8d 81 93 9a fd ff    	lea    -0x2656d(%ecx),%eax
 8080970:	eb 56                	jmp    80809c8 <.L2051+0x6>

08080972 <.L2062>:
 8080972:	8d 81 9d 9a fd ff    	lea    -0x26563(%ecx),%eax
 8080978:	eb 4e                	jmp    80809c8 <.L2051+0x6>

0808097a <.L2061>:
 808097a:	8d 81 a6 9a fd ff    	lea    -0x2655a(%ecx),%eax
 8080980:	eb 46                	jmp    80809c8 <.L2051+0x6>

08080982 <.L2060>:
 8080982:	8d 81 b9 9a fd ff    	lea    -0x26547(%ecx),%eax
 8080988:	eb 3e                	jmp    80809c8 <.L2051+0x6>

0808098a <.L2059>:
 808098a:	8d 81 cb 9a fd ff    	lea    -0x26535(%ecx),%eax
 8080990:	eb 36                	jmp    80809c8 <.L2051+0x6>

08080992 <.L2058>:
 8080992:	8d 81 d9 9a fd ff    	lea    -0x26527(%ecx),%eax
 8080998:	eb 2e                	jmp    80809c8 <.L2051+0x6>

0808099a <.L2057>:
 808099a:	8d 81 e5 9a fd ff    	lea    -0x2651b(%ecx),%eax
 80809a0:	eb 26                	jmp    80809c8 <.L2051+0x6>

080809a2 <.L2056>:
 80809a2:	8d 81 f1 9a fd ff    	lea    -0x2650f(%ecx),%eax
 80809a8:	eb 1e                	jmp    80809c8 <.L2051+0x6>

080809aa <.L2055>:
 80809aa:	8d 81 ff 9a fd ff    	lea    -0x26501(%ecx),%eax
 80809b0:	eb 16                	jmp    80809c8 <.L2051+0x6>

080809b2 <.L2054>:
 80809b2:	8d 81 0d 9b fd ff    	lea    -0x264f3(%ecx),%eax
 80809b8:	eb 0e                	jmp    80809c8 <.L2051+0x6>

080809ba <.L2052>:
 80809ba:	8d 81 1e 9b fd ff    	lea    -0x264e2(%ecx),%eax
 80809c0:	eb 06                	jmp    80809c8 <.L2051+0x6>

080809c2 <.L2051>:
 80809c2:	8d 81 2a 9b fd ff    	lea    -0x264d6(%ecx),%eax
 80809c8:	5d                   	pop    %ebp
 80809c9:	c3                   	ret    

080809ca <BrotliDecoderVersion>:
 80809ca:	55                   	push   %ebp
 80809cb:	89 e5                	mov    %esp,%ebp
 80809cd:	b8 07 00 00 01       	mov    $0x1000007,%eax
 80809d2:	5d                   	pop    %ebp
 80809d3:	c3                   	ret    

080809d4 <BrotliDefaultAllocFunc>:
 80809d4:	55                   	push   %ebp
 80809d5:	89 e5                	mov    %esp,%ebp
 80809d7:	53                   	push   %ebx
 80809d8:	83 ec 14             	sub    $0x14,%esp
 80809db:	e8 10 91 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 80809e0:	81 c3 20 f6 02 00    	add    $0x2f620,%ebx
 80809e6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80809e9:	89 04 24             	mov    %eax,(%esp)
 80809ec:	e8 2f bc fd ff       	call   805c620 <__interceptor_malloc>
 80809f1:	83 c4 14             	add    $0x14,%esp
 80809f4:	5b                   	pop    %ebx
 80809f5:	5d                   	pop    %ebp
 80809f6:	c3                   	ret    

080809f7 <BrotliDefaultFreeFunc>:
 80809f7:	55                   	push   %ebp
 80809f8:	89 e5                	mov    %esp,%ebp
 80809fa:	53                   	push   %ebx
 80809fb:	83 ec 14             	sub    $0x14,%esp
 80809fe:	e8 ed 90 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8080a03:	81 c3 fd f5 02 00    	add    $0x2f5fd,%ebx
 8080a09:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080a0c:	89 04 24             	mov    %eax,(%esp)
 8080a0f:	e8 2c bb fd ff       	call   805c540 <__interceptor_free>
 8080a14:	83 c4 14             	add    $0x14,%esp
 8080a17:	5b                   	pop    %ebx
 8080a18:	5d                   	pop    %ebp
 8080a19:	c3                   	ret    

08080a1a <BrotliBuildCodeLengthsHuffmanTable>:
 8080a1a:	55                   	push   %ebp
 8080a1b:	89 e5                	mov    %esp,%ebp
 8080a1d:	53                   	push   %ebx
 8080a1e:	81 ec a0 00 00 00    	sub    $0xa0,%esp
 8080a24:	e8 c7 90 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8080a29:	81 c3 d7 f5 02 00    	add    $0x2f5d7,%ebx
 8080a2f:	c7 85 64 ff ff ff ff 	movl   $0xffffffff,-0x9c(%ebp)
 8080a36:	ff ff ff 
 8080a39:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%ebp)
 8080a40:	00 00 00 
 8080a43:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080a49:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080a4c:	8b 45 10             	mov    0x10(%ebp),%eax
 8080a4f:	01 d0                	add    %edx,%eax
 8080a51:	0f b7 00             	movzwl (%eax),%eax
 8080a54:	0f b7 c0             	movzwl %ax,%eax
 8080a57:	01 85 64 ff ff ff    	add    %eax,-0x9c(%ebp)
 8080a5d:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080a63:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080a69:	89 54 85 9c          	mov    %edx,-0x64(%ebp,%eax,4)
 8080a6d:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 8080a74:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080a7a:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080a7d:	8b 45 10             	mov    0x10(%ebp),%eax
 8080a80:	01 d0                	add    %edx,%eax
 8080a82:	0f b7 00             	movzwl (%eax),%eax
 8080a85:	0f b7 c0             	movzwl %ax,%eax
 8080a88:	01 85 64 ff ff ff    	add    %eax,-0x9c(%ebp)
 8080a8e:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080a94:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080a9a:	89 54 85 9c          	mov    %edx,-0x64(%ebp,%eax,4)
 8080a9e:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 8080aa5:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080aab:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080aae:	8b 45 10             	mov    0x10(%ebp),%eax
 8080ab1:	01 d0                	add    %edx,%eax
 8080ab3:	0f b7 00             	movzwl (%eax),%eax
 8080ab6:	0f b7 c0             	movzwl %ax,%eax
 8080ab9:	01 85 64 ff ff ff    	add    %eax,-0x9c(%ebp)
 8080abf:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080ac5:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080acb:	89 54 85 9c          	mov    %edx,-0x64(%ebp,%eax,4)
 8080acf:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 8080ad6:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080adc:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080adf:	8b 45 10             	mov    0x10(%ebp),%eax
 8080ae2:	01 d0                	add    %edx,%eax
 8080ae4:	0f b7 00             	movzwl (%eax),%eax
 8080ae7:	0f b7 c0             	movzwl %ax,%eax
 8080aea:	01 85 64 ff ff ff    	add    %eax,-0x9c(%ebp)
 8080af0:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080af6:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080afc:	89 54 85 9c          	mov    %edx,-0x64(%ebp,%eax,4)
 8080b00:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 8080b07:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080b0d:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080b10:	8b 45 10             	mov    0x10(%ebp),%eax
 8080b13:	01 d0                	add    %edx,%eax
 8080b15:	0f b7 00             	movzwl (%eax),%eax
 8080b18:	0f b7 c0             	movzwl %ax,%eax
 8080b1b:	01 85 64 ff ff ff    	add    %eax,-0x9c(%ebp)
 8080b21:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080b27:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080b2d:	89 54 85 9c          	mov    %edx,-0x64(%ebp,%eax,4)
 8080b31:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 8080b38:	c7 45 9c 11 00 00 00 	movl   $0x11,-0x64(%ebp)
 8080b3f:	c7 85 64 ff ff ff 12 	movl   $0x12,-0x9c(%ebp)
 8080b46:	00 00 00 
 8080b49:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%ebp)
 8080b50:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080b56:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080b59:	01 d0                	add    %edx,%eax
 8080b5b:	0f b6 00             	movzbl (%eax),%eax
 8080b5e:	0f b6 d0             	movzbl %al,%edx
 8080b61:	8b 44 95 9c          	mov    -0x64(%ebp,%edx,4),%eax
 8080b65:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8080b68:	89 4c 95 9c          	mov    %ecx,-0x64(%ebp,%edx,4)
 8080b6c:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080b72:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
 8080b76:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%ebp)
 8080b7d:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080b83:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080b86:	01 d0                	add    %edx,%eax
 8080b88:	0f b6 00             	movzbl (%eax),%eax
 8080b8b:	0f b6 d0             	movzbl %al,%edx
 8080b8e:	8b 44 95 9c          	mov    -0x64(%ebp,%edx,4),%eax
 8080b92:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8080b95:	89 4c 95 9c          	mov    %ecx,-0x64(%ebp,%edx,4)
 8080b99:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080b9f:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
 8080ba3:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%ebp)
 8080baa:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080bb0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080bb3:	01 d0                	add    %edx,%eax
 8080bb5:	0f b6 00             	movzbl (%eax),%eax
 8080bb8:	0f b6 d0             	movzbl %al,%edx
 8080bbb:	8b 44 95 9c          	mov    -0x64(%ebp,%edx,4),%eax
 8080bbf:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8080bc2:	89 4c 95 9c          	mov    %ecx,-0x64(%ebp,%edx,4)
 8080bc6:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080bcc:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
 8080bd0:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%ebp)
 8080bd7:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080bdd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080be0:	01 d0                	add    %edx,%eax
 8080be2:	0f b6 00             	movzbl (%eax),%eax
 8080be5:	0f b6 d0             	movzbl %al,%edx
 8080be8:	8b 44 95 9c          	mov    -0x64(%ebp,%edx,4),%eax
 8080bec:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8080bef:	89 4c 95 9c          	mov    %ecx,-0x64(%ebp,%edx,4)
 8080bf3:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080bf9:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
 8080bfd:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%ebp)
 8080c04:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080c0a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080c0d:	01 d0                	add    %edx,%eax
 8080c0f:	0f b6 00             	movzbl (%eax),%eax
 8080c12:	0f b6 d0             	movzbl %al,%edx
 8080c15:	8b 44 95 9c          	mov    -0x64(%ebp,%edx,4),%eax
 8080c19:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8080c1c:	89 4c 95 9c          	mov    %ecx,-0x64(%ebp,%edx,4)
 8080c20:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080c26:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
 8080c2a:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%ebp)
 8080c31:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080c37:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080c3a:	01 d0                	add    %edx,%eax
 8080c3c:	0f b6 00             	movzbl (%eax),%eax
 8080c3f:	0f b6 d0             	movzbl %al,%edx
 8080c42:	8b 44 95 9c          	mov    -0x64(%ebp,%edx,4),%eax
 8080c46:	8d 48 ff             	lea    -0x1(%eax),%ecx
 8080c49:	89 4c 95 9c          	mov    %ecx,-0x64(%ebp,%edx,4)
 8080c4d:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx
 8080c53:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
 8080c57:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%ebp)
 8080c5e:	0f 85 e5 fe ff ff    	jne    8080b49 <BrotliBuildCodeLengthsHuffmanTable+0x12f>
 8080c64:	c7 85 7c ff ff ff 20 	movl   $0x20,-0x84(%ebp)
 8080c6b:	00 00 00 
 8080c6e:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8080c71:	85 c0                	test   %eax,%eax
 8080c73:	75 5f                	jne    8080cd4 <BrotliBuildCodeLengthsHuffmanTable+0x2ba>
 8080c75:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8080c78:	0f b7 c0             	movzwl %ax,%eax
 8080c7b:	66 89 85 60 ff ff ff 	mov    %ax,-0xa0(%ebp)
 8080c82:	c6 45 98 00          	movb   $0x0,-0x68(%ebp)
 8080c86:	0f b7 85 60 ff ff ff 	movzwl -0xa0(%ebp),%eax
 8080c8d:	66 89 45 9a          	mov    %ax,-0x66(%ebp)
 8080c91:	8b 45 98             	mov    -0x68(%ebp),%eax
 8080c94:	89 45 90             	mov    %eax,-0x70(%ebp)
 8080c97:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%ebp)
 8080c9e:	00 00 00 
 8080ca1:	eb 1e                	jmp    8080cc1 <BrotliBuildCodeLengthsHuffmanTable+0x2a7>
 8080ca3:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8080ca9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8080cb0:	8b 45 08             	mov    0x8(%ebp),%eax
 8080cb3:	01 c2                	add    %eax,%edx
 8080cb5:	8b 45 90             	mov    -0x70(%ebp),%eax
 8080cb8:	89 02                	mov    %eax,(%edx)
 8080cba:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%ebp)
 8080cc1:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8080cc7:	3b 85 68 ff ff ff    	cmp    -0x98(%ebp),%eax
 8080ccd:	77 d4                	ja     8080ca3 <BrotliBuildCodeLengthsHuffmanTable+0x289>
 8080ccf:	e9 39 01 00 00       	jmp    8080e0d <BrotliBuildCodeLengthsHuffmanTable+0x3f3>
 8080cd4:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%ebp)
 8080cdb:	00 00 00 
 8080cde:	c7 85 6c ff ff ff 80 	movl   $0x80,-0x94(%ebp)
 8080ce5:	00 00 00 
 8080ce8:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%ebp)
 8080cef:	00 00 00 
 8080cf2:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%ebp)
 8080cf9:	00 00 00 
 8080cfc:	c7 85 70 ff ff ff 02 	movl   $0x2,-0x90(%ebp)
 8080d03:	00 00 00 
 8080d06:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 8080d0c:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080d0f:	8b 45 10             	mov    0x10(%ebp),%eax
 8080d12:	01 d0                	add    %edx,%eax
 8080d14:	0f b7 00             	movzwl (%eax),%eax
 8080d17:	0f b7 c0             	movzwl %ax,%eax
 8080d1a:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
 8080d20:	e9 bb 00 00 00       	jmp    8080de0 <BrotliBuildCodeLengthsHuffmanTable+0x3c6>
 8080d25:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8080d2b:	8d 50 01             	lea    0x1(%eax),%edx
 8080d2e:	89 95 64 ff ff ff    	mov    %edx,-0x9c(%ebp)
 8080d34:	8b 44 85 b4          	mov    -0x4c(%ebp,%eax,4),%eax
 8080d38:	0f b7 c0             	movzwl %ax,%eax
 8080d3b:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
 8080d41:	0f b6 d2             	movzbl %dl,%edx
 8080d44:	88 95 5f ff ff ff    	mov    %dl,-0xa1(%ebp)
 8080d4a:	66 89 85 62 ff ff ff 	mov    %ax,-0x9e(%ebp)
 8080d51:	0f b6 85 5f ff ff ff 	movzbl -0xa1(%ebp),%eax
 8080d58:	88 45 94             	mov    %al,-0x6c(%ebp)
 8080d5b:	0f b7 85 62 ff ff ff 	movzwl -0x9e(%ebp),%eax
 8080d62:	66 89 45 96          	mov    %ax,-0x6a(%ebp)
 8080d66:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8080d69:	89 45 90             	mov    %eax,-0x70(%ebp)
 8080d6c:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax
 8080d72:	89 45 80             	mov    %eax,-0x80(%ebp)
 8080d75:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
 8080d7b:	8b 45 80             	mov    -0x80(%ebp),%eax
 8080d7e:	01 d0                	add    %edx,%eax
 8080d80:	0f b6 00             	movzbl (%eax),%eax
 8080d83:	0f b6 c0             	movzbl %al,%eax
 8080d86:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8080d8d:	8b 45 08             	mov    0x8(%ebp),%eax
 8080d90:	01 d0                	add    %edx,%eax
 8080d92:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8080d95:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
 8080d9b:	89 45 88             	mov    %eax,-0x78(%ebp)
 8080d9e:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8080da4:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8080da7:	8b 45 90             	mov    -0x70(%ebp),%eax
 8080daa:	89 45 98             	mov    %eax,-0x68(%ebp)
 8080dad:	8b 45 88             	mov    -0x78(%ebp),%eax
 8080db0:	29 45 8c             	sub    %eax,-0x74(%ebp)
 8080db3:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8080db6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8080dbd:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8080dc0:	01 c2                	add    %eax,%edx
 8080dc2:	8b 45 98             	mov    -0x68(%ebp),%eax
 8080dc5:	89 02                	mov    %eax,(%edx)
 8080dc7:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)
 8080dcb:	7f e0                	jg     8080dad <BrotliBuildCodeLengthsHuffmanTable+0x393>
 8080dcd:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
 8080dd3:	01 85 68 ff ff ff    	add    %eax,-0x98(%ebp)
 8080dd9:	83 ad 78 ff ff ff 01 	subl   $0x1,-0x88(%ebp)
 8080de0:	83 bd 78 ff ff ff 00 	cmpl   $0x0,-0x88(%ebp)
 8080de7:	0f 85 38 ff ff ff    	jne    8080d25 <BrotliBuildCodeLengthsHuffmanTable+0x30b>
 8080ded:	d1 a5 70 ff ff ff    	shll   -0x90(%ebp)
 8080df3:	d1 ad 6c ff ff ff    	shrl   -0x94(%ebp)
 8080df9:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%ebp)
 8080e00:	83 bd 74 ff ff ff 05 	cmpl   $0x5,-0x8c(%ebp)
 8080e07:	0f 8e f9 fe ff ff    	jle    8080d06 <BrotliBuildCodeLengthsHuffmanTable+0x2ec>
 8080e0d:	81 c4 a0 00 00 00    	add    $0xa0,%esp
 8080e13:	5b                   	pop    %ebx
 8080e14:	5d                   	pop    %ebp
 8080e15:	c3                   	ret    

08080e16 <BrotliBuildHuffmanTable>:
 8080e16:	55                   	push   %ebp
 8080e17:	89 e5                	mov    %esp,%ebp
 8080e19:	56                   	push   %esi
 8080e1a:	53                   	push   %ebx
 8080e1b:	81 ec a0 00 00 00    	sub    $0xa0,%esp
 8080e21:	e8 ca 8c fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8080e26:	81 c3 da f1 02 00    	add    $0x2f1da,%ebx
 8080e2c:	c7 45 a8 ff ff ff ff 	movl   $0xffffffff,-0x58(%ebp)
 8080e33:	eb 04                	jmp    8080e39 <BrotliBuildHuffmanTable+0x23>
 8080e35:	83 6d a8 01          	subl   $0x1,-0x58(%ebp)
 8080e39:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8080e3c:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080e3f:	8b 45 10             	mov    0x10(%ebp),%eax
 8080e42:	01 d0                	add    %edx,%eax
 8080e44:	0f b7 00             	movzwl (%eax),%eax
 8080e47:	66 83 f8 ff          	cmp    $0xffff,%ax
 8080e4b:	74 e8                	je     8080e35 <BrotliBuildHuffmanTable+0x1f>
 8080e4d:	83 45 a8 10          	addl   $0x10,-0x58(%ebp)
 8080e51:	8b 45 08             	mov    0x8(%ebp),%eax
 8080e54:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8080e5a:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080e5d:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8080e60:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8080e63:	ba 01 00 00 00       	mov    $0x1,%edx
 8080e68:	89 c1                	mov    %eax,%ecx
 8080e6a:	d3 e2                	shl    %cl,%edx
 8080e6c:	89 d0                	mov    %edx,%eax
 8080e6e:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8080e71:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8080e74:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8080e77:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8080e7a:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 8080e7d:	7e 17                	jle    8080e96 <BrotliBuildHuffmanTable+0x80>
 8080e7f:	8b 45 a8             	mov    -0x58(%ebp),%eax
 8080e82:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8080e85:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8080e88:	ba 01 00 00 00       	mov    $0x1,%edx
 8080e8d:	89 c1                	mov    %eax,%ecx
 8080e8f:	d3 e2                	shl    %cl,%edx
 8080e91:	89 d0                	mov    %edx,%eax
 8080e93:	89 45 a0             	mov    %eax,-0x60(%ebp)
 8080e96:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
 8080e9d:	c7 45 8c 80 00 00 00 	movl   $0x80,-0x74(%ebp)
 8080ea4:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)
 8080eab:	c7 45 98 02 00 00 00 	movl   $0x2,-0x68(%ebp)
 8080eb2:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8080eb5:	83 e8 10             	sub    $0x10,%eax
 8080eb8:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8080ebb:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8080ebe:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080ec1:	8b 45 14             	mov    0x14(%ebp),%eax
 8080ec4:	01 d0                	add    %edx,%eax
 8080ec6:	0f b7 00             	movzwl (%eax),%eax
 8080ec9:	0f b7 c0             	movzwl %ax,%eax
 8080ecc:	89 45 b0             	mov    %eax,-0x50(%ebp)
 8080ecf:	e9 ad 00 00 00       	jmp    8080f81 <BrotliBuildHuffmanTable+0x16b>
 8080ed4:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8080ed7:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8080eda:	8b 45 10             	mov    0x10(%ebp),%eax
 8080edd:	01 d0                	add    %edx,%eax
 8080edf:	0f b7 00             	movzwl (%eax),%eax
 8080ee2:	0f b7 c0             	movzwl %ax,%eax
 8080ee5:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8080ee8:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8080eeb:	0f b7 c0             	movzwl %ax,%eax
 8080eee:	8b 55 ac             	mov    -0x54(%ebp),%edx
 8080ef1:	0f b6 d2             	movzbl %dl,%edx
 8080ef4:	88 95 73 ff ff ff    	mov    %dl,-0x8d(%ebp)
 8080efa:	66 89 85 76 ff ff ff 	mov    %ax,-0x8a(%ebp)
 8080f01:	0f b6 85 73 ff ff ff 	movzbl -0x8d(%ebp),%eax
 8080f08:	88 45 f4             	mov    %al,-0xc(%ebp)
 8080f0b:	0f b7 85 76 ff ff ff 	movzwl -0x8a(%ebp),%eax
 8080f12:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8080f16:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8080f19:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8080f1c:	8b 45 88             	mov    -0x78(%ebp),%eax
 8080f1f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 8080f22:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
 8080f28:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8080f2b:	01 d0                	add    %edx,%eax
 8080f2d:	0f b6 00             	movzbl (%eax),%eax
 8080f30:	0f b6 c0             	movzbl %al,%eax
 8080f33:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8080f3a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8080f40:	01 d0                	add    %edx,%eax
 8080f42:	89 45 b8             	mov    %eax,-0x48(%ebp)
 8080f45:	8b 45 98             	mov    -0x68(%ebp),%eax
 8080f48:	89 45 bc             	mov    %eax,-0x44(%ebp)
 8080f4b:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8080f4e:	89 45 c0             	mov    %eax,-0x40(%ebp)
 8080f51:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8080f54:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8080f57:	8b 45 bc             	mov    -0x44(%ebp),%eax
 8080f5a:	29 45 c0             	sub    %eax,-0x40(%ebp)
 8080f5d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8080f60:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8080f67:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8080f6a:	01 c2                	add    %eax,%edx
 8080f6c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8080f6f:	89 02                	mov    %eax,(%edx)
 8080f71:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
 8080f75:	7f e0                	jg     8080f57 <BrotliBuildHuffmanTable+0x141>
 8080f77:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8080f7a:	01 45 88             	add    %eax,-0x78(%ebp)
 8080f7d:	83 6d b0 01          	subl   $0x1,-0x50(%ebp)
 8080f81:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
 8080f85:	0f 85 49 ff ff ff    	jne    8080ed4 <BrotliBuildHuffmanTable+0xbe>
 8080f8b:	d1 65 98             	shll   -0x68(%ebp)
 8080f8e:	d1 6d 8c             	shrl   -0x74(%ebp)
 8080f91:	83 45 ac 01          	addl   $0x1,-0x54(%ebp)
 8080f95:	8b 45 ac             	mov    -0x54(%ebp),%eax
 8080f98:	3b 45 9c             	cmp    -0x64(%ebp),%eax
 8080f9b:	0f 8e 11 ff ff ff    	jle    8080eb2 <BrotliBuildHuffmanTable+0x9c>
 8080fa1:	eb 31                	jmp    8080fd4 <BrotliBuildHuffmanTable+0x1be>
 8080fa3:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8080fa6:	c1 e0 02             	shl    $0x2,%eax
 8080fa9:	8b 55 a0             	mov    -0x60(%ebp),%edx
 8080fac:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
 8080fb3:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 8080fb9:	01 ca                	add    %ecx,%edx
 8080fbb:	89 44 24 08          	mov    %eax,0x8(%esp)
 8080fbf:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8080fc5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8080fc9:	89 14 24             	mov    %edx,(%esp)
 8080fcc:	e8 df 2b fd ff       	call   8053bb0 <__interceptor_memcpy>
 8080fd1:	d1 65 a0             	shll   -0x60(%ebp)
 8080fd4:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8080fd7:	3b 45 a0             	cmp    -0x60(%ebp),%eax
 8080fda:	75 c7                	jne    8080fa3 <BrotliBuildHuffmanTable+0x18d>
 8080fdc:	8b 45 0c             	mov    0xc(%ebp),%eax
 8080fdf:	83 e8 01             	sub    $0x1,%eax
 8080fe2:	ba 80 00 00 00       	mov    $0x80,%edx
 8080fe7:	89 c1                	mov    %eax,%ecx
 8080fe9:	d3 ea                	shr    %cl,%edx
 8080feb:	89 d0                	mov    %edx,%eax
 8080fed:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8080ff0:	c7 45 90 00 01 00 00 	movl   $0x100,-0x70(%ebp)
 8080ff7:	c7 45 94 80 00 00 00 	movl   $0x80,-0x6c(%ebp)
 8080ffe:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081001:	83 c0 01             	add    $0x1,%eax
 8081004:	89 45 80             	mov    %eax,-0x80(%ebp)
 8081007:	c7 45 98 02 00 00 00 	movl   $0x2,-0x68(%ebp)
 808100e:	e9 0c 02 00 00       	jmp    808121f <BrotliBuildHuffmanTable+0x409>
 8081013:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081016:	83 e8 10             	sub    $0x10,%eax
 8081019:	89 45 84             	mov    %eax,-0x7c(%ebp)
 808101c:	e9 dd 01 00 00       	jmp    80811fe <BrotliBuildHuffmanTable+0x3e8>
 8081021:	81 7d 90 00 01 00 00 	cmpl   $0x100,-0x70(%ebp)
 8081028:	0f 85 0a 01 00 00    	jne    8081138 <BrotliBuildHuffmanTable+0x322>
 808102e:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8081031:	c1 e0 02             	shl    $0x2,%eax
 8081034:	01 85 7c ff ff ff    	add    %eax,-0x84(%ebp)
 808103a:	8b 45 14             	mov    0x14(%ebp),%eax
 808103d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8081040:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081043:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8081046:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081049:	89 45 cc             	mov    %eax,-0x34(%ebp)
 808104c:	8b 45 cc             	mov    -0x34(%ebp),%eax
 808104f:	8b 55 c8             	mov    -0x38(%ebp),%edx
 8081052:	29 c2                	sub    %eax,%edx
 8081054:	89 d0                	mov    %edx,%eax
 8081056:	ba 01 00 00 00       	mov    $0x1,%edx
 808105b:	89 c1                	mov    %eax,%ecx
 808105d:	d3 e2                	shl    %cl,%edx
 808105f:	89 d0                	mov    %edx,%eax
 8081061:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8081064:	eb 21                	jmp    8081087 <BrotliBuildHuffmanTable+0x271>
 8081066:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8081069:	8d 14 00             	lea    (%eax,%eax,1),%edx
 808106c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 808106f:	01 d0                	add    %edx,%eax
 8081071:	0f b7 00             	movzwl (%eax),%eax
 8081074:	0f b7 c0             	movzwl %ax,%eax
 8081077:	29 45 d0             	sub    %eax,-0x30(%ebp)
 808107a:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
 808107e:	7e 0d                	jle    808108d <BrotliBuildHuffmanTable+0x277>
 8081080:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 8081084:	d1 65 d0             	shll   -0x30(%ebp)
 8081087:	83 7d c8 0e          	cmpl   $0xe,-0x38(%ebp)
 808108b:	7e d9                	jle    8081066 <BrotliBuildHuffmanTable+0x250>
 808108d:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8081090:	8b 55 c8             	mov    -0x38(%ebp),%edx
 8081093:	29 c2                	sub    %eax,%edx
 8081095:	89 d0                	mov    %edx,%eax
 8081097:	89 45 9c             	mov    %eax,-0x64(%ebp)
 808109a:	8b 45 9c             	mov    -0x64(%ebp),%eax
 808109d:	ba 01 00 00 00       	mov    $0x1,%edx
 80810a2:	89 c1                	mov    %eax,%ecx
 80810a4:	d3 e2                	shl    %cl,%edx
 80810a6:	89 d0                	mov    %edx,%eax
 80810a8:	89 45 a0             	mov    %eax,-0x60(%ebp)
 80810ab:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80810ae:	01 45 a4             	add    %eax,-0x5c(%ebp)
 80810b1:	8b 45 88             	mov    -0x78(%ebp),%eax
 80810b4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80810b7:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
 80810bd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80810c0:	01 d0                	add    %edx,%eax
 80810c2:	0f b6 00             	movzbl (%eax),%eax
 80810c5:	0f b6 c0             	movzbl %al,%eax
 80810c8:	89 45 90             	mov    %eax,-0x70(%ebp)
 80810cb:	8b 45 8c             	mov    -0x74(%ebp),%eax
 80810ce:	01 45 88             	add    %eax,-0x78(%ebp)
 80810d1:	8b 45 90             	mov    -0x70(%ebp),%eax
 80810d4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80810db:	8b 45 08             	mov    0x8(%ebp),%eax
 80810de:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 80810e1:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 80810e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80810ea:	29 c2                	sub    %eax,%edx
 80810ec:	89 d0                	mov    %edx,%eax
 80810ee:	c1 f8 02             	sar    $0x2,%eax
 80810f1:	89 c2                	mov    %eax,%edx
 80810f3:	8b 45 90             	mov    -0x70(%ebp),%eax
 80810f6:	29 c2                	sub    %eax,%edx
 80810f8:	89 d0                	mov    %edx,%eax
 80810fa:	0f b7 c0             	movzwl %ax,%eax
 80810fd:	8b 55 9c             	mov    -0x64(%ebp),%edx
 8081100:	89 d6                	mov    %edx,%esi
 8081102:	8b 55 0c             	mov    0xc(%ebp),%edx
 8081105:	01 f2                	add    %esi,%edx
 8081107:	0f b6 d2             	movzbl %dl,%edx
 808110a:	88 95 74 ff ff ff    	mov    %dl,-0x8c(%ebp)
 8081110:	66 89 85 78 ff ff ff 	mov    %ax,-0x88(%ebp)
 8081117:	0f b6 85 74 ff ff ff 	movzbl -0x8c(%ebp),%eax
 808111e:	88 45 f0             	mov    %al,-0x10(%ebp)
 8081121:	0f b7 85 78 ff ff ff 	movzwl -0x88(%ebp),%eax
 8081128:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
 808112c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 808112f:	89 01                	mov    %eax,(%ecx)
 8081131:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
 8081138:	8b 45 84             	mov    -0x7c(%ebp),%eax
 808113b:	8d 14 00             	lea    (%eax,%eax,1),%edx
 808113e:	8b 45 10             	mov    0x10(%ebp),%eax
 8081141:	01 d0                	add    %edx,%eax
 8081143:	0f b7 00             	movzwl (%eax),%eax
 8081146:	0f b7 c0             	movzwl %ax,%eax
 8081149:	89 45 84             	mov    %eax,-0x7c(%ebp)
 808114c:	8b 45 84             	mov    -0x7c(%ebp),%eax
 808114f:	0f b7 c0             	movzwl %ax,%eax
 8081152:	8b 55 80             	mov    -0x80(%ebp),%edx
 8081155:	89 d1                	mov    %edx,%ecx
 8081157:	8b 55 0c             	mov    0xc(%ebp),%edx
 808115a:	29 d1                	sub    %edx,%ecx
 808115c:	89 ca                	mov    %ecx,%edx
 808115e:	0f b6 d2             	movzbl %dl,%edx
 8081161:	88 95 75 ff ff ff    	mov    %dl,-0x8b(%ebp)
 8081167:	66 89 85 7a ff ff ff 	mov    %ax,-0x86(%ebp)
 808116e:	0f b6 85 75 ff ff ff 	movzbl -0x8b(%ebp),%eax
 8081175:	88 45 f0             	mov    %al,-0x10(%ebp)
 8081178:	0f b7 85 7a ff ff ff 	movzwl -0x86(%ebp),%eax
 808117f:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
 8081183:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8081186:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8081189:	8b 45 90             	mov    -0x70(%ebp),%eax
 808118c:	89 45 d8             	mov    %eax,-0x28(%ebp)
 808118f:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
 8081195:	8b 45 d8             	mov    -0x28(%ebp),%eax
 8081198:	01 d0                	add    %edx,%eax
 808119a:	0f b6 00             	movzbl (%eax),%eax
 808119d:	0f b6 c0             	movzbl %al,%eax
 80811a0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80811a7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 80811ad:	01 d0                	add    %edx,%eax
 80811af:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80811b2:	8b 45 98             	mov    -0x68(%ebp),%eax
 80811b5:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80811b8:	8b 45 a0             	mov    -0x60(%ebp),%eax
 80811bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80811be:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80811c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80811c4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80811c7:	29 45 e4             	sub    %eax,-0x1c(%ebp)
 80811ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80811cd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80811d4:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80811d7:	01 c2                	add    %eax,%edx
 80811d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80811dc:	89 02                	mov    %eax,(%edx)
 80811de:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 80811e2:	7f e0                	jg     80811c4 <BrotliBuildHuffmanTable+0x3ae>
 80811e4:	8b 45 94             	mov    -0x6c(%ebp),%eax
 80811e7:	01 45 90             	add    %eax,-0x70(%ebp)
 80811ea:	8b 45 80             	mov    -0x80(%ebp),%eax
 80811ed:	8d 14 00             	lea    (%eax,%eax,1),%edx
 80811f0:	8b 45 14             	mov    0x14(%ebp),%eax
 80811f3:	01 d0                	add    %edx,%eax
 80811f5:	0f b7 10             	movzwl (%eax),%edx
 80811f8:	83 ea 01             	sub    $0x1,%edx
 80811fb:	66 89 10             	mov    %dx,(%eax)
 80811fe:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081201:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8081204:	8b 45 14             	mov    0x14(%ebp),%eax
 8081207:	01 d0                	add    %edx,%eax
 8081209:	0f b7 00             	movzwl (%eax),%eax
 808120c:	66 85 c0             	test   %ax,%ax
 808120f:	0f 85 0c fe ff ff    	jne    8081021 <BrotliBuildHuffmanTable+0x20b>
 8081215:	d1 65 98             	shll   -0x68(%ebp)
 8081218:	d1 6d 94             	shrl   -0x6c(%ebp)
 808121b:	83 45 80 01          	addl   $0x1,-0x80(%ebp)
 808121f:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081222:	3b 45 a8             	cmp    -0x58(%ebp),%eax
 8081225:	0f 8e e8 fd ff ff    	jle    8081013 <BrotliBuildHuffmanTable+0x1fd>
 808122b:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 808122e:	81 c4 a0 00 00 00    	add    $0xa0,%esp
 8081234:	5b                   	pop    %ebx
 8081235:	5e                   	pop    %esi
 8081236:	5d                   	pop    %ebp
 8081237:	c3                   	ret    

08081238 <BrotliBuildSimpleHuffmanTable>:
 8081238:	55                   	push   %ebp
 8081239:	89 e5                	mov    %esp,%ebp
 808123b:	53                   	push   %ebx
 808123c:	83 ec 64             	sub    $0x64,%esp
 808123f:	e8 ac 88 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081244:	81 c3 bc ed 02 00    	add    $0x2edbc,%ebx
 808124a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 8081251:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081254:	ba 01 00 00 00       	mov    $0x1,%edx
 8081259:	89 c1                	mov    %eax,%ecx
 808125b:	d3 e2                	shl    %cl,%edx
 808125d:	89 d0                	mov    %edx,%eax
 808125f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8081262:	83 7d 14 04          	cmpl   $0x4,0x14(%ebp)
 8081266:	0f 87 b7 04 00 00    	ja     8081723 <.L51+0x19d>
 808126c:	8b 45 14             	mov    0x14(%ebp),%eax
 808126f:	c1 e0 02             	shl    $0x2,%eax
 8081272:	8b 84 18 0c 9c fd ff 	mov    -0x263f4(%eax,%ebx,1),%eax
 8081279:	01 d8                	add    %ebx,%eax
 808127b:	ff e0                	jmp    *%eax

0808127d <.L46>:
 808127d:	8b 45 10             	mov    0x10(%ebp),%eax
 8081280:	0f b7 00             	movzwl (%eax),%eax
 8081283:	0f b7 c0             	movzwl %ax,%eax
 8081286:	66 89 45 b6          	mov    %ax,-0x4a(%ebp)
 808128a:	c6 45 f4 00          	movb   $0x0,-0xc(%ebp)
 808128e:	0f b7 45 b6          	movzwl -0x4a(%ebp),%eax
 8081292:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081296:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8081299:	8b 45 08             	mov    0x8(%ebp),%eax
 808129c:	89 10                	mov    %edx,(%eax)
 808129e:	e9 53 04 00 00       	jmp    80816f6 <.L51+0x170>

080812a3 <.L48>:
 80812a3:	8b 45 10             	mov    0x10(%ebp),%eax
 80812a6:	83 c0 02             	add    $0x2,%eax
 80812a9:	0f b7 10             	movzwl (%eax),%edx
 80812ac:	8b 45 10             	mov    0x10(%ebp),%eax
 80812af:	0f b7 00             	movzwl (%eax),%eax
 80812b2:	66 39 c2             	cmp    %ax,%dx
 80812b5:	76 4a                	jbe    8081301 <.L48+0x5e>
 80812b7:	8b 45 10             	mov    0x10(%ebp),%eax
 80812ba:	0f b7 00             	movzwl (%eax),%eax
 80812bd:	0f b7 c0             	movzwl %ax,%eax
 80812c0:	66 89 45 b8          	mov    %ax,-0x48(%ebp)
 80812c4:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 80812c8:	0f b7 45 b8          	movzwl -0x48(%ebp),%eax
 80812cc:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80812d0:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80812d3:	8b 45 08             	mov    0x8(%ebp),%eax
 80812d6:	89 10                	mov    %edx,(%eax)
 80812d8:	8b 45 08             	mov    0x8(%ebp),%eax
 80812db:	8d 50 04             	lea    0x4(%eax),%edx
 80812de:	8b 45 10             	mov    0x10(%ebp),%eax
 80812e1:	83 c0 02             	add    $0x2,%eax
 80812e4:	0f b7 00             	movzwl (%eax),%eax
 80812e7:	0f b7 c0             	movzwl %ax,%eax
 80812ea:	66 89 45 ba          	mov    %ax,-0x46(%ebp)
 80812ee:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 80812f2:	0f b7 45 ba          	movzwl -0x46(%ebp),%eax
 80812f6:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80812fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80812fd:	89 02                	mov    %eax,(%edx)
 80812ff:	eb 48                	jmp    8081349 <.L48+0xa6>
 8081301:	8b 45 10             	mov    0x10(%ebp),%eax
 8081304:	83 c0 02             	add    $0x2,%eax
 8081307:	0f b7 00             	movzwl (%eax),%eax
 808130a:	0f b7 c0             	movzwl %ax,%eax
 808130d:	66 89 45 bc          	mov    %ax,-0x44(%ebp)
 8081311:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 8081315:	0f b7 45 bc          	movzwl -0x44(%ebp),%eax
 8081319:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 808131d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8081320:	8b 45 08             	mov    0x8(%ebp),%eax
 8081323:	89 10                	mov    %edx,(%eax)
 8081325:	8b 45 08             	mov    0x8(%ebp),%eax
 8081328:	8d 50 04             	lea    0x4(%eax),%edx
 808132b:	8b 45 10             	mov    0x10(%ebp),%eax
 808132e:	0f b7 00             	movzwl (%eax),%eax
 8081331:	0f b7 c0             	movzwl %ax,%eax
 8081334:	66 89 45 be          	mov    %ax,-0x42(%ebp)
 8081338:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 808133c:	0f b7 45 be          	movzwl -0x42(%ebp),%eax
 8081340:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081344:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081347:	89 02                	mov    %eax,(%edx)
 8081349:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%ebp)
 8081350:	e9 a1 03 00 00       	jmp    80816f6 <.L51+0x170>

08081355 <.L49>:
 8081355:	8b 45 10             	mov    0x10(%ebp),%eax
 8081358:	0f b7 00             	movzwl (%eax),%eax
 808135b:	0f b7 c0             	movzwl %ax,%eax
 808135e:	66 89 45 c0          	mov    %ax,-0x40(%ebp)
 8081362:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 8081366:	0f b7 45 c0          	movzwl -0x40(%ebp),%eax
 808136a:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 808136e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8081371:	8b 45 08             	mov    0x8(%ebp),%eax
 8081374:	89 10                	mov    %edx,(%eax)
 8081376:	8b 45 08             	mov    0x8(%ebp),%eax
 8081379:	8d 50 08             	lea    0x8(%eax),%edx
 808137c:	8b 45 10             	mov    0x10(%ebp),%eax
 808137f:	0f b7 00             	movzwl (%eax),%eax
 8081382:	0f b7 c0             	movzwl %ax,%eax
 8081385:	66 89 45 c2          	mov    %ax,-0x3e(%ebp)
 8081389:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 808138d:	0f b7 45 c2          	movzwl -0x3e(%ebp),%eax
 8081391:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081395:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081398:	89 02                	mov    %eax,(%edx)
 808139a:	8b 45 10             	mov    0x10(%ebp),%eax
 808139d:	83 c0 04             	add    $0x4,%eax
 80813a0:	0f b7 10             	movzwl (%eax),%edx
 80813a3:	8b 45 10             	mov    0x10(%ebp),%eax
 80813a6:	83 c0 02             	add    $0x2,%eax
 80813a9:	0f b7 00             	movzwl (%eax),%eax
 80813ac:	66 39 c2             	cmp    %ax,%dx
 80813af:	76 50                	jbe    8081401 <.L49+0xac>
 80813b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80813b4:	8d 50 04             	lea    0x4(%eax),%edx
 80813b7:	8b 45 10             	mov    0x10(%ebp),%eax
 80813ba:	83 c0 02             	add    $0x2,%eax
 80813bd:	0f b7 00             	movzwl (%eax),%eax
 80813c0:	0f b7 c0             	movzwl %ax,%eax
 80813c3:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)
 80813c7:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 80813cb:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax
 80813cf:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80813d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80813d6:	89 02                	mov    %eax,(%edx)
 80813d8:	8b 45 08             	mov    0x8(%ebp),%eax
 80813db:	8d 50 0c             	lea    0xc(%eax),%edx
 80813de:	8b 45 10             	mov    0x10(%ebp),%eax
 80813e1:	83 c0 04             	add    $0x4,%eax
 80813e4:	0f b7 00             	movzwl (%eax),%eax
 80813e7:	0f b7 c0             	movzwl %ax,%eax
 80813ea:	66 89 45 c6          	mov    %ax,-0x3a(%ebp)
 80813ee:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 80813f2:	0f b7 45 c6          	movzwl -0x3a(%ebp),%eax
 80813f6:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80813fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80813fd:	89 02                	mov    %eax,(%edx)
 80813ff:	eb 4e                	jmp    808144f <.L49+0xfa>
 8081401:	8b 45 08             	mov    0x8(%ebp),%eax
 8081404:	8d 50 04             	lea    0x4(%eax),%edx
 8081407:	8b 45 10             	mov    0x10(%ebp),%eax
 808140a:	83 c0 04             	add    $0x4,%eax
 808140d:	0f b7 00             	movzwl (%eax),%eax
 8081410:	0f b7 c0             	movzwl %ax,%eax
 8081413:	66 89 45 c8          	mov    %ax,-0x38(%ebp)
 8081417:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 808141b:	0f b7 45 c8          	movzwl -0x38(%ebp),%eax
 808141f:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081423:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081426:	89 02                	mov    %eax,(%edx)
 8081428:	8b 45 08             	mov    0x8(%ebp),%eax
 808142b:	8d 50 0c             	lea    0xc(%eax),%edx
 808142e:	8b 45 10             	mov    0x10(%ebp),%eax
 8081431:	83 c0 02             	add    $0x2,%eax
 8081434:	0f b7 00             	movzwl (%eax),%eax
 8081437:	0f b7 c0             	movzwl %ax,%eax
 808143a:	66 89 45 ca          	mov    %ax,-0x36(%ebp)
 808143e:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 8081442:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax
 8081446:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 808144a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 808144d:	89 02                	mov    %eax,(%edx)
 808144f:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)
 8081456:	e9 9b 02 00 00       	jmp    80816f6 <.L51+0x170>

0808145b <.L50>:
 808145b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 8081462:	eb 7a                	jmp    80814de <.L50+0x83>
 8081464:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8081467:	83 c0 01             	add    $0x1,%eax
 808146a:	89 45 ec             	mov    %eax,-0x14(%ebp)
 808146d:	eb 65                	jmp    80814d4 <.L50+0x79>
 808146f:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8081472:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8081475:	8b 45 10             	mov    0x10(%ebp),%eax
 8081478:	01 d0                	add    %edx,%eax
 808147a:	0f b7 10             	movzwl (%eax),%edx
 808147d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8081480:	8d 0c 00             	lea    (%eax,%eax,1),%ecx
 8081483:	8b 45 10             	mov    0x10(%ebp),%eax
 8081486:	01 c8                	add    %ecx,%eax
 8081488:	0f b7 00             	movzwl (%eax),%eax
 808148b:	66 39 c2             	cmp    %ax,%dx
 808148e:	73 40                	jae    80814d0 <.L50+0x75>
 8081490:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8081493:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8081496:	8b 45 10             	mov    0x10(%ebp),%eax
 8081499:	01 d0                	add    %edx,%eax
 808149b:	0f b7 00             	movzwl (%eax),%eax
 808149e:	66 89 45 b2          	mov    %ax,-0x4e(%ebp)
 80814a2:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80814a5:	8d 14 00             	lea    (%eax,%eax,1),%edx
 80814a8:	8b 45 10             	mov    0x10(%ebp),%eax
 80814ab:	01 c2                	add    %eax,%edx
 80814ad:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80814b0:	8d 0c 00             	lea    (%eax,%eax,1),%ecx
 80814b3:	8b 45 10             	mov    0x10(%ebp),%eax
 80814b6:	01 c8                	add    %ecx,%eax
 80814b8:	0f b7 00             	movzwl (%eax),%eax
 80814bb:	66 89 02             	mov    %ax,(%edx)
 80814be:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80814c1:	8d 14 00             	lea    (%eax,%eax,1),%edx
 80814c4:	8b 45 10             	mov    0x10(%ebp),%eax
 80814c7:	01 c2                	add    %eax,%edx
 80814c9:	0f b7 45 b2          	movzwl -0x4e(%ebp),%eax
 80814cd:	66 89 02             	mov    %ax,(%edx)
 80814d0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 80814d4:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)
 80814d8:	7e 95                	jle    808146f <.L50+0x14>
 80814da:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 80814de:	83 7d e8 02          	cmpl   $0x2,-0x18(%ebp)
 80814e2:	7e 80                	jle    8081464 <.L50+0x9>
 80814e4:	8b 45 10             	mov    0x10(%ebp),%eax
 80814e7:	0f b7 00             	movzwl (%eax),%eax
 80814ea:	0f b7 c0             	movzwl %ax,%eax
 80814ed:	66 89 45 cc          	mov    %ax,-0x34(%ebp)
 80814f1:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 80814f5:	0f b7 45 cc          	movzwl -0x34(%ebp),%eax
 80814f9:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80814fd:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8081500:	8b 45 08             	mov    0x8(%ebp),%eax
 8081503:	89 10                	mov    %edx,(%eax)
 8081505:	8b 45 08             	mov    0x8(%ebp),%eax
 8081508:	8d 50 08             	lea    0x8(%eax),%edx
 808150b:	8b 45 10             	mov    0x10(%ebp),%eax
 808150e:	83 c0 02             	add    $0x2,%eax
 8081511:	0f b7 00             	movzwl (%eax),%eax
 8081514:	0f b7 c0             	movzwl %ax,%eax
 8081517:	66 89 45 ce          	mov    %ax,-0x32(%ebp)
 808151b:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 808151f:	0f b7 45 ce          	movzwl -0x32(%ebp),%eax
 8081523:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081527:	8b 45 f4             	mov    -0xc(%ebp),%eax
 808152a:	89 02                	mov    %eax,(%edx)
 808152c:	8b 45 08             	mov    0x8(%ebp),%eax
 808152f:	8d 50 04             	lea    0x4(%eax),%edx
 8081532:	8b 45 10             	mov    0x10(%ebp),%eax
 8081535:	83 c0 04             	add    $0x4,%eax
 8081538:	0f b7 00             	movzwl (%eax),%eax
 808153b:	0f b7 c0             	movzwl %ax,%eax
 808153e:	66 89 45 d0          	mov    %ax,-0x30(%ebp)
 8081542:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 8081546:	0f b7 45 d0          	movzwl -0x30(%ebp),%eax
 808154a:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 808154e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081551:	89 02                	mov    %eax,(%edx)
 8081553:	8b 45 08             	mov    0x8(%ebp),%eax
 8081556:	8d 50 0c             	lea    0xc(%eax),%edx
 8081559:	8b 45 10             	mov    0x10(%ebp),%eax
 808155c:	83 c0 06             	add    $0x6,%eax
 808155f:	0f b7 00             	movzwl (%eax),%eax
 8081562:	0f b7 c0             	movzwl %ax,%eax
 8081565:	66 89 45 d2          	mov    %ax,-0x2e(%ebp)
 8081569:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 808156d:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax
 8081571:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081575:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081578:	89 02                	mov    %eax,(%edx)
 808157a:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)
 8081581:	e9 70 01 00 00       	jmp    80816f6 <.L51+0x170>

08081586 <.L51>:
 8081586:	8b 45 10             	mov    0x10(%ebp),%eax
 8081589:	83 c0 06             	add    $0x6,%eax
 808158c:	0f b7 10             	movzwl (%eax),%edx
 808158f:	8b 45 10             	mov    0x10(%ebp),%eax
 8081592:	83 c0 04             	add    $0x4,%eax
 8081595:	0f b7 00             	movzwl (%eax),%eax
 8081598:	66 39 c2             	cmp    %ax,%dx
 808159b:	73 28                	jae    80815c5 <.L51+0x3f>
 808159d:	8b 45 10             	mov    0x10(%ebp),%eax
 80815a0:	0f b7 40 06          	movzwl 0x6(%eax),%eax
 80815a4:	66 89 45 b4          	mov    %ax,-0x4c(%ebp)
 80815a8:	8b 45 10             	mov    0x10(%ebp),%eax
 80815ab:	8d 50 06             	lea    0x6(%eax),%edx
 80815ae:	8b 45 10             	mov    0x10(%ebp),%eax
 80815b1:	0f b7 40 04          	movzwl 0x4(%eax),%eax
 80815b5:	66 89 02             	mov    %ax,(%edx)
 80815b8:	8b 45 10             	mov    0x10(%ebp),%eax
 80815bb:	8d 50 04             	lea    0x4(%eax),%edx
 80815be:	0f b7 45 b4          	movzwl -0x4c(%ebp),%eax
 80815c2:	66 89 02             	mov    %ax,(%edx)
 80815c5:	8b 45 10             	mov    0x10(%ebp),%eax
 80815c8:	0f b7 00             	movzwl (%eax),%eax
 80815cb:	0f b7 c0             	movzwl %ax,%eax
 80815ce:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)
 80815d2:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 80815d6:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax
 80815da:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80815de:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80815e1:	8b 45 08             	mov    0x8(%ebp),%eax
 80815e4:	89 10                	mov    %edx,(%eax)
 80815e6:	8b 45 08             	mov    0x8(%ebp),%eax
 80815e9:	8d 50 04             	lea    0x4(%eax),%edx
 80815ec:	8b 45 10             	mov    0x10(%ebp),%eax
 80815ef:	83 c0 02             	add    $0x2,%eax
 80815f2:	0f b7 00             	movzwl (%eax),%eax
 80815f5:	0f b7 c0             	movzwl %ax,%eax
 80815f8:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)
 80815fc:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 8081600:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax
 8081604:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081608:	8b 45 f4             	mov    -0xc(%ebp),%eax
 808160b:	89 02                	mov    %eax,(%edx)
 808160d:	8b 45 08             	mov    0x8(%ebp),%eax
 8081610:	8d 50 08             	lea    0x8(%eax),%edx
 8081613:	8b 45 10             	mov    0x10(%ebp),%eax
 8081616:	0f b7 00             	movzwl (%eax),%eax
 8081619:	0f b7 c0             	movzwl %ax,%eax
 808161c:	66 89 45 d8          	mov    %ax,-0x28(%ebp)
 8081620:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 8081624:	0f b7 45 d8          	movzwl -0x28(%ebp),%eax
 8081628:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 808162c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 808162f:	89 02                	mov    %eax,(%edx)
 8081631:	8b 45 08             	mov    0x8(%ebp),%eax
 8081634:	8d 50 0c             	lea    0xc(%eax),%edx
 8081637:	8b 45 10             	mov    0x10(%ebp),%eax
 808163a:	83 c0 04             	add    $0x4,%eax
 808163d:	0f b7 00             	movzwl (%eax),%eax
 8081640:	0f b7 c0             	movzwl %ax,%eax
 8081643:	66 89 45 da          	mov    %ax,-0x26(%ebp)
 8081647:	c6 45 f4 03          	movb   $0x3,-0xc(%ebp)
 808164b:	0f b7 45 da          	movzwl -0x26(%ebp),%eax
 808164f:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081653:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081656:	89 02                	mov    %eax,(%edx)
 8081658:	8b 45 08             	mov    0x8(%ebp),%eax
 808165b:	8d 50 10             	lea    0x10(%eax),%edx
 808165e:	8b 45 10             	mov    0x10(%ebp),%eax
 8081661:	0f b7 00             	movzwl (%eax),%eax
 8081664:	0f b7 c0             	movzwl %ax,%eax
 8081667:	66 89 45 dc          	mov    %ax,-0x24(%ebp)
 808166b:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 808166f:	0f b7 45 dc          	movzwl -0x24(%ebp),%eax
 8081673:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 8081677:	8b 45 f4             	mov    -0xc(%ebp),%eax
 808167a:	89 02                	mov    %eax,(%edx)
 808167c:	8b 45 08             	mov    0x8(%ebp),%eax
 808167f:	8d 50 14             	lea    0x14(%eax),%edx
 8081682:	8b 45 10             	mov    0x10(%ebp),%eax
 8081685:	83 c0 02             	add    $0x2,%eax
 8081688:	0f b7 00             	movzwl (%eax),%eax
 808168b:	0f b7 c0             	movzwl %ax,%eax
 808168e:	66 89 45 de          	mov    %ax,-0x22(%ebp)
 8081692:	c6 45 f4 02          	movb   $0x2,-0xc(%ebp)
 8081696:	0f b7 45 de          	movzwl -0x22(%ebp),%eax
 808169a:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 808169e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80816a1:	89 02                	mov    %eax,(%edx)
 80816a3:	8b 45 08             	mov    0x8(%ebp),%eax
 80816a6:	8d 50 18             	lea    0x18(%eax),%edx
 80816a9:	8b 45 10             	mov    0x10(%ebp),%eax
 80816ac:	0f b7 00             	movzwl (%eax),%eax
 80816af:	0f b7 c0             	movzwl %ax,%eax
 80816b2:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
 80816b6:	c6 45 f4 01          	movb   $0x1,-0xc(%ebp)
 80816ba:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
 80816be:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80816c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80816c5:	89 02                	mov    %eax,(%edx)
 80816c7:	8b 45 08             	mov    0x8(%ebp),%eax
 80816ca:	8d 50 1c             	lea    0x1c(%eax),%edx
 80816cd:	8b 45 10             	mov    0x10(%ebp),%eax
 80816d0:	83 c0 06             	add    $0x6,%eax
 80816d3:	0f b7 00             	movzwl (%eax),%eax
 80816d6:	0f b7 c0             	movzwl %ax,%eax
 80816d9:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)
 80816dd:	c6 45 f4 03          	movb   $0x3,-0xc(%ebp)
 80816e1:	0f b7 45 e2          	movzwl -0x1e(%ebp),%eax
 80816e5:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
 80816e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80816ec:	89 02                	mov    %eax,(%edx)
 80816ee:	c7 45 e4 08 00 00 00 	movl   $0x8,-0x1c(%ebp)
 80816f5:	90                   	nop
 80816f6:	eb 2b                	jmp    8081723 <.L51+0x19d>
 80816f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80816fb:	c1 e0 02             	shl    $0x2,%eax
 80816fe:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8081701:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
 8081708:	8b 55 08             	mov    0x8(%ebp),%edx
 808170b:	01 ca                	add    %ecx,%edx
 808170d:	89 44 24 08          	mov    %eax,0x8(%esp)
 8081711:	8b 45 08             	mov    0x8(%ebp),%eax
 8081714:	89 44 24 04          	mov    %eax,0x4(%esp)
 8081718:	89 14 24             	mov    %edx,(%esp)
 808171b:	e8 90 24 fd ff       	call   8053bb0 <__interceptor_memcpy>
 8081720:	d1 65 e4             	shll   -0x1c(%ebp)
 8081723:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8081726:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 8081729:	75 cd                	jne    80816f8 <.L51+0x172>
 808172b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 808172e:	83 c4 64             	add    $0x64,%esp
 8081731:	5b                   	pop    %ebx
 8081732:	5d                   	pop    %ebp
 8081733:	c3                   	ret    

08081734 <BrotliDefaultAllocFunc>:
 8081734:	55                   	push   %ebp
 8081735:	89 e5                	mov    %esp,%ebp
 8081737:	53                   	push   %ebx
 8081738:	83 ec 14             	sub    $0x14,%esp
 808173b:	e8 b0 83 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081740:	81 c3 c0 e8 02 00    	add    $0x2e8c0,%ebx
 8081746:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081749:	89 04 24             	mov    %eax,(%esp)
 808174c:	e8 cf ae fd ff       	call   805c620 <__interceptor_malloc>
 8081751:	83 c4 14             	add    $0x14,%esp
 8081754:	5b                   	pop    %ebx
 8081755:	5d                   	pop    %ebp
 8081756:	c3                   	ret    

08081757 <BrotliDefaultFreeFunc>:
 8081757:	55                   	push   %ebp
 8081758:	89 e5                	mov    %esp,%ebp
 808175a:	53                   	push   %ebx
 808175b:	83 ec 14             	sub    $0x14,%esp
 808175e:	e8 8d 83 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081763:	81 c3 9d e8 02 00    	add    $0x2e89d,%ebx
 8081769:	8b 45 0c             	mov    0xc(%ebp),%eax
 808176c:	89 04 24             	mov    %eax,(%esp)
 808176f:	e8 cc ad fd ff       	call   805c540 <__interceptor_free>
 8081774:	83 c4 14             	add    $0x14,%esp
 8081777:	5b                   	pop    %ebx
 8081778:	5d                   	pop    %ebp
 8081779:	c3                   	ret    

0808177a <BrotliDecoderStateInit>:
 808177a:	55                   	push   %ebp
 808177b:	89 e5                	mov    %esp,%ebp
 808177d:	53                   	push   %ebx
 808177e:	83 ec 14             	sub    $0x14,%esp
 8081781:	e8 6a 83 fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081786:	81 c3 7a e8 02 00    	add    $0x2e87a,%ebx
 808178c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8081790:	75 24                	jne    80817b6 <BrotliDecoderStateInit+0x3c>
 8081792:	8b 45 08             	mov    0x8(%ebp),%eax
 8081795:	8d 93 34 17 fd ff    	lea    -0x2e8cc(%ebx),%edx
 808179b:	89 50 18             	mov    %edx,0x18(%eax)
 808179e:	8b 45 08             	mov    0x8(%ebp),%eax
 80817a1:	8d 93 57 17 fd ff    	lea    -0x2e8a9(%ebx),%edx
 80817a7:	89 50 1c             	mov    %edx,0x1c(%eax)
 80817aa:	8b 45 08             	mov    0x8(%ebp),%eax
 80817ad:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
 80817b4:	eb 1b                	jmp    80817d1 <BrotliDecoderStateInit+0x57>
 80817b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80817b9:	8b 55 0c             	mov    0xc(%ebp),%edx
 80817bc:	89 50 18             	mov    %edx,0x18(%eax)
 80817bf:	8b 45 08             	mov    0x8(%ebp),%eax
 80817c2:	8b 55 10             	mov    0x10(%ebp),%edx
 80817c5:	89 50 1c             	mov    %edx,0x1c(%eax)
 80817c8:	8b 45 08             	mov    0x8(%ebp),%eax
 80817cb:	8b 55 14             	mov    0x14(%ebp),%edx
 80817ce:	89 50 20             	mov    %edx,0x20(%eax)
 80817d1:	8b 45 08             	mov    0x8(%ebp),%eax
 80817d4:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)
 80817db:	8b 45 08             	mov    0x8(%ebp),%eax
 80817de:	83 c0 08             	add    $0x8,%eax
 80817e1:	89 04 24             	mov    %eax,(%esp)
 80817e4:	e8 f5 05 00 00       	call   8081dde <BrotliInitBitReader>
 80817e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80817ec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 80817f2:	8b 45 08             	mov    0x8(%ebp),%eax
 80817f5:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 80817fc:	83 e2 df             	and    $0xffffffdf,%edx
 80817ff:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8081805:	8b 45 08             	mov    0x8(%ebp),%eax
 8081808:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%eax)
 808180f:	00 00 00 
 8081812:	8b 45 08             	mov    0x8(%ebp),%eax
 8081815:	c7 80 20 02 00 00 00 	movl   $0x0,0x220(%eax)
 808181c:	00 00 00 
 808181f:	8b 45 08             	mov    0x8(%ebp),%eax
 8081822:	c7 80 24 02 00 00 00 	movl   $0x0,0x224(%eax)
 8081829:	00 00 00 
 808182c:	8b 45 08             	mov    0x8(%ebp),%eax
 808182f:	c7 80 28 02 00 00 00 	movl   $0x0,0x228(%eax)
 8081836:	00 00 00 
 8081839:	8b 45 08             	mov    0x8(%ebp),%eax
 808183c:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
 8081843:	8b 45 08             	mov    0x8(%ebp),%eax
 8081846:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
 808184d:	8b 45 08             	mov    0x8(%ebp),%eax
 8081850:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
 8081857:	8b 45 08             	mov    0x8(%ebp),%eax
 808185a:	c7 80 0c 01 00 00 00 	movl   $0x0,0x10c(%eax)
 8081861:	00 00 00 
 8081864:	8b 45 08             	mov    0x8(%ebp),%eax
 8081867:	c7 80 10 01 00 00 00 	movl   $0x0,0x110(%eax)
 808186e:	00 00 00 
 8081871:	8b 45 08             	mov    0x8(%ebp),%eax
 8081874:	c7 80 a4 00 00 00 00 	movl   $0x0,0xa4(%eax)
 808187b:	00 00 00 
 808187e:	8b 45 08             	mov    0x8(%ebp),%eax
 8081881:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)
 8081888:	00 00 00 
 808188b:	8b 45 08             	mov    0x8(%ebp),%eax
 808188e:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)
 8081895:	8b 45 08             	mov    0x8(%ebp),%eax
 8081898:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)
 808189f:	8b 45 08             	mov    0x8(%ebp),%eax
 80818a2:	c7 80 34 02 00 00 00 	movl   $0x0,0x234(%eax)
 80818a9:	00 00 00 
 80818ac:	8b 45 08             	mov    0x8(%ebp),%eax
 80818af:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%eax)
 80818b6:	8b 45 08             	mov    0x8(%ebp),%eax
 80818b9:	c7 80 3c 02 00 00 00 	movl   $0x0,0x23c(%eax)
 80818c0:	00 00 00 
 80818c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80818c6:	c7 80 40 02 00 00 00 	movl   $0x0,0x240(%eax)
 80818cd:	00 00 00 
 80818d0:	8b 45 08             	mov    0x8(%ebp),%eax
 80818d3:	c7 80 f8 00 00 00 00 	movl   $0x0,0xf8(%eax)
 80818da:	00 00 00 
 80818dd:	8b 45 08             	mov    0x8(%ebp),%eax
 80818e0:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)
 80818e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80818ea:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%eax)
 80818f1:	8b 45 08             	mov    0x8(%ebp),%eax
 80818f4:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)
 80818fb:	8b 45 08             	mov    0x8(%ebp),%eax
 80818fe:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)
 8081905:	8b 45 08             	mov    0x8(%ebp),%eax
 8081908:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%eax)
 808190f:	00 00 00 
 8081912:	8b 45 08             	mov    0x8(%ebp),%eax
 8081915:	c7 80 84 00 00 00 00 	movl   $0x0,0x84(%eax)
 808191c:	00 00 00 
 808191f:	8b 45 08             	mov    0x8(%ebp),%eax
 8081922:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)
 8081929:	00 00 00 
 808192c:	8b 45 08             	mov    0x8(%ebp),%eax
 808192f:	c7 80 94 00 00 00 00 	movl   $0x0,0x94(%eax)
 8081936:	00 00 00 
 8081939:	8b 45 08             	mov    0x8(%ebp),%eax
 808193c:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8081943:	83 e2 fe             	and    $0xfffffffe,%edx
 8081946:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 808194c:	8b 45 08             	mov    0x8(%ebp),%eax
 808194f:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8081956:	83 e2 fd             	and    $0xfffffffd,%edx
 8081959:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 808195f:	8b 45 08             	mov    0x8(%ebp),%eax
 8081962:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 8081969:	83 e2 fb             	and    $0xfffffffb,%edx
 808196c:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8081972:	8b 45 08             	mov    0x8(%ebp),%eax
 8081975:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 808197c:	83 e2 f7             	and    $0xfffffff7,%edx
 808197f:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8081985:	8b 45 08             	mov    0x8(%ebp),%eax
 8081988:	0f b6 90 2c 02 00 00 	movzbl 0x22c(%eax),%edx
 808198f:	83 ca 10             	or     $0x10,%edx
 8081992:	88 90 2c 02 00 00    	mov    %dl,0x22c(%eax)
 8081998:	8b 45 08             	mov    0x8(%ebp),%eax
 808199b:	c7 80 30 02 00 00 00 	movl   $0x0,0x230(%eax)
 80819a2:	00 00 00 
 80819a5:	8b 45 08             	mov    0x8(%ebp),%eax
 80819a8:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
 80819af:	8b 45 08             	mov    0x8(%ebp),%eax
 80819b2:	c7 40 48 10 00 00 00 	movl   $0x10,0x48(%eax)
 80819b9:	8b 45 08             	mov    0x8(%ebp),%eax
 80819bc:	c7 40 4c 0f 00 00 00 	movl   $0xf,0x4c(%eax)
 80819c3:	8b 45 08             	mov    0x8(%ebp),%eax
 80819c6:	c7 40 50 0b 00 00 00 	movl   $0xb,0x50(%eax)
 80819cd:	8b 45 08             	mov    0x8(%ebp),%eax
 80819d0:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)
 80819d7:	8b 45 08             	mov    0x8(%ebp),%eax
 80819da:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
 80819e1:	8b 45 08             	mov    0x8(%ebp),%eax
 80819e4:	c7 80 a4 00 00 00 00 	movl   $0x0,0xa4(%eax)
 80819eb:	00 00 00 
 80819ee:	8b 45 08             	mov    0x8(%ebp),%eax
 80819f1:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)
 80819f8:	00 00 00 
 80819fb:	8b 45 08             	mov    0x8(%ebp),%eax
 80819fe:	c7 80 14 01 00 00 3f 	movl   $0x3f,0x114(%eax)
 8081a05:	00 00 00 
 8081a08:	e8 42 08 00 00       	call   808224f <BrotliGetDictionary>
 8081a0d:	8b 55 08             	mov    0x8(%ebp),%edx
 8081a10:	89 82 44 02 00 00    	mov    %eax,0x244(%edx)
 8081a16:	e8 73 08 00 00       	call   808228e <BrotliGetTransforms>
 8081a1b:	8b 55 08             	mov    0x8(%ebp),%edx
 8081a1e:	89 82 48 02 00 00    	mov    %eax,0x248(%edx)
 8081a24:	b8 01 00 00 00       	mov    $0x1,%eax
 8081a29:	83 c4 14             	add    $0x14,%esp
 8081a2c:	5b                   	pop    %ebx
 8081a2d:	5d                   	pop    %ebp
 8081a2e:	c3                   	ret    

08081a2f <BrotliDecoderStateMetablockBegin>:
 8081a2f:	55                   	push   %ebp
 8081a30:	89 e5                	mov    %esp,%ebp
 8081a32:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a35:	c7 80 b4 00 00 00 00 	movl   $0x0,0xb4(%eax)
 8081a3c:	00 00 00 
 8081a3f:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a42:	c7 80 bc 00 00 00 00 	movl   $0x1000000,0xbc(%eax)
 8081a49:	00 00 01 
 8081a4c:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a4f:	c7 80 c0 00 00 00 00 	movl   $0x1000000,0xc0(%eax)
 8081a56:	00 00 01 
 8081a59:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a5c:	c7 80 c4 00 00 00 00 	movl   $0x1000000,0xc4(%eax)
 8081a63:	00 00 01 
 8081a66:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a69:	c7 80 c8 00 00 00 01 	movl   $0x1,0xc8(%eax)
 8081a70:	00 00 00 
 8081a73:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a76:	c7 80 cc 00 00 00 01 	movl   $0x1,0xcc(%eax)
 8081a7d:	00 00 00 
 8081a80:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a83:	c7 80 d0 00 00 00 01 	movl   $0x1,0xd0(%eax)
 8081a8a:	00 00 00 
 8081a8d:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a90:	c7 80 d4 00 00 00 01 	movl   $0x1,0xd4(%eax)
 8081a97:	00 00 00 
 8081a9a:	8b 45 08             	mov    0x8(%ebp),%eax
 8081a9d:	c7 80 d8 00 00 00 00 	movl   $0x0,0xd8(%eax)
 8081aa4:	00 00 00 
 8081aa7:	8b 45 08             	mov    0x8(%ebp),%eax
 8081aaa:	c7 80 dc 00 00 00 01 	movl   $0x1,0xdc(%eax)
 8081ab1:	00 00 00 
 8081ab4:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ab7:	c7 80 e0 00 00 00 00 	movl   $0x0,0xe0(%eax)
 8081abe:	00 00 00 
 8081ac1:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ac4:	c7 80 e4 00 00 00 01 	movl   $0x1,0xe4(%eax)
 8081acb:	00 00 00 
 8081ace:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ad1:	c7 80 e8 00 00 00 00 	movl   $0x0,0xe8(%eax)
 8081ad8:	00 00 00 
 8081adb:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ade:	c7 80 3c 02 00 00 00 	movl   $0x0,0x23c(%eax)
 8081ae5:	00 00 00 
 8081ae8:	8b 45 08             	mov    0x8(%ebp),%eax
 8081aeb:	c7 80 40 02 00 00 00 	movl   $0x0,0x240(%eax)
 8081af2:	00 00 00 
 8081af5:	8b 45 08             	mov    0x8(%ebp),%eax
 8081af8:	c7 80 f8 00 00 00 00 	movl   $0x0,0xf8(%eax)
 8081aff:	00 00 00 
 8081b02:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b05:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)
 8081b0c:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b0f:	c7 80 fc 00 00 00 00 	movl   $0x0,0xfc(%eax)
 8081b16:	00 00 00 
 8081b19:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b1c:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%eax)
 8081b23:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b26:	c6 80 00 01 00 00 00 	movb   $0x0,0x100(%eax)
 8081b2d:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b30:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%eax)
 8081b37:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b3a:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)
 8081b41:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b44:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)
 8081b4b:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b4e:	c7 80 88 00 00 00 00 	movl   $0x0,0x88(%eax)
 8081b55:	00 00 00 
 8081b58:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b5b:	c7 80 84 00 00 00 00 	movl   $0x0,0x84(%eax)
 8081b62:	00 00 00 
 8081b65:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b68:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)
 8081b6f:	00 00 00 
 8081b72:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b75:	c7 80 94 00 00 00 00 	movl   $0x0,0x94(%eax)
 8081b7c:	00 00 00 
 8081b7f:	5d                   	pop    %ebp
 8081b80:	c3                   	ret    

08081b81 <BrotliDecoderStateCleanupAfterMetablock>:
 8081b81:	55                   	push   %ebp
 8081b82:	89 e5                	mov    %esp,%ebp
 8081b84:	83 ec 18             	sub    $0x18,%esp
 8081b87:	8b 45 08             	mov    0x8(%ebp),%eax
 8081b8a:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081b8d:	8b 55 08             	mov    0x8(%ebp),%edx
 8081b90:	8b 8a 40 02 00 00    	mov    0x240(%edx),%ecx
 8081b96:	8b 55 08             	mov    0x8(%ebp),%edx
 8081b99:	8b 52 20             	mov    0x20(%edx),%edx
 8081b9c:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081ba0:	89 14 24             	mov    %edx,(%esp)
 8081ba3:	ff d0                	call   *%eax
 8081ba5:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ba8:	c7 80 40 02 00 00 00 	movl   $0x0,0x240(%eax)
 8081baf:	00 00 00 
 8081bb2:	8b 45 08             	mov    0x8(%ebp),%eax
 8081bb5:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081bb8:	8b 55 08             	mov    0x8(%ebp),%edx
 8081bbb:	8b 8a 3c 02 00 00    	mov    0x23c(%edx),%ecx
 8081bc1:	8b 55 08             	mov    0x8(%ebp),%edx
 8081bc4:	8b 52 20             	mov    0x20(%edx),%edx
 8081bc7:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081bcb:	89 14 24             	mov    %edx,(%esp)
 8081bce:	ff d0                	call   *%eax
 8081bd0:	8b 45 08             	mov    0x8(%ebp),%eax
 8081bd3:	c7 80 3c 02 00 00 00 	movl   $0x0,0x23c(%eax)
 8081bda:	00 00 00 
 8081bdd:	8b 45 08             	mov    0x8(%ebp),%eax
 8081be0:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081be3:	8b 55 08             	mov    0x8(%ebp),%edx
 8081be6:	8b 8a f8 00 00 00    	mov    0xf8(%edx),%ecx
 8081bec:	8b 55 08             	mov    0x8(%ebp),%edx
 8081bef:	8b 52 20             	mov    0x20(%edx),%edx
 8081bf2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081bf6:	89 14 24             	mov    %edx,(%esp)
 8081bf9:	ff d0                	call   *%eax
 8081bfb:	8b 45 08             	mov    0x8(%ebp),%eax
 8081bfe:	c7 80 f8 00 00 00 00 	movl   $0x0,0xf8(%eax)
 8081c05:	00 00 00 
 8081c08:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c0b:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081c0e:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c11:	8b 4a 74             	mov    0x74(%edx),%ecx
 8081c14:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c17:	8b 52 20             	mov    0x20(%edx),%edx
 8081c1a:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081c1e:	89 14 24             	mov    %edx,(%esp)
 8081c21:	ff d0                	call   *%eax
 8081c23:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c26:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)
 8081c2d:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c30:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081c33:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c36:	8b 8a 84 00 00 00    	mov    0x84(%edx),%ecx
 8081c3c:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c3f:	8b 52 20             	mov    0x20(%edx),%edx
 8081c42:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081c46:	89 14 24             	mov    %edx,(%esp)
 8081c49:	ff d0                	call   *%eax
 8081c4b:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c4e:	c7 80 84 00 00 00 00 	movl   $0x0,0x84(%eax)
 8081c55:	00 00 00 
 8081c58:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c5b:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081c5e:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c61:	8b 8a 94 00 00 00    	mov    0x94(%edx),%ecx
 8081c67:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c6a:	8b 52 20             	mov    0x20(%edx),%edx
 8081c6d:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081c71:	89 14 24             	mov    %edx,(%esp)
 8081c74:	ff d0                	call   *%eax
 8081c76:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c79:	c7 80 94 00 00 00 00 	movl   $0x0,0x94(%eax)
 8081c80:	00 00 00 
 8081c83:	c9                   	leave  
 8081c84:	c3                   	ret    

08081c85 <BrotliDecoderStateCleanup>:
 8081c85:	55                   	push   %ebp
 8081c86:	89 e5                	mov    %esp,%ebp
 8081c88:	83 ec 18             	sub    $0x18,%esp
 8081c8b:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c8e:	89 04 24             	mov    %eax,(%esp)
 8081c91:	e8 eb fe ff ff       	call   8081b81 <BrotliDecoderStateCleanupAfterMetablock>
 8081c96:	8b 45 08             	mov    0x8(%ebp),%eax
 8081c99:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081c9c:	8b 55 08             	mov    0x8(%ebp),%edx
 8081c9f:	8b 4a 5c             	mov    0x5c(%edx),%ecx
 8081ca2:	8b 55 08             	mov    0x8(%ebp),%edx
 8081ca5:	8b 52 20             	mov    0x20(%edx),%edx
 8081ca8:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081cac:	89 14 24             	mov    %edx,(%esp)
 8081caf:	ff d0                	call   *%eax
 8081cb1:	8b 45 08             	mov    0x8(%ebp),%eax
 8081cb4:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)
 8081cbb:	8b 45 08             	mov    0x8(%ebp),%eax
 8081cbe:	8b 40 1c             	mov    0x1c(%eax),%eax
 8081cc1:	8b 55 08             	mov    0x8(%ebp),%edx
 8081cc4:	8b 8a a4 00 00 00    	mov    0xa4(%edx),%ecx
 8081cca:	8b 55 08             	mov    0x8(%ebp),%edx
 8081ccd:	8b 52 20             	mov    0x20(%edx),%edx
 8081cd0:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081cd4:	89 14 24             	mov    %edx,(%esp)
 8081cd7:	ff d0                	call   *%eax
 8081cd9:	8b 45 08             	mov    0x8(%ebp),%eax
 8081cdc:	c7 80 a4 00 00 00 00 	movl   $0x0,0xa4(%eax)
 8081ce3:	00 00 00 
 8081ce6:	c9                   	leave  
 8081ce7:	c3                   	ret    

08081ce8 <BrotliDecoderHuffmanTreeGroupInit>:
 8081ce8:	55                   	push   %ebp
 8081ce9:	89 e5                	mov    %esp,%ebp
 8081ceb:	53                   	push   %ebx
 8081cec:	83 ec 24             	sub    $0x24,%esp
 8081cef:	e8 fc 7d fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081cf4:	81 c3 0c e3 02 00    	add    $0x2e30c,%ebx
 8081cfa:	8b 45 14             	mov    0x14(%ebp),%eax
 8081cfd:	83 c0 1f             	add    $0x1f,%eax
 8081d00:	c1 e8 05             	shr    $0x5,%eax
 8081d03:	0f b7 84 43 c0 9c fd 	movzwl -0x26340(%ebx,%eax,2),%eax
 8081d0a:	ff 
 8081d0b:	0f b7 c0             	movzwl %ax,%eax
 8081d0e:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8081d11:	8b 45 18             	mov    0x18(%ebp),%eax
 8081d14:	0f af 45 e8          	imul   -0x18(%ebp),%eax
 8081d18:	c1 e0 02             	shl    $0x2,%eax
 8081d1b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 8081d1e:	8b 45 18             	mov    0x18(%ebp),%eax
 8081d21:	c1 e0 02             	shl    $0x2,%eax
 8081d24:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8081d27:	8b 45 08             	mov    0x8(%ebp),%eax
 8081d2a:	8b 40 18             	mov    0x18(%eax),%eax
 8081d2d:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8081d30:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 8081d33:	01 d1                	add    %edx,%ecx
 8081d35:	8b 55 08             	mov    0x8(%ebp),%edx
 8081d38:	8b 52 20             	mov    0x20(%edx),%edx
 8081d3b:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8081d3f:	89 14 24             	mov    %edx,(%esp)
 8081d42:	ff d0                	call   *%eax
 8081d44:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8081d47:	8b 45 10             	mov    0x10(%ebp),%eax
 8081d4a:	89 c2                	mov    %eax,%edx
 8081d4c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081d4f:	66 89 50 08          	mov    %dx,0x8(%eax)
 8081d53:	8b 45 14             	mov    0x14(%ebp),%eax
 8081d56:	89 c2                	mov    %eax,%edx
 8081d58:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081d5b:	66 89 50 0a          	mov    %dx,0xa(%eax)
 8081d5f:	8b 45 18             	mov    0x18(%ebp),%eax
 8081d62:	89 c2                	mov    %eax,%edx
 8081d64:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081d67:	66 89 50 0c          	mov    %dx,0xc(%eax)
 8081d6b:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081d6e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8081d71:	89 10                	mov    %edx,(%eax)
 8081d73:	8b 45 18             	mov    0x18(%ebp),%eax
 8081d76:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8081d7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081d80:	01 c2                	add    %eax,%edx
 8081d82:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081d85:	89 50 04             	mov    %edx,0x4(%eax)
 8081d88:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8081d8c:	0f 95 c0             	setne  %al
 8081d8f:	0f b6 c0             	movzbl %al,%eax
 8081d92:	83 c4 24             	add    $0x24,%esp
 8081d95:	5b                   	pop    %ebx
 8081d96:	5d                   	pop    %ebp
 8081d97:	c3                   	ret    

08081d98 <BrotliDefaultAllocFunc>:
 8081d98:	55                   	push   %ebp
 8081d99:	89 e5                	mov    %esp,%ebp
 8081d9b:	53                   	push   %ebx
 8081d9c:	83 ec 14             	sub    $0x14,%esp
 8081d9f:	e8 4c 7d fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081da4:	81 c3 5c e2 02 00    	add    $0x2e25c,%ebx
 8081daa:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081dad:	89 04 24             	mov    %eax,(%esp)
 8081db0:	e8 6b a8 fd ff       	call   805c620 <__interceptor_malloc>
 8081db5:	83 c4 14             	add    $0x14,%esp
 8081db8:	5b                   	pop    %ebx
 8081db9:	5d                   	pop    %ebp
 8081dba:	c3                   	ret    

08081dbb <BrotliDefaultFreeFunc>:
 8081dbb:	55                   	push   %ebp
 8081dbc:	89 e5                	mov    %esp,%ebp
 8081dbe:	53                   	push   %ebx
 8081dbf:	83 ec 14             	sub    $0x14,%esp
 8081dc2:	e8 29 7d fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081dc7:	81 c3 39 e2 02 00    	add    $0x2e239,%ebx
 8081dcd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8081dd0:	89 04 24             	mov    %eax,(%esp)
 8081dd3:	e8 68 a7 fd ff       	call   805c540 <__interceptor_free>
 8081dd8:	83 c4 14             	add    $0x14,%esp
 8081ddb:	5b                   	pop    %ebx
 8081ddc:	5d                   	pop    %ebp
 8081ddd:	c3                   	ret    

08081dde <BrotliInitBitReader>:
 8081dde:	55                   	push   %ebp
 8081ddf:	89 e5                	mov    %esp,%ebp
 8081de1:	8b 45 08             	mov    0x8(%ebp),%eax
 8081de4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 8081dea:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ded:	c7 40 04 20 00 00 00 	movl   $0x20,0x4(%eax)
 8081df4:	5d                   	pop    %ebp
 8081df5:	c3                   	ret    

08081df6 <BrotliWarmupBitReader>:
 8081df6:	55                   	push   %ebp
 8081df7:	89 e5                	mov    %esp,%ebp
 8081df9:	83 ec 10             	sub    $0x10,%esp
 8081dfc:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
 8081e03:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8081e0a:	8b 45 08             	mov    0x8(%ebp),%eax
 8081e0d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8081e10:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8081e13:	8b 40 04             	mov    0x4(%eax),%eax
 8081e16:	ba 20 00 00 00       	mov    $0x20,%edx
 8081e1b:	29 c2                	sub    %eax,%edx
 8081e1d:	89 d0                	mov    %edx,%eax
 8081e1f:	85 c0                	test   %eax,%eax
 8081e21:	0f 85 81 00 00 00    	jne    8081ea8 <BrotliWarmupBitReader+0xb2>
 8081e27:	8b 45 08             	mov    0x8(%ebp),%eax
 8081e2a:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8081e2d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e30:	8b 40 0c             	mov    0xc(%eax),%eax
 8081e33:	85 c0                	test   %eax,%eax
 8081e35:	75 07                	jne    8081e3e <BrotliWarmupBitReader+0x48>
 8081e37:	b8 00 00 00 00       	mov    $0x0,%eax
 8081e3c:	eb 5c                	jmp    8081e9a <BrotliWarmupBitReader+0xa4>
 8081e3e:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e41:	8b 00                	mov    (%eax),%eax
 8081e43:	c1 e8 08             	shr    $0x8,%eax
 8081e46:	89 c2                	mov    %eax,%edx
 8081e48:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e4b:	89 10                	mov    %edx,(%eax)
 8081e4d:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e50:	8b 10                	mov    (%eax),%edx
 8081e52:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e55:	8b 40 08             	mov    0x8(%eax),%eax
 8081e58:	0f b6 00             	movzbl (%eax),%eax
 8081e5b:	0f b6 c0             	movzbl %al,%eax
 8081e5e:	c1 e0 18             	shl    $0x18,%eax
 8081e61:	09 c2                	or     %eax,%edx
 8081e63:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e66:	89 10                	mov    %edx,(%eax)
 8081e68:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e6b:	8b 40 04             	mov    0x4(%eax),%eax
 8081e6e:	8d 50 f8             	lea    -0x8(%eax),%edx
 8081e71:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e74:	89 50 04             	mov    %edx,0x4(%eax)
 8081e77:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e7a:	8b 40 0c             	mov    0xc(%eax),%eax
 8081e7d:	8d 50 ff             	lea    -0x1(%eax),%edx
 8081e80:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e83:	89 50 0c             	mov    %edx,0xc(%eax)
 8081e86:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e89:	8b 40 08             	mov    0x8(%eax),%eax
 8081e8c:	8d 50 01             	lea    0x1(%eax),%edx
 8081e8f:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8081e92:	89 50 08             	mov    %edx,0x8(%eax)
 8081e95:	b8 01 00 00 00       	mov    $0x1,%eax
 8081e9a:	85 c0                	test   %eax,%eax
 8081e9c:	75 0a                	jne    8081ea8 <BrotliWarmupBitReader+0xb2>
 8081e9e:	b8 00 00 00 00       	mov    $0x0,%eax
 8081ea3:	e9 96 00 00 00       	jmp    8081f3e <BrotliWarmupBitReader+0x148>
 8081ea8:	eb 7e                	jmp    8081f28 <BrotliWarmupBitReader+0x132>
 8081eaa:	8b 45 08             	mov    0x8(%ebp),%eax
 8081ead:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8081eb0:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081eb3:	8b 40 0c             	mov    0xc(%eax),%eax
 8081eb6:	85 c0                	test   %eax,%eax
 8081eb8:	75 07                	jne    8081ec1 <BrotliWarmupBitReader+0xcb>
 8081eba:	b8 00 00 00 00       	mov    $0x0,%eax
 8081ebf:	eb 5c                	jmp    8081f1d <BrotliWarmupBitReader+0x127>
 8081ec1:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081ec4:	8b 00                	mov    (%eax),%eax
 8081ec6:	c1 e8 08             	shr    $0x8,%eax
 8081ec9:	89 c2                	mov    %eax,%edx
 8081ecb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081ece:	89 10                	mov    %edx,(%eax)
 8081ed0:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081ed3:	8b 10                	mov    (%eax),%edx
 8081ed5:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081ed8:	8b 40 08             	mov    0x8(%eax),%eax
 8081edb:	0f b6 00             	movzbl (%eax),%eax
 8081ede:	0f b6 c0             	movzbl %al,%eax
 8081ee1:	c1 e0 18             	shl    $0x18,%eax
 8081ee4:	09 c2                	or     %eax,%edx
 8081ee6:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081ee9:	89 10                	mov    %edx,(%eax)
 8081eeb:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081eee:	8b 40 04             	mov    0x4(%eax),%eax
 8081ef1:	8d 50 f8             	lea    -0x8(%eax),%edx
 8081ef4:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081ef7:	89 50 04             	mov    %edx,0x4(%eax)
 8081efa:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081efd:	8b 40 0c             	mov    0xc(%eax),%eax
 8081f00:	8d 50 ff             	lea    -0x1(%eax),%edx
 8081f03:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081f06:	89 50 0c             	mov    %edx,0xc(%eax)
 8081f09:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081f0c:	8b 40 08             	mov    0x8(%eax),%eax
 8081f0f:	8d 50 01             	lea    0x1(%eax),%edx
 8081f12:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8081f15:	89 50 08             	mov    %edx,0x8(%eax)
 8081f18:	b8 01 00 00 00       	mov    $0x1,%eax
 8081f1d:	85 c0                	test   %eax,%eax
 8081f1f:	75 07                	jne    8081f28 <BrotliWarmupBitReader+0x132>
 8081f21:	b8 01 00 00 00       	mov    $0x1,%eax
 8081f26:	eb 16                	jmp    8081f3e <BrotliWarmupBitReader+0x148>
 8081f28:	8b 45 08             	mov    0x8(%ebp),%eax
 8081f2b:	8b 40 08             	mov    0x8(%eax),%eax
 8081f2e:	23 45 f0             	and    -0x10(%ebp),%eax
 8081f31:	85 c0                	test   %eax,%eax
 8081f33:	0f 85 71 ff ff ff    	jne    8081eaa <BrotliWarmupBitReader+0xb4>
 8081f39:	b8 01 00 00 00       	mov    $0x1,%eax
 8081f3e:	c9                   	leave  
 8081f3f:	c3                   	ret    

08081f40 <BrotliSafeReadBits32Slow>:
 8081f40:	55                   	push   %ebp
 8081f41:	89 e5                	mov    %esp,%ebp
 8081f43:	53                   	push   %ebx
 8081f44:	81 ec 90 00 00 00    	sub    $0x90,%esp
 8081f4a:	e8 a1 7b fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8081f4f:	81 c3 b1 e0 02 00    	add    $0x2e0b1,%ebx
 8081f55:	8b 45 08             	mov    0x8(%ebp),%eax
 8081f58:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
 8081f5e:	8d 45 ec             	lea    -0x14(%ebp),%eax
 8081f61:	89 45 80             	mov    %eax,-0x80(%ebp)
 8081f64:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8081f6a:	8b 10                	mov    (%eax),%edx
 8081f6c:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081f6f:	89 10                	mov    %edx,(%eax)
 8081f71:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8081f77:	8b 50 04             	mov    0x4(%eax),%edx
 8081f7a:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081f7d:	89 50 04             	mov    %edx,0x4(%eax)
 8081f80:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8081f86:	8b 50 08             	mov    0x8(%eax),%edx
 8081f89:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081f8c:	89 50 08             	mov    %edx,0x8(%eax)
 8081f8f:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8081f95:	8b 50 0c             	mov    0xc(%eax),%edx
 8081f98:	8b 45 80             	mov    -0x80(%ebp),%eax
 8081f9b:	89 50 0c             	mov    %edx,0xc(%eax)
 8081f9e:	8b 45 08             	mov    0x8(%ebp),%eax
 8081fa1:	89 45 84             	mov    %eax,-0x7c(%ebp)
 8081fa4:	c7 45 88 10 00 00 00 	movl   $0x10,-0x78(%ebp)
 8081fab:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 8081fb1:	89 45 8c             	mov    %eax,-0x74(%ebp)
 8081fb4:	e9 81 00 00 00       	jmp    808203a <BrotliSafeReadBits32Slow+0xfa>
 8081fb9:	8b 45 84             	mov    -0x7c(%ebp),%eax
 8081fbc:	89 45 90             	mov    %eax,-0x70(%ebp)
 8081fbf:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081fc2:	8b 40 0c             	mov    0xc(%eax),%eax
 8081fc5:	85 c0                	test   %eax,%eax
 8081fc7:	75 07                	jne    8081fd0 <BrotliSafeReadBits32Slow+0x90>
 8081fc9:	b8 00 00 00 00       	mov    $0x0,%eax
 8081fce:	eb 5c                	jmp    808202c <BrotliSafeReadBits32Slow+0xec>
 8081fd0:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081fd3:	8b 00                	mov    (%eax),%eax
 8081fd5:	c1 e8 08             	shr    $0x8,%eax
 8081fd8:	89 c2                	mov    %eax,%edx
 8081fda:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081fdd:	89 10                	mov    %edx,(%eax)
 8081fdf:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081fe2:	8b 10                	mov    (%eax),%edx
 8081fe4:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081fe7:	8b 40 08             	mov    0x8(%eax),%eax
 8081fea:	0f b6 00             	movzbl (%eax),%eax
 8081fed:	0f b6 c0             	movzbl %al,%eax
 8081ff0:	c1 e0 18             	shl    $0x18,%eax
 8081ff3:	09 c2                	or     %eax,%edx
 8081ff5:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081ff8:	89 10                	mov    %edx,(%eax)
 8081ffa:	8b 45 90             	mov    -0x70(%ebp),%eax
 8081ffd:	8b 40 04             	mov    0x4(%eax),%eax
 8082000:	8d 50 f8             	lea    -0x8(%eax),%edx
 8082003:	8b 45 90             	mov    -0x70(%ebp),%eax
 8082006:	89 50 04             	mov    %edx,0x4(%eax)
 8082009:	8b 45 90             	mov    -0x70(%ebp),%eax
 808200c:	8b 40 0c             	mov    0xc(%eax),%eax
 808200f:	8d 50 ff             	lea    -0x1(%eax),%edx
 8082012:	8b 45 90             	mov    -0x70(%ebp),%eax
 8082015:	89 50 0c             	mov    %edx,0xc(%eax)
 8082018:	8b 45 90             	mov    -0x70(%ebp),%eax
 808201b:	8b 40 08             	mov    0x8(%eax),%eax
 808201e:	8d 50 01             	lea    0x1(%eax),%edx
 8082021:	8b 45 90             	mov    -0x70(%ebp),%eax
 8082024:	89 50 08             	mov    %edx,0x8(%eax)
 8082027:	b8 01 00 00 00       	mov    $0x1,%eax
 808202c:	85 c0                	test   %eax,%eax
 808202e:	75 0a                	jne    808203a <BrotliSafeReadBits32Slow+0xfa>
 8082030:	b8 00 00 00 00       	mov    $0x0,%eax
 8082035:	e9 82 00 00 00       	jmp    80820bc <BrotliSafeReadBits32Slow+0x17c>
 808203a:	8b 45 84             	mov    -0x7c(%ebp),%eax
 808203d:	89 45 94             	mov    %eax,-0x6c(%ebp)
 8082040:	8b 45 94             	mov    -0x6c(%ebp),%eax
 8082043:	8b 40 04             	mov    0x4(%eax),%eax
 8082046:	ba 20 00 00 00       	mov    $0x20,%edx
 808204b:	29 c2                	sub    %eax,%edx
 808204d:	89 d0                	mov    %edx,%eax
 808204f:	39 45 88             	cmp    %eax,-0x78(%ebp)
 8082052:	0f 87 61 ff ff ff    	ja     8081fb9 <BrotliSafeReadBits32Slow+0x79>
 8082058:	8b 45 84             	mov    -0x7c(%ebp),%eax
 808205b:	89 45 98             	mov    %eax,-0x68(%ebp)
 808205e:	8b 45 88             	mov    -0x78(%ebp),%eax
 8082061:	89 45 9c             	mov    %eax,-0x64(%ebp)
 8082064:	8b 45 8c             	mov    -0x74(%ebp),%eax
 8082067:	89 45 a0             	mov    %eax,-0x60(%ebp)
 808206a:	8b 45 98             	mov    -0x68(%ebp),%eax
 808206d:	89 45 a4             	mov    %eax,-0x5c(%ebp)
 8082070:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8082073:	8b 10                	mov    (%eax),%edx
 8082075:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 8082078:	8b 40 04             	mov    0x4(%eax),%eax
 808207b:	89 c1                	mov    %eax,%ecx
 808207d:	d3 ea                	shr    %cl,%edx
 808207f:	89 d0                	mov    %edx,%eax
 8082081:	89 c2                	mov    %eax,%edx
 8082083:	8b 45 9c             	mov    -0x64(%ebp),%eax
 8082086:	89 45 a8             	mov    %eax,-0x58(%ebp)
 8082089:	8b 45 a8             	mov    -0x58(%ebp),%eax
 808208c:	8b 84 83 20 9d fd ff 	mov    -0x262e0(%ebx,%eax,4),%eax
 8082093:	21 c2                	and    %eax,%edx
 8082095:	8b 45 a0             	mov    -0x60(%ebp),%eax
 8082098:	89 10                	mov    %edx,(%eax)
 808209a:	8b 45 98             	mov    -0x68(%ebp),%eax
 808209d:	89 45 ac             	mov    %eax,-0x54(%ebp)
 80820a0:	8b 45 9c             	mov    -0x64(%ebp),%eax
 80820a3:	89 45 b0             	mov    %eax,-0x50(%ebp)
 80820a6:	8b 45 ac             	mov    -0x54(%ebp),%eax
 80820a9:	8b 50 04             	mov    0x4(%eax),%edx
 80820ac:	8b 45 b0             	mov    -0x50(%ebp),%eax
 80820af:	01 c2                	add    %eax,%edx
 80820b1:	8b 45 ac             	mov    -0x54(%ebp),%eax
 80820b4:	89 50 04             	mov    %edx,0x4(%eax)
 80820b7:	b8 01 00 00 00       	mov    $0x1,%eax
 80820bc:	85 c0                	test   %eax,%eax
 80820be:	0f 84 24 01 00 00    	je     80821e8 <BrotliSafeReadBits32Slow+0x2a8>
 80820c4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80820c7:	8d 50 f0             	lea    -0x10(%eax),%edx
 80820ca:	8b 45 08             	mov    0x8(%ebp),%eax
 80820cd:	89 45 b4             	mov    %eax,-0x4c(%ebp)
 80820d0:	89 55 b8             	mov    %edx,-0x48(%ebp)
 80820d3:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
 80820d9:	89 45 bc             	mov    %eax,-0x44(%ebp)
 80820dc:	e9 81 00 00 00       	jmp    8082162 <BrotliSafeReadBits32Slow+0x222>
 80820e1:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 80820e4:	89 45 c0             	mov    %eax,-0x40(%ebp)
 80820e7:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80820ea:	8b 40 0c             	mov    0xc(%eax),%eax
 80820ed:	85 c0                	test   %eax,%eax
 80820ef:	75 07                	jne    80820f8 <BrotliSafeReadBits32Slow+0x1b8>
 80820f1:	b8 00 00 00 00       	mov    $0x0,%eax
 80820f6:	eb 5c                	jmp    8082154 <BrotliSafeReadBits32Slow+0x214>
 80820f8:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80820fb:	8b 00                	mov    (%eax),%eax
 80820fd:	c1 e8 08             	shr    $0x8,%eax
 8082100:	89 c2                	mov    %eax,%edx
 8082102:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8082105:	89 10                	mov    %edx,(%eax)
 8082107:	8b 45 c0             	mov    -0x40(%ebp),%eax
 808210a:	8b 10                	mov    (%eax),%edx
 808210c:	8b 45 c0             	mov    -0x40(%ebp),%eax
 808210f:	8b 40 08             	mov    0x8(%eax),%eax
 8082112:	0f b6 00             	movzbl (%eax),%eax
 8082115:	0f b6 c0             	movzbl %al,%eax
 8082118:	c1 e0 18             	shl    $0x18,%eax
 808211b:	09 c2                	or     %eax,%edx
 808211d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8082120:	89 10                	mov    %edx,(%eax)
 8082122:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8082125:	8b 40 04             	mov    0x4(%eax),%eax
 8082128:	8d 50 f8             	lea    -0x8(%eax),%edx
 808212b:	8b 45 c0             	mov    -0x40(%ebp),%eax
 808212e:	89 50 04             	mov    %edx,0x4(%eax)
 8082131:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8082134:	8b 40 0c             	mov    0xc(%eax),%eax
 8082137:	8d 50 ff             	lea    -0x1(%eax),%edx
 808213a:	8b 45 c0             	mov    -0x40(%ebp),%eax
 808213d:	89 50 0c             	mov    %edx,0xc(%eax)
 8082140:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8082143:	8b 40 08             	mov    0x8(%eax),%eax
 8082146:	8d 50 01             	lea    0x1(%eax),%edx
 8082149:	8b 45 c0             	mov    -0x40(%ebp),%eax
 808214c:	89 50 08             	mov    %edx,0x8(%eax)
 808214f:	b8 01 00 00 00       	mov    $0x1,%eax
 8082154:	85 c0                	test   %eax,%eax
 8082156:	75 0a                	jne    8082162 <BrotliSafeReadBits32Slow+0x222>
 8082158:	b8 00 00 00 00       	mov    $0x0,%eax
 808215d:	e9 82 00 00 00       	jmp    80821e4 <BrotliSafeReadBits32Slow+0x2a4>
 8082162:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8082165:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8082168:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 808216b:	8b 40 04             	mov    0x4(%eax),%eax
 808216e:	ba 20 00 00 00       	mov    $0x20,%edx
 8082173:	29 c2                	sub    %eax,%edx
 8082175:	89 d0                	mov    %edx,%eax
 8082177:	39 45 b8             	cmp    %eax,-0x48(%ebp)
 808217a:	0f 87 61 ff ff ff    	ja     80820e1 <BrotliSafeReadBits32Slow+0x1a1>
 8082180:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 8082183:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8082186:	8b 45 b8             	mov    -0x48(%ebp),%eax
 8082189:	89 45 cc             	mov    %eax,-0x34(%ebp)
 808218c:	8b 45 bc             	mov    -0x44(%ebp),%eax
 808218f:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8082192:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8082195:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8082198:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 808219b:	8b 10                	mov    (%eax),%edx
 808219d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80821a0:	8b 40 04             	mov    0x4(%eax),%eax
 80821a3:	89 c1                	mov    %eax,%ecx
 80821a5:	d3 ea                	shr    %cl,%edx
 80821a7:	89 d0                	mov    %edx,%eax
 80821a9:	89 c2                	mov    %eax,%edx
 80821ab:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80821ae:	89 45 d8             	mov    %eax,-0x28(%ebp)
 80821b1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80821b4:	8b 84 83 20 9d fd ff 	mov    -0x262e0(%ebx,%eax,4),%eax
 80821bb:	21 c2                	and    %eax,%edx
 80821bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
 80821c0:	89 10                	mov    %edx,(%eax)
 80821c2:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80821c5:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80821c8:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80821cb:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80821ce:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80821d1:	8b 50 04             	mov    0x4(%eax),%edx
 80821d4:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80821d7:	01 c2                	add    %eax,%edx
 80821d9:	8b 45 dc             	mov    -0x24(%ebp),%eax
 80821dc:	89 50 04             	mov    %edx,0x4(%eax)
 80821df:	b8 01 00 00 00       	mov    $0x1,%eax
 80821e4:	85 c0                	test   %eax,%eax
 80821e6:	75 41                	jne    8082229 <BrotliSafeReadBits32Slow+0x2e9>
 80821e8:	8b 45 08             	mov    0x8(%ebp),%eax
 80821eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80821ee:	8d 45 ec             	lea    -0x14(%ebp),%eax
 80821f1:	89 45 e8             	mov    %eax,-0x18(%ebp)
 80821f4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80821f7:	8b 10                	mov    (%eax),%edx
 80821f9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80821fc:	89 10                	mov    %edx,(%eax)
 80821fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8082201:	8b 50 04             	mov    0x4(%eax),%edx
 8082204:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8082207:	89 50 04             	mov    %edx,0x4(%eax)
 808220a:	8b 45 e8             	mov    -0x18(%ebp),%eax
 808220d:	8b 50 08             	mov    0x8(%eax),%edx
 8082210:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8082213:	89 50 08             	mov    %edx,0x8(%eax)
 8082216:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8082219:	8b 50 0c             	mov    0xc(%eax),%edx
 808221c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 808221f:	89 50 0c             	mov    %edx,0xc(%eax)
 8082222:	b8 00 00 00 00       	mov    $0x0,%eax
 8082227:	eb 1d                	jmp    8082246 <BrotliSafeReadBits32Slow+0x306>
 8082229:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax
 808222f:	c1 e0 10             	shl    $0x10,%eax
 8082232:	89 c2                	mov    %eax,%edx
 8082234:	8b 85 74 ff ff ff    	mov    -0x8c(%ebp),%eax
 808223a:	09 c2                	or     %eax,%edx
 808223c:	8b 45 10             	mov    0x10(%ebp),%eax
 808223f:	89 10                	mov    %edx,(%eax)
 8082241:	b8 01 00 00 00       	mov    $0x1,%eax
 8082246:	81 c4 90 00 00 00    	add    $0x90,%esp
 808224c:	5b                   	pop    %ebx
 808224d:	5d                   	pop    %ebp
 808224e:	c3                   	ret    

0808224f <BrotliGetDictionary>:
 808224f:	55                   	push   %ebp
 8082250:	89 e5                	mov    %esp,%ebp
 8082252:	e8 3e dd fc ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8082257:	81 c1 a9 dd 02 00    	add    $0x2dda9,%ecx
 808225d:	8d 81 80 02 00 00    	lea    0x280(%ecx),%eax
 8082263:	5d                   	pop    %ebp
 8082264:	c3                   	ret    

08082265 <BrotliSetDictionaryData>:
 8082265:	55                   	push   %ebp
 8082266:	89 e5                	mov    %esp,%ebp
 8082268:	e8 28 dd fc ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 808226d:	81 c1 93 dd 02 00    	add    $0x2dd93,%ecx
 8082273:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8082277:	74 13                	je     808228c <BrotliSetDictionaryData+0x27>
 8082279:	8b 81 24 03 00 00    	mov    0x324(%ecx),%eax
 808227f:	85 c0                	test   %eax,%eax
 8082281:	75 09                	jne    808228c <BrotliSetDictionaryData+0x27>
 8082283:	8b 45 08             	mov    0x8(%ebp),%eax
 8082286:	89 81 24 03 00 00    	mov    %eax,0x324(%ecx)
 808228c:	5d                   	pop    %ebp
 808228d:	c3                   	ret    

0808228e <BrotliGetTransforms>:
 808228e:	55                   	push   %ebp
 808228f:	89 e5                	mov    %esp,%ebp
 8082291:	e8 ff dc fc ff       	call   804ff95 <__x86.get_pc_thunk.cx>
 8082296:	81 c1 6a dd 02 00    	add    $0x2dd6a,%ecx
 808229c:	8d 81 40 03 00 00    	lea    0x340(%ecx),%eax
 80822a2:	5d                   	pop    %ebp
 80822a3:	c3                   	ret    

080822a4 <ToUpperCase>:
 80822a4:	55                   	push   %ebp
 80822a5:	89 e5                	mov    %esp,%ebp
 80822a7:	8b 45 08             	mov    0x8(%ebp),%eax
 80822aa:	0f b6 00             	movzbl (%eax),%eax
 80822ad:	3c bf                	cmp    $0xbf,%al
 80822af:	77 2b                	ja     80822dc <ToUpperCase+0x38>
 80822b1:	8b 45 08             	mov    0x8(%ebp),%eax
 80822b4:	0f b6 00             	movzbl (%eax),%eax
 80822b7:	3c 60                	cmp    $0x60,%al
 80822b9:	76 1a                	jbe    80822d5 <ToUpperCase+0x31>
 80822bb:	8b 45 08             	mov    0x8(%ebp),%eax
 80822be:	0f b6 00             	movzbl (%eax),%eax
 80822c1:	3c 7a                	cmp    $0x7a,%al
 80822c3:	77 10                	ja     80822d5 <ToUpperCase+0x31>
 80822c5:	8b 45 08             	mov    0x8(%ebp),%eax
 80822c8:	0f b6 00             	movzbl (%eax),%eax
 80822cb:	83 f0 20             	xor    $0x20,%eax
 80822ce:	89 c2                	mov    %eax,%edx
 80822d0:	8b 45 08             	mov    0x8(%ebp),%eax
 80822d3:	88 10                	mov    %dl,(%eax)
 80822d5:	b8 01 00 00 00       	mov    $0x1,%eax
 80822da:	eb 3e                	jmp    808231a <ToUpperCase+0x76>
 80822dc:	8b 45 08             	mov    0x8(%ebp),%eax
 80822df:	0f b6 00             	movzbl (%eax),%eax
 80822e2:	3c df                	cmp    $0xdf,%al
 80822e4:	77 1b                	ja     8082301 <ToUpperCase+0x5d>
 80822e6:	8b 45 08             	mov    0x8(%ebp),%eax
 80822e9:	8d 50 01             	lea    0x1(%eax),%edx
 80822ec:	8b 45 08             	mov    0x8(%ebp),%eax
 80822ef:	83 c0 01             	add    $0x1,%eax
 80822f2:	0f b6 00             	movzbl (%eax),%eax
 80822f5:	83 f0 20             	xor    $0x20,%eax
 80822f8:	88 02                	mov    %al,(%edx)
 80822fa:	b8 02 00 00 00       	mov    $0x2,%eax
 80822ff:	eb 19                	jmp    808231a <ToUpperCase+0x76>
 8082301:	8b 45 08             	mov    0x8(%ebp),%eax
 8082304:	8d 50 02             	lea    0x2(%eax),%edx
 8082307:	8b 45 08             	mov    0x8(%ebp),%eax
 808230a:	83 c0 02             	add    $0x2,%eax
 808230d:	0f b6 00             	movzbl (%eax),%eax
 8082310:	83 f0 05             	xor    $0x5,%eax
 8082313:	88 02                	mov    %al,(%edx)
 8082315:	b8 03 00 00 00       	mov    $0x3,%eax
 808231a:	5d                   	pop    %ebp
 808231b:	c3                   	ret    

0808231c <Shift>:
 808231c:	55                   	push   %ebp
 808231d:	89 e5                	mov    %esp,%ebp
 808231f:	83 ec 14             	sub    $0x14,%esp
 8082322:	8b 45 10             	mov    0x10(%ebp),%eax
 8082325:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
 8082329:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
 808232d:	25 ff 7f 00 00       	and    $0x7fff,%eax
 8082332:	89 c2                	mov    %eax,%edx
 8082334:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
 8082338:	25 00 80 00 00       	and    $0x8000,%eax
 808233d:	29 c2                	sub    %eax,%edx
 808233f:	89 d0                	mov    %edx,%eax
 8082341:	05 00 00 00 01       	add    $0x1000000,%eax
 8082346:	89 45 fc             	mov    %eax,-0x4(%ebp)
 8082349:	8b 45 08             	mov    0x8(%ebp),%eax
 808234c:	0f b6 00             	movzbl (%eax),%eax
 808234f:	84 c0                	test   %al,%al
 8082351:	78 23                	js     8082376 <Shift+0x5a>
 8082353:	8b 45 08             	mov    0x8(%ebp),%eax
 8082356:	0f b6 00             	movzbl (%eax),%eax
 8082359:	0f b6 c0             	movzbl %al,%eax
 808235c:	01 45 fc             	add    %eax,-0x4(%ebp)
 808235f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8082362:	83 e0 7f             	and    $0x7f,%eax
 8082365:	89 c2                	mov    %eax,%edx
 8082367:	8b 45 08             	mov    0x8(%ebp),%eax
 808236a:	88 10                	mov    %dl,(%eax)
 808236c:	b8 01 00 00 00       	mov    $0x1,%eax
 8082371:	e9 27 02 00 00       	jmp    808259d <Shift+0x281>
 8082376:	8b 45 08             	mov    0x8(%ebp),%eax
 8082379:	0f b6 00             	movzbl (%eax),%eax
 808237c:	3c bf                	cmp    $0xbf,%al
 808237e:	77 0a                	ja     808238a <Shift+0x6e>
 8082380:	b8 01 00 00 00       	mov    $0x1,%eax
 8082385:	e9 13 02 00 00       	jmp    808259d <Shift+0x281>
 808238a:	8b 45 08             	mov    0x8(%ebp),%eax
 808238d:	0f b6 00             	movzbl (%eax),%eax
 8082390:	3c df                	cmp    $0xdf,%al
 8082392:	77 70                	ja     8082404 <Shift+0xe8>
 8082394:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)
 8082398:	7f 0a                	jg     80823a4 <Shift+0x88>
 808239a:	b8 01 00 00 00       	mov    $0x1,%eax
 808239f:	e9 f9 01 00 00       	jmp    808259d <Shift+0x281>
 80823a4:	8b 45 08             	mov    0x8(%ebp),%eax
 80823a7:	83 c0 01             	add    $0x1,%eax
 80823aa:	0f b6 00             	movzbl (%eax),%eax
 80823ad:	0f b6 c0             	movzbl %al,%eax
 80823b0:	83 e0 3f             	and    $0x3f,%eax
 80823b3:	89 c2                	mov    %eax,%edx
 80823b5:	8b 45 08             	mov    0x8(%ebp),%eax
 80823b8:	0f b6 00             	movzbl (%eax),%eax
 80823bb:	0f b6 c0             	movzbl %al,%eax
 80823be:	83 e0 1f             	and    $0x1f,%eax
 80823c1:	c1 e0 06             	shl    $0x6,%eax
 80823c4:	09 d0                	or     %edx,%eax
 80823c6:	01 45 fc             	add    %eax,-0x4(%ebp)
 80823c9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80823cc:	c1 e8 06             	shr    $0x6,%eax
 80823cf:	83 e0 1f             	and    $0x1f,%eax
 80823d2:	83 c8 c0             	or     $0xffffffc0,%eax
 80823d5:	89 c2                	mov    %eax,%edx
 80823d7:	8b 45 08             	mov    0x8(%ebp),%eax
 80823da:	88 10                	mov    %dl,(%eax)
 80823dc:	8b 45 08             	mov    0x8(%ebp),%eax
 80823df:	8d 50 01             	lea    0x1(%eax),%edx
 80823e2:	8b 45 08             	mov    0x8(%ebp),%eax
 80823e5:	83 c0 01             	add    $0x1,%eax
 80823e8:	0f b6 00             	movzbl (%eax),%eax
 80823eb:	83 e0 c0             	and    $0xffffffc0,%eax
 80823ee:	89 c1                	mov    %eax,%ecx
 80823f0:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80823f3:	83 e0 3f             	and    $0x3f,%eax
 80823f6:	09 c8                	or     %ecx,%eax
 80823f8:	88 02                	mov    %al,(%edx)
 80823fa:	b8 02 00 00 00       	mov    $0x2,%eax
 80823ff:	e9 99 01 00 00       	jmp    808259d <Shift+0x281>
 8082404:	8b 45 08             	mov    0x8(%ebp),%eax
 8082407:	0f b6 00             	movzbl (%eax),%eax
 808240a:	3c ef                	cmp    $0xef,%al
 808240c:	0f 87 a3 00 00 00    	ja     80824b5 <Shift+0x199>
 8082412:	83 7d 0c 02          	cmpl   $0x2,0xc(%ebp)
 8082416:	7f 08                	jg     8082420 <Shift+0x104>
 8082418:	8b 45 0c             	mov    0xc(%ebp),%eax
 808241b:	e9 7d 01 00 00       	jmp    808259d <Shift+0x281>
 8082420:	8b 45 08             	mov    0x8(%ebp),%eax
 8082423:	83 c0 02             	add    $0x2,%eax
 8082426:	0f b6 00             	movzbl (%eax),%eax
 8082429:	0f b6 c0             	movzbl %al,%eax
 808242c:	83 e0 3f             	and    $0x3f,%eax
 808242f:	89 c2                	mov    %eax,%edx
 8082431:	8b 45 08             	mov    0x8(%ebp),%eax
 8082434:	83 c0 01             	add    $0x1,%eax
 8082437:	0f b6 00             	movzbl (%eax),%eax
 808243a:	0f b6 c0             	movzbl %al,%eax
 808243d:	83 e0 3f             	and    $0x3f,%eax
 8082440:	c1 e0 06             	shl    $0x6,%eax
 8082443:	09 c2                	or     %eax,%edx
 8082445:	8b 45 08             	mov    0x8(%ebp),%eax
 8082448:	0f b6 00             	movzbl (%eax),%eax
 808244b:	0f b6 c0             	movzbl %al,%eax
 808244e:	c1 e0 0c             	shl    $0xc,%eax
 8082451:	0f b7 c0             	movzwl %ax,%eax
 8082454:	09 d0                	or     %edx,%eax
 8082456:	01 45 fc             	add    %eax,-0x4(%ebp)
 8082459:	8b 45 fc             	mov    -0x4(%ebp),%eax
 808245c:	c1 e8 0c             	shr    $0xc,%eax
 808245f:	83 e0 0f             	and    $0xf,%eax
 8082462:	83 c8 e0             	or     $0xffffffe0,%eax
 8082465:	89 c2                	mov    %eax,%edx
 8082467:	8b 45 08             	mov    0x8(%ebp),%eax
 808246a:	88 10                	mov    %dl,(%eax)
 808246c:	8b 45 08             	mov    0x8(%ebp),%eax
 808246f:	8d 50 01             	lea    0x1(%eax),%edx
 8082472:	8b 45 08             	mov    0x8(%ebp),%eax
 8082475:	83 c0 01             	add    $0x1,%eax
 8082478:	0f b6 00             	movzbl (%eax),%eax
 808247b:	83 e0 c0             	and    $0xffffffc0,%eax
 808247e:	89 c1                	mov    %eax,%ecx
 8082480:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8082483:	c1 e8 06             	shr    $0x6,%eax
 8082486:	83 e0 3f             	and    $0x3f,%eax
 8082489:	09 c8                	or     %ecx,%eax
 808248b:	88 02                	mov    %al,(%edx)
 808248d:	8b 45 08             	mov    0x8(%ebp),%eax
 8082490:	8d 50 02             	lea    0x2(%eax),%edx
 8082493:	8b 45 08             	mov    0x8(%ebp),%eax
 8082496:	83 c0 02             	add    $0x2,%eax
 8082499:	0f b6 00             	movzbl (%eax),%eax
 808249c:	83 e0 c0             	and    $0xffffffc0,%eax
 808249f:	89 c1                	mov    %eax,%ecx
 80824a1:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80824a4:	83 e0 3f             	and    $0x3f,%eax
 80824a7:	09 c8                	or     %ecx,%eax
 80824a9:	88 02                	mov    %al,(%edx)
 80824ab:	b8 03 00 00 00       	mov    $0x3,%eax
 80824b0:	e9 e8 00 00 00       	jmp    808259d <Shift+0x281>
 80824b5:	8b 45 08             	mov    0x8(%ebp),%eax
 80824b8:	0f b6 00             	movzbl (%eax),%eax
 80824bb:	3c f7                	cmp    $0xf7,%al
 80824bd:	0f 87 d5 00 00 00    	ja     8082598 <Shift+0x27c>
 80824c3:	83 7d 0c 03          	cmpl   $0x3,0xc(%ebp)
 80824c7:	7f 08                	jg     80824d1 <Shift+0x1b5>
 80824c9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80824cc:	e9 cc 00 00 00       	jmp    808259d <Shift+0x281>
 80824d1:	8b 45 08             	mov    0x8(%ebp),%eax
 80824d4:	83 c0 03             	add    $0x3,%eax
 80824d7:	0f b6 00             	movzbl (%eax),%eax
 80824da:	0f b6 c0             	movzbl %al,%eax
 80824dd:	83 e0 3f             	and    $0x3f,%eax
 80824e0:	89 c2                	mov    %eax,%edx
 80824e2:	8b 45 08             	mov    0x8(%ebp),%eax
 80824e5:	83 c0 02             	add    $0x2,%eax
 80824e8:	0f b6 00             	movzbl (%eax),%eax
 80824eb:	0f b6 c0             	movzbl %al,%eax
 80824ee:	83 e0 3f             	and    $0x3f,%eax
 80824f1:	c1 e0 06             	shl    $0x6,%eax
 80824f4:	09 c2                	or     %eax,%edx
 80824f6:	8b 45 08             	mov    0x8(%ebp),%eax
 80824f9:	83 c0 01             	add    $0x1,%eax
 80824fc:	0f b6 00             	movzbl (%eax),%eax
 80824ff:	0f b6 c0             	movzbl %al,%eax
 8082502:	83 e0 3f             	and    $0x3f,%eax
 8082505:	c1 e0 0c             	shl    $0xc,%eax
 8082508:	09 c2                	or     %eax,%edx
 808250a:	8b 45 08             	mov    0x8(%ebp),%eax
 808250d:	0f b6 00             	movzbl (%eax),%eax
 8082510:	0f b6 c0             	movzbl %al,%eax
 8082513:	83 e0 07             	and    $0x7,%eax
 8082516:	c1 e0 12             	shl    $0x12,%eax
 8082519:	09 d0                	or     %edx,%eax
 808251b:	01 45 fc             	add    %eax,-0x4(%ebp)
 808251e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8082521:	c1 e8 12             	shr    $0x12,%eax
 8082524:	83 e0 07             	and    $0x7,%eax
 8082527:	83 c8 f0             	or     $0xfffffff0,%eax
 808252a:	89 c2                	mov    %eax,%edx
 808252c:	8b 45 08             	mov    0x8(%ebp),%eax
 808252f:	88 10                	mov    %dl,(%eax)
 8082531:	8b 45 08             	mov    0x8(%ebp),%eax
 8082534:	8d 50 01             	lea    0x1(%eax),%edx
 8082537:	8b 45 08             	mov    0x8(%ebp),%eax
 808253a:	83 c0 01             	add    $0x1,%eax
 808253d:	0f b6 00             	movzbl (%eax),%eax
 8082540:	83 e0 c0             	and    $0xffffffc0,%eax
 8082543:	89 c1                	mov    %eax,%ecx
 8082545:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8082548:	c1 e8 0c             	shr    $0xc,%eax
 808254b:	83 e0 3f             	and    $0x3f,%eax
 808254e:	09 c8                	or     %ecx,%eax
 8082550:	88 02                	mov    %al,(%edx)
 8082552:	8b 45 08             	mov    0x8(%ebp),%eax
 8082555:	8d 50 02             	lea    0x2(%eax),%edx
 8082558:	8b 45 08             	mov    0x8(%ebp),%eax
 808255b:	83 c0 02             	add    $0x2,%eax
 808255e:	0f b6 00             	movzbl (%eax),%eax
 8082561:	83 e0 c0             	and    $0xffffffc0,%eax
 8082564:	89 c1                	mov    %eax,%ecx
 8082566:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8082569:	c1 e8 06             	shr    $0x6,%eax
 808256c:	83 e0 3f             	and    $0x3f,%eax
 808256f:	09 c8                	or     %ecx,%eax
 8082571:	88 02                	mov    %al,(%edx)
 8082573:	8b 45 08             	mov    0x8(%ebp),%eax
 8082576:	8d 50 03             	lea    0x3(%eax),%edx
 8082579:	8b 45 08             	mov    0x8(%ebp),%eax
 808257c:	83 c0 03             	add    $0x3,%eax
 808257f:	0f b6 00             	movzbl (%eax),%eax
 8082582:	83 e0 c0             	and    $0xffffffc0,%eax
 8082585:	89 c1                	mov    %eax,%ecx
 8082587:	8b 45 fc             	mov    -0x4(%ebp),%eax
 808258a:	83 e0 3f             	and    $0x3f,%eax
 808258d:	09 c8                	or     %ecx,%eax
 808258f:	88 02                	mov    %al,(%edx)
 8082591:	b8 04 00 00 00       	mov    $0x4,%eax
 8082596:	eb 05                	jmp    808259d <Shift+0x281>
 8082598:	b8 01 00 00 00       	mov    $0x1,%eax
 808259d:	c9                   	leave  
 808259e:	c3                   	ret    

0808259f <BrotliTransformDictionaryWord>:
 808259f:	55                   	push   %ebp
 80825a0:	89 e5                	mov    %esp,%ebp
 80825a2:	57                   	push   %edi
 80825a3:	56                   	push   %esi
 80825a4:	83 ec 4c             	sub    $0x4c,%esp
 80825a7:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 80825ae:	8b 45 14             	mov    0x14(%ebp),%eax
 80825b1:	8b 48 04             	mov    0x4(%eax),%ecx
 80825b4:	8b 45 14             	mov    0x14(%ebp),%eax
 80825b7:	8b 70 08             	mov    0x8(%eax),%esi
 80825ba:	8b 45 14             	mov    0x14(%ebp),%eax
 80825bd:	8b 78 10             	mov    0x10(%eax),%edi
 80825c0:	8b 55 18             	mov    0x18(%ebp),%edx
 80825c3:	89 d0                	mov    %edx,%eax
 80825c5:	01 c0                	add    %eax,%eax
 80825c7:	01 d0                	add    %edx,%eax
 80825c9:	01 f8                	add    %edi,%eax
 80825cb:	0f b6 00             	movzbl (%eax),%eax
 80825ce:	0f b6 c0             	movzbl %al,%eax
 80825d1:	01 c0                	add    %eax,%eax
 80825d3:	01 f0                	add    %esi,%eax
 80825d5:	0f b7 00             	movzwl (%eax),%eax
 80825d8:	0f b7 c0             	movzwl %ax,%eax
 80825db:	01 c8                	add    %ecx,%eax
 80825dd:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80825e0:	8b 45 14             	mov    0x14(%ebp),%eax
 80825e3:	8b 48 10             	mov    0x10(%eax),%ecx
 80825e6:	8b 55 18             	mov    0x18(%ebp),%edx
 80825e9:	89 d0                	mov    %edx,%eax
 80825eb:	01 c0                	add    %eax,%eax
 80825ed:	01 d0                	add    %edx,%eax
 80825ef:	83 c0 01             	add    $0x1,%eax
 80825f2:	01 c8                	add    %ecx,%eax
 80825f4:	0f b6 00             	movzbl (%eax),%eax
 80825f7:	88 45 c3             	mov    %al,-0x3d(%ebp)
 80825fa:	8b 45 14             	mov    0x14(%ebp),%eax
 80825fd:	8b 48 04             	mov    0x4(%eax),%ecx
 8082600:	8b 45 14             	mov    0x14(%ebp),%eax
 8082603:	8b 70 08             	mov    0x8(%eax),%esi
 8082606:	8b 45 14             	mov    0x14(%ebp),%eax
 8082609:	8b 78 10             	mov    0x10(%eax),%edi
 808260c:	8b 55 18             	mov    0x18(%ebp),%edx
 808260f:	89 d0                	mov    %edx,%eax
 8082611:	01 c0                	add    %eax,%eax
 8082613:	01 d0                	add    %edx,%eax
 8082615:	83 c0 02             	add    $0x2,%eax
 8082618:	01 f8                	add    %edi,%eax
 808261a:	0f b6 00             	movzbl (%eax),%eax
 808261d:	0f b6 c0             	movzbl %al,%eax
 8082620:	01 c0                	add    %eax,%eax
 8082622:	01 f0                	add    %esi,%eax
 8082624:	0f b7 00             	movzwl (%eax),%eax
 8082627:	0f b7 c0             	movzwl %ax,%eax
 808262a:	01 c8                	add    %ecx,%eax
 808262c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 808262f:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8082632:	8d 50 01             	lea    0x1(%eax),%edx
 8082635:	89 55 cc             	mov    %edx,-0x34(%ebp)
 8082638:	0f b6 00             	movzbl (%eax),%eax
 808263b:	0f b6 c0             	movzbl %al,%eax
 808263e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 8082641:	eb 1f                	jmp    8082662 <BrotliTransformDictionaryWord+0xc3>
 8082643:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8082646:	8d 50 01             	lea    0x1(%eax),%edx
 8082649:	89 55 c8             	mov    %edx,-0x38(%ebp)
 808264c:	89 c2                	mov    %eax,%edx
 808264e:	8b 45 08             	mov    0x8(%ebp),%eax
 8082651:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8082654:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8082657:	8d 50 01             	lea    0x1(%eax),%edx
 808265a:	89 55 cc             	mov    %edx,-0x34(%ebp)
 808265d:	0f b6 00             	movzbl (%eax),%eax
 8082660:	88 01                	mov    %al,(%ecx)
 8082662:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8082665:	8d 50 ff             	lea    -0x1(%eax),%edx
 8082668:	89 55 d4             	mov    %edx,-0x2c(%ebp)
 808266b:	85 c0                	test   %eax,%eax
 808266d:	75 d4                	jne    8082643 <BrotliTransformDictionaryWord+0xa4>
 808266f:	0f b6 45 c3          	movzbl -0x3d(%ebp),%eax
 8082673:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8082676:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 808267d:	83 7d e8 09          	cmpl   $0x9,-0x18(%ebp)
 8082681:	7f 08                	jg     808268b <BrotliTransformDictionaryWord+0xec>
 8082683:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8082686:	29 45 10             	sub    %eax,0x10(%ebp)
 8082689:	eb 23                	jmp    80826ae <BrotliTransformDictionaryWord+0x10f>
 808268b:	83 7d e8 0b          	cmpl   $0xb,-0x18(%ebp)
 808268f:	7e 1d                	jle    80826ae <BrotliTransformDictionaryWord+0x10f>
 8082691:	83 7d e8 14          	cmpl   $0x14,-0x18(%ebp)
 8082695:	7f 17                	jg     80826ae <BrotliTransformDictionaryWord+0x10f>
 8082697:	8b 45 e8             	mov    -0x18(%ebp),%eax
 808269a:	83 e8 0b             	sub    $0xb,%eax
 808269d:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80826a0:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80826a3:	01 45 0c             	add    %eax,0xc(%ebp)
 80826a6:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80826a9:	29 45 10             	sub    %eax,0x10(%ebp)
 80826ac:	eb 28                	jmp    80826d6 <BrotliTransformDictionaryWord+0x137>
 80826ae:	eb 26                	jmp    80826d6 <BrotliTransformDictionaryWord+0x137>
 80826b0:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80826b3:	8d 50 01             	lea    0x1(%eax),%edx
 80826b6:	89 55 c8             	mov    %edx,-0x38(%ebp)
 80826b9:	89 c2                	mov    %eax,%edx
 80826bb:	8b 45 08             	mov    0x8(%ebp),%eax
 80826be:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 80826c1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80826c4:	8d 50 01             	lea    0x1(%eax),%edx
 80826c7:	89 55 d8             	mov    %edx,-0x28(%ebp)
 80826ca:	89 c2                	mov    %eax,%edx
 80826cc:	8b 45 0c             	mov    0xc(%ebp),%eax
 80826cf:	01 d0                	add    %edx,%eax
 80826d1:	0f b6 00             	movzbl (%eax),%eax
 80826d4:	88 01                	mov    %al,(%ecx)
 80826d6:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80826d9:	3b 45 10             	cmp    0x10(%ebp),%eax
 80826dc:	7c d2                	jl     80826b0 <BrotliTransformDictionaryWord+0x111>
 80826de:	83 7d e8 0a          	cmpl   $0xa,-0x18(%ebp)
 80826e2:	75 1e                	jne    8082702 <BrotliTransformDictionaryWord+0x163>
 80826e4:	8b 45 10             	mov    0x10(%ebp),%eax
 80826e7:	8b 55 c8             	mov    -0x38(%ebp),%edx
 80826ea:	29 c2                	sub    %eax,%edx
 80826ec:	89 d0                	mov    %edx,%eax
 80826ee:	89 c2                	mov    %eax,%edx
 80826f0:	8b 45 08             	mov    0x8(%ebp),%eax
 80826f3:	01 d0                	add    %edx,%eax
 80826f5:	89 04 24             	mov    %eax,(%esp)
 80826f8:	e8 a7 fb ff ff       	call   80822a4 <ToUpperCase>
 80826fd:	e9 20 01 00 00       	jmp    8082822 <BrotliTransformDictionaryWord+0x283>
 8082702:	83 7d e8 0b          	cmpl   $0xb,-0x18(%ebp)
 8082706:	75 3b                	jne    8082743 <BrotliTransformDictionaryWord+0x1a4>
 8082708:	8b 45 10             	mov    0x10(%ebp),%eax
 808270b:	8b 55 c8             	mov    -0x38(%ebp),%edx
 808270e:	29 c2                	sub    %eax,%edx
 8082710:	89 d0                	mov    %edx,%eax
 8082712:	89 c2                	mov    %eax,%edx
 8082714:	8b 45 08             	mov    0x8(%ebp),%eax
 8082717:	01 d0                	add    %edx,%eax
 8082719:	89 45 dc             	mov    %eax,-0x24(%ebp)
 808271c:	eb 1a                	jmp    8082738 <BrotliTransformDictionaryWord+0x199>
 808271e:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8082721:	89 04 24             	mov    %eax,(%esp)
 8082724:	e8 7b fb ff ff       	call   80822a4 <ToUpperCase>
 8082729:	89 45 f0             	mov    %eax,-0x10(%ebp)
 808272c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 808272f:	01 45 dc             	add    %eax,-0x24(%ebp)
 8082732:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8082735:	29 45 10             	sub    %eax,0x10(%ebp)
 8082738:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 808273c:	7f e0                	jg     808271e <BrotliTransformDictionaryWord+0x17f>
 808273e:	e9 df 00 00 00       	jmp    8082822 <BrotliTransformDictionaryWord+0x283>
 8082743:	83 7d e8 15          	cmpl   $0x15,-0x18(%ebp)
 8082747:	75 5c                	jne    80827a5 <BrotliTransformDictionaryWord+0x206>
 8082749:	8b 45 14             	mov    0x14(%ebp),%eax
 808274c:	8b 50 14             	mov    0x14(%eax),%edx
 808274f:	8b 45 18             	mov    0x18(%ebp),%eax
 8082752:	01 c0                	add    %eax,%eax
 8082754:	01 d0                	add    %edx,%eax
 8082756:	0f b6 00             	movzbl (%eax),%eax
 8082759:	0f b6 d0             	movzbl %al,%edx
 808275c:	8b 45 14             	mov    0x14(%ebp),%eax
 808275f:	8b 40 14             	mov    0x14(%eax),%eax
 8082762:	8b 4d 18             	mov    0x18(%ebp),%ecx
 8082765:	01 c9                	add    %ecx,%ecx
 8082767:	83 c1 01             	add    $0x1,%ecx
 808276a:	01 c8                	add    %ecx,%eax
 808276c:	0f b6 00             	movzbl (%eax),%eax
 808276f:	0f b6 c0             	movzbl %al,%eax
 8082772:	c1 e0 08             	shl    $0x8,%eax
 8082775:	01 d0                	add    %edx,%eax
 8082777:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)
 808277b:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax
 808277f:	8b 55 10             	mov    0x10(%ebp),%edx
 8082782:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 8082785:	29 d1                	sub    %edx,%ecx
 8082787:	89 ca                	mov    %ecx,%edx
 8082789:	89 d1                	mov    %edx,%ecx
 808278b:	8b 55 08             	mov    0x8(%ebp),%edx
 808278e:	01 ca                	add    %ecx,%edx
 8082790:	89 44 24 08          	mov    %eax,0x8(%esp)
 8082794:	8b 45 10             	mov    0x10(%ebp),%eax
 8082797:	89 44 24 04          	mov    %eax,0x4(%esp)
 808279b:	89 14 24             	mov    %edx,(%esp)
 808279e:	e8 79 fb ff ff       	call   808231c <Shift>
 80827a3:	eb 7d                	jmp    8082822 <BrotliTransformDictionaryWord+0x283>
 80827a5:	83 7d e8 16          	cmpl   $0x16,-0x18(%ebp)
 80827a9:	75 77                	jne    8082822 <BrotliTransformDictionaryWord+0x283>
 80827ab:	8b 45 14             	mov    0x14(%ebp),%eax
 80827ae:	8b 50 14             	mov    0x14(%eax),%edx
 80827b1:	8b 45 18             	mov    0x18(%ebp),%eax
 80827b4:	01 c0                	add    %eax,%eax
 80827b6:	01 d0                	add    %edx,%eax
 80827b8:	0f b6 00             	movzbl (%eax),%eax
 80827bb:	0f b6 d0             	movzbl %al,%edx
 80827be:	8b 45 14             	mov    0x14(%ebp),%eax
 80827c1:	8b 40 14             	mov    0x14(%eax),%eax
 80827c4:	8b 4d 18             	mov    0x18(%ebp),%ecx
 80827c7:	01 c9                	add    %ecx,%ecx
 80827c9:	83 c1 01             	add    $0x1,%ecx
 80827cc:	01 c8                	add    %ecx,%eax
 80827ce:	0f b6 00             	movzbl (%eax),%eax
 80827d1:	0f b6 c0             	movzbl %al,%eax
 80827d4:	c1 e0 08             	shl    $0x8,%eax
 80827d7:	01 d0                	add    %edx,%eax
 80827d9:	66 89 45 c6          	mov    %ax,-0x3a(%ebp)
 80827dd:	8b 45 10             	mov    0x10(%ebp),%eax
 80827e0:	8b 55 c8             	mov    -0x38(%ebp),%edx
 80827e3:	29 c2                	sub    %eax,%edx
 80827e5:	89 d0                	mov    %edx,%eax
 80827e7:	89 c2                	mov    %eax,%edx
 80827e9:	8b 45 08             	mov    0x8(%ebp),%eax
 80827ec:	01 d0                	add    %edx,%eax
 80827ee:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80827f1:	eb 29                	jmp    808281c <BrotliTransformDictionaryWord+0x27d>
 80827f3:	0f b7 45 c6          	movzwl -0x3a(%ebp),%eax
 80827f7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80827fb:	8b 45 10             	mov    0x10(%ebp),%eax
 80827fe:	89 44 24 04          	mov    %eax,0x4(%esp)
 8082802:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8082805:	89 04 24             	mov    %eax,(%esp)
 8082808:	e8 0f fb ff ff       	call   808231c <Shift>
 808280d:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8082810:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8082813:	01 45 e0             	add    %eax,-0x20(%ebp)
 8082816:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8082819:	29 45 10             	sub    %eax,0x10(%ebp)
 808281c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8082820:	7f d1                	jg     80827f3 <BrotliTransformDictionaryWord+0x254>
 8082822:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8082825:	8d 50 01             	lea    0x1(%eax),%edx
 8082828:	89 55 d0             	mov    %edx,-0x30(%ebp)
 808282b:	0f b6 00             	movzbl (%eax),%eax
 808282e:	0f b6 c0             	movzbl %al,%eax
 8082831:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 8082834:	eb 1f                	jmp    8082855 <BrotliTransformDictionaryWord+0x2b6>
 8082836:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8082839:	8d 50 01             	lea    0x1(%eax),%edx
 808283c:	89 55 c8             	mov    %edx,-0x38(%ebp)
 808283f:	89 c2                	mov    %eax,%edx
 8082841:	8b 45 08             	mov    0x8(%ebp),%eax
 8082844:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8082847:	8b 45 d0             	mov    -0x30(%ebp),%eax
 808284a:	8d 50 01             	lea    0x1(%eax),%edx
 808284d:	89 55 d0             	mov    %edx,-0x30(%ebp)
 8082850:	0f b6 00             	movzbl (%eax),%eax
 8082853:	88 01                	mov    %al,(%ecx)
 8082855:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8082858:	8d 50 ff             	lea    -0x1(%eax),%edx
 808285b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
 808285e:	85 c0                	test   %eax,%eax
 8082860:	75 d4                	jne    8082836 <BrotliTransformDictionaryWord+0x297>
 8082862:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8082865:	83 c4 4c             	add    $0x4c,%esp
 8082868:	5e                   	pop    %esi
 8082869:	5f                   	pop    %edi
 808286a:	5d                   	pop    %ebp
 808286b:	c3                   	ret    
 808286c:	66 90                	xchg   %ax,%ax
 808286e:	66 90                	xchg   %ax,%ax

08082870 <__udivdi3>:
 8082870:	55                   	push   %ebp
 8082871:	57                   	push   %edi
 8082872:	56                   	push   %esi
 8082873:	83 ec 0c             	sub    $0xc,%esp
 8082876:	8b 44 24 28          	mov    0x28(%esp),%eax
 808287a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
 808287e:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8082882:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 8082886:	85 c0                	test   %eax,%eax
 8082888:	89 7c 24 04          	mov    %edi,0x4(%esp)
 808288c:	89 ea                	mov    %ebp,%edx
 808288e:	89 0c 24             	mov    %ecx,(%esp)
 8082891:	75 2d                	jne    80828c0 <__udivdi3+0x50>
 8082893:	39 e9                	cmp    %ebp,%ecx
 8082895:	77 61                	ja     80828f8 <__udivdi3+0x88>
 8082897:	85 c9                	test   %ecx,%ecx
 8082899:	89 ce                	mov    %ecx,%esi
 808289b:	75 0b                	jne    80828a8 <__udivdi3+0x38>
 808289d:	b8 01 00 00 00       	mov    $0x1,%eax
 80828a2:	31 d2                	xor    %edx,%edx
 80828a4:	f7 f1                	div    %ecx
 80828a6:	89 c6                	mov    %eax,%esi
 80828a8:	31 d2                	xor    %edx,%edx
 80828aa:	89 e8                	mov    %ebp,%eax
 80828ac:	f7 f6                	div    %esi
 80828ae:	89 c5                	mov    %eax,%ebp
 80828b0:	89 f8                	mov    %edi,%eax
 80828b2:	f7 f6                	div    %esi
 80828b4:	89 ea                	mov    %ebp,%edx
 80828b6:	83 c4 0c             	add    $0xc,%esp
 80828b9:	5e                   	pop    %esi
 80828ba:	5f                   	pop    %edi
 80828bb:	5d                   	pop    %ebp
 80828bc:	c3                   	ret    
 80828bd:	8d 76 00             	lea    0x0(%esi),%esi
 80828c0:	39 e8                	cmp    %ebp,%eax
 80828c2:	77 24                	ja     80828e8 <__udivdi3+0x78>
 80828c4:	0f bd e8             	bsr    %eax,%ebp
 80828c7:	83 f5 1f             	xor    $0x1f,%ebp
 80828ca:	75 3c                	jne    8082908 <__udivdi3+0x98>
 80828cc:	8b 74 24 04          	mov    0x4(%esp),%esi
 80828d0:	39 34 24             	cmp    %esi,(%esp)
 80828d3:	0f 86 9f 00 00 00    	jbe    8082978 <__udivdi3+0x108>
 80828d9:	39 d0                	cmp    %edx,%eax
 80828db:	0f 82 97 00 00 00    	jb     8082978 <__udivdi3+0x108>
 80828e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80828e8:	31 d2                	xor    %edx,%edx
 80828ea:	31 c0                	xor    %eax,%eax
 80828ec:	83 c4 0c             	add    $0xc,%esp
 80828ef:	5e                   	pop    %esi
 80828f0:	5f                   	pop    %edi
 80828f1:	5d                   	pop    %ebp
 80828f2:	c3                   	ret    
 80828f3:	90                   	nop
 80828f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80828f8:	89 f8                	mov    %edi,%eax
 80828fa:	f7 f1                	div    %ecx
 80828fc:	31 d2                	xor    %edx,%edx
 80828fe:	83 c4 0c             	add    $0xc,%esp
 8082901:	5e                   	pop    %esi
 8082902:	5f                   	pop    %edi
 8082903:	5d                   	pop    %ebp
 8082904:	c3                   	ret    
 8082905:	8d 76 00             	lea    0x0(%esi),%esi
 8082908:	89 e9                	mov    %ebp,%ecx
 808290a:	8b 3c 24             	mov    (%esp),%edi
 808290d:	d3 e0                	shl    %cl,%eax
 808290f:	89 c6                	mov    %eax,%esi
 8082911:	b8 20 00 00 00       	mov    $0x20,%eax
 8082916:	29 e8                	sub    %ebp,%eax
 8082918:	89 c1                	mov    %eax,%ecx
 808291a:	d3 ef                	shr    %cl,%edi
 808291c:	89 e9                	mov    %ebp,%ecx
 808291e:	89 7c 24 08          	mov    %edi,0x8(%esp)
 8082922:	8b 3c 24             	mov    (%esp),%edi
 8082925:	09 74 24 08          	or     %esi,0x8(%esp)
 8082929:	89 d6                	mov    %edx,%esi
 808292b:	d3 e7                	shl    %cl,%edi
 808292d:	89 c1                	mov    %eax,%ecx
 808292f:	89 3c 24             	mov    %edi,(%esp)
 8082932:	8b 7c 24 04          	mov    0x4(%esp),%edi
 8082936:	d3 ee                	shr    %cl,%esi
 8082938:	89 e9                	mov    %ebp,%ecx
 808293a:	d3 e2                	shl    %cl,%edx
 808293c:	89 c1                	mov    %eax,%ecx
 808293e:	d3 ef                	shr    %cl,%edi
 8082940:	09 d7                	or     %edx,%edi
 8082942:	89 f2                	mov    %esi,%edx
 8082944:	89 f8                	mov    %edi,%eax
 8082946:	f7 74 24 08          	divl   0x8(%esp)
 808294a:	89 d6                	mov    %edx,%esi
 808294c:	89 c7                	mov    %eax,%edi
 808294e:	f7 24 24             	mull   (%esp)
 8082951:	39 d6                	cmp    %edx,%esi
 8082953:	89 14 24             	mov    %edx,(%esp)
 8082956:	72 30                	jb     8082988 <__udivdi3+0x118>
 8082958:	8b 54 24 04          	mov    0x4(%esp),%edx
 808295c:	89 e9                	mov    %ebp,%ecx
 808295e:	d3 e2                	shl    %cl,%edx
 8082960:	39 c2                	cmp    %eax,%edx
 8082962:	73 05                	jae    8082969 <__udivdi3+0xf9>
 8082964:	3b 34 24             	cmp    (%esp),%esi
 8082967:	74 1f                	je     8082988 <__udivdi3+0x118>
 8082969:	89 f8                	mov    %edi,%eax
 808296b:	31 d2                	xor    %edx,%edx
 808296d:	e9 7a ff ff ff       	jmp    80828ec <__udivdi3+0x7c>
 8082972:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8082978:	31 d2                	xor    %edx,%edx
 808297a:	b8 01 00 00 00       	mov    $0x1,%eax
 808297f:	e9 68 ff ff ff       	jmp    80828ec <__udivdi3+0x7c>
 8082984:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8082988:	8d 47 ff             	lea    -0x1(%edi),%eax
 808298b:	31 d2                	xor    %edx,%edx
 808298d:	83 c4 0c             	add    $0xc,%esp
 8082990:	5e                   	pop    %esi
 8082991:	5f                   	pop    %edi
 8082992:	5d                   	pop    %ebp
 8082993:	c3                   	ret    
 8082994:	66 90                	xchg   %ax,%ax
 8082996:	66 90                	xchg   %ax,%ax
 8082998:	66 90                	xchg   %ax,%ax
 808299a:	66 90                	xchg   %ax,%ax
 808299c:	66 90                	xchg   %ax,%ax
 808299e:	66 90                	xchg   %ax,%ax

080829a0 <__umoddi3>:
 80829a0:	55                   	push   %ebp
 80829a1:	57                   	push   %edi
 80829a2:	56                   	push   %esi
 80829a3:	83 ec 14             	sub    $0x14,%esp
 80829a6:	8b 44 24 28          	mov    0x28(%esp),%eax
 80829aa:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 80829ae:	8b 74 24 2c          	mov    0x2c(%esp),%esi
 80829b2:	89 c7                	mov    %eax,%edi
 80829b4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80829b8:	8b 44 24 30          	mov    0x30(%esp),%eax
 80829bc:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 80829c0:	89 34 24             	mov    %esi,(%esp)
 80829c3:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80829c7:	85 c0                	test   %eax,%eax
 80829c9:	89 c2                	mov    %eax,%edx
 80829cb:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 80829cf:	75 17                	jne    80829e8 <__umoddi3+0x48>
 80829d1:	39 fe                	cmp    %edi,%esi
 80829d3:	76 4b                	jbe    8082a20 <__umoddi3+0x80>
 80829d5:	89 c8                	mov    %ecx,%eax
 80829d7:	89 fa                	mov    %edi,%edx
 80829d9:	f7 f6                	div    %esi
 80829db:	89 d0                	mov    %edx,%eax
 80829dd:	31 d2                	xor    %edx,%edx
 80829df:	83 c4 14             	add    $0x14,%esp
 80829e2:	5e                   	pop    %esi
 80829e3:	5f                   	pop    %edi
 80829e4:	5d                   	pop    %ebp
 80829e5:	c3                   	ret    
 80829e6:	66 90                	xchg   %ax,%ax
 80829e8:	39 f8                	cmp    %edi,%eax
 80829ea:	77 54                	ja     8082a40 <__umoddi3+0xa0>
 80829ec:	0f bd e8             	bsr    %eax,%ebp
 80829ef:	83 f5 1f             	xor    $0x1f,%ebp
 80829f2:	75 5c                	jne    8082a50 <__umoddi3+0xb0>
 80829f4:	8b 7c 24 08          	mov    0x8(%esp),%edi
 80829f8:	39 3c 24             	cmp    %edi,(%esp)
 80829fb:	0f 87 e7 00 00 00    	ja     8082ae8 <__umoddi3+0x148>
 8082a01:	8b 7c 24 04          	mov    0x4(%esp),%edi
 8082a05:	29 f1                	sub    %esi,%ecx
 8082a07:	19 c7                	sbb    %eax,%edi
 8082a09:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8082a0d:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8082a11:	8b 44 24 08          	mov    0x8(%esp),%eax
 8082a15:	8b 54 24 0c          	mov    0xc(%esp),%edx
 8082a19:	83 c4 14             	add    $0x14,%esp
 8082a1c:	5e                   	pop    %esi
 8082a1d:	5f                   	pop    %edi
 8082a1e:	5d                   	pop    %ebp
 8082a1f:	c3                   	ret    
 8082a20:	85 f6                	test   %esi,%esi
 8082a22:	89 f5                	mov    %esi,%ebp
 8082a24:	75 0b                	jne    8082a31 <__umoddi3+0x91>
 8082a26:	b8 01 00 00 00       	mov    $0x1,%eax
 8082a2b:	31 d2                	xor    %edx,%edx
 8082a2d:	f7 f6                	div    %esi
 8082a2f:	89 c5                	mov    %eax,%ebp
 8082a31:	8b 44 24 04          	mov    0x4(%esp),%eax
 8082a35:	31 d2                	xor    %edx,%edx
 8082a37:	f7 f5                	div    %ebp
 8082a39:	89 c8                	mov    %ecx,%eax
 8082a3b:	f7 f5                	div    %ebp
 8082a3d:	eb 9c                	jmp    80829db <__umoddi3+0x3b>
 8082a3f:	90                   	nop
 8082a40:	89 c8                	mov    %ecx,%eax
 8082a42:	89 fa                	mov    %edi,%edx
 8082a44:	83 c4 14             	add    $0x14,%esp
 8082a47:	5e                   	pop    %esi
 8082a48:	5f                   	pop    %edi
 8082a49:	5d                   	pop    %ebp
 8082a4a:	c3                   	ret    
 8082a4b:	90                   	nop
 8082a4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8082a50:	8b 04 24             	mov    (%esp),%eax
 8082a53:	be 20 00 00 00       	mov    $0x20,%esi
 8082a58:	89 e9                	mov    %ebp,%ecx
 8082a5a:	29 ee                	sub    %ebp,%esi
 8082a5c:	d3 e2                	shl    %cl,%edx
 8082a5e:	89 f1                	mov    %esi,%ecx
 8082a60:	d3 e8                	shr    %cl,%eax
 8082a62:	89 e9                	mov    %ebp,%ecx
 8082a64:	89 44 24 04          	mov    %eax,0x4(%esp)
 8082a68:	8b 04 24             	mov    (%esp),%eax
 8082a6b:	09 54 24 04          	or     %edx,0x4(%esp)
 8082a6f:	89 fa                	mov    %edi,%edx
 8082a71:	d3 e0                	shl    %cl,%eax
 8082a73:	89 f1                	mov    %esi,%ecx
 8082a75:	89 44 24 08          	mov    %eax,0x8(%esp)
 8082a79:	8b 44 24 10          	mov    0x10(%esp),%eax
 8082a7d:	d3 ea                	shr    %cl,%edx
 8082a7f:	89 e9                	mov    %ebp,%ecx
 8082a81:	d3 e7                	shl    %cl,%edi
 8082a83:	89 f1                	mov    %esi,%ecx
 8082a85:	d3 e8                	shr    %cl,%eax
 8082a87:	89 e9                	mov    %ebp,%ecx
 8082a89:	09 f8                	or     %edi,%eax
 8082a8b:	8b 7c 24 10          	mov    0x10(%esp),%edi
 8082a8f:	f7 74 24 04          	divl   0x4(%esp)
 8082a93:	d3 e7                	shl    %cl,%edi
 8082a95:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8082a99:	89 d7                	mov    %edx,%edi
 8082a9b:	f7 64 24 08          	mull   0x8(%esp)
 8082a9f:	39 d7                	cmp    %edx,%edi
 8082aa1:	89 c1                	mov    %eax,%ecx
 8082aa3:	89 14 24             	mov    %edx,(%esp)
 8082aa6:	72 2c                	jb     8082ad4 <__umoddi3+0x134>
 8082aa8:	39 44 24 0c          	cmp    %eax,0xc(%esp)
 8082aac:	72 22                	jb     8082ad0 <__umoddi3+0x130>
 8082aae:	8b 44 24 0c          	mov    0xc(%esp),%eax
 8082ab2:	29 c8                	sub    %ecx,%eax
 8082ab4:	19 d7                	sbb    %edx,%edi
 8082ab6:	89 e9                	mov    %ebp,%ecx
 8082ab8:	89 fa                	mov    %edi,%edx
 8082aba:	d3 e8                	shr    %cl,%eax
 8082abc:	89 f1                	mov    %esi,%ecx
 8082abe:	d3 e2                	shl    %cl,%edx
 8082ac0:	89 e9                	mov    %ebp,%ecx
 8082ac2:	d3 ef                	shr    %cl,%edi
 8082ac4:	09 d0                	or     %edx,%eax
 8082ac6:	89 fa                	mov    %edi,%edx
 8082ac8:	83 c4 14             	add    $0x14,%esp
 8082acb:	5e                   	pop    %esi
 8082acc:	5f                   	pop    %edi
 8082acd:	5d                   	pop    %ebp
 8082ace:	c3                   	ret    
 8082acf:	90                   	nop
 8082ad0:	39 d7                	cmp    %edx,%edi
 8082ad2:	75 da                	jne    8082aae <__umoddi3+0x10e>
 8082ad4:	8b 14 24             	mov    (%esp),%edx
 8082ad7:	89 c1                	mov    %eax,%ecx
 8082ad9:	2b 4c 24 08          	sub    0x8(%esp),%ecx
 8082add:	1b 54 24 04          	sbb    0x4(%esp),%edx
 8082ae1:	eb cb                	jmp    8082aae <__umoddi3+0x10e>
 8082ae3:	90                   	nop
 8082ae4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8082ae8:	3b 44 24 0c          	cmp    0xc(%esp),%eax
 8082aec:	0f 82 0f ff ff ff    	jb     8082a01 <__umoddi3+0x61>
 8082af2:	e9 1a ff ff ff       	jmp    8082a11 <__umoddi3+0x71>
 8082af7:	66 90                	xchg   %ax,%ax
 8082af9:	66 90                	xchg   %ax,%ax
 8082afb:	66 90                	xchg   %ax,%ax
 8082afd:	66 90                	xchg   %ax,%ax
 8082aff:	90                   	nop

08082b00 <__libc_csu_init>:
 8082b00:	55                   	push   %ebp
 8082b01:	57                   	push   %edi
 8082b02:	31 ff                	xor    %edi,%edi
 8082b04:	56                   	push   %esi
 8082b05:	53                   	push   %ebx
 8082b06:	e8 e5 6f fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8082b0b:	81 c3 f5 d4 02 00    	add    $0x2d4f5,%ebx
 8082b11:	83 ec 1c             	sub    $0x1c,%esp
 8082b14:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8082b18:	8d b3 90 fe ff ff    	lea    -0x170(%ebx),%esi
 8082b1e:	e8 25 6b fc ff       	call   8049648 <_init>
 8082b23:	8d 83 74 fe ff ff    	lea    -0x18c(%ebx),%eax
 8082b29:	29 c6                	sub    %eax,%esi
 8082b2b:	c1 fe 02             	sar    $0x2,%esi
 8082b2e:	85 f6                	test   %esi,%esi
 8082b30:	74 27                	je     8082b59 <__libc_csu_init+0x59>
 8082b32:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8082b38:	8b 44 24 38          	mov    0x38(%esp),%eax
 8082b3c:	89 2c 24             	mov    %ebp,(%esp)
 8082b3f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8082b43:	8b 44 24 34          	mov    0x34(%esp),%eax
 8082b47:	89 44 24 04          	mov    %eax,0x4(%esp)
 8082b4b:	ff 94 bb 74 fe ff ff 	call   *-0x18c(%ebx,%edi,4)
 8082b52:	83 c7 01             	add    $0x1,%edi
 8082b55:	39 f7                	cmp    %esi,%edi
 8082b57:	75 df                	jne    8082b38 <__libc_csu_init+0x38>
 8082b59:	83 c4 1c             	add    $0x1c,%esp
 8082b5c:	5b                   	pop    %ebx
 8082b5d:	5e                   	pop    %esi
 8082b5e:	5f                   	pop    %edi
 8082b5f:	5d                   	pop    %ebp
 8082b60:	c3                   	ret    
 8082b61:	eb 0d                	jmp    8082b70 <__libc_csu_fini>
 8082b63:	90                   	nop
 8082b64:	90                   	nop
 8082b65:	90                   	nop
 8082b66:	90                   	nop
 8082b67:	90                   	nop
 8082b68:	90                   	nop
 8082b69:	90                   	nop
 8082b6a:	90                   	nop
 8082b6b:	90                   	nop
 8082b6c:	90                   	nop
 8082b6d:	90                   	nop
 8082b6e:	90                   	nop
 8082b6f:	90                   	nop

08082b70 <__libc_csu_fini>:
 8082b70:	f3 c3                	repz ret 
 8082b72:	66 90                	xchg   %ax,%ax
 8082b74:	66 90                	xchg   %ax,%ax
 8082b76:	66 90                	xchg   %ax,%ax
 8082b78:	66 90                	xchg   %ax,%ax
 8082b7a:	66 90                	xchg   %ax,%ax
 8082b7c:	66 90                	xchg   %ax,%ax
 8082b7e:	66 90                	xchg   %ax,%ax

08082b80 <atexit>:
 8082b80:	53                   	push   %ebx
 8082b81:	e8 6a 6f fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8082b86:	81 c3 7a d4 02 00    	add    $0x2d47a,%ebx
 8082b8c:	83 ec 18             	sub    $0x18,%esp
 8082b8f:	8d 83 e4 00 00 00    	lea    0xe4(%ebx),%eax
 8082b95:	85 c0                	test   %eax,%eax
 8082b97:	74 1f                	je     8082bb8 <atexit+0x38>
 8082b99:	8b 00                	mov    (%eax),%eax
 8082b9b:	89 44 24 08          	mov    %eax,0x8(%esp)
 8082b9f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8082ba3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8082baa:	00 
 8082bab:	89 04 24             	mov    %eax,(%esp)
 8082bae:	e8 1d 6c fc ff       	call   80497d0 <__cxa_atexit@plt>
 8082bb3:	83 c4 18             	add    $0x18,%esp
 8082bb6:	5b                   	pop    %ebx
 8082bb7:	c3                   	ret    
 8082bb8:	31 c0                	xor    %eax,%eax
 8082bba:	eb df                	jmp    8082b9b <atexit+0x1b>
 8082bbc:	66 90                	xchg   %ax,%ax
 8082bbe:	66 90                	xchg   %ax,%ax

08082bc0 <__stack_chk_fail_local>:
 8082bc0:	53                   	push   %ebx
 8082bc1:	e8 2a 6f fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8082bc6:	81 c3 3a d4 02 00    	add    $0x2d43a,%ebx
 8082bcc:	83 ec 08             	sub    $0x8,%esp
 8082bcf:	e8 5c 6b fc ff       	call   8049730 <__stack_chk_fail@plt>

Disassembly of section .fini:

08082bd4 <_fini>:
 8082bd4:	53                   	push   %ebx
 8082bd5:	83 ec 08             	sub    $0x8,%esp
 8082bd8:	e8 13 6f fc ff       	call   8049af0 <__x86.get_pc_thunk.bx>
 8082bdd:	81 c3 23 d4 02 00    	add    $0x2d423,%ebx
 8082be3:	83 c4 08             	add    $0x8,%esp
 8082be6:	5b                   	pop    %ebx
 8082be7:	c3                   	ret    
